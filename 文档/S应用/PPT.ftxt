### 节点
地址, 的, PPT, 目录, 的, 的, 测试, P函数, 的, 参考, 的, 增加图形, P函数, 的, 网页画板, 的, 动词, 动词库, 的, 输出PPT, 的, 初始化, P函数, 的, 测试地址, 的, 物体转换, S动词, 的, 库, 的, 矩形, 的, 圆形, 的, 直线, 输出PPT, 的, FOPA设计, 的, 输出, P函数, 的, 测试代码, 的, 节点数目统计, 20210525, 的, 的, 顺序问题, 圆形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, HTML, 的, 选中区域, 的, 的, 输入, 的, 的, 输出, 类型, 画图, 的, 的, 的, 的, 图形, 选中框, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 线粗细, 线型, 线颜色, 面颜色, 角度, 半径, 中心, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 起点, 尺寸, 圆形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, HTML, 的, 选中区域, 的, 的, 输入, 的, 的, 输出, 类型, 画图, 的, 的, 的, 的, 图形, 选中框, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 线粗细, 线型, 线颜色, 面颜色, 角度, 半径, 中心, 的, 调换顺序, 20210526, 的, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线粗细, 线型, 的, 光线, 的, 画图代码, P函数, 的, 光栅, 的, 画图代码, P函数, 的, 凹面镜, 的, 画图代码, P函数, 的, 几何画板, 的, 函数曲线, 的, 画图代码, P函数, 20210602, 的, 20210604, 的, 的, iris, 的, 画图代码, P函数, 20210818, 的, 的, 样本库, 20210819, 的, 相对, 的, 设置位置, 的, 的, 模板, 的, 光路结构, 20210831, 的, 场景测试, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 曲线, y, x, 的, 的, 方向, 朝着, 空间点, 正弦曲线, 在, 的, 的, 的, 空间点, 空间点, 箭头, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 尺寸, 的, 空间点, 在, 尺寸, 的, 空间点, 在, 右边, 矩形2, 矩形1, 的, 位置, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 名词, 的, 显示PPT场景, 的, 库, 的, 显示文字, 的, 显示矩形, 的, 显示图形, 的, 显示直线, 的, 位置, 的, 对齐X, 的, 对齐Y, 的, 空图形, M函数, 的, 曲线, M函数, 的, 多边形, M函数, 的, 二维网络, M函数, 的, 复杂结构, 的, 的, 目标代码, 的, PPT场景转P代码, 的, 库, 的, 文本框, 的, P代码, 的, 代码模板, 的, 直线, 的, 图形, 的, 直线代码, 的, 图形代码, 的, PPT场景输出, 的, 定义函数, P函数, 的, 输出, P函数, 20210902, 的, 的, 旋转, 的, M代码, 20210904, 的, 的, 绘制光路图, 20210906, 的, 的, 三维场景, 的, 球体网络, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 样式, y, 的, x, 的, 方向, 朝向, 空间点, 球体, 在, 的, 二维网络代码, 20210908, 的, 的, 测试文本框, 的, 参考, 的, text_frame, 的, 矩形加文本, P函数, 的, 设置文本框, P函数, 的, 文本框, M函数, 的, 图片, M函数, 的, 矩形, M函数, 的, 测试文本框, 的, 星图, 的, 的, 的, 的, 的, 空间点, 在, 尺寸, 矩形A, 的, 的, 的, 的, 的, 的, 的, 的, 内容, 的, 空间点, 在, 尺寸, 矩形B, 的, 的, 的, 的, 的, 的, 的, 的, 的, 样式, 内容, 的, 空间点, 在, 尺寸, 文本框, 的, 的, 参考1, 的, 参考2, 20210909, 的, 的, 测试, 的, 3D图片, 的, 2D图片, 的, 的, 的, 的, 的, 的, 的, 的, 样式, 图片地址, 的, 空间点, 在, 尺寸, 图片, 的, 的, 参考, 20210912, 的, 的, 更新图形_del, 的, 库, 的, 矩形, 方向, 的, 20210913, 的, 20210914, 的, 20210915, 的, 20210917, 的, 的, 描述, 的, 库, 的, 对齐X_1, 的, 输出模板, 的, 匹配模板, 20210918, 的, 的, 设置图形, 的, 匹配模板, 的, 转述, 的, P代码, 的, 相距, 的, 匹配模板, 的, 输出模板, 的, 更新图形, 的, 输出模板, 的, 匹配模板, 的, 直线, 的, 匹配模板, 的, 输出模板, 的, M代码, 的, 朝向, 的, 朝向, 的, 匹配模板, 的, 转述, 的, P代码, 的, 设置矩形, 的, 匹配模板, 的, 输出模板, 的, 创建四边形, 的, 匹配模板, 的, 输出模板, 的, 设置位置, 的, 匹配模板, 的, 输出模板, 的, 设置显示区域, 的, 输出模板, 的, 匹配模板, 的, 设置位置3, 的, 匹配模板, 的, 输出模板, 20210919, 的, 20210921, 的, 20210922, 的, 20210923, 的, 20210926, 的, 20210928, 的, 20210929, 的, 20210930, 的, 的, 显示图形名称, 的, M代码, M函数, 20211002, 的, 20211008, 的, 20211010, 的, 20211012, 的, 20211020, 的, 20211021, 的, 20211022, 的, 的, 倍率, 的, M代码, M函数, 的, 设置界面, 20211023, 的, 20211024, 的, 的, 测试, 的, 显示PPT图形, 20211025, 的, 20211026, 的, 20211027, 的, 20211029, 的, 的, 相距2, 的, 匹配模板, 的, 输出模板, 的, 对齐, 的, 匹配模板, 的, 输出模板, 20211030, 的, 20211102, 的, 的, 示例, 的, 输出PPT, 20211103, 的, 的, 查询位置, 的, 匹配模板, 的, 输出模板, 的, 查询物体, 的, 匹配模板, 的, 输出模板, 20211106, 的, 的, 查询距离, 的, 匹配模板, 的, 输出模板, 20211109, 的, 20211111, 的, 20211112, 的, 的, 平移, 的, 匹配模板, 的, 输出模板, 20211114, 的, 20211116, 的, 20211122, 的, 20211126, 的, 20211127, 的, 20211205, 的, 的, 设置图形2, 的, 匹配模板, 的, 输出模板, 的, 设置图形3, 的, 匹配模板, 的, 输出模板, 的, 设置图形5, 的, 设置n边形, 的, M代码, M函数, 20211207, 的, 20211209, 的, 20211210, 的, 的, 设置多边形, 的, 匹配模板, 的, 输出模板, 20211211, 的, 20211213, 的, 的, 更新图形2, 的, 匹配模板, 的, 转述, 的, P代码, M代码, 的, 折线, 的, 的, 更新图形4, 的, 匹配模板, 的, 输出模板, 的, 朝向2, 的, 转述, 的, P代码, 的, 匹配模板, 的, 画折线, 的, M代码, M函数, M代码, 的, 圆形, 的, 的, 画折线, 的, 匹配模板, 的, 输出模板, 20211215, 的, 的, 保存代码, 20211216, 的, 设置图形6, 的, 的, 匹配模板, 的, 输出模板, M代码, 的, 镜子, 的, 输出模板, 匹配模板, 的, 的, 复制图形, 的, 20211220, 的, 设置图形4, 的, 的, 匹配模板, 的, 输出模板, 20211229, 的, 20211231, 的, 匹配模板, 输出模板, 的, 的, 更新图形3, 的, 20220110, 的, 20220119, 的, P代码, 的, 转述, 匹配模板, 的, 的, 增加物体, 的, 20220120, 的, 的, Shape, 打开网页, 的, textColor, 的, 设置字体颜色, 打开网页, 20220121, 的, 的, 记忆, 的, 的, 输出PPT, 的, 20220122, 的, 20220123, 的, 的, 的, 句子库, 的, 的, 移动, 的, 匹配模板, 的, 输出模板, 输出模板, 匹配模板, 的, 的, 设置位置2, 的, 20220213, 的, 20220223, 的, 20220224, 的, 20220226, 的, 的, 保存, 的, 显示PPT图形, 20220309, 的, 的, 匹配模板, 的, 输出模板, 20220314, 的, 20220316, 的, 20220401, 的, 输出模板, 匹配模板, 的, 的, 显示PPT场景, 的, 20220416, 的, 20220501, 的, 20220528, 的, 的, 保存, 20220625, 的, 20220629, 的, 20220804, 的, 20220901, 的, 20220917, 的, 的, M代码, 20220927, 的, 20221025, 的, 20221029, 的, 的, 图形曲线, 的, daima , 的, M代码, 的, M代码2, 的, 保存, 的, 描述结构, 的, 集合体, 的, 描述结构, 矩形代码, P代码, 的, 的, 矩形, 的, 的, 合并图形, 手, A, 的, B, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, y, 的, x, 的, 空间点, 在, 半径, 的, 类型, 的, C, 的, 的, 图形_交, 的, M代码, 的, 保存, 的, 的, x, 的, 新建主语, 的, 的, y, 的, 新建主语, 方向, 朝向, M代码, 的, 图形_剪切, 的, D, 的, y, 的, x, 的, M代码, 的, 合并图形, 的, 的, 图形剪切, 月球, 的, 地球, 的, 月亮, 的, y, 的, x, 的, 空间点, 在, 半径, 的, 类型, 的, y, 的, x, 的, 空间点, 在, 半径, 的, 类型, 的, y, 的, x, 的, 的, 保存, 的, 描述结构, 的, 保存, M代码, 的, 显示点, 的, 
### 关联
#, 2#0, #, #, 3#2, 2#6, #, 6#, 2#9, #, 2#11, #, 11#, 2#14, #, 2#16, #, 16#, 16#19, #, 19#21, #, 21#, 2#24, #, 19#26, #, 26#, 26#29, #, 29#31, #, 29#33, #, 29#35, #, 6#, 2#38, #, 19#40, #, 40#, 35#43, #, 3#45, #, #, 45#46, 2#49, #, #, 49#50, 50#63, 50#89, 50#90, 50#91, 50#92, 50#65, 50#93, 50#72, 50#73, 50#94, 50#95, #, 63#81, #, 65#68, 65#71, #, 68#94, 68#95, #, #, #, 73#78, 73#79, 73#80, 73#81, #, #, #, #, 81#89, 81#90, 81#91, 81#92, 81#93, 81#94, 81#95, #, #, #, #, #, #, #, #, 49#96, 96#110, 96#118, 96#140, 96#119, 96#136, 96#137, 96#138, 96#139, 96#141, 96#123, 96#142, 96#143, #, 110#127, 110#115, 110#116, 110#117, #, #, #, #, #, 119#122, 119#127, #, #, 123#126, 123#127, #, #, 127#136, 127#137, 127#138, 127#139, 127#140, 127#141, 127#143, 127#142, #, #, #, #, #, #, #, #, #, 49#144, 144#157, 144#183, 144#184, 144#185, 144#186, 144#159, 144#187, 144#166, 144#167, 144#188, 144#189, #, 157#175, #, 159#162, 159#165, #, 162#188, 162#189, #, #, #, 167#172, 167#173, 167#174, 167#175, #, #, #, #, 175#183, 175#184, 175#185, 175#186, 175#187, 175#188, 175#189, #, #, #, #, #, #, #, 16#191, #, #, 45#192, #, 49#194, 194#233, 194#234, 194#205, 194#213, 194#214, 194#235, 194#236, 194#225, 194#237, #, 205#227, 205#210, 205#211, 205#212, #, #, #, #, #, 214#218, 214#221, 214#222, #, 218#233, 218#234, #, #, 222#224, #, #, 225#227, #, 227#233, 227#234, 227#235, 227#237, 227#236, #, #, #, #, #, 29#239, #, 239#241, #, 241#, 29#244, #, 244#246, #, 246#, 29#249, #, 249#251, #, 251#, 2#254, #, 29#256, #, 256#258, #, 258#, #, 45#260, #, 45#262, 29#265, #, 265#267, #, 267#, #, 45#269, 2#272, #, #, 45#273, #, 16#275, #, 16#277, 2#280, #, 280#282, #, #, 45#283, #, 285#296, 285#297, 285#298, 285#299, 285#300, 285#301, 285#302, 285#303, 285#304, 285#305, 304#, #, #, 304#297, 304#298, #, 304#301, #, #, 304#303, 285#309, 285#310, 285#311, #, #, 310#309, 285#323, 285#324, 285#325, 285#326, 285#327, 285#328, 285#329, 285#330, 285#331, 285#332, 285#333, #, 332#323, #, 332#325, #, 333#327, #, 333#329, 333#332, #, #, 285#335, #, 285#341, 285#342, 285#343, 285#344, 285#345, 335#303, 335#309, 335#310, 335#325, 335#329, 2#347, #, 16#349, #, 349#351, #, 351#353, #, 351#355, #, 351#357, #, 351#359, #, 347#361, #, 16#363, #, 16#365, #, 357#367, #, 367#, 357#370, #, 370#, 357#373, #, 373#, 357#376, #, 376#, 2#379, #, 379#285, 379#382, #, 16#384, #, 384#386, #, 386#388, #, 388#390, #, 388#392, #, 386#394, #, 386#396, #, 394#398, #, 396#400, #, 16#402, #, 402#404, #, 404#, 402#407, #, 407#, #, 45#409, 16#412, #, 412#414, #, #, 45#415, 2#418, #, #, 45#419, 2#422, #, 285#424, #, 285#435, 285#436, 285#437, 285#438, 285#439, 285#440, 285#441, 285#442, 285#443, 285#444, 443#, #, 443#436, #, 443#438, #, 443#440, #, #, 443#442, 396#446, #, #, 45#447, 2#450, #, 450#452, #, 450#454, #, 450#456, #, 456#, 450#459, #, 459#, 355#462, #, 462#, 355#465, #, 465#, 355#468, #, 468#, 379#471, #, 2#473, #, 471#479, 471#480, 471#481, 471#482, 471#483, #, 482#479, #, #, 482#481, 471#491, 471#492, 471#493, 471#494, 471#495, 471#496, 471#497, #, 496#491, #, 496#493, #, #, 496#495, 471#506, 471#507, 471#508, 471#509, 471#510, 471#511, 471#512, 471#513, 512#, #, 512#507, #, 512#509, #, #, 512#511, 462#515, #, 462#517, #, #, 45#518, 465#521, #, 465#523, #, 465#525, #, 471#534, 471#535, 471#536, 471#537, 471#538, 471#539, 471#540, 471#541, 540#, #, 540#535, #, 540#537, #, #, 540#539, 459#543, #, #, 45#544, 16#547, #, 547#549, #, 549#551, #, #, 347#552, #, 45#554, #, 45#556, #, 45#558, #, 45#560, 16#563, #, 563#565, #, 565#567, #, 567#569, #, 567#571, #, #, 45#572, 565#575, #, 575#577, #, 575#579, #, 579#581, #, 565#583, #, 583#585, #, 583#587, #, 565#589, #, 589#591, #, 589#593, #, 565#595, #, 595#597, #, 595#599, #, 551#601, #, 16#603, #, 565#605, #, 605#607, #, 605#609, #, 609#611, #, 565#613, #, 613#615, #, 613#617, #, 565#619, #, 619#621, #, 619#623, #, 565#625, #, 625#627, #, 625#629, #, 565#631, #, 631#633, #, 631#635, #, 565#637, #, 637#639, #, 637#641, #, #, 45#642, #, 45#644, #, 45#646, #, 45#648, #, 45#650, #, 45#652, #, 45#654, #, 45#656, 16#659, #, 659#661, #, 661#, #, 45#663, #, 45#665, #, 45#667, #, 45#669, #, 45#671, #, 45#673, #, 45#675, 347#678, #, 678#680, #, 680#, 384#683, #, #, 45#684, #, 45#686, 683#689, #, 16#691, #, #, 45#692, #, 45#694, #, 45#696, #, 45#698, 565#701, #, 701#703, #, 701#705, #, 565#707, #, 707#709, #, 707#711, #, #, 45#712, #, 45#714, 2#717, #, 717#719, #, #, 45#720, 565#723, #, 723#725, #, 723#727, #, 565#729, #, 729#731, #, 729#733, #, #, 45#734, 565#737, #, 737#739, #, 737#741, #, #, 45#742, #, 45#744, #, 45#746, 565#749, #, 749#751, #, 749#753, #, #, 45#754, #, 45#756, #, 45#758, #, 45#760, #, 45#762, #, 45#764, 565#767, #, 767#769, #, 767#771, #, 565#773, #, 773#775, #, 773#777, #, 565#779, #, 16#781, #, 781#783, #, 783#, #, 45#785, #, 45#787, #, 45#789, 565#792, #, 792#794, #, 792#796, #, #, 45#797, #, 45#799, 565#802, #, 802#804, #, 802#806, #, 806#808, #, #, 811#809, #, 549#811, 565#814, #, 814#816, #, 814#818, #, 565#820, #, 820#822, #, 822#824, #, 820#826, #, 16#828, #, 828#830, #, 830#, #, 834#832, #, 549#834, 565#837, #, 837#839, #, 837#841, #, #, 45#842, 402#845, #, #, 45#846, #, 565#848, 779#851, #, 779#853, #, #, 856#854, #, 549#856, #, #, 862#858, 862#859, #, 565#862, #, 45#864, #, 565#866, 848#869, #, 848#871, #, #, 45#872, #, 45#874, #, #, 880#876, 880#877, #, 565#880, #, 45#882, #, 45#884, #, 888#886, #, #, 892#888, 892#889, #, 565#892, #, 45#894, 404#897, #, #897, 404#900, #, 404#902, #, #900, #, 45#904, 717#907, 3#, 717#910, 717#911, #719, 907#910, #, 45#912, #, 45#914, 563#918, 563#919, #565, 907#918, 565#921, #, 921#923, #, 921#925, #, #, #, 930#926, 930#927, #, 565#930, #, 45#932, #, 45#934, #, 45#936, #, 45#938, 355#941, #, 565#943, #, #, 45#944, 943#947, #, 943#949, #, #, 45#950, #, 45#952, #, 45#954, #, #, 960#956, 960#957, #, 565#960, #, 45#962, #, 45#964, #, 45#966, 412#969, #, #, 45#970, #, 45#972, #, 45#974, #, 45#976, #, 45#978, 353#981, #, #, 45#982, #, 45#984, #, 45#986, 16#989, #, 989#991, #, 989#993, #, 989#995, #, 384#997, #, 384#999, #, 386#1001, #, 1001#1003, #, #, #, 1008#1004, 1008#1005, #, 386#1008, 717#1011, #, #1075, #, 1011#1013, #, 1011#1015, #, 1013#1017, #, 1013#1019, #, 1013#1021, #, 1013#1023, #, 1013#1025, 1013#, #, 1013#1028, #, 1015#1030, #, 1015#1032, #, 1015#1034, #, 1015#1036, #, 1015#1038, #, 1011#1040, 16#1043, #, 1043#1045, #, 989#1047, #, 1011#1049, 1040#1050, #, 1011#1050, 1011#, 1011#1054, 1040#1055, #, 1011#1055, 1011#, #, 1013#1058, #, 1062#1060, #, 16#1062, #, 1011#1064, #, 1064#1066, #, 1064#1068, #, 1072#1070, #, 16#1072, 717#1075, #, #, 1075#1076, #, 1075#1078, #, 1075#1080, #, 1076#1082, #, 1076#1084, #, 1076#1086, #, 1076#1088, #, 1076#1090, #, 1078#1092, #, 1078#1094, #, 1078#1096, #, 1078#1098, #, 1078#1100, #, 1080#1102, #, 1080#1104, 465#1107, #, 349#1109, #, 349#1111, #, #, 1114#1112, #, 351#1114, 
### 内容
#0, 15:
文档\S应用\PPT.ftxt
## end
#2, 751:
+[返回目录](,PPT)
地址::文档\S应用\PPT.ftxt
参考::https://python-pptx.readthedocs.io/en/latest/user/quickstart.html
+[打开网页](,参考)

动词(动词库):...
+[设置动词](,动词)
名词:...
+[设置名词](,名词)
+[新建阅读窗口](,动词)

Nini, 导入图形库的库. Nini, 导入平面测绘的库
Nini, 打开平面测绘(库)

Nini, 打开合并多边形(文件)

网页画板::文档\S应用\网页画板.ftxt
+[打开文件](+新窗口,网页画板)
几何画板::文档\S应用\几何样本库.ftxt
+[打开文件](+新窗口,几何画板)
样本库::文档\S应用\画图样本库.ftxt
+[打开文件](+新窗口,样本库)
绘制光路图::文档\S应用\绘制光路图.ftxt
+[打开文件](+新窗口,绘制光路图)
三维场景::文档\S应用\三维建模.ftxt
+[打开文件](+新窗口,三维场景)
星图::文档\S应用\星图.txt
+[打开文件](+新窗口,星图)


模板:...
复杂结构:...
示例:...
+[新建阅读窗口](,示例)

测试(P函数):...
增加图形(P函数):...
测试文本框:...
顺序问题:...
+[画板](+新画板,顺序问题)
测试地址::文档\输出\20210526\test2.pptx
+[输出PPT](顺序问题,测试地址)



Nini, 打开第一级放大光路(文件)
+[输出PPT]"test3.pptx"(测试,)
FOPA设计::文档\设计文档\FOPA设计_光路设计1.ftxt
+[打开文件](+新窗口,FOPA设计)
## end
#3, 47:
PPT:...
创建于 20210524

节点数目统计::
+[设置结构](,节点数目统计)
## end
#6, 319:
"""
+[P函数](,测试)

"""

from pptx import Presentation

prs = Presentation()
title_slide_layout = prs.slide_layouts[0]
slide = prs.slides.add_slide(title_slide_layout)
title = slide.shapes.title
subtitle = slide.placeholders[1]

title.text = "Hello, World!"
subtitle.text = "python-pptx was here!"

prs.save('test.pptx')


## end
#9, 65:
https://python-pptx.readthedocs.io/en/latest/user/quickstart.html
## end
#11, 1489:
"""
+[返回目录](,增加图形)
+[P函数](,增加图形)

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(13.333)

title_slide_layout = prs.slide_layouts[0]
slide = prs.slides.add_slide(title_slide_layout)

# 矩形
shape1=slide.shapes.add_shape(MSO_SHAPE.RECTANGLE,Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))
shape1.fill.solid()
shape1.fill.fore_color.rgb=RGBColor(255,0,0)
shape1.line.color.rgb=RGBColor(0,0,0)
shape1.line.width=Inches(0.01)
shape1.rotation=45
shape1.text="test"

# 圆形
shape2=slide.shapes.add_shape(MSO_SHAPE.OVAL,Inches(2.0),Inches(2.0),Inches(1.0),Inches(1.0))
shape2.fill.solid()
shape2.fill.fore_color.rgb=RGBColor(0,255,0)
shape2.line.color.rgb=RGBColor(0,0,0)
shape2.line.width=Inches(0.01)

# 直线
shape3=slide.shapes.add_shape(MSO_SHAPE.LINE_INVERSE,Inches(2.0),Inches(2.0),Inches(1.0),Inches(1.0))
shape3.line.color.rgb=RGBColor(0,0,0)
shape3.line.width=Inches(0.01)

# free shape
builder=slide.shapes.build_freeform(Inches(1),Inches(1))
builder.add_line_segments(((Inches(2),Inches(3)),(Inches(2),Inches(0)),),close=False)
builder.move_to(Inches(2.5),Inches(2.5))
builder.add_line_segments(((Inches(1),Inches(3)),(Inches(1),Inches(0)),),close=True)
shape4=builder.convert_to_shape()
shape4.fill.background()
shape4.line.color.rgb=RGBColor(0,0,0)
shape4.line.width=Pt(3)

prs.save('test.pptx')

"""
+[P函数](,增加图形)

"""
## end
#14, 16:
文档\S应用\网页画板.ftxt
## end
#16, 456:
+[返回目录](,PPT动词)
+[设置结构](,动词)


调换顺序:...
输出PPT:...

相对:...
对齐X:...
对齐Y:...
+[新建阅读窗口](,相对)

旋转:...
朝向:...
图形曲线:...
合并图形:...
图形_交:...
图形_剪切:...
将条目"合并图形"复制为条目"图形_剪切"

设置位置:...
设置n边形:...
+[复制结构](,设置n边形)

更新图形_del:...
画折线:...


显示图形名称:...
显示PPT场景:...
显示PPT图形:...
PPT场景转P代码:...
PPT场景输出:...
+[新建阅读窗口](,PPT场景转P代码)
+[复制结构](,PPT场景输出)

描述:...
+[新建阅读窗口](,描述)
+[复制结构](,描述)

+[调换顺序](,PPT动词)
PPT动词=>的(PPT动词,_动词)=>+[标题](_动词,)->+[显示](,+[标题])
是([动词库],动词)->+[打开文件](+新窗口,动词)


## end
#19, 522:
"""
+[返回目录](,输出PPT)
+[新建阅读窗口](,输出PPT)

初始化(P函数):...
物体转换(S动词):...
输出(P函数):...

"""

+输出PPT(_场景,_输出)...
->的(输出PPT,初始化)->的(输出PPT,物体转换)->的(输出PPT,输出)...

->+[P函数](,初始化)...
->+[调换顺序](,_场景)...
->+[做]"
    +做(物体转换,_场景)->+[del](,+做)=>的(_场景,_物体)=>+[做](,_物体)->+[code](+[做],物体转换)
"(物体转换,_场景)...
->+[调换顺序](,_场景)...

->Python->[]{
    []:
        ->_输出->+[python](Python,)->+[.]"file_dir"(+[python],_输出)->+[code](+[python],输出),
        ->+[python](Python,)->+[.]"file_dir"(+[python],+输出PPT)->+[code](+[python],输出)
}->+[del](,+输出PPT)



## end
#21, 366:
"""
+[返回目录](,初始化)
+[P函数](,初始化)

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE, MSO_CONNECTOR
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(13.333)

blank_slide_layout = prs.slide_layouts[6]
slide = prs.slides.add_slide(blank_slide_layout)



## end
#24, 25:
文档\输出\20210526\test2.pptx
## end
#26, 754:
"""
+[返回目录](,物体转换)
+[新建阅读窗口](,库)
库:...

"""

+物体转换(,_物体)->+[del](,+物体转换)...
->的(物体转换,库):
    ->的(_物体,类型#6)->类型#6"矩形"->的(_物体,函数)...
->的(库,函数曲线)->+[做](,_物体)->+[code](+[做],函数曲线),

    ->的(_物体,类型#5)->类型#5"圆形"->的(_物体,内部半径)...
->的(库,iris)->+[做](,_物体)->+[code](+[做],iris),

    ->的(_物体,类型#5)->类型#5"圆形"->的(_物体,球面半径)...
->的(库,凹面镜)->+[做](,_物体)->+[code](+[做],凹面镜),

    ->的(_物体,类型#4)->类型#4"圆形"->的(_物体,闪耀角)->的(_物体,光栅数目)...
->的(库,光栅)->+[做](,_物体)->+[code](+[做],光栅),

    ->的(_物体,类型#3)->类型#3"直线"->的(_物体,焦点)->的(_物体,直径)...
->的(库,光线)->+[做](,_物体)->+[code](+[做],光线),

    ->的(_物体,类型#0)->类型#0"矩形"->的(库,矩形)->+[做](,_物体)->+[code](+[做],矩形),

    ->的(_物体,类型#1)->类型#1"圆形"->的(库,圆形)->+[做](,_物体)->+[code](+[做],圆形),

    ->的(_物体,类型#2)->类型#2"直线"->的(库,直线)->+[做](,_物体)->+[code](+[做],直线)


## end
#29, 94:
+[返回目录](,库)


矩形:...
圆形:...
直线:...

光线:...
光栅:...
凹面镜:...
函数曲线:...
iris:...
+[修改内容](凹面镜,iris)

## end
#31, 781:
"""
+[返回目录](,矩形)

"""

+矩形(,_物体)->+[del](,+矩形)...
->的(_物体,起点)->的(_物体,尺寸)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...

->+[python]"
dx=size[0]
dy=size[1]
x0=np.min([pt0[0],pt0[0]+dx])
y0=np.min([pt0[1],pt0[1]+dy])
dx=np.abs(dx)
dy=np.abs(dy)


shape1=slide.shapes.add_shape(MSO_SHAPE.RECTANGLE,Pt(x0),Pt(y0),Pt(dx),Pt(dy))

if len(fcolor)==3:
    shape1.fill.solid()
    shape1.fill.fore_color.rgb=RGBColor(int(fcolor[0]),int(fcolor[1]),int(fcolor[2]))
else:
    shape1.fill.background()

if len(lcolor)==3:
    shape1.line.color.rgb=RGBColor(int(lcolor[0]),int(lcolor[1]),int(lcolor[2]))
    shape1.line.width=Pt(width[0])

"(Python,)...

->+[.]"pt0"(+[python],起点)->+[.]"size"(+[python],尺寸)...
->+[.]"fcolor"(+[python],面颜色)->+[.]"lcolor"(+[python],线颜色)->+[.]"width"(+[python],线粗细)


## end
#33, 699:
"""
+[返回目录](,圆形)

"""

+圆形(,_物体)->+[del](,+圆形)...
->的(_物体,中心)->的(_物体,半径)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...

->+[python]"
x0=pt0[0]-R[0]
y0=pt0[1]-R[0]
shape2=slide.shapes.add_shape(MSO_SHAPE.OVAL,Pt(x0),Pt(y0),Pt(2*R[0]),Pt(2*R[0]))

if len(fcolor)==3:
    shape2.fill.solid()
    shape2.fill.fore_color.rgb=RGBColor(int(fcolor[0]),int(fcolor[1]),int(fcolor[2]))
else:
    shape2.fill.background()

if len(lcolor)==3:
    shape2.line.color.rgb=RGBColor(int(lcolor[0]),int(lcolor[1]),int(lcolor[2]))
    shape2.line.width=Pt(width[0])

"(Python,)...

->+[.]"pt0"(+[python],中心)->+[.]"R"(+[python],半径)...
->+[.]"fcolor"(+[python],面颜色)->+[.]"lcolor"(+[python],线颜色)->+[.]"width"(+[python],线粗细)


## end
#35, 497:
"""
+[返回目录](,直线)

测试代码:...

"""

+直线(,_物体)->+[del](,+直线)...
->的(_物体,起点)->的(_物体,终点)...
->的(_物体,线颜色)->的(_物体,线粗细)...

->+[python]"

shape3=slide.shapes.add_connector(MSO_CONNECTOR.STRAIGHT, Pt(pt0[0]),Pt(pt0[1]),Pt(pt1[0]),Pt(pt1[1]))
if len(lcolor)==3:
    shape3.line.color.rgb=RGBColor(int(lcolor[0]),int(lcolor[1]),int(lcolor[2]))
    shape3.line.width=Pt(width[0])

"(Python,)...

->+[.]"pt0"(+[python],起点)->+[.]"pt1"(+[python],终点)...
->+[.]"lcolor"(+[python],线颜色)->+[.]"width"(+[python],线粗细)



## end
#36, 10:
test2.pptx
## end
#38, 25:
文档\设计文档\FOPA设计_光路设计1.ftxt
## end
#40, 222:
"""
+[返回目录](,输出)

"""

#for i in range(len(slide.shapes)):
#    element=slide.shapes._spTree[1]
#    slide.shapes._spTree.remove(element)
#    slide.shapes._spTree.append(element)
#    print(element)

prs.save(file_dir)



## end
#43, 45:
"""
+[P函数](,测试代码)

"""

print(np.min([0,0]))

## end
#46, 3:
208
## end
#49, 104:
+[返回目录](,顺序问题)
+[输出PPT]"test2.pptx"(顺序问题,)

惹不起... 我躲吧. 
直接反转场景中的排序好了. 

是([动词库],动词)->+[打开文件](+新窗口,动词)


## end
#50, 145:
+[返回目录](,圆形)

中心::200,100
半径::100
类型::圆形
角度::0


面颜色::255,255,0
线颜色::None
线型::SolidLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

## end
#63, 519:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.beginPath();
ctx.arc(%中心,%半径,0,2*Math.PI)

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fill();
}

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(0,0,0)';
} else {
        ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细;
        if('%线型'==='DashLine') {
            ctx.setLineDash([5,5])
        }
        ctx.stroke();
}

ctx.setLineDash([])

//ctx.stroke()

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#65, 164:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=中心
r=半径[0]
pt0=mouse_pos

Dx=pt[0]-pt0[0]
Dy=pt[1]-pt0[1]
Dr=np.sqrt(Dx**2+Dy**2)

if Dr<=r:
    state=True
else:
    state=False
## end
#68, 39:
+[返回目录](,输入)
+[内容]
中心::200,100
半径::100

## end
#71, 14:
+[返回目录]
+[内容]

## end
#72, 2:
圆形
## end
#73, 692:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
angle=角度[0]
theta=np.deg2rad(angle)

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)
qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#78, 692:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
angle=角度[0]
theta=np.deg2rad(angle)

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)
qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#79, 493:
"""
+[返回目录](,选中框)

"""

X=[pt[0],pt[0]+r*np.cos(theta),pt[0]+r]
Y=[pt[1],pt[1]-r*np.sin(theta),pt[1]]
R=6

qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)

qp.setPen(QPen(Qt.black,1,Qt.DashLine))
qp.drawLine(X[0],Y[0],X[1],Y[1])
qp.setPen(QPen(Qt.black,1,Qt.SolidLine))
qp.drawLine(X[0],Y[0],X[2],Y[2])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))



## end
#81, 66:
+[返回目录](,输入)

角度::0
面颜色::255,255,0
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#89, 1:
2
## end
#90, 9:
SolidLine
## end
#91, 5:
0,0,0
## end
#92, 4:
None
## end
#93, 17:
-93.3664606634298
## end
#94, 17:
75.23961722390672
## end
#95, 13:
-129.0, -20.0
## end
#96, 149:
+[返回目录](,矩形)
+[设置结构](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::255,255,255
线颜色::0,0,0
线型::SolidLine
线粗细::2

画图:...
选中区域:...
HTML:...



## end
#110, 1007:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#116, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#117, 1007:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#118, 2:
矩形
## end
#119, 231:
"""
+[返回目录](,选中区域)
输入:...
+[设置结构](,输入)

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#122, 14:
+[返回目录]
+[内容]

## end
#123, 754:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/


var size=[%尺寸];
var pos=[%起点];

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(255,255,255)';
} else {
	ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细
        if('%线型'==='DashLine') {
            ctx.setLineDash([5,5])
        };
        ctx.strokeRect(%起点,%尺寸);
}

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fillRect(%起点,%尺寸);
}

ctx.setLineDash([])

//ctx.strokeStyle='rgb(%线颜色)';
//ctx.lineWidth=%线粗细;
//ctx.strokeRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#126, 14:
+[返回目录]
+[内容]

## end
#127, 101:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20
尺寸::100,100
起点::-200,100

## end
#136, 11:
255,255,255
## end
#137, 5:
0,0,0
## end
#138, 9:
SolidLine
## end
#139, 1:
2
## end
#140, 2:
你好
## end
#141, 2:
10
## end
#142, 13:
-135.0, -46.5
## end
#143, 12:
246.0, 157.0
## end
#144, 145:
+[返回目录](,圆形)

中心::200,100
半径::100
类型::圆形
角度::0


面颜色::255,255,0
线颜色::None
线型::SolidLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

## end
#157, 519:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.beginPath();
ctx.arc(%中心,%半径,0,2*Math.PI)

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fill();
}

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(0,0,0)';
} else {
        ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细;
        if('%线型'==='DashLine') {
            ctx.setLineDash([5,5])
        }
        ctx.stroke();
}

ctx.setLineDash([])

//ctx.stroke()

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#159, 164:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=中心
r=半径[0]
pt0=mouse_pos

Dx=pt[0]-pt0[0]
Dy=pt[1]-pt0[1]
Dr=np.sqrt(Dx**2+Dy**2)

if Dr<=r:
    state=True
else:
    state=False
## end
#162, 39:
+[返回目录](,输入)
+[内容]
中心::200,100
半径::100

## end
#165, 14:
+[返回目录]
+[内容]

## end
#166, 2:
圆形
## end
#167, 692:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
angle=角度[0]
theta=np.deg2rad(angle)

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)
qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#172, 692:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
angle=角度[0]
theta=np.deg2rad(angle)

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen(QColor(0,0,0,0)))
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)
qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#173, 493:
"""
+[返回目录](,选中框)

"""

X=[pt[0],pt[0]+r*np.cos(theta),pt[0]+r]
Y=[pt[1],pt[1]-r*np.sin(theta),pt[1]]
R=6

qp.drawEllipse(pt[0]-r,pt[1]-r,2*r,2*r)

qp.setPen(QPen(Qt.black,1,Qt.DashLine))
qp.drawLine(X[0],Y[0],X[1],Y[1])
qp.setPen(QPen(Qt.black,1,Qt.SolidLine))
qp.drawLine(X[0],Y[0],X[2],Y[2])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))



## end
#175, 66:
+[返回目录](,输入)

角度::0
面颜色::255,255,0
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#183, 1:
2
## end
#184, 9:
SolidLine
## end
#185, 5:
0,0,0
## end
#186, 11:
255,255,255
## end
#187, 17:
-93.3664606634298
## end
#188, 17:
75.23961722390672
## end
#189, 12:
114.0, 114.0
## end
#191, 82:
"""
+[返回目录](,调换顺序)

"""

+调换顺序(,_节点)->+[del](,+调换顺序)...
=>的(_节点,)=>+[置顶](_节点,的)



## end
#192, 3:
273
## end
#194, 130:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::SolidLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

## end
#205, 708:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())


"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#211, 450:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    if lineType=="DashLine":
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth,Qt.DashLine))
    else:
        qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#212, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#213, 2:
直线
## end
#214, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#218, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#221, 14:
+[返回目录]
+[内容]

## end
#222, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#224, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#225, 546:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;
if('%线型'==='DashLine') {
    ctx.setLineDash([5,5])
}

ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();
ctx.setLineDash([])

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*//*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;
if('%线型'==='DashLine') {
    ctx.setLineDash([5,5])
}

ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();
ctx.setLineDash([])

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#227, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#233, 12:
209.0, 198.0
## end
#234, 14:
-211.0, -104.0
## end
#235, 7:
255,0,0
## end
#236, 2:
10
## end
#237, 9:
SolidLine
## end
#239, 345:
"""
+[返回目录](,直线)

画图代码(P函数):...

"""

+光线(,_物体)->+[del](,+光线)...
->的(光线,画图代码)...
->的(_物体,起点)->的(_物体,终点)...
->的(_物体,线颜色)->的(_物体,线粗细)...
->的(_物体,焦点)->的(_物体,直径)...

->+[python](Python,)->+[code](+[python],画图代码)...

->+[.](+[python],起点)->+[.](+[python],终点)...
->+[.](+[python],线颜色)->+[.](+[python],线粗细)...
->+[.](+[python],焦点)->+[.](+[python],直径)



## end
#241, 767:
"""
+[返回目录](,画图)
输入:...
输出:...

图形:...

+[新建阅读窗口](,图形)

"""
pt1=np.array(起点)
pt2=np.array(终点)

D=直径[0]
F=焦点[0]


lineWidth=线粗细[0]
lineType=线型


r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
f=r*F
dx=(pt2-pt1)/r
dy=np.array([dx[1],-dx[0]])

D1=D
D2=D/F*(F-1)

pt01=pt1+dy*D1/2
pt02=pt2+dy*D2/2
pt03=pt2-dy*D2/2
pt04=pt1-dy*D1/2

x=[pt01[0],pt02[0],pt03[0],pt04[0]]
y=[pt01[1],pt02[1],pt03[1],pt04[1]]

builder=slide.shapes.build_freeform(Pt(x[0]),Pt(y[0]))
for i in range(len(x)):
    builder.add_line_segments(((Pt(x[i]),Pt(y[i])),),close=False)
shape4=builder.convert_to_shape()

if len(线颜色)==3:
    shape4.fill.solid()
    shape4.fill.fore_color.rgb=RGBColor(int(线颜色[0]),int(线颜色[1]),int(线颜色[2]))
else:
    shape4.fill.background()

shape4.line.fill.background()

## end
#244, 415:
"""
+[返回目录](,光栅)

画图代码(P函数):...

"""

+光栅(,_物体)->+[del](,+光栅)...
->的(光栅,画图代码)...
->的(_物体,中心)->的(_物体,半径)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...
->的(_物体,闪耀角)->的(_物体,光栅数目)->的(_物体,角度)...

->+[python](Python,)->+[code](+[python],画图代码)...

->+[.](+[python],中心)->+[.](+[python],半径)...
->+[.](+[python],面颜色)->+[.](+[python],线颜色)->+[.](+[python],线粗细)...
->+[.](+[python],闪耀角)->+[.](+[python],光栅数目)->+[.](+[python],角度)



## end
#246, 1150:
"""
+[返回目录](,画图)
+[返回目录](,图形)
+[新建阅读窗口](,图形)

输入:...
输出:...

图形:....
选中框:...

"""

pt=中心
r=半径[0]
d=厚度[0]
angle=角度[0]
theta=np.deg2rad(angle)
area=100
size_F=10
N=光栅数目[0]
blaze=闪耀角[0]


lineWidth=线粗细[0]
lineType=线型


dx=np.array([-np.sin(theta),-np.cos(theta)])
dy=np.array([-np.cos(theta),np.sin(theta)])

L=2*r/N
angle=np.deg2rad(blaze)

dr1=np.cos(angle)*dx-np.sin(angle)*dy
dr2=dx

pt0=np.array(pt)
pt1=pt0+dx*r
pt2=pt0+dx*r+dy*d
pt3=pt0-dx*r+dy*d
pt4=pt0-dx*r

x=[pt4[0]]
y=[pt4[1]]
pt_i=pt4
for i in range(int(N)):
    pt_i1=pt_i+dr1*np.cos(angle)*L
    pt_i=pt_i+dr2*L
    x+=[pt_i1[0],pt_i[0]]
    y+=[pt_i1[1],pt_i[1]]
x+=[pt1[0],pt2[0],pt3[0],pt4[0]]
y+=[pt1[1],pt2[1],pt3[1],pt4[1]]

builder=slide.shapes.build_freeform(Pt(x[0]),Pt(y[0]))
for i in range(len(x)):
    builder.add_line_segments(((Pt(x[i]),Pt(y[i])),),close=False)
shape4=builder.convert_to_shape()

if len(面颜色)==3:
    shape4.fill.solid()
    shape4.fill.fore_color.rgb=RGBColor(int(面颜色[0]),int(面颜色[1]),int(面颜色[2]))
else:
    shape4.fill.background()

if len(线颜色)==3:
    shape4.line.color.rgb=RGBColor(int(线颜色[0]),int(线颜色[1]),int(线颜色[2]))
    shape4.line.width=Pt(线粗细[0])



## end
#249, 386:
"""
+[返回目录](,凹面镜)

画图代码(P函数):...

"""

+凹面镜(,_物体)->+[del](,+凹面镜)...
->的(凹面镜,画图代码)...
->的(_物体,中心)->的(_物体,半径)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...
->的(_物体,球面半径)->的(_物体,角度)...

->+[python](Python,)->+[code](+[python],画图代码)...

->+[.](+[python],中心)->+[.](+[python],半径)...
->+[.](+[python],面颜色)->+[.](+[python],线颜色)->+[.](+[python],线粗细)...
->+[.](+[python],球面半径)->+[.](+[python],角度)



## end
#251, 1084:
"""
+[返回目录](,画图)
+[返回目录](,图形)
+[新建阅读窗口](,图形)

输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
d=厚度[0]
angle=角度[0]
theta=np.deg2rad(angle)
area=100
size_F=10
R=球面半径[0]
if R<r:
    R=r

lineWidth=线粗细[0]
lineType=线型


dx=np.array([-np.sin(theta),-np.cos(theta)])
dy=np.array([-np.cos(theta),np.sin(theta)])


pt0=np.array(pt)
pt1=pt0+dx*r+dy*d
pt2=pt0-dx*r+dy*d

x=[pt2[0]]
y=[pt2[1]]

Dangle=np.arcsin(r/R)
angles=np.linspace(-Dangle,Dangle,100)
pt_i0=np.array(pt)-R*dy
for angle in angles:
    pt_i=pt_i0+R*np.cos(angle)*dy+R*np.sin(angle)*dx
    x.append(pt_i[0])
    y.append(pt_i[1])

x+=[pt1[0],pt2[0]]
y+=[pt1[1],pt2[1]]

builder=slide.shapes.build_freeform(Pt(x[0]),Pt(y[0]))
for i in range(len(x)):
    builder.add_line_segments(((Pt(x[i]),Pt(y[i])),),close=False)
shape4=builder.convert_to_shape()

if len(面颜色)==3:
    shape4.fill.solid()
    shape4.fill.fore_color.rgb=RGBColor(int(面颜色[0]),int(面颜色[1]),int(面颜色[2]))
else:
    shape4.fill.background()

if len(线颜色)==3:
    shape4.line.color.rgb=RGBColor(int(线颜色[0]),int(线颜色[1]),int(线颜色[2]))
    shape4.line.width=Pt(线粗细[0])



## end
#254, 17:
文档\S应用\几何样本库.ftxt
## end
#256, 423:
"""
+[返回目录](,函数曲线)

画图代码(P函数):...

"""

+函数曲线(,_物体)->+[del](,+函数曲线)...
->的(函数曲线,画图代码)...
->的(_物体,起点)->的(_物体,尺寸)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...
->的(_物体,中心位置)->的(_物体,分辨率)->的(_物体,函数)...

->+[python](Python,)->+[code](+[python],画图代码)...

->+[.](+[python],起点)->+[.](+[python],尺寸)...
->+[.](+[python],面颜色)->+[.](+[python],线颜色)->+[.](+[python],线粗细)...
->+[.](+[python],中心位置)->+[.](+[python],分辨率)->+[.](+[python],函数)



## end
#258, 728:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸

lineWidth=线粗细[0]
lineType=线型

dx=分辨率[0]
orig=中心位置

Nx=np.abs(size[0])
x=np.linspace(-Nx*dx/2,Nx*dx/2,Nx)+orig[0]
y=0*x
exec(函数)

x_p=x/dx+pt[0]+size[0]/2
y_p=-y/dx+pt[1]+size[1]/2+orig[1]


builder=slide.shapes.build_freeform(Pt(x_p[0]),Pt(y_p[0]))
for i in range(len(x)):
    builder.add_line_segments(((Pt(x_p[i]),Pt(y_p[i])),),close=False)
shape4=builder.convert_to_shape()

if len(面颜色)==3:
    shape4.fill.solid()
    shape4.fill.fore_color.rgb=RGBColor(int(面颜色[0]),int(面颜色[1]),int(面颜色[2]))
else:
    shape4.fill.background()

if len(线颜色)==3:
    shape4.line.color.rgb=RGBColor(int(线颜色[0]),int(线颜色[1]),int(线颜色[2]))
    shape4.line.width=Pt(线粗细[0])


## end
#260, 3:
262
## end
#262, 3:
277
## end
#265, 390:
"""
+[返回目录](,iris)

画图代码(P函数):...

"""

+iris(,_物体)->+[del](,+iris)...
->的(iris,画图代码)...
->的(_物体,中心)->的(_物体,半径)...
->的(_物体,面颜色)->的(_物体,线颜色)->的(_物体,线粗细)...
->的(_物体,内部半径)->的(_物体,角度)...

->+[python](Python,)->+[code](+[python],画图代码)...

->+[.](+[python],中心)->+[.](+[python],半径)...
->+[.](+[python],面颜色)->+[.](+[python],线颜色)->+[.](+[python],线粗细)...
->+[.](+[python],内部半径)->+[.](+[python],角度)



## end
#267, 935:
"""
+[返回目录](,画图)
+[返回目录](,图形)
+[新建阅读窗口](,图形)

输入:...
输出:...

图形:....
选中框:...

"""
pt=中心
r=半径[0]
d=厚度[0]
angle=角度[0]
theta=np.deg2rad(angle)
area=100
size_F=10
R1=r
R2=内部半径[0]

lineWidth=线粗细[0]
lineType=线型



angles=np.linspace(angle,angle+360,100)
alphas=np.deg2rad(angles)

x=[]
y=[]
for alpha in alphas:
    x.append(pt[0]+R1*np.cos(alpha))
    y.append(pt[1]-R1*np.sin(alpha))
for alpha in alphas:
    x.append(pt[0]+R2*np.cos(alpha))
    y.append(pt[1]-R2*np.sin(alpha))




builder=slide.shapes.build_freeform(Pt(x[0]),Pt(y[0]))
for i in range(len(x)):
    builder.add_line_segments(((Pt(x[i]),Pt(y[i])),),close=False)
shape4=builder.convert_to_shape()

if len(面颜色)==3:
    shape4.fill.solid()
    shape4.fill.fore_color.rgb=RGBColor(int(面颜色[0]),int(面颜色[1]),int(面颜色[2]))
else:
    shape4.fill.background()

if len(线颜色)==3:
    shape4.line.color.rgb=RGBColor(int(线颜色[0]),int(线颜色[1]),int(线颜色[2]))
    shape4.line.width=Pt(线粗细[0])



## end
#269, 3:
271
## end
#272, 17:
文档\S应用\画图样本库.ftxt
## end
#273, 3:
286
## end
#275, 468:
"""
+[返回目录](,相对)

记住"Matlab"
pt2
pt1
dr

"""

+相对(_M1,_M2)...
->[位置](_M1,)->是([位置],_位置1)...
->[位置](_M2,)->是([位置],_位置2)...
->+[修改内容](_位置1,_位置2)->Matlab:

->沿着(+相对,)->+[matlab]"pt2=pt1+v*t;"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[.]"v"(+[matlab],沿着)->+[.]"t"(+[matlab],+相对)...
->+[o]"pt2"(+[matlab],_位置2)...
->+[del](,+相对),

->+[matlab]"pt2=pt1+dr;"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[.]"dr"(+[matlab],+相对)...
->+[o]"pt2"(+[matlab],_位置2)...
->+[del](,+相对)



## end
#277, 360:
"""
+[返回目录](,设置位置)
+[复制结构](,设置位置)

"""
+设置位置(,_泵光1)->+[del](,+设置位置)...
->+[python]"name0=''"(Python,)...
->+[临时文本]->[]{
    []=>的(_泵光1,_元件)...
    =>+[标题](_元件,)->+[python]"
ans='+[相对]\"200,0\"(%s)'%(name0+','+name)
name0=name
    "(Python,+[增加内容])->+[s]"name"(+[python],+[标题])...
    ->+[增加内容](,+[临时文本])->+[增加内容]"
"(,+[临时文本])
}->+[修改内容](+[临时文本],+[显示])->+[显示]


## end
#280, 23:
+[返回目录](,模板)


光路结构:...
## end
#282, 2251:
+[返回目录](,光路结构)
+[删除结构](,光路结构)
+[显示星图](,光路结构)

从Vitara出发, 然后Stretcher光路, 然后16通, 然后Compressor光路, 然后HCF(HCF1), 然后Stretcher光路, 然后dazzler, 然后第一级放大, 然后第二级放大, 然后第三级放大. 
+然后(+Vitara,+Stretcher1)->+然后(+Stretcher1,+16 pass)...
->+然后(+16 pass,+Compressor)...
->+然后(+Compressor,+HCF1)->+然后(+HCF1,+Stretcher2)...
->+然后(+Stretcher2,+Dazzler)->+然后(+Dazzler,+1st stage)->+然后(+1st stage,+2nd stage)->+然后(+2nd stage,+3rd stage)

第二级放大之后还有TOPAS, 然后是第二个HCF(HCF2)
+然后(2nd stage,+TOPAS)->+然后(+TOPAS,+HCF2)

16通用了Evolution做泵光, 第一级放大用了Nimma, 第二级用了QuatanRay, 第三级用了QuantaRay. 
+泵光(+Evolution,16 pass)->+泵光(+Nimma,1st stage)...
->+泵光(+QuantaRay,2nd stage)->+泵光(+QuantaRay,3rd stage)

Vitara, Evolution, Nimma都涉及了电源系统, 水路和Trigger. 
QuantaRay涉及电源系统, 水路, Trigger, 还有真空. 
16通涉及电源, 水路和真空. 第一二三级都涉及水路. 
HCF涉及真空. 
Dazzler涉及Trigger. 
+Power->+Chiller->+Vacuum->+Trigger

Vitara->Evolution->Nimma=>[那](_,)=>+涉及(_,Power)->+涉及(_,Chiller)->+涉及(_,Trigger)
[is](QuantaRay,_)->+涉及(_,Power)->+涉及(_,Chiller)->+涉及(_,Trigger)->+涉及(_,Vacuum)
[is](16 pass,_)->+涉及(_,Power)->+涉及(_,Chiller)->+涉及(_,Vacuum)
1st stage->2nd stage->3rd stage=>[那](_,)=>+涉及(_,Chiller)
[]=>_re"HCF"=>[is](_re,_)->+涉及(_,Vacuum)
[is](Dazzler,_)->+涉及(_,Trigger)

所有然后之前之后的东西都是主体, 所有涉及之前之后的东西都是主体. 
+主体
[]=>_{[]:->然后(,_),->然后(_,),->泵光(_,),->泵光(,_)}=>+[有](主体,_)
主体=>的(主体,_东西)=>+[创建矩形](,_东西)
主体=>的(主体,_东西)->的(_东西,文字)=>+[标题](_东西,)->+[修改内容](+[标题],文字)

所有主体的尺寸都是200,150
主体=>的(主体,_物体)->的(_物体,尺寸)=>+[修改内容]"100,100"(,尺寸)


把从Vitara到HCF1的物体从左到右一字排开.
+[删除](,主光路)
+主光路
Vitara->Stretcher1->16 pass->Compressor->HCF1->Stretcher2->Dazzler->1st stage->2nd stage->3rd stage=>[那](_,)=>+[有](主光路,_)
主光路=>的(主光路,_)=>+[置顶节点](主光路,_)
+[设置位置](,主光路)
+[删除](,主光路)
+主光路
2nd stage->TOPAS->HCF2=>[那](_,)=>+[有](主光路,_)
主光路=>的(主光路,_)=>+[置顶节点](主光路,_)
+[设置位置](,主光路)

+[相对]"100,0"(Vitara,Stretcher1)
+[相对]"100,0"(Stretcher1,16 pass)
+[相对]"100,0"(16 pass,Compressor)
+[相对]"100,0"(Compressor,HCF1)
+[相对]"0,100"(HCF1,Stretcher2)
+[相对]"0,100"(Stretcher2,Dazzler)
+[相对]"-100,0"(Dazzler,1st stage)
+[相对]"-100,0"(1st stage,2nd stage)
+[相对]"-100,-50"(2nd stage,3rd stage)

+[相对]"-100,50"(2nd stage,TOPAS)
+[相对]"-100,0"(TOPAS,HCF2)

+[相对]"0,-80"(16 pass,Evolution)
+[相对]"0,80"(1st stage,Nimma)
+[相对]"0,-80"(2nd stage,QuantaRay)


+[显示星图](,光路结构)
是([动词库],动词)->+[打开文件](+新窗口,动词)
## end
#283, 3:
411
## end
#285, 1444:
+[返回目录](,场景测试)
+[删除结构](,场景测试)
+[显示星图](,场景测试)

+位置
位置
+[设置结构](,位置)
位置=>空间点=>+的(位置,空间点)

有一个矩形, 右边有另一个矩形. 一个箭头从左边矩形的右边, 连着右边矩形的左边. 
+矩形1->+矩形2->+右边(+矩形1,+矩形2)...
->+在(+矩形1,+空间点#1)->+的(+矩形1,+尺寸#1)...
->+在(+矩形2,+空间点#2)->+的(+矩形2,+尺寸#2)

+箭头(+空间点#1,+空间点#2)

矩形中间有一段正弦曲线, 朝着45度角的方向倾斜. 
+在(+正弦曲线,+空间点)->+朝着(+正弦曲线,+方向)->+方向"45"...
->+的(+正弦曲线,+x)->+的(+正弦曲线,+y)...
->+x"1,2,3,4,5,6"->+y"0,1,0,1,0,1"->+曲线(+正弦曲线,)

场景测试中, 所有的物体, 如果物体是矩形, 那么就画一个矩形. 如果是线那就画线, 如果是物体那就画物体. 
场景测试=>的(场景测试,_物体):->在(_物体,空间点#3)->[]{
[]:->的(_物体,尺寸)=>[],
->朝着(_物体,方向)=>[],
=>[]},
->[is](_物体,_直线)->_直线(空间点#1,空间点#2)->空间点#1->空间点#2(,)=>+[显示]"直线: "(,_物体)

将所有的尺寸都设置为(1,2)
场景测试=>的(场景测试,尺寸)=>+[修改内容]"1,2"(,尺寸)
在(矩形1,空间点)->+[修改内容]"0,0"(,空间点)
+[相对]"4,1"(矩形1,矩形2)

设置直线的起点和终点
箭头(_起点,_终点)->+[相对]"5,1"(_起点,_终点)

设置正弦曲线的位置和方向
+[相对]"0,2"(矩形1,正弦曲线)
朝着(正弦曲线,方向)->+[修改内容]"-60"(,方向)


+[matlab]"
[X,Y]=meshgrid(1:10,1:10);
ans=X;
"(Matlab,+[显示])

所有空间点乘100
[]=>空间点=>+[matlab]"pt=pt*100"(Matlab,)->+[o]"pt"(+[matlab],空间点)
[]=>尺寸=>+[matlab]"pt=pt*100"(Matlab,)->+[o]"pt"(+[matlab],尺寸)
[]=>x=>+[matlab]"pt=pt*100"(Matlab,)->+[o]"pt"(+[matlab],x)
[]=>y=>+[matlab]"pt=pt*100"(Matlab,)->+[o]"pt"(+[matlab],y)

球体网络:...
在原点有一个球体网格. 
+在(+球体,+空间点)->+朝向(+球体,+方向)->+方向"0"...
->+的(+球体,+x)->+的(+球体,+y)->+样式"二维网络"(+球体,)

球体在矩形1旁边
+[相对]"0,100"(矩形1,球体)
球体的网格用球体网络来设置. 
的(球体,x)->的(球体,y)...
->+[matlab](Matlab,)->+[code](+[matlab],球体网络)...
->+[o](+[matlab],x)->+[o](+[matlab],y)

的(球体,x)->+[复制内容](,x)
+[显示PPT场景](,场景测试)
## end
#297, 34:
0.0, 100.0, 0.0, 100.0, 0.0, 100.0
## end
#298, 40:
100.0, 200.0, 300.0, 400.0, 500.0, 600.0
## end
#301, 3:
-60
## end
#303, 10:
0.0, 200.0
## end
#309, 12:
500.0, 100.0
## end
#310, 8:
0.0, 0.0
## end
#323, 12:
100.0, 200.0
## end
#325, 12:
400.0, 100.0
## end
#327, 12:
100.0, 200.0
## end
#329, 8:
0.0, 0.0
## end
#347, 64:
+[返回目录](,名词)
+[复制结构](,位置)

位置:...
方向:...
倍率:...


+[粘贴](,名词)




## end
#349, 715:
"""
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)
+[显示动词结构](,显示PPT场景)

保存:...

"""

+显示PPT场景(,_场景)...
->的(显示PPT场景,库)->的(显示PPT场景,描述结构)...

->Matlab{
    []:->[==](,+显示PPT场景),
    ->+[matlab]"figure(n)"(Matlab,)->+[.]"n"(+[matlab],+显示PPT场景)
}->+[del](,+显示PPT场景)...
->[]{
    []:->[==](,+显示PPT场景), ->不刷新(+显示PPT场景,),
    ->+[matlab]"clf;"(Matlab,)
}...
->+[matlab]"hold on;axis equal"(Matlab,)...

->[]{
    []:->的(_场景,屏幕)->屏幕(,_窗口)->_窗口->+[做](,_窗口)->+[code](+[做],显示矩形),
    ->[]
}...

->+[code]([想],描述结构)->[想](,_场景)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](,_物体)->+[code](+[做],_条目)
}...

->+[matlab]"a=gca;a.Children=flip(a.Children);"(Matlab,)



## end
#351, 97:
+[返回目录](,库)


显示点:...
显示文字:...
将条目"显示点"复制为条目"显示文字"
显示矩形:...
显示图形:...
显示直线:...

+[新建阅读窗口](,显示图形)


## end
#353, 253:
"""
+[返回目录](,显示文字)
M代码:...

"""

+显示文字(,_物体)->+[del](,+显示文字)...
->的(显示文字,M代码)...

->在(_物体,空间点)->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"pt"(+[matlab],空间点)...
->+[s]"name"(+[matlab],+[标题])->+[s]"text_str"(+[matlab],_物体)





## end
#355, 567:
"""
+[返回目录](,显示矩形)

矩形(M函数):...
文本框(M函数):...
图片(M函数):...
+[新建阅读窗口](,文本框)

保存:...

"""

+显示矩形(,_物体)->+[del](,+显示矩形)...
->的(显示矩形,图片)->的(显示矩形,文本框)->的(显示矩形,矩形)...
->在(_物体,空间点)->的(_物体,尺寸)...

->+[matlab](Matlab,)...
->+[.]"pt"(+[matlab],空间点)->+[.]"shape"(+[matlab],尺寸):

->样式(_物体,)->[]{
    []:->[==]"文本框"(,样式)...
        ->+[code](+[matlab],文本框)->+[s]"str_text"(+[matlab],_物体),

    ->+[code](+[matlab],图片)->+[o]"siz"(+[matlab],尺寸)...
        ->+[s]"dir_file"(+[matlab],_物体)
},

->+[code](+[matlab],图片)->+[o]"siz"(+[matlab],尺寸)...
        ->+[s]"dir_file"(+[matlab],_物体)

## end
#357, 988:
"""
+[返回目录](,显示图形)

空图形(M函数):...
曲线(M函数):...
多边形(M函数):...
二维网络(M函数):...

"""

+显示图形(,_物体)->+[del](,+显示图形)...
->显示图形(,)...
->+[matlab](Matlab,)...

->[]{
    []:->在(_物体,空间点)->[]{[]:
        ->[==](,空间点)->+[临时文本]"0,0"->+[.]"pt"(+[matlab],+[临时文本]),
        ->+[.]"pt"(+[matlab],空间点)
    },->+[临时文本]"0,0"->+[.]"pt"(+[matlab],+[临时文本])
}...

->[]{
    []:->朝向(_物体,方向)->[]{[]:
        ->[==](,方向)->+[临时文本]"0"->+[.]"angle"(+[matlab],+[临时文本]),
        ->+[.]"angle"(+[matlab],方向)
    },->+[临时文本]"0"->+[.]"angle"(+[matlab],+[临时文本])
}:

->的(_物体,x)->的(_物体,y)...
->+[.](+[matlab],x)->+[.](+[matlab],y)->[]{
    []:->样式(_物体,)->[]{
        []:->[==]"曲线"(,样式)->的(显示图形,曲线)->曲线->+[code](+[matlab],曲线),
        ->[==]"二维网络"(,样式)->的(显示图形,二维网络)...
        ->二维网络->+[code](+[matlab],二维网络)
    },
    ->的(显示图形,多边形)->多边形->+[code](+[matlab],多边形):
        ->的(_物体,透明度)->+[.]"alpha"(+[matlab],透明度),
        ->+透明度"0.5"->+[.]"alpha"(+[matlab],透明度)->+[del](,+透明度)
},

->的(显示图形,空图形)->空图形->+[code](+[matlab],空图形)







## end
#359, 296:
"""
+[返回目录](,显示直线)

"""

+显示直线(,_直线)->+[del](,+显示直线)...
->_直线(_起点,_终点)->_起点->_终点(,)...
->[位置](_起点,)->[位置]#2(_终点,)...
->+[matlab]"plot([pt1(1),pt2(1)],[pt1(2),pt2(2)],'k')"(Matlab,)...
->+[.]"pt1"(+[matlab],+[起点])->+[.]"pt2"(+[matlab],+[终点])...

->[m_text]([位置],+[起点])->[m_text]([位置]#2,+[终点])





## end
#361, 130:
"""
+[返回目录](,位置)

"""

+位置(_M1,):->[is](_M1,空间点)->+是(+位置,空间点)->[m_text](空间点,+位置),
->在(_M1,_位置)->+是(+位置,_位置)->[m_text](_位置,+位置)




## end
#363, 462:
"""
+[返回目录](,对齐X)

"""

+对齐X(_M1,_M2)->+[del](,+对齐X)...
->[位置](_M1,)->是([位置],_位置1)...
->[位置](_M2,)->是([位置],_位置2)->Matlab:

->从(+对齐X,_M3)->[位置](_M3,)->是([位置],_位置3)...
->沿着(+对齐X,)->+[matlab]"
pt2=pt3+v*(pt1(1)-pt3(1))/v(1);"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[.]"pt3"(+[matlab],_位置3)->+[.]"v"(+[matlab],沿着)...
->+[o]"pt2"(+[matlab],_位置2)...
->+[del](,+相对),

->+[matlab]"pt2(1)=pt1(1);"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[o]"pt2"(+[matlab],_位置2)




## end
#365, 382:
"""
+[返回目录](,对齐Y)

"""

+对齐Y(_M1,_M2)->+[del](,+对齐Y)...
->[位置](_M1,)->是([位置],_位置1)...
->[位置](_M2,)->是([位置],_位置2)->Matlab:

->沿着(+对齐Y,)->+[matlab]"pt2=pt1+v*pt1(2)/v(2);"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[.]"v"(+[matlab],沿着)...
->+[o]"pt2"(+[matlab],_位置2)...
->+[del](,+相对),

->+[matlab]"pt2(2)=pt1(2);"(Matlab,)...
->+[.]"pt1"(+[matlab],_位置1)->+[o]"pt2"(+[matlab],_位置2)




## end
#367, 108:
%{
+[M函数](,空图形)
%}

v=[cosd(angle),sind(angle)];
plot(pt(1),pt(2),'k.');
quiver(pt(1),pt(2),v(1),v(2),'k')


## end
#370, 130:
%{
+[M函数](,曲线)
%}


X= cosd(angle)*x-sind(angle)*y+pt(1);
Y= sind(angle)*x+cosd(angle)*y+pt(2);

plot(X,Y,'k',pt(1),pt(2),'r*')



## end
#373, 155:
%{
+[M函数](,多边形)
%}

X= cosd(angle)*x-sind(angle)*y+pt(1);
Y= sind(angle)*x+cosd(angle)*y+pt(2);

plot(pt(1),pt(2),'r*')
patch(X,Y,[1,1,1],'FaceAlpha',0.5)

## end
#376, 114:
%{
+[M函数](,二维网格)
%}


X= cosd(angle)*x-sind(angle)*y+pt(1);
Y= sind(angle)*x+cosd(angle)*y+pt(2);

plot(X,Y,'k')


## end
#379, 130:
+[返回目录](,复杂结构)

场景测试:...
测试文本框:...
+[新建阅读窗口](,测试文本框)
+[PPT场景转P代码](测试文本框,+[显示])
+[PPT场景输出]"output\test2.pptx"(测试文本框,)

目标代码:...




## end
#382, 2514:
"""
+[P函数](,目标代码)

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE, MSO_CONNECTOR
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(13.333)

blank_slide_layout = prs.slide_layouts[6]
slide = prs.slides.add_slide(blank_slide_layout)


def ppt_draw_rectangle(slide,pt,size):
    shape=slide.shapes.add_shape(MSO_SHAPE.RECTANGLE,Pt(pt[0]),Pt(pt[1]),Pt(size[0]),Pt(size[1]))
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_circle(slide,pt,size):
    shape=slide.shapes.add_shape(MSO_SHAPE.OVAL,Pt(pt[0]),Pt(pt[1]),Pt(size[0]),Pt(size[1]))
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_line(slide,pt0,pt1):
    shape=slide.shapes.add_connector(MSO_CONNECTOR.STRAIGHT, Pt(pt0[0]),Pt(pt0[1]),Pt(pt1[0]),Pt(pt1[1]))
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_曲线(slide,x,y,pt,theta):
    x=np.array(x)
    y=np.array(y)
    x_p=x*np.cos(theta)-y*np.sin(theta)+pt[0]
    y_p=x*np.sin(theta)+y*np.cos(theta)+pt[1]
    
    builder=slide.shapes.build_freeform(Pt(x_p[0]),Pt(y_p[0]))
    for i in range(len(x)):
        builder.add_line_segments(((Pt(x_p[i]),Pt(y_p[i])),),close=False)
    shape=builder.convert_to_shape()
    shape.fill.background()
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_多边形(slide,x,y,pt,theta):
    x=np.array(x)
    y=np.array(y)
    x_p=x*np.cos(theta)-y*np.sin(theta)+pt[0]
    y_p=x*np.sin(theta)+y*np.cos(theta)+pt[1]
    
    builder=slide.shapes.build_freeform(Pt(x_p[0]),Pt(y_p[0]))
    for i in range(len(x)):
        builder.add_line_segments(((Pt(x_p[i]),Pt(y_p[i])),),close=False)
    shape=builder.convert_to_shape()
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape

ppt_draw_rectangle(slide,[0,0],[10,10])
ppt_draw_circle(slide,[30,30],[100,10])
ppt_draw_line(slide,[0,0],[300,20])
ppt_draw_曲线(slide,[0,10,20,30,40],[-10,10,-10,10,-10],[50,50],34*np.pi/180)
ppt_draw_多边形(slide,[0,10,20,30,40],[-10,10,-10,10,-10],[50,250],34*np.pi/180)
prs.save('output/test1.pptx')

"""
+[P函数](,目标代码)

"""
## end
#384, 1047:
"""
+[返回目录](,PPT场景转P代码)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)
+[新建阅读窗口](,库)
+[显示动词结构](,显示PPT场景)
设置界面:...

保存:...

"""

+PPT场景转P代码(_场景,_P代码)->+[del](,+PPT场景转P代码)...
->的(PPT场景转P代码,设置界面)->的(PPT场景转P代码,描述结构)...
->的(PPT场景转P代码,库)...
->的(库,矩形)->的(库,图形)->的(库,直线)...

->+[临时文本]#0->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体,+[临时文本])->+[code](+[做],_条目)...
        ->+[增加内容2](+[临时文本],+[临时文本]#0)
}...

->+[临时文本]#1->[]{
    +[模板文本](设置界面,+[临时文本]#1)->+[增加内容](+[临时文本]#0,+[临时文本]#1):
        ->的(_场景,屏幕)->屏幕(,_窗口)...
        ->的(_窗口,尺寸)->+[.](+[模板文本],尺寸)...
        ->在(_窗口,空间点)->+[.](+[模板文本],空间点),
        
        ->+尺寸->+[.](+[模板文本],+尺寸)->+[del](,+尺寸)...
        ->[matlab]"state=1;pt_x=get(gca,'Xlim');pt_y=get(gca,'Ylim');
ans=[diff(pt_x),diff(pt_y)];"(Matlab,+尺寸)...
        ->+空间点->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
        ->[matlab]"state=1;pt_x=get(gca,'Xlim');pt_y=get(gca,'Ylim');
ans=[pt_x(1),pt_y(1)];"(Matlab,+空间点)
}...

->+[修改内容](+[临时文本]#1,_P代码)





## end
#386, 85:
+[返回目录](,库)

矩形:...
直线:...
图形:...
集合体:...
文本框:...
将条目"矩形"复制为条目"文本框"
+[新建阅读窗口](,图形)



## end
#388, 207:
"""
+[返回目录](,文本框)

代码模板:...

"""

+文本框(_物体,_代码)->+[del](,+文本框)...
->的(文本框,代码模板)...

->在(_物体,空间点)->+[标题](_物体,)...
->+[模板文本](代码模板,_代码)...
->+[.](+[模板文本],+[标题])->+[.](+[模板文本],空间点)...
->+[.]"内容"(+[模板文本],_物体)




## end
#390, 47:

# %[标题]
ppt_draw_rectangle(slide,[%空间点],[%尺寸])
## end
#392, 168:

# %[标题]
siz=[1,1]
siz=[siz[0]*ratio,siz[1]*ratio]
pos=[%空间点]
pos=[(pos[0]-orig[0])*ratio,(siz_0[1]-pos[1]+orig[1])*ratio-siz[1]]
ppt_draw_文本框(slide,pos,siz,"""%内容""")

## end
#394, 278:
"""
+[返回目录](,直线)

直线代码:...
# %[标题]
ppt_draw_line(slide,[%起点],[%终点])

"""

+直线(_直线,_代码)->+[del](,+直线)...
->的(直线,直线代码)...
->_直线(_起点,_终点)->_起点->_终点->+[标题](_直线,)...
->+[模板文本](直线代码,+[增加内容])...
->+[.](+[模板文本],+[标题])->+[.]"起点"(+[模板文本],_起点)->+[.]"终点"(+[模板文本],_终点)...
->+[增加内容](,_代码)




## end
#396, 982:
"""
+[返回目录](,图形)

图形代码:...
# %[标题]
ppt_draw_%样式(slide,[%x],[%y],[%空间点],%方向*np.pi/180)

二维网络代码:...
# %[标题]
ppt_draw_二维网络(slide,"""%x""","""%y""",[%空间点],%方向*np.pi/180)

"""

+图形(_物体,_代码)->+[del](,+图形)...
->的(图形,图形代码)->的(图形,二维网络代码)...
->的(_物体,x)->的(_物体,y)->+[标题](_物体,):

->样式"二维网络"(_物体,)...
->+[模板文本](二维网络代码,+[增加内容]#1)...
->+[增加内容]#1(,_代码)...
->+[.](+[模板文本],+[标题])->+[.](+[模板文本],x)->+[.](+[模板文本],y)...

->[]{[]:->在(_物体,空间点)->空间点->+[.](+[模板文本],空间点),
    ->+[临时文本]"0,0"->+[.]"空间点"(+[模板文本],+[临时文本])}...
->[]{[]:->朝向(_物体,方向)->方向->+[.](+[模板文本],方向),
    ->+[临时文本]"0"->+[.]"方向"(+[模板文本],+[临时文本])},


->+[模板文本](图形代码,+[增加内容])...
->+[增加内容](,_代码)...
->+[.](+[模板文本],+[标题])->+[.](+[模板文本],x)->+[.](+[模板文本],y)...
->[]{[]:
    ->样式(_物体,)->+[.](+[模板文本],样式),
    ->+样式"多边形"->+[.](+[模板文本],+样式)->+[del](,+样式)
}...

->[]{[]:->在(_物体,空间点)->空间点->+[.](+[模板文本],空间点),
    ->+[临时文本]"0,0"->+[.]"空间点"(+[模板文本],+[临时文本])}...
->[]{[]:->朝向(_物体,方向)->方向->+[.](+[模板文本],方向),
    ->+[临时文本]"0"->+[.]"方向"(+[模板文本],+[临时文本])}






## end
#398, 180:

# %[标题]
pos=[%起点]
pt1=[(pos[0]-orig[0])*ratio,(siz_0[1]-pos[1]+orig[1])*ratio]
pos=[%终点]
pt2=[(pos[0]-orig[0])*ratio,(siz_0[1]-pos[1]+orig[1])*ratio]
ppt_draw_line(slide,pt1,pt2)

## end
#400, 152:

# %[标题]
pos=[%空间点]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([%x])
y=np.array([%y])
ppt_draw_%样式(slide,x,y,pos,-%方向*np.pi/180,ratio)

## end
#402, 510:
"""
+[返回目录](,PPT场景输出)

定义函数(P函数):...
+[新建阅读窗口](,定义函数)
+[P函数](,定义函数)
输出(P函数):...
保存代码:...
+[新建阅读窗口](,保存代码)
+[P函数](,保存代码)

"""

+PPT场景输出(_场景,_输出)...
->的(PPT场景输出,定义函数)->的(PPT场景输出,输出)...
->的(PPT场景输出,保存代码)...

->+[P函数](,定义函数)...
->+[PPT场景转P代码](_场景,保存代码)->+[P函数](,保存代码)...

->+[显示](,+[临时文本])...

->Python(,)...
->[]{
    []:->_输出->+[python](Python,)->+[.]"file_dir"(+[python],_输出)->+[code](+[python],输出),
        ->+[python](Python,)->+[.]"file_dir"(+[python],+PPT场景输出)->+[code](+[python],输出)
}->+[del](,+PPT场景输出)



## end
#404, 4524:
"""
+[P函数](,目标代码)

Shape::https://python-pptx.readthedocs.io/en/latest/api/shapes.html#pptx.shapes.autoshape.Shape
+[打开网页](,Shape)

textColor::https://python-pptx.readthedocs.io/en/latest/user/text.html#applying-character-formatting
+[打开网页](,textColor)

设置字体颜色:...
曲线

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE, MSO_CONNECTOR
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

nan=None


def ppt_draw_矩形(slide,pt,size,text):
    shape=slide.shapes.add_shape(MSO_SHAPE.RECTANGLE,Pt(pt[0]),Pt(pt[1]),Pt(size[0]),Pt(size[1]))
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    # shape.text=text
    text_frame = shape.text_frame
    
    p = text_frame.paragraphs[0]
    run = p.add_run()
    run.text = text
    
    font = run.font
    font.color.rgb=RGBColor(0,0,0)
    return shape

def ppt_draw_文本框(slide,pt,size,text):
    shape=slide.shapes.add_textbox(Pt(pt[0]),Pt(pt[1]),Pt(size[0]),Pt(size[1]))
    shape.text=text
    return shape

def ppt_draw_图片(slide,pt,size,file_dir):
    shape=slide.shapes.add_picture(file_dir,Pt(pt[0]),Pt(pt[1]),Pt(size[0]),None)
    return shape


def ppt_draw_circle(slide,pt,size):
    shape=slide.shapes.add_shape(MSO_SHAPE.OVAL,Pt(pt[0]),Pt(pt[1]),Pt(size[0]),Pt(size[1]))
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_line(slide,pt0,pt1):
    shape=slide.shapes.add_connector(MSO_CONNECTOR.STRAIGHT, Pt(pt0[0]),Pt(pt0[1]),Pt(pt1[0]),Pt(pt1[1]))
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_曲线(slide,x,y,pt,theta,ratio=1):
    # x=np.array(x)
    # y=-np.array(y)
    # y=-y
 
    x_p=None
    y_p=None
    builder=None
    jump=False
    for i in range(len(x)):
        if x[i]!=None:
            if x_p==None:
                x_p=x[i]*np.cos(theta)+y[i]*np.sin(theta)+pt[0]
                y_p=x[i]*np.sin(theta)-y[i]*np.cos(theta)+pt[1]
                builder=slide.shapes.build_freeform(Pt(x_p)*ratio,Pt(y_p)*ratio)
            elif jump:
                x_p=x[i]*np.cos(theta)+y[i]*np.sin(theta)+pt[0]
                y_p=x[i]*np.sin(theta)-y[i]*np.cos(theta)+pt[1]
                builder.move_to(Pt(x_p)*ratio,Pt(y_p)*ratio)
                jump=False
            else:
                x_p=x[i]*np.cos(theta)+y[i]*np.sin(theta)+pt[0]
                y_p=x[i]*np.sin(theta)-y[i]*np.cos(theta)+pt[1]
                builder.add_line_segments(((Pt(x_p)*ratio,Pt(y_p)*ratio),),close=False)
        elif x_p!=None:
            # builder.add_line_segments(((Pt(x_p)*ratio,Pt(y_p)*ratio),),close=False)
            # builder.move_to(Pt(x_p)*ratio,Pt(y_p)*ratio)
            # x_p=None
            jump=True

    shape=builder.convert_to_shape()
    shape.fill.background()
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_多边形(slide,x,y,pt,theta,ratio=1):
    x=np.append(x,x[0])
    y=np.append(y,y[0])
    x=np.array(x)
    y=-np.array(y)
    x_p=x*np.cos(theta)-y*np.sin(theta)+pt[0]
    y_p=x*np.sin(theta)+y*np.cos(theta)+pt[1]
    
    for i in range(len(x)):
        if x[i]!=None:
            if i==0:
                builder=slide.shapes.build_freeform(Pt(x_p[0])*ratio,Pt(y_p[0])*ratio)
            else:
                builder.add_line_segments(((Pt(x_p[i])*ratio,Pt(y_p[i])*ratio),),close=False)
        elif i>0:
            builder.add_line_segments(((Pt(x_p[i-1])*ratio,Pt(y_p[i-1]))*ratio,),close=True)
    shape=builder.convert_to_shape()
    shape.fill.solid()
    shape.fill.fore_color.rgb=RGBColor(255,255,255)
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape


def ppt_draw_二维网络(slide,X,Y,pt,theta,ratio):
    X=np.matrix(X)
    Y=np.matrix(Y)
    X_p=X*np.cos(theta)-Y*np.sin(theta)+pt[0]
    Y_p=X*np.sin(theta)+Y*np.cos(theta)+pt[1]
    
    builder=slide.shapes.build_freeform(Pt(X_p[0,0])*ratio,Pt(Y_p[0,0])*ratio)
    for i in range(X.shape[1]):
        for j in range(X.shape[0]):
            builder.add_line_segments(((Pt(X_p[j,i])*ratio,Pt(Y_p[j,i]))*ratio,),close=False)
        builder.add_line_segments(((Pt(X_p[j,i])*ratio,Pt(Y_p[j,i]))*ratio,),close=True)
    shape=builder.convert_to_shape()
    shape.fill.background()
    shape.line.color.rgb=RGBColor(0,0,0)
    shape.line.width=Pt(2)
    return shape



"""
+[P函数](,定义函数)

"""
## end
#407, 20:
prs.save(file_dir)


## end
#409, 3:
415
## end
#412, 599:
"""
+[返回目录](,旋转)
M代码:...

保存:...

"""

+旋转(_角度,_物体)->+[del](,+旋转)...
->的(旋转,M代码)...

->[m_text](+旋转,+[临时文本])...
->相对(+旋转,_物体2)->+[del](,相对)...
->在(_物体,空间点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[o]"pt"(+[matlab],空间点)->[]{
    []:->在(_物体2,空间点#2)->+[.]"pt00"(+[matlab],空间点#2),
        ->+[.]"pt00"(+[matlab],_物体2)
}...

->[]{
    []:->_角度->+[.]"dangle"(+[matlab],_角度),
    ->+[.]"dangle"(+[matlab],+[临时文本])
}...

->[]:
    ->朝向(_物体,方向)->+[o]"angle"(+[matlab],方向),
    ->[]{
        []:->的(_物体,x)->+朝向(_物体,+方向)->+方向"0"...
            ->+[o]"angle"(+[matlab],+方向),
        ->[]
    }



## end
#414, 354:
%{
记住"Matlab"
+[M函数](,M代码)
%}


%pt=[0,10];
%pt0=[0,2];
%angle=0;
%dangle=30;

pt0=[pt00(1),pt00(2)];
dp=pt-pt0;

if numel(dp)==3
    T=[cosd(dangle),sind(dangle),0;
    -sind(dangle),cosd(dangle),0
    0,0,1];

else
    T=[cosd(dangle),sind(dangle);
    -sind(dangle),cosd(dangle)];

end

pt=dp*T+pt0;
angle=angle+dangle;


%{
记住"Matlab"
+[M函数](,M代码)
%}
## end
#415, 3:
422
## end
#418, 17:
文档\S应用\绘制光路图.ftxt
## end
#419, 3:
449
## end
#422, 16:
文档\S应用\三维建模.ftxt
## end
#424, 454:
%{
+[M函数](,球体网络)

抛物面(M函数):...
地平面(M函数):...
相机轨迹(M函数):...
camera_click(M函数):...

+[M函数](,抛物面)
+[M函数](,相机轨迹)
%}
% clf
addpath('Matlab\space');

theta=linspace(0,180,10);
phi=linspace(0,360,20);
[Theta,Phi]=meshgrid(theta,phi);
X=sind(Theta).*cosd(Phi);
Y=sind(Theta).*sind(Phi);
Z=cosd(Theta);


% camera
p0=[0,0,0];
theta=0;
D=1;
r0=[2,2,2];


Eulers=camera_lookat(r0,p0,theta);
[x,y]=camera_click(r0,Eulers,D,X,Y,Z);
x=x*100;
y=y*100;

%{
+[M函数](,拍照)
%}
## end
#435, 4:
二维网络
## end
#436, 4025:
28.284271247461955, 23.03974369895873, 13.696535835758771, 2.0443432203560814, -9.31084434898687, -18.15318589838192, -23.420042003182896, -25.11522806155721, -23.807953741134867, -20.203050891044157;
28.284271247461955, 22.08625428578396, 11.45219427917487, -1.6119878081168202, -13.970440233489725, -22.962585861853047, -27.504048828809076, -27.91597198030954, -25.152283688822475, -20.203050891044157;
28.284271247461955, 21.60394388663524, 10.284155338262273, -3.5537950092921218, -16.463027151276755, -25.520009370963514, -29.6420484160455, -29.35207728682495, -25.826511184237887, -20.203050891044157;
28.284271247461955, 21.674388119485933, 10.456164686998099, -3.2661326970430613, -16.092979685686906, -25.141006559282953, -29.326657774570396, -29.141503046714174, -25.728276739862675, -20.203050891044157;
28.284271247461955, 22.28543919030584, 11.928052716289383, -0.8286145864759392, -12.96841000976047, -21.93149514737823, -26.635495671512455, -27.326715101741563, -24.87271191920362, -20.203050891044157;
28.284271247461955, 23.335064888416206, 14.374804581636727, 3.1304415518596014, -7.935169420281642, -16.726107657851653, -22.191991026815142, -24.2579188334093, -23.388466204363596, -20.203050891044157;
28.284271247461955, 24.661753416283915, 17.32823144965117, 7.760940001600902, -2.1129339587678824, -10.649736676163526, -16.877761139862, -20.464425162235866, -21.48553428240506, -20.203050891044157;
28.284271247461955, 26.0854937058334, 20.336952227626938, 12.319151645379915, 3.5514933242027924, -4.680647102360802, -11.518849882837213, -16.495759532025716, -19.40921158820824, -20.203050891044157;
28.284271247461955, 27.441872901365823, 23.05995356155785, 16.3128653736657, 8.460769273836904, 0.5391185567192681, -6.71582998578392, -12.809754560486958, -17.397376771652638, -20.203050891044157;
28.284271247461955, 28.600650284225125, 25.28314235179495, 19.484839010148864, 12.324738741779734, 4.678169849654627, -2.8270771330485975, -9.731499686596065, -15.651913478844204, -20.203050891044157;
28.284271247461955, 29.469952963731078, 26.892243383966193, 21.732695803911604, 15.044351967116842, 7.607772082261179, -0.0305881220393773, -7.463744641949016, -14.325982486999175, -20.203050891044157;
28.284271247461955, 29.992051608960928, 27.835530109654115, 23.03219479512797, 16.609584523951053, 9.300037378806548, 1.6017527104797953, -6.118465920542178, -13.52272724163764, -20.203050891044157;
28.284271247461955, 30.13671497743029, 28.093906176832995, 23.385824877604012, 17.034645845363215, 9.760378533657828, 2.047967365950566, -5.747905773766275, -13.299234832154891, -20.203050891044157;
28.284271247461955, 29.896142293860667, 27.663521180767315, 22.796222361845697, 16.325737315321287, 8.992817291706706, 1.304479393254071, -6.36466288812503, -13.670676748599453, -20.203050891044157;
28.284271247461955, 29.28344289878828, 26.551113512583225, 21.259449227894606, 14.473061984699934, 6.991242933532277, -0.6221813791332845, -7.947344516895409, -14.611668435289854, -20.203050891044157;
28.284271247461955, 28.335138482785915, 24.781797946778752, 18.776328479711108, 11.464339611844203, 3.754161249342885, -3.701472823495597, -10.431180999507891, -16.054057703293783, -20.203050891044157;
28.284271247461955, 27.11687992436968, 22.419691111665937, 15.384745620961768, 7.324304162536223, -0.6730897816384941, -7.841189466254048, -13.684686223679499, -17.88246411618205, -20.203050891044157;
28.284271247461955, 25.72995093700689, 19.600499447661377, 11.217816460184181, 2.1888991890050056, -6.121745283431141, -12.82549744482643, -17.47712521536085, -19.931083840774157, -20.203050891044157;
28.284271247461955, 24.3140046838247, 16.568533017620997, 6.584946418321508, -3.585051207631061, -12.191727584207484, -18.239594638904414, -21.44972472349437, -21.987266820364802, -20.203050891044157;
28.284271247461955, 23.03974369895873, 13.696535835758771, 2.0443432203560814, -9.31084434898687, -18.15318589838192, -23.420042003182896, -25.11522806155721, -23.807953741134867, -20.203050891044157
## end
#438, 4127:
-5.38429552187398e-14, 8.877954976216126, 17.14707101574686, 22.888778299432865, 24.912264094656138, 23.24485137522096, 18.8261440243675, 12.856733757423427, 6.349018049649781, -3.845925372767128e-14;
-5.38429552187398e-14, 5.624548912500373, 11.069597838816843, 14.973631053801691, 16.374457881594235, 15.219177759069385, 12.200582485581329, 8.218942727636051, 3.9995758207698557, -3.845925372767128e-14;
-5.38429552187398e-14, 1.5997759088999186, 3.179023812546191, 4.330306885952491, 4.747344203957974, 4.403256600030607, 3.5108962692455057, 2.3484374610937997, 1.1343383399283888, -3.845925372767128e-14;
-5.38429552187398e-14, -2.6503406772868328, -5.259225095314523, -7.1564752547513555, -7.84276567651248, -7.276560667264851, -5.8065335148446175, -3.8880343714097347, -1.8800372497879148, -3.845925372767128e-14;
-5.38429552187398e-14, -6.528576365503581, -12.798049135299353, -17.262783751346074, -18.85865741116026, -17.542753362856352, -14.094066773238492, -9.52197229380372, -4.647923885744299, -3.845925372767128e-14;
-5.38429552187398e-14, -9.52141516250134, -18.284360203240123, -24.310049166247293, -26.422236197532474, -24.682159174960987, -20.051440207994055, -13.75039334013017, -6.821222148154948, -3.845925372767128e-14;
-5.38429552187398e-14, -11.298455770487498, -21.15174242648814, -27.644770957414146, -29.868879355087568, -28.03851815887617, -23.07900633978745, -16.116261390508047, -8.159105296624796, -3.845925372767128e-14;
-5.38429552187398e-14, -11.743110407618978, -21.406973566589297, -27.502515675512452, -29.543071940655647, -27.865497708079378, -23.238154774591425, -16.53256003873269, -8.553692497776126, -3.845925372767128e-14;
-5.38429552187398e-14, -10.92215744840452, -19.42455670000292, -24.57731519838679, -26.26753776806876, -24.879231732991467, -20.989105241940408, -15.188493769319637, -8.021932530907298, -3.845925372767128e-14;
-5.38429552187398e-14, -9.026169463994021, -15.724802932202945, -19.652893810271866, -20.920561779907896, -19.880076706555087, -16.927742563039967, -12.421962574232458, -6.6768786403318865, -3.845925372767128e-14;
-5.38429552187398e-14, -6.311522169259915, -10.829608496818473, -13.416158514044522, -14.24122980974154, -13.564365566744844, -11.626563568140593, -8.619080644765958, -4.69400856477594, -3.845925372767128e-14;
-5.38429552187398e-14, -3.060020257800804, -5.203372190130496, -6.41317491286138, -6.7964846631006495, -6.482120749129923, -5.577454597392571, -4.159542999481472, -2.283207600788741, -3.845925372767128e-14;
-5.38429552187398e-14, 0.4416053164444995, 0.7490580768388272, 0.9219250394937782, 0.9765947473916953, 0.9317620420705792, 0.8025618843444448, 0.5995170725926969, 0.32979742407947243, -3.845925372767128e-14;
-5.38429552187398e-14, 3.9075367475291216, 6.65550111843323, 8.210587630344053, 8.703901854791049, 8.299298418003932, 7.13603860533876, 5.316087324680479, 2.9138323808360096, -3.845925372767128e-14;
-5.38429552187398e-14, 7.051700606885015, 12.138940304894774, 15.066225919351133, 16.00228253271882, 15.234287221013943, 13.039720153864343, 9.64582507443882, 5.238423037652639, -3.845925372767128e-14;
-5.38429552187398e-14, 9.587601051125356, 16.78141768933229, 21.03143382394491, 22.408012807959903, 21.277954338205802, 18.080452407133286, 13.22598752506003, 7.080563516484936, -3.845925372767128e-14;
-5.38429552187398e-14, 11.237146528414035, 20.102288169103876, 25.525810980567602, 27.3133115752527, 25.844796043437494, 21.744957927929, 15.672503270236064, 8.236852742373044, -3.845925372767128e-14;
-5.38429552187398e-14, 11.755814964384346, 21.571569600429175, 27.829833033178303, 29.93656831092717, 28.204155989687564, 23.446152227551618, 16.604401897420107, 8.544457033631698, -3.845925372767128e-14;
-5.38429552187398e-14, 10.978082710457663, 20.688223119943217, 27.157604574768087, 29.386686592516657, 27.551744040717914, 22.60256159561298, 15.709865311801655, 7.911150069485375, -3.845925372767128e-14;
-5.38429552187398e-14, 8.877954976216126, 17.14707101574686, 22.888778299432865, 24.912264094656138, 23.24485137522096, 18.8261440243675, 12.856733757423427, 6.349018049649781, -3.845925372767128e-14
## end
#440, 1:
0
## end
#442, 10:
0.0, 100.0
## end
#446, 140:

# %[标题]

# %[标题]
pos=[%空间点]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
ppt_draw_二维网络(slide,"""%x""","""%y""",pos,%方向*np.pi/180,ratio)
## end
#447, 3:
524
## end
#450, 443:
+[返回目录](,测试文本框)
参考::https://python-pptx.readthedocs.io/en/latest/user/text.html
text_frame::https://python-pptx.readthedocs.io/en/latest/api/text.html
+[打开网页](,参考)

有一些ppt的shape里面是有文本的. 
这些文本可以这样获得, 
shape.text_frame

text_frame, paragraphs和run之间有什么区别? 
text_frame包含paragraphs, paragraphs包含run. 而它们三个每一个都包含一个text. 

矩形加文本(P函数):...
矩形, 圆形, 直线, 多边形都是可以直接设置text_frame.text的. 
矩形里面也可以直接设置shape.text. 

设置文本框(P函数):...
有设置文本框的函数和设置connector的函数. 




## end
#452, 59:
https://python-pptx.readthedocs.io/en/latest/user/text.html
## end
#454, 58:
https://python-pptx.readthedocs.io/en/latest/api/text.html
## end
#456, 1742:
"""
+[返回目录](,矩形加文本)

"""



"""
+[返回目录](,增加图形)
+[P函数](,增加图形)

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(13.333)

title_slide_layout = prs.slide_layouts[0]
slide = prs.slides.add_slide(title_slide_layout)

# 矩形
shape1=slide.shapes.add_shape(MSO_SHAPE.RECTANGLE,Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))
shape1.fill.solid()
shape1.fill.fore_color.rgb=RGBColor(255,0,0)
shape1.line.color.rgb=RGBColor(0,0,0)
shape1.line.width=Inches(0.01)
shape1.rotation=45
shape1.text="test"

# 圆形
shape2=slide.shapes.add_shape(MSO_SHAPE.OVAL,Inches(2.0),Inches(2.0),Inches(1.0),Inches(1.0))
shape2.fill.solid()
shape2.fill.fore_color.rgb=RGBColor(0,255,0)
shape2.line.color.rgb=RGBColor(0,0,0)
shape2.line.width=Inches(0.01)

# 直线
shape3=slide.shapes.add_shape(MSO_SHAPE.LINE_INVERSE,Inches(2.0),Inches(2.0),Inches(1.0),Inches(1.0))
shape3.line.color.rgb=RGBColor(0,0,0)
shape3.line.width=Inches(0.01)

# free shape
builder=slide.shapes.build_freeform(Inches(1),Inches(1))
builder.add_line_segments(((Inches(2),Inches(3)),(Inches(2),Inches(0)),),close=False)
builder.move_to(Inches(2.5),Inches(2.5))
builder.add_line_segments(((Inches(1),Inches(3)),(Inches(1),Inches(0)),),close=True)
shape4=builder.convert_to_shape()
shape4.fill.background()
shape4.line.color.rgb=RGBColor(0,0,0)
shape4.line.width=Pt(3)



text_frame=shape1.text_frame
text_frame.text='test'

text_frame=shape2.text_frame
text_frame.text='test2'

text_frame=shape3.text_frame
text_frame.text='test3'

text_frame=shape4.text_frame
text_frame.text='test4'

prs.save('output/test.pptx')

"""
+[P函数](,矩形加文本)

"""
## end
#459, 1136:
"""
+[返回目录](,增加图形)
+[P函数](,增加图形)
参考::https://python-pptx.readthedocs.io/en/latest/api/shapes.html

"""

from pptx import Presentation
from pptx.enum.shapes import MSO_SHAPE, MSO_CONNECTOR
from pptx.util import Inches, Pt
from pptx.dml.color import RGBColor

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(13.333)

title_slide_layout = prs.slide_layouts[0]
slide = prs.slides.add_slide(title_slide_layout)

# 文本框
shape1=slide.shapes.add_textbox(Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))
shape1.fill.solid()
shape1.fill.fore_color.rgb=RGBColor(255,0,0)
shape1.line.color.rgb=RGBColor(0,0,0)
shape1.line.width=Inches(0.01)
shape1.text="test\ntext"

# 连接
shape2=slide.shapes.add_connector(MSO_CONNECTOR.STRAIGHT,Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))
shape2=slide.shapes.add_connector(MSO_CONNECTOR.CURVE,Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))
shape2=slide.shapes.add_connector(MSO_CONNECTOR.ELBOW,Inches(5.0),Inches(5.0),Inches(1.0),Inches(1.0))

# 图片
shape1=slide.shapes.add_picture('test.png',Inches(5.0),Inches(5.0),Inches(1.0))

prs.save('output/test.pptx')

"""
+[P函数](,设置文本框)

"""
## end
#462, 607:
%{
+[M函数](,文本框)
参考1::https://www.mathworks.com/help/matlab/ref/matlab.graphics.shape.textbox-properties.html
参考2::https://www.mathworks.com/matlabcentral/answers/310815-specify-annotation-position-with-respect-to-x-and-y-axes-values
+[打开网页](,参考2)

做不出来PPT文本框的效果. textbox设计的时候就不是plot的一部分, 坐标无法统一. 所以将就一下吧. 
%}


rectangle('Position',[pt(1),pt(2),shape(1),shape(2)])
ha = annotation('textbox','String',str_text,'Interpreter','latex');
hf = gcf;
ha.Parent = hf.CurrentAxes;  % associate annotation with current axes
% ha.Position = [pt(1),pt(2)+shape(2),0.5,1];
ha.Position = [pt(1),pt(2),shape(1),shape(2)];


## end
#465, 540:
%{
+[M函数](,图片)
2D图片:...
3D图片:...
测试:...

保存:...
%}


try
    img = imread(dir_file);
    img=img(end:-1:1,:,:);
    shape(2)=shape(1)/size(img,2)*size(img,1);
    x=[pt(1),pt(1)+shape(1)];
    y=[pt(2),pt(2)+shape(2)];
    image(x,y,img);
    siz=shape;
    rectangle('Position',[pt(1),pt(2),shape(1),shape(2)],'lineWidth',2)

catch
    pos_text=pt+shape/2;
    text(pos_text(1),pos_text(2),dir_file,...
        'HorizontalAlignment','center', 'VerticalAlignment','middle');
    rectangle('Position',[pt(1),pt(2),shape(1),shape(2)])

end



## end
#468, 203:
%{
+[M函数](,矩形)
%}


rectangle('Position',[pt(1),pt(2),shape(1),shape(2)])
pos_text=pt+shape/2;
text(pos_text(1),pos_text(2),str_text,...
'HorizontalAlignment','center',...
'VerticalAlignment','middle')


## end
#471, 671:
+[返回目录](,测试文本框)
+[删除结构](,测试文本框)
+[显示星图](,测试文本框)

有一个矩形A
+的(+矩形A,+尺寸)->+在(+矩形A,+空间点)
的(矩形A,尺寸)->+[修改内容]"200,200"(,尺寸)
在(矩形A,空间点)->+[修改内容]"0,0"(,空间点)

有一个矩形B, 里面有文字
+的(+矩形B,+尺寸)->+在(+矩形B,+空间点)->+的(+矩形B,+内容)
的(矩形B,尺寸)->+[修改内容]"200,200"(,尺寸)
的(矩形B,内容)->+[修改内容]"hello world"(,内容)
+[相对]"200,0"(矩形A,矩形B)

有一个文本框
+的(+文本框,+尺寸)->+在(+文本框,+空间点)->+的(+文本框,+内容)->+样式"文本框"(+文本框,)
的(文本框,尺寸)->+[修改内容]"200,200"(,尺寸)
的(文本框,内容)->+[修改内容]"$$a\ x^2+b\ x+c=0$$
?????"(,内容)
+[相对]"0,200"(矩形A,文本框)

有一个图片
+的(+图片,+尺寸)->+在(+图片,+空间点)->+的(+图片,+图片地址)->+样式"图片"(+图片,)
的(图片,尺寸)->+[修改内容]"200,200"(,尺寸)
的(图片,图片地址)->+[修改内容]"test.png"(,图片地址)
+[相对]"200,200"(矩形A,图片)
图片=>在(图片,空间点)=>+[显示](,空间点)

+[显示PPT场景](,测试文本框)
## end
#473, 13:
文档\S应用\星图.txt
## end
#479, 3:
0,0
## end
#481, 7:
200,200
## end
#491, 11:
hello world
## end
#493, 10:
200.0, 0.0
## end
#495, 7:
200,200
## end
#506, 3:
文本框
## end
#507, 25:
$$a\ x^2+b\ x+c=0$$
?????
## end
#509, 10:
0.0, 200.0
## end
#511, 7:
200,200
## end
#515, 87:
https://www.mathworks.com/help/matlab/ref/matlab.graphics.shape.textbox-properties.html
## end
#517, 118:
https://www.mathworks.com/matlabcentral/answers/310815-specify-annotation-position-with-respect-to-x-and-y-axes-values
## end
#518, 3:
544
## end
#521, 85:
%{
+[M函数](,测试)
%}


% axes('pos',[.1 .6 .5 .3])
imshow('test.png')

plot((1:10).^2)


## end
#523, 639:
%{
+[M函数](,3D图片)
%}

figure
[xSphere,ySphere,zSphere] = sphere(16);          % Points on a sphere
scatter3(xSphere(:),ySphere(:),zSphere(:),'.');  % Plot the points
axis equal;   % Make the axes scales match
hold on;      % Add to the plot
xlabel('x');
ylabel('y');
zlabel('z');
img = imread('test.png');     % Load a sample image
xImage = [-0.5 0.5; -0.5 0.5];   % The x data for the image corners
yImage = [0 0; 0 0];             % The y data for the image corners
zImage = [0.5 0.5; -0.5 -0.5];   % The z data for the image corners
surf(xImage,yImage,zImage,...    % Plot the surface
     'CData',img,...
     'FaceColor','texturemap');
## end
#525, 241:
img = imread('test.png');             % Load a sample image
scatter(rand(1,20)-0.5,rand(1,20)-0.5);  % Plot some random data
hold on;                                 % Add to the plot
image([-0.1 0.1],[0.1 -0.1],img);        % Plot the image
## end
#534, 2:
图片
## end
#535, 8:
test.png
## end
#537, 12:
200.0, 200.0
## end
#539, 7:
200,200
## end
#543, 60:
https://python-pptx.readthedocs.io/en/latest/api/shapes.html
## end
#544, 3:
563
## end
#547, 151:
"""
+[返回目录](,更新图形)

库:...

"""

+更新图形(_类型,_图形)...
->的(更新图形,库)->的(库,_画图)->[eq](_类型,_画图)...
->+[做](+更新图形,_图形)->+[code](+[做],_画图)...

->+[del](,+更新图形)




## end
#549, 129:
+[返回目录](,库)
+[删除结构](,透镜)->+[del](,透镜)


镜子:...
矩形:...
折线:...
圆形:...

圆形的"镜子"替换为"圆形"
+[复制结构](,镜子)->+[粘贴](,库)->+[修改标题]"圆形"(,镜子)




## end
#551, 221:
"""
+[返回目录](,矩形)
M代码:...

"""

+矩形(更新图形,_图形)->+[del](,+矩形)...
->的(矩形,M代码)...
->的(_图形,x)->的(_图形,y)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"siz"(+[matlab],更新图形)...
->+[o](+[matlab],x)->+[o](+[matlab],y)



## end
#552, 505:
"""
+[返回目录](,方向)
+[复制结构](,方向)

"""

+方向(光线,)->起点(光线,_元件1)->[位置]#1(_元件1,)...
->终点(光线,_元件2)->[位置]#2(_元件2,)...
->+[.]"pt1"([python],[位置]#1)->+[.]"pt2"([python],[位置]#2)...
->[python]"dp=np.array(pt2)-np.array(pt1)
dp=dp/np.sqrt(np.sum(dp*dp))
ans=list(dp)
state=True"(Python,+方向); 

+方向(_元件1,_元件2)...
->[位置]#1(_元件1,)->[位置]#2(_元件2,)...
->+[.]"pt1"([python],[位置]#1)->+[.]"pt2"([python],[位置]#2)...
->[python]"dp=np.array(pt2)-np.array(pt1)
dp=dp/np.sqrt(np.sum(dp*dp))
ans=list(dp)
state=True"(Python,+方向); 





## end
#554, 3:
558
## end
#556, 3:
560
## end
#558, 3:
562
## end
#560, 3:
572
## end
#563, 528:
"""
+[返回目录](,描述)
库:...
Nini, 关于PPT, 你记得什么?
将库(节点)记作句子库
+[新建阅读窗口](,库)

是([名词库],名词)->+[打开文件](+新窗口,名词)

"""
+描述(_句子,_结构)->+[del](,+描述)...
->的(描述,库)...
->的(库,_模板)->的(_模板,匹配模板)->[模式匹配](匹配模板,_句子)...
->+[临时文本]->[]{
    []:->的(_模板,转述)->+[做](_句子,+[临时文本])->+[code](+[做],转述)...
    ->+匹配模板(+[做],匹配模板)->+[del](,+匹配模板),
    ->的(_模板,输出模板)->+[转述](_句子,+[临时文本])...
    ->+匹配模板(+[转述],匹配模板)->+[del](,+匹配模板)...
    ->+输出模板(+[转述],输出模板)->+[del](,+输出模板)
}...

->+[复制内容](,+[临时文本])->+[修改内容](+[临时文本],+[显示]):
    ->_结构->+[修改内容](+[临时文本],_结构),
    ->[]





## end
#565, 1123:
+[返回目录](,库)
+[复制结构](,设置图形)

设置图形:%[元件]都是(图形|点|曲线|图片|矩形|文本框)...
+[复制结构](,设置图形)
设置图形2:%[照片]是PPT图片...
设置图形3:%[图形]是多边形...
设置图形4:%[图形]是%[n]边形...
设置图形5:%[图形]是圆形...
设置图形6:%[图形]是照片...
+[复制结构](,设置图形4)->+[粘贴](,库)->+[修改标题]"设置图形6"(,设置图形4)

增加物体:%[场景]中新增%[n]个%[透镜](矩形)...
+[粘贴](,库)
+[复制结构](,增加物体)

相距:%[光斑]距离%[透镜]为\(%[位移]\)...
相距2:沿着%[M2]到%[Crystal]的方向, %[M1]相对%[Crystal]距离为%[54]...
对齐:%[M12]和%[Crystal]的%[Y]坐标对齐...
对齐X_1:%[B_3]沿着%[B_2]和%[焦点]的方向, 和%[相机]的%[X]坐标对齐...

更新图形:%[物体]是高%[高], 宽%[宽]的%[类型]...
更新图形2:%[句子]都是\(%[句子2]\)的%[类型]...
更新图形3:%[物体]是\(%[句子]\)的%[类型]...
更新图形4:更新%[物体]为\(%[句子]\)的%[类型]...
+[复制结构](,更新图形3)->+[粘贴](,库)->+[修改标题]"复制图形"(,更新图形3)

复制图形:...
+[del](,复制图形)

画折线:按%[光线]路径画折线...

直线:...
朝向:%[滤光片]朝向%[透镜]的(方向|角度)...
朝向2:...

设置矩形:%[物体]的%[性质]是["\(]%[内容]["\)]...
设置多边形:...

创建四边形:有一个四边形\(%[A],%[B],%[C],%[D]\)...
设置位置:%[A]在\(%[位置]\)...
设置位置2:%[A]在鼠标的位置...
设置位置3:...
+[复制结构](,设置位置2)->+[粘贴](,库)->+[修改标题]"设置位置3"(,设置位置2)
平移:将%[A]平移\(%[句子]\)...
移动:...
设置显示区域:...

查询位置:%[物体]在什么位置...
+[复制结构](,查询位置)
查询物体:...
查询距离:%[L1]到%[L2]的距离为多少...

显示PPT场景:显示%[光路]\(PPT场景\)...
显示PPT图形:...
+[复制结构](,显示PPT场景)->+[粘贴](,库)->+[修改标题]"显示PPT图形"(,显示PPT场景)


## end
#567, 181:
+[返回目录](,对齐X_1)

匹配模板::%[B_3]沿着%[B_2]和%[焦点]的方向, 和%[相机]的%[X]坐标对齐
输出模板::+[对齐%[X]](%[相机],%[B_3])->+[沿着](+[对齐%[X]],)->[方向](%[B_2],%[焦点])->[m_text]([方向],+[沿着])->+[从](+[对齐%[X]],%[B_2])



## end
#569, 105:
+[对齐%[X]](%[相机],%[B_3])->+[沿着](+[对齐X],)->[方向](%[B_2],%[焦点])->[m_text]([方向],+[沿着])->+[从](+[对齐%[X]],%[B_2])
## end
#571, 40:
%[B_3]沿着%[B_2]和%[焦点]的方向, 和%[相机]的%[X]坐标对齐
## end
#572, 3:
655
## end
#575, 74:
+[返回目录](,设置图形)


匹配模板::%[元件]都是(图形|点|曲线|图片|矩形|文本框)
转述:...
+[新建阅读窗口](,转述)



## end
#577, 26:
%[元件]都是(图形|点|曲线|图片|矩形|文本框)
## end
#579, 230:
"""
+[返回目录](,转述)
P代码:...

"""

+转述(_输入,_输出)->+[del](,+转述)...
->的(转述,P代码)->匹配模板(+转述,_匹配模板)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pat"(+[python],_匹配模板)->+[.]"sent"(+[python],_输入)...
->+[o]"code"(+[python],_输出)



## end
#581, 1082:
"""
+[P函数](,P代码)

测试(P函数):...

"""

words=re.findall('%(\[[^\[^\]]*\])',pat)
pat=re.sub('%\[[^\[^\]]*\]',r"([\\s\\S]*)",pat)
name=re.search(pat,sent)
elements=name.group(1)

if name.group(2)=="图形":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点"0,0"...
->+朝向(_,+方向)->+方向"0"...
->+样式"多边形"(_,)...
->+的(_,+x)->+的(_,+y)"""

elif name.group(2)=="曲线":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点"0,0"...
->+朝向(_,+方向)->+方向"0"...
->+样式"曲线"(_,)...
->+的(_,+x)->+的(_,+y)"""

elif name.group(2)=="点":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点\"0,0\""""

elif name.group(2)=="矩形":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点"0,0"...
->+的(_,+尺寸)->+尺寸\"1,1\""""

elif name.group(2)=="图片":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点"0,0"...
->+的(_,+尺寸)->+尺寸"1,1"...
->+样式"图片"(_,)->+的(_,+内容)"""

elif name.group(2)=="文本框":
    code=elements.replace(', ','->')+"""=>[那](_,)...
=>+在(_,+空间点)->+空间点"0,0"...
->+的(_,+尺寸)->+尺寸"1,1"...
->+样式"文本框"(_,)->+的(_,+内容)"""



## end
#583, 156:
+[返回目录](,相距)

匹配模板::%[光斑]距离%[透镜]为\(%[句子]\)
输出模板::%[光斑]->%[透镜]:->在(%[光斑],空间点)->空间点->+[相对]"%[句子]"(%[透镜],%[光斑]),
->+在(%[光斑],+空间点)->+[相对]"%[句子]"(%[透镜],%[光斑])



## end
#585, 22:
%[光斑]距离%[透镜]为\(%[句子]\)
## end
#587, 104:
%[光斑]->%[透镜]:->在(%[光斑],空间点)->空间点->+[相对]"%[句子]"(%[透镜],%[光斑]),
->+在(%[光斑],+空间点)->+[相对]"%[句子]"(%[透镜],%[光斑])
## end
#589, 106:
+[返回目录](,更新图形)


匹配模板::%[物体]是高%[高], 宽%[宽]的%[类型]
输出模板::+[更新图形]"%[宽],%[高]"(+%[类型],%[物体])->+[del](,+%[类型])



## end
#591, 49:
+[更新图形]"%[宽],%[高]"(+%[类型],%[物体])->+[del](,+%[类型])
## end
#593, 24:
%[物体]是高%[高], 宽%[宽]的%[类型]
## end
#595, 132:
+[返回目录](,直线)

匹配模板::%[光线]是直线\(%[A_1],%[A_2]\)
输出模板::
在(%[A_1],空间点#1)->+[左连](%[光线],空间点#1)...
->在(%[A_2],空间点#2)->+[右连](%[光线],空间点#2)



## end
#597, 25:
%[光线]是直线\(%[A_1],%[A_2]\)
## end
#599, 77:

在(%[A_1],空间点#1)->+[左连](%[光线],空间点#1)...
->在(%[A_2],空间点#2)->+[右连](%[光线],空间点#2)
## end
#601, 108:
%{
+[M函数](,镜子)
%}

% siz=[5,20];
angle=45;
D=siz(1);
L=siz(2);
x=[0,-D,-D,0,0];
y=[-L/2,-L/2,L/2,L/2,-L/2];

## end
#603, 346:
"""
+[返回目录](,朝向)

"""

+朝向(_相机,_物体)->+[del](,+朝向)...
->[位置](_相机,)->是([位置],空间点#1)...
->[位置](_物体,)->是([位置],空间点#2)...
->的(_相机,x)->朝向(_相机,方向)...

->+[matlab]"
dr=p0-r0;
dr=dr/norm(dr);
angle=acosd(dr(1));
if dr(2)~=0
    angle=angle*sign(dr(2));
end
"(Matlab,)...
->+[.]"p0"(+[matlab],空间点#2)->+[.]"r0"(+[matlab],空间点#1)...
->+[o]"angle"(+[matlab],方向)

## end
#605, 81:
+[返回目录](,朝向)
+[复制结构](,朝向)

匹配模板::^%[滤光片]朝向%[透镜]的(方向|角度)$
转述:...
+[新建阅读窗口](,转述)



## end
#607, 23:
^%[滤光片]朝向%[透镜]的(方向|角度)$
## end
#609, 230:
"""
+[返回目录](,转述)
P代码:...

"""

+转述(_输入,_输出)->+[del](,+转述)...
->的(转述,P代码)->匹配模板(+转述,_匹配模板)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pat"(+[python],_匹配模板)->+[.]"sent"(+[python],_输入)...
->+[o]"code"(+[python],_输出)



## end
#611, 341:
"""
+[P函数](,P代码)

测试(P函数):...

"""

words=re.findall('%(\[[^\[^\]]*\])',pat)
pat=re.sub('%\[[^\[^\]]*\]',r"([\\s\\S]*)",pat)
name=re.search(pat,sent)
obj=name.group(1)
angle=name.group(2)
type_an=name.group(3)

if type_an=="方向":
    code="+[朝向](%s,%s)"%(obj,angle)
elif type_an=="角度":
    code="朝向(%s,方向)->+[修改内容]\"%s\"(,方向)"%(obj,angle)




## end
#613, 144:
+[返回目录](,设置矩形)


匹配模板::%[物体]的%[性质]是["\(]%[内容]["\)]
输出模板::%[物体]:->的(%[物体],%[性质]#1),->+的(%[物体],+%[性质]);
的(%[物体],%[性质])->+[修改内容]"%[内容]"(,%[性质])




## end
#615, 27:
%[物体]的%[性质]是["\(]%[内容]["\)]
## end
#617, 83:
%[物体]:->的(%[物体],%[性质]#1),->+的(%[物体],+%[性质]);
的(%[物体],%[性质])->+[修改内容]"%[内容]"(,%[性质])
## end
#619, 196:
+[返回目录](,创建四边形)


匹配模板::有一个四边形\(%[A],%[B],%[C],%[D]\)
输出模板::在(%[A],空间点#A)->在(%[B],空间点#B)->在(%[C],空间点#C)->在(%[D],空间点#D)...
->+边(空间点#A,空间点#B)->+边(空间点#B,空间点#C)...
->+边(空间点#C,空间点#D)->+边(空间点#D,空间点#A)


## end
#621, 29:
有一个四边形\(%[A],%[B],%[C],%[D]\)
## end
#623, 134:
在(%[A],空间点#A)->在(%[B],空间点#B)->在(%[C],空间点#C)->在(%[D],空间点#D)...
->+边(空间点#A,空间点#B)->+边(空间点#B,空间点#C)...
->+边(空间点#C,空间点#D)->+边(空间点#D,空间点#A)
## end
#625, 131:
+[返回目录](,设置位置)


匹配模板::%[A]在\(%[句子]\)
输出模板::%[A]->[]{[]:->在(%[A],空间点)->空间点->+[修改内容]"%[句子]"(,空间点),
->+在(%[A],+空间点)->+空间点"%[句子]"}




## end
#627, 14:
%[A]在\(%[句子]\)
## end
#629, 83:
%[A]->[]{[]:->在(%[A],空间点)->空间点->+[修改内容]"%[句子]"(,空间点),
->+在(%[A],+空间点)->+空间点"%[句子]"}
## end
#631, 83:
+[返回目录](,设置显示区域)


匹配模板::显示区域\(%[区域]\)
输出模板::+[matlab]"axis([%[区域]])"(Matlab,)





## end
#633, 33:
+[matlab]"axis([%[区域]])"(Matlab,)
## end
#635, 13:
显示区域\(%[区域]\)
## end
#637, 87:


匹配模板::^%[A]在%[鼠标]的位置$
输出模板::在(%[A],空间点)->在(%[鼠标],空间点#2)...
->+[修改内容](空间点#2,空间点)






## end
#639, 15:
^%[A]在%[鼠标]的位置$
## end
#641, 51:
在(%[A],空间点)->在(%[鼠标],空间点#2)...
->+[修改内容](空间点#2,空间点)
## end
#642, 3:
648
## end
#644, 3:
654
## end
#646, 3:
652
## end
#648, 3:
654
## end
#650, 3:
656
## end
#652, 3:
658
## end
#654, 3:
660
## end
#656, 3:
667
## end
#659, 265:
"""
+[返回目录](,显示图形名称)
M代码(M函数)::text(pt(1),pt(2),name)

"""

+显示图形名称(,_布局)->+[del](,+显示图形名称)...
->的(显示图形名称,M代码)...

=>的(_布局,_物体)->在(_物体,空间点)...
=>+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"name"(+[matlab],+[标题])->+[.]"pt"(+[matlab],空间点)



## end
#661, 22:
text(pt(1),pt(2),name)
## end
#663, 3:
669
## end
#665, 3:
667
## end
#667, 3:
672
## end
#669, 3:
671
## end
#671, 3:
676
## end
#673, 3:
677
## end
#675, 3:
686
## end
#678, 197:
"""
M代码(M函数):...
+[修改标题]"倍率"(,倍数)

"""

+倍率(_输入,_输出)...
->的(倍率,M代码)->+[code]([matlab],M代码)...
->+[.]"r"([matlab],+倍率)->+[.]"input"([matlab],_输入)->+[o]"output"([matlab],_输出)...
->[matlab](Matlab,)


## end
#680, 44:
%{
+[M函数](,M代码)
%}

state=1;
output=input*r;
## end
#683, 271:
"""
测试:...

"""

# 设置界面
siz_0=[%尺寸]
orig=[%空间点]

ratio=Inches(7.5)/siz_0[1]/Pt(1)

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(7.5*siz_0[0]/siz_0[1])

blank_slide_layout = prs.slide_layouts[6]
slide = prs.slides.add_slide(blank_slide_layout)

## end
#684, 3:
686
## end
#686, 3:
692
## end
#689, 65:
"""
+[P函数](,测试)

"""

print(Inches(7.5))
print(Pt(7.5/Pt(7.5)))


## end
#691, 632:
"""


"""

+显示PPT图形(,_物体)...
->显示PPT图形->的(动词,显示PPT图形)->的(动词,显示PPT场景)...
->的(显示PPT场景,库)...

->Matlab{
    []:->[==](,+显示PPT图形),
    ->+[matlab]"figure(n)"(Matlab,)->+[.]"n"(+[matlab],+显示PPT图形)
}->+[del](,+显示PPT图形)...
->+[matlab]"hold on;axis equal"(Matlab,)...


->的(库,显示矩形)->的(库,显示图形)->的(库,显示直线)->的(库,显示点):

    ->的(_物体,尺寸)->+[做](,_物体)->+[code](+[做],显示矩形),
    ->朝向(_物体,方向)->+[做](,_物体)->+[code](+[做],显示图形),
    ->的(_物体,x)->+[做](,_物体)->+[code](+[做],显示图形),
    ->在(_物体,空间点#6)->空间点#6->+[做](,_物体)->+[code](+[做],显示点),
    ->[is](_物体,_直线)->_直线(空间点#1,空间点#2)->空间点#1->空间点#2->[位置](空间点#1,)->[位置](空间点#2,)...
    ->+[做](,_物体)->+[code](+[做],显示直线)
## end
#692, 3:
694
## end
#694, 3:
696
## end
#696, 3:
698
## end
#698, 3:
712
## end
#701, 174:
+[返回目录](,相距2)


匹配模板::沿着%[M2]到%[Crystal]的方向, %[M1]相对%[Crystal2]距离为%[54]
输出模板::+[相对]"%[54]"(%[Crystal2],%[M1])->+[沿着](+[相对],)->[方向](%[M2],%[Crystal])->[m_text]([方向],+[沿着])




## end
#703, 49:
沿着%[M2]到%[Crystal]的方向, %[M1]相对%[Crystal2]距离为%[54]
## end
#705, 92:
+[相对]"%[54]"(%[Crystal2],%[M1])->+[沿着](+[相对],)->[方向](%[M2],%[Crystal])->[m_text]([方向],+[沿着])
## end
#707, 88:
+[返回目录](,对齐)

匹配模板::^%[M12]和%[Crystal]的%[Y]坐标对齐$
输出模板::+[对齐%[Y]](%[Crystal],%[M12])





## end
#709, 28:
^%[M12]和%[Crystal]的%[Y]坐标对齐$
## end
#711, 28:
+[对齐%[Y]](%[Crystal],%[M12])
## end
#712, 3:
714
## end
#714, 3:
721
## end
#717, 82:
+[返回目录](,示例)
Nini, PPT的输出PPT是什么?


输出PPT:...
将输出PPT(节点)记作输出PPT

合并图形:...
图形剪切:...

## end
#719, 213:
PPT::output\test.pptx
+的(PPT,+屏幕)
+[PPT场景输出](PPT,PPT)
+[打开](,PPT)
光束, 光束1, 光束2, 都是PPT的一部分
iris, L1, L2, L3, L4, 屏幕, 都是PPT的一部分

窗口::
窗口都是矩形
窗口的尺寸是(450,200). 窗口在(0,-100). PPT的屏幕是窗口
+[显示PPT场景](,PPT)
+[显示PPT图形](,窗口)


## end
#720, 3:
734
## end
#723, 66:
匹配模板::%[物体]在什么位置
输出模板::在(%[物体],空间点)->+[消息窗口](,空间点)->+[显示](,空间点)



## end
#725, 10:
%[物体]在什么位置
## end
#727, 40:
在(%[物体],空间点)->+[消息窗口](,空间点)->+[显示](,空间点)
## end
#729, 149:
匹配模板::%[场景]中有哪些物体
输出模板::+[临时文本]"%[场景]: "{[]=>_物体{在(_物体,)}=>+[标题](_物体,)->+[增加内容]", "(+[标题],+[临时文本])}->+[修改内容](+[临时文本],+[显示])->+[修改内容](+[临时文本],+[消息窗口])
## end
#731, 11:
%[场景]中有哪些物体
## end
#733, 120:
+[临时文本]"%[场景]: "{[]=>在(_物体,)=>+[标题](_物体,)->+[增加内容]", "(+[标题],+[临时文本])}->+[修改内容](+[临时文本],+[显示])->+[修改内容](+[临时文本],+[消息窗口])
## end
#734, 3:
736
## end
#737, 239:
+[返回目录](,查询距离)

匹配模板::^%[L1]到%[L2]的距离为多少$
输出模板::在(%[L1],空间点#1)->在(%[L2],空间点#2)...
->+[matlab]"ans=norm(pt1-pt2);"(Matlab,+[临时文本])...
->+[.]"pt1"(+[matlab],空间点#1)->+[.]"pt2"(+[matlab],空间点#2)...
->+[增加内容]"%[L1]->%[L2]: "(+[临时文本],+[消息窗口])




## end
#739, 23:
^%[L1]到%[L2]的距离(为|是)多少$
## end
#741, 187:
在(%[L1],空间点#1)->在(%[L2],空间点#2)...
->+[matlab]"ans=norm(pt1-pt2);"(Matlab,+[临时文本])...
->+[.]"pt1"(+[matlab],空间点#1)->+[.]"pt2"(+[matlab],空间点#2)...
->+[增加内容]"%[L1]->%[L2]: "(+[临时文本],+[消息窗口])
## end
#742, 3:
744
## end
#744, 3:
746
## end
#746, 3:
754
## end
#749, 56:
匹配模板::^将%[A]平移\(%[句子]\)$
输出模板::+[相对]"%[句子]"(%[A],%[A])


## end
#751, 18:
^将%[A]平移\(%[句子]\)$
## end
#753, 23:
+[相对]"%[句子]"(%[A],%[A])
## end
#754, 3:
756
## end
#756, 3:
758
## end
#758, 3:
760
## end
#760, 3:
762
## end
#762, 3:
764
## end
#764, 3:
786
## end
#767, 88:


匹配模板::%[照片]是PPT图片
输出模板::%[照片]:->样式(%[照片],)->+[修改内容]"图片"(,样式),
    ->+样式"图片"(%[照片],)



## end
#769, 11:
%[照片]是PPT图片
## end
#771, 59:
%[照片]:->样式(%[照片],)->+[修改内容]"图片"(,样式),
    ->+样式"图片"(%[照片],)
## end
#773, 88:


匹配模板::%[图形]是多边形
输出模板::%[图形]:->样式(%[图形],)->+[修改内容]"多边形"(,样式),
    ->+样式"多边形"(%[图形],)



## end
#775, 9:
%[图形]是多边形
## end
#777, 61:
%[图形]:->样式(%[图形],)->+[修改内容]"多边形"(,样式),
    ->+样式"多边形"(%[图形],)
## end
#779, 254:


匹配模板::%[图形]是圆形
输出模板::%[图形]:->样式(%[图形],)->+[修改内容]"多边形"(,样式),
    ->+样式"多边形"(%[图形],);
%[图形]:->的(%[图形],x),
    ->+的(%[图形],+x)->+的(%[图形],+y)->+的(%[图形],+z);
%[图形]:->的(%[图形],半径),
    ->+的(%[图形],+半径);
%[图形]:->在(%[图形],空间点),
    ->+在(%[图形],+空间点)->+空间点"0,0";




## end
#781, 344:
"""
M代码(M函数):...

"""

+设置n边形(,_多边形)...
->的(设置n边形,M代码)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"n"(+[matlab],+设置n边形)->+[del](,+设置n边形)...

->[]{
    []:->的(_多边形,x)->x->+[o](+[matlab],x),
    ->+的(_多边形,+x)->+[o](+[matlab],+x)
}...

->[]{
    []:->的(_多边形,y)->y->+[o](+[matlab],y),
    ->+的(_多边形,+y)->+[o](+[matlab],+y)
}









## end
#783, 184:
%{
+[M函数](,M代码)
%}

if numel(n)==1
    theta=linspace(0,360,n+1);
    theta(end)=[];
    x=0.1*cosd(theta);
    y=0.1*sind(theta);
elseif size(n,1)==2
    x=n(1,:);
    y=n(2,:);
end


## end
#785, 3:
787
## end
#787, 3:
789
## end
#789, 3:
797
## end
#792, 50:

匹配模板::%[外壳]是%[n]边形
输出模板::+[设置n边形]"%[n]"(,%[外壳])


## end
#794, 12:
%[外壳]是%[n]边形
## end
#796, 22:
+[设置n边形]"%[n]"(,%[外壳])
## end
#797, 3:
799
## end
#799, 3:
844
## end
#802, 43:


匹配模板::^%[句子]都是\(%[句子2]\)的%[类型]$
转述:...



## end
#804, 25:
^%[句子]都是\(%[句子2]\)的%[类型]$
## end
#806, 230:
"""
+[返回目录](,转述)
P代码:...

"""

+转述(_输入,_输出)->+[del](,+转述)...
->的(转述,P代码)->匹配模板(+转述,_匹配模板)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pat"(+[python],_匹配模板)->+[.]"sent"(+[python],_输入)...
->+[o]"code"(+[python],_输出)



## end
#808, 333:
"""
+[P函数](,P代码)

测试(P函数):...

"""

words=re.findall('%(\[[^\[^\]]*\])',pat)
pat=re.sub('%\[[^\[^\]]*\]',r"([\\s\\S]*)",pat)
name=re.search(pat,sent)
elements=name.group(1)
paras=name.group(2)
type_obj=name.group(3)

code=elements.replace(', ','->')+"""=>[那](_,)...
=>+[更新图形]"{0}"(+{1},_)->+[del](,+{1})""".format(paras,type_obj)




## end
#809, 61:
%{
+[M函数](,M代码)
%}

x=pts(end:-1:1,1)';
y=pts(end:-1:1,2)';


## end
#811, 499:
"""
+[返回目录](,折线)
M代码:...

"""

+折线(更新图形,_图形)->+[del](,+折线)...
->的(折线,M代码)...

->的(_图形,路径)->路径(,_光路)...
->+[临时文本]->[]{
    []=>的(_光路,_元件)->_元件->在(_元件,空间点)=>+[增加内容]";"(空间点,+[临时文本])
}...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"pts"(+[matlab],+[临时文本])...
->[]{
    []:->的(_图形,x)->x->+[o](+[matlab],x),
    ->+的(_图形,+x)->+[o](+[matlab],+x)
}...
->[]{
    []:->的(_图形,y)->y->+[o](+[matlab],y),
    ->+的(_图形,+y)->+[o](+[matlab],+y)
}:
    ->样式(_图形,)->+[修改内容]"曲线"(,样式),
    ->+样式"曲线"(_图形,)



## end
#814, 87:


匹配模板::^更新%[物体]为\(%[句子]\)的%[类型]$
输出模板::+[更新图形]"%[句子]"(+%[类型],%[物体])->+[del](,+%[类型])


## end
#816, 25:
^更新%[物体]为\(%[句子]\)的%[类型]$
## end
#818, 45:
+[更新图形]"%[句子]"(+%[类型],%[物体])->+[del](,+%[类型])
## end
#820, 42:


匹配模板::^%[句子]都朝向%[透镜]的(方向|角度)$
转述:...




## end
#822, 230:
"""
+[返回目录](,转述)
P代码:...

"""

+转述(_输入,_输出)->+[del](,+转述)...
->的(转述,P代码)->匹配模板(+转述,_匹配模板)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pat"(+[python],_匹配模板)->+[.]"sent"(+[python],_输入)...
->+[o]"code"(+[python],_输出)



## end
#824, 399:
"""
+[P函数](,P代码)

测试(P函数):...

print(objs)

"""

words=re.findall('%(\[[^\[^\]]*\])',pat)
pat=re.sub('%\[[^\[^\]]*\]',r"([\\s\\S]*)",pat)
name=re.search(pat,sent)
objs=name.group(1)
angle=name.group(2)
type_an=name.group(3)

code=objs.replace(', ','->')+"""=>[那](_,)...
=>"""

if type_an=="方向":
    code+="+[朝向](_,%s)"%(angle)
elif type_an=="角度":
    code+="朝向(_,方向)->+[修改内容]\"%s\"(,方向)"%(angle)




## end
#826, 23:
^%[句子]都朝向%[透镜]的(方向|角度)$
## end
#828, 29:
"""
M代码(M函数):...

"""

+画折线


## end
#832, 78:
%{
+[M函数](,镜子)
%}

R=siz(1);
t=linspace(0,360,100);
x=R*cosd(t);
y=R*sind(t);

## end
#834, 221:
"""
+[返回目录](,圆形)
M代码:...

"""

+圆形(更新图形,_图形)->+[del](,+圆形)...
->的(圆形,M代码)...
->的(_图形,x)->的(_图形,y)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"siz"(+[matlab],更新图形)...
->+[o](+[matlab],x)->+[o](+[matlab],y)



## end
#837, 62:


匹配模板::^按%[光线]路径画折线$
输出模板::+[更新图形](+折线,%[光线])->+[del](,+折线)


## end
#839, 13:
^按%[光线]路径画折线$
## end
#841, 32:
+[更新图形](+折线,%[光线])->+[del](,+折线)
## end
#842, 3:
847
## end
#845, 55203:
"""
测试:...

"""

# 设置界面
siz_0=[52.5, 23.685988955485218]
orig=[-50.0, -11.092994477742609]

ratio=Inches(7.5)/siz_0[1]/Pt(1)

prs = Presentation()
prs.slide_height=Inches(7.5)
prs.slide_width=Inches(7.5*siz_0[0]/siz_0[1])

blank_slide_layout = prs.slide_layouts[6]
slide = prs.slides.add_slide(blank_slide_layout)

# GasCell
pos=[0.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 0.0, 2.5, 2.5])
y=np.array([-0.5, 0.5, 0.5, -0.5])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# 磁场
pos=[-10.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 0.0, 3.0, 3.0])
y=np.array([-1.5, 1.5, 1.5, -1.5])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A1
pos=[-20,1]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A2
pos=[-20.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A3
pos=[-20.0, -1.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A4
pos=[-20.0, -2.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A5
pos=[-20.0, -3.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A6
pos=[-20.0, -4.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A1
pos=[-30,1]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A2
pos=[-30.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A3
pos=[-30.0, -1.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A4
pos=[-30.0, -2.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A5
pos=[-30.0, -3.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# A6
pos=[-30.0, -4.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.2, 0.1995973352943769, 0.19839096256615907, 0.19638573945254134, 0.19358974027927126, 0.1900142235481891, 0.18567358660321454, 0.18058530765732428, 0.174769875413957, 0.16825070656623625, 0.16105405150621172, 0.1532088886237956, 0.14474680762101405, 0.13570188231142644, 0.1261105334169045, 0.11601138191423964, 0.1054450935221005, 0.09445421495453654, 0.08308300260037729, 0.07137724431837436, 0.059384075065654955, 0.04715178710188546, 0.034729635533386066, 0.02216763998020219, 0.009516383164748482, -0.0031731927669615767, -0.0158499913713577, -0.028462967654657046, -0.04096133361303812, -0.053294762738007, -0.06541359266348433, -0.07726902513862575, -0.08881332252115481, -0.1, -0.11078401277322206, -0.12112193742753333, -0.130972146789057, -0.14029497754126424, -0.14905288993515095, -0.15721061894855748, -0.1647353162859666, -0.17159668264699543, -0.17776708973098468, -0.18322169148641396, -0.1879385241571817, -0.1918985947228995, -0.19508595737708143, -0.19748777773527887, -0.19909438451461692, -0.19989930847663703, -0.19989930847663703, -0.19909438451461692, -0.19748777773527887, -0.19508595737708143, -0.1918985947228995, -0.1879385241571817, -0.18322169148641396, -0.17776708973098468, -0.17159668264699543, -0.1647353162859666, -0.15721061894855748, -0.14905288993515095, -0.14029497754126424, -0.130972146789057, -0.12112193742753337, -0.11078401277322203, -0.1, -0.08881332252115487, -0.07726902513862571, -0.06541359266348433, -0.05329476273800704, -0.04096133361303812, -0.028462967654657046, -0.015849991371357747, -0.003173192766961676, 0.00951638316474853, 0.02216763998020224, 0.034729635533386066, 0.04715178710188542, 0.05938407506565491, 0.07137724431837444, 0.08308300260037733, 0.09445421495453656, 0.10544509352210048, 0.1160113819142396, 0.12611053341690445, 0.1357018823114265, 0.14474680762101408, 0.1532088886237956, 0.16105405150621172, 0.1682507065662362, 0.17476987541395705, 0.18058530765732428, 0.18567358660321454, 0.1900142235481891, 0.19358974027927126, 0.19638573945254134, 0.19839096256615907, 0.1995973352943769, 0.2])
y=np.array([0.0, 0.012684783931312902, 0.025318490714749856, 0.03785024887208204, 0.05022959743621585, 0.062406689139697435, 0.07433249113206551, 0.08595898241783433, 0.09723934722009375, 0.10812816349111952, 0.1185815858109281, 0.12855752193730785, 0.13801580229642238, 0.14691834173150667, 0.15522929285835138, 0.16291519041006716, 0.16994508598990288, 0.17629067268951643, 0.1819263990709037, 0.18682957205302136, 0.19098044828881477, 0.19436231366470835, 0.1969615506024416, 0.19876769289225082, 0.1997734678366016, 0.19997482553477502, 0.1993709551903885, 0.19796428837618654, 0.19576048924295575, 0.19276843171198843, 0.1890001637429337, 0.1844708588209163, 0.1791987548582672, 0.17320508075688773, 0.16651397092695427, 0.15915236810616645, 0.1511499148708517, 0.1425388342757726, 0.1333538001032583, 0.12363179724412106, 0.1134119727725541, 0.10273547831468127, 0.09164530434548211, 0.0801861070813227, 0.06840402866513375, 0.05634651136828597, 0.044062106557308106, 0.03160027919466999, 0.01901120866083658, 0.006345586699613513, -0.006345586699613513, -0.01901120866083658, -0.03160027919466999, -0.044062106557308106, -0.05634651136828597, -0.06840402866513375, -0.0801861070813227, -0.09164530434548211, -0.10273547831468127, -0.1134119727725541, -0.12363179724412106, -0.1333538001032583, -0.1425388342757726, -0.1511499148708517, -0.1591523681061664, -0.1665139709269543, -0.17320508075688773, -0.17919875485826717, -0.1844708588209163, -0.1890001637429337, -0.19276843171198843, -0.19576048924295575, -0.19796428837618654, -0.19937095519038847, -0.19997482553477502, -0.1997734678366016, -0.19876769289225082, -0.1969615506024416, -0.19436231366470835, -0.1909804482888148, -0.1868295720530213, -0.18192639907090366, -0.1762906726895164, -0.16994508598990288, -0.1629151904100672, -0.1552292928583514, -0.1469183417315066, -0.13801580229642238, -0.12855752193730785, -0.11858158581092813, -0.10812816349111959, -0.09723934722009367, -0.08595898241783428, -0.0743324911320655, -0.062406689139697435, -0.05022959743621589, -0.03785024887208213, -0.025318490714749783, -0.012684783931312865, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# IP
pos=[-50.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 0.0, 0.1, 0.1])
y=np.array([-7.5, 7.5, 7.5, -7.5])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# 光线
pos=[0,0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([-50.0, -50.0, 0.0])
y=np.array([-0.2, 0.2, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# 光线
pos=[0,0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([-8.5, -50.0, -50.0, -8.5, 0.0])
y=np.array([-0.05, -5.2, -1.2, 0.05, 0.0])
ppt_draw_多边形(slide,x,y,pos,-0*np.pi/180,ratio)

# L0
pos=[-8.5,6]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 8.5, nan, 7.5, 8.5, 7.5, nan, 1.0, 0.0, 1.0])
y=np.array([0.0, 0.0, nan, -0.5, 0.0, 0.5, nan, 0.5, 0.0, -0.5])
ppt_draw_曲线(slide,x,y,pos,-0*np.pi/180,ratio)

# L1
pos=[-30,6]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 21.5, nan, 20.5, 21.5, 20.5, nan, 1.0, 0.0, 1.0])
y=np.array([0.0, 0.0, nan, -0.5, 0.0, 0.5, nan, 0.5, 0.0, -0.5])
ppt_draw_曲线(slide,x,y,pos,-0*np.pi/180,ratio)

# L1B
pos=[-20,4.5]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 11.5, nan, 10.5, 11.5, 10.5, nan, 1.0, 0.0, 1.0])
y=np.array([0.0, 0.0, nan, -0.5, 0.0, 0.5, nan, 0.5, 0.0, -0.5])
ppt_draw_曲线(slide,x,y,pos,-0*np.pi/180,ratio)

# L2
pos=[-50,6]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 20.0, nan, 19.0, 20.0, 19.0, nan, 1.0, 0.0, 1.0])
y=np.array([0.0, 0.0, nan, -0.5, 0.0, 0.5, nan, 0.5, 0.0, -0.5])
ppt_draw_曲线(slide,x,y,pos,-0*np.pi/180,ratio)

# 虚线g
pos=[0.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 7.0])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,-90*np.pi/180,ratio)

# 虚线m
pos=[-8.5,0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 7.0])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,-90*np.pi/180,ratio)

# 虚线f1
pos=[-20.0, 0.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 5.0])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,-90*np.pi/180,ratio)

# 虚线f2
pos=[-30,0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 7.0])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,-90*np.pi/180,ratio)

# D
pos=[-10,-2]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 3.0, nan, 2.5, 3.0, 2.5, nan, 0.5, 0.0, 0.5])
y=np.array([0.0, 0.0, nan, -0.25, 0.0, 0.25, nan, 0.25, 0.0, -0.25])
ppt_draw_曲线(slide,x,y,pos,-0*np.pi/180,ratio)

# 虚线m1
pos=[-10.0, -1.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 1.5])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,--90*np.pi/180,ratio)

# 虚线m2
pos=[-7.0, -1.0]
pos=[(pos[0]-orig[0]),(siz_0[1]-pos[1]+orig[1])]
x=np.array([0.0, 1.5])
y=np.array([0.0, 0.0])
ppt_draw_多边形(slide,x,y,pos,--90*np.pi/180,ratio)

## end
#846, 3:
864
## end
#848, 88:


匹配模板::^%[图形]是照片$
输出模板::%[图形]:->样式(%[图形],)->+[修改内容]"图片"(,样式),
    ->+样式"图片"(%[图形],);



## end
#851, 8:
%[图形]是圆形
## end
#853, 227:
%[图形]:->样式(%[图形],)->+[修改内容]"多边形"(,样式),
    ->+样式"多边形"(%[图形],);
%[图形]:->的(%[图形],x),
    ->+的(%[图形],+x)->+的(%[图形],+y)->+的(%[图形],+z);
%[图形]:->的(%[图形],半径),
    ->+的(%[图形],+半径);
%[图形]:->在(%[图形],空间点),
    ->+在(%[图形],+空间点)->+空间点"0,0";
## end
#854, 108:
%{
+[M函数](,镜子)
%}

% siz=[5,20];
angle=45;
D=siz(1);
L=siz(2);
x=[0,-D,-D,0,0];
y=[-L/2,-L/2,L/2,L/2,-L/2];

## end
#856, 221:
"""
+[返回目录](,镜子)
M代码:...

"""

+镜子(更新图形,_图形)->+[del](,+镜子)...
->的(镜子,M代码)...
->的(_图形,x)->的(_图形,y)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"siz"(+[matlab],更新图形)...
->+[o](+[matlab],x)->+[o](+[matlab],y)



## end
#858, 86:
的(%[物体A],x)->的(%[物体B],x#2)->+[修改内容](x,x#2);
的(%[物体A],y)->的(%[物体B],y#2)->+[修改内容](y,y#2)
## end
#859, 23:
^%[物体A]复制为%[物体B]\(图形\)$
## end
#862, 126:


匹配模板::^%[物体A]复制为%[物体B]\(图形\)$
输出模板::的(%[物体A],x)->的(%[物体B],x#2)->+[修改内容](x,x#2);
的(%[物体A],y)->的(%[物体B],y#2)->+[修改内容](y,y#2)


## end
#864, 3:
866
## end
#866, 92:


匹配模板::%[图形]是%[n]边形
输出模板::%[图形]:->样式(%[图形],)->+[修改内容]"多边形"(,样式),
    ->+样式"多边形"(%[图形],);



## end
#869, 10:
^%[图形]是照片$
## end
#871, 60:
%[图形]:->样式(%[图形],)->+[修改内容]"图片"(,样式),
    ->+样式"图片"(%[图形],);
## end
#872, 3:
874
## end
#874, 3:
876
## end
#876, 23:
^%[物体]是\(%[句子]\)的%[类型]$
## end
#877, 45:
+[更新图形]"%[句子]"(+%[类型],%[物体])->+[del](,+%[类型])
## end
#880, 85:


匹配模板::^%[物体]是\(%[句子]\)的%[类型]$
输出模板::+[更新图形]"%[句子]"(+%[类型],%[物体])->+[del](,+%[类型])


## end
#882, 3:
884
## end
#884, 3:
895
## end
#886, 493:
"""
+[P函数](,P代码)

测试(P函数):...

"""

words=re.findall('%(\[[^\[^\]]*\])',pat)
pat=re.sub('%\[[^\[^\]]*\]',r"([\\s\\S]*)",pat)
name=re.search(pat,sent)
scene=name.group(1)
n=int(name.group(2))
obj=name.group(3)

code_part=""
list_code=[]
for i in range(n):
    code_part="""+[有]({0},+{2}{1})->+在(+{2}{1},+空间点#{1})->+空间点#{1}"0,0"...
->+的(+{2}{1},+尺寸#{1})->+尺寸#{1}"1,1"...
->+样式"矩形"(+{2}{1},)->+的(+{2}{1},+内容#{1})""".format(scene,i,obj)
    list_code.append(code_part)
code="->".join(list_code)



## end
#888, 246:
"""
+[返回目录](,转述)
P代码:...
+[新建阅读窗口](,P代码)

"""

+转述(_输入,_输出)->+[del](,+转述)...
->的(转述,P代码)->匹配模板(+转述,_匹配模板)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pat"(+[python],_匹配模板)->+[.]"sent"(+[python],_输入)...
->+[o]"code"(+[python],_输出)



## end
#889, 26:
^%[场景]中新增%[n]个%[透镜]\(矩形\)$
## end
#892, 58:
+[复制结构](,增加物体)

匹配模板::^%[场景]中新增%[n]个%[透镜]\(矩形\)$
转述:...



## end
#894, 3:
899
## end
#897, 88:
https://python-pptx.readthedocs.io/en/latest/api/shapes.html#pptx.shapes.autoshape.Shape
## end
#900, 89:
https://python-pptx.readthedocs.io/en/latest/user/text.html#applying-character-formatting
## end
#902, 532:




left = Inches(1.0)
top = Inches(3.9)
width = Inches(1.2)
height = Inches(2.5)
shape = shapes.add_shape(
MSO_SHAPE.RECTANGLE, left, top, width, height
)
fill = shape.fill
fill.solid()
fill.fore_color.rgb = RGBColor(226, 206, 72)  # This RGB code is the background color that I want the shape to be in 
fill.fore_color.brightness = -0.3
text_frame = shape.text_frame
text_frame.clear()
p = text_frame.paragraphs[0]
run = p.add_run()
run.text = 'Test message'
font = run.font
font.name = 'Arial'
font.size = Pt(16)
font.bold = True
## end
#904, 3:
906
## end
#912, 3:
914
## end
#914, 3:
926
## end
#921, 115:

匹配模板::^%[圆弧]移动到%[圆]的位置$
输出模板::在(%[圆]#1,空间点#1)->在(%[圆弧]#2,空间点#2)...
->+[修改内容](空间点#1,空间点#2)->+[显示PPT图形](,%[圆弧]#2)



## end
#923, 17:
^%[圆弧]移动到%[圆]的位置$
## end
#925, 81:
在(%[圆]#1,空间点#1)->在(%[圆弧]#2,空间点#2)...
->+[修改内容](空间点#1,空间点#2)->+[显示PPT图形](,%[圆弧]#2)
## end
#926, 106:
在(%[A],空间点)...
->+[matlab]"pos=get(gca,'CurrentPoint');pos=pos([1,3]);"(Matlab,)->+[o]"pos"(+[matlab],空间点)
## end
#927, 12:
^%[A]在鼠标的位置$
## end
#930, 155:
+[返回目录](,设置位置2)


匹配模板::^%[A]在鼠标的位置$
输出模板::在(%[A],空间点)...
->+[matlab]"pos=get(gca,'CurrentPoint');pos=pos([1,3]);"(Matlab,)->+[o]"pos"(+[matlab],空间点)






## end
#932, 3:
934
## end
#934, 3:
936
## end
#936, 3:
938
## end
#938, 3:
942
## end
#941, 588:
"""
+[返回目录](,显示矩形)

矩形(M函数):...
文本框(M函数):...
图片(M函数):...
+[新建阅读窗口](,文本框)

保存:...

"""

+显示矩形(,_物体)->+[del](,+显示矩形)...
->显示矩形(,)...
->在(_物体,空间点)->的(_物体,尺寸)...
->+[matlab](Matlab,)->+[.]"pt"(+[matlab],空间点)->+[.]"shape"(+[matlab],尺寸):

->样式(_物体,)->[]{
    []:->[==]"文本框"(,样式)->的(显示矩形,文本框)->文本框(,)...
        ->+[code](+[matlab],文本框)->+[s]"str_text"(+[matlab],_物体),

    ->[==]"图片"(,样式)->的(显示矩形,图片)->图片(,)...
        ->+[code](+[matlab],图片)->+[o]"siz"(+[matlab],尺寸)...
        ->+[s]"dir_file"(+[matlab],_物体)
},

->的(显示矩形,矩形)->矩形->+[code](+[matlab],矩形)...
    ->+[.]"str_text"(+[matlab],_物体)

## end
#943, 56:


匹配模板::^显示%[光路]\(PPT图形\)$
输出模板::+[显示PPT图形](,%[光路])





## end
#944, 3:
946
## end
#947, 18:
^显示%[光路]\(PPT图形\)$
## end
#949, 18:
+[显示PPT图形](,%[光路])
## end
#950, 3:
952
## end
#952, 3:
954
## end
#954, 3:
962
## end
#956, 18:
+[显示PPT场景](,%[光路])
## end
#957, 18:
^显示%[光路]\(PPT场景\)$
## end
#960, 56:


匹配模板::^显示%[光路]\(PPT场景\)$
输出模板::+[显示PPT场景](,%[光路])





## end
#962, 3:
964
## end
#964, 3:
966
## end
#966, 3:
970
## end
#969, 462:
"""
+[返回目录](,旋转)
M代码:...

"""

+旋转(_角度,_物体)...
->的(旋转,M代码)...

->相对(+旋转,_物体2)->+[del](,相对)...
->[位置](_物体,)->是([位置],空间点)->[位置](_物体2,)->是([位置],空间点#2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[o]"pt"(+[matlab],空间点)->+[.]"pt0"(+[matlab],空间点#2)...
->[]{
    []:->_角度->+[.]"dangle"(+[matlab],_角度)->+[del](,+旋转),
    ->+[.]"dangle"(+[matlab],+旋转)
}...

->[]:
    ->朝向(_物体,方向)->+[o]"angle"(+[matlab],方向),
    ->+[.]"angle"(+[matlab],+[临时文本])->+[临时文本]"1"



## end
#970, 3:
972
## end
#972, 3:
974
## end
#974, 3:
981
## end
#976, 3:
978
## end
#978, 3:
982
## end
#981, 374:


% plot(pt(1),pt(2),'r*')

if isempty(text_str)
    text(pt(1),pt(2),name)
else
if length(text_str)>1 & strcmp(text_str(1:2),'$$')
    text(pt(1),pt(2),text_str,'Interpreter','latex',...
        'HorizontalAlignment','center','VerticalAlignment','middle')
else
    text(pt(1),pt(2),text_str,...
        'HorizontalAlignment','center','VerticalAlignment','middle')
end
end


## end
#982, 3:
984
## end
#984, 3:
986
## end
#986, 3:
988
## end
#989, 643:
"""
M代码:...
M代码2:...

保存:...

"""

+图形曲线(_图形,)->+[del](,+图形曲线)...
->的(图形曲线,M代码)->的(图形曲线,M代码2)...

->的(_图形,x)->的(_图形,y)...
->+[matlab](Matlab,)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...

->[]{
    []:->o"x"(+图形曲线,_x)->_x->+[o]"x_0"(+[matlab],_x),
    ->[]
}...
->[]{
    []:->o"y"(+图形曲线,_y)->_y->+[o]"y_0"(+[matlab],_y),
    ->[]
}...

->[]{
    []:->样式"曲线"(_图形,)->+[code](+[matlab],M代码),
    ->+[code](+[matlab],M代码2)
}...

->[]{
    []:->在(_图形,空间点)->空间点->+[.]"pt"(+[matlab],空间点),
    ->+[.]"pt"(+[matlab],+[临时文本])->+[临时文本]"0,0"
}...

->[]{
    []:->朝向(_图形,方向)->方向->+[.]"an"(+[matlab],方向),
    ->+[.]"an"(+[matlab],+[临时文本])->+[临时文本]"0"
}



## end
#993, 75:
%{

%}

x_0=x*cosd(an)-y*sind(an)+pt(1);
y_0=y*cosd(an)+x*sind(an)+pt(2);


## end
#995, 156:
%{

%}

x_0=x*cosd(an)-y*sind(an)+pt(1);
y_0=y*cosd(an)+x*sind(an)+pt(2);

if x_0(end)~=x_0(1) || y_0(end)~=y_0(1)
x_0(end+1)=x_0(1);
y_0(end+1)=y_0(1);
end
## end
#997, 1168:
"""
+[返回目录](,PPT场景转P代码)
库:...
+[新建阅读窗口](,库)
+[显示动词结构](,显示PPT场景)
设置界面:...

"""

+PPT场景转P代码(_场景,_P代码)->+[del](,+PPT场景转P代码)...
->的(PPT场景转P代码,库)->的(PPT场景转P代码,设置界面)...
->的(库,矩形)->的(库,图形)->的(库,直线)...

->+[临时文本]#0->[]{
    []=>的(_场景,_物体)->_物体=>+[临时文本]->[]{
        []:->在(_物体,空间点#3)->空间点#3->的(_物体,尺寸)->尺寸(,)...
        ->+[做](_物体,+[临时文本])->+[code](+[做],矩形),
        ->的(_物体,x)->x->+[做](_物体,+[临时文本])->+[code](+[做],图形),
    
        ->[is](_物体,_直线)->_直线(空间点#1,空间点#2)->空间点#1->空间点#2(,)...
        ->+[做](_物体,+[临时文本])->+[code](+[做],直线),

        ->[]
    }->+[增加内容](+[临时文本]#0,+[临时文本])->+[修改内容](+[临时文本],+[临时文本]#0)
}...

->+[临时文本]#1->[]{
    +[模板文本](设置界面,+[临时文本]#1)->+[增加内容](+[临时文本]#0,+[临时文本]#1):
        ->的(_场景,屏幕)->屏幕(,_窗口)...
        ->的(_窗口,尺寸)->+[.](+[模板文本],尺寸)...
        ->在(_窗口,空间点)->+[.](+[模板文本],空间点),
        
        ->+尺寸->+[.](+[模板文本],+尺寸)->+[del](,+尺寸)...
        ->[matlab]"state=1;pt_x=get(gca,'Xlim');pt_y=get(gca,'Ylim');
ans=[diff(pt_x),diff(pt_y)];"(Matlab,+尺寸)...
        ->+空间点->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
        ->[matlab]"state=1;pt_x=get(gca,'Xlim');pt_y=get(gca,'Ylim');
ans=[pt_x(1),pt_y(1)];"(Matlab,+空间点)
}...

->+[修改内容](+[临时文本]#1,_P代码)





## end
#999, 312:
"""


"""

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体=>[]:
        ->的(_物体,尺寸)->+矩形(,_物体)->+的(+操作,+矩形),
        ->的(_物体,x)->+图形(,_物体)->+的(+操作,+图形),
        ->的(_物体,_子物体)->的(_子物体,x#2)->+集合体(,_物体)->+的(+操作,+集合体),
        ->在(_物体,空间点)->空间点{[]=>[==](,_物体)}->+文本框(,_物体)->+的(+操作,+文本框),
        ->[]
}



## end
#1001, 298:
"""
描述结构:...

"""

+集合体(_物体,_代码)->+[del](,+集合体)...
->的(集合体,描述结构)->的(库,集合体)...

->+[code]([想],描述结构)->[想](,_物体)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_子物体)->_子物体(,)...
    =>的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_子物体,+[临时文本])->+[code](+[做],_条目)...
        ->+[增加内容2](+[临时文本],_代码)
}




## end
#1003, 243:
"""


"""

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体=>[]:
        ->的(_物体,尺寸)->+矩形(,_物体)->+的(+操作,+矩形),
        ->的(_物体,x)->+图形(,_物体)->+的(+操作,+图形),
        ->的(_物体,_子物体)->的(_子物体,x#2)->+集合体(,_物体)->+的(+操作,+集合体),
        ->[]
}



## end
#1004, 168:

# %[标题]
siz=[%尺寸]
siz=[siz[0]*ratio,siz[1]*ratio]
pos=[%空间点]
pos=[(pos[0]-orig[0])*ratio,(siz_0[1]-pos[1]+orig[1])*ratio-siz[1]]
ppt_draw_%样式(slide,pos,siz,"""%内容""")

## end
#1005, 47:

# %[标题]
ppt_draw_rectangle(slide,[%空间点],[%尺寸])
## end
#1008, 466:
"""
+[返回目录](,矩形)

矩形代码:...
# %[标题]
ppt_draw_%样式(slide,[%空间点],[%尺寸],"""%内容""")

"""

+矩形(_物体,_代码)->+[del](,+矩形)...
->的(矩形,矩形代码)...
->在(_物体,空间点)->的(_物体,尺寸)->+[标题](_物体,)...
->+[模板文本](矩形代码,+[增加内容])->+[增加内容](,_代码)...
->+[.](+[模板文本],+[标题])->+[.](+[模板文本],空间点)->+[.](+[模板文本],尺寸)...
->[]{
    []:->样式(_物体,)->+[.](+[模板文本],样式),
    ->+[临时文本]"矩形"->+[.]"样式"(+[模板文本],+[临时文本])
}->[]{
    []:->的(_物体,_re)->_re"图片地址|内容"->+[.]"内容"(+[模板文本],_re),
    ->+[.]"内容"(+[模板文本],+[临时文本]#2)
}




## end
#1011, 353:
+[显示PPT场景]"2"(,合并图形)

有A, C和B
A是长方形(0.1,3.6)
B是圆形"0.6"

有D

+[图形_交](B,D)->+[.](+[图形_交],A)
+[合并图形](B,C)->+[.](+[合并图形],A)
+[合并图形](C,C)->+[.](+[合并图形],A)->+[.](+[合并图形],B)

B在(0,1)
A在(0.02,0.96)
A朝向"100"

B在(0,0)
A在(0,0.3)
B在(0.2,0.2)
A在(0.2,0.5)


在屏幕"1"中, 添加标记点
A在标记点"2"



clf
hold on
axis equal
+[显示PPT图形](,A)
+[显示PPT图形](,B)
+[显示PPT图形](,C)
+[显示PPT图形](,D)
## end
#1013, 3:
多边形
## end
#1017, 20:
-1.8, 1.8, 1.8, -1.8
## end
#1019, 18:
0.0, 0.0, 0.1, 0.1
## end
#1021, 5:
0,0.3
## end
#1023, 3:
0.1
## end
#1025, 3:
3.6
## end
#1027, 3:
多边形
## end
#1028, 3:
长方形
## end
#1030, 2035:
0.0, 0.0380543517939387, 0.07595547214424955, 0.1135507466162461, 0.15068879230864754, 0.1872200674190923, 0.2229974733961965, 0.25787694725350296, 0.2917180416602812, 0.32438449047335854, 0.3557447574327843, 0.38567256581192355, 0.41404740688926717, 0.44075502519452, 0.46568787857505406, 0.4887455712302014, 0.5098352579697086, 0.5288720180685492, 0.545779197212711, 0.560488716159064, 0.5729413448664443, 0.583086940994125, 0.5908846518073247, 0.5963030786767525, 0.5993204035098048, 0.599924476604325, 0.5981128655711654, 0.5938928651285595, 0.5872814677288672, 0.5783052951359652, 0.567000491228801, 0.5534125764627488, 0.5375962645748015, 0.5196152422706631, 0.49954191278086274, 0.4774571043184993, 0.453449744612555, 0.42761650282731783, 0.4000614003097749, 0.37089539173236313, 0.3402359183176623, 0.30820643494404376, 0.2749359130364463, 0.2405583212439681, 0.20521208599540122, 0.1690395341048579, 0.1321863196719243, 0.09480083758400996, 0.05703362598250973, 0.01903676009884054, -0.01903676009884054, -0.05703362598250973, -0.09480083758400996, -0.1321863196719243, -0.1690395341048579, -0.20521208599540122, -0.2405583212439681, -0.2749359130364463, -0.30820643494404376, -0.3402359183176623, -0.37089539173236313, -0.4000614003097749, -0.42761650282731783, -0.453449744612555, -0.4774571043184992, -0.4995419127808629, -0.5196152422706631, -0.5375962645748015, -0.5534125764627489, -0.567000491228801, -0.5783052951359652, -0.5872814677288672, -0.5938928651285595, -0.5981128655711654, -0.599924476604325, -0.5993204035098048, -0.5963030786767525, -0.5908846518073247, -0.5830869409941251, -0.5729413448664443, -0.5604887161590639, -0.545779197212711, -0.5288720180685491, -0.5098352579697086, -0.48874557123020146, -0.4656878785750542, -0.44075502519451976, -0.41404740688926717, -0.38567256581192355, -0.3557447574327844, -0.3243844904733587, -0.291718041660281, -0.2578769472535028, -0.22299747339619647, -0.1872200674190923, -0.15068879230864765, -0.1135507466162464, -0.07595547214424934, -0.038054351793938596, 0.0
## end
#1032, 2013:
0.6, 0.5987920058831306, 0.5951728876984772, 0.589157218357624, 0.5807692208378137, 0.5700426706445672, 0.5570207598096435, 0.5417559229719727, 0.5243096262418709, 0.5047521196987087, 0.4831621545186351, 0.4596266658713868, 0.4342404228630421, 0.4071056469342793, 0.3783316002507135, 0.3480341457427189, 0.3163352805663015, 0.28336264486360957, 0.24924900780113185, 0.21413173295512306, 0.17815222519696486, 0.14145536130565636, 0.1041889066001582, 0.06650291994060656, 0.028549149494245446, -0.00951957830088473, -0.047549974114073086, -0.08538890296397113, -0.12288400083911435, -0.15988428821402098, -0.196240777990453, -0.23180707541587722, -0.26643996756346444, -0.3, -0.33235203831966614, -0.36336581228259995, -0.392916440367171, -0.4208849326237927, -0.4471586698054529, -0.47163185684567244, -0.4942059488578997, -0.5147900479409863, -0.533301269192954, -0.5496650744592418, -0.563815572471545, -0.5756957841686984, -0.5852578721312443, -0.5924633332058366, -0.5972831535438508, -0.5996979254299111, -0.5996979254299111, -0.5972831535438508, -0.5924633332058366, -0.5852578721312443, -0.5756957841686984, -0.563815572471545, -0.5496650744592418, -0.533301269192954, -0.5147900479409863, -0.4942059488578997, -0.47163185684567244, -0.4471586698054529, -0.4208849326237927, -0.392916440367171, -0.36336581228260006, -0.3323520383196661, -0.3, -0.26643996756346455, -0.23180707541587708, -0.196240777990453, -0.15988428821402112, -0.12288400083911435, -0.08538890296397113, -0.04754997411407324, -0.009519578300885028, 0.02854914949424559, 0.06650291994060671, 0.1041889066001582, 0.14145536130565622, 0.17815222519696472, 0.21413173295512333, 0.249249007801132, 0.2833626448636096, 0.3163352805663014, 0.34803414574271874, 0.3783316002507133, 0.4071056469342794, 0.43424042286304215, 0.4596266658713868, 0.4831621545186351, 0.5047521196987086, 0.524309626241871, 0.5417559229719727, 0.5570207598096436, 0.5700426706445672, 0.5807692208378137, 0.5891572183576239, 0.5951728876984772, 0.5987920058831306, 0.6
## end
#1034, 3:
0,0
## end
#1036, 3:
0.6
## end
#1038, 2:
圆形
## end
#1043, 445:
"""
M代码:...

"""

+图形_交(_原图,_输出)->+[del](,+图形_交)...
->的(图形_交,M代码)...

->[]{
    []:->的(_输出,x)->x,->+的(_输出,+x)->+的(_输出,+y)
}->的(_输出,x#0)->的(_输出,y#0)...

->+[图形曲线](_原图,)->+[o]"x"(+[图形曲线],x#0)->+[o]"y"(+[图形曲线],y#0)...
->Matlab->[]{
    []=>.(+图形_交,_图形)->_图形=>+[图形曲线](_图形,)...
        ->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
        ->+[.]"x_1"(+[matlab],x#0)->+[.]"y_1"(+[matlab],y#0)...
        ->+[o](+[matlab],x#0)->+[o](+[matlab],y#0)
}
## end
#1045, 226:
%{
clipboard('copy',y_0)
%}

addpath('Matlab\draw');

if isempty(x)
    x=x_0;
    y=y_0;
elseif isempty(x_0)
    x=x_1;
    y=y_1;
else
    [x,y]=shape_inter(x_1,y_1,x_0,y_0);
end

figure
plot(x_0,y_0,x_1,y_1,x,y)
axis equal

## end
#1047, 578:
"""
M代码:...
M代码2:...

"""

+图形曲线(_图形,)->+[del](,+图形曲线)...
->的(图形曲线,M代码)->的(图形曲线,M代码2)...

->o"x"(+图形曲线,_x)->o"y"(+图形曲线,_y)...

->的(_图形,x)->的(_图形,y)...
->+[matlab](Matlab,)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...
->+[o]"x_0"(+[matlab],_x)->+[o]"y_0"(+[matlab],_y)...


->[]{
    []:->样式"曲线"(_图形,)->+[code](+[matlab],M代码),
    ->+[code](+[matlab],M代码2)
}...

->[]{
    []:->在(_图形,空间点)->空间点->+[.]"pt"(+[matlab],空间点),
    ->+[.]"pt"(+[matlab],+[临时文本])->+[临时文本]"0,0"
}...

->[]{
    []:->朝向(_图形,方向)->方向->+[.]"an"(+[matlab],方向),
    ->+[.]"an"(+[matlab],+[临时文本])->+[临时文本]"0"
}



## end
#1050, 2371:
0.7527604965824182, 0.7570207598096435, 0.7700426706445671, 0.7807692208378136, 0.7891572183576241, 0.7951728876984772, 0.7987920058831306, 0.8, 0.7987920058831306, 0.7951728876984772, 0.7891572183576239, 0.7807692208378136, 0.7700426706445671, 0.7570207598096437, 0.7417559229719728, 0.7243096262418711, 0.7047521196987085, 0.683162154518635, 0.6596266658713867, 0.6342404228630422, 0.6071056469342795, 0.5783316002507133, 0.5480341457427187, 0.5163352805663014, 0.5119453677985897, 0.5047521196987086, 0.4831621545186351, 0.4596266658713868, 0.43424042286304215, 0.4071056469342794, 0.3783316002507133, 0.34803414574271874, 0.3163352805663014, 0.2833626448636096, 0.249249007801132, 0.21413173295512333, 0.17815222519696472, 0.14145536130565622, 0.1041889066001582, 0.06650291994060671, 0.02854914949424559, -0.009519578300885028, -0.04754997411407324, -0.08538890296397113, -0.12288400083911435, -0.15988428821402112, -0.196240777990453, -0.23180707541587708, -0.26643996756346455, -0.3, -0.3323520383196661, -0.36336581228260006, -0.392916440367171, -0.4208849326237927, -0.4471586698054529, -0.47163185684567244, -0.4942059488578997, -0.5147900479409863, -0.533301269192954, -0.5496650744592418, -0.563815572471545, -0.5756957841686984, -0.5852578721312443, -0.5924633332058366, -0.5972831535438508, -0.5996979254299111, -0.5972831535438508, -0.5924633332058366, -0.5852578721312443, -0.5756957841686984, -0.5654289836985309, -1.7726539554219745, -1.7900187731886674, -0.5129310604175044, -0.4942059488578997, -0.47163185684567244, -0.46111628567840734, -1.5726539554219745, -1.5900187731886675, -0.31404081975143766, -0.3124042266533166, -0.2942059488578997, -0.2716318568456724, -0.24715866980545287, -0.22088493262379266, -0.19291644036717098, -0.16336581228259994, -0.13235203831966613, -0.09999999999999998, -0.06643996756346443, -0.03180707541587721, 0.0037592220095470086, 0.04011571178597903, 0.07711599916088566, 0.11461109703602888, 0.15245002588592693, 0.19048042169911528, 0.22854914949424546, 0.2665029199406066, 0.3041889066001582, 0.34145536130565635, 0.3781522251969649, 0.41413173295512307, 0.44924900780113186, 0.4833626448636096, 0.5163352805663015, 0.5480341457427189, 0.5755953818864177, 1.9552891376552815, 1.9726539554219744, 0.6628229407008303, 0.683162154518635, 0.7038772876836062, 1.7552891376552815, 1.7726539554219745, 0.7527604965824182
## end
#1052, 118:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#1055, 2390:
0.43273198555898257, 0.42299747339619653, 0.3872200674190923, 0.3506887923086476, 0.3135507466162461, 0.27595547214424954, 0.23805435179393872, 0.2, 0.16194564820606142, 0.12404452785575067, 0.08644925338375362, 0.04931120769135236, 0.012779932580907705, -0.022997473396196455, -0.057876947253502786, -0.09171804166028097, -0.1243844904733587, -0.15574475743278438, -0.18567256581192354, -0.21404740688926716, -0.24075502519451975, -0.2656878785750542, -0.28874557123020145, -0.3098352579697086, -0.31236977528786547, -0.3243844904733587, -0.3557447574327844, -0.38567256581192355, -0.41404740688926717, -0.44075502519451976, -0.4656878785750542, -0.48874557123020146, -0.5098352579697086, -0.5288720180685491, -0.545779197212711, -0.5604887161590639, -0.5729413448664443, -0.5830869409941251, -0.5908846518073247, -0.5963030786767525, -0.5993204035098048, -0.599924476604325, -0.5981128655711654, -0.5938928651285595, -0.5872814677288672, -0.5783052951359652, -0.567000491228801, -0.5534125764627489, -0.5375962645748015, -0.5196152422706631, -0.4995419127808629, -0.4774571043184992, -0.453449744612555, -0.42761650282731783, -0.4000614003097749, -0.37089539173236313, -0.3402359183176623, -0.30820643494404376, -0.2749359130364463, -0.2405583212439681, -0.20521208599540122, -0.1690395341048579, -0.1321863196719243, -0.09480083758400996, -0.05703362598250973, 0.01903676009884054, 0.05703362598250973, 0.09480083758400996, 0.1321863196719243, 0.1690395341048579, 0.20029961449938224, -0.012566719800474635, 0.08591405550074616, 0.3110990759935647, 0.3402359183176623, 0.37089539173236313, 0.3834273614491314, 0.18743328019952538, 0.28591405550074617, 0.5109033954808992, 0.5119188453321487, 0.5402359183176624, 0.5708953917323631, 0.6000614003097748, 0.6276165028273178, 0.653449744612555, 0.6774571043184994, 0.6995419127808628, 0.7196152422706632, 0.7375962645748015, 0.7534125764627488, 0.7670004912288011, 0.7783052951359652, 0.7872814677288673, 0.7938928651285595, 0.7981128655711653, 0.799924476604325, 0.7993204035098047, 0.7963030786767524, 0.7908846518073247, 0.783086940994125, 0.7729413448664444, 0.7604887161590641, 0.745779197212711, 0.7288720180685493, 0.7098352579697087, 0.6887455712302014, 0.6677702608446493, 0.9110474951016954, 0.8125667198004747, 0.5816081717363905, 0.5557447574327843, 0.5256552181150883, 0.7110474951016954, 0.6125667198004746, 0.43273198555898257
## end
#1057, 118:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#1058, 3:
100
## end
#1060, 224:
%{
clipboard('copy',y_0)
%}

addpath('Matlab\draw');

if isempty(x)
    x=x_0;
    y=y_0;
elseif isempty(x_0)
    x=x_1;
    y=y_1;
else
    [x,y]=shape_cut(x_1,y_1,x_0,y_0);
end

figure
plot(x_0,y_0,x_1,y_1,x,y)
axis equal

## end
#1062, 449:
"""
M代码:...

"""

+图形_剪切(_原图,_输出)->+[del](,+图形_剪切)...
->的(图形_剪切,M代码)...

->[]{
    []:->的(_输出,x)->x,->+的(_输出,+x)->+的(_输出,+y)
}->的(_输出,x#0)->的(_输出,y#0)...

->+[图形曲线](_原图,)->+[o]"x"(+[图形曲线],x#0)->+[o]"y"(+[图形曲线],y#0)...
->Matlab->[]{
    []=>.(+图形_剪切,_图形)->_图形=>+[图形曲线](_图形,)...
        ->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
        ->+[.]"x_1"(+[matlab],x#0)->+[.]"y_1"(+[matlab],y#0)...
        ->+[o](+[matlab],x#0)->+[o](+[matlab],y#0)
}
## end
#1066, 264:
0.38160817173639033, 0.38567256581192355, 0.41404740688926717, 0.44075502519452, 0.46568787857505406, 0.4677702608446493, 0.3110990759935647, 0.30820643494404376, 0.2749359130364463, 0.2405583212439681, 0.20521208599540122, 0.20029961449938224, 0.38160817173639033
## end
#1068, 263:
0.4628229407008306, 0.4596266658713868, 0.4342404228630421, 0.4071056469342793, 0.3783316002507135, 0.37559538188641706, -0.5129310604175044, -0.5147900479409863, -0.533301269192954, -0.5496650744592418, -0.563815572471545, -0.5654289836985309, 0.4628229407008306
## end
#1070, 249:
%{
clipboard('copy',y_0)
Nini, 打开合并多边形(文件)
%}

addpath('Matlab\draw');

if isempty(x)
    x=x_0;
    y=y_0;
elseif isempty(x_0)
    x=x_1;
    y=y_1;
else
    [x,y]=shape_merge(x_1,y_1,x_0,y_0);
end

%{
figure
plot(x_0,y_0,x_1,y_1,x,y)
axis equal
%}
## end
#1072, 445:
"""
M代码:...

"""

+合并图形(_原图,_输出)->+[del](,+合并图形)...
->的(合并图形,M代码)...

->[]{
    []:->的(_输出,x)->x,->+的(_输出,+x)->+的(_输出,+y)
}->的(_输出,x#0)->的(_输出,y#0)...

->+[图形曲线](_原图,)->+[o]"x"(+[图形曲线],x#0)->+[o]"y"(+[图形曲线],y#0)...
->Matlab->[]{
    []=>.(+合并图形,_图形)->_图形=>+[图形曲线](_图形,)...
        ->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
        ->+[.]"x_1"(+[matlab],x#0)->+[.]"y_1"(+[matlab],y#0)...
        ->+[o](+[matlab],x#0)->+[o](+[matlab],y#0)
}
## end
#1075, 177:
+[显示PPT场景]"1"(,图形剪切)

有月球, 地球和月亮

月球是圆形"1"
地球是圆形"0.9"

地球在(0.2,0.1)

+[图形_剪切](月球,月亮)->+[.](+[图形_剪切],地球)
+[图形_交](月球,月亮)->+[.](+[图形_交],地球)


clf
axis equal
hold on
+[显示PPT图形](,月亮)
## end
#1082, 2018:
0.0, 0.0634239196565645, 0.12659245357374926, 0.1892512443604102, 0.2511479871810792, 0.3120334456984872, 0.3716624556603275, 0.4297949120891716, 0.4861967361004687, 0.5406408174555976, 0.5929079290546405, 0.6427876096865393, 0.6900790114821119, 0.7345917086575333, 0.7761464642917568, 0.8145759520503357, 0.8497254299495144, 0.8814533634475821, 0.9096319953545183, 0.9341478602651068, 0.9549022414440739, 0.9718115683235417, 0.984807753012208, 0.9938384644612541, 0.998867339183008, 0.9998741276738751, 0.9968547759519424, 0.9898214418809327, 0.9788024462147787, 0.963842158559942, 0.9450008187146685, 0.9223542941045814, 0.8959937742913359, 0.8660254037844386, 0.8325698546347713, 0.7957618405308322, 0.7557495743542584, 0.712694171378863, 0.6667690005162915, 0.6181589862206053, 0.5670598638627705, 0.5136773915734063, 0.4582265217274105, 0.4009305354066135, 0.3420201433256687, 0.28173255684142984, 0.2203105327865405, 0.15800139597334995, 0.0950560433041829, 0.031727933498067566, -0.031727933498067566, -0.0950560433041829, -0.15800139597334995, -0.2203105327865405, -0.28173255684142984, -0.3420201433256687, -0.4009305354066135, -0.4582265217274105, -0.5136773915734063, -0.5670598638627705, -0.6181589862206053, -0.6667690005162915, -0.712694171378863, -0.7557495743542584, -0.795761840530832, -0.8325698546347715, -0.8660254037844386, -0.8959937742913358, -0.9223542941045815, -0.9450008187146685, -0.963842158559942, -0.9788024462147787, -0.9898214418809327, -0.9968547759519423, -0.9998741276738751, -0.998867339183008, -0.9938384644612541, -0.984807753012208, -0.9718115683235418, -0.954902241444074, -0.9341478602651065, -0.9096319953545182, -0.881453363447582, -0.8497254299495144, -0.8145759520503358, -0.776146464291757, -0.734591708657533, -0.6900790114821119, -0.6427876096865393, -0.5929079290546406, -0.5406408174555979, -0.4861967361004683, -0.42979491208917137, -0.37166245566032746, -0.3120334456984872, -0.25114798718107945, -0.18925124436041066, -0.1265924535737489, -0.06342391965656433, 0.0
## end
#1084, 2004:
1.0, 0.9979866764718844, 0.9919548128307953, 0.9819286972627067, 0.9679487013963562, 0.9500711177409453, 0.9283679330160726, 0.9029265382866213, 0.8738493770697849, 0.8412535328311812, 0.8052702575310585, 0.766044443118978, 0.7237340381050702, 0.6785094115571322, 0.6305526670845225, 0.5800569095711982, 0.5272254676105025, 0.47227107477268265, 0.41541501300188644, 0.3568862215918718, 0.29692037532827475, 0.23575893550942728, 0.17364817766693033, 0.11083819990101094, 0.04758191582374241, -0.015865963834807883, -0.07924995685678848, -0.14231483827328523, -0.2048066680651906, -0.266473813690035, -0.32706796331742166, -0.38634512569312873, -0.44406661260577407, -0.5, -0.5539200638661103, -0.6056096871376666, -0.654860733945285, -0.7014748877063212, -0.7452644496757548, -0.7860530947427874, -0.8236765814298329, -0.8579834132349771, -0.8888354486549234, -0.9161084574320697, -0.9396926207859084, -0.9594929736144974, -0.975429786885407, -0.9874388886763943, -0.9954719225730846, -0.9994965423831851, -0.9994965423831851, -0.9954719225730846, -0.9874388886763943, -0.975429786885407, -0.9594929736144974, -0.9396926207859084, -0.9161084574320697, -0.8888354486549234, -0.8579834132349771, -0.8236765814298329, -0.7860530947427874, -0.7452644496757548, -0.7014748877063212, -0.654860733945285, -0.6056096871376668, -0.5539200638661101, -0.5, -0.4440666126057743, -0.3863451256931285, -0.32706796331742166, -0.2664738136900352, -0.2048066680651906, -0.14231483827328523, -0.07924995685678873, -0.01586596383480838, 0.04758191582374265, 0.1108381999010112, 0.17364817766693033, 0.23575893550942706, 0.29692037532827453, 0.3568862215918722, 0.41541501300188666, 0.47227107477268276, 0.5272254676105024, 0.5800569095711979, 0.6305526670845222, 0.6785094115571324, 0.7237340381050703, 0.766044443118978, 0.8052702575310585, 0.841253532831181, 0.8738493770697852, 0.9029265382866213, 0.9283679330160727, 0.9500711177409453, 0.9679487013963562, 0.9819286972627066, 0.9919548128307953, 0.9979866764718844, 1.0
## end
#1086, 8:
0.0, 0.0
## end
#1088, 3:
1.0
## end
#1090, 2:
圆形
## end
#1092, 2035:
0.0, 0.05708152769090806, 0.11393320821637434, 0.17032611992436916, 0.2260331884629713, 0.2808301011286385, 0.33449621009429475, 0.38681542088025445, 0.43757706249042183, 0.4865767357100378, 0.5336171361491765, 0.5785088487178853, 0.6210711103339007, 0.66113253779178, 0.6985318178625811, 0.7331183568453021, 0.764752886954563, 0.7933080271028239, 0.8186687958190665, 0.8407330742385961, 0.8594120172996665, 0.8746304114911875, 0.8863269777109872, 0.8944546180151287, 0.8989806052647071, 0.8998867149064875, 0.8971692983567482, 0.8908392976928394, 0.8809222015933009, 0.8674579427039478, 0.8505007368432016, 0.8301188646941232, 0.8063943968622023, 0.7794228634059948, 0.7493128691712941, 0.716185656477749, 0.6801746169188325, 0.6414247542409768, 0.6000921004646623, 0.5563430875985448, 0.5103538774764935, 0.4623096524160657, 0.41240386955466946, 0.36083748186595216, 0.30781812899310185, 0.25355930115728686, 0.19827947950788646, 0.14220125637601497, 0.0855504389737646, 0.02855514014826081, -0.02855514014826081, -0.0855504389737646, -0.14220125637601497, -0.19827947950788646, -0.25355930115728686, -0.30781812899310185, -0.36083748186595216, -0.41240386955466946, -0.4623096524160657, -0.5103538774764935, -0.5563430875985448, -0.6000921004646623, -0.6414247542409768, -0.6801746169188325, -0.7161856564777488, -0.7493128691712944, -0.7794228634059948, -0.8063943968622022, -0.8301188646941233, -0.8505007368432016, -0.8674579427039478, -0.8809222015933009, -0.8908392976928394, -0.8971692983567481, -0.8998867149064875, -0.8989806052647071, -0.8944546180151287, -0.8863269777109872, -0.8746304114911876, -0.8594120172996667, -0.8407330742385959, -0.8186687958190664, -0.7933080271028238, -0.764752886954563, -0.7331183568453022, -0.6985318178625813, -0.6611325377917797, -0.6210711103339007, -0.5785088487178853, -0.5336171361491766, -0.4865767357100381, -0.4375770624904215, -0.3868154208802542, -0.3344962100942947, -0.2808301011286385, -0.22603318846297152, -0.1703261199243696, -0.11393320821637401, -0.05708152769090789, 0.0
## end
#1094, 1995:
0.9, 0.898188008824696, 0.8927593315477158, 0.8837358275364361, 0.8711538312567206, 0.8550640059668508, 0.8355311397144654, 0.8126338844579591, 0.7864644393628064, 0.7571281795480631, 0.7247432317779526, 0.6894399988070802, 0.6513606342945631, 0.610658470401419, 0.5674974003760703, 0.5220512186140783, 0.4745029208494522, 0.4250439672954144, 0.3738735117016978, 0.3211975994326846, 0.2672283377954473, 0.21218304195848456, 0.1562833599002373, 0.09975437991090985, 0.04282372424136817, -0.014279367451327095, -0.07132496117110963, -0.1280833544459567, -0.18432600125867155, -0.23982643232103149, -0.2943611669856795, -0.34771061312381585, -0.39965995134519666, -0.45, -0.49852805747949924, -0.5450487184239, -0.5893746605507565, -0.631327398935689, -0.6707380047081793, -0.7074477852685087, -0.7413089232868496, -0.7721850719114793, -0.799951903789431, -0.8244976116888627, -0.8457233587073176, -0.8635436762530476, -0.8778868081968664, -0.8886949998087549, -0.8959247303157761, -0.8995468881448666, -0.8995468881448666, -0.8959247303157761, -0.8886949998087549, -0.8778868081968664, -0.8635436762530476, -0.8457233587073176, -0.8244976116888627, -0.799951903789431, -0.7721850719114793, -0.7413089232868496, -0.7074477852685087, -0.6707380047081793, -0.631327398935689, -0.5893746605507565, -0.5450487184239001, -0.49852805747949913, -0.45, -0.3996599513451969, -0.3477106131238157, -0.2943611669856795, -0.23982643232103168, -0.18432600125867155, -0.1280833544459567, -0.07132496117110987, -0.01427936745132754, 0.04282372424136839, 0.09975437991091007, 0.1562833599002373, 0.21218304195848436, 0.2672283377954471, 0.321197599432685, 0.373873511701698, 0.4250439672954145, 0.47450292084945217, 0.5220512186140781, 0.56749740037607, 0.6106584704014192, 0.6513606342945633, 0.6894399988070802, 0.7247432317779526, 0.7571281795480629, 0.7864644393628066, 0.8126338844579591, 0.8355311397144655, 0.8550640059668508, 0.8711538312567206, 0.883735827536436, 0.8927593315477158, 0.898188008824696, 0.9
## end
#1096, 7:
0.2,0.1
## end
#1098, 3:
0.9
## end
#1100, 2:
圆形
## end
#1102, 1941:
0.9943967941043195, 0.9938384644612541, 0.984807753012208, 0.9718115683235417, 0.9549022414440739, 0.9341478602651068, 0.9096319953545183, 0.8814533634475821, 0.8497254299495144, 0.8145759520503357, 0.7761464642917568, 0.7345917086575333, 0.6900790114821119, 0.6427876096865393, 0.5929079290546405, 0.5406408174555976, 0.4861967361004687, 0.4297949120891716, 0.3716624556603275, 0.3120334456984872, 0.2511479871810792, 0.1892512443604102, 0.12659245357374926, 0.0634239196565645, 0.0, -0.06342391965656433, -0.1265924535737489, -0.18925124436041066, -0.25114798718107945, -0.3120334456984872, -0.37166245566032746, -0.42979491208917137, -0.4861967361004683, -0.5156336072826257, -0.5210711103339007, -0.5611325377917797, -0.5985318178625814, -0.6331183568453023, -0.664752886954563, -0.6933080271028238, -0.7186687958190664, -0.7407330742385959, -0.7594120172996667, -0.7746304114911876, -0.7863269777109873, -0.7944546180151287, -0.7989806052647072, -0.7998867149064876, -0.7971692983567481, -0.7908392976928394, -0.780922201593301, -0.7674579427039478, -0.7505007368432016, -0.7301188646941233, -0.7063943968622022, -0.6794228634059948, -0.6493128691712944, -0.6161856564777488, -0.5801746169188325, -0.5414247542409768, -0.5000921004646623, -0.4563430875985448, -0.41035387747649354, -0.3623096524160657, -0.3124038695546695, -0.2608374818659521, -0.20781812899310184, -0.15355930115728686, -0.09827947950788646, -0.04220125637601496, 0.014449561026235402, 0.07144485985173919, 0.1855504389737646, 0.24220125637601497, 0.29827947950788647, 0.35355930115728684, 0.4078181289931019, 0.4608374818659522, 0.5124038695546694, 0.5623096524160657, 0.6103538774764935, 0.6563430875985448, 0.7000921004646623, 0.7414247542409768, 0.7801746169188325, 0.816185656477749, 0.8493128691712941, 0.8794228634059947, 0.9063943968622022, 0.9301188646941232, 0.9505007368432016, 0.9674579427039478, 0.9809222015933009, 0.9908392976928394, 0.9943967941043195
## end
#1104, 1912:
0.10381518571500818, 0.11083819990101094, 0.17364817766693033, 0.23575893550942728, 0.29692037532827475, 0.3568862215918718, 0.41541501300188644, 0.47227107477268265, 0.5272254676105025, 0.5800569095711982, 0.6305526670845225, 0.6785094115571322, 0.7237340381050702, 0.766044443118978, 0.8052702575310585, 0.8412535328311812, 0.8738493770697849, 0.9029265382866213, 0.9283679330160726, 0.9500711177409453, 0.9679487013963562, 0.9819286972627067, 0.9919548128307953, 0.9979866764718844, 1.0, 0.9979866764718844, 0.9919548128307953, 0.9819286972627066, 0.9679487013963562, 0.9500711177409453, 0.9283679330160727, 0.9029265382866213, 0.8738493770697852, 0.8562254289005308, 0.8513606342945632, 0.8106584704014193, 0.76749740037607, 0.7220512186140782, 0.6745029208494522, 0.6250439672954144, 0.573873511701698, 0.521197599432685, 0.4672283377954471, 0.4121830419584844, 0.3562833599002373, 0.2997543799109101, 0.2428237242413684, 0.18572063254867247, 0.12867503882889014, 0.07191664555404331, 0.015673998741328465, -0.03982643232103167, -0.09436116698567948, -0.14771061312381567, -0.19965995134519687, -0.25, -0.2985280574794991, -0.3450487184239001, -0.3893746605507565, -0.431327398935689, -0.47073800470817934, -0.5074477852685086, -0.5413089232868495, -0.5721850719114794, -0.599951903789431, -0.6244976116888628, -0.6457233587073177, -0.6635436762530476, -0.6778868081968663, -0.6886949998087548, -0.6959247303157761, -0.6995468881448665, -0.6959247303157761, -0.6886949998087548, -0.6778868081968663, -0.6635436762530476, -0.6457233587073177, -0.6244976116888628, -0.599951903789431, -0.5721850719114794, -0.5413089232868495, -0.5074477852685086, -0.47073800470817934, -0.431327398935689, -0.3893746605507565, -0.3450487184239, -0.29852805747949923, -0.25, -0.19965995134519665, -0.14771061312381584, -0.09436116698567948, -0.039826432321031474, 0.015673998741328465, 0.07191664555404331, 0.10381518571500818
## end
#1107, 225:
%{
+[M函数](,图片)
2D图片:...
3D图片:...
测试:...

保存:...
%}

img = imread(dir_file);
img=img(end:-1:1,:,:);
shape(2)=shape(1)/size(img,2)*size(img,1);
x=[pt(1),pt(1)+shape(1)];
y=[pt(2),pt(2)+shape(2)];
image(x,y,img);
siz=shape;





## end
#1109, 296:
"""


"""

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体=>[]:
        ->的(_物体,尺寸)->+显示矩形(,_物体)->+的(+操作,+显示矩形),
        ->的(_物体,x)->+显示图形(,_物体)->+的(+操作,+显示图形),
        ->的(_物体,文字位置)->+显示文字(,_物体)->+的(+操作,+显示文字),
        ->在(_物体,空间点)->+显示点(,_物体)->+的(+操作,+显示点),
        
        ->[]
}


## end
#1111, 883:
"""
描述结构:...
库:...
+[新建阅读窗口](,库)
+[显示动词结构](,显示PPT场景)

"""

+显示PPT场景(,_场景)->Matlab{
    []:->[==](,+显示PPT场景),
    ->+[matlab]"figure(n)"(Matlab,)->+[.]"n"(+[matlab],+显示PPT场景)
}->+[del](,+显示PPT场景)...

->的(显示PPT场景,库)->的(显示PPT场景,描述结构)...
->的(库,显示矩形)->的(库,显示图形)->的(库,显示直线)->的(库,显示点)...

->[]{
    []:->[==](,+显示PPT场景), ->不刷新(+显示PPT场景,),
    ->+[matlab]"clf;"(Matlab,)
}...
->+[matlab]"hold on;axis equal"(Matlab,)...

->[]{
    []:->的(_场景,屏幕)->屏幕(,_窗口)->_窗口->+[做](,_窗口)->+[code](+[做],显示矩形),
    ->[]
}...

->[]{
    []=>的(_场景,_物体)->_物体=>[]:
    ->的(_物体,尺寸)->+[做](,_物体)->+[code](+[做],显示矩形),
    ->的(_物体,x)->+[做](,_物体)->+[code](+[做],显示图形),
    ->在(_物体,空间点#6)->+[做](,_物体)->+[code](+[做],显示点),
    ->[is](_物体,_直线)->_直线(空间点#1,空间点#2)->空间点#1->空间点#2->[位置](空间点#1,)->[位置](空间点#2,)...
    ->+[做](,_物体)->+[code](+[做],显示直线),
    
    ->[]
}...

->+[matlab]"a=gca;a.Children=flip(a.Children);"(Matlab,)


## end
#1112, 300:


plot(pt(1),pt(2),'r*')

if isempty(text_str)
    text(pt(1),pt(2),name)
else
if length(text_str)>1 & strcmp(text_str(1:2),'$$')
    text(pt(1),pt(2),text_str,'Interpreter','latex',...
        'HorizontalAlignment','center','VerticalAlignment','middle')
else
    text(pt(1),pt(2),text_str)
end
end


## end
#1114, 249:
"""
+[返回目录](,显示点)
M代码:...

"""

+显示点(,_物体)->+[del](,+显示点)...
->的(显示点,M代码)...

->在(_物体,空间点)->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"pt"(+[matlab],空间点)...
->+[s]"name"(+[matlab],+[标题])->+[s]"text_str"(+[matlab],_物体)





## end
### 结束