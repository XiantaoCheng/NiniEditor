### 节点
地址, 的, 像素矩阵, 目录, 的, 的, 操作, 的, 测试场景, 的, 图形, 的, 的, 的, 的, 的, 的, 的, 的, 内容, 的, 样式, 尺寸, 的, 空间点, 在, 图片0, 的, 的, 获取区域, M函数, 的, 的, 设置电子源, 的, 区域内部, 的, 体积1, 的, 平面1, 的, 体积2, Z, 的, Y, 的, X, 的, 方向, 朝向, 空间点, 在, 类型, 的, Z, 的, Y, 的, X, 的, 方向, 朝向, 空间点, 在, 类型, 的, Z, 的, Y, 的, X, 的, 空间点, 在, 类型, 的, 方向, 朝向, 值, 的, 数目, 的, 尺寸, 的, 空间点, 原点, 原点, 原点, 原点, 原点, 
### 关联
#, 2#0, #, #, 3#2, 2#6, #, 2#8, #, 8#10, #, 8#19, 8#20, 8#21, 8#22, 8#23, 8#24, 8#25, 8#26, #, 26#19, 26#, #, 26#22, #, 26#24, #, 10#26, 8#29, #, 29#, 29#26, 29#33, #, 2#35, #, 35#37, #, 35#39, #, 35#41, #, #, 37#42, #, 37#44, #, 37#46, #, 37#48, #, 37#50, #, 37#52, #, 41#54, #, 41#56, #, 41#58, #, 41#60, #, 41#62, #, 41#64, #, 39#66, #, 39#68, #, 39#70, #, 39#72, #, 39#74, #, 39#76, #, 39#78, #, 39#80, #, 39#82, #, #, #, #, #, #, 
### 内容
#0, 16:
文档\S应用\像素矩阵.ftxt
## end
#2, 157:
+[返回目录](,像素矩阵)
地址::文档\S应用\像素矩阵.ftxt

操作:...
+[设置动词](,操作)

Nini, 导入词典的库. 导入词典
Nini, 导入三维场景的库
Nini, 导入PPT的库
Nini, 导入平面测绘的库. Nini, 导入图形库的库

测试场景:...
区域内部:...



## end
#3, 48:
像素矩阵:...
创建于 20220306

节点数目统计::
+[设置结构](,节点数目统计)
## end
#8, 198:
+[显示星图](,测试场景)

图形::
图形中新建1个图片(图片)

图片0::input/austin.png
图片0::input/tsinghua3.jpg
图片0::input/jiaotong.jpg
图片0::input/jiaotong2.png
图片0的尺寸是"1,1"

获取区域(M函数):...
执行获取区域(M函数)
获取区域有图片0


+[显示PPT场景](,图形)
## end
#21, 2:
图片
## end
#22, 23:
1.0, 0.9383429672447013
## end
#24, 3:
0,0
## end
#26, 16:
input/austin.png
## end
#29, 354:
%{
执行获取区域(M函数)

clf
设置电子源:...
%}

file_name="%图片0";
data=imread(file_name);

R_matrix=data(:,:,1);
area0=reshape(double(R_matrix<200),1,numel(R_matrix));

N=500000;

x=(size(data,2)-1)*rand(1,N);
y=(size(data,1)-1)*rand(1,N);

i=int64(x);
j=int64(y);
x=x(area0(j+1200*i+1)==1);
y=y(area0(j+1200*i+1)==1);

plot(x,y,'.')
axis equal


%{
clf
执行获取区域(M函数)
%}
## end
#33, 821:
%{
clf
执行获取区域(M函数)

设置电子源:
%}

file_name="%图片0";
data=imread(file_name);

R_matrix=data(:,:,1);
area0=reshape(double(R_matrix<200),1,numel(R_matrix));

N=5000000;

x=1199*rand(1,N);
y=1199*rand(1,N);

i=int64(x);
j=int64(y);
x=x(area0(j+1200*i+1)==1);
y=y(area0(j+1200*i+1)==1);


N=length(x);
addpath('matlab\random')
physics_constant;

file_name="C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt";

% MeV
EN0=1000;

tx=(x/1200-0.5)*5e-3;
ty=(y/1200-0.5)*5e-3;
En=EN0*ones(1,N);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data)

writematrix(Data,file_name,'Delimiter',' ')



%{
clf
执行获取区域(M函数)
%}
## end
#35, 370:
+[显示三维场景](,区域内部)
记住"自然语言"

体积1::
体积2::
平面1::

体积1是立方体"2,2,4". 体积2是圆柱体"1,4"
平面1是平面"4,5"
平面1是网格"50,40"
平面1的尺寸是"4,5"

显示平面1的网格

体积1距离体积2为"2,0,0". 平面1距离体积1为"0,0,0.8"
平面1朝向"45,45,45"

清空平面1的网格
在体积1中, 计算平面1的区域. 显示平面1的网格
在体积2中, 计算平面1的区域. 显示平面1的网格


在屏幕上添加标记点

平面1朝向"0,0,0". 平面1在"1,0,2"
清空平面1的网格
在体积1中, 计算平面1的区域. 显示平面1的网格
在体积2中, 计算平面1的区域. 显示平面1的网格

平面1沿Y方向旋转"30"
平面1沿Z方向旋转"90"


## end
#42, 98:
0.0, 4.0, 0.0, 0.0;
0.0, 4.0, 4.0, 4.0;
0.0, 4.0, 4.0, 4.0;
0.0, 4.0, 0.0, 0.0;
0.0, 4.0, 0.0, 0.0
## end
#44, 110:
-1.0, -1.0, -1.0, -1.0;
-1.0, -1.0, -1.0, -1.0;
1.0, 1.0, 1.0, 1.0;
1.0, 1.0, 1.0, 1.0;
-1.0, -1.0, -1.0, -1.0
## end
#46, 109:
-1.0, -1.0, -1.0, 1.0;
1.0, 1.0, -1.0, 1.0;
1.0, 1.0, -1.0, 1.0;
-1.0, -1.0, -1.0, 1.0;
-1.0, -1.0, -1.0, 1.0
## end
#48, 5:
0,0,0
## end
#50, 13:
2.0, 0.0, 0.0
## end
#52, 3:
立方体
## end
#54, 1008:
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
0.0, 4.0;
4.0, 0.0
## end
#56, 4049:
0.0, 0.0;
0.0634239196565645, -0.06342391965656433;
0.12659245357374926, -0.1265924535737494;
0.1892512443604102, -0.18925124436041016;
0.2511479871810792, -0.251147987181079;
0.3120334456984872, -0.3120334456984872;
0.3716624556603275, -0.37166245566032746;
0.4297949120891716, -0.42979491208917137;
0.4861967361004687, -0.4861967361004687;
0.5406408174555976, -0.5406408174555974;
0.5929079290546405, -0.5929079290546406;
0.6427876096865393, -0.6427876096865393;
0.6900790114821119, -0.6900790114821119;
0.7345917086575333, -0.7345917086575333;
0.7761464642917568, -0.7761464642917568;
0.8145759520503357, -0.8145759520503358;
0.8497254299495144, -0.8497254299495144;
0.8814533634475821, -0.881453363447582;
0.9096319953545183, -0.9096319953545182;
0.9341478602651068, -0.9341478602651068;
0.9549022414440739, -0.954902241444074;
0.9718115683235417, -0.9718115683235418;
0.984807753012208, -0.984807753012208;
0.9938384644612541, -0.9938384644612541;
0.998867339183008, -0.998867339183008;
0.9998741276738751, -0.9998741276738751;
0.9968547759519424, -0.9968547759519423;
0.9898214418809327, -0.9898214418809327;
0.9788024462147787, -0.9788024462147787;
0.963842158559942, -0.9638421585599422;
0.9450008187146685, -0.9450008187146683;
0.9223542941045814, -0.9223542941045813;
0.8959937742913359, -0.8959937742913358;
0.8660254037844386, -0.8660254037844386;
0.8325698546347713, -0.8325698546347715;
0.7957618405308322, -0.7957618405308323;
0.7557495743542584, -0.7557495743542586;
0.712694171378863, -0.7126941713788635;
0.6667690005162915, -0.6667690005162915;
0.6181589862206053, -0.6181589862206053;
0.5670598638627705, -0.5670598638627702;
0.5136773915734063, -0.5136773915734059;
0.4582265217274105, -0.4582265217274101;
0.4009305354066135, -0.4009305354066135;
0.3420201433256687, -0.3420201433256687;
0.28173255684142984, -0.28173255684142984;
0.2203105327865405, -0.220310532786541;
0.15800139597334995, -0.15800139597335044;
0.0950560433041829, -0.09505604330418338;
0.031727933498067566, -0.031727933498067566;
-0.031727933498067566, 0.031727933498067566;
-0.0950560433041829, 0.09505604330418338;
-0.15800139597334995, 0.15800139597335044;
-0.2203105327865405, 0.220310532786541;
-0.28173255684142984, 0.28173255684142984;
-0.3420201433256687, 0.3420201433256687;
-0.4009305354066135, 0.4009305354066135;
-0.4582265217274105, 0.4582265217274101;
-0.5136773915734063, 0.5136773915734059;
-0.5670598638627705, 0.5670598638627702;
-0.6181589862206053, 0.6181589862206053;
-0.6667690005162915, 0.6667690005162915;
-0.712694171378863, 0.7126941713788635;
-0.7557495743542584, 0.7557495743542586;
-0.795761840530832, 0.7957618405308323;
-0.8325698546347715, 0.8325698546347715;
-0.8660254037844386, 0.8660254037844386;
-0.8959937742913358, 0.8959937742913358;
-0.9223542941045815, 0.9223542941045813;
-0.9450008187146685, 0.9450008187146683;
-0.963842158559942, 0.9638421585599419;
-0.9788024462147787, 0.9788024462147787;
-0.9898214418809327, 0.9898214418809327;
-0.9968547759519423, 0.9968547759519423;
-0.9998741276738751, 0.9998741276738751;
-0.998867339183008, 0.998867339183008;
-0.9938384644612541, 0.9938384644612541;
-0.984807753012208, 0.984807753012208;
-0.9718115683235418, 0.9718115683235418;
-0.954902241444074, 0.954902241444074;
-0.9341478602651065, 0.9341478602651065;
-0.9096319953545182, 0.9096319953545182;
-0.881453363447582, 0.881453363447582;
-0.8497254299495144, 0.8497254299495144;
-0.8145759520503358, 0.8145759520503358;
-0.776146464291757, 0.776146464291757;
-0.734591708657533, 0.734591708657533;
-0.6900790114821119, 0.6900790114821119;
-0.6427876096865393, 0.6427876096865393;
-0.5929079290546406, 0.5929079290546406;
-0.5406408174555979, 0.5406408174555979;
-0.4861967361004683, 0.4861967361004683;
-0.42979491208917137, 0.4297949120891723;
-0.37166245566032746, 0.3716624556603265;
-0.3120334456984872, 0.3120334456984882;
-0.25114798718107945, 0.2511479871810785;
-0.18925124436041066, 0.1892512443604116;
-0.1265924535737489, 0.1265924535737489;
-0.06342391965656433, 0.06342391965656433;
0.0, 0.0;
0.0, 0.0
## end
#58, 4023:
1.0, -1.0;
0.9979866764718844, -0.9979866764718844;
0.9919548128307953, -0.9919548128307952;
0.9819286972627067, -0.9819286972627067;
0.9679487013963562, -0.9679487013963564;
0.9500711177409453, -0.9500711177409453;
0.9283679330160726, -0.9283679330160727;
0.9029265382866213, -0.9029265382866213;
0.8738493770697849, -0.8738493770697849;
0.8412535328311812, -0.8412535328311812;
0.8052702575310585, -0.8052702575310585;
0.766044443118978, -0.766044443118978;
0.7237340381050702, -0.7237340381050703;
0.6785094115571322, -0.6785094115571321;
0.6305526670845225, -0.6305526670845225;
0.5800569095711982, -0.5800569095711979;
0.5272254676105025, -0.5272254676105024;
0.47227107477268265, -0.47227107477268276;
0.41541501300188644, -0.41541501300188666;
0.3568862215918718, -0.3568862215918718;
0.29692037532827475, -0.29692037532827453;
0.23575893550942728, -0.23575893550942706;
0.17364817766693033, -0.17364817766693033;
0.11083819990101094, -0.1108381999010112;
0.04758191582374241, -0.04758191582374265;
-0.015865963834807883, 0.015865963834807387;
-0.07924995685678848, 0.07924995685678873;
-0.14231483827328523, 0.14231483827328523;
-0.2048066680651906, 0.2048066680651906;
-0.266473813690035, 0.26647381369003476;
-0.32706796331742166, 0.32706796331742216;
-0.38634512569312873, 0.38634512569312895;
-0.44406661260577407, 0.4440666126057743;
-0.5, 0.5;
-0.5539200638661103, 0.5539200638661101;
-0.6056096871376666, 0.6056096871376664;
-0.654860733945285, 0.6548607339452847;
-0.7014748877063212, 0.7014748877063207;
-0.7452644496757548, 0.7452644496757548;
-0.7860530947427874, 0.7860530947427874;
-0.8236765814298329, 0.8236765814298331;
-0.8579834132349771, 0.8579834132349773;
-0.8888354486549234, 0.8888354486549236;
-0.9161084574320697, 0.9161084574320697;
-0.9396926207859084, 0.9396926207859084;
-0.9594929736144974, 0.9594929736144974;
-0.975429786885407, 0.9754297868854069;
-0.9874388886763943, 0.9874388886763943;
-0.9954719225730846, 0.9954719225730846;
-0.9994965423831851, 0.9994965423831851;
-0.9994965423831851, 0.9994965423831851;
-0.9954719225730846, 0.9954719225730846;
-0.9874388886763943, 0.9874388886763943;
-0.975429786885407, 0.9754297868854069;
-0.9594929736144974, 0.9594929736144974;
-0.9396926207859084, 0.9396926207859084;
-0.9161084574320697, 0.9161084574320697;
-0.8888354486549234, 0.8888354486549236;
-0.8579834132349771, 0.8579834132349773;
-0.8236765814298329, 0.8236765814298331;
-0.7860530947427874, 0.7860530947427874;
-0.7452644496757548, 0.7452644496757548;
-0.7014748877063212, 0.7014748877063207;
-0.654860733945285, 0.6548607339452847;
-0.6056096871376668, 0.6056096871376664;
-0.5539200638661101, 0.5539200638661101;
-0.5, 0.5;
-0.4440666126057743, 0.4440666126057743;
-0.3863451256931285, 0.38634512569312895;
-0.32706796331742166, 0.32706796331742216;
-0.2664738136900352, 0.2664738136900357;
-0.2048066680651906, 0.2048066680651906;
-0.14231483827328523, 0.14231483827328523;
-0.07924995685678873, 0.07924995685678873;
-0.01586596383480838, 0.01586596383480838;
0.04758191582374265, -0.04758191582374265;
0.1108381999010112, -0.1108381999010112;
0.17364817766693033, -0.17364817766693033;
0.23575893550942706, -0.23575893550942706;
0.29692037532827453, -0.29692037532827453;
0.3568862215918722, -0.3568862215918722;
0.41541501300188666, -0.41541501300188666;
0.47227107477268276, -0.47227107477268276;
0.5272254676105024, -0.5272254676105024;
0.5800569095711979, -0.5800569095711979;
0.6305526670845222, -0.6305526670845222;
0.6785094115571324, -0.6785094115571324;
0.7237340381050703, -0.7237340381050703;
0.766044443118978, -0.766044443118978;
0.8052702575310585, -0.8052702575310585;
0.841253532831181, -0.841253532831181;
0.8738493770697852, -0.8738493770697852;
0.9029265382866213, -0.902926538286621;
0.9283679330160727, -0.928367933016073;
0.9500711177409453, -0.950071117740945;
0.9679487013963562, -0.9679487013963565;
0.9819286972627066, -0.9819286972627064;
0.9919548128307953, -0.9919548128307953;
0.9979866764718844, -0.9979866764718844;
1.0, -1.0;
1.0, -1.0
## end
#60, 5:
0,0,0
## end
#62, 5:
0,0,0
## end
#64, 3:
圆柱体
## end
#66, 23:
0.0;
0.0;
0.0;
0.0;
0.0
## end
#68, 26:
-2.5;
-2.5;
2.5;
2.5;
-2.5
## end
#70, 26:
-2.0;
2.0;
2.0;
-2.0;
-2.0
## end
#72, 13:
1.0, 0.0, 2.0
## end
#74, 2:
平面
## end
#76, 58:
163.89788624801398, 64.34109372674476, -56.309932474020215
## end
#78, 9998:
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0;
1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0;
1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0;
1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0
## end
#80, 5:
50,40
## end
#82, 3:
4,5
## end
#84, 5:
1,0,2
## end
#85, 5:
1,0,2
## end
#86, 13:
1.0, 0.0, 2.0
## end
#87, 13:
1.0, 0.0, 2.0
## end
#88, 13:
1.0, 0.0, 2.0
## end
#89, 13:
1.0, 0.0, 2.0
## end
### 结束