### 节点
地址, 的, 工程架构, 目录, 的, 的, 节点数目统计, 的, GEANT4架构, 的, 收集文件, 的, 搜索文件, 的, 定义函数, 的, 所有文件, 的, 保存, 的, 获取引用关系, 的, 操作, 的, 解析工程文件架构, 的, P代码, 的, 函数定义, 的, 信息, 的, 地址, 打开文件夹, 的, Smilei架构, 的, PIConGPU架构, 的, 地址, 的, 地址, 的, 信息, 的, 信息, 的, FreeCAD架构, 的, 地址, 的, 信息, 的, 阅读日志, 的, 例子, 的, 20230527, 的, 例子, 的, 定义几何体, 的, 打开库文件, 的, P代码, 手, 手, 的, beamOn位置, 的, DoProcessing结构, 的, Stepping过程, 的, 参考GPIL, 的, 参考VP, 手, 手, 的, 框架参考, 的, 参考Phy, 的, 参考, 的, 参考Boris1, 的, 参考Boris2, 的, 判断碰撞, 的, 代码内容, 的, 结构, 的, 描述文本, 结构, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 条件, 模块, 的, 的, 整理信息, 的, 调用命令, 的, 结构描述, 的, 结构, 的, 流程图, 结构, 的, 内容, 的, 模块, 的, 的, 起点, 的, 的, 的, 是, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, 的, BeamOn流程, 的, 结构描述, 的, 结构, 的, 流程图, 结构, 的, 内容, 的, 模块, 的, 的, 起点, 的, 的, 的, 是, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, 的, Stepping流程, 的, 结构描述, 的, 结构, 的, 流程图, 结构, 的, 内容, 的, 模块, 的, 的, 起点, 的, 的, 的, 是, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, 的, 关键类, 的, G4VProcess, 的, 结构描述, 的, 结构, 的, 分类图, 结构, 的, 内容, 的, 模块, 的, 的, 起点, 的, 的, 的, 是, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, 的, G4MagIntegratorStepper, 的, 结构描述, 的, 结构, 的, 分类图, 结构, 的, 内容, 的, 模块, 的, 的, 起点, 的, 的, 的, 是, 空间点, 在, 运算模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, 的, 的, 空间点, 在, 支路模块, 的, 的, 的, 空间点, 在, 文字位置, 的, 的, 的, 文字, y, 的, x, 的, 长度, 的, 宽度, 的, 的, 样式, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, y, 的, x, 的, 的, 样式, 连线, 的, 
### 关联
#, 2#0, #, #, 3#2, 3#6, #, 2#8, #, 8#10, #, 10#12, #, 10#14, #, 10#16, #, 10#18, #, 10#20, #, 2#22, #, 22#24, #, 24#26, #, 24#28, #, 8#30, #, 8#32, #, #32, 2#35, #, 2#37, #, 37#39, #, 35#41, #, 35#43, #, 37#45, #, 2#47, #, 47#49, #, 47#51, #, 8#53, #, 53#55, #, 53#57, #, 57#59, #, 57#61, #, 22#63, #, 63#65, #, #57, #57, 57#69, #, 69#71, #, 57#73, #, 73#75, #, 73#77, #, #73, #73, 73#81, #, 73#83, #, 73#85, #, 73#87, #, 73#89, #, 73#91, #, 91#93, #, 91#95, #, 91#97, #, #, 97#98, 98#101, 102#, #, 98#102, 98#105, 106#, #, 98#106, 98#109, 110#, #, 98#110, 98#113, 114#, #, 98#114, 98#117, 118#, #, 98#118, 98#121, 122#, #, 98#122, 98#125, 126#, #, 98#126, 98#129, 130#, #, 98#130, 98#133, 134#, #, 98#134, 98#137, 138#, #, 98#138, 98#141, 142#, #, 98#142, 98#145, 146#, #, 98#146, 98#149, 150#, #, 98#150, 98#153, 154#, #, 98#154, 98#157, 158#, #, 98#158, 98#161, 162#, #, 98#162, 98#165, 166#, #, 98#166, 98#169, 170#, #, 98#170, 98#173, 174#, #, 98#174, 98#177, 178#, #, 98#178, 98#181, 182#, #, 98#182, 98#185, 186#, #, 98#186, 98#189, 190#, #, 98#190, 98#193, 194#, #, 98#194, 98#197, 198#, #, 98#198, 98#201, 202#, #, 98#202, 98#205, 206#, #, 98#206, 98#209, 210#, #, 98#210, 98#213, 214#, #, 98#214, 98#217, 218#, #, 98#218, 8#221, #, 221#223, #, 223#225, #, 223#227, #, 223#229, #, #, 229#230, 234#, 230#232, #, 230#234, 230#237, #234, 234#241, 244#242, 244#243, 234#244, #, 244#242, #, 229#244, 254#248, 254#249, #, 254#248, #, 254#250, 244#254, 229#254, #, #, 244#255, #, 244#257, #, 244#259, #, 244#261, 244#264, 244#, 269#267, 269#268, #, 269#267, #, 229#269, 279#273, 279#274, #, 279#273, #, 279#275, 269#279, 229#279, #, #, 269#280, #, 269#282, #, 269#284, #, 269#286, 269#289, 269#, 294#292, 294#293, #, 294#292, #, 229#294, 304#298, 304#299, #, 304#298, #, 304#300, 294#304, 229#304, #, #, 294#305, #, 294#307, #, 294#309, #, 294#311, 294#314, 294#, 319#317, 319#318, #, 319#317, #, 229#319, 329#323, 329#324, #, 329#323, #, 329#325, 319#329, 229#329, #, #, 319#330, #, 319#332, #, 319#334, #, 319#336, 319#339, 319#, 344#342, 344#343, #, 344#342, #, 229#344, 354#348, 354#349, #, 354#348, #, 354#350, 344#354, 229#354, #, #, 344#355, #, 344#357, #, 344#359, #, 344#361, 344#364, 344#, 369#367, 369#368, #, 369#367, #, 229#369, 379#373, 379#374, #, 379#373, #, 379#375, 369#379, 229#379, #, #, 369#380, #, 369#382, #, 369#384, #, 369#386, 369#389, 369#, 394#392, 394#393, #, 394#392, #, 229#394, 404#398, 404#399, #, 404#398, #, 404#400, 394#404, 229#404, #, #, 394#405, #, 394#407, #, 394#409, #, 394#411, 394#414, 394#, 419#417, 419#418, #, 419#417, #, 229#419, 429#423, 429#424, #, 429#423, #, 429#425, 419#429, 229#429, #, #, 419#430, #, 419#432, #, 419#434, #, 419#436, 419#439, 419#, 444#442, 444#443, #, 444#442, #, 229#444, 454#448, 454#449, #, 454#448, #, 454#450, 444#454, 229#454, #, #, 444#455, #, 444#457, #, 444#459, #, 444#461, 444#464, 444#, #, 471#465, #, 471#467, 471#470, 471#, 244#269, 229#471, #, 479#473, #, 479#475, 479#478, 479#, 269#319, 229#479, #, 487#481, #, 487#483, 487#486, 487#, 269#294, 229#487, #, 495#489, #, 495#491, 495#494, 495#, 294#319, 229#495, #, 503#497, #, 503#499, 503#502, 503#, 319#369, 229#503, #, 511#505, #, 511#507, 511#510, 511#, 319#344, 229#511, #, 519#513, #, 519#515, 519#518, 519#, 344#369, 229#519, #, 527#521, #, 527#523, 527#526, 527#, 369#444, 229#527, #, 535#529, #, 535#531, 535#534, 535#, 369#394, 229#535, #, 543#537, #, 543#539, 543#542, 543#, 394#419, 229#543, #, 551#545, #, 551#547, 551#550, 551#, 419#444, 229#551, 221#554, #, 554#556, #, 554#558, #, 554#560, #, #, 560#561, 565#, 561#563, #, 561#565, 561#568, #565, 565#572, 575#573, 575#574, 565#575, #, 575#573, #, 560#575, 585#579, 585#580, #, 585#579, #, 585#581, 575#585, 560#585, #, #, 575#586, #, 575#588, #, 575#590, #, 575#592, 575#595, 575#, 600#598, 600#599, #, 600#598, #, 560#600, 610#604, 610#605, #, 610#604, #, 610#606, 600#610, 560#610, #, #, 600#611, #, 600#613, #, 600#615, #, 600#617, 600#620, 600#, 625#623, 625#624, #, 625#623, #, 560#625, 635#629, 635#630, #, 635#629, #, 635#631, 625#635, 560#635, #, #, 625#636, #, 625#638, #, 625#640, #, 625#642, 625#645, 625#, 650#648, 650#649, #, 650#648, #, 560#650, 660#654, 660#655, #, 660#654, #, 660#656, 650#660, 560#660, #, #, 650#661, #, 650#663, #, 650#665, #, 650#667, 650#670, 650#, 675#673, 675#674, #, 675#673, #, 560#675, 685#679, 685#680, #, 685#679, #, 685#681, 675#685, 560#685, #, #, 675#686, #, 675#688, #, 675#690, #, 675#692, 675#695, 675#, 700#698, 700#699, #, 700#698, #, 560#700, 710#704, 710#705, #, 710#704, #, 710#706, 700#710, 560#710, #, #, 700#711, #, 700#713, #, 700#715, #, 700#717, 700#720, 700#, 725#723, 725#724, #, 725#723, #, 560#725, 735#729, 735#730, #, 735#729, #, 735#731, 725#735, 560#735, #, #, 725#736, #, 725#738, #, 725#740, #, 725#742, 725#745, 725#, 750#748, 750#749, #, 750#748, #, 560#750, 760#754, 760#755, #, 760#754, #, 760#756, 750#760, 560#760, #, #, 750#761, #, 750#763, #, 750#765, #, 750#767, 750#770, 750#, 775#773, 775#774, #, 775#773, #, 560#775, 785#779, 785#780, #, 785#779, #, 785#781, 775#785, 560#785, #, #, 775#786, #, 775#788, #, 775#790, #, 775#792, 775#795, 775#, 800#798, 800#799, #, 800#798, #, 560#800, 810#804, 810#805, #, 810#804, #, 810#806, 800#810, 560#810, #, #, 800#811, #, 800#813, #, 800#815, #, 800#817, 800#820, 800#, 825#823, 825#824, #, 825#823, #, 560#825, 835#829, 835#830, #, 835#829, #, 835#831, 825#835, 560#835, #, #, 825#836, #, 825#838, #, 825#840, #, 825#842, 825#845, 825#, 850#848, 850#849, #, 850#848, #, 560#850, 860#854, 860#855, #, 860#854, #, 860#856, 850#860, 560#860, #, #, 850#861, #, 850#863, #, 850#865, #, 850#867, 850#870, 850#, 875#873, 875#874, #, 875#873, #, 560#875, 885#879, 885#880, #, 885#879, #, 885#881, 875#885, 560#885, #, #, 875#886, #, 875#888, #, 875#890, #, 875#892, 875#895, 875#, 900#898, 900#899, #, 900#898, #, 560#900, 910#904, 910#905, #, 910#904, #, 910#906, 900#910, 560#910, #, #, 900#911, #, 900#913, #, 900#915, #, 900#917, 900#920, 900#, 925#923, 925#924, #, 925#923, #, 560#925, 935#929, 935#930, #, 935#929, #, 935#931, 925#935, 560#935, #, #, 925#936, #, 925#938, #, 925#940, #, 925#942, 925#945, 925#, 950#948, 950#949, #, 950#948, #, 560#950, 960#954, 960#955, #, 960#954, #, 960#956, 950#960, 560#960, #, #, 950#961, #, 950#963, #, 950#965, #, 950#967, 950#970, 950#, 975#973, 975#974, #, 975#973, #, 560#975, 985#979, 985#980, #, 985#979, #, 985#981, 975#985, 560#985, #, #, 975#986, #, 975#988, #, 975#990, #, 975#992, 975#995, 975#, #, 1002#996, #, 1002#998, 1002#1001, 1002#, 575#600, 560#1002, #, 1010#1004, #, 1010#1006, 1010#1009, 1010#, 600#625, 560#1010, #, 1018#1012, #, 1018#1014, 1018#1017, 1018#, 625#650, 560#1018, #, 1026#1020, #, 1026#1022, 1026#1025, 1026#, 650#675, 560#1026, #, 1034#1028, #, 1034#1030, 1034#1033, 1034#, 675#700, 560#1034, #, 1042#1036, #, 1042#1038, 1042#1041, 1042#, 675#700, 560#1042, #, 1050#1044, #, 1050#1046, 1050#1049, 1050#, 675#775, 560#1050, #, 1058#1052, #, 1058#1054, 1058#1057, 1058#, 675#725, 560#1058, #, 1066#1060, #, 1066#1062, 1066#1065, 1066#, 725#750, 560#1066, #, 1074#1068, #, 1074#1070, 1074#1073, 1074#, 750#775, 560#1074, #, 1082#1076, #, 1082#1078, 1082#1081, 1082#, 775#825, 560#1082, #, 1090#1084, #, 1090#1086, 1090#1089, 1090#, 775#800, 560#1090, #, 1098#1092, #, 1098#1094, 1098#1097, 1098#, 800#825, 560#1098, #, 1106#1100, #, 1106#1102, 1106#1105, 1106#, 825#875, 560#1106, #, 1114#1108, #, 1114#1110, 1114#1113, 1114#, 825#850, 560#1114, #, 1122#1116, #, 1122#1118, 1122#1121, 1122#, 825#925, 560#1122, #, 1130#1124, #, 1130#1126, 1130#1129, 1130#, 825#900, 560#1130, #, 1138#1132, #, 1138#1134, 1138#1137, 1138#, 850#875, 560#1138, #, 1146#1140, #, 1146#1142, 1146#1145, 1146#, 900#925, 560#1146, #, 1154#1148, #, 1154#1150, 1154#1153, 1154#, 925#975, 560#1154, #, 1162#1156, #, 1162#1158, 1162#1161, 1162#, 925#950, 560#1162, #, 1170#1164, #, 1170#1166, 1170#1169, 1170#, 950#975, 560#1170, 221#1173, #, 1173#1175, #, 1173#1177, #, 1173#1179, #, #, 1179#1180, 1184#, 1180#1182, #, 1180#1184, 1180#1187, #1184, 1184#1191, 1194#1192, 1194#1193, 1184#1194, #, 1194#1192, #, 1179#1194, 1204#1198, 1204#1199, #, 1204#1198, #, 1204#1200, 1194#1204, 1179#1204, #, #, 1194#1205, #, 1194#1207, #, 1194#1209, #, 1194#1211, 1194#1214, 1194#, 1219#1217, 1219#1218, #, 1219#1217, #, 1179#1219, 1229#1223, 1229#1224, #, 1229#1223, #, 1229#1225, 1219#1229, 1179#1229, #, #, 1219#1230, #, 1219#1232, #, 1219#1234, #, 1219#1236, 1219#1239, 1219#, 1244#1242, 1244#1243, #, 1244#1242, #, 1179#1244, 1254#1248, 1254#1249, #, 1254#1248, #, 1254#1250, 1244#1254, 1179#1254, #, #, 1244#1255, #, 1244#1257, #, 1244#1259, #, 1244#1261, 1244#1264, 1244#, 1269#1267, 1269#1268, #, 1269#1267, #, 1179#1269, 1279#1273, 1279#1274, #, 1279#1273, #, 1279#1275, 1269#1279, 1179#1279, #, #, 1269#1280, #, 1269#1282, #, 1269#1284, #, 1269#1286, 1269#1289, 1269#, 1294#1292, 1294#1293, #, 1294#1292, #, 1179#1294, 1304#1298, 1304#1299, #, 1304#1298, #, 1304#1300, 1294#1304, 1179#1304, #, #, 1294#1305, #, 1294#1307, #, 1294#1309, #, 1294#1311, 1294#1314, 1294#, 1319#1317, 1319#1318, #, 1319#1317, #, 1179#1319, 1329#1323, 1329#1324, #, 1329#1323, #, 1329#1325, 1319#1329, 1179#1329, #, #, 1319#1330, #, 1319#1332, #, 1319#1334, #, 1319#1336, 1319#1339, 1319#, 1344#1342, 1344#1343, #, 1344#1342, #, 1179#1344, 1354#1348, 1354#1349, #, 1354#1348, #, 1354#1350, 1344#1354, 1179#1354, #, #, 1344#1355, #, 1344#1357, #, 1344#1359, #, 1344#1361, 1344#1364, 1344#, 1369#1367, 1369#1368, #, 1369#1367, #, 1179#1369, 1379#1373, 1379#1374, #, 1379#1373, #, 1379#1375, 1369#1379, 1179#1379, #, #, 1369#1380, #, 1369#1382, #, 1369#1384, #, 1369#1386, 1369#1389, 1369#, 1394#1392, 1394#1393, #, 1394#1392, #, 1179#1394, 1404#1398, 1404#1399, #, 1404#1398, #, 1404#1400, 1394#1404, 1179#1404, #, #, 1394#1405, #, 1394#1407, #, 1394#1409, #, 1394#1411, 1394#1414, 1394#, 1419#1417, 1419#1418, #, 1419#1417, #, 1179#1419, 1429#1423, 1429#1424, #, 1429#1423, #, 1429#1425, 1419#1429, 1179#1429, #, #, 1419#1430, #, 1419#1432, #, 1419#1434, #, 1419#1436, 1419#1439, 1419#, 1444#1442, 1444#1443, #, 1444#1442, #, 1179#1444, 1454#1448, 1454#1449, #, 1454#1448, #, 1454#1450, 1444#1454, 1179#1454, #, #, 1444#1455, #, 1444#1457, #, 1444#1459, #, 1444#1461, 1444#1464, 1444#, 1469#1467, 1469#1468, #, 1469#1467, #, 1179#1469, 1479#1473, 1479#1474, #, 1479#1473, #, 1479#1475, 1469#1479, 1179#1479, #, #, 1469#1480, #, 1469#1482, #, 1469#1484, #, 1469#1486, 1469#1489, 1469#, 1494#1492, 1494#1493, #, 1494#1492, #, 1179#1494, 1504#1498, 1504#1499, #, 1504#1498, #, 1504#1500, 1494#1504, 1179#1504, #, #, 1494#1505, #, 1494#1507, #, 1494#1509, #, 1494#1511, 1494#1514, 1494#, 1519#1517, 1519#1518, #, 1519#1517, #, 1179#1519, 1529#1523, 1529#1524, #, 1529#1523, #, 1529#1525, 1519#1529, 1179#1529, #, #, 1519#1530, #, 1519#1532, #, 1519#1534, #, 1519#1536, 1519#1539, 1519#, 1544#1542, 1544#1543, #, 1544#1542, #, 1179#1544, 1554#1548, 1554#1549, #, 1554#1548, #, 1554#1550, 1544#1554, 1179#1554, #, #, 1544#1555, #, 1544#1557, #, 1544#1559, #, 1544#1561, 1544#1564, 1544#, 1569#1567, 1569#1568, #, 1569#1567, #, 1179#1569, 1579#1573, 1579#1574, #, 1579#1573, #, 1579#1575, 1569#1579, 1179#1579, #, #, 1569#1580, #, 1569#1582, #, 1569#1584, #, 1569#1586, 1569#1589, 1569#, 1594#1592, 1594#1593, #, 1594#1592, #, 1179#1594, 1604#1598, 1604#1599, #, 1604#1598, #, 1604#1600, 1594#1604, 1179#1604, #, #, 1594#1605, #, 1594#1607, #, 1594#1609, #, 1594#1611, 1594#1614, 1594#, 1619#1617, 1619#1618, #, 1619#1617, #, 1179#1619, 1629#1623, 1629#1624, #, 1629#1623, #, 1629#1625, 1619#1629, 1179#1629, #, #, 1619#1630, #, 1619#1632, #, 1619#1634, #, 1619#1636, 1619#1639, 1619#, 1644#1642, 1644#1643, #, 1644#1642, #, 1179#1644, 1654#1648, 1654#1649, #, 1654#1648, #, 1654#1650, 1644#1654, 1179#1654, #, #, 1644#1655, #, 1644#1657, #, 1644#1659, #, 1644#1661, 1644#1664, 1644#, 1669#1667, 1669#1668, #, 1669#1667, #, 1179#1669, 1679#1673, 1679#1674, #, 1679#1673, #, 1679#1675, 1669#1679, 1179#1679, #, #, 1669#1680, #, 1669#1682, #, 1669#1684, #, 1669#1686, 1669#1689, 1669#, 1694#1692, 1694#1693, #, 1694#1692, #, 1179#1694, 1704#1698, 1704#1699, #, 1704#1698, #, 1704#1700, 1694#1704, 1179#1704, #, #, 1694#1705, #, 1694#1707, #, 1694#1709, #, 1694#1711, 1694#1714, 1694#, 1719#1717, 1719#1718, #, 1719#1717, #, 1179#1719, 1729#1723, 1729#1724, #, 1729#1723, #, 1729#1725, 1719#1729, 1179#1729, #, #, 1719#1730, #, 1719#1732, #, 1719#1734, #, 1719#1736, 1719#1739, 1719#, 1744#1742, 1744#1743, #, 1744#1742, #, 1179#1744, 1754#1748, 1754#1749, #, 1754#1748, #, 1754#1750, 1744#1754, 1179#1754, #, #, 1744#1755, #, 1744#1757, #, 1744#1759, #, 1744#1761, 1744#1764, 1744#, 1769#1767, 1769#1768, #, 1769#1767, #, 1179#1769, 1779#1773, 1779#1774, #, 1779#1773, #, 1779#1775, 1769#1779, 1179#1779, #, #, 1769#1780, #, 1769#1782, #, 1769#1784, #, 1769#1786, 1769#1789, 1769#, 1794#1792, 1794#1793, #, 1794#1792, #, 1179#1794, 1804#1798, 1804#1799, #, 1804#1798, #, 1804#1800, 1794#1804, 1179#1804, #, #, 1794#1805, #, 1794#1807, #, 1794#1809, #, 1794#1811, 1794#1814, 1794#, 1819#1817, 1819#1818, #, 1819#1817, #, 1179#1819, 1829#1823, 1829#1824, #, 1829#1823, #, 1829#1825, 1819#1829, 1179#1829, #, #, 1819#1830, #, 1819#1832, #, 1819#1834, #, 1819#1836, 1819#1839, 1819#, 1844#1842, 1844#1843, #, 1844#1842, #, 1179#1844, 1854#1848, 1854#1849, #, 1854#1848, #, 1854#1850, 1844#1854, 1179#1854, #, #, 1844#1855, #, 1844#1857, #, 1844#1859, #, 1844#1861, 1844#1864, 1844#, 1869#1867, 1869#1868, #, 1869#1867, #, 1179#1869, 1879#1873, 1879#1874, #, 1879#1873, #, 1879#1875, 1869#1879, 1179#1879, #, #, 1869#1880, #, 1869#1882, #, 1869#1884, #, 1869#1886, 1869#1889, 1869#, 1894#1892, 1894#1893, #, 1894#1892, #, 1179#1894, 1904#1898, 1904#1899, #, 1904#1898, #, 1904#1900, 1894#1904, 1179#1904, #, #, 1894#1905, #, 1894#1907, #, 1894#1909, #, 1894#1911, 1894#1914, 1894#, 1919#1917, 1919#1918, #, 1919#1917, #, 1179#1919, 1929#1923, 1929#1924, #, 1929#1923, #, 1929#1925, 1919#1929, 1179#1929, #, #, 1919#1930, #, 1919#1932, #, 1919#1934, #, 1919#1936, 1919#1939, 1919#, 1944#1942, 1944#1943, #, 1944#1942, #, 1179#1944, 1954#1948, 1954#1949, #, 1954#1948, #, 1954#1950, 1944#1954, 1179#1954, #, #, 1944#1955, #, 1944#1957, #, 1944#1959, #, 1944#1961, 1944#1964, 1944#, 1969#1967, 1969#1968, #, 1969#1967, #, 1179#1969, 1979#1973, 1979#1974, #, 1979#1973, #, 1979#1975, 1969#1979, 1179#1979, #, #, 1969#1980, #, 1969#1982, #, 1969#1984, #, 1969#1986, 1969#1989, 1969#, 1994#1992, 1994#1993, #, 1994#1992, #, 1179#1994, 2004#1998, 2004#1999, #, 2004#1998, #, 2004#2000, 1994#2004, 1179#2004, #, #, 1994#2005, #, 1994#2007, #, 1994#2009, #, 1994#2011, 1994#2014, 1994#, 2019#2017, 2019#2018, #, 2019#2017, #, 1179#2019, 2029#2023, 2029#2024, #, 2029#2023, #, 2029#2025, 2019#2029, 1179#2029, #, #, 2019#2030, #, 2019#2032, #, 2019#2034, #, 2019#2036, 2019#2039, 2019#, 2044#2042, 2044#2043, #, 2044#2042, #, 1179#2044, 2054#2048, 2054#2049, #, 2054#2048, #, 2054#2050, 2044#2054, 1179#2054, #, #, 2044#2055, #, 2044#2057, #, 2044#2059, #, 2044#2061, 2044#2064, 2044#, 2069#2067, 2069#2068, #, 2069#2067, #, 1179#2069, 2079#2073, 2079#2074, #, 2079#2073, #, 2079#2075, 2069#2079, 1179#2079, #, #, 2069#2080, #, 2069#2082, #, 2069#2084, #, 2069#2086, 2069#2089, 2069#, 2094#2092, 2094#2093, #, 2094#2092, #, 1179#2094, 2104#2098, 2104#2099, #, 2104#2098, #, 2104#2100, 2094#2104, 1179#2104, #, #, 2094#2105, #, 2094#2107, #, 2094#2109, #, 2094#2111, 2094#2114, 2094#, 2119#2117, 2119#2118, #, 2119#2117, #, 1179#2119, 2129#2123, 2129#2124, #, 2129#2123, #, 2129#2125, 2119#2129, 1179#2129, #, #, 2119#2130, #, 2119#2132, #, 2119#2134, #, 2119#2136, 2119#2139, 2119#, 2144#2142, 2144#2143, #, 2144#2142, #, 1179#2144, 2154#2148, 2154#2149, #, 2154#2148, #, 2154#2150, 2144#2154, 1179#2154, #, #, 2144#2155, #, 2144#2157, #, 2144#2159, #, 2144#2161, 2144#2164, 2144#, 2169#2167, 2169#2168, #, 2169#2167, #, 1179#2169, 2179#2173, 2179#2174, #, 2179#2173, #, 2179#2175, 2169#2179, 1179#2179, #, #, 2169#2180, #, 2169#2182, #, 2169#2184, #, 2169#2186, 2169#2189, 2169#, 2194#2192, 2194#2193, #, 2194#2192, #, 1179#2194, 2204#2198, 2204#2199, #, 2204#2198, #, 2204#2200, 2194#2204, 1179#2204, #, #, 2194#2205, #, 2194#2207, #, 2194#2209, #, 2194#2211, 2194#2214, 2194#, 2219#2217, 2219#2218, #, 2219#2217, #, 1179#2219, 2229#2223, 2229#2224, #, 2229#2223, #, 2229#2225, 2219#2229, 1179#2229, #, #, 2219#2230, #, 2219#2232, #, 2219#2234, #, 2219#2236, 2219#2239, 2219#, #, 2246#2240, #, 2246#2242, 2246#2245, 2246#, 1194#1219, 1179#2246, #, 2254#2248, #, 2254#2250, 2254#2253, 2254#, 1219#1244, 1179#2254, #, 2262#2256, #, 2262#2258, 2262#2261, 2262#, 1244#1269, 1179#2262, #, 2270#2264, #, 2270#2266, 2270#2269, 2270#, 1269#1344, 1179#2270, #, 2278#2272, #, 2278#2274, 2278#2277, 2278#, 1269#1294, 1179#2278, #, 2286#2280, #, 2286#2282, 2286#2285, 2286#, 1269#2219, 1179#2286, #, 2294#2288, #, 2294#2290, 2294#2293, 2294#, 1269#2194, 1179#2294, #, 2302#2296, #, 2302#2298, 2302#2301, 2302#, 1294#1319, 1179#2302, #, 2310#2304, #, 2310#2306, 2310#2309, 2310#, 1319#1519, 1179#2310, #, 2318#2312, #, 2318#2314, 2318#2317, 2318#, 1319#1469, 1179#2318, #, 2326#2320, #, 2326#2322, 2326#2325, 2326#, 1319#2019, 1179#2326, #, 2334#2328, #, 2334#2330, 2334#2333, 2334#, 1319#1994, 1179#2334, #, 2342#2336, #, 2342#2338, 2342#2341, 2342#, 1319#2069, 1179#2342, #, 2350#2344, #, 2350#2346, 2350#2349, 2350#, 1319#2044, 1179#2350, #, 2358#2352, #, 2358#2354, 2358#2357, 2358#, 1319#2119, 1179#2358, #, 2366#2360, #, 2366#2362, 2366#2365, 2366#, 1319#2094, 1179#2366, #, 2374#2368, #, 2374#2370, 2374#2373, 2374#, 1319#2169, 1179#2374, #, 2382#2376, #, 2382#2378, 2382#2381, 2382#, 1319#2144, 1179#2382, #, 2390#2384, #, 2390#2386, 2390#2389, 2390#, 1344#1394, 1179#2390, #, 2398#2392, #, 2398#2394, 2398#2397, 2398#, 1344#1369, 1179#2398, #, 2406#2400, #, 2406#2402, 2406#2405, 2406#, 1344#1444, 1179#2406, #, 2414#2408, #, 2414#2410, 2414#2413, 2414#, 1344#1419, 1179#2414, #, 2422#2416, #, 2422#2418, 2422#2421, 2422#, 1369#1394, 1179#2422, #, 2430#2424, #, 2430#2426, 2430#2429, 2430#, 1419#1444, 1179#2430, #, 2438#2432, #, 2438#2434, 2438#2437, 2438#, 1469#1494, 1179#2438, #, 2446#2440, #, 2446#2442, 2446#2445, 2446#, 1494#1694, 1179#2446, #, 2454#2448, #, 2454#2450, 2454#2453, 2454#, 1494#1644, 1179#2454, #, 2462#2456, #, 2462#2458, 2462#2461, 2462#, 1494#1969, 1179#2462, #, 2470#2464, #, 2470#2466, 2470#2469, 2470#, 1494#1919, 1179#2470, #, 2478#2472, #, 2478#2474, 2478#2477, 2478#, 1519#1569, 1179#2478, #, 2486#2480, #, 2486#2482, 2486#2485, 2486#, 1519#1544, 1179#2486, #, 2494#2488, #, 2494#2490, 2494#2493, 2494#, 1544#1569, 1179#2494, #, 2502#2496, #, 2502#2498, 2502#2501, 2502#, 1569#1619, 1179#2502, #, 2510#2504, #, 2510#2506, 2510#2509, 2510#, 1569#1594, 1179#2510, #, 2518#2512, #, 2518#2514, 2518#2517, 2518#, 1594#1619, 1179#2518, #, 2526#2520, #, 2526#2522, 2526#2525, 2526#, 1644#1669, 1179#2526, #, 2534#2528, #, 2534#2530, 2534#2533, 2534#, 1669#1694, 1179#2534, #, 2542#2536, #, 2542#2538, 2542#2541, 2542#, 1694#1744, 1179#2542, #, 2550#2544, #, 2550#2546, 2550#2549, 2550#, 1694#1719, 1179#2550, #, 2558#2552, #, 2558#2554, 2558#2557, 2558#, 1719#1744, 1179#2558, #, 2566#2560, #, 2566#2562, 2566#2565, 2566#, 1744#1819, 1179#2566, #, 2574#2568, #, 2574#2570, 2574#2573, 2574#, 1744#1769, 1179#2574, #, 2582#2576, #, 2582#2578, 2582#2581, 2582#, 1769#1794, 1179#2582, #, 2590#2584, #, 2590#2586, 2590#2589, 2590#, 1794#1819, 1179#2590, #, 2598#2592, #, 2598#2594, 2598#2597, 2598#, 1819#1894, 1179#2598, #, 2606#2600, #, 2606#2602, 2606#2605, 2606#, 1819#1844, 1179#2606, #, 2614#2608, #, 2614#2610, 2614#2613, 2614#, 1844#1869, 1179#2614, #, 2622#2616, #, 2622#2618, 2622#2621, 2622#, 1869#1894, 1179#2622, #, 2630#2624, #, 2630#2626, 2630#2629, 2630#, 1919#1944, 1179#2630, #, 2638#2632, #, 2638#2634, 2638#2637, 2638#, 1944#1969, 1179#2638, #, 2646#2640, #, 2646#2642, 2646#2645, 2646#, 1994#2019, 1179#2646, #, 2654#2648, #, 2654#2650, 2654#2653, 2654#, 2044#2069, 1179#2654, #, 2662#2656, #, 2662#2658, 2662#2661, 2662#, 2094#2119, 1179#2662, #, 2670#2664, #, 2670#2666, 2670#2669, 2670#, 2144#2169, 1179#2670, #, 2678#2672, #, 2678#2674, 2678#2677, 2678#, 2194#2219, 1179#2678, 221#2681, #, 2681#2683, #, 2683#2685, #, 2683#2687, #, 2683#2689, #, #, 2689#2690, 2694#, 2690#2692, #, 2690#2694, 2690#2697, #2694, 2694#2701, 2704#2702, 2704#2703, 2694#2704, #, 2704#2702, #, 2689#2704, 2714#2708, 2714#2709, #, 2714#2708, #, 2714#2710, 2704#2714, 2689#2714, #, #, 2704#2715, #, 2704#2717, #, 2704#2719, #, 2704#2721, 2704#2724, 2704#, 2729#2727, 2729#2728, #, 2729#2727, #, 2689#2729, 2739#2733, 2739#2734, #, 2739#2733, #, 2739#2735, 2729#2739, 2689#2739, #, #, 2729#2740, #, 2729#2742, #, 2729#2744, #, 2729#2746, 2729#2749, 2729#, 2754#2752, 2754#2753, #, 2754#2752, #, 2689#2754, 2764#2758, 2764#2759, #, 2764#2758, #, 2764#2760, 2754#2764, 2689#2764, #, #, 2754#2765, #, 2754#2767, #, 2754#2769, #, 2754#2771, 2754#2774, 2754#, 2779#2777, 2779#2778, #, 2779#2777, #, 2689#2779, 2789#2783, 2789#2784, #, 2789#2783, #, 2789#2785, 2779#2789, 2689#2789, #, #, 2779#2790, #, 2779#2792, #, 2779#2794, #, 2779#2796, 2779#2799, 2779#, 2804#2802, 2804#2803, #, 2804#2802, #, 2689#2804, 2814#2808, 2814#2809, #, 2814#2808, #, 2814#2810, 2804#2814, 2689#2814, #, #, 2804#2815, #, 2804#2817, #, 2804#2819, #, 2804#2821, 2804#2824, 2804#, 2829#2827, 2829#2828, #, 2829#2827, #, 2689#2829, 2839#2833, 2839#2834, #, 2839#2833, #, 2839#2835, 2829#2839, 2689#2839, #, #, 2829#2840, #, 2829#2842, #, 2829#2844, #, 2829#2846, 2829#2849, 2829#, 2854#2852, 2854#2853, #, 2854#2852, #, 2689#2854, 2864#2858, 2864#2859, #, 2864#2858, #, 2864#2860, 2854#2864, 2689#2864, #, #, 2854#2865, #, 2854#2867, #, 2854#2869, #, 2854#2871, 2854#2874, 2854#, 2879#2877, 2879#2878, #, 2879#2877, #, 2689#2879, 2889#2883, 2889#2884, #, 2889#2883, #, 2889#2885, 2879#2889, 2689#2889, #, #, 2879#2890, #, 2879#2892, #, 2879#2894, #, 2879#2896, 2879#2899, 2879#, 2904#2902, 2904#2903, #, 2904#2902, #, 2689#2904, 2914#2908, 2914#2909, #, 2914#2908, #, 2914#2910, 2904#2914, 2689#2914, #, #, 2904#2915, #, 2904#2917, #, 2904#2919, #, 2904#2921, 2904#2924, 2904#, 2929#2927, 2929#2928, #, 2929#2927, #, 2689#2929, 2939#2933, 2939#2934, #, 2939#2933, #, 2939#2935, 2929#2939, 2689#2939, #, #, 2929#2940, #, 2929#2942, #, 2929#2944, #, 2929#2946, 2929#2949, 2929#, 2954#2952, 2954#2953, #, 2954#2952, #, 2689#2954, 2964#2958, 2964#2959, #, 2964#2958, #, 2964#2960, 2954#2964, 2689#2964, #, #, 2954#2965, #, 2954#2967, #, 2954#2969, #, 2954#2971, 2954#2974, 2954#, 2979#2977, 2979#2978, #, 2979#2977, #, 2689#2979, 2989#2983, 2989#2984, #, 2989#2983, #, 2989#2985, 2979#2989, 2689#2989, #, #, 2979#2990, #, 2979#2992, #, 2979#2994, #, 2979#2996, 2979#2999, 2979#, 3004#3002, 3004#3003, #, 3004#3002, #, 2689#3004, 3014#3008, 3014#3009, #, 3014#3008, #, 3014#3010, 3004#3014, 2689#3014, #, #, 3004#3015, #, 3004#3017, #, 3004#3019, #, 3004#3021, 3004#3024, 3004#, 3029#3027, 3029#3028, #, 3029#3027, #, 2689#3029, 3039#3033, 3039#3034, #, 3039#3033, #, 3039#3035, 3029#3039, 2689#3039, #, #, 3029#3040, #, 3029#3042, #, 3029#3044, #, 3029#3046, 3029#3049, 3029#, 3054#3052, 3054#3053, #, 3054#3052, #, 2689#3054, 3064#3058, 3064#3059, #, 3064#3058, #, 3064#3060, 3054#3064, 2689#3064, #, #, 3054#3065, #, 3054#3067, #, 3054#3069, #, 3054#3071, 3054#3074, 3054#, 3079#3077, 3079#3078, #, 3079#3077, #, 2689#3079, 3089#3083, 3089#3084, #, 3089#3083, #, 3089#3085, 3079#3089, 2689#3089, #, #, 3079#3090, #, 3079#3092, #, 3079#3094, #, 3079#3096, 3079#3099, 3079#, 3104#3102, 3104#3103, #, 3104#3102, #, 2689#3104, 3114#3108, 3114#3109, #, 3114#3108, #, 3114#3110, 3104#3114, 2689#3114, #, #, 3104#3115, #, 3104#3117, #, 3104#3119, #, 3104#3121, 3104#3124, 3104#, 3129#3127, 3129#3128, #, 3129#3127, #, 2689#3129, 3139#3133, 3139#3134, #, 3139#3133, #, 3139#3135, 3129#3139, 2689#3139, #, #, 3129#3140, #, 3129#3142, #, 3129#3144, #, 3129#3146, 3129#3149, 3129#, 3154#3152, 3154#3153, #, 3154#3152, #, 2689#3154, 3164#3158, 3164#3159, #, 3164#3158, #, 3164#3160, 3154#3164, 2689#3164, #, #, 3154#3165, #, 3154#3167, #, 3154#3169, #, 3154#3171, 3154#3174, 3154#, 3179#3177, 3179#3178, #, 3179#3177, #, 2689#3179, 3189#3183, 3189#3184, #, 3189#3183, #, 3189#3185, 3179#3189, 2689#3189, #, #, 3179#3190, #, 3179#3192, #, 3179#3194, #, 3179#3196, 3179#3199, 3179#, 3204#3202, 3204#3203, #, 3204#3202, #, 2689#3204, 3214#3208, 3214#3209, #, 3214#3208, #, 3214#3210, 3204#3214, 2689#3214, #, #, 3204#3215, #, 3204#3217, #, 3204#3219, #, 3204#3221, 3204#3224, 3204#, 3229#3227, 3229#3228, #, 3229#3227, #, 2689#3229, 3239#3233, 3239#3234, #, 3239#3233, #, 3239#3235, 3229#3239, 2689#3239, #, #, 3229#3240, #, 3229#3242, #, 3229#3244, #, 3229#3246, 3229#3249, 3229#, 3254#3252, 3254#3253, #, 3254#3252, #, 2689#3254, 3264#3258, 3264#3259, #, 3264#3258, #, 3264#3260, 3254#3264, 2689#3264, #, #, 3254#3265, #, 3254#3267, #, 3254#3269, #, 3254#3271, 3254#3274, 3254#, 3279#3277, 3279#3278, #, 3279#3277, #, 2689#3279, 3289#3283, 3289#3284, #, 3289#3283, #, 3289#3285, 3279#3289, 2689#3289, #, #, 3279#3290, #, 3279#3292, #, 3279#3294, #, 3279#3296, 3279#3299, 3279#, 3304#3302, 3304#3303, #, 3304#3302, #, 2689#3304, 3314#3308, 3314#3309, #, 3314#3308, #, 3314#3310, 3304#3314, 2689#3314, #, #, 3304#3315, #, 3304#3317, #, 3304#3319, #, 3304#3321, 3304#3324, 3304#, 3329#3327, 3329#3328, #, 3329#3327, #, 2689#3329, 3339#3333, 3339#3334, #, 3339#3333, #, 3339#3335, 3329#3339, 2689#3339, #, #, 3329#3340, #, 3329#3342, #, 3329#3344, #, 3329#3346, 3329#3349, 3329#, 3354#3352, 3354#3353, #, 3354#3352, #, 2689#3354, 3364#3358, 3364#3359, #, 3364#3358, #, 3364#3360, 3354#3364, 2689#3364, #, #, 3354#3365, #, 3354#3367, #, 3354#3369, #, 3354#3371, 3354#3374, 3354#, 3379#3377, 3379#3378, #, 3379#3377, #, 2689#3379, 3389#3383, 3389#3384, #, 3389#3383, #, 3389#3385, 3379#3389, 2689#3389, #, #, 3379#3390, #, 3379#3392, #, 3379#3394, #, 3379#3396, 3379#3399, 3379#, 3404#3402, 3404#3403, #, 3404#3402, #, 2689#3404, 3414#3408, 3414#3409, #, 3414#3408, #, 3414#3410, 3404#3414, 2689#3414, #, #, 3404#3415, #, 3404#3417, #, 3404#3419, #, 3404#3421, 3404#3424, 3404#, 3429#3427, 3429#3428, #, 3429#3427, #, 2689#3429, 3439#3433, 3439#3434, #, 3439#3433, #, 3439#3435, 3429#3439, 2689#3439, #, #, 3429#3440, #, 3429#3442, #, 3429#3444, #, 3429#3446, 3429#3449, 3429#, 3454#3452, 3454#3453, #, 3454#3452, #, 2689#3454, 3464#3458, 3464#3459, #, 3464#3458, #, 3464#3460, 3454#3464, 2689#3464, #, #, 3454#3465, #, 3454#3467, #, 3454#3469, #, 3454#3471, 3454#3474, 3454#, #, 3481#3475, #, 3481#3477, 3481#3480, 3481#, 2704#2729, 2689#3481, #, 3489#3483, #, 3489#3485, 3489#3488, 3489#, 2729#2754, 2689#3489, #, 3497#3491, #, 3497#3493, 3497#3496, 3497#, 2729#2779, 2689#3497, #, 3505#3499, #, 3505#3501, 3505#3504, 3505#, 2729#2804, 2689#3505, #, 3513#3507, #, 3513#3509, 3513#3512, 3513#, 2729#2829, 2689#3513, #, 3521#3515, #, 3521#3517, 3521#3520, 3521#, 2729#2854, 2689#3521, #, 3529#3523, #, 3529#3525, 3529#3528, 3529#, 2729#2879, 2689#3529, #, 3537#3531, #, 3537#3533, 3537#3536, 3537#, 2729#2904, 2689#3537, #, 3545#3539, #, 3545#3541, 3545#3544, 3545#, 2729#2929, 2689#3545, #, 3553#3547, #, 3553#3549, 3553#3552, 3553#, 2729#2954, 2689#3553, #, 3561#3555, #, 3561#3557, 3561#3560, 3561#, 2729#2979, 2689#3561, #, 3569#3563, #, 3569#3565, 3569#3568, 3569#, 2729#3004, 2689#3569, #, 3577#3571, #, 3577#3573, 3577#3576, 3577#, 2729#3029, 2689#3577, #, 3585#3579, #, 3585#3581, 3585#3584, 3585#, 2729#3054, 2689#3585, #, 3593#3587, #, 3593#3589, 3593#3592, 3593#, 2729#3079, 2689#3593, #, 3601#3595, #, 3601#3597, 3601#3600, 3601#, 2729#3104, 2689#3601, #, 3609#3603, #, 3609#3605, 3609#3608, 3609#, 2729#3129, 2689#3609, #, 3617#3611, #, 3617#3613, 3617#3616, 3617#, 2729#3154, 2689#3617, #, 3625#3619, #, 3625#3621, 3625#3624, 3625#, 2729#3179, 2689#3625, #, 3633#3627, #, 3633#3629, 3633#3632, 3633#, 2729#3204, 2689#3633, #, 3641#3635, #, 3641#3637, 3641#3640, 3641#, 2729#3229, 2689#3641, #, 3649#3643, #, 3649#3645, 3649#3648, 3649#, 2729#3254, 2689#3649, #, 3657#3651, #, 3657#3653, 3657#3656, 3657#, 2729#3279, 2689#3657, #, 3665#3659, #, 3665#3661, 3665#3664, 3665#, 2729#3304, 2689#3665, #, 3673#3667, #, 3673#3669, 3673#3672, 3673#, 2729#3329, 2689#3673, #, 3681#3675, #, 3681#3677, 3681#3680, 3681#, 2729#3354, 2689#3681, #, 3689#3683, #, 3689#3685, 3689#3688, 3689#, 2729#3379, 2689#3689, #, 3697#3691, #, 3697#3693, 3697#3696, 3697#, 2729#3404, 2689#3697, #, 3705#3699, #, 3705#3701, 3705#3704, 3705#, 2729#3429, 2689#3705, #, 3713#3707, #, 3713#3709, 3713#3712, 3713#, 2729#3454, 2689#3713, 2681#3716, #, 3716#3718, #, 3716#3720, #, 3716#3722, #, #, 3722#3723, 3727#, 3723#3725, #, 3723#3727, 3723#3730, #3727, 3727#3734, 3737#3735, 3737#3736, 3727#3737, #, 3737#3735, #, 3722#3737, 3747#3741, 3747#3742, #, 3747#3741, #, 3747#3743, 3737#3747, 3722#3747, #, #, 3737#3748, #, 3737#3750, #, 3737#3752, #, 3737#3754, 3737#3757, 3737#, 3762#3760, 3762#3761, #, 3762#3760, #, 3722#3762, 3772#3766, 3772#3767, #, 3772#3766, #, 3772#3768, 3762#3772, 3722#3772, #, #, 3762#3773, #, 3762#3775, #, 3762#3777, #, 3762#3779, 3762#3782, 3762#, 3787#3785, 3787#3786, #, 3787#3785, #, 3722#3787, 3797#3791, 3797#3792, #, 3797#3791, #, 3797#3793, 3787#3797, 3722#3797, #, #, 3787#3798, #, 3787#3800, #, 3787#3802, #, 3787#3804, 3787#3807, 3787#, 3812#3810, 3812#3811, #, 3812#3810, #, 3722#3812, 3822#3816, 3822#3817, #, 3822#3816, #, 3822#3818, 3812#3822, 3722#3822, #, #, 3812#3823, #, 3812#3825, #, 3812#3827, #, 3812#3829, 3812#3832, 3812#, 3837#3835, 3837#3836, #, 3837#3835, #, 3722#3837, 3847#3841, 3847#3842, #, 3847#3841, #, 3847#3843, 3837#3847, 3722#3847, #, #, 3837#3848, #, 3837#3850, #, 3837#3852, #, 3837#3854, 3837#3857, 3837#, 3862#3860, 3862#3861, #, 3862#3860, #, 3722#3862, 3872#3866, 3872#3867, #, 3872#3866, #, 3872#3868, 3862#3872, 3722#3872, #, #, 3862#3873, #, 3862#3875, #, 3862#3877, #, 3862#3879, 3862#3882, 3862#, 3887#3885, 3887#3886, #, 3887#3885, #, 3722#3887, 3897#3891, 3897#3892, #, 3897#3891, #, 3897#3893, 3887#3897, 3722#3897, #, #, 3887#3898, #, 3887#3900, #, 3887#3902, #, 3887#3904, 3887#3907, 3887#, 3912#3910, 3912#3911, #, 3912#3910, #, 3722#3912, 3922#3916, 3922#3917, #, 3922#3916, #, 3922#3918, 3912#3922, 3722#3922, #, #, 3912#3923, #, 3912#3925, #, 3912#3927, #, 3912#3929, 3912#3932, 3912#, 3937#3935, 3937#3936, #, 3937#3935, #, 3722#3937, 3947#3941, 3947#3942, #, 3947#3941, #, 3947#3943, 3937#3947, 3722#3947, #, #, 3937#3948, #, 3937#3950, #, 3937#3952, #, 3937#3954, 3937#3957, 3937#, 3962#3960, 3962#3961, #, 3962#3960, #, 3722#3962, 3972#3966, 3972#3967, #, 3972#3966, #, 3972#3968, 3962#3972, 3722#3972, #, #, 3962#3973, #, 3962#3975, #, 3962#3977, #, 3962#3979, 3962#3982, 3962#, 3987#3985, 3987#3986, #, 3987#3985, #, 3722#3987, 3997#3991, 3997#3992, #, 3997#3991, #, 3997#3993, 3987#3997, 3722#3997, #, #, 3987#3998, #, 3987#4000, #, 3987#4002, #, 3987#4004, 3987#4007, 3987#, 4012#4010, 4012#4011, #, 4012#4010, #, 3722#4012, 4022#4016, 4022#4017, #, 4022#4016, #, 4022#4018, 4012#4022, 3722#4022, #, #, 4012#4023, #, 4012#4025, #, 4012#4027, #, 4012#4029, 4012#4032, 4012#, 4037#4035, 4037#4036, #, 4037#4035, #, 3722#4037, 4047#4041, 4047#4042, #, 4047#4041, #, 4047#4043, 4037#4047, 3722#4047, #, #, 4037#4048, #, 4037#4050, #, 4037#4052, #, 4037#4054, 4037#4057, 4037#, 4062#4060, 4062#4061, #, 4062#4060, #, 3722#4062, 4072#4066, 4072#4067, #, 4072#4066, #, 4072#4068, 4062#4072, 3722#4072, #, #, 4062#4073, #, 4062#4075, #, 4062#4077, #, 4062#4079, 4062#4082, 4062#, 4087#4085, 4087#4086, #, 4087#4085, #, 3722#4087, 4097#4091, 4097#4092, #, 4097#4091, #, 4097#4093, 4087#4097, 3722#4097, #, #, 4087#4098, #, 4087#4100, #, 4087#4102, #, 4087#4104, 4087#4107, 4087#, 4112#4110, 4112#4111, #, 4112#4110, #, 3722#4112, 4122#4116, 4122#4117, #, 4122#4116, #, 4122#4118, 4112#4122, 3722#4122, #, #, 4112#4123, #, 4112#4125, #, 4112#4127, #, 4112#4129, 4112#4132, 4112#, 4137#4135, 4137#4136, #, 4137#4135, #, 3722#4137, 4147#4141, 4147#4142, #, 4147#4141, #, 4147#4143, 4137#4147, 3722#4147, #, #, 4137#4148, #, 4137#4150, #, 4137#4152, #, 4137#4154, 4137#4157, 4137#, 4162#4160, 4162#4161, #, 4162#4160, #, 3722#4162, 4172#4166, 4172#4167, #, 4172#4166, #, 4172#4168, 4162#4172, 3722#4172, #, #, 4162#4173, #, 4162#4175, #, 4162#4177, #, 4162#4179, 4162#4182, 4162#, 4187#4185, 4187#4186, #, 4187#4185, #, 3722#4187, 4197#4191, 4197#4192, #, 4197#4191, #, 4197#4193, 4187#4197, 3722#4197, #, #, 4187#4198, #, 4187#4200, #, 4187#4202, #, 4187#4204, 4187#4207, 4187#, 4212#4210, 4212#4211, #, 4212#4210, #, 3722#4212, 4222#4216, 4222#4217, #, 4222#4216, #, 4222#4218, 4212#4222, 3722#4222, #, #, 4212#4223, #, 4212#4225, #, 4212#4227, #, 4212#4229, 4212#4232, 4212#, 4237#4235, 4237#4236, #, 4237#4235, #, 3722#4237, 4247#4241, 4247#4242, #, 4247#4241, #, 4247#4243, 4237#4247, 3722#4247, #, #, 4237#4248, #, 4237#4250, #, 4237#4252, #, 4237#4254, 4237#4257, 4237#, 4262#4260, 4262#4261, #, 4262#4260, #, 3722#4262, 4272#4266, 4272#4267, #, 4272#4266, #, 4272#4268, 4262#4272, 3722#4272, #, #, 4262#4273, #, 4262#4275, #, 4262#4277, #, 4262#4279, 4262#4282, 4262#, 4287#4285, 4287#4286, #, 4287#4285, #, 3722#4287, 4297#4291, 4297#4292, #, 4297#4291, #, 4297#4293, 4287#4297, 3722#4297, #, #, 4287#4298, #, 4287#4300, #, 4287#4302, #, 4287#4304, 4287#4307, 4287#, 4312#4310, 4312#4311, #, 4312#4310, #, 3722#4312, 4322#4316, 4322#4317, #, 4322#4316, #, 4322#4318, 4312#4322, 3722#4322, #, #, 4312#4323, #, 4312#4325, #, 4312#4327, #, 4312#4329, 4312#4332, 4312#, 4337#4335, 4337#4336, #, 4337#4335, #, 3722#4337, 4347#4341, 4347#4342, #, 4347#4341, #, 4347#4343, 4337#4347, 3722#4347, #, #, 4337#4348, #, 4337#4350, #, 4337#4352, #, 4337#4354, 4337#4357, 4337#, 4362#4360, 4362#4361, #, 4362#4360, #, 3722#4362, 4372#4366, 4372#4367, #, 4372#4366, #, 4372#4368, 4362#4372, 3722#4372, #, #, 4362#4373, #, 4362#4375, #, 4362#4377, #, 4362#4379, 4362#4382, 4362#, #, 4389#4383, #, 4389#4385, 4389#4388, 4389#, 3737#3762, 3722#4389, #, 4397#4391, #, 4397#4393, 4397#4396, 4397#, 3762#3787, 3722#4397, #, 4405#4399, #, 4405#4401, 4405#4404, 4405#, 3762#3812, 3722#4405, #, 4413#4407, #, 4413#4409, 4413#4412, 4413#, 3762#3837, 3722#4413, #, 4421#4415, #, 4421#4417, 4421#4420, 4421#, 3762#3862, 3722#4421, #, 4429#4423, #, 4429#4425, 4429#4428, 4429#, 3762#3887, 3722#4429, #, 4437#4431, #, 4437#4433, 4437#4436, 4437#, 3762#3912, 3722#4437, #, 4445#4439, #, 4445#4441, 4445#4444, 4445#, 3762#3937, 3722#4445, #, 4453#4447, #, 4453#4449, 4453#4452, 4453#, 3762#3962, 3722#4453, #, 4461#4455, #, 4461#4457, 4461#4460, 4461#, 3762#3987, 3722#4461, #, 4469#4463, #, 4469#4465, 4469#4468, 4469#, 3762#4012, 3722#4469, #, 4477#4471, #, 4477#4473, 4477#4476, 4477#, 3762#4037, 3722#4477, #, 4485#4479, #, 4485#4481, 4485#4484, 4485#, 3762#4062, 3722#4485, #, 4493#4487, #, 4493#4489, 4493#4492, 4493#, 3762#4087, 3722#4493, #, 4501#4495, #, 4501#4497, 4501#4500, 4501#, 3762#4112, 3722#4501, #, 4509#4503, #, 4509#4505, 4509#4508, 4509#, 3762#4137, 3722#4509, #, 4517#4511, #, 4517#4513, 4517#4516, 4517#, 3762#4162, 3722#4517, #, 4525#4519, #, 4525#4521, 4525#4524, 4525#, 3762#4187, 3722#4525, #, 4533#4527, #, 4533#4529, 4533#4532, 4533#, 3762#4212, 3722#4533, #, 4541#4535, #, 4541#4537, 4541#4540, 4541#, 3762#4237, 3722#4541, #, 4549#4543, #, 4549#4545, 4549#4548, 4549#, 3762#4262, 3722#4549, #, 4557#4551, #, 4557#4553, 4557#4556, 4557#, 3762#4287, 3722#4557, #, 4565#4559, #, 4565#4561, 4565#4564, 4565#, 3762#4312, 3722#4565, #, 4573#4567, #, 4573#4569, 4573#4572, 4573#, 3762#4337, 3722#4573, #, 4581#4575, #, 4581#4577, 4581#4580, 4581#, 3762#4362, 3722#4581, 
### 内容
#0, 18:
文档/计算机问题/工程架构.ftxt
## end
#2, 219:
+[返回目录](,工程架构)
地址::文档/计算机问题/工程架构.ftxt

操作:...
+[设置动词](,操作)
+[新建阅读窗口](,操作)

Nini, 导入编程语言parser的库
Nini, 打开编程语言parser(文件)
Nini, 打开LWFA数据分析(文件)


GEANT4架构:...
Smilei架构:...
PIConGPU架构:...
FreeCAD架构:...
+[新建阅读窗口](,GEANT4架构)


## end
#3, 48:
工程架构:...
创建于 20230518

节点数目统计::
+[设置结构](,节点数目统计)
## end
#8, 160:
地址::/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source
+[解析工程文件架构](地址,信息)
+[打开文件夹](,地址)
+[打开网页](,地址)

收集文件:...
信息::

阅读日志:...
整理信息:...
+[新建阅读窗口](,阅读日志)

## end
#10, 1065:
"""
记住"Python"
+[P函数](,收集文件)

搜索文件:...
定义函数:...
所有文件:...
获取引用关系:...
+[P函数](,定义函数)

保存:...

"""
import os,re
from body.bone import NetP
from tools import tools_basic

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

[list_h,list_c,list_dir]=search_c_files(folder_name)

list_pt=[]
list_con=[]
dict_pt={}
for file_info in list_h:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})
for file_info in list_c:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})


for pt in list_pt:
    file_ex=pt.m_text
    f=open(file_ex,'r')
    text_cc=f.read()
    f.close()
    
    file_pat=r"#include +\"(.+)\""
    ref_names=re.findall(file_pat,text_cc)
    for name in ref_names:
        if name in dict_pt:
            pt1=dict_pt[name]
            pt_con=NetP('引用').con(pt,pt1)
            list_con.append(pt_con)

list_all=list_pt+list_con
text_pt=tools_basic.writeStdCode([],list_all)
print(len(list_all))


"""
print(len(list_con))
+[P函数](,收集文件)

"""
## end
#12, 304:
"""
for path in os.listdir(folder_name):
+[P函数](,收集文件)

"""
import os

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"
list_files=os.listdir(folder_name)

for path in list_files:
    sub_path=folder_name+"/%s"%(path)
    if not os.path.isfile(sub_path):
        print(sub_path)


## end
#14, 963:
"""
记住"Python"
+[P函数](,收集文件)

搜索文件:...
定义函数:...
所有文件:...

"""
import os

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

def search_c_files(folder_name):
    list_hh=[]
    list_cc=[]
    list_dir=[]
    list_files=os.listdir(folder_name)
    for path in list_files:
        sub_path=folder_name+"/%s"%(path)
        if not os.path.isfile(sub_path):
            [list_cc1,list_hh1,list_dir1]=search_c_files(sub_path)
            if list_dir1!=[]:
                list_dir.append(['folder',path,list_dir1])
            list_cc+=list_cc1
            list_hh+=list_hh1
        else:
            if path.split('.')[-1]=='hh':
                list_hh.append([path,sub_path])
                list_dir.append(['file',path,sub_path])
            elif path.split('.')[-1]=='cc':
                list_cc.append([path,sub_path])
                list_dir.append(['file',path,sub_path])

    return [list_hh,list_cc,list_dir]


"""
+[P函数](,收集文件)

"""
## end
#16, 1110:
"""
记住"Python"
+[P函数](,收集文件)

搜索文件:...
定义函数:...
所有文件:...

"""
import os

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

def search_c_files(folder_name):
    list_hh=[]
    list_cc=[]
    list_dir=[]
    list_files=os.listdir(folder_name)
    for path in list_files:
        sub_path=folder_name+"/%s"%(path)
        if not os.path.isfile(sub_path):
            [list_cc1,list_hh1,list_dir1]=search_c_files(sub_path)
            if list_dir1!=[]:
                list_dir.append(['folder',path,list_dir1])
            list_cc+=list_cc1
            list_hh+=list_hh1
        else:
            if path.split('.')[-1]=='hh':
                list_hh.append([path.split('.')[0],sub_path])
                list_dir.append(['file',path.split('.')[0],sub_path])
            elif path.split('.')[-1]=='cc':
                list_cc.append([path.split('.')[0],sub_path])
                list_dir.append(['file',path.split('.')[0],sub_path])

    return [list_hh,list_cc,list_dir]

[list_h,list_c,list_dir]=search_c_files(folder_name)

file_ex=list_c[0][1]
f=open(file_ex)

"""
+[P函数](,收集文件)

"""
## end
#18, 595:
"""
记住"Python"
+[P函数](,收集文件)

搜索文件:...
定义函数:...
所有文件:...
+[P函数](,定义函数)

"""
import os,re
from body.bone import NetP

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

[list_h,list_c,list_dir]=search_c_files(folder_name)

list_pt=[]
for file_info in list_h:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
for file_info in list_c:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)


file_ex=list_c[0][1]
f=open(file_ex,'r')
text_cc=f.read()
f.close()

file_pat=r"#include +\"(.+)\""
ref_names=re.findall(file_pat,text_cc)


"""
+[P函数](,收集文件)

"""
## end
#20, 930:
"""
记住"Python"
+[P函数](,收集文件)

搜索文件:...
定义函数:...
所有文件:...
+[P函数](,定义函数)

保存:...

"""
import os,re
from body.bone import NetP

folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

[list_h,list_c,list_dir]=search_c_files(folder_name)

list_pt=[]
list_con=[]
dict_pt={}
for file_info in list_h:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})
for file_info in list_c:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})


for pt in list_pt:
    file_ex=pt.m_text
    f=open(file_ex,'r')
    text_cc=f.read()
    f.close()
    
    file_pat=r"#include +\"(.+)\""
    ref_names=re.findall(file_pat,text_cc)
    for name in ref_names:
        if name in dict_pt:
            pt1=dict_pt[name]
            pt_con=NetP('引用').con(pt,pt1)
            list_con.append(pt_con)


"""
print(len(list_con))
+[P函数](,收集文件)

"""
## end
#22, 57:
+[Nini回复]"无聊"

解析工程文件架构:...
打开库文件:...
+[新建阅读窗口](,打开库文件)


## end
#24, 391:
"""
P代码:...
函数定义:...
Nini, 打开动词(库)
+[修改天使]

"""
+解析工程文件架构(_地址,_信息)->+[del](,+解析工程文件架构)...
->的(解析工程文件架构,P代码)->的(解析工程文件架构,函数定义)...

->+[临时文本]{
    []:->_地址->[m_text](_地址,+[临时文本]),
    ->[m_text](+解析工程文件架构,+[临时文本])
}...
->+[python](Python,)->+[code](+[python],函数定义)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[s]"folder_name"(+[python],+[临时文本])...
->+[v]"list_info"(+[python],_信息)



## end
#26, 1115:
"""
记住"Python"
+[P函数](,P代码)

"""
import os,re
from body.bone import NetP
from tools import tools_basic

# folder_name="/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source"

[list_h,list_c,list_dir]=search_c_files(folder_name)

list_pt=[]
list_con=[]
dict_pt={}

for file_info in list_h:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})
for file_info in list_c:
    pt=NetP(file_info[0],file_info[1])
    list_pt.append(pt)
    dict_pt.update({file_info[0]:pt})


for pt in list_pt:
    file_ex=pt.m_text
    f=open(file_ex,'r')
    try:
        text_cc=f.read()
    except:
        text_cc==''
        print('Error! Can\'t open file: %s'%(file_ex))
    f.close()
    
    file_pat=r"#include +\"(.+)\""
    ref_names=re.findall(file_pat,text_cc)
    for name in ref_names:
        if name in dict_pt:
            pt1=dict_pt[name]
            pt_con=NetP('引用').con(pt,pt1)
            list_con.append(pt_con)

list_info=[list_pt,list_con]

print('Total number of files:',len(list_pt))
print('Total number of reference:',len(list_con))

"""
+[P函数](,P代码)

"""
## end
#28, 977:
"""
记住"Python"
+[P函数](,函数定义)

"""
import os

def search_c_files(folder_name):
    list_hh=[]
    list_cc=[]
    list_dir=[]
    list_files=os.listdir(folder_name)
    for path in list_files:
        sub_path=folder_name+"/%s"%(path)
        if not os.path.isfile(sub_path):
            [list_cc1,list_hh1,list_dir1]=search_c_files(sub_path)
            if list_dir1!=[]:
                list_dir.append(['folder',path,list_dir1])
            list_cc+=list_cc1
            list_hh+=list_hh1
        else:
            if path.split('.')[-1]=='hh' or path.split('.')[-1]=='h' or path.split('.')[-1]=='hpp':
                list_hh.append([path,sub_path])
                list_dir.append(['file',path,sub_path])
            elif path.split('.')[-1]=='cc' or path.split('.')[-1]=='c' or path.split('.')[-1]=='cpp':
                list_cc.append([path,sub_path])
                list_dir.append(['file',path,sub_path])

    return [list_hh,list_cc,list_dir]


"""
+[P函数](,函数定义)

"""
## end
#32, 58:
/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source
## end
#35, 91:
地址::/home/xiantao/Documents/PIC/Smilei
+[解析工程文件架构](地址,信息)
+[打开文件夹](,地址)
+[打开网页](,地址)

信息::

## end
#37, 93:
地址::/home/xiantao/Documents/PIC/picongpu
+[解析工程文件架构](地址,信息)
+[打开文件夹](,地址)
+[打开网页](,地址)

信息::

## end
#39, 36:
/home/xiantao/Documents/PIC/picongpu
## end
#41, 34:
/home/xiantao/Documents/PIC/Smilei
## end
#47, 118:
地址::/home/xiantao/Documents/tools/freeCAD/FreeCAD-master
+[解析工程文件架构](地址,信息)
+[打开文件夹](,地址)
+[打开网页](,地址)
print()

信息::


## end
#49, 52:
/home/xiantao/Documents/tools/freeCAD/FreeCAD-master
## end
#53, 16:

20230527:...



## end
#55, 82:
/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/examples/basic/B5/exampleB5.cc
## end
#57, 510:
例子::/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/examples/basic/B5/exampleB5.cc
定义几何体::/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/examples/basic/B5/src/DetectorConstruction.cc
+[打开文件夹](,定义几何体)
+[打开文件夹](,例子)
+[打开库文件]"G4Box.cc"
+[打开库文件]"G4UImanager.hh"
+[打开库文件]"G4UImanager.cc"
+[打开库文件]"G4Box.cc"

哪些文件引用了文件"G4UImessenger.hh"
文件"G4Box.cc"引用了哪些文件
文件"G4Box.cc"定义了哪些函数
文件"G4UIcommandTree.cc"定义了哪些函数
文件"G4ConstRK4.cc"定义了哪些函数
+[打开库文件]"G4ConstRK4.cc"

beamOn位置:...
Stepping过程:...
+[新建阅读窗口](,beamOn位置)


## end
#59, 82:
/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/examples/basic/B5/exampleB5.cc
## end
#61, 97:
/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/examples/basic/B5/src/DetectorConstruction.cc
## end
#63, 394:
"""
P代码:...
Nini, 打开动词(库)
+[新建阅读窗口](,P代码)

"""
+打开库文件(_信息,_文件)->+[del](,+打开库文件)...
->的(打开库文件,P代码)...

->+[临时文本]{
    []:->_文件->[m_text](_文件,+[临时文本]),
    ->[m_text](+打开库文件,+[临时文本])
}...
->+[python](Python,+[临时文本]#f)->+[code](+[python],P代码)...
->+[s]"file_name"(+[python],+[临时文本])...
->[]{
    []:->_信息->+[v]"list_info"(+[python],_信息),
    ->[]
}...

->+[打开文件夹](,+[临时文本]#f)->+[记住](,+[临时文本]#f)



## end
#65, 172:
"""
记住"Python"
+[P函数](,P代码)

"""

list_pt=list_info[0]
list_con=list_info[1]

for pt in list_pt:
    if pt.m_name==file_name:
        ans=pt.m_text



"""
+[P函数](,P代码)

"""
## end
#69, 1197:

+[打开库文件]"G4UImanager.cc"
G4UImanager.cc
push_back()
G4UIcommand->DoIt
+[打开库文件]"G4UIcommand.cc"
+[打开库文件]"G4UIcommand.hh"
CheckNewValue(return 0是没有问题)
treeTop->FindPath
messenger->SetNewValue()
(G4UIcommandTree)
+[打开库文件]"G4UIcommandTree.cc"
+[打开库文件]"G4UIcommandTree.hh"
command是所有命令的list
+[打开库文件]"G4UIparameter.cc"
CheckNewValue(return 0是没有问题)
+[打开库文件]"G4UImessenger.hh"
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/intercoms"
+[打开库文件]"G4RunMessenger.cc"
runManager->BeamOn
+[打开库文件]"G4RunManager.cc"
DoEventLoop
ProcessOneEvent
+[打开库文件]"G4EventManager.cc"
+[打开库文件]"G4EventManager.hh"
ProcessOneEvent
DoProcessing
DoProcessing结构:...
+[显示](,DoProcessing结构)
ProcessOneTrack
GetTrackStatus
+[打开库文件]"G4TrackingManager.cc"
fpTrack->SetStep(fpSteppingManager->GetStep());
G4Track->GetDefinition()->GetProcessManager()->StartTracking(fpTrack);
fpSteppingManager->Stepping();
在ProcessOneTrack中会计算出一条完整的轨迹
+[打开库文件]"G4Track.hh"
GetDefinition()
+[打开库文件]"G4ParticleDefinition.cc"
GetProcessManager
+[打开库文件]"G4ProcessManager.cc"
StartTracking
(历遍物理列表的每一个物理定理)
+[打开库文件]"G4SteppingManager.cc"
Stepping
(这里就是单步计算的函数了. 有判断碰撞, 计算自由程和设置事件)
DefinePhysicalStepLength
InvokeAlongStepDoItProcs






## end
#71, 3441:
DoProcessing
├code
├if
|└currentState != G4State_GeomClosed
| └code
├code
├if
|└storetRandomNumberStatusToG4Event > 1
| └code
├code
├center
|└code
├code
├code
├if
|└verboseLevel > 0 
| └code
├code
├code
├code
├code
├code
├code
├if
|└sdManager != nullptr
| └code
├if
|└userEventAction != nullptr
| └code
├code
├code
├code
├if
|└verboseLevel > 1 
| └code
├code
├if
|└!abortRequested
| └code
├code
├if
|└verboseLevel > 0 
| └code
├code
├code
├loop
|├code
|├loop
||├code
||└if
|| └particleTrackingManager─!=─nullptr────else                                                                
||  ├code                                 if                                                                  
||  ├if                                   └verboseLevel > 1                                                   
||  |└verboseLevel > 1                     └code                                                              
||  | └code                               code                                                                
||  ├code                                 code                                                                
||  ├code                                 code                                                                
||  ├code                                 if                                                                  
||  └code                                 └verboseLevel > 0                                                   
||                                         └code                                                              
||                                        code                                                                
||                                        code                                                                
||                                        code                                                                
||                                        code                                                                
||                                        if                                                                  
||                                        └previousTrajectory != nullptr                                      
||                                         └code                                                              
||                                        if                                                                  
||                                        └(aTrajectory != nullptr)&&(istop!=fStopButAlive)&&(istop!=fSuspend)
||                                         ├if                                                                
||                                         |└trajectoryContainer == nullptr                                   
||                                         | └code                                                            
||                                         └code                                                              
||                                        code                                                                
||                                        code                                                                
|├code
|├loop
||└code
|├code
|├code
|├code
|└code
├code
├if
|└verboseLevel > 0 
| └code
├code
├if
|└sdManager != nullptr
| └code
├code
├code
├code
├if
|└userEventAction != nullptr
| └code
└code
## end
#73, 4247:

+[打开库文件]"G4SteppingManager.hh"
+[打开库文件]"G4SteppingManager.cc"
Stepping
(这里就是单步计算的函数了. 有判断碰撞, 计算自由程和设置事件)
DefinePhysicalStepLength
(GPIL是Get Physical interaction length)
参考GPIL::https://conferences.fnal.gov/g4tutorial/g4cd/Slides/Fermilab/PhysicsTutor2.pdf
+[打开网页](,参考GPIL)
做了两次GPIL. 第一次是PostStep, 第二次是AlongStep
做法是, 扫了一遍设定的物理过程, 依次计算自由程, 选择其中最短的那个物理过程
G4VProcess->PostStepGPIL
G4VProcess->AlongStepGPIL
(不确定发射角在哪里发生了改变)
InvokeAlongStepDoItProcs
这里执行了操作
G4VProcess->AlongStepDoIt中判断了轨迹是否经过了区域的界面

哪些文件引用了文件"G4VProcess.hh"
+[打开库文件]"G4VProcess.hh"
+[打开库文件]"G4VProcess.cc"
参考VP::https://apc.u-paris.fr/~franco/g4doxy/html/classG4VProcess.html
参考Phy::https://conferences.fnal.gov/g4tutorial/g4cd/Slides/Fermilab/PhysicsTutor.pdf
哪些文件引用了文件"G4VProcess.hh"
(这个类很抽象, 里面几乎都是抽象函数)
+[打开网页](,参考VP)
+[打开网页](,参考Phy)
+[打开库文件]"G4Transportation.hh"
+[打开库文件]"G4Transportation.cc"
框架参考::https://www.ge.infn.it/geant4/training/portland/basicStructure.pdf
+[打开网页](,框架参考)
PostStep是在粒子越过了边界后, 调整粒子信息的步骤. 主要操作在PostStepDoIt中
AlongStepDoIt中设置的粒子运动后的状态变化(变化量都是在GPIL中计算的). 主要计算了粒子这一步的运动时间, 以及如果粒子在循环运动的话就杀掉这个粒子(G4PropagatorInField中做的判断)
AlongStepGPIL是核心函数, 做了:
1.判断粒子是否越过边界; 
2.粒子是否在场中运动并进行正确的运动; 
直线运动用 G4Navigator->ComputeStep
场中运动用 G4PropagatorInField->ComputeStep
G4Track->GetVolume()
G4PropagatorInField->FindAndSetFieldManager()
G4PropagatorInField->GetCurrentEquationOfMotion()
G4PropagatorInField->ComputeStep()

+[打开库文件]"G4PropagatorInField.hh"
+[打开库文件]"G4PropagatorInField.cc"
G4ChordFinder->AdvanceChordLimited
G4ChordFinder->OnComputeStep

判断碰撞:...

+[打开库文件]"G4ChordFinder.hh"
+[打开库文件]"G4ChordFinder.cc"
哪些文件引用了文件"G4ChordFinder.hh"

G4ITPathFinder.cc
G4ITTransportation.cc
G4CoupledTransportation.cc
G4GeometryMessenger.cc
G4PathFinder.cc
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/geometry/magneticfield/include/G4ChordFinder.icc"
inline function 在.icc文件中有定义

G4VIntegrationDriver->AdvanceChordLimited
G4VIntegrationDriver->OnComputeStep


+[打开库文件]"G4VIntegrationDriver.hh"
+[打开库文件]"G4VIntegrationDriver.cc"
哪些文件引用了文件"G4VIntegrationDriver.hh"

G4VIntegrationDriver.cc
G4BorisDriver.hh
G4RKIntegrationDriver.hh
G4ChordFinder.hh
G4ChordFinderDelegate.hh
G4MagIntegratorDriver.hh
G4OldMagIntDriver.hh
G4BFieldIntegrationDriver.hh


+[打开库文件]"G4BFieldIntegrationDriver.hh"
+[打开库文件]"G4BFieldIntegrationDriver.cc"
+[打开库文件]"G4MagIntegratorDriver.hh"
+[打开库文件]"G4RKIntegrationDriver.hh"

+[打开库文件]"G4BorisDriver.hh"
+[打开库文件]"G4BorisDriver.cc"
(AdvanceChordLimited==AdvanceChordLimitedImpl)
+[打开库文件]"G4ChordFinderDelegate.hh"
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/geometry/magneticfield/include/G4ChordFinderDelegate.icc"
AdvanceChordLimitedImpl的内容就是:
先调用FindNextChord计算下一步的位置, 如果误差可以接受, 那么输出这个值
如果不行, 就计算GetDriver().AccurateAdvance
GetDriver()就是得到调用AdvanceChordLimitedImpl()的那个driver. 比如BorisDriver
FindNextChord()似乎是某种快速猜测下一步的办法

+[打开库文件]"G4BorisDriver.cc"
G4BorisScheme->StepWithErrorEstimate
+[打开库文件]"G4BorisScheme.cc"
DoStep()
参考Boris1::https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/153167/eth-5175-01.pdf?sequence=1
参考Boris2::https://www.particleincell.com/2011/vxb-rotation/
+[打开网页](,参考Boris2)


+[打开库文件]"G4MagIntegratorDriver.hh"
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/geometry/magneticfield/include/G4MagIntegratorDriver.icc"
+[打开库文件]"G4MagIntegratorDriver.cc"
OneGoodStep()
G4MagIntegratorStepper->Stepper()

+[打开库文件]"G4MagIntegratorStepper.hh"
哪些文件引用了文件"G4MagIntegratorStepper.hh"
Stepper()是抽象函数

G4MagIntegratorStepper.cc
G4DoLoMcPriRK34.hh
G4RK547FEq2.hh
G4TDormandPrince45.hh
G4TCashKarpRKF45.hh
G4ChordFinder.hh
G4CashKarpRKF45.hh
G4VIntegrationDriver.hh
G4MagIntegratorDriver.hh
G4RKG3_Stepper.hh
G4DormandPrinceRK56.hh
G4TClassicalRK4.hh
G4RK547FEq3.hh
G4TsitourasRK45.hh
G4MagErrorStepper.hh
G4BogackiShampine45.hh
G4NystromRK4.hh
G4RK547FEq1.hh
G4DormandPrinceRK78.hh
G4DormandPrince745.hh
G4TMagErrorStepper.hh
G4MagHelicalStepper.hh
G4ExactHelixStepper.hh
G4OldMagIntDriver.hh
G4BogackiShampine23.hh
G4ErrorPropagatorManager.cc

+[打开库文件]"G4RKG3_Stepper.cc"
+[打开库文件]"G4CashKarpRKF45.cc"
+[打开库文件]"G4TClassicalRK4.hh"

+[打开库文件]"G4SteppingManager.cc"
+[打开库文件]"G4SteppingManager.cc"
+[打开库文件]"G4SteppingManager.cc"
+[打开库文件]"G4SteppingManager.cc"






## end
#75, 78:
https://conferences.fnal.gov/g4tutorial/g4cd/Slides/Fermilab/PhysicsTutor2.pdf
## end
#77, 63:
https://apc.u-paris.fr/~franco/g4doxy/html/classG4VProcess.html
## end
#81, 66:
https://www.ge.infn.it/geant4/training/portland/basicStructure.pdf
## end
#83, 77:
https://conferences.fnal.gov/g4tutorial/g4cd/Slides/Fermilab/PhysicsTutor.pdf
## end
#85, 103:
https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/153167/eth-5175-01.pdf?sequence=1
## end
#87, 103:
https://www.research-collection.ethz.ch/bitstream/handle/20.500.11850/153167/eth-5175-01.pdf?sequence=1
## end
#89, 49:
https://www.particleincell.com/2011/vxb-rotation/
## end
#91, 752:
G4PropagatorInField->ComputeStep()

+[打开库文件]"G4PropagatorInField.hh"
+[打开库文件]"G4PropagatorInField.cc"
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/geometry/navigation/include/G4PropagatorInField.icc"
IntersectChord()
G4VIntersectionLocator->IntersectChord()

+[打开库文件]"G4VIntersectionLocator.hh"
+[打开文件夹]"/home/xiantao/Documents/tools/GEANT4/geant4-v11.1.1/source/geometry/navigation/include/G4VIntersectionLocator.icc"
G4Navigator->ComputeStep()

代码内容:....
结构:...
+[删除结构](,结构)->+[分析程序结构](代码内容,结构)->+[显示星图](,结构)
描述文本:...
+[显示](,描述文本)
+[删除结构](,描述文本)->+[召唤星辰]"代码结构转文本描述"(结构,描述文本)

+[打开库文件]"G4Navigator.hh"
+[打开库文件]"G4Navigator.cc"

+[打开库文件]"G4PropagatorInField.hh"
+[打开库文件]"G4PropagatorInField.hh"
+[打开库文件]"G4PropagatorInField.hh"


## end
#93, 17387:
//
G4double G4Navigator::ComputeStep( const G4ThreeVector& pGlobalpoint,
                                   const G4ThreeVector& pDirection,
                                   const G4double pCurrentProposedStepLength,
                                         G4double& pNewSafety)
{
#ifdef G4DEBUG_NAVIGATION
  static G4ThreadLocal G4int sNavCScalls = 0;
  ++sNavCScalls;
#endif

  G4ThreeVector localDirection = ComputeLocalAxis(pDirection);
  G4double Step = kInfinity;
  G4VPhysicalVolume  *motherPhysical = fHistory.GetTopVolume();
  G4LogicalVolume *motherLogical = motherPhysical->GetLogicalVolume();

  // All state relating to exiting normals must be reset
  //
  fExitNormalGlobalFrame = G4ThreeVector( 0., 0., 0.);
    // Reset value - to erase its memory
  fChangedGrandMotherRefFrame = false;
    // Reset - used for local exit normal
  fGrandMotherExitNormal = G4ThreeVector( 0., 0., 0.); 
  fCalculatedExitNormal = false;
    // Reset for new step

#ifdef G4VERBOSE
  if( fVerbose > 0 )
  {
    G4cout << "*** G4Navigator::ComputeStep: ***" << G4endl; 
    G4cout << "    Volume = " << motherPhysical->GetName() 
           << " - Proposed step length = " << pCurrentProposedStepLength
           << G4endl; 
#ifdef G4DEBUG_NAVIGATION
    if( fVerbose >= 2 )
    {
      G4cout << "  Called with the arguments: " << G4endl
             << "  Globalpoint = " << std::setw(25) << pGlobalpoint << G4endl
             << "  Direction   = " << std::setw(25) << pDirection << G4endl;
      if( fVerbose >= 4 )
      {
        G4cout << "  ---- Upon entering : State" << G4endl;
        PrintState();
      }
    }
#endif
  }
#endif

  G4ThreeVector newLocalPoint = ComputeLocalPoint(pGlobalpoint);

  if( newLocalPoint != fLastLocatedPointLocal )
  {
    // Check whether the relocation is within safety
    //
    G4ThreeVector oldLocalPoint = fLastLocatedPointLocal;
    G4double moveLenSq = (newLocalPoint-oldLocalPoint).mag2();

    if ( moveLenSq >= fSqTol )
    {
#ifdef G4VERBOSE
      ComputeStepLog(pGlobalpoint, moveLenSq);
#endif
      // Relocate the point within the same volume
      //
      LocateGlobalPointWithinVolume( pGlobalpoint );
    }
  }
  if ( fHistory.GetTopVolumeType()!=kReplica )
  {
    switch( CharacteriseDaughters(motherLogical) )
    {
      case kNormal:
        if ( motherLogical->GetVoxelHeader() )
        {
          Step = GetVoxelNavigator().ComputeStep(fLastLocatedPointLocal,
                                       localDirection,
                                       pCurrentProposedStepLength,
                                       pNewSafety,
                                       fHistory,
                                       fValidExitNormal,
                                       fExitNormal,
                                       fExiting,
                                       fEntering,
                                       &fBlockedPhysicalVolume,
                                       fBlockedReplicaNo);
      
        }
        else
        {
          if( motherPhysical->GetRegularStructureId() == 0 )
          {
            Step = fnormalNav.ComputeStep(fLastLocatedPointLocal,
                                          localDirection,
                                          pCurrentProposedStepLength,
                                          pNewSafety,
                                          fHistory,
                                          fValidExitNormal,
                                          fExitNormal,
                                          fExiting,
                                          fEntering,
                                          &fBlockedPhysicalVolume,
                                          fBlockedReplicaNo);
          }
          else
          {
            LocateGlobalPointAndSetup( pGlobalpoint, &pDirection, true, true );
            //
            // if physical process limits the step, the voxel will not be the
            // one given by ComputeStepSkippingEqualMaterials() and the local
            // point will be wrongly calculated.

            // There is a problem: when msc limits the step and the point is
            // assigned wrongly to phantom in previous step (while it is out
            // of the container volume). Then LocateGlobalPointAndSetup() has
            // reset the history topvolume to world.
            //
            if(fHistory.GetTopVolume()->GetRegularStructureId() == 0 )
            { 
              G4Exception("G4Navigator::ComputeStep()",
                          "GeomNav1001", JustWarning,
                "Point is relocated in voxels, while it should be outside!");
              Step = fnormalNav.ComputeStep(fLastLocatedPointLocal,
                                            localDirection,
                                            pCurrentProposedStepLength,
                                            pNewSafety,
                                            fHistory,
                                            fValidExitNormal,
                                            fExitNormal,
                                            fExiting,
                                            fEntering,
                                            &fBlockedPhysicalVolume,
                                            fBlockedReplicaNo);
            }
            else
            {
              Step = fregularNav.
                   ComputeStepSkippingEqualMaterials(fLastLocatedPointLocal,
                                                     localDirection,
                                                     pCurrentProposedStepLength,
                                                     pNewSafety,
                                                     fHistory,
                                                     fValidExitNormal,
                                                     fExitNormal,
                                                     fExiting,
                                                     fEntering,
                                                     &fBlockedPhysicalVolume,
                                                     fBlockedReplicaNo,
                                                     motherPhysical);
            }
          }
        }
        break;
      case kParameterised:
        if( GetDaughtersRegularStructureId(motherLogical) != 1 )
        {
          Step = fparamNav.ComputeStep(fLastLocatedPointLocal,
                                       localDirection,
                                       pCurrentProposedStepLength,
                                       pNewSafety,
                                       fHistory,
                                       fValidExitNormal,
                                       fExitNormal,
                                       fExiting,
                                       fEntering,
                                       &fBlockedPhysicalVolume,
                                       fBlockedReplicaNo);
        }
        else
        {
          Step = fregularNav.ComputeStep(fLastLocatedPointLocal,
                                         localDirection,
                                         pCurrentProposedStepLength,
                                         pNewSafety,
                                         fHistory,
                                         fValidExitNormal,
                                         fExitNormal,
                                         fExiting,
                                         fEntering,
                                         &fBlockedPhysicalVolume,
                                         fBlockedReplicaNo);
        }
        break;
      case kReplica:
        G4Exception("G4Navigator::ComputeStep()", "GeomNav0001",
                    FatalException, "Not applicable for replicated volumes.");
        break;
      case kExternal:
        Step = fpExternalNav->ComputeStep(fLastLocatedPointLocal,
                                          localDirection,
                                          pCurrentProposedStepLength,
                                          pNewSafety,
                                          fHistory,
                                          fValidExitNormal,
                                          fExitNormal,
                                          fExiting,
                                          fEntering,
                                          &fBlockedPhysicalVolume,
                                          fBlockedReplicaNo);
        break;
    }
  }
  else
  {
    // In the case of a replica, it must handle the exiting
    // edge/corner problem by itself
    //
    fExiting = fExitedMother;
    Step = freplicaNav.ComputeStep(pGlobalpoint,
                                   pDirection,
                                   fLastLocatedPointLocal,
                                   localDirection,
                                   pCurrentProposedStepLength,
                                   pNewSafety,
                                   fHistory,
                                   fValidExitNormal,
                                   fCalculatedExitNormal,
                                   fExitNormal,
                                   fExiting,
                                   fEntering,
                                   &fBlockedPhysicalVolume,
                                   fBlockedReplicaNo);
  }

  // Remember last safety origin & value.
  //
  fPreviousSftOrigin = pGlobalpoint;
  fPreviousSafety = pNewSafety; 

  // Count zero steps - one can occur due to changing momentum at a boundary
  //                  - one, two (or a few) can occur at common edges between
  //                    volumes
  //                  - more than two is likely a problem in the geometry
  //                    description or the Navigation 

  // Rule of thumb: likely at an Edge if two consecutive steps are zero,
  //                because at least two candidate volumes must have been
  //                checked
  //
  fLocatedOnEdge   = fLastStepWasZero && (Step==0.0);
  fLastStepWasZero = (Step<fMinStep);
  if (fPushed)  { fPushed = fLastStepWasZero; }

  // Handle large number of consecutive zero steps
  //
  if ( fLastStepWasZero )
  {
    ++fNumberZeroSteps;
    
    G4bool act     = fNumberZeroSteps >= fActionThreshold_NoZeroSteps;
    G4bool actAndReport = false;
    G4bool abandon = fNumberZeroSteps >= fAbandonThreshold_NoZeroSteps;
    G4bool inform  = false;
#ifdef G4VERBOSE
    actAndReport = act && (!fPushed) && fWarnPush;
#endif
#ifdef G4DEBUG_NAVIGATION
    inform = fNumberZeroSteps > 1;
#endif
    
    if ( act || inform )
    {
      if( act && !abandon )
      {
        // Act to recover this stuck track. Pushing it along original direction
        //
        Step += 100*kCarTolerance;
        fPushed = true;
      }

      if( actAndReport || abandon || inform )
      {
        std::ostringstream message;
         
        message.precision(16);      
        message << "Stuck Track: potential geometry or navigation problem."
                << G4endl;
        message << "  Track stuck, not moving for " 
                << fNumberZeroSteps << " steps."  << G4endl
                << "  Current  phys volume: '" << motherPhysical->GetName()
                << "'" << G4endl
                << "   - at position : " << pGlobalpoint << G4endl
                << "     in direction: " << pDirection   << G4endl
                << "    (local position: " << newLocalPoint << ")" << G4endl
                << "    (local direction: " << localDirection << ")." << G4endl
                << "  Previous phys volume: '"
                << ( fLastMotherPhys ? fLastMotherPhys->GetName() : "" )
                << "'" << G4endl << G4endl;
        if( actAndReport || abandon )
        {
           message << "  Likely geometry overlap - else navigation problem !"
                   << G4endl;
        }
        if( abandon )
        {
          // Must kill this stuck track
#ifdef G4VERBOSE
          if ( fWarnPush ) { CheckOverlapsIterative(motherPhysical); }
#endif
          message << " Track *abandoned* due to excessive number of Zero steps."
                  << " Event aborted. " << G4endl << G4endl;
          G4Exception("G4Navigator::ComputeStep()", "GeomNav0003",
                      EventMustBeAborted, message);
        }
        else
        {
#ifdef G4VERBOSE
          if ( actAndReport )
          {
             message << "   *** Trying to get *unstuck* using a push"
                     << " - expanding step to " << Step << " (mm) ..."
                     << "       Potential overlap in geometry !" << G4endl;
             G4Exception("G4Navigator::ComputeStep()", "GeomNav1002",
                         JustWarning, message); 
          }
#endif
#ifdef G4DEBUG_NAVIGATION      
          else
          {
            if( fNumberZeroSteps > 1 )
            {
               message << ", nav-comp-step calls # " << sNavCScalls
                       << ", Step= " << Step << G4endl;
               G4cout << message.str();
            }
          }
#endif
        }
      }
    }
  }
  else
  {
    if (!fPushed)  { fNumberZeroSteps = 0; }
  }
  fLastMotherPhys = motherPhysical;

  fEnteredDaughter = fEntering;   // I expect to enter a volume in this Step
  fExitedMother = fExiting;

  fStepEndPoint = pGlobalpoint
                + std::min(Step,pCurrentProposedStepLength) * pDirection;
  fLastStepEndPointLocal = fLastLocatedPointLocal + Step * localDirection; 

  if( fExiting )
  {
#ifdef G4DEBUG_NAVIGATION
    if( fVerbose > 2 )
    { 
      G4cout << " At G4Nav CompStep End - if(exiting) - fExiting= " << fExiting
             << " fValidExitNormal = " << fValidExitNormal  << G4endl;
      G4cout << " fExitNormal= " << fExitNormal << G4endl;
    }
#endif

    if ( fValidExitNormal || fCalculatedExitNormal )
    {
      // Convention: fExitNormal is in the 'grand-mother' coordinate system
      fGrandMotherExitNormal = fExitNormal;
    }
    else
    {  
      // We must calculate the normal anyway (in order to have it if requested)
      //
      G4ThreeVector finalLocalPoint = fLastLocatedPointLocal
                                    + localDirection*Step;

      if (  fHistory.GetTopVolumeType() != kReplica )
      {
        // Find normal in the 'mother' coordinate system
        //
        G4ThreeVector exitNormalMotherFrame=
           motherLogical->GetSolid()->SurfaceNormal(finalLocalPoint);
        
        // Transform it to the 'grand-mother' coordinate system
        //
        const G4RotationMatrix* mRot = motherPhysical->GetRotation();
        if( mRot )
        {
          fChangedGrandMotherRefFrame = true;           
          fGrandMotherExitNormal = (*mRot).inverse() * exitNormalMotherFrame;
        }
        else
        {
          fGrandMotherExitNormal = exitNormalMotherFrame;
        }

        // Do not set fValidExitNormal -- this signifies
        // that the solid is convex!
      }
      else
      {
        fCalculatedExitNormal = false;
        //
        // Nothing can be done at this stage currently - to solve this
        // Replica Navigation must have calculated the normal for this case
        // already.
        // Cases: mother is not convex, and exit is at previous replica level

#ifdef G4DEBUG_NAVIGATION
        G4ExceptionDescription desc;

        desc << "Problem in ComputeStep:  Replica Navigation did not provide"
             << " valid exit Normal. " << G4endl;
        desc << " Do not know how calculate it in this case." << G4endl;
        desc << "  Location    = " << finalLocalPoint << G4endl;
        desc << "  Volume name = " << motherPhysical->GetName()
             << "  copy/replica No = " << motherPhysical->GetCopyNo() << G4endl;
        G4Exception("G4Navigator::ComputeStep()", "GeomNav0003",
                    JustWarning, desc, "Normal not available for exiting.");
#endif
      }
    }

    if ( fHistory.GetTopVolumeType() != kReplica )
      fCalculatedExitNormal = true;

    // Now transform it to the global reference frame !!
    //
    if( fValidExitNormal || fCalculatedExitNormal )
    {
      G4int depth = (G4int)fHistory.GetDepth();
      if( depth > 0 )
      {
        fExitNormalGlobalFrame = fHistory.GetTransform(depth-1)
                                .InverseTransformAxis( fGrandMotherExitNormal );
      }
      else
      {
        fExitNormalGlobalFrame = fGrandMotherExitNormal;
      }
    }
    else
    {
      fExitNormalGlobalFrame = G4ThreeVector( 0., 0., 0.);
    }
  }

  if( (Step == pCurrentProposedStepLength) && (!fExiting) && (!fEntering) )
  {
    // This if Step is not really limited by the geometry.
    // The Navigator is obliged to return "infinity"
    //
    Step = kInfinity;
  }

#ifdef G4VERBOSE
  if( fVerbose > 1 )
  {
    if( fVerbose >= 4 )
    {
      G4cout << "    ----- Upon exiting :" << G4endl;
      PrintState();
    }
    G4cout << "  Returned step= " << Step;
    if( fVerbose > 5 )  { G4cout << G4endl; }
    if( Step == kInfinity )
    {
       G4cout << " Requested step= " << pCurrentProposedStepLength ;
       if( fVerbose > 5)  { G4cout << G4endl; }
    }
    G4cout << "  Safety = " << pNewSafety << G4endl;
  }
#endif

  fLastTriedStepComputation = true;

  return Step;
}
## end
#95, 21876:
comm#0"//
"(,)
name#1"G4double"(,)
name#2"G4Navigator"(,)
name#3"ComputeStep"(,)
cmd#4"const G4ThreeVector& pGlobalpoint"(,)
cmd#5" const G4ThreeVector& pDirection"(cmd#4,)
cmd#6" const G4double pCurrentProposedStepLength"(cmd#5,)
cmd#7" G4double& pNewSafety"(cmd#6,)
define#8"#ifdef G4DEBUG_NAVIGATION
"(,)
normal#9"static G4ThreadLocal G4int sNavCScalls = 0;
++sNavCScalls;
"(,)
define#10"#endif
"(,)
normal#11"G4ThreeVector localDirection = ComputeLocalAxis(pDirection);
G4double Step = kInfinity;
G4VPhysicalVolume  *motherPhysical = fHistory.GetTopVolume();
G4LogicalVolume *motherLogical = motherPhysical->GetLogicalVolume();
"(,)
comm#12"// All state relating to exiting normals must be reset
//
"(,)
normal#13"fExitNormalGlobalFrame = G4ThreeVector( 0., 0., 0.);
"(,)
comm#14"// Reset value - to erase its memory
"(,)
normal#15"fChangedGrandMotherRefFrame = false;
"(,)
comm#16"// Reset - used for local exit normal
"(,)
normal#17"fGrandMotherExitNormal = G4ThreeVector( 0., 0., 0.); 
fCalculatedExitNormal = false;
"(,)
comm#18"// Reset for new step
"(,)
define#19"#ifdef G4VERBOSE
"(,)
cmd#20"fVerbose > 0 "(,)
normal#21"G4cout << \"*** G4Navigator::ComputeStep: ***\" << G4endl; 
G4cout << \"    Volume = \" << motherPhysical->GetName() 
<< \" - Proposed step length = \" << pCurrentProposedStepLength
<< G4endl; 
"(,)
define#22"#ifdef G4DEBUG_NAVIGATION
"(,)
cmd#23"fVerbose >= 2 "(,)
normal#24"G4cout << \"  Called with the arguments: \" << G4endl
<< \"  Globalpoint = \" << std::setw(25) << pGlobalpoint << G4endl
<< \"  Direction   = \" << std::setw(25) << pDirection << G4endl;
"(,)
cmd#25"fVerbose >= 4 "(,)
normal#26"G4cout << \"  ---- Upon entering : State\" << G4endl;
PrintState();
"(,)
块#27""(,normal#26)
运算#28""(条件#29,块#27)
条件#29""(如果#30,cmd#25)
如果#30"if"(,)
块#31""(块#32,如果#30)
块#32""(,normal#24)
运算#33""(条件#34,块#32)
条件#34""(如果#35,cmd#23)
如果#35"if"(,)
define#36"#endif
"(,)
块#37""(块#38,define#36)
块#38""(块#39,如果#35)
块#39""(块#40,define#22)
块#40""(,normal#21)
运算#41""(条件#42,块#40)
条件#42""(如果#43,cmd#20)
如果#43"if"(,)
define#44"#endif
"(,)
normal#45"G4ThreeVector newLocalPoint = ComputeLocalPoint(pGlobalpoint);
"(,)
cmd#46"newLocalPoint != fLastLocatedPointLocal "(,)
comm#47"// Check whether the relocation is within safety
//
"(,)
normal#48"G4ThreeVector oldLocalPoint = fLastLocatedPointLocal;
G4double moveLenSq = (newLocalPoint-oldLocalPoint).mag2();
"(,)
cmd#49"moveLenSq >= fSqTol "(,)
define#50"#ifdef G4VERBOSE
"(,)
normal#51"ComputeStepLog(pGlobalpoint, moveLenSq);
"(,)
define#52"#endif
"(,)
comm#53"// Relocate the point within the same volume
//
"(,)
normal#54"LocateGlobalPointWithinVolume( pGlobalpoint );
"(,)
块#55""(块#56,normal#54)
块#56""(块#57,comm#53)
块#57""(块#58,define#52)
块#58""(块#59,normal#51)
块#59""(,define#50)
运算#60""(条件#61,块#59)
条件#61""(如果#62,cmd#49)
如果#62"if"(,)
块#63""(块#64,如果#62)
块#64""(块#65,normal#48)
块#65""(,comm#47)
运算#66""(条件#67,块#65)
条件#67""(如果#68,cmd#46)
如果#68"if"(,)
cmd#69"fHistory.GetTopVolumeType()!=kReplica "(,)
normal#70"switch( CharacteriseDaughters(motherLogical) )
{
      case kNormal:
        if ( motherLogical->GetVoxelHeader() )
        {
          Step = GetVoxelNavigator().ComputeStep(fLastLocatedPointLocal,
                                       localDirection,
                                       pCurrentProposedStepLength,
                                       pNewSafety,
                                       fHistory,
                                       fValidExitNormal,
                                       fExitNormal,
                                       fExiting,
                                       fEntering,
                                       &fBlockedPhysicalVolume,
                                       fBlockedReplicaNo);
      
        }
        else
        {
          if( motherPhysical->GetRegularStructureId() == 0 )
          {
            Step = fnormalNav.ComputeStep(fLastLocatedPointLocal,
                                          localDirection,
                                          pCurrentProposedStepLength,
                                          pNewSafety,
                                          fHistory,
                                          fValidExitNormal,
                                          fExitNormal,
                                          fExiting,
                                          fEntering,
                                          &fBlockedPhysicalVolume,
                                          fBlockedReplicaNo);
          }
          else
          {
            LocateGlobalPointAndSetup( pGlobalpoint, &pDirection, true, true );
            //
            // if physical process limits the step, the voxel will not be the
            // one given by ComputeStepSkippingEqualMaterials() and the local
            // point will be wrongly calculated.

            // There is a problem: when msc limits the step and the point is
            // assigned wrongly to phantom in previous step (while it is out
            // of the container volume). Then LocateGlobalPointAndSetup() has
            // reset the history topvolume to world.
            //
            if(fHistory.GetTopVolume()->GetRegularStructureId() == 0 )
            { 
              G4Exception(\"G4Navigator::ComputeStep()\",
                          \"GeomNav1001\", JustWarning,
                \"Point is relocated in voxels, while it should be outside!\");
              Step = fnormalNav.ComputeStep(fLastLocatedPointLocal,
                                            localDirection,
                                            pCurrentProposedStepLength,
                                            pNewSafety,
                                            fHistory,
                                            fValidExitNormal,
                                            fExitNormal,
                                            fExiting,
                                            fEntering,
                                            &fBlockedPhysicalVolume,
                                            fBlockedReplicaNo);
            }
            else
            {
              Step = fregularNav.
                   ComputeStepSkippingEqualMaterials(fLastLocatedPointLocal,
                                                     localDirection,
                                                     pCurrentProposedStepLength,
                                                     pNewSafety,
                                                     fHistory,
                                                     fValidExitNormal,
                                                     fExitNormal,
                                                     fExiting,
                                                     fEntering,
                                                     &fBlockedPhysicalVolume,
                                                     fBlockedReplicaNo,
                                                     motherPhysical);
            }
          }
        }
        break;
      case kParameterised:
        if( GetDaughtersRegularStructureId(motherLogical) != 1 )
        {
          Step = fparamNav.ComputeStep(fLastLocatedPointLocal,
                                       localDirection,
                                       pCurrentProposedStepLength,
                                       pNewSafety,
                                       fHistory,
                                       fValidExitNormal,
                                       fExitNormal,
                                       fExiting,
                                       fEntering,
                                       &fBlockedPhysicalVolume,
                                       fBlockedReplicaNo);
        }
        else
        {
          Step = fregularNav.ComputeStep(fLastLocatedPointLocal,
                                         localDirection,
                                         pCurrentProposedStepLength,
                                         pNewSafety,
                                         fHistory,
                                         fValidExitNormal,
                                         fExitNormal,
                                         fExiting,
                                         fEntering,
                                         &fBlockedPhysicalVolume,
                                         fBlockedReplicaNo);
        }
        break;
      case kReplica:
        G4Exception(\"G4Navigator::ComputeStep()\", \"GeomNav0001\",
                    FatalException, \"Not applicable for replicated volumes.\");
        break;
      case kExternal:
        Step = fpExternalNav->ComputeStep(fLastLocatedPointLocal,
                                          localDirection,
                                          pCurrentProposedStepLength,
                                          pNewSafety,
                                          fHistory,
                                          fValidExitNormal,
                                          fExitNormal,
                                          fExiting,
                                          fEntering,
                                          &fBlockedPhysicalVolume,
                                          fBlockedReplicaNo);
        break;
    }
"(,)
块#71""(,normal#70)
运算#72""(条件#79,块#71)
comm#73"// In the case of a replica, it must handle the exiting
// edge/corner problem by itself
//
"(,)
normal#74"fExiting = fExitedMother;
Step = freplicaNav.ComputeStep(pGlobalpoint,
pDirection,
fLastLocatedPointLocal,
localDirection,
pCurrentProposedStepLength,
pNewSafety,
fHistory,
fValidExitNormal,
fCalculatedExitNormal,
fExitNormal,
fExiting,
fEntering,
&fBlockedPhysicalVolume,
fBlockedReplicaNo);
"(,)
块#75""(块#76,normal#74)
块#76""(,comm#73)
运算#77""(否则#78,块#76)
否则#78"else"(运算#72,)
条件#79""(如果#80,cmd#69)
如果#80"if"(,)
comm#81"// Remember last safety origin & value.
//
"(,)
normal#82"fPreviousSftOrigin = pGlobalpoint;
fPreviousSafety = pNewSafety; 
"(,)
comm#83"// Count zero steps - one can occur due to changing momentum at a boundary
//                  - one, two (or a few) can occur at common edges between
//                    volumes
//                  - more than two is likely a problem in the geometry
//                    description or the Navigation 
// Rule of thumb: likely at an Edge if two consecutive steps are zero,
//                because at least two candidate volumes must have been
//                checked
//
"(,)
normal#84"fLocatedOnEdge   = fLastStepWasZero && (Step==0.0);
fLastStepWasZero = (Step<fMinStep);
"(,)
cmd#85"fPushed"(,)
normal#86"fPushed = fLastStepWasZero; "(,)
块#87""(,normal#86)
运算#88""(条件#89,块#87)
条件#89""(如果#90,cmd#85)
如果#90"if"(,)
comm#91"// Handle large number of consecutive zero steps
//
"(,)
cmd#92"fLastStepWasZero "(,)
normal#93"++fNumberZeroSteps;
G4bool act     = fNumberZeroSteps >= fActionThreshold_NoZeroSteps;
G4bool actAndReport = false;
G4bool abandon = fNumberZeroSteps >= fAbandonThreshold_NoZeroSteps;
G4bool inform  = false;
"(,)
define#94"#ifdef G4VERBOSE
"(,)
normal#95"actAndReport = act && (!fPushed) && fWarnPush;
"(,)
define#96"#endif
#ifdef G4DEBUG_NAVIGATION
"(,)
normal#97"inform = fNumberZeroSteps > 1;
"(,)
define#98"#endif
"(,)
cmd#99"act || inform "(,)
cmd#100"act && !abandon "(,)
comm#101"// Act to recover this stuck track. Pushing it along original direction
//
"(,)
normal#102"Step += 100*kCarTolerance;
fPushed = true;
"(,)
块#103""(块#104,normal#102)
块#104""(,comm#101)
运算#105""(条件#106,块#104)
条件#106""(如果#107,cmd#100)
如果#107"if"(,)
cmd#108"actAndReport || abandon || inform "(,)
normal#109"std::ostringstream message;
message.precision(16);      
message << \"Stuck Track: potential geometry or navigation problem.\"
<< G4endl;
message << \"  Track stuck, not moving for \" 
<< fNumberZeroSteps << \" steps.\"  << G4endl
<< \"  Current  phys volume: '\" << motherPhysical->GetName()
<< \"'\" << G4endl
<< \"   - at position : \" << pGlobalpoint << G4endl
<< \"     in direction: \" << pDirection   << G4endl
<< \"    (local position: \" << newLocalPoint << \")\" << G4endl
<< \"    (local direction: \" << localDirection << \").\" << G4endl
<< \"  Previous phys volume: '\"
<< ( fLastMotherPhys ? fLastMotherPhys->GetName() : \"\" )
<< \"'\" << G4endl << G4endl;
"(,)
cmd#110"actAndReport || abandon "(,)
normal#111"message << \"  Likely geometry overlap - else navigation problem !\"
<< G4endl;
"(,)
块#112""(,normal#111)
运算#113""(条件#114,块#112)
条件#114""(如果#115,cmd#110)
如果#115"if"(,)
cmd#116"abandon "(,)
comm#117"// Must kill this stuck track
"(,)
define#118"#ifdef G4VERBOSE
"(,)
cmd#119"fWarnPush "(,)
normal#120"CheckOverlapsIterative(motherPhysical); "(,)
块#121""(,normal#120)
运算#122""(条件#123,块#121)
条件#123""(如果#124,cmd#119)
如果#124"if"(,)
define#125"#endif
"(,)
normal#126"message << \" Track *abandoned* due to excessive number of Zero steps.\"
<< \" Event aborted. \" << G4endl << G4endl;
G4Exception(\"G4Navigator::ComputeStep()\", \"GeomNav0003\",
EventMustBeAborted, message);
"(,)
块#127""(块#128,normal#126)
块#128""(块#129,define#125)
块#129""(块#130,如果#124)
块#130""(块#131,define#118)
块#131""(,comm#117)
运算#132""(条件#150,块#131)
define#133"#ifdef G4VERBOSE
"(,)
cmd#134"actAndReport "(,)
normal#135"message << \"   *** Trying to get *unstuck* using a push\"
<< \" - expanding step to \" << Step << \" (mm) ...\"
<< \"       Potential overlap in geometry !\" << G4endl;
G4Exception(\"G4Navigator::ComputeStep()\", \"GeomNav1002\",
JustWarning, message); 
"(,)
块#136""(,normal#135)
运算#137""(条件#138,块#136)
条件#138""(如果#139,cmd#134)
如果#139"if"(,)
define#140"#endif
#ifdef G4DEBUG_NAVIGATION      
"(,)
normal#141"else
{
            if( fNumberZeroSteps > 1 )
            {
               message << \", nav-comp-step calls # \" << sNavCScalls
                       << \", Step= \" << Step << G4endl;
               G4cout << message.str();
            }
          }
"(,)
define#142"#endif
"(,)
块#143""(块#144,define#142)
块#144""(块#145,normal#141)
块#145""(块#146,define#140)
块#146""(块#147,如果#139)
块#147""(,define#133)
运算#148""(否则#149,块#147)
否则#149"else"(运算#132,)
条件#150""(如果#151,cmd#116)
如果#151"if"(,)
块#152""(块#153,如果#151)
块#153""(块#154,如果#115)
块#154""(,normal#109)
运算#155""(条件#156,块#154)
条件#156""(如果#157,cmd#108)
如果#157"if"(,)
块#158""(块#159,如果#157)
块#159""(,如果#107)
运算#160""(条件#161,块#159)
条件#161""(如果#162,cmd#99)
如果#162"if"(,)
块#163""(块#164,如果#162)
块#164""(块#165,define#98)
块#165""(块#166,normal#97)
块#166""(块#167,define#96)
块#167""(块#168,normal#95)
块#168""(块#169,define#94)
块#169""(,normal#93)
运算#170""(条件#180,块#169)
cmd#171"!fPushed"(,)
normal#172"fNumberZeroSteps = 0; "(,)
块#173""(,normal#172)
运算#174""(条件#175,块#173)
条件#175""(如果#176,cmd#171)
如果#176"if"(,)
块#177""(,如果#176)
运算#178""(否则#179,块#177)
否则#179"else"(运算#170,)
条件#180""(如果#181,cmd#92)
如果#181"if"(,)
normal#182"fLastMotherPhys = motherPhysical;
fEnteredDaughter = fEntering;   "(,)
comm#183"// I expect to enter a volume in this Step
"(,)
normal#184"fExitedMother = fExiting;
fStepEndPoint = pGlobalpoint
+ std::min(Step,pCurrentProposedStepLength) * pDirection;
fLastStepEndPointLocal = fLastLocatedPointLocal + Step * localDirection; 
"(,)
cmd#185"fExiting "(,)
define#186"#ifdef G4DEBUG_NAVIGATION
"(,)
cmd#187"fVerbose > 2 "(,)
normal#188"G4cout << \" At G4Nav CompStep End - if(exiting) - fExiting= \" << fExiting
<< \" fValidExitNormal = \" << fValidExitNormal  << G4endl;
G4cout << \" fExitNormal= \" << fExitNormal << G4endl;
"(,)
块#189""(,normal#188)
运算#190""(条件#191,块#189)
条件#191""(如果#192,cmd#187)
如果#192"if"(,)
define#193"#endif
"(,)
cmd#194"fValidExitNormal || fCalculatedExitNormal "(,)
comm#195"// Convention: fExitNormal is in the 'grand-mother' coordinate system
"(,)
normal#196"fGrandMotherExitNormal = fExitNormal;
"(,)
块#197""(块#198,normal#196)
块#198""(,comm#195)
运算#199""(条件#244,块#198)
comm#200"// We must calculate the normal anyway (in order to have it if requested)
//
"(,)
normal#201"G4ThreeVector finalLocalPoint = fLastLocatedPointLocal
+ localDirection*Step;
"(,)
cmd#202"fHistory.GetTopVolumeType() != kReplica "(,)
comm#203"// Find normal in the 'mother' coordinate system
//
"(,)
normal#204"G4ThreeVector exitNormalMotherFrame=
motherLogical->GetSolid()->SurfaceNormal(finalLocalPoint);
"(,)
comm#205"// Transform it to the 'grand-mother' coordinate system
//
"(,)
normal#206"const G4RotationMatrix* mRot = motherPhysical->GetRotation();
"(,)
cmd#207"mRot "(,)
normal#208"fChangedGrandMotherRefFrame = true;           
fGrandMotherExitNormal = (*mRot).inverse() * exitNormalMotherFrame;
"(,)
块#209""(,normal#208)
运算#210""(条件#215,块#209)
normal#211"fGrandMotherExitNormal = exitNormalMotherFrame;
"(,)
块#212""(,normal#211)
运算#213""(否则#214,块#212)
否则#214"else"(运算#210,)
条件#215""(如果#216,cmd#207)
如果#216"if"(,)
comm#217"// Do not set fValidExitNormal -- this signifies
// that the solid is convex!
"(,)
块#218""(块#219,comm#217)
块#219""(块#220,如果#216)
块#220""(块#221,normal#206)
块#221""(块#222,comm#205)
块#222""(块#223,normal#204)
块#223""(,comm#203)
运算#224""(条件#237,块#223)
normal#225"fCalculatedExitNormal = false;
"(,)
comm#226"//
// Nothing can be done at this stage currently - to solve this
// Replica Navigation must have calculated the normal for this case
// already.
// Cases: mother is not convex, and exit is at previous replica level
"(,)
define#227"#ifdef G4DEBUG_NAVIGATION
"(,)
normal#228"G4ExceptionDescription desc;
desc << \"Problem in ComputeStep:  Replica Navigation did not provide\"
<< \" valid exit Normal. \" << G4endl;
desc << \" Do not know how calculate it in this case.\" << G4endl;
desc << \"  Location    = \" << finalLocalPoint << G4endl;
desc << \"  Volume name = \" << motherPhysical->GetName()
<< \"  copy/replica No = \" << motherPhysical->GetCopyNo() << G4endl;
G4Exception(\"G4Navigator::ComputeStep()\", \"GeomNav0003\",
JustWarning, desc, \"Normal not available for exiting.\");
"(,)
define#229"#endif
"(,)
块#230""(块#231,define#229)
块#231""(块#232,normal#228)
块#232""(块#233,define#227)
块#233""(块#234,comm#226)
块#234""(,normal#225)
运算#235""(否则#236,块#234)
否则#236"else"(运算#224,)
条件#237""(如果#238,cmd#202)
如果#238"if"(,)
块#239""(块#240,如果#238)
块#240""(块#241,normal#201)
块#241""(,comm#200)
运算#242""(否则#243,块#241)
否则#243"else"(运算#199,)
条件#244""(如果#245,cmd#194)
如果#245"if"(,)
cmd#246"fHistory.GetTopVolumeType() != kReplica "(,)
cmd#247"fCalculatedExitNormal = true"(,)
运算#248""(条件#249,cmd#247)
条件#249""(如果#250,cmd#246)
如果#250"if"(,)
comm#251"// Now transform it to the global reference frame !!
//
"(,)
cmd#252"fValidExitNormal || fCalculatedExitNormal "(,)
normal#253"G4int depth = (G4int)fHistory.GetDepth();
"(,)
cmd#254"depth > 0 "(,)
normal#255"fExitNormalGlobalFrame = fHistory.GetTransform(depth-1)
.InverseTransformAxis( fGrandMotherExitNormal );
"(,)
块#256""(,normal#255)
运算#257""(条件#262,块#256)
normal#258"fExitNormalGlobalFrame = fGrandMotherExitNormal;
"(,)
块#259""(,normal#258)
运算#260""(否则#261,块#259)
否则#261"else"(运算#257,)
条件#262""(如果#263,cmd#254)
如果#263"if"(,)
块#264""(块#265,如果#263)
块#265""(,normal#253)
运算#266""(条件#271,块#265)
normal#267"fExitNormalGlobalFrame = G4ThreeVector( 0., 0., 0.);
"(,)
块#268""(,normal#267)
运算#269""(否则#270,块#268)
否则#270"else"(运算#266,)
条件#271""(如果#272,cmd#252)
如果#272"if"(,)
块#273""(块#274,如果#272)
块#274""(块#275,comm#251)
块#275""(块#276,如果#250)
块#276""(块#277,如果#245)
块#277""(块#278,define#193)
块#278""(块#279,如果#192)
块#279""(,define#186)
运算#280""(条件#281,块#279)
条件#281""(如果#282,cmd#185)
如果#282"if"(,)
cmd#283"(Step == pCurrentProposedStepLength) && (!fExiting) && (!fEntering) "(,)
comm#284"// This if Step is not really limited by the geometry.
// The Navigator is obliged to return \"infinity\"
//
"(,)
normal#285"Step = kInfinity;
"(,)
块#286""(块#287,normal#285)
块#287""(,comm#284)
运算#288""(条件#289,块#287)
条件#289""(如果#290,cmd#283)
如果#290"if"(,)
define#291"#ifdef G4VERBOSE
"(,)
cmd#292"fVerbose > 1 "(,)
cmd#293"fVerbose >= 4 "(,)
normal#294"G4cout << \"    ----- Upon exiting :\" << G4endl;
PrintState();
"(,)
块#295""(,normal#294)
运算#296""(条件#297,块#295)
条件#297""(如果#298,cmd#293)
如果#298"if"(,)
normal#299"G4cout << \"  Returned step= \" << Step;
"(,)
cmd#300"fVerbose > 5 "(,)
normal#301"G4cout << G4endl; "(,)
块#302""(,normal#301)
运算#303""(条件#304,块#302)
条件#304""(如果#305,cmd#300)
如果#305"if"(,)
cmd#306"Step == kInfinity "(,)
normal#307"G4cout << \" Requested step= \" << pCurrentProposedStepLength ;
"(,)
cmd#308"fVerbose > 5"(,)
normal#309"G4cout << G4endl; "(,)
块#310""(,normal#309)
运算#311""(条件#312,块#310)
条件#312""(如果#313,cmd#308)
如果#313"if"(,)
块#314""(块#315,如果#313)
块#315""(,normal#307)
运算#316""(条件#317,块#315)
条件#317""(如果#318,cmd#306)
如果#318"if"(,)
normal#319"G4cout << \"  Safety = \" << pNewSafety << G4endl;
"(,)
块#320""(块#321,normal#319)
块#321""(块#322,如果#318)
块#322""(块#323,如果#305)
块#323""(块#324,normal#299)
块#324""(,如果#298)
运算#325""(条件#326,块#324)
条件#326""(如果#327,cmd#292)
如果#327"if"(,)
define#328"#endif
"(,)
normal#329"fLastTriedStepComputation = true;
return Step;
"(,)
块#330""(块#331,normal#329)
块#331""(块#332,define#328)
块#332""(块#333,如果#327)
块#333""(块#334,define#291)
块#334""(块#335,如果#290)
块#335""(块#336,如果#282)
块#336""(块#337,normal#184)
块#337""(块#338,comm#183)
块#338""(块#339,normal#182)
块#339""(块#340,如果#181)
块#340""(块#341,comm#91)
块#341""(块#342,如果#90)
块#342""(块#343,normal#84)
块#343""(块#344,comm#83)
块#344""(块#345,normal#82)
块#345""(块#346,comm#81)
块#346""(块#347,如果#80)
块#347""(块#348,如果#68)
块#348""(块#349,normal#45)
块#349""(块#350,define#44)
块#350""(块#351,如果#43)
块#351""(块#352,define#19)
块#352""(块#353,comm#18)
块#353""(块#354,normal#17)
块#354""(块#355,comm#16)
块#355""(块#356,normal#15)
块#356""(块#357,comm#14)
块#357""(块#358,normal#13)
块#358""(块#359,comm#12)
块#359""(块#360,normal#11)
块#360""(块#361,define#10)
块#361""(块#362,normal#9)
块#362""(,define#8)
运算#363""(输入变量#364,块#362)
输入变量#364""(函数#365,cmd#4)
函数#365""(命名空间#366,name#3)
命名空间#366""(输出类型#367,name#2)
输出类型#367""(,name#1)
块#368""(块#369,输出类型#367)
块#369""(,comm#0)
起点#370""(,块#369)

## end
#97, 3966:
code
ComputeStep
├code
├code
├code
├code
├code
├code
├code
├code
├code
├code
├code
├code
├if
|└fVerbose > 0 
| ├code
| ├code
| ├if
| |└fVerbose >= 2 
| | ├code
| | └if
| |  └fVerbose >= 4 
| |   └code
| └code
├code
├code
├if
|└newLocalPoint != fLastLocatedPointLocal 
| ├code
| ├code
| └if
|  └moveLenSq >= fSqTol 
|   ├code
|   ├code
|   ├code
|   ├code
|   └code
├if
|└fHistory.GetTopVolumeType()!=kReplica─────else
| └code                                     code
├code
├code
├code
├code
├if
|└fPushed
| └code
├code
├if
|└fLastStepWasZero──────────────────────────if       
| ├code                                     └!fPushed
| ├code                                      └code   
| ├code                                              
| ├code                                              
| ├code                                              
| ├code                                              
| └if                                                
|  └act || inform                                    
|   ├if                                              
|   |└act && !abandon                                
|   | ├code                                          
|   | └code                                          
|   └if                                              
|    └actAndReport || abandon || inform              
|     ├code                                          
|     ├if                                            
|     |└actAndReport || abandon                      
|     | └code                                        
|     └if                                            
|      └abandon─────────else                         
|       ├code           if                           
|       ├code           └actAndReport                
|       ├if              └code                       
|       |└fWarnPush     code                         
|       | └code         code                         
|       ├code           code                         
|       └code                                        
├code
├code
├code
├if
|└fExiting 
| ├code
| ├if
| |└fVerbose > 2 
| | └code
| ├code
| ├if
| |└fValidExitNormal─||─fCalculatedExitNormal─────else                                             
| | ├code                                         code                                             
| | └code                                         if                                               
| |                                               └fHistory.GetTopVolumeType()─!=─kReplica─────else
| |                                                ├code                                       code
| |                                                ├code                                       code
| |                                                ├code                                       code
| |                                                ├code                                       code
| |                                                ├if                                             
| |                                                |└mRot─────else                                 
| |                                                | └code                                         
| |                                                └code                                           
| ├if
| |└fHistory.GetTopVolumeType() != kReplica 
| | └code
| ├code
| └if
|  └fValidExitNormal─||─fCalculatedExitNormal─────else
|   ├code                                             
|   └if                                               
|    └depth─>─0─────else                              
|     └code                                           
├if
|└(Step == pCurrentProposedStepLength) && (!fExiting) && (!fEntering) 
| ├code
| └code
├code
├if
|└fVerbose > 1 
| ├if
| |└fVerbose >= 4 
| | └code
| ├code
| ├if
| |└fVerbose > 5 
| | └code
| ├if
| |└Step == kInfinity 
| | ├code
| | └if
| |  └fVerbose > 5
| |   └code
| └code
├code
└code
## end
#101, 13:
fVerbose > 0 
## end
#102, 5:
1,1,1
## end
#105, 14:
fVerbose >= 2 
## end
#106, 5:
1,1,1
## end
#109, 14:
fVerbose >= 4 
## end
#110, 5:
1,1,1
## end
#113, 40:
newLocalPoint != fLastLocatedPointLocal 
## end
#114, 5:
1,1,1
## end
#117, 20:
moveLenSq >= fSqTol 
## end
#118, 5:
1,1,1
## end
#121, 38:
fHistory.GetTopVolumeType()!=kReplica 
## end
#122, 5:
1,1,1
## end
#125, 7:
fPushed
## end
#126, 5:
1,1,1
## end
#129, 17:
fLastStepWasZero 
## end
#130, 5:
1,1,1
## end
#133, 14:
act || inform 
## end
#134, 5:
1,1,1
## end
#137, 16:
act && !abandon 
## end
#138, 5:
1,1,1
## end
#141, 34:
actAndReport || abandon || inform 
## end
#142, 5:
1,1,1
## end
#145, 24:
actAndReport || abandon 
## end
#146, 5:
1,1,1
## end
#149, 8:
abandon 
## end
#150, 5:
1,1,1
## end
#153, 10:
fWarnPush 
## end
#154, 5:
1,1,1
## end
#157, 13:
actAndReport 
## end
#158, 5:
1,1,1
## end
#161, 8:
!fPushed
## end
#162, 5:
1,1,1
## end
#165, 9:
fExiting 
## end
#166, 5:
1,1,1
## end
#169, 13:
fVerbose > 2 
## end
#170, 5:
1,1,1
## end
#173, 42:
fValidExitNormal || fCalculatedExitNormal 
## end
#174, 5:
1,1,1
## end
#177, 40:
fHistory.GetTopVolumeType() != kReplica 
## end
#178, 5:
1,1,1
## end
#181, 5:
mRot 
## end
#182, 5:
1,1,1
## end
#185, 40:
fHistory.GetTopVolumeType() != kReplica 
## end
#186, 5:
1,1,1
## end
#189, 42:
fValidExitNormal || fCalculatedExitNormal 
## end
#190, 5:
1,1,1
## end
#193, 10:
depth > 0 
## end
#194, 5:
1,1,1
## end
#197, 68:
(Step == pCurrentProposedStepLength) && (!fExiting) && (!fEntering) 
## end
#198, 5:
1,1,1
## end
#201, 13:
fVerbose > 1 
## end
#202, 5:
1,1,1
## end
#205, 14:
fVerbose >= 4 
## end
#206, 5:
1,1,1
## end
#209, 13:
fVerbose > 5 
## end
#210, 5:
1,1,1
## end
#213, 18:
Step == kInfinity 
## end
#214, 5:
1,1,1
## end
#217, 12:
fVerbose > 5
## end
#218, 5:
1,1,1
## end
#221, 49:


调用命令:...
BeamOn流程:...
Stepping流程:...
关键类:...



## end
#223, 256:
(E_x(x,y,z;r,U1,U2,U3),E_z(x,y,z;r,U1,U2,U3),E_z(x,y,z;r,U1,U2,U3))

结构描述:...
+[新建阅读窗口](,结构描述)

结构::
+[删除结构](,结构)->+[分析结构图结构](结构描述,结构)->+[显示星图](,结构)

流程图:...
+[删除结构](,流程图)->+[召唤星辰]"一般结构转结构文字"(结构,流程图)
+[删除结构](,流程图)->+[召唤星辰]"一般结构转流程图"(结构,流程图)
+[H函数](,流程图)



## end
#225, 139:
main{
    G4UImanager(类)->ApplyCommand{
        G4UIcommand(类)->DoIt{
            G4RunMessenger(类)->SetNewValue->BeamOn
        }
    }
}

## end
#227, 695:
name#0"main"(,)
name#1"G4UImanager"(,)
text#2"类"(名字#4,)
注释#3""(,text#2)
名字#4""(,name#1)
name#5"ApplyCommand"(,)
name#6"G4UIcommand"(,)
text#7"类"(名字#9,)
注释#8""(,text#7)
名字#9""(,name#6)
name#10"DoIt"(,)
name#11"G4RunMessenger"(,)
text#12"类"(名字#14,)
注释#13""(,text#12)
名字#14""(,name#11)
name#15"SetNewValue"(,)
名字#16""(,name#15)
name#17"BeamOn"(,)
名字#18""(,name#17)
节点#19""(节点#20,名字#18)
节点#20""(节点#21,名字#16)
节点#21""(,名字#14)
行#22""(名字#24,节点#21)
子集#23""(,行#22)
名字#24""(,name#10)
节点#25""(节点#26,名字#24)
节点#26""(,名字#9)
行#27""(名字#29,节点#26)
子集#28""(,行#27)
名字#29""(,name#5)
节点#30""(节点#31,名字#29)
节点#31""(,名字#4)
行#32""(名字#34,节点#31)
子集#33""(,行#32)
名字#34""(,name#0)
节点#35""(,名字#34)
行#36""(,节点#35)
起点#37""(,行#36)

## end
#229, 3640:

<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 816.434017595308" style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="430,0 569,0 569,64 430,64 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,92 569,92 569,156 430,156 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,184 569,184 569,249 430,249 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,276 569,276 569,341 430,341 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,369 569,369 569,433 430,433 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,461 569,461 569,525 430,525 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,553 569,553 569,618 430,618 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,645 569,645 569,710 430,710 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="430,738 569,738 569,802 430,802 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,64 500,78 500,78 500,92 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,816 500,816 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,156 500,170 500,170 500,184 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="500,249 500,276 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,816 500,816 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,341 500,355 500,355 500,369 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="500,433 500,461 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,816 500,816 500,802 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="500,525 500,539 500,539 500,553 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="500,618 500,645 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="500,710 500,738 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="770.307802" font-size="15">BeamOn</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="678.055371" font-size="15">SetNewValue</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="585.802939" font-size="15">G4RunMessenger</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="493.550508" font-size="15">DoIt</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="401.298076" font-size="15">G4UIcommand</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="309.045645" font-size="15">ApplyCommand</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="216.793214" font-size="15">G4UImanager</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="124.540782" font-size="15">main</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="32.288351" font-size="15">起点</text>

</svg>


## end
#232, 2:
起点
## end
#234, 19:
14.0, 8.0, 2.0, 1.0
## end
#242, 8:
0.0, 0.0
## end
#248, 10:
0.0, -0.35
## end
#250, 2:
居中
## end
#254, 2:
起点
## end
#255, 22:
-0.0, -0.0, -0.7, -0.7
## end
#257, 24:
-0.75, 0.75, 0.75, -0.75
## end
#259, 3:
0.7
## end
#261, 3:
1.5
## end
#264, 3:
多边形
## end
#267, 9:
0.0, -1.0
## end
#273, 10:
0.0, -1.35
## end
#275, 2:
居中
## end
#279, 4:
main
## end
#280, 22:
-0.0, -0.0, -0.7, -0.7
## end
#282, 24:
-0.75, 0.75, 0.75, -0.75
## end
#284, 3:
0.7
## end
#286, 3:
1.5
## end
#289, 3:
多边形
## end
#292, 9:
0.0, -2.0
## end
#298, 10:
0.0, -2.35
## end
#300, 2:
居中
## end
#304, 11:
G4UImanager
## end
#305, 22:
-0.0, -0.0, -0.7, -0.7
## end
#307, 24:
-0.75, 0.75, 0.75, -0.75
## end
#309, 3:
0.7
## end
#311, 3:
1.5
## end
#314, 3:
多边形
## end
#317, 9:
0.0, -3.0
## end
#323, 10:
0.0, -3.35
## end
#325, 2:
居中
## end
#329, 12:
ApplyCommand
## end
#330, 22:
-0.0, -0.0, -0.7, -0.7
## end
#332, 24:
-0.75, 0.75, 0.75, -0.75
## end
#334, 3:
0.7
## end
#336, 3:
1.5
## end
#339, 3:
多边形
## end
#342, 9:
0.0, -4.0
## end
#348, 10:
0.0, -4.35
## end
#350, 2:
居中
## end
#354, 11:
G4UIcommand
## end
#355, 22:
-0.0, -0.0, -0.7, -0.7
## end
#357, 24:
-0.75, 0.75, 0.75, -0.75
## end
#359, 3:
0.7
## end
#361, 3:
1.5
## end
#364, 3:
多边形
## end
#367, 9:
0.0, -5.0
## end
#373, 10:
0.0, -5.35
## end
#375, 2:
居中
## end
#379, 4:
DoIt
## end
#380, 22:
-0.0, -0.0, -0.7, -0.7
## end
#382, 24:
-0.75, 0.75, 0.75, -0.75
## end
#384, 3:
0.7
## end
#386, 3:
1.5
## end
#389, 3:
多边形
## end
#392, 9:
0.0, -6.0
## end
#398, 10:
0.0, -6.35
## end
#400, 2:
居中
## end
#404, 14:
G4RunMessenger
## end
#405, 22:
-0.0, -0.0, -0.7, -0.7
## end
#407, 24:
-0.75, 0.75, 0.75, -0.75
## end
#409, 3:
0.7
## end
#411, 3:
1.5
## end
#414, 3:
多边形
## end
#417, 9:
0.0, -7.0
## end
#423, 10:
0.0, -7.35
## end
#425, 2:
居中
## end
#429, 11:
SetNewValue
## end
#430, 22:
-0.0, -0.0, -0.7, -0.7
## end
#432, 24:
-0.75, 0.75, 0.75, -0.75
## end
#434, 3:
0.7
## end
#436, 3:
1.5
## end
#439, 3:
多边形
## end
#442, 9:
0.0, -8.0
## end
#448, 10:
0.0, -8.35
## end
#450, 2:
居中
## end
#454, 6:
BeamOn
## end
#455, 22:
-0.0, -0.0, -0.7, -0.7
## end
#457, 24:
-0.75, 0.75, 0.75, -0.75
## end
#459, 3:
0.7
## end
#461, 3:
1.5
## end
#464, 3:
多边形
## end
#465, 24:
-0.7, -0.85, -0.85, -1.0
## end
#467, 18:
0.0, 0.0, 0.0, 0.0
## end
#470, 2:
曲线
## end
#473, 12:
-8.85, -8.85
## end
#475, 8:
0.0, 0.0
## end
#478, 2:
曲线
## end
#481, 24:
-1.7, -1.85, -1.85, -2.0
## end
#483, 18:
0.0, 0.0, 0.0, 0.0
## end
#486, 2:
曲线
## end
#489, 10:
-2.7, -3.0
## end
#491, 8:
0.0, 0.0
## end
#494, 2:
折线
## end
#497, 12:
-8.85, -8.85
## end
#499, 8:
0.0, 0.0
## end
#502, 2:
曲线
## end
#505, 24:
-3.7, -3.85, -3.85, -4.0
## end
#507, 18:
0.0, 0.0, 0.0, 0.0
## end
#510, 2:
曲线
## end
#513, 10:
-4.7, -5.0
## end
#515, 8:
0.0, 0.0
## end
#518, 2:
折线
## end
#521, 18:
-8.85, -8.85, -8.7
## end
#523, 13:
0.0, 0.0, 0.0
## end
#526, 2:
曲线
## end
#529, 24:
-5.7, -5.85, -5.85, -6.0
## end
#531, 18:
0.0, 0.0, 0.0, 0.0
## end
#534, 2:
曲线
## end
#537, 10:
-6.7, -7.0
## end
#539, 8:
0.0, 0.0
## end
#542, 2:
折线
## end
#545, 10:
-7.7, -8.0
## end
#547, 8:
0.0, 0.0
## end
#550, 2:
折线
## end
#554, 188:

结构描述:...
+[新建阅读窗口](,结构描述)

结构::
+[删除结构](,结构)->+[分析结构图结构](结构描述,结构)->+[显示星图](,结构)

流程图:...
+[删除结构](,流程图)->+[召唤星辰]"一般结构转结构文字"(结构,流程图)
+[删除结构](,流程图)->+[召唤星辰]"一般结构转流程图"(结构,流程图)
+[H函数](,流程图)



## end
#556, 328:
G4RunManager->BeamOn->DoEventLoop->ProcessOneEvent{
    G4EventManager->ProcessOneEvent->DoProcessing{
        G4TrackingManager->ProcessOneTrack{
            G4ProcessManager->StartTracking{
                G4SteppingManager->StartTracking
            },
            G4SteppingManager->Stepping
        }
    },GetTrackStatus
}
## end
#558, 1200:
name#0"G4RunManager"(,)
名字#1""(,name#0)
name#2"BeamOn"(,)
名字#3""(,name#2)
name#4"DoEventLoop"(,)
名字#5""(,name#4)
name#6"ProcessOneEvent"(,)
name#7"G4EventManager"(,)
名字#8""(,name#7)
name#9"ProcessOneEvent"(,)
名字#10""(,name#9)
name#11"DoProcessing"(,)
name#12"G4TrackingManager"(,)
名字#13""(,name#12)
name#14"ProcessOneTrack"(,)
name#15"G4ProcessManager"(,)
名字#16""(,name#15)
name#17"StartTracking"(,)
name#18"G4SteppingManager"(,)
名字#19""(,name#18)
name#20"StartTracking"(,)
名字#21""(,name#20)
节点#22""(节点#23,名字#21)
节点#23""(,名字#19)
行#24""(名字#26,节点#23)
子集#25""(,行#24)
名字#26""(,name#17)
节点#27""(节点#28,名字#26)
节点#28""(,名字#16)
name#29"G4SteppingManager"(,)
名字#30""(,name#29)
name#31"Stepping"(,)
名字#32""(,name#31)
节点#33""(节点#34,名字#32)
节点#34""(,名字#30)
行#35""(行#36,节点#34)
行#36""(名字#38,节点#28)
子集#37""(,行#36)
名字#38""(,name#14)
节点#39""(节点#40,名字#38)
节点#40""(,名字#13)
行#41""(名字#43,节点#40)
子集#42""(,行#41)
名字#43""(,name#11)
节点#44""(节点#45,名字#43)
节点#45""(节点#46,名字#10)
节点#46""(,名字#8)
name#47"GetTrackStatus"(,)
名字#48""(,name#47)
节点#49""(,名字#48)
行#50""(行#51,节点#49)
行#51""(名字#53,节点#46)
子集#52""(,行#51)
名字#53""(,name#6)
节点#54""(节点#55,名字#53)
节点#55""(节点#56,名字#5)
节点#56""(节点#57,名字#3)
节点#57""(,名字#1)
行#58""(,节点#57)
起点#59""(,行#58)

## end
#560, 6976:

<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 788.7096774193549" style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="300,0 386,0 386,39 300,39 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="300,56 386,56 386,96 300,96 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="300,113 386,113 386,153 300,153 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="300,170 386,170 386,210 300,210 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="300,227 386,227 386,267 300,267 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,284 813,284 813,324 727,324 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="243,284 329,284 329,324 243,324 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="243,341 329,341 329,381 243,381 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="243,398 329,398 329,438 243,438 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="243,455 329,455 329,495 243,495 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="243,512 329,512 329,552 243,552 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="613,569 699,569 699,609 613,609 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="613,626 699,626 699,666 613,666 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="186,569 272,569 272,609 186,609 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="186,626 272,626 272,666 186,666 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="186,683 272,683 272,723 186,723 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="186,740 272,740 272,780 186,780 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,39 343,48 343,48 343,56 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="343,96 343,113 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="343,153 343,170 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="343,210 343,227 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,788 770,788 770,324 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,267 343,276 770,276 770,284 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,788 286,788 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,267 343,276 286,276 286,284 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="286,324 286,341 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="286,381 286,398 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,788 286,788 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,438 286,447 286,447 286,455 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="286,495 286,512 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,788 656,788 656,666 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,552 286,560 656,560 656,569 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,788 229,788 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="286,552 286,560 229,560 229,569 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,609 656,626 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="229,609 229,626 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="229,788 229,788 229,780 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="229,666 229,674 229,674 229,683 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="229,723 229,740 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<text dominant-baseline="middle" text-anchor="middle" x="229.503901" y="760.236404" font-size="15">StartTracking</text>
<text dominant-baseline="middle" text-anchor="middle" x="229.503901" y="703.289857" font-size="15">G4SteppingManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="229.503901" y="646.343310" font-size="15">StartTracking</text>
<text dominant-baseline="middle" text-anchor="middle" x="229.503901" y="589.396763" font-size="15">G4ProcessManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="656.603005" y="646.343310" font-size="15">Stepping</text>
<text dominant-baseline="middle" text-anchor="middle" x="656.603005" y="589.396763" font-size="15">G4SteppingManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="286.450448" y="532.450215" font-size="15">ProcessOneTrack</text>
<text dominant-baseline="middle" text-anchor="middle" x="286.450448" y="475.503668" font-size="15">G4TrackingManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="286.450448" y="418.557121" font-size="15">DoProcessing</text>
<text dominant-baseline="middle" text-anchor="middle" x="286.450448" y="361.610574" font-size="15">ProcessOneEvent</text>
<text dominant-baseline="middle" text-anchor="middle" x="286.450448" y="304.664027" font-size="15">G4EventManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="770.496099" y="304.664027" font-size="15">GetTrackStatus</text>
<text dominant-baseline="middle" text-anchor="middle" x="343.396995" y="247.717480" font-size="15">ProcessOneEvent</text>
<text dominant-baseline="middle" text-anchor="middle" x="343.396995" y="190.770933" font-size="15">DoEventLoop</text>
<text dominant-baseline="middle" text-anchor="middle" x="343.396995" y="133.824386" font-size="15">BeamOn</text>
<text dominant-baseline="middle" text-anchor="middle" x="343.396995" y="76.877839" font-size="15">G4RunManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="343.396995" y="19.931291" font-size="15">起点</text>

</svg>


## end
#563, 2:
起点
## end
#565, 20:
19.0, 13.0, 2.0, 1.0
## end
#573, 8:
0.0, 0.0
## end
#579, 10:
0.0, -0.35
## end
#581, 2:
居中
## end
#585, 2:
起点
## end
#586, 22:
-0.0, -0.0, -0.7, -0.7
## end
#588, 24:
-0.75, 0.75, 0.75, -0.75
## end
#590, 3:
0.7
## end
#592, 3:
1.5
## end
#595, 3:
多边形
## end
#598, 9:
0.0, -1.0
## end
#604, 10:
0.0, -1.35
## end
#606, 2:
居中
## end
#610, 12:
G4RunManager
## end
#611, 22:
-0.0, -0.0, -0.7, -0.7
## end
#613, 24:
-0.75, 0.75, 0.75, -0.75
## end
#615, 3:
0.7
## end
#617, 3:
1.5
## end
#620, 3:
多边形
## end
#623, 9:
0.0, -2.0
## end
#629, 10:
0.0, -2.35
## end
#631, 2:
居中
## end
#635, 6:
BeamOn
## end
#636, 22:
-0.0, -0.0, -0.7, -0.7
## end
#638, 24:
-0.75, 0.75, 0.75, -0.75
## end
#640, 3:
0.7
## end
#642, 3:
1.5
## end
#645, 3:
多边形
## end
#648, 9:
0.0, -3.0
## end
#654, 10:
0.0, -3.35
## end
#656, 2:
居中
## end
#660, 11:
DoEventLoop
## end
#661, 22:
-0.0, -0.0, -0.7, -0.7
## end
#663, 24:
-0.75, 0.75, 0.75, -0.75
## end
#665, 3:
0.7
## end
#667, 3:
1.5
## end
#670, 3:
多边形
## end
#673, 9:
0.0, -4.0
## end
#679, 10:
0.0, -4.35
## end
#681, 2:
居中
## end
#685, 15:
ProcessOneEvent
## end
#686, 22:
-0.0, -0.0, -0.7, -0.7
## end
#688, 24:
-0.75, 0.75, 0.75, -0.75
## end
#690, 3:
0.7
## end
#692, 3:
1.5
## end
#695, 3:
多边形
## end
#698, 9:
7.5, -5.0
## end
#704, 10:
7.5, -5.35
## end
#706, 2:
居中
## end
#710, 14:
GetTrackStatus
## end
#711, 22:
-0.0, -0.0, -0.7, -0.7
## end
#713, 24:
-0.75, 0.75, 0.75, -0.75
## end
#715, 3:
0.7
## end
#717, 3:
1.5
## end
#720, 3:
多边形
## end
#723, 10:
-1.0, -5.0
## end
#729, 11:
-1.0, -5.35
## end
#731, 2:
居中
## end
#735, 14:
G4EventManager
## end
#736, 22:
-0.0, -0.0, -0.7, -0.7
## end
#738, 24:
-0.75, 0.75, 0.75, -0.75
## end
#740, 3:
0.7
## end
#742, 3:
1.5
## end
#745, 3:
多边形
## end
#748, 10:
-1.0, -6.0
## end
#754, 11:
-1.0, -6.35
## end
#756, 2:
居中
## end
#760, 15:
ProcessOneEvent
## end
#761, 22:
-0.0, -0.0, -0.7, -0.7
## end
#763, 24:
-0.75, 0.75, 0.75, -0.75
## end
#765, 3:
0.7
## end
#767, 3:
1.5
## end
#770, 3:
多边形
## end
#773, 10:
-1.0, -7.0
## end
#779, 11:
-1.0, -7.35
## end
#781, 2:
居中
## end
#785, 12:
DoProcessing
## end
#786, 22:
-0.0, -0.0, -0.7, -0.7
## end
#788, 24:
-0.75, 0.75, 0.75, -0.75
## end
#790, 3:
0.7
## end
#792, 3:
1.5
## end
#795, 3:
多边形
## end
#798, 10:
-1.0, -8.0
## end
#804, 11:
-1.0, -8.35
## end
#806, 2:
居中
## end
#810, 17:
G4TrackingManager
## end
#811, 22:
-0.0, -0.0, -0.7, -0.7
## end
#813, 24:
-0.75, 0.75, 0.75, -0.75
## end
#815, 3:
0.7
## end
#817, 3:
1.5
## end
#820, 3:
多边形
## end
#823, 10:
-1.0, -9.0
## end
#829, 11:
-1.0, -9.35
## end
#831, 2:
居中
## end
#835, 15:
ProcessOneTrack
## end
#836, 22:
-0.0, -0.0, -0.7, -0.7
## end
#838, 24:
-0.75, 0.75, 0.75, -0.75
## end
#840, 3:
0.7
## end
#842, 3:
1.5
## end
#845, 3:
多边形
## end
#848, 10:
5.5, -10.0
## end
#854, 11:
5.5, -10.35
## end
#856, 2:
居中
## end
#860, 17:
G4SteppingManager
## end
#861, 22:
-0.0, -0.0, -0.7, -0.7
## end
#863, 24:
-0.75, 0.75, 0.75, -0.75
## end
#865, 3:
0.7
## end
#867, 3:
1.5
## end
#870, 3:
多边形
## end
#873, 10:
5.5, -11.0
## end
#879, 11:
5.5, -11.35
## end
#881, 2:
居中
## end
#885, 8:
Stepping
## end
#886, 22:
-0.0, -0.0, -0.7, -0.7
## end
#888, 24:
-0.75, 0.75, 0.75, -0.75
## end
#890, 3:
0.7
## end
#892, 3:
1.5
## end
#895, 3:
多边形
## end
#898, 11:
-2.0, -10.0
## end
#904, 12:
-2.0, -10.35
## end
#906, 2:
居中
## end
#910, 16:
G4ProcessManager
## end
#911, 22:
-0.0, -0.0, -0.7, -0.7
## end
#913, 24:
-0.75, 0.75, 0.75, -0.75
## end
#915, 3:
0.7
## end
#917, 3:
1.5
## end
#920, 3:
多边形
## end
#923, 11:
-2.0, -11.0
## end
#929, 12:
-2.0, -11.35
## end
#931, 2:
居中
## end
#935, 13:
StartTracking
## end
#936, 22:
-0.0, -0.0, -0.7, -0.7
## end
#938, 24:
-0.75, 0.75, 0.75, -0.75
## end
#940, 3:
0.7
## end
#942, 3:
1.5
## end
#945, 3:
多边形
## end
#948, 11:
-2.0, -12.0
## end
#954, 12:
-2.0, -12.35
## end
#956, 2:
居中
## end
#960, 17:
G4SteppingManager
## end
#961, 22:
-0.0, -0.0, -0.7, -0.7
## end
#963, 24:
-0.75, 0.75, 0.75, -0.75
## end
#965, 3:
0.7
## end
#967, 3:
1.5
## end
#970, 3:
多边形
## end
#973, 11:
-2.0, -13.0
## end
#979, 12:
-2.0, -13.35
## end
#981, 2:
居中
## end
#985, 13:
StartTracking
## end
#986, 22:
-0.0, -0.0, -0.7, -0.7
## end
#988, 24:
-0.75, 0.75, 0.75, -0.75
## end
#990, 3:
0.7
## end
#992, 3:
1.5
## end
#995, 3:
多边形
## end
#996, 24:
-0.7, -0.85, -0.85, -1.0
## end
#998, 18:
0.0, 0.0, 0.0, 0.0
## end
#1001, 2:
曲线
## end
#1004, 10:
-1.7, -2.0
## end
#1006, 8:
0.0, 0.0
## end
#1009, 2:
折线
## end
#1012, 10:
-2.7, -3.0
## end
#1014, 8:
0.0, 0.0
## end
#1017, 2:
折线
## end
#1020, 10:
-3.7, -4.0
## end
#1022, 8:
0.0, 0.0
## end
#1025, 2:
折线
## end
#1028, 20:
-13.85, -13.85, -5.7
## end
#1030, 13:
0.0, 7.5, 7.5
## end
#1033, 2:
曲线
## end
#1036, 24:
-4.7, -4.85, -4.85, -5.0
## end
#1038, 18:
0.0, 0.0, 7.5, 7.5
## end
#1041, 2:
曲线
## end
#1044, 14:
-13.85, -13.85
## end
#1046, 9:
0.0, -1.0
## end
#1049, 2:
曲线
## end
#1052, 24:
-4.7, -4.85, -4.85, -5.0
## end
#1054, 20:
0.0, 0.0, -1.0, -1.0
## end
#1057, 2:
曲线
## end
#1060, 10:
-5.7, -6.0
## end
#1062, 10:
-1.0, -1.0
## end
#1065, 2:
折线
## end
#1068, 10:
-6.7, -7.0
## end
#1070, 10:
-1.0, -1.0
## end
#1073, 2:
折线
## end
#1076, 14:
-13.85, -13.85
## end
#1078, 10:
-1.0, -1.0
## end
#1081, 2:
曲线
## end
#1084, 24:
-7.7, -7.85, -7.85, -8.0
## end
#1086, 22:
-1.0, -1.0, -1.0, -1.0
## end
#1089, 2:
曲线
## end
#1092, 10:
-8.7, -9.0
## end
#1094, 10:
-1.0, -1.0
## end
#1097, 2:
折线
## end
#1100, 21:
-13.85, -13.85, -11.7
## end
#1102, 14:
-1.0, 5.5, 5.5
## end
#1105, 2:
曲线
## end
#1108, 25:
-9.7, -9.85, -9.85, -10.0
## end
#1110, 20:
-1.0, -1.0, 5.5, 5.5
## end
#1113, 2:
曲线
## end
#1116, 14:
-13.85, -13.85
## end
#1118, 10:
-1.0, -2.0
## end
#1121, 2:
曲线
## end
#1124, 25:
-9.7, -9.85, -9.85, -10.0
## end
#1126, 22:
-1.0, -1.0, -2.0, -2.0
## end
#1129, 2:
曲线
## end
#1132, 12:
-10.7, -11.0
## end
#1134, 8:
5.5, 5.5
## end
#1137, 2:
折线
## end
#1140, 12:
-10.7, -11.0
## end
#1142, 10:
-2.0, -2.0
## end
#1145, 2:
折线
## end
#1148, 21:
-13.85, -13.85, -13.7
## end
#1150, 16:
-2.0, -2.0, -2.0
## end
#1153, 2:
曲线
## end
#1156, 28:
-11.7, -11.85, -11.85, -12.0
## end
#1158, 22:
-2.0, -2.0, -2.0, -2.0
## end
#1161, 2:
曲线
## end
#1164, 12:
-12.7, -13.0
## end
#1166, 10:
-2.0, -2.0
## end
#1169, 2:
折线
## end
#1173, 188:

结构描述:...
+[新建阅读窗口](,结构描述)

结构::
+[删除结构](,结构)->+[分析结构图结构](结构描述,结构)->+[显示星图](,结构)

流程图:...
+[删除结构](,流程图)->+[召唤星辰]"一般结构转结构文字"(结构,流程图)
+[删除结构](,流程图)->+[召唤星辰]"一般结构转流程图"(结构,流程图)
+[H函数](,流程图)



## end
#1175, 1099:

G4SteppingManager->Stepping->DefinePhysicalStepLength{
    G4Transportation(G4VProcess)->PostStepGetPhysicalInteractionLength,
    G4Transportation(G4VProcess)->AlongStepGetPhysicalInteractionLength{
        G4Navigator->ComputeStep,
        G4Track->GetVolume,
        G4PropagatorInField->FindAndSetFieldManager,
        G4PropagatorInField->GetCurrentEquationOfMotion,
        G4PropagatorInField->ComputeStep{
            G4ChordFinder->G4VIntegrationDriver->OnComputeStep,
            G4ChordFinder->G4VIntegrationDriver->AdvanceChordLimited{
                G4ChorFinderDelegate->AdvanceChordLimitedImpl{
                    G4MagIntegratorDriver->AccurateAdvance->OneGoodStep{
                        G4MagIntegratorStepper->G4CashKarpRKF45->Stepper
                    }
                }
            }
        }->IntersectChord{
            G4VIntersectionLocator->IntersectChord{
                G4Navigator->ComputeStep
            }
        }
    }->InvokeAlongStepDoItProcs{
        G4Transportation(G4VProcess)->PostDoIt,
        G4Transportation(G4VProcess)->AlongStepDoIt
    }
}



## end
#1177, 3493:
name#0"G4SteppingManager"(,)
名字#1""(,name#0)
name#2"Stepping"(,)
名字#3""(,name#2)
name#4"DefinePhysicalStepLength"(,)
name#5"G4Transportation"(,)
text#6"G4VProcess"(名字#8,)
注释#7""(,text#6)
名字#8""(,name#5)
name#9"PostStepGetPhysicalInteractionLength"(,)
名字#10""(,name#9)
节点#11""(节点#12,名字#10)
节点#12""(,名字#8)
name#13"G4Transportation"(,)
text#14"G4VProcess"(名字#16,)
注释#15""(,text#14)
名字#16""(,name#13)
name#17"AlongStepGetPhysicalInteractionLength"(,)
name#18"G4Navigator"(,)
名字#19""(,name#18)
name#20"ComputeStep"(,)
名字#21""(,name#20)
节点#22""(节点#23,名字#21)
节点#23""(,名字#19)
name#24"G4Track"(,)
名字#25""(,name#24)
name#26"GetVolume"(,)
名字#27""(,name#26)
节点#28""(节点#29,名字#27)
节点#29""(,名字#25)
name#30"G4PropagatorInField"(,)
名字#31""(,name#30)
name#32"FindAndSetFieldManager"(,)
名字#33""(,name#32)
节点#34""(节点#35,名字#33)
节点#35""(,名字#31)
name#36"G4PropagatorInField"(,)
名字#37""(,name#36)
name#38"GetCurrentEquationOfMotion"(,)
名字#39""(,name#38)
节点#40""(节点#41,名字#39)
节点#41""(,名字#37)
name#42"G4PropagatorInField"(,)
名字#43""(,name#42)
name#44"ComputeStep"(,)
name#45"G4ChordFinder"(,)
名字#46""(,name#45)
name#47"G4VIntegrationDriver"(,)
名字#48""(,name#47)
name#49"OnComputeStep"(,)
名字#50""(,name#49)
节点#51""(节点#52,名字#50)
节点#52""(节点#53,名字#48)
节点#53""(,名字#46)
name#54"G4ChordFinder"(,)
名字#55""(,name#54)
name#56"G4VIntegrationDriver"(,)
名字#57""(,name#56)
name#58"AdvanceChordLimited"(,)
name#59"G4ChorFinderDelegate"(,)
名字#60""(,name#59)
name#61"AdvanceChordLimitedImpl"(,)
name#62"G4MagIntegratorDriver"(,)
名字#63""(,name#62)
name#64"AccurateAdvance"(,)
名字#65""(,name#64)
name#66"OneGoodStep"(,)
name#67"G4MagIntegratorStepper"(,)
名字#68""(,name#67)
name#69"G4CashKarpRKF45"(,)
名字#70""(,name#69)
name#71"Stepper"(,)
名字#72""(,name#71)
节点#73""(节点#74,名字#72)
节点#74""(节点#75,名字#70)
节点#75""(,名字#68)
行#76""(名字#78,节点#75)
子集#77""(,行#76)
名字#78""(,name#66)
节点#79""(节点#80,名字#78)
节点#80""(节点#81,名字#65)
节点#81""(,名字#63)
行#82""(名字#84,节点#81)
子集#83""(,行#82)
名字#84""(,name#61)
节点#85""(节点#86,名字#84)
节点#86""(,名字#60)
行#87""(名字#89,节点#86)
子集#88""(,行#87)
名字#89""(,name#58)
节点#90""(节点#91,名字#89)
节点#91""(节点#92,名字#57)
节点#92""(,名字#55)
行#93""(行#94,节点#92)
行#94""(名字#96,节点#53)
子集#95""(,行#94)
名字#96""(,name#44)
name#97"IntersectChord"(,)
name#98"G4VIntersectionLocator"(,)
名字#99""(,name#98)
name#100"IntersectChord"(,)
name#101"G4Navigator"(,)
名字#102""(,name#101)
name#103"ComputeStep"(,)
名字#104""(,name#103)
节点#105""(节点#106,名字#104)
节点#106""(,名字#102)
行#107""(名字#109,节点#106)
子集#108""(,行#107)
名字#109""(,name#100)
节点#110""(节点#111,名字#109)
节点#111""(,名字#99)
行#112""(名字#114,节点#111)
子集#113""(,行#112)
名字#114""(,name#97)
节点#115""(节点#116,名字#114)
节点#116""(节点#117,名字#96)
节点#117""(,名字#43)
行#118""(行#119,节点#117)
行#119""(行#120,节点#41)
行#120""(行#121,节点#35)
行#121""(行#122,节点#29)
行#122""(名字#124,节点#23)
子集#123""(,行#122)
名字#124""(,name#17)
name#125"InvokeAlongStepDoItProcs"(,)
name#126"G4Transportation"(,)
text#127"G4VProcess"(名字#129,)
注释#128""(,text#127)
名字#129""(,name#126)
name#130"PostDoIt"(,)
名字#131""(,name#130)
节点#132""(节点#133,名字#131)
节点#133""(,名字#129)
name#134"G4Transportation"(,)
text#135"G4VProcess"(名字#137,)
注释#136""(,text#135)
名字#137""(,name#134)
name#138"AlongStepDoIt"(,)
名字#139""(,name#138)
节点#140""(节点#141,名字#139)
节点#141""(,名字#137)
行#142""(行#143,节点#141)
行#143""(名字#145,节点#133)
子集#144""(,行#143)
名字#145""(,name#125)
节点#146""(节点#147,名字#145)
节点#147""(节点#148,名字#124)
节点#148""(,名字#16)
行#149""(行#150,节点#148)
行#150""(名字#152,节点#12)
子集#151""(,行#150)
名字#152""(,name#4)
节点#153""(节点#154,名字#152)
节点#154""(节点#155,名字#3)
节点#155""(,名字#1)
行#156""(,节点#155)
起点#157""(,行#156)

## end
#1179, 17335:

<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 761.9581211092247" style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="308,0 351,0 351,19 308,19 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="308,28 351,28 351,48 308,48 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="308,56 351,56 351,76 308,76 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="308,85 351,85 351,104 308,104 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="521,113 563,113 563,133 521,133 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="521,141 563,141 563,161 521,161 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="521,681 563,681 563,700 521,700 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="549,709 592,709 592,729 549,729 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="549,737 592,737 592,757 549,757 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="492,709 535,709 535,729 492,729 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="492,737 535,737 535,757 492,757 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,170 719,170 719,190 677,190 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,198 719,198 719,218 677,218 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,539 719,539 719,559 677,559 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,567 719,567 719,587 677,587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,595 719,595 719,615 677,615 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,624 719,624 719,644 677,644 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="677,652 719,652 719,672 677,672 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,227 748,227 748,246 705,246 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,255 748,255 748,275 705,275 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,283 748,283 748,303 705,303 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,312 748,312 748,332 705,332 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,340 748,340 748,360 705,360 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,368 748,368 748,388 705,388 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,397 748,397 748,417 705,417 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,425 748,425 748,445 705,445 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,454 748,454 748,473 705,473 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,482 748,482 748,502 705,502 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="705,510 748,510 748,530 705,530 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="648,227 691,227 691,246 648,246 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="648,255 691,255 691,275 648,275 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="648,283 691,283 691,303 648,303 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="578,170 620,170 620,190 578,190 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="563,198 634,198 634,218 563,218 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="507,170 549,170 549,190 507,190 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="507,198 549,198 549,218 507,218 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="450,170 492,170 492,190 450,190 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="450,198 492,198 492,218 450,218 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="393,170 436,170 436,190 393,190 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="393,198 436,198 436,218 393,218 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="280,113 322,113 322,133 280,133 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="251,141 351,141 351,161 251,161 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="329,19 329,24 329,24 329,28 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="329,48 329,56 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="329,76 329,85 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="329,761 542,761 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="329,104 329,109 542,109 542,113 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="329,761 301,761 301,161 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="329,104 329,109 301,109 301,113 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="542,133 542,141 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,681 542,676 698,676 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,161 542,166 698,166 698,170 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,681 542,676 599,676 599,218 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,161 542,166 599,166 599,170 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,681 542,676 528,676 528,218 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,161 542,166 528,166 528,170 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,681 542,676 471,676 471,218 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,161 542,166 471,166 471,170 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,681 542,676 414,676 414,218 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,161 542,166 414,166 414,170 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,761 570,761 570,757 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,700 542,705 570,705 570,709 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,761 514,761 514,757 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="542,700 542,705 514,705 514,709 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="570,729 570,737 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="514,729 514,737 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="698,190 698,198 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,539 698,534 727,534 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,218 698,222 727,222 727,227 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,539 698,534 670,534 670,303 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,218 698,222 670,222 670,227 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,676 698,676 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,559 698,563 698,563 698,567 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="698,587 698,595 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,676 698,676 698,672 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="698,615 698,620 698,620 698,624 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="698,644 698,652 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,246 727,255 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,275 727,283 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,534 727,534 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,303 727,307 727,307 727,312 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,332 727,340 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,534 727,534 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,360 727,364 727,364 727,368 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,388 727,397 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,417 727,425 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,534 727,534 727,530 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="727,445 727,449 727,449 727,454 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,473 727,482 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="727,502 727,510 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="670,246 670,255 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="670,275 670,283 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="599,190 599,198 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="528,190 528,198 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="471,190 471,198 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="414,190 414,198 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="301,133 301,141 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<text dominant-baseline="middle" text-anchor="middle" x="301.351700" y="151.824058" font-size="15">PostStepGetPhysicalInteractionLength</text>
<text dominant-baseline="middle" text-anchor="middle" x="301.351700" y="123.445729" font-size="15">G4Transportation</text>
<text dominant-baseline="middle" text-anchor="middle" x="414.865014" y="208.580715" font-size="15">ComputeStep</text>
<text dominant-baseline="middle" text-anchor="middle" x="414.865014" y="180.202386" font-size="15">G4Navigator</text>
<text dominant-baseline="middle" text-anchor="middle" x="471.621671" y="208.580715" font-size="15">GetVolume</text>
<text dominant-baseline="middle" text-anchor="middle" x="471.621671" y="180.202386" font-size="15">G4Track</text>
<text dominant-baseline="middle" text-anchor="middle" x="528.378329" y="208.580715" font-size="15">FindAndSetFieldManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="528.378329" y="180.202386" font-size="15">G4PropagatorInField</text>
<text dominant-baseline="middle" text-anchor="middle" x="599.324150" y="208.580715" font-size="15">GetCurrentEquationOfMotion</text>
<text dominant-baseline="middle" text-anchor="middle" x="599.324150" y="180.202386" font-size="15">G4PropagatorInField</text>
<text dominant-baseline="middle" text-anchor="middle" x="670.269971" y="293.715700" font-size="15">OnComputeStep</text>
<text dominant-baseline="middle" text-anchor="middle" x="670.269971" y="265.337372" font-size="15">G4VIntegrationDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="670.269971" y="236.959043" font-size="15">G4ChordFinder</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="520.742329" font-size="15">Stepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="492.364000" font-size="15">G4CashKarpRKF45</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="463.985672" font-size="15">G4MagIntegratorStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="435.607343" font-size="15">OneGoodStep</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="407.229014" font-size="15">AccurateAdvance</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="378.850686" font-size="15">G4MagIntegratorDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="350.472357" font-size="15">AdvanceChordLimitedImpl</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="322.094029" font-size="15">G4ChorFinderDelegate</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="293.715700" font-size="15">AdvanceChordLimited</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="265.337372" font-size="15">G4VIntegrationDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="727.026628" y="236.959043" font-size="15">G4ChordFinder</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="662.633971" font-size="15">ComputeStep</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="634.255643" font-size="15">G4Navigator</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="605.877314" font-size="15">IntersectChord</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="577.498986" font-size="15">G4VIntersectionLocator</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="549.120657" font-size="15">IntersectChord</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="208.580715" font-size="15">ComputeStep</text>
<text dominant-baseline="middle" text-anchor="middle" x="698.648300" y="180.202386" font-size="15">G4PropagatorInField</text>
<text dominant-baseline="middle" text-anchor="middle" x="514.189164" y="747.768957" font-size="15">PostDoIt</text>
<text dominant-baseline="middle" text-anchor="middle" x="514.189164" y="719.390628" font-size="15">G4Transportation</text>
<text dominant-baseline="middle" text-anchor="middle" x="570.945821" y="747.768957" font-size="15">AlongStepDoIt</text>
<text dominant-baseline="middle" text-anchor="middle" x="570.945821" y="719.390628" font-size="15">G4Transportation</text>
<text dominant-baseline="middle" text-anchor="middle" x="542.567493" y="691.012300" font-size="15">InvokeAlongStepDoItProcs</text>
<text dominant-baseline="middle" text-anchor="middle" x="542.567493" y="151.824058" font-size="15">AlongStepGetPhysicalInteractionLength</text>
<text dominant-baseline="middle" text-anchor="middle" x="542.567493" y="123.445729" font-size="15">G4Transportation</text>
<text dominant-baseline="middle" text-anchor="middle" x="329.730029" y="95.067401" font-size="15">DefinePhysicalStepLength</text>
<text dominant-baseline="middle" text-anchor="middle" x="329.730029" y="66.689072" font-size="15">Stepping</text>
<text dominant-baseline="middle" text-anchor="middle" x="329.730029" y="38.310744" font-size="15">G4SteppingManager</text>
<text dominant-baseline="middle" text-anchor="middle" x="329.730029" y="9.932415" font-size="15">起点</text>

</svg>


## end
#1182, 2:
起点
## end
#1184, 20:
19.0, 26.0, 2.0, 1.0
## end
#1192, 8:
0.0, 0.0
## end
#1198, 10:
0.0, -0.35
## end
#1200, 2:
居中
## end
#1204, 2:
起点
## end
#1205, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1207, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1209, 3:
0.7
## end
#1211, 3:
1.5
## end
#1214, 3:
多边形
## end
#1217, 9:
0.0, -1.0
## end
#1223, 10:
0.0, -1.35
## end
#1225, 2:
居中
## end
#1229, 17:
G4SteppingManager
## end
#1230, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1232, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1234, 3:
0.7
## end
#1236, 3:
1.5
## end
#1239, 3:
多边形
## end
#1242, 9:
0.0, -2.0
## end
#1248, 10:
0.0, -2.35
## end
#1250, 2:
居中
## end
#1254, 8:
Stepping
## end
#1255, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1257, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1259, 3:
0.7
## end
#1261, 3:
1.5
## end
#1264, 3:
多边形
## end
#1267, 9:
0.0, -3.0
## end
#1273, 10:
0.0, -3.35
## end
#1275, 2:
居中
## end
#1279, 24:
DefinePhysicalStepLength
## end
#1280, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1282, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1284, 3:
0.7
## end
#1286, 3:
1.5
## end
#1289, 3:
多边形
## end
#1292, 9:
7.5, -4.0
## end
#1298, 10:
7.5, -4.35
## end
#1300, 2:
居中
## end
#1304, 16:
G4Transportation
## end
#1305, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1307, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1309, 3:
0.7
## end
#1311, 3:
1.5
## end
#1314, 3:
多边形
## end
#1317, 9:
7.5, -5.0
## end
#1323, 10:
7.5, -5.35
## end
#1325, 2:
居中
## end
#1329, 37:
AlongStepGetPhysicalInteractionLength
## end
#1330, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1332, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1334, 3:
0.7
## end
#1336, 3:
1.5
## end
#1339, 3:
多边形
## end
#1342, 10:
7.5, -24.0
## end
#1348, 11:
7.5, -24.35
## end
#1350, 2:
居中
## end
#1354, 24:
InvokeAlongStepDoItProcs
## end
#1355, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1357, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1359, 3:
0.7
## end
#1361, 3:
1.5
## end
#1364, 3:
多边形
## end
#1367, 10:
8.5, -25.0
## end
#1373, 11:
8.5, -25.35
## end
#1375, 2:
居中
## end
#1379, 16:
G4Transportation
## end
#1380, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1382, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1384, 3:
0.7
## end
#1386, 3:
1.5
## end
#1389, 3:
多边形
## end
#1392, 10:
8.5, -26.0
## end
#1398, 11:
8.5, -26.35
## end
#1400, 2:
居中
## end
#1404, 13:
AlongStepDoIt
## end
#1405, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1407, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1409, 3:
0.7
## end
#1411, 3:
1.5
## end
#1414, 3:
多边形
## end
#1417, 10:
6.5, -25.0
## end
#1423, 11:
6.5, -25.35
## end
#1425, 2:
居中
## end
#1429, 16:
G4Transportation
## end
#1430, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1432, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1434, 3:
0.7
## end
#1436, 3:
1.5
## end
#1439, 3:
多边形
## end
#1442, 10:
6.5, -26.0
## end
#1448, 11:
6.5, -26.35
## end
#1450, 2:
居中
## end
#1454, 8:
PostDoIt
## end
#1455, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1457, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1459, 3:
0.7
## end
#1461, 3:
1.5
## end
#1464, 3:
多边形
## end
#1467, 10:
13.0, -6.0
## end
#1473, 11:
13.0, -6.35
## end
#1475, 2:
居中
## end
#1479, 19:
G4PropagatorInField
## end
#1480, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1482, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1484, 3:
0.7
## end
#1486, 3:
1.5
## end
#1489, 3:
多边形
## end
#1492, 10:
13.0, -7.0
## end
#1498, 11:
13.0, -7.35
## end
#1500, 2:
居中
## end
#1504, 11:
ComputeStep
## end
#1505, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1507, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1509, 3:
0.7
## end
#1511, 3:
1.5
## end
#1514, 3:
多边形
## end
#1517, 11:
13.0, -19.0
## end
#1523, 12:
13.0, -19.35
## end
#1525, 2:
居中
## end
#1529, 14:
IntersectChord
## end
#1530, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1532, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1534, 3:
0.7
## end
#1536, 3:
1.5
## end
#1539, 3:
多边形
## end
#1542, 11:
13.0, -20.0
## end
#1548, 12:
13.0, -20.35
## end
#1550, 2:
居中
## end
#1554, 22:
G4VIntersectionLocator
## end
#1555, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1557, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1559, 3:
0.7
## end
#1561, 3:
1.5
## end
#1564, 3:
多边形
## end
#1567, 11:
13.0, -21.0
## end
#1573, 12:
13.0, -21.35
## end
#1575, 2:
居中
## end
#1579, 14:
IntersectChord
## end
#1580, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1582, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1584, 3:
0.7
## end
#1586, 3:
1.5
## end
#1589, 3:
多边形
## end
#1592, 11:
13.0, -22.0
## end
#1598, 12:
13.0, -22.35
## end
#1600, 2:
居中
## end
#1604, 11:
G4Navigator
## end
#1605, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1607, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1609, 3:
0.7
## end
#1611, 3:
1.5
## end
#1614, 3:
多边形
## end
#1617, 11:
13.0, -23.0
## end
#1623, 12:
13.0, -23.35
## end
#1625, 2:
居中
## end
#1629, 11:
ComputeStep
## end
#1630, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1632, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1634, 3:
0.7
## end
#1636, 3:
1.5
## end
#1639, 3:
多边形
## end
#1642, 10:
14.0, -8.0
## end
#1648, 11:
14.0, -8.35
## end
#1650, 2:
居中
## end
#1654, 13:
G4ChordFinder
## end
#1655, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1657, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1659, 3:
0.7
## end
#1661, 3:
1.5
## end
#1664, 3:
多边形
## end
#1667, 10:
14.0, -9.0
## end
#1673, 11:
14.0, -9.35
## end
#1675, 2:
居中
## end
#1679, 20:
G4VIntegrationDriver
## end
#1680, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1682, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1684, 3:
0.7
## end
#1686, 3:
1.5
## end
#1689, 3:
多边形
## end
#1692, 11:
14.0, -10.0
## end
#1698, 12:
14.0, -10.35
## end
#1700, 2:
居中
## end
#1704, 19:
AdvanceChordLimited
## end
#1705, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1707, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1709, 3:
0.7
## end
#1711, 3:
1.5
## end
#1714, 3:
多边形
## end
#1717, 11:
14.0, -11.0
## end
#1723, 12:
14.0, -11.35
## end
#1725, 2:
居中
## end
#1729, 20:
G4ChorFinderDelegate
## end
#1730, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1732, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1734, 3:
0.7
## end
#1736, 3:
1.5
## end
#1739, 3:
多边形
## end
#1742, 11:
14.0, -12.0
## end
#1748, 12:
14.0, -12.35
## end
#1750, 2:
居中
## end
#1754, 23:
AdvanceChordLimitedImpl
## end
#1755, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1757, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1759, 3:
0.7
## end
#1761, 3:
1.5
## end
#1764, 3:
多边形
## end
#1767, 11:
14.0, -13.0
## end
#1773, 12:
14.0, -13.35
## end
#1775, 2:
居中
## end
#1779, 21:
G4MagIntegratorDriver
## end
#1780, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1782, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1784, 3:
0.7
## end
#1786, 3:
1.5
## end
#1789, 3:
多边形
## end
#1792, 11:
14.0, -14.0
## end
#1798, 12:
14.0, -14.35
## end
#1800, 2:
居中
## end
#1804, 15:
AccurateAdvance
## end
#1805, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1807, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1809, 3:
0.7
## end
#1811, 3:
1.5
## end
#1814, 3:
多边形
## end
#1817, 11:
14.0, -15.0
## end
#1823, 12:
14.0, -15.35
## end
#1825, 2:
居中
## end
#1829, 11:
OneGoodStep
## end
#1830, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1832, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1834, 3:
0.7
## end
#1836, 3:
1.5
## end
#1839, 3:
多边形
## end
#1842, 11:
14.0, -16.0
## end
#1848, 12:
14.0, -16.35
## end
#1850, 2:
居中
## end
#1854, 22:
G4MagIntegratorStepper
## end
#1855, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1857, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1859, 3:
0.7
## end
#1861, 3:
1.5
## end
#1864, 3:
多边形
## end
#1867, 11:
14.0, -17.0
## end
#1873, 12:
14.0, -17.35
## end
#1875, 2:
居中
## end
#1879, 15:
G4CashKarpRKF45
## end
#1880, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1882, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1884, 3:
0.7
## end
#1886, 3:
1.5
## end
#1889, 3:
多边形
## end
#1892, 11:
14.0, -18.0
## end
#1898, 12:
14.0, -18.35
## end
#1900, 2:
居中
## end
#1904, 7:
Stepper
## end
#1905, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1907, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1909, 3:
0.7
## end
#1911, 3:
1.5
## end
#1914, 3:
多边形
## end
#1917, 10:
12.0, -8.0
## end
#1923, 11:
12.0, -8.35
## end
#1925, 2:
居中
## end
#1929, 13:
G4ChordFinder
## end
#1930, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1932, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1934, 3:
0.7
## end
#1936, 3:
1.5
## end
#1939, 3:
多边形
## end
#1942, 10:
12.0, -9.0
## end
#1948, 11:
12.0, -9.35
## end
#1950, 2:
居中
## end
#1954, 20:
G4VIntegrationDriver
## end
#1955, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1957, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1959, 3:
0.7
## end
#1961, 3:
1.5
## end
#1964, 3:
多边形
## end
#1967, 11:
12.0, -10.0
## end
#1973, 12:
12.0, -10.35
## end
#1975, 2:
居中
## end
#1979, 13:
OnComputeStep
## end
#1980, 22:
-0.0, -0.0, -0.7, -0.7
## end
#1982, 24:
-0.75, 0.75, 0.75, -0.75
## end
#1984, 3:
0.7
## end
#1986, 3:
1.5
## end
#1989, 3:
多边形
## end
#1992, 9:
9.5, -6.0
## end
#1998, 10:
9.5, -6.35
## end
#2000, 2:
居中
## end
#2004, 19:
G4PropagatorInField
## end
#2005, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2007, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2009, 3:
0.7
## end
#2011, 3:
1.5
## end
#2014, 3:
多边形
## end
#2017, 9:
9.5, -7.0
## end
#2023, 10:
9.5, -7.35
## end
#2025, 2:
居中
## end
#2029, 26:
GetCurrentEquationOfMotion
## end
#2030, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2032, 24:
-1.25, 1.25, 1.25, -1.25
## end
#2034, 3:
0.7
## end
#2036, 3:
2.5
## end
#2039, 3:
多边形
## end
#2042, 9:
7.0, -6.0
## end
#2048, 10:
7.0, -6.35
## end
#2050, 2:
居中
## end
#2054, 19:
G4PropagatorInField
## end
#2055, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2057, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2059, 3:
0.7
## end
#2061, 3:
1.5
## end
#2064, 3:
多边形
## end
#2067, 9:
7.0, -7.0
## end
#2073, 10:
7.0, -7.35
## end
#2075, 2:
居中
## end
#2079, 22:
FindAndSetFieldManager
## end
#2080, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2082, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2084, 3:
0.7
## end
#2086, 3:
1.5
## end
#2089, 3:
多边形
## end
#2092, 9:
5.0, -6.0
## end
#2098, 10:
5.0, -6.35
## end
#2100, 2:
居中
## end
#2104, 7:
G4Track
## end
#2105, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2107, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2109, 3:
0.7
## end
#2111, 3:
1.5
## end
#2114, 3:
多边形
## end
#2117, 9:
5.0, -7.0
## end
#2123, 10:
5.0, -7.35
## end
#2125, 2:
居中
## end
#2129, 9:
GetVolume
## end
#2130, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2132, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2134, 3:
0.7
## end
#2136, 3:
1.5
## end
#2139, 3:
多边形
## end
#2142, 9:
3.0, -6.0
## end
#2148, 10:
3.0, -6.35
## end
#2150, 2:
居中
## end
#2154, 11:
G4Navigator
## end
#2155, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2157, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2159, 3:
0.7
## end
#2161, 3:
1.5
## end
#2164, 3:
多边形
## end
#2167, 9:
3.0, -7.0
## end
#2173, 10:
3.0, -7.35
## end
#2175, 2:
居中
## end
#2179, 11:
ComputeStep
## end
#2180, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2182, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2184, 3:
0.7
## end
#2186, 3:
1.5
## end
#2189, 3:
多边形
## end
#2192, 10:
-1.0, -4.0
## end
#2198, 11:
-1.0, -4.35
## end
#2200, 2:
居中
## end
#2204, 16:
G4Transportation
## end
#2205, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2207, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2209, 3:
0.7
## end
#2211, 3:
1.5
## end
#2214, 3:
多边形
## end
#2217, 10:
-1.0, -5.0
## end
#2223, 11:
-1.0, -5.35
## end
#2225, 2:
居中
## end
#2229, 36:
PostStepGetPhysicalInteractionLength
## end
#2230, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2232, 24:
-1.75, 1.75, 1.75, -1.75
## end
#2234, 3:
0.7
## end
#2236, 3:
3.5
## end
#2239, 3:
多边形
## end
#2240, 24:
-0.7, -0.85, -0.85, -1.0
## end
#2242, 18:
0.0, 0.0, 0.0, 0.0
## end
#2245, 2:
曲线
## end
#2248, 10:
-1.7, -2.0
## end
#2250, 8:
0.0, 0.0
## end
#2253, 2:
折线
## end
#2256, 10:
-2.7, -3.0
## end
#2258, 8:
0.0, 0.0
## end
#2261, 2:
折线
## end
#2264, 14:
-26.85, -26.85
## end
#2266, 8:
0.0, 7.5
## end
#2269, 2:
曲线
## end
#2272, 24:
-3.7, -3.85, -3.85, -4.0
## end
#2274, 18:
0.0, 0.0, 7.5, 7.5
## end
#2277, 2:
曲线
## end
#2280, 20:
-26.85, -26.85, -5.7
## end
#2282, 15:
0.0, -1.0, -1.0
## end
#2285, 2:
曲线
## end
#2288, 24:
-3.7, -3.85, -3.85, -4.0
## end
#2290, 20:
0.0, 0.0, -1.0, -1.0
## end
#2293, 2:
曲线
## end
#2296, 10:
-4.7, -5.0
## end
#2298, 8:
7.5, 7.5
## end
#2301, 2:
折线
## end
#2304, 21:
-24.0, -23.85, -23.85
## end
#2306, 14:
7.5, 7.5, 13.0
## end
#2309, 2:
曲线
## end
#2312, 24:
-5.7, -5.85, -5.85, -6.0
## end
#2314, 20:
7.5, 7.5, 13.0, 13.0
## end
#2317, 2:
曲线
## end
#2320, 27:
-24.0, -23.85, -23.85, -7.7
## end
#2322, 18:
7.5, 7.5, 9.5, 9.5
## end
#2325, 2:
曲线
## end
#2328, 24:
-5.7, -5.85, -5.85, -6.0
## end
#2330, 18:
7.5, 7.5, 9.5, 9.5
## end
#2333, 2:
曲线
## end
#2336, 27:
-24.0, -23.85, -23.85, -7.7
## end
#2338, 18:
7.5, 7.5, 7.0, 7.0
## end
#2341, 2:
曲线
## end
#2344, 24:
-5.7, -5.85, -5.85, -6.0
## end
#2346, 18:
7.5, 7.5, 7.0, 7.0
## end
#2349, 2:
曲线
## end
#2352, 27:
-24.0, -23.85, -23.85, -7.7
## end
#2354, 18:
7.5, 7.5, 5.0, 5.0
## end
#2357, 2:
曲线
## end
#2360, 24:
-5.7, -5.85, -5.85, -6.0
## end
#2362, 18:
7.5, 7.5, 5.0, 5.0
## end
#2365, 2:
曲线
## end
#2368, 27:
-24.0, -23.85, -23.85, -7.7
## end
#2370, 18:
7.5, 7.5, 3.0, 3.0
## end
#2373, 2:
曲线
## end
#2376, 24:
-5.7, -5.85, -5.85, -6.0
## end
#2378, 18:
7.5, 7.5, 3.0, 3.0
## end
#2381, 2:
曲线
## end
#2384, 21:
-26.85, -26.85, -26.7
## end
#2386, 13:
7.5, 8.5, 8.5
## end
#2389, 2:
曲线
## end
#2392, 28:
-24.7, -24.85, -24.85, -25.0
## end
#2394, 18:
7.5, 7.5, 8.5, 8.5
## end
#2397, 2:
曲线
## end
#2400, 21:
-26.85, -26.85, -26.7
## end
#2402, 13:
7.5, 6.5, 6.5
## end
#2405, 2:
曲线
## end
#2408, 28:
-24.7, -24.85, -24.85, -25.0
## end
#2410, 18:
7.5, 7.5, 6.5, 6.5
## end
#2413, 2:
曲线
## end
#2416, 12:
-25.7, -26.0
## end
#2418, 8:
8.5, 8.5
## end
#2421, 2:
折线
## end
#2424, 12:
-25.7, -26.0
## end
#2426, 8:
6.5, 6.5
## end
#2429, 2:
折线
## end
#2432, 10:
-6.7, -7.0
## end
#2434, 10:
13.0, 13.0
## end
#2437, 2:
折线
## end
#2440, 21:
-19.0, -18.85, -18.85
## end
#2442, 16:
13.0, 13.0, 14.0
## end
#2445, 2:
曲线
## end
#2448, 24:
-7.7, -7.85, -7.85, -8.0
## end
#2450, 22:
13.0, 13.0, 14.0, 14.0
## end
#2453, 2:
曲线
## end
#2456, 28:
-19.0, -18.85, -18.85, -10.7
## end
#2458, 22:
13.0, 13.0, 12.0, 12.0
## end
#2461, 2:
曲线
## end
#2464, 24:
-7.7, -7.85, -7.85, -8.0
## end
#2466, 22:
13.0, 13.0, 12.0, 12.0
## end
#2469, 2:
曲线
## end
#2472, 14:
-23.85, -23.85
## end
#2474, 10:
13.0, 13.0
## end
#2477, 2:
曲线
## end
#2480, 28:
-19.7, -19.85, -19.85, -20.0
## end
#2482, 22:
13.0, 13.0, 13.0, 13.0
## end
#2485, 2:
曲线
## end
#2488, 12:
-20.7, -21.0
## end
#2490, 10:
13.0, 13.0
## end
#2493, 2:
折线
## end
#2496, 21:
-23.85, -23.85, -23.7
## end
#2498, 16:
13.0, 13.0, 13.0
## end
#2501, 2:
曲线
## end
#2504, 28:
-21.7, -21.85, -21.85, -22.0
## end
#2506, 22:
13.0, 13.0, 13.0, 13.0
## end
#2509, 2:
曲线
## end
#2512, 12:
-22.7, -23.0
## end
#2514, 10:
13.0, 13.0
## end
#2517, 2:
折线
## end
#2520, 10:
-8.7, -9.0
## end
#2522, 10:
14.0, 14.0
## end
#2525, 2:
折线
## end
#2528, 11:
-9.7, -10.0
## end
#2530, 10:
14.0, 14.0
## end
#2533, 2:
折线
## end
#2536, 14:
-18.85, -18.85
## end
#2538, 10:
14.0, 14.0
## end
#2541, 2:
曲线
## end
#2544, 28:
-10.7, -10.85, -10.85, -11.0
## end
#2546, 22:
14.0, 14.0, 14.0, 14.0
## end
#2549, 2:
曲线
## end
#2552, 12:
-11.7, -12.0
## end
#2554, 10:
14.0, 14.0
## end
#2557, 2:
折线
## end
#2560, 14:
-18.85, -18.85
## end
#2562, 10:
14.0, 14.0
## end
#2565, 2:
曲线
## end
#2568, 28:
-12.7, -12.85, -12.85, -13.0
## end
#2570, 22:
14.0, 14.0, 14.0, 14.0
## end
#2573, 2:
曲线
## end
#2576, 12:
-13.7, -14.0
## end
#2578, 10:
14.0, 14.0
## end
#2581, 2:
折线
## end
#2584, 12:
-14.7, -15.0
## end
#2586, 10:
14.0, 14.0
## end
#2589, 2:
折线
## end
#2592, 21:
-18.85, -18.85, -18.7
## end
#2594, 16:
14.0, 14.0, 14.0
## end
#2597, 2:
曲线
## end
#2600, 28:
-15.7, -15.85, -15.85, -16.0
## end
#2602, 22:
14.0, 14.0, 14.0, 14.0
## end
#2605, 2:
曲线
## end
#2608, 12:
-16.7, -17.0
## end
#2610, 10:
14.0, 14.0
## end
#2613, 2:
折线
## end
#2616, 12:
-17.7, -18.0
## end
#2618, 10:
14.0, 14.0
## end
#2621, 2:
折线
## end
#2624, 10:
-8.7, -9.0
## end
#2626, 10:
12.0, 12.0
## end
#2629, 2:
折线
## end
#2632, 11:
-9.7, -10.0
## end
#2634, 10:
12.0, 12.0
## end
#2637, 2:
折线
## end
#2640, 10:
-6.7, -7.0
## end
#2642, 8:
9.5, 9.5
## end
#2645, 2:
折线
## end
#2648, 10:
-6.7, -7.0
## end
#2650, 8:
7.0, 7.0
## end
#2653, 2:
折线
## end
#2656, 10:
-6.7, -7.0
## end
#2658, 8:
5.0, 5.0
## end
#2661, 2:
折线
## end
#2664, 10:
-6.7, -7.0
## end
#2666, 8:
3.0, 3.0
## end
#2669, 2:
折线
## end
#2672, 10:
-4.7, -5.0
## end
#2674, 10:
-1.0, -1.0
## end
#2677, 2:
折线
## end
#2681, 44:

G4VProcess:...
G4MagIntegratorStepper:...


## end
#2683, 271:

结构描述:...
将'结构描述'的"\.hh"替换为","
+[新建阅读窗口](,结构描述)

结构::
+[删除结构](,结构)->+[分析结构图结构](结构描述,结构)->+[显示星图](,结构)

分类图:...
+[删除结构](,分类图)->+[召唤星辰]"一般结构转结构文字"(结构,分类图)
+[删除结构](,分类图)->+[召唤星辰]"一般结构转分类图"(结构,分类图)
+[显示PPT场景]"1"(,分类图)
axis([-2,6,16,-16])
+[PPT场景转H代码](分类图,分类图)->+[H函数](,分类图)


## end
#2685, 680:

G4VProcess{

G4VSteppingVerbose,
G4Cerenkov,
G4ElectronIonPair,
G4AdjointProcessEquivalentToDirectProcess,
G4BiasingProcessInterface,
G4ParallelGeometriesLimiterProcess,
G4WeightWindowProcess,
G4ImportanceProcess,
G4WeightCutOffProcess,
G4SpecialCuts,
G4UserSpecialCuts,
G4FastSimulationManagerProcess,
G4ScoreSplittingProcess,
G4ParallelWorldScoringProcess,
G4ParallelWorldProcess,
G4VRestProcess,
G4VDiscreteProcess,
G4WrapperProcess,
G4VContinuousDiscreteProcess,
G4VRestContinuousDiscreteProcess,
G4NoProcess,
G4VRestDiscreteProcess,
G4VContinuousProcess,
G4VRestContinuousProcess,
G4ProcTblElement,
G4VITSteppingVerbose,
G4StepLimiter,
G4Transportation,
G4PhysListUtil

}



## end
#2687, 2645:
name#0"G4VProcess"(,)
name#1"G4VSteppingVerbose"(,)
名字#2""(,name#1)
节点#3""(,名字#2)
name#4"G4Cerenkov"(,)
名字#5""(,name#4)
节点#6""(,名字#5)
name#7"G4ElectronIonPair"(,)
名字#8""(,name#7)
节点#9""(,名字#8)
name#10"G4AdjointProcessEquivalentToDirectProcess"(,)
名字#11""(,name#10)
节点#12""(,名字#11)
name#13"G4BiasingProcessInterface"(,)
名字#14""(,name#13)
节点#15""(,名字#14)
name#16"G4ParallelGeometriesLimiterProcess"(,)
名字#17""(,name#16)
节点#18""(,名字#17)
name#19"G4WeightWindowProcess"(,)
名字#20""(,name#19)
节点#21""(,名字#20)
name#22"G4ImportanceProcess"(,)
名字#23""(,name#22)
节点#24""(,名字#23)
name#25"G4WeightCutOffProcess"(,)
名字#26""(,name#25)
节点#27""(,名字#26)
name#28"G4SpecialCuts"(,)
名字#29""(,name#28)
节点#30""(,名字#29)
name#31"G4UserSpecialCuts"(,)
名字#32""(,name#31)
节点#33""(,名字#32)
name#34"G4FastSimulationManagerProcess"(,)
名字#35""(,name#34)
节点#36""(,名字#35)
name#37"G4ScoreSplittingProcess"(,)
名字#38""(,name#37)
节点#39""(,名字#38)
name#40"G4ParallelWorldScoringProcess"(,)
名字#41""(,name#40)
节点#42""(,名字#41)
name#43"G4ParallelWorldProcess"(,)
名字#44""(,name#43)
节点#45""(,名字#44)
name#46"G4VRestProcess"(,)
名字#47""(,name#46)
节点#48""(,名字#47)
name#49"G4VDiscreteProcess"(,)
名字#50""(,name#49)
节点#51""(,名字#50)
name#52"G4WrapperProcess"(,)
名字#53""(,name#52)
节点#54""(,名字#53)
name#55"G4VContinuousDiscreteProcess"(,)
名字#56""(,name#55)
节点#57""(,名字#56)
name#58"G4VRestContinuousDiscreteProcess"(,)
名字#59""(,name#58)
节点#60""(,名字#59)
name#61"G4NoProcess"(,)
名字#62""(,name#61)
节点#63""(,名字#62)
name#64"G4VRestDiscreteProcess"(,)
名字#65""(,name#64)
节点#66""(,名字#65)
name#67"G4VContinuousProcess"(,)
名字#68""(,name#67)
节点#69""(,名字#68)
name#70"G4VRestContinuousProcess"(,)
名字#71""(,name#70)
节点#72""(,名字#71)
name#73"G4ProcTblElement"(,)
名字#74""(,name#73)
节点#75""(,名字#74)
name#76"G4VITSteppingVerbose"(,)
名字#77""(,name#76)
节点#78""(,名字#77)
name#79"G4StepLimiter"(,)
名字#80""(,name#79)
节点#81""(,名字#80)
name#82"G4Transportation"(,)
名字#83""(,name#82)
节点#84""(,名字#83)
name#85"G4PhysListUtil"(,)
名字#86""(,name#85)
节点#87""(,名字#86)
行#88""(行#89,节点#87)
行#89""(行#90,节点#84)
行#90""(行#91,节点#81)
行#91""(行#92,节点#78)
行#92""(行#93,节点#75)
行#93""(行#94,节点#72)
行#94""(行#95,节点#69)
行#95""(行#96,节点#66)
行#96""(行#97,节点#63)
行#97""(行#98,节点#60)
行#98""(行#99,节点#57)
行#99""(行#100,节点#54)
行#100""(行#101,节点#51)
行#101""(行#102,节点#48)
行#102""(行#103,节点#45)
行#103""(行#104,节点#42)
行#104""(行#105,节点#39)
行#105""(行#106,节点#36)
行#106""(行#107,节点#33)
行#107""(行#108,节点#30)
行#108""(行#109,节点#27)
行#109""(行#110,节点#24)
行#110""(行#111,节点#21)
行#111""(行#112,节点#18)
行#112""(行#113,节点#15)
行#113""(行#114,节点#12)
行#114""(行#115,节点#9)
行#115""(行#116,节点#6)
行#116""(名字#118,节点#3)
子集#117""(,行#116)
名字#118""(,name#0)
节点#119""(,名字#118)
行#120""(,节点#119)
起点#121""(,行#120)

## end
#2689, 12085:

<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 3587.5" style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="156,1750 343,1750 343,1837 156,1837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="406,1750 593,1750 593,1837 406,1837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,3500 843,3500 843,3587 656,3587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,3375 843,3375 843,3462 656,3462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,3250 843,3250 843,3337 656,3337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,3125 843,3125 843,3212 656,3212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,3000 843,3000 843,3087 656,3087 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2875 843,2875 843,2962 656,2962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2750 843,2750 843,2837 656,2837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2625 843,2625 843,2712 656,2712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2500 843,2500 843,2587 656,2587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2375 843,2375 843,2462 656,2462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2250 843,2250 843,2337 656,2337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2125 843,2125 843,2212 656,2212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2000 843,2000 843,2087 656,2087 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1875 843,1875 843,1962 656,1962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1750 843,1750 843,1837 656,1837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1625 843,1625 843,1712 656,1712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1500 843,1500 843,1587 656,1587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1375 843,1375 843,1462 656,1462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1250 843,1250 843,1337 656,1337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1125 843,1125 843,1212 656,1212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1000 843,1000 843,1087 656,1087 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,875 843,875 843,962 656,962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,750 843,750 843,837 656,837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,625 843,625 843,712 656,712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,500 843,500 843,587 656,587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,375 843,375 843,462 656,462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,250 843,250 843,337 656,337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,125 843,125 843,212 656,212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,0 843,0 843,87 656,87 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,1793 387,1793 387,1793 406,1793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,3543 656,3543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,3418 656,3418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,3293 656,3293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,3168 656,3168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,3043 656,3043 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2918 656,2918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2793 656,2793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2668 656,2668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2543 656,2543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2418 656,2418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2293 656,2293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2168 656,2168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,2043 656,2043 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1918 656,1918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1793 656,1793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1668 656,1668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1543 656,1543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1418 656,1418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1293 656,1293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1168 656,1168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,1043 656,1043 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,918 656,918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,793 656,793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,668 656,668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,543 656,543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,418 656,418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,293 656,293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,168 656,168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1793 637,1793 637,43 656,43 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="43.750000" font-size="15">G4VSteppingVerbose</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="168.750000" font-size="15">G4Cerenkov</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="293.750000" font-size="15">G4ElectronIonPair</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="418.750000" font-size="15">G4AdjointProcessEquivalentToDirectProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="543.750000" font-size="15">G4BiasingProcessInterface</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="668.750000" font-size="15">G4ParallelGeometriesLimiterProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="793.750000" font-size="15">G4WeightWindowProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="918.750000" font-size="15">G4ImportanceProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1043.750000" font-size="15">G4WeightCutOffProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1168.750000" font-size="15">G4SpecialCuts</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1293.750000" font-size="15">G4UserSpecialCuts</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1418.750000" font-size="15">G4FastSimulationManagerProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1543.750000" font-size="15">G4ScoreSplittingProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1668.750000" font-size="15">G4ParallelWorldScoringProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1793.750000" font-size="15">G4ParallelWorldProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1918.750000" font-size="15">G4VRestProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2043.750000" font-size="15">G4VDiscreteProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2168.750000" font-size="15">G4WrapperProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2293.750000" font-size="15">G4VContinuousDiscreteProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2418.750000" font-size="15">G4VRestContinuousDiscreteProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2543.750000" font-size="15">G4NoProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2668.750000" font-size="15">G4VRestDiscreteProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2793.750000" font-size="15">G4VContinuousProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2918.750000" font-size="15">G4VRestContinuousProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="3043.750000" font-size="15">G4ProcTblElement</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="3168.750000" font-size="15">G4VITSteppingVerbose</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="3293.750000" font-size="15">G4StepLimiter</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="3418.750000" font-size="15">G4Transportation</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="3543.750000" font-size="15">G4PhysListUtil</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="1793.750000" font-size="15">G4VProcess</text>
<text dominant-baseline="middle" text-anchor="middle" x="250.000000" y="1793.750000" font-size="15">起点</text>

</svg>


## end
#2692, 2:
起点
## end
#2694, 20:
12.0, 31.0, 2.0, 1.0
## end
#2702, 8:
0.0, 0.0
## end
#2708, 10:
0.0, -0.35
## end
#2710, 2:
居中
## end
#2714, 2:
起点
## end
#2715, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2717, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2719, 3:
0.7
## end
#2721, 3:
1.5
## end
#2724, 3:
多边形
## end
#2727, 8:
2.0, 0.0
## end
#2733, 10:
2.0, -0.35
## end
#2735, 2:
居中
## end
#2739, 10:
G4VProcess
## end
#2740, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2742, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2744, 3:
0.7
## end
#2746, 3:
1.5
## end
#2749, 3:
多边形
## end
#2752, 10:
4.0, -14.0
## end
#2758, 11:
4.0, -14.35
## end
#2760, 2:
居中
## end
#2764, 14:
G4PhysListUtil
## end
#2765, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2767, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2769, 3:
0.7
## end
#2771, 3:
1.5
## end
#2774, 3:
多边形
## end
#2777, 10:
4.0, -13.0
## end
#2783, 11:
4.0, -13.35
## end
#2785, 2:
居中
## end
#2789, 16:
G4Transportation
## end
#2790, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2792, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2794, 3:
0.7
## end
#2796, 3:
1.5
## end
#2799, 3:
多边形
## end
#2802, 10:
4.0, -12.0
## end
#2808, 11:
4.0, -12.35
## end
#2810, 2:
居中
## end
#2814, 13:
G4StepLimiter
## end
#2815, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2817, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2819, 3:
0.7
## end
#2821, 3:
1.5
## end
#2824, 3:
多边形
## end
#2827, 10:
4.0, -11.0
## end
#2833, 11:
4.0, -11.35
## end
#2835, 2:
居中
## end
#2839, 20:
G4VITSteppingVerbose
## end
#2840, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2842, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2844, 3:
0.7
## end
#2846, 3:
1.5
## end
#2849, 3:
多边形
## end
#2852, 10:
4.0, -10.0
## end
#2858, 11:
4.0, -10.35
## end
#2860, 2:
居中
## end
#2864, 16:
G4ProcTblElement
## end
#2865, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2867, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2869, 3:
0.7
## end
#2871, 3:
1.5
## end
#2874, 3:
多边形
## end
#2877, 9:
4.0, -9.0
## end
#2883, 10:
4.0, -9.35
## end
#2885, 2:
居中
## end
#2889, 24:
G4VRestContinuousProcess
## end
#2890, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2892, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2894, 3:
0.7
## end
#2896, 3:
1.5
## end
#2899, 3:
多边形
## end
#2902, 9:
4.0, -8.0
## end
#2908, 10:
4.0, -8.35
## end
#2910, 2:
居中
## end
#2914, 20:
G4VContinuousProcess
## end
#2915, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2917, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2919, 3:
0.7
## end
#2921, 3:
1.5
## end
#2924, 3:
多边形
## end
#2927, 9:
4.0, -7.0
## end
#2933, 10:
4.0, -7.35
## end
#2935, 2:
居中
## end
#2939, 22:
G4VRestDiscreteProcess
## end
#2940, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2942, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2944, 3:
0.7
## end
#2946, 3:
1.5
## end
#2949, 3:
多边形
## end
#2952, 9:
4.0, -6.0
## end
#2958, 10:
4.0, -6.35
## end
#2960, 2:
居中
## end
#2964, 11:
G4NoProcess
## end
#2965, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2967, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2969, 3:
0.7
## end
#2971, 3:
1.5
## end
#2974, 3:
多边形
## end
#2977, 9:
4.0, -5.0
## end
#2983, 10:
4.0, -5.35
## end
#2985, 2:
居中
## end
#2989, 32:
G4VRestContinuousDiscreteProcess
## end
#2990, 22:
-0.0, -0.0, -0.7, -0.7
## end
#2992, 24:
-0.75, 0.75, 0.75, -0.75
## end
#2994, 3:
0.7
## end
#2996, 3:
1.5
## end
#2999, 3:
多边形
## end
#3002, 9:
4.0, -4.0
## end
#3008, 10:
4.0, -4.35
## end
#3010, 2:
居中
## end
#3014, 28:
G4VContinuousDiscreteProcess
## end
#3015, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3017, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3019, 3:
0.7
## end
#3021, 3:
1.5
## end
#3024, 3:
多边形
## end
#3027, 9:
4.0, -3.0
## end
#3033, 10:
4.0, -3.35
## end
#3035, 2:
居中
## end
#3039, 16:
G4WrapperProcess
## end
#3040, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3042, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3044, 3:
0.7
## end
#3046, 3:
1.5
## end
#3049, 3:
多边形
## end
#3052, 9:
4.0, -2.0
## end
#3058, 10:
4.0, -2.35
## end
#3060, 2:
居中
## end
#3064, 18:
G4VDiscreteProcess
## end
#3065, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3067, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3069, 3:
0.7
## end
#3071, 3:
1.5
## end
#3074, 3:
多边形
## end
#3077, 9:
4.0, -1.0
## end
#3083, 10:
4.0, -1.35
## end
#3085, 2:
居中
## end
#3089, 14:
G4VRestProcess
## end
#3090, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3092, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3094, 3:
0.7
## end
#3096, 3:
1.5
## end
#3099, 3:
多边形
## end
#3102, 8:
4.0, 0.0
## end
#3108, 10:
4.0, -0.35
## end
#3110, 2:
居中
## end
#3114, 22:
G4ParallelWorldProcess
## end
#3115, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3117, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3119, 3:
0.7
## end
#3121, 3:
1.5
## end
#3124, 3:
多边形
## end
#3127, 8:
4.0, 1.0
## end
#3133, 9:
4.0, 0.65
## end
#3135, 2:
居中
## end
#3139, 29:
G4ParallelWorldScoringProcess
## end
#3140, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3142, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3144, 3:
0.7
## end
#3146, 3:
1.5
## end
#3149, 3:
多边形
## end
#3152, 8:
4.0, 2.0
## end
#3158, 9:
4.0, 1.65
## end
#3160, 2:
居中
## end
#3164, 23:
G4ScoreSplittingProcess
## end
#3165, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3167, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3169, 3:
0.7
## end
#3171, 3:
1.5
## end
#3174, 3:
多边形
## end
#3177, 8:
4.0, 3.0
## end
#3183, 9:
4.0, 2.65
## end
#3185, 2:
居中
## end
#3189, 30:
G4FastSimulationManagerProcess
## end
#3190, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3192, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3194, 3:
0.7
## end
#3196, 3:
1.5
## end
#3199, 3:
多边形
## end
#3202, 8:
4.0, 4.0
## end
#3208, 9:
4.0, 3.65
## end
#3210, 2:
居中
## end
#3214, 17:
G4UserSpecialCuts
## end
#3215, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3217, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3219, 3:
0.7
## end
#3221, 3:
1.5
## end
#3224, 3:
多边形
## end
#3227, 8:
4.0, 5.0
## end
#3233, 9:
4.0, 4.65
## end
#3235, 2:
居中
## end
#3239, 13:
G4SpecialCuts
## end
#3240, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3242, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3244, 3:
0.7
## end
#3246, 3:
1.5
## end
#3249, 3:
多边形
## end
#3252, 8:
4.0, 6.0
## end
#3258, 9:
4.0, 5.65
## end
#3260, 2:
居中
## end
#3264, 21:
G4WeightCutOffProcess
## end
#3265, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3267, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3269, 3:
0.7
## end
#3271, 3:
1.5
## end
#3274, 3:
多边形
## end
#3277, 8:
4.0, 7.0
## end
#3283, 9:
4.0, 6.65
## end
#3285, 2:
居中
## end
#3289, 19:
G4ImportanceProcess
## end
#3290, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3292, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3294, 3:
0.7
## end
#3296, 3:
1.5
## end
#3299, 3:
多边形
## end
#3302, 8:
4.0, 8.0
## end
#3308, 9:
4.0, 7.65
## end
#3310, 2:
居中
## end
#3314, 21:
G4WeightWindowProcess
## end
#3315, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3317, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3319, 3:
0.7
## end
#3321, 3:
1.5
## end
#3324, 3:
多边形
## end
#3327, 8:
4.0, 9.0
## end
#3333, 9:
4.0, 8.65
## end
#3335, 2:
居中
## end
#3339, 34:
G4ParallelGeometriesLimiterProcess
## end
#3340, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3342, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3344, 3:
0.7
## end
#3346, 3:
1.5
## end
#3349, 3:
多边形
## end
#3352, 9:
4.0, 10.0
## end
#3358, 9:
4.0, 9.65
## end
#3360, 2:
居中
## end
#3364, 25:
G4BiasingProcessInterface
## end
#3365, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3367, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3369, 3:
0.7
## end
#3371, 3:
1.5
## end
#3374, 3:
多边形
## end
#3377, 9:
4.0, 11.0
## end
#3383, 10:
4.0, 10.65
## end
#3385, 2:
居中
## end
#3389, 41:
G4AdjointProcessEquivalentToDirectProcess
## end
#3390, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3392, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3394, 3:
0.7
## end
#3396, 3:
1.5
## end
#3399, 3:
多边形
## end
#3402, 9:
4.0, 12.0
## end
#3408, 10:
4.0, 11.65
## end
#3410, 2:
居中
## end
#3414, 17:
G4ElectronIonPair
## end
#3415, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3417, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3419, 3:
0.7
## end
#3421, 3:
1.5
## end
#3424, 3:
多边形
## end
#3427, 9:
4.0, 13.0
## end
#3433, 10:
4.0, 12.65
## end
#3435, 2:
居中
## end
#3439, 10:
G4Cerenkov
## end
#3440, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3442, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3444, 3:
0.7
## end
#3446, 3:
1.5
## end
#3449, 3:
多边形
## end
#3452, 9:
4.0, 14.0
## end
#3458, 10:
4.0, 13.65
## end
#3460, 2:
居中
## end
#3464, 18:
G4VSteppingVerbose
## end
#3465, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3467, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3469, 3:
0.7
## end
#3471, 3:
1.5
## end
#3474, 3:
多边形
## end
#3475, 26:
-0.35, -0.35, -0.35, -0.35
## end
#3477, 20:
0.75, 1.1, 1.1, 1.25
## end
#3480, 2:
曲线
## end
#3483, 28:
-0.35, -0.35, -14.35, -14.35
## end
#3485, 20:
2.75, 3.1, 3.1, 3.25
## end
#3488, 2:
曲线
## end
#3491, 28:
-0.35, -0.35, -13.35, -13.35
## end
#3493, 20:
2.75, 3.1, 3.1, 3.25
## end
#3496, 2:
曲线
## end
#3499, 28:
-0.35, -0.35, -12.35, -12.35
## end
#3501, 20:
2.75, 3.1, 3.1, 3.25
## end
#3504, 2:
曲线
## end
#3507, 28:
-0.35, -0.35, -11.35, -11.35
## end
#3509, 20:
2.75, 3.1, 3.1, 3.25
## end
#3512, 2:
曲线
## end
#3515, 28:
-0.35, -0.35, -10.35, -10.35
## end
#3517, 20:
2.75, 3.1, 3.1, 3.25
## end
#3520, 2:
曲线
## end
#3523, 26:
-0.35, -0.35, -9.35, -9.35
## end
#3525, 20:
2.75, 3.1, 3.1, 3.25
## end
#3528, 2:
曲线
## end
#3531, 26:
-0.35, -0.35, -8.35, -8.35
## end
#3533, 20:
2.75, 3.1, 3.1, 3.25
## end
#3536, 2:
曲线
## end
#3539, 26:
-0.35, -0.35, -7.35, -7.35
## end
#3541, 20:
2.75, 3.1, 3.1, 3.25
## end
#3544, 2:
曲线
## end
#3547, 26:
-0.35, -0.35, -6.35, -6.35
## end
#3549, 20:
2.75, 3.1, 3.1, 3.25
## end
#3552, 2:
曲线
## end
#3555, 26:
-0.35, -0.35, -5.35, -5.35
## end
#3557, 20:
2.75, 3.1, 3.1, 3.25
## end
#3560, 2:
曲线
## end
#3563, 26:
-0.35, -0.35, -4.35, -4.35
## end
#3565, 20:
2.75, 3.1, 3.1, 3.25
## end
#3568, 2:
曲线
## end
#3571, 26:
-0.35, -0.35, -3.35, -3.35
## end
#3573, 20:
2.75, 3.1, 3.1, 3.25
## end
#3576, 2:
曲线
## end
#3579, 26:
-0.35, -0.35, -2.35, -2.35
## end
#3581, 20:
2.75, 3.1, 3.1, 3.25
## end
#3584, 2:
曲线
## end
#3587, 26:
-0.35, -0.35, -1.35, -1.35
## end
#3589, 20:
2.75, 3.1, 3.1, 3.25
## end
#3592, 2:
曲线
## end
#3595, 26:
-0.35, -0.35, -0.35, -0.35
## end
#3597, 20:
2.75, 3.1, 3.1, 3.25
## end
#3600, 2:
曲线
## end
#3603, 24:
-0.35, -0.35, 0.65, 0.65
## end
#3605, 20:
2.75, 3.1, 3.1, 3.25
## end
#3608, 2:
曲线
## end
#3611, 24:
-0.35, -0.35, 1.65, 1.65
## end
#3613, 20:
2.75, 3.1, 3.1, 3.25
## end
#3616, 2:
曲线
## end
#3619, 24:
-0.35, -0.35, 2.65, 2.65
## end
#3621, 20:
2.75, 3.1, 3.1, 3.25
## end
#3624, 2:
曲线
## end
#3627, 24:
-0.35, -0.35, 3.65, 3.65
## end
#3629, 20:
2.75, 3.1, 3.1, 3.25
## end
#3632, 2:
曲线
## end
#3635, 24:
-0.35, -0.35, 4.65, 4.65
## end
#3637, 20:
2.75, 3.1, 3.1, 3.25
## end
#3640, 2:
曲线
## end
#3643, 24:
-0.35, -0.35, 5.65, 5.65
## end
#3645, 20:
2.75, 3.1, 3.1, 3.25
## end
#3648, 2:
曲线
## end
#3651, 24:
-0.35, -0.35, 6.65, 6.65
## end
#3653, 20:
2.75, 3.1, 3.1, 3.25
## end
#3656, 2:
曲线
## end
#3659, 24:
-0.35, -0.35, 7.65, 7.65
## end
#3661, 20:
2.75, 3.1, 3.1, 3.25
## end
#3664, 2:
曲线
## end
#3667, 24:
-0.35, -0.35, 8.65, 8.65
## end
#3669, 20:
2.75, 3.1, 3.1, 3.25
## end
#3672, 2:
曲线
## end
#3675, 24:
-0.35, -0.35, 9.65, 9.65
## end
#3677, 20:
2.75, 3.1, 3.1, 3.25
## end
#3680, 2:
曲线
## end
#3683, 26:
-0.35, -0.35, 10.65, 10.65
## end
#3685, 20:
2.75, 3.1, 3.1, 3.25
## end
#3688, 2:
曲线
## end
#3691, 26:
-0.35, -0.35, 11.65, 11.65
## end
#3693, 20:
2.75, 3.1, 3.1, 3.25
## end
#3696, 2:
曲线
## end
#3699, 26:
-0.35, -0.35, 12.65, 12.65
## end
#3701, 20:
2.75, 3.1, 3.1, 3.25
## end
#3704, 2:
曲线
## end
#3707, 26:
-0.35, -0.35, 13.65, 13.65
## end
#3709, 20:
2.75, 3.1, 3.1, 3.25
## end
#3712, 2:
曲线
## end
#3716, 282:
记住"Matlab"
结构描述:...
将'结构描述'的"\.hh"替换为","
+[新建阅读窗口](,结构描述)

结构::
+[删除结构](,结构)->+[分析结构图结构](结构描述,结构)->+[显示星图](,结构)

分类图:...
+[删除结构](,分类图)->+[召唤星辰]"一般结构转结构文字"(结构,分类图)
+[删除结构](,分类图)->+[召唤星辰]"一般结构转分类图"(结构,分类图)
+[显示PPT场景]"1"(,分类图)
axis([-2,6,12,-14])
+[PPT场景转H代码](分类图,分类图)->+[H函数](,分类图)



## end
#3718, 465:
G4MagIntegratorStepper{

G4DoLoMcPriRK34,
G4RK547FEq2,
G4TDormandPrince45,
G4TCashKarpRKF45,
G4ChordFinder,
G4CashKarpRKF45,
G4VIntegrationDriver,
G4MagIntegratorDriver,
G4RKG3_Stepper,
G4DormandPrinceRK56,
G4TClassicalRK4,
G4RK547FEq3,
G4TsitourasRK45,
G4MagErrorStepper,
G4BogackiShampine45,
G4NystromRK4,
G4RK547FEq1,
G4DormandPrinceRK78,
G4DormandPrince745,
G4TMagErrorStepper,
G4MagHelicalStepper,
G4ExactHelixStepper,
G4OldMagIntDriver,
G4BogackiShampine23

}
## end
#3720, 2073:
name#0"G4MagIntegratorStepper"(,)
name#1"G4DoLoMcPriRK34"(,)
名字#2""(,name#1)
节点#3""(,名字#2)
name#4"G4RK547FEq2"(,)
名字#5""(,name#4)
节点#6""(,名字#5)
name#7"G4TDormandPrince45"(,)
名字#8""(,name#7)
节点#9""(,名字#8)
name#10"G4TCashKarpRKF45"(,)
名字#11""(,name#10)
节点#12""(,名字#11)
name#13"G4ChordFinder"(,)
名字#14""(,name#13)
节点#15""(,名字#14)
name#16"G4CashKarpRKF45"(,)
名字#17""(,name#16)
节点#18""(,名字#17)
name#19"G4VIntegrationDriver"(,)
名字#20""(,name#19)
节点#21""(,名字#20)
name#22"G4MagIntegratorDriver"(,)
名字#23""(,name#22)
节点#24""(,名字#23)
name#25"G4RKG3_Stepper"(,)
名字#26""(,name#25)
节点#27""(,名字#26)
name#28"G4DormandPrinceRK56"(,)
名字#29""(,name#28)
节点#30""(,名字#29)
name#31"G4TClassicalRK4"(,)
名字#32""(,name#31)
节点#33""(,名字#32)
name#34"G4RK547FEq3"(,)
名字#35""(,name#34)
节点#36""(,名字#35)
name#37"G4TsitourasRK45"(,)
名字#38""(,name#37)
节点#39""(,名字#38)
name#40"G4MagErrorStepper"(,)
名字#41""(,name#40)
节点#42""(,名字#41)
name#43"G4BogackiShampine45"(,)
名字#44""(,name#43)
节点#45""(,名字#44)
name#46"G4NystromRK4"(,)
名字#47""(,name#46)
节点#48""(,名字#47)
name#49"G4RK547FEq1"(,)
名字#50""(,name#49)
节点#51""(,名字#50)
name#52"G4DormandPrinceRK78"(,)
名字#53""(,name#52)
节点#54""(,名字#53)
name#55"G4DormandPrince745"(,)
名字#56""(,name#55)
节点#57""(,名字#56)
name#58"G4TMagErrorStepper"(,)
名字#59""(,name#58)
节点#60""(,名字#59)
name#61"G4MagHelicalStepper"(,)
名字#62""(,name#61)
节点#63""(,名字#62)
name#64"G4ExactHelixStepper"(,)
名字#65""(,name#64)
节点#66""(,名字#65)
name#67"G4OldMagIntDriver"(,)
名字#68""(,name#67)
节点#69""(,名字#68)
name#70"G4BogackiShampine23"(,)
名字#71""(,name#70)
节点#72""(,名字#71)
行#73""(行#74,节点#72)
行#74""(行#75,节点#69)
行#75""(行#76,节点#66)
行#76""(行#77,节点#63)
行#77""(行#78,节点#60)
行#78""(行#79,节点#57)
行#79""(行#80,节点#54)
行#80""(行#81,节点#51)
行#81""(行#82,节点#48)
行#82""(行#83,节点#45)
行#83""(行#84,节点#42)
行#84""(行#85,节点#39)
行#85""(行#86,节点#36)
行#86""(行#87,节点#33)
行#87""(行#88,节点#30)
行#88""(行#89,节点#27)
行#89""(行#90,节点#24)
行#90""(行#91,节点#21)
行#91""(行#92,节点#18)
行#92""(行#93,节点#15)
行#93""(行#94,节点#12)
行#94""(行#95,节点#9)
行#95""(行#96,节点#6)
行#96""(名字#98,节点#3)
子集#97""(,行#96)
名字#98""(,name#0)
节点#99""(,名字#98)
行#100""(,节点#99)
起点#101""(,行#100)

## end
#3722, 10024:

<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 2962.5" style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="156,1437 343,1437 343,1525 156,1525 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="406,1437 593,1437 593,1525 406,1525 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2875 843,2875 843,2962 656,2962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2750 843,2750 843,2837 656,2837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2625 843,2625 843,2712 656,2712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2500 843,2500 843,2587 656,2587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2375 843,2375 843,2462 656,2462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2250 843,2250 843,2337 656,2337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2125 843,2125 843,2212 656,2212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,2000 843,2000 843,2087 656,2087 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1875 843,1875 843,1962 656,1962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1750 843,1750 843,1837 656,1837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1625 843,1625 843,1712 656,1712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1500 843,1500 843,1587 656,1587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1375 843,1375 843,1462 656,1462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1250 843,1250 843,1337 656,1337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1125 843,1125 843,1212 656,1212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,1000 843,1000 843,1087 656,1087 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,875 843,875 843,962 656,962 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,750 843,750 843,837 656,837 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,625 843,625 843,712 656,712 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,500 843,500 843,587 656,587 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,375 843,375 843,462 656,462 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,250 843,250 843,337 656,337 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,125 843,125 843,212 656,212 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="656,0 843,0 843,87 656,87 " style="fill:rgb(255,255,255);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="343,1481 387,1481 387,1481 406,1481 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2918 656,2918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2793 656,2793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2668 656,2668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2543 656,2543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2418 656,2418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2293 656,2293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2168 656,2168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,2043 656,2043 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1918 656,1918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1793 656,1793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1668 656,1668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1543 656,1543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1418 656,1418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1293 656,1293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1168 656,1168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,1043 656,1043 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,918 656,918 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,793 656,793 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,668 656,668 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,543 656,543 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,418 656,418 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,293 656,293 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,168 656,168 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<polyline points="593,1481 637,1481 637,43 656,43 " style="fill:none;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="43.750000" font-size="15">G4DoLoMcPriRK34</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="168.750000" font-size="15">G4RK547FEq2</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="293.750000" font-size="15">G4TDormandPrince45</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="418.750000" font-size="15">G4TCashKarpRKF45</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="543.750000" font-size="15">G4ChordFinder</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="668.750000" font-size="15">G4CashKarpRKF45</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="793.750000" font-size="15">G4VIntegrationDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="918.750000" font-size="15">G4MagIntegratorDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1043.750000" font-size="15">G4RKG3_Stepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1168.750000" font-size="15">G4DormandPrinceRK56</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1293.750000" font-size="15">G4TClassicalRK4</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1418.750000" font-size="15">G4RK547FEq3</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1543.750000" font-size="15">G4TsitourasRK45</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1668.750000" font-size="15">G4MagErrorStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1793.750000" font-size="15">G4BogackiShampine45</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="1918.750000" font-size="15">G4NystromRK4</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2043.750000" font-size="15">G4RK547FEq1</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2168.750000" font-size="15">G4DormandPrinceRK78</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2293.750000" font-size="15">G4DormandPrince745</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2418.750000" font-size="15">G4TMagErrorStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2543.750000" font-size="15">G4MagHelicalStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2668.750000" font-size="15">G4ExactHelixStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2793.750000" font-size="15">G4OldMagIntDriver</text>
<text dominant-baseline="middle" text-anchor="middle" x="750.000000" y="2918.750000" font-size="15">G4BogackiShampine23</text>
<text dominant-baseline="middle" text-anchor="middle" x="500.000000" y="1481.250000" font-size="15">G4MagIntegratorStepper</text>
<text dominant-baseline="middle" text-anchor="middle" x="250.000000" y="1481.250000" font-size="15">起点</text>

</svg>


## end
#3725, 2:
起点
## end
#3727, 20:
24.0, 26.0, 2.0, 1.0
## end
#3735, 8:
0.0, 0.0
## end
#3741, 10:
0.0, -0.35
## end
#3743, 2:
居中
## end
#3747, 2:
起点
## end
#3748, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3750, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3752, 3:
0.7
## end
#3754, 3:
1.5
## end
#3757, 3:
多边形
## end
#3760, 8:
2.0, 0.0
## end
#3766, 10:
2.0, -0.35
## end
#3768, 2:
居中
## end
#3772, 22:
G4MagIntegratorStepper
## end
#3773, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3775, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3777, 3:
0.7
## end
#3779, 3:
1.5
## end
#3782, 3:
多边形
## end
#3785, 10:
4.0, -11.5
## end
#3791, 11:
4.0, -11.85
## end
#3793, 2:
居中
## end
#3797, 19:
G4BogackiShampine23
## end
#3798, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3800, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3802, 3:
0.7
## end
#3804, 3:
1.5
## end
#3807, 3:
多边形
## end
#3810, 10:
4.0, -10.5
## end
#3816, 11:
4.0, -10.85
## end
#3818, 2:
居中
## end
#3822, 17:
G4OldMagIntDriver
## end
#3823, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3825, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3827, 3:
0.7
## end
#3829, 3:
1.5
## end
#3832, 3:
多边形
## end
#3835, 9:
4.0, -9.5
## end
#3841, 10:
4.0, -9.85
## end
#3843, 2:
居中
## end
#3847, 19:
G4ExactHelixStepper
## end
#3848, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3850, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3852, 3:
0.7
## end
#3854, 3:
1.5
## end
#3857, 3:
多边形
## end
#3860, 9:
4.0, -8.5
## end
#3866, 10:
4.0, -8.85
## end
#3868, 2:
居中
## end
#3872, 19:
G4MagHelicalStepper
## end
#3873, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3875, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3877, 3:
0.7
## end
#3879, 3:
1.5
## end
#3882, 3:
多边形
## end
#3885, 9:
4.0, -7.5
## end
#3891, 10:
4.0, -7.85
## end
#3893, 2:
居中
## end
#3897, 18:
G4TMagErrorStepper
## end
#3898, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3900, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3902, 3:
0.7
## end
#3904, 3:
1.5
## end
#3907, 3:
多边形
## end
#3910, 9:
4.0, -6.5
## end
#3916, 10:
4.0, -6.85
## end
#3918, 2:
居中
## end
#3922, 18:
G4DormandPrince745
## end
#3923, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3925, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3927, 3:
0.7
## end
#3929, 3:
1.5
## end
#3932, 3:
多边形
## end
#3935, 9:
4.0, -5.5
## end
#3941, 10:
4.0, -5.85
## end
#3943, 2:
居中
## end
#3947, 19:
G4DormandPrinceRK78
## end
#3948, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3950, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3952, 3:
0.7
## end
#3954, 3:
1.5
## end
#3957, 3:
多边形
## end
#3960, 9:
4.0, -4.5
## end
#3966, 10:
4.0, -4.85
## end
#3968, 2:
居中
## end
#3972, 11:
G4RK547FEq1
## end
#3973, 22:
-0.0, -0.0, -0.7, -0.7
## end
#3975, 24:
-0.75, 0.75, 0.75, -0.75
## end
#3977, 3:
0.7
## end
#3979, 3:
1.5
## end
#3982, 3:
多边形
## end
#3985, 9:
4.0, -3.5
## end
#3991, 10:
4.0, -3.85
## end
#3993, 2:
居中
## end
#3997, 12:
G4NystromRK4
## end
#3998, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4000, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4002, 3:
0.7
## end
#4004, 3:
1.5
## end
#4007, 3:
多边形
## end
#4010, 9:
4.0, -2.5
## end
#4016, 10:
4.0, -2.85
## end
#4018, 2:
居中
## end
#4022, 19:
G4BogackiShampine45
## end
#4023, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4025, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4027, 3:
0.7
## end
#4029, 3:
1.5
## end
#4032, 3:
多边形
## end
#4035, 9:
4.0, -1.5
## end
#4041, 10:
4.0, -1.85
## end
#4043, 2:
居中
## end
#4047, 17:
G4MagErrorStepper
## end
#4048, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4050, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4052, 3:
0.7
## end
#4054, 3:
1.5
## end
#4057, 3:
多边形
## end
#4060, 9:
4.0, -0.5
## end
#4066, 10:
4.0, -0.85
## end
#4068, 2:
居中
## end
#4072, 15:
G4TsitourasRK45
## end
#4073, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4075, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4077, 3:
0.7
## end
#4079, 3:
1.5
## end
#4082, 3:
多边形
## end
#4085, 8:
4.0, 0.5
## end
#4091, 24:
4.0, 0.15000000000000002
## end
#4093, 2:
居中
## end
#4097, 11:
G4RK547FEq3
## end
#4098, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4100, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4102, 3:
0.7
## end
#4104, 3:
1.5
## end
#4107, 3:
多边形
## end
#4110, 8:
4.0, 1.5
## end
#4116, 9:
4.0, 1.15
## end
#4118, 2:
居中
## end
#4122, 15:
G4TClassicalRK4
## end
#4123, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4125, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4127, 3:
0.7
## end
#4129, 3:
1.5
## end
#4132, 3:
多边形
## end
#4135, 8:
4.0, 2.5
## end
#4141, 9:
4.0, 2.15
## end
#4143, 2:
居中
## end
#4147, 19:
G4DormandPrinceRK56
## end
#4148, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4150, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4152, 3:
0.7
## end
#4154, 3:
1.5
## end
#4157, 3:
多边形
## end
#4160, 8:
4.0, 3.5
## end
#4166, 9:
4.0, 3.15
## end
#4168, 2:
居中
## end
#4172, 14:
G4RKG3_Stepper
## end
#4173, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4175, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4177, 3:
0.7
## end
#4179, 3:
1.5
## end
#4182, 3:
多边形
## end
#4185, 8:
4.0, 4.5
## end
#4191, 9:
4.0, 4.15
## end
#4193, 2:
居中
## end
#4197, 21:
G4MagIntegratorDriver
## end
#4198, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4200, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4202, 3:
0.7
## end
#4204, 3:
1.5
## end
#4207, 3:
多边形
## end
#4210, 8:
4.0, 5.5
## end
#4216, 9:
4.0, 5.15
## end
#4218, 2:
居中
## end
#4222, 20:
G4VIntegrationDriver
## end
#4223, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4225, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4227, 3:
0.7
## end
#4229, 3:
1.5
## end
#4232, 3:
多边形
## end
#4235, 8:
4.0, 6.5
## end
#4241, 9:
4.0, 6.15
## end
#4243, 2:
居中
## end
#4247, 15:
G4CashKarpRKF45
## end
#4248, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4250, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4252, 3:
0.7
## end
#4254, 3:
1.5
## end
#4257, 3:
多边形
## end
#4260, 8:
4.0, 7.5
## end
#4266, 9:
4.0, 7.15
## end
#4268, 2:
居中
## end
#4272, 13:
G4ChordFinder
## end
#4273, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4275, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4277, 3:
0.7
## end
#4279, 3:
1.5
## end
#4282, 3:
多边形
## end
#4285, 8:
4.0, 8.5
## end
#4291, 9:
4.0, 8.15
## end
#4293, 2:
居中
## end
#4297, 16:
G4TCashKarpRKF45
## end
#4298, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4300, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4302, 3:
0.7
## end
#4304, 3:
1.5
## end
#4307, 3:
多边形
## end
#4310, 8:
4.0, 9.5
## end
#4316, 9:
4.0, 9.15
## end
#4318, 2:
居中
## end
#4322, 18:
G4TDormandPrince45
## end
#4323, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4325, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4327, 3:
0.7
## end
#4329, 3:
1.5
## end
#4332, 3:
多边形
## end
#4335, 9:
4.0, 10.5
## end
#4341, 10:
4.0, 10.15
## end
#4343, 2:
居中
## end
#4347, 11:
G4RK547FEq2
## end
#4348, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4350, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4352, 3:
0.7
## end
#4354, 3:
1.5
## end
#4357, 3:
多边形
## end
#4360, 9:
4.0, 11.5
## end
#4366, 10:
4.0, 11.15
## end
#4368, 2:
居中
## end
#4372, 15:
G4DoLoMcPriRK34
## end
#4373, 22:
-0.0, -0.0, -0.7, -0.7
## end
#4375, 24:
-0.75, 0.75, 0.75, -0.75
## end
#4377, 3:
0.7
## end
#4379, 3:
1.5
## end
#4382, 3:
多边形
## end
#4383, 26:
-0.35, -0.35, -0.35, -0.35
## end
#4385, 20:
0.75, 1.1, 1.1, 1.25
## end
#4388, 2:
曲线
## end
#4391, 28:
-0.35, -0.35, -11.85, -11.85
## end
#4393, 20:
2.75, 3.1, 3.1, 3.25
## end
#4396, 2:
曲线
## end
#4399, 28:
-0.35, -0.35, -10.85, -10.85
## end
#4401, 20:
2.75, 3.1, 3.1, 3.25
## end
#4404, 2:
曲线
## end
#4407, 26:
-0.35, -0.35, -9.85, -9.85
## end
#4409, 20:
2.75, 3.1, 3.1, 3.25
## end
#4412, 2:
曲线
## end
#4415, 26:
-0.35, -0.35, -8.85, -8.85
## end
#4417, 20:
2.75, 3.1, 3.1, 3.25
## end
#4420, 2:
曲线
## end
#4423, 26:
-0.35, -0.35, -7.85, -7.85
## end
#4425, 20:
2.75, 3.1, 3.1, 3.25
## end
#4428, 2:
曲线
## end
#4431, 26:
-0.35, -0.35, -6.85, -6.85
## end
#4433, 20:
2.75, 3.1, 3.1, 3.25
## end
#4436, 2:
曲线
## end
#4439, 26:
-0.35, -0.35, -5.85, -5.85
## end
#4441, 20:
2.75, 3.1, 3.1, 3.25
## end
#4444, 2:
曲线
## end
#4447, 26:
-0.35, -0.35, -4.85, -4.85
## end
#4449, 20:
2.75, 3.1, 3.1, 3.25
## end
#4452, 2:
曲线
## end
#4455, 26:
-0.35, -0.35, -3.85, -3.85
## end
#4457, 20:
2.75, 3.1, 3.1, 3.25
## end
#4460, 2:
曲线
## end
#4463, 26:
-0.35, -0.35, -2.85, -2.85
## end
#4465, 20:
2.75, 3.1, 3.1, 3.25
## end
#4468, 2:
曲线
## end
#4471, 26:
-0.35, -0.35, -1.85, -1.85
## end
#4473, 20:
2.75, 3.1, 3.1, 3.25
## end
#4476, 2:
曲线
## end
#4479, 26:
-0.35, -0.35, -0.85, -0.85
## end
#4481, 20:
2.75, 3.1, 3.1, 3.25
## end
#4484, 2:
曲线
## end
#4487, 54:
-0.35, -0.35, 0.15000000000000002, 0.15000000000000002
## end
#4489, 20:
2.75, 3.1, 3.1, 3.25
## end
#4492, 2:
曲线
## end
#4495, 24:
-0.35, -0.35, 1.15, 1.15
## end
#4497, 20:
2.75, 3.1, 3.1, 3.25
## end
#4500, 2:
曲线
## end
#4503, 24:
-0.35, -0.35, 2.15, 2.15
## end
#4505, 20:
2.75, 3.1, 3.1, 3.25
## end
#4508, 2:
曲线
## end
#4511, 24:
-0.35, -0.35, 3.15, 3.15
## end
#4513, 20:
2.75, 3.1, 3.1, 3.25
## end
#4516, 2:
曲线
## end
#4519, 24:
-0.35, -0.35, 4.15, 4.15
## end
#4521, 20:
2.75, 3.1, 3.1, 3.25
## end
#4524, 2:
曲线
## end
#4527, 24:
-0.35, -0.35, 5.15, 5.15
## end
#4529, 20:
2.75, 3.1, 3.1, 3.25
## end
#4532, 2:
曲线
## end
#4535, 24:
-0.35, -0.35, 6.15, 6.15
## end
#4537, 20:
2.75, 3.1, 3.1, 3.25
## end
#4540, 2:
曲线
## end
#4543, 24:
-0.35, -0.35, 7.15, 7.15
## end
#4545, 20:
2.75, 3.1, 3.1, 3.25
## end
#4548, 2:
曲线
## end
#4551, 24:
-0.35, -0.35, 8.15, 8.15
## end
#4553, 20:
2.75, 3.1, 3.1, 3.25
## end
#4556, 2:
曲线
## end
#4559, 24:
-0.35, -0.35, 9.15, 9.15
## end
#4561, 20:
2.75, 3.1, 3.1, 3.25
## end
#4564, 2:
曲线
## end
#4567, 26:
-0.35, -0.35, 10.15, 10.15
## end
#4569, 20:
2.75, 3.1, 3.1, 3.25
## end
#4572, 2:
曲线
## end
#4575, 26:
-0.35, -0.35, 11.15, 11.15
## end
#4577, 20:
2.75, 3.1, 3.1, 3.25
## end
#4580, 2:
曲线
## end
### 结束