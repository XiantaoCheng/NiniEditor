### 节点
地址, 画板, 字体, 文字, 线粗细, 线型, 线颜色, 面颜色, 尺寸, 起点, 的, 的, 的, 的, 的, 的, 的, 的, 输入, 输出, 的, 的, HTML, mouseMove, 的, 右下展宽, mouseMove, 的, 右上展宽, mouseMove, 的, 左下展宽, mouseMove, 的, 左上展宽, mouseMove, 的, 右展宽, mouseMove, 的, 左展宽, mouseMove, 的, 下展宽, mouseMove, 的, 上展宽, mouseMove, 的, 移动, 的, 的, 的, 的, 的, 的, 的, 的, 的, 动作, 保存, 的, 的, 输入, 输出, 的, 的, P代码, 的, 的, 按键, 去掉选中框, 画选中框, 的, 的, 的, 动词, 的, 的, 输入, 输出, 的, 的, 选中区域, 类型, 图形, 选中框, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 矩形, 字体, 文字, 线粗细, 线型, 线颜色, 面颜色, 尺寸, 起点, 的, 的, 的, 的, 的, 的, 的, 的, 输入, 输出, 的, 的, HTML, mouseMove, 的, 右下展宽, mouseMove, 的, 右上展宽, mouseMove, 的, 左下展宽, mouseMove, 的, 左上展宽, mouseMove, 的, 右展宽, mouseMove, 的, 左展宽, mouseMove, 的, 下展宽, mouseMove, 的, 上展宽, mouseMove, 的, 移动, 的, 的, 的, 的, 的, 的, 的, 的, 的, 动作, 保存, 的, 的, 输入, 输出, 的, 的, P代码, 的, 的, 按键, 去掉选中框, 画选中框, 的, 的, 的, 动词, 的, 的, 输入, 输出, 的, 的, 选中区域, 类型, 图形, 选中框, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 矩形, 字体, 文字, 线粗细, 线型, 线颜色, 面颜色, 尺寸, 起点, 的, 的, 的, 的, 的, 的, 的, 的, 输入, 输出, 的, 的, HTML, mouseMove, 的, 右下展宽, mouseMove, 的, 右上展宽, mouseMove, 的, 左下展宽, mouseMove, 的, 左上展宽, mouseMove, 的, 右展宽, mouseMove, 的, 左展宽, mouseMove, 的, 下展宽, mouseMove, 的, 上展宽, mouseMove, 的, 移动, 的, 的, 的, 的, 的, 的, 的, 的, 的, 动作, 保存, 的, 的, 输入, 输出, 的, 的, P代码, 的, 的, 按键, 去掉选中框, 画选中框, 的, 的, 的, 动词, 的, 的, 输入, 输出, 的, 的, 选中区域, 类型, 图形, 选中框, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 矩形, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 线粗细, 线型, 线颜色, 终点, 起点, 的, 的, 的, 的, 的, 输入, 的, HTML, mouseMove, 的, 移动终点, mouseMove, 的, 移动起点, mouseMove, mouseMove, 的, 移动, 的, 的, 的, 的, 动作, 按键, 画选中框, 去掉选中框, 的, 的, 的, 动词, LaTeX数学记号, 的, 点线公式, 输出, 的, 的, 输入, 的, 的, 的, 选中区域, 类型, 选中框, 图形, 输出, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 直线, 的, 的, 的, 坐标系, 的, 的, 的, 的, 的, 的, 场景, 参考, 的, 的, 的, 透镜的传输矩阵, [标题], 的, 的, 透镜系统, 目录, 的, 的, 节点数目统计, 的, 透镜成像, M函数, 比例, 的, 尺寸, 的, 原点, 的, 坐标系, 的, 公式方案, 的, 双透镜系统成像公式, 的, 场景, 画板, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 按键位置, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 直线, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 比例, 的, 尺寸, 的, 原点, 的, 坐标系, 20210309, 的, 20210310, 的, 的, 成像系统设计_1D, M函数, 的, 绘制场景, 20210311, 的, 的, 网页画板, 的, 成像系统设计_2D, M函数, 20210315, 的, 20210316, 的, 的, 单透镜系统, 的, 场景, 的, 透镜, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 的, 中线, 的, 像, 的, 物, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 按键位置, 比例, 的, 尺寸, 的, 原点, 的, 坐标系, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 的, 平行光, 的, 中心光, 的, 聚焦光, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 按键位置, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 的, 是, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 的, 是, 的, 是, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 图形, 选中框, 类型, 选中区域, 的, 的, 的, 输入, 的, 的, 输出, 点线公式, 的, LaTeX数学记号, 动词, 的, 的, 的, 去掉选中框, 画选中框, 按键, 动作, 的, 的, 的, 的, 移动, 的, mouseMove, mouseMove, 移动起点, 的, mouseMove, 移动终点, 的, mouseMove, HTML, 的, 输入, 的, 的, 的, 的, 的, 起点, 终点, 线颜色, 线型, 线粗细, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 按键位置, 的, 是, 的, 是, 按键位置, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 按键位置, 矩形, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 画图, 的, 的, 的, 的, 输出, 选中框, 图形, 类型, 选中区域, 的, 的, 输出, 输入, 的, 的, 动词, 的, 的, 的, 画选中框, 去掉选中框, 按键, 的, 的, P代码, 的, 的, 输出, 输入, 的, 的, 保存, 动作, 的, 的, 的, 的, 的, 的, 的, 的, 的, 移动, 的, mouseMove, 上展宽, 的, mouseMove, 下展宽, 的, mouseMove, 左展宽, 的, mouseMove, 右展宽, 的, mouseMove, 左上展宽, 的, mouseMove, 左下展宽, 的, mouseMove, 右上展宽, 的, mouseMove, 右下展宽, 的, mouseMove, HTML, 的, 的, 输出, 输入, 的, 的, 的, 的, 的, 的, 的, 的, 起点, 尺寸, 面颜色, 线颜色, 线型, 线粗细, 文字, 字体, 按键位置, 按键位置, 按键位置, 20210427, 的, 的, 透镜动词, 20210430, 的, 的, 光路设计, 的, 求解, 的, M代码, 的, 公式, html, 20210608, 的, 20210826, 的, M函数, 实际摆放, 的, M函数, 计算, 的, 20210827, 的, 的, 画板, 20210828, 的, 20210829, 的, 的, 示意图, 20210915, 的, 的, PPT场景, 20210918, 的, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, 滤光片, 相机, 光斑, 透镜, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, 滤光片, 相机, 光斑, 透镜, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, y, 的, x, 的, 方向, 朝向, 空间点, 在, 滤光片, 相机, 光斑, 透镜, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, y, 的, x, 的, 样式, 方向, 朝向, 空间点, 在, y, 的, x, 的, 样式, 方向, 朝向, 空间点, 在, y, 的, x, 的, 样式, 方向, 朝向, 空间点, 在, y, 的, x, 的, 样式, 方向, 朝向, 空间点, 在, 滤光片, 相机, 光斑, 透镜, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, B_3, B_2, B_1, A_3, A_2, A_1, 焦点, 更新图形, 更新图形, 更新图形, 更新图形, 的, 物体, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 入射光线, 的, 出射光线, 的, 入射光线, 的, 出射光线, 的, 的, 的, 的, 的, 的, 的, 的, 20211103, 的, 20211105, 的, 
### 关联
#, 744#, #, #, #, #, #, #, #, #, 18#2, 18#3, 18#4, 18#5, 18#6, 18#7, 18#8, 18#9, #, #, 22#18, 22#19, #, #, 25#23, #, #, 28#26, #, #, 31#29, #, #, 34#32, #, #, 37#35, #, #, 40#38, #, #, 43#41, #, #, 46#44, #, #, 49#47, #, 59#25, 59#28, 59#31, 59#34, 59#37, 59#40, 59#43, 59#46, 59#49, #, #, 63#8, 63#9, #, #, 67#63, 67#64, #, 70#60, 70#67, #, #, #, 76#70, 76#71, 76#72, #, 79#8, 79#9, #, #, 83#79, 83#80, #, #, #, #, #, 92#85, 92#86, 92#87, 92#18, #, 107#22, 107#2, 107#59, 107#4, 107#5, 107#6, 107#7, 107#76, 107#83, 107#3, 107#84, 107#92, 107#8, 107#9, #, #, #, #, #, #, #, #, #, 124#108, 124#109, 124#110, 124#111, 124#112, 124#113, 124#114, 124#115, #, #, 128#124, 128#125, #, #, 131#129, #, #, 134#132, #, #, 137#135, #, #, 140#138, #, #, 143#141, #, #, 146#144, #, #, 149#147, #, #, 152#150, #, #, 155#153, #, 165#131, 165#134, 165#137, 165#140, 165#143, 165#146, 165#149, 165#152, 165#155, #, #, 169#114, 169#115, #, #, 173#169, 173#170, #, 176#166, 176#173, #, #, #, 182#176, 182#177, 182#178, #, 185#114, 185#115, #, #, 189#185, 189#186, #, #, #, #, #, 198#191, 198#192, 198#193, 198#124, #, 213#128, 213#108, 213#165, 213#110, 213#111, 213#112, 213#113, 213#182, 213#189, 213#109, 213#190, 213#198, 213#114, 213#115, #, #, #, #, #, #, #, #, #, 230#214, 230#215, 230#216, 230#217, 230#218, 230#219, 230#220, 230#221, #, #, 234#230, 234#231, #, #, 237#235, #, #, 240#238, #, #, 243#241, #, #, 246#244, #, #, 249#247, #, #, 252#250, #, #, 255#253, #, #, 258#256, #, #, 261#259, #, 271#237, 271#240, 271#243, 271#246, 271#249, 271#252, 271#255, 271#258, 271#261, #, #, 275#220, 275#221, #, #, 279#275, 279#276, #, 282#272, 282#279, #, #, #, 288#282, 288#283, 288#284, #, 291#220, 291#221, #, #, 295#291, 295#292, #, #, #, #, #, 304#297, 304#298, 304#299, 304#230, #, 319#234, 319#214, 319#271, 319#216, 319#217, 319#218, 319#219, 319#288, 319#295, 319#215, 319#296, 319#304, 319#220, 319#221, #, #, #, #, #, #, 330#320, 330#321, 330#322, 330#323, 330#324, #, 332#330, #, #, 335#333, #, #, 338#336, #, #, #, 342#340, #, 347#335, 347#338, 347#339, 347#342, #, #, #, #, 354#348, 354#349, 354#350, #, #, 357#355, #, #, 361#323, 361#324, #, 365#357, 365#358, 365#361, #, #, #, #, #, 374#367, 374#368, 374#369, 374#330, #, 388#332, 388#347, 388#354, 388#349, 388#350, 388#320, 388#321, 388#322, 388#365, 388#366, 388#374, 388#323, 388#324, #, #, #, #, #, #, 399#389, 399#390, 399#391, 399#392, 399#393, #, 401#399, #, #, 404#402, #, #, 407#405, #, #, #, 411#409, #, 416#404, 416#407, 416#408, 416#411, #, #, #, #, 423#417, 423#418, 423#419, #, #, 426#424, #, #, 430#392, 430#393, #, 434#426, 434#427, 434#430, #, #, #, #, #, 443#436, 443#437, 443#438, 443#399, #, 457#401, 457#416, 457#423, 457#418, 457#419, 457#389, 457#390, 457#391, 457#434, 457#435, 457#443, 457#392, 457#393, #, #, #, #, #, #, 468#458, 468#459, 468#460, 468#461, 468#462, #, 470#468, #, #, 473#471, #, #, 476#474, #, #, #, 480#478, #, 485#473, 485#476, 485#477, 485#480, #, #, #, #, 492#486, 492#487, 492#488, #, #, 495#493, #, #, 499#461, 499#462, #, 503#495, 503#496, 503#499, #, #, #, #, #, 512#505, 512#506, 512#507, 512#468, #, 526#470, 526#485, 526#492, 526#487, 526#488, 526#458, 526#459, 526#460, 526#503, 526#504, 526#512, 526#461, 526#462, #, #, #, #, #, #, 537#527, 537#528, 537#529, 537#530, 537#531, #, 539#537, #, #, 542#540, #, #, 545#543, #, #, #, 549#547, #, 554#542, 554#545, 554#546, 554#549, #, #, #, #, 561#555, 561#556, 561#557, #, #, 564#562, #, #, 568#530, 568#531, #, 572#564, 572#565, 572#568, #, #, #, #, #, 581#574, 581#575, 581#576, 581#537, #, 595#539, 595#554, 595#561, 595#556, 595#557, 595#527, 595#528, 595#529, 595#572, 595#573, 595#581, 595#530, 595#531, #, #, #, #, #, #, 606#596, 606#597, 606#598, 606#599, 606#600, #, 608#606, #, #, 611#609, #, #, 614#612, #, #, #, 618#616, #, 623#611, 623#614, 623#615, 623#618, #, #, #, #, 630#624, 630#625, 630#626, #, #, 633#631, #, #, 637#599, 637#600, #, 641#633, 641#634, 641#637, #, #, #, #, #, 650#643, 650#644, 650#645, 650#606, #, 664#608, 664#623, 664#630, 664#625, 664#626, 664#596, 664#597, 664#598, 664#641, 664#642, 664#650, 664#599, 664#600, #, #, #, #, #, #, 675#665, 675#666, 675#667, 675#668, 675#669, #, 677#675, #, #, 680#678, #, #, 683#681, #, #, #, 687#685, #, 692#680, 692#683, 692#684, 692#687, #, #, #, #, 699#693, 699#694, 699#695, #, #, 702#700, #, #, 706#668, 706#669, #, 710#702, 710#703, 710#706, #, #, #, #, #, 719#712, 719#713, 719#714, 719#675, #, 733#677, 733#692, 733#699, 733#694, 733#695, 733#665, 733#666, 733#667, 733#710, 733#711, 733#719, 733#668, 733#669, #, 744#107, 744#213, 744#319, 744#, 744#388, 744#457, 744#526, 744#595, 744#664, 744#733, #, #, 749#1, 749#744, 749#745, #, #, 753#0, 753#749, #, #, 754#753, 754#757, #, 753#759, #, 759#, #, 767#761, #, 767#763, #, 767#765, 744#, 759#769, #, 753#771, #, 771#773, #, 773#, #, 773#775, 775#840, 775#841, 775#790, 775#798, 775#799, 775#842, 775#843, 775#844, 775#814, 775#815, 775#810, 775#817, 775#832, #, 790#834, 790#795, 790#796, 790#797, #, #, #, #, #, 799#803, 799#806, 799#807, #, 803#840, 803#841, #, #, 807#809, #, #, 810#814, 810#815, 810#816, #, #, #, #, 817#822, 817#825, 817#826, 817#829, #, 822#824, #, #, #, 826#828, #, #, 829#831, #, #, 832#834, #, 834#840, 834#841, 834#842, 834#843, 834#844, #, #, #, #, #, #, #, #, 773#847, 847#912, 847#913, 847#862, 847#870, 847#871, 847#914, 847#915, 847#916, 847#886, 847#887, 847#882, 847#889, 847#904, #, 862#906, 862#867, 862#868, 862#869, #, #, #, #, #, 871#875, 871#878, 871#879, #, 875#912, 875#913, #, #, 879#881, #, #, 882#886, 882#887, 882#888, #, #, #, #, 889#894, 889#897, 889#898, 889#901, #, 894#896, #, #, #, 898#900, #, #, 901#903, #, #, 904#906, #, 906#912, 906#913, 906#914, 906#915, 906#916, #, #, #, #, #, #, #, #, #, 773#920, 920#985, 920#986, 920#935, 920#943, 920#944, 920#987, 920#988, 920#989, 920#959, 920#960, 920#955, 920#962, 920#977, #, 935#979, 935#940, 935#941, 935#942, #, #, #, #, #, 944#948, 944#951, 944#952, #, 948#985, 948#986, #, #, 952#954, #, #, 955#959, 955#960, 955#961, #, #, #, #, 962#967, 962#970, 962#971, 962#974, #, 967#969, #, #, #, 971#973, #, #, 974#976, #, #, 977#979, #, 979#985, 979#986, 979#987, 979#988, 979#989, #, #, #, #, #, #, #, #, 773#992, 992#1057, 992#1058, 992#1007, 992#1015, 992#1016, 992#1059, 992#1060, 992#1061, 992#1031, 992#1032, 992#1027, 992#1034, 992#1049, #, 1007#1051, 1007#1012, 1007#1013, 1007#1014, #, #, #, #, #, 1016#1020, 1016#1023, 1016#1024, #, 1020#1057, 1020#1058, #, #, 1024#1026, #, #, 1027#1031, 1027#1032, 1027#1033, #, #, #, #, 1034#1039, 1034#1042, 1034#1043, 1034#1046, #, 1039#1041, #, #, #, 1043#1045, #, #, 1046#1048, #, #, 1049#1051, #, 1051#1057, 1051#1058, 1051#1059, 1051#1060, 1051#1061, #, #, #, #, #, #, #, #, 773#1064, 1064#1129, 1064#1130, 1064#1079, 1064#1087, 1064#1088, 1064#1131, 1064#1132, 1064#1133, 1064#1103, 1064#1104, 1064#1099, 1064#1106, 1064#1121, #, 1079#1123, 1079#1084, 1079#1085, 1079#1086, #, #, #, #, #, 1088#1092, 1088#1095, 1088#1096, #, 1092#1129, 1092#1130, #, #, 1096#1098, #, #, 1099#1103, 1099#1104, 1099#1105, #, #, #, #, 1106#1111, 1106#1114, 1106#1115, 1106#1118, #, 1111#1113, #, #, #, 1115#1117, #, #, 1118#1120, #, #, 1121#1123, #, 1123#1129, 1123#1130, 1123#1131, 1123#1132, 1123#1133, #, #, #, #, #, #, #, #, 773#1136, 1136#1201, 1136#1202, 1136#1151, 1136#1159, 1136#1160, 1136#1203, 1136#1204, 1136#1205, 1136#1175, 1136#1176, 1136#1171, 1136#1178, 1136#1193, #, 1151#1195, 1151#1156, 1151#1157, 1151#1158, #, #, #, #, #, 1160#1164, 1160#1167, 1160#1168, #, 1164#1201, 1164#1202, #, #, 1168#1170, #, #, 1171#1175, 1171#1176, 1171#1177, #, #, #, #, 1178#1183, 1178#1186, 1178#1187, 1178#1190, #, 1183#1185, #, #, #, 1187#1189, #, #, 1190#1192, #, #, 1193#1195, #, 1195#1201, 1195#1202, 1195#1203, 1195#1204, 1195#1205, #, #, #, #, #, #, #, #, 773#1208, 1208#1307, 1208#1308, 1208#1224, 1208#1232, 1208#1313, 1208#1233, 1208#1240, 1208#1309, 1208#1310, 1208#1311, 1208#1312, 1208#1257, 1208#1314, 1208#1294, #, 1224#1298, 1224#1229, 1224#1230, 1224#1231, #, #, #, #, #, 1233#1236, 1233#1237, #, #, 1237#1307, 1237#1308, #, 1240#1244, 1240#1245, 1240#1246, #, #, #, 1246#1249, 1246#1256, #, 1249#1252, 1249#1253, #, #, 1253#1307, 1253#1308, #, #, 1257#1267, 1257#1270, 1257#1273, 1257#1276, 1257#1279, 1257#1282, 1257#1285, 1257#1288, 1257#1291, #, 1267#1269, #, #, 1270#1272, #, #, 1273#1275, #, #, 1276#1278, #, #, 1279#1281, #, #, 1282#1284, #, #, 1285#1287, #, #, 1288#1290, #, #, 1291#1293, #, #, 1294#1297, 1294#1298, #, #, 1298#1307, 1298#1308, 1298#1309, 1298#1310, 1298#1311, 1298#1312, 1298#1313, 1298#1314, #, #, #, #, #, #, #, #, #, #, #, #, #, 773#1319, 1319#1418, 1319#1419, 1319#1335, 1319#1343, 1319#1424, 1319#1344, 1319#1351, 1319#1420, 1319#1421, 1319#1422, 1319#1423, 1319#1368, 1319#1425, 1319#1405, #, 1335#1409, 1335#1340, 1335#1341, 1335#1342, #, #, #, #, #, 1344#1347, 1344#1348, #, #, 1348#1418, 1348#1419, #, 1351#1355, 1351#1356, 1351#1357, #, #, #, 1357#1360, 1357#1367, #, 1360#1363, 1360#1364, #, #, 1364#1418, 1364#1419, #, #, 1368#1378, 1368#1381, 1368#1384, 1368#1387, 1368#1390, 1368#1393, 1368#1396, 1368#1399, 1368#1402, #, 1378#1380, #, #, 1381#1383, #, #, 1384#1386, #, #, 1387#1389, #, #, 1390#1392, #, #, 1393#1395, #, #, 1396#1398, #, #, 1399#1401, #, #, 1402#1404, #, #, 1405#1408, 1405#1409, #, #, 1409#1418, 1409#1419, 1409#1420, 1409#1421, 1409#1422, 1409#1423, 1409#1424, 1409#1425, #, #, #, #, #, #, #, #, #, #, #, 773#1428, 1428#1527, 1428#1528, 1428#1444, 1428#1452, 1428#1533, 1428#1453, 1428#1460, 1428#1529, 1428#1530, 1428#1531, 1428#1532, 1428#1477, 1428#1534, 1428#1514, #, 1444#1518, 1444#1449, 1444#1450, 1444#1451, #, #, #, #, #, 1453#1456, 1453#1457, #, #, 1457#1527, 1457#1528, #, 1460#1464, 1460#1465, 1460#1466, #, #, #, 1466#1469, 1466#1476, #, 1469#1472, 1469#1473, #, #, 1473#1527, 1473#1528, #, #, 1477#1487, 1477#1490, 1477#1493, 1477#1496, 1477#1499, 1477#1502, 1477#1505, 1477#1508, 1477#1511, #, 1487#1489, #, #, 1490#1492, #, #, 1493#1495, #, #, 1496#1498, #, #, 1499#1501, #, #, 1502#1504, #, #, 1505#1507, #, #, 1508#1510, #, #, 1511#1513, #, #, 1514#1517, 1514#1518, #, #, 1518#1527, 1518#1528, 1518#1529, 1518#1530, 1518#1531, 1518#1532, 1518#1533, 1518#1534, #, #, #, #, #, #, #, #, #, #, #, 773#1537, 1537#1636, 1537#1637, 1537#1553, 1537#1561, 1537#1642, 1537#1562, 1537#1569, 1537#1638, 1537#1639, 1537#1640, 1537#1641, 1537#1586, 1537#1643, 1537#1623, #, 1553#1627, 1553#1558, 1553#1559, 1553#1560, #, #, #, #, #, 1562#1565, 1562#1566, #, #, 1566#1636, 1566#1637, #, 1569#1573, 1569#1574, 1569#1575, #, #, #, 1575#1578, 1575#1585, #, 1578#1581, 1578#1582, #, #, 1582#1636, 1582#1637, #, #, 1586#1596, 1586#1599, 1586#1602, 1586#1605, 1586#1608, 1586#1611, 1586#1614, 1586#1617, 1586#1620, #, 1596#1598, #, #, 1599#1601, #, #, 1602#1604, #, #, 1605#1607, #, #, 1608#1610, #, #, 1611#1613, #, #, 1614#1616, #, #, 1617#1619, #, #, 1620#1622, #, #, 1623#1626, 1623#1627, #, #, 1627#1636, 1627#1637, 1627#1638, 1627#1639, 1627#1640, 1627#1641, 1627#1642, 1627#1643, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 773#1649, 1649#1748, 1649#1749, 1649#1665, 1649#1673, 1649#1754, 1649#1674, 1649#1681, 1649#1750, 1649#1751, 1649#1752, 1649#1753, 1649#1698, 1649#1755, 1649#1735, #, 1665#1739, 1665#1670, 1665#1671, 1665#1672, #, #, #, #, #, 1674#1677, 1674#1678, #, #, 1678#1748, 1678#1749, #, 1681#1685, 1681#1686, 1681#1687, #, #, #, 1687#1690, 1687#1697, #, 1690#1693, 1690#1694, #, #, 1694#1748, 1694#1749, #, #, 1698#1708, 1698#1711, 1698#1714, 1698#1717, 1698#1720, 1698#1723, 1698#1726, 1698#1729, 1698#1732, #, 1708#1710, #, #, 1711#1713, #, #, 1714#1716, #, #, 1717#1719, #, #, 1720#1722, #, #, 1723#1725, #, #, 1726#1728, #, #, 1729#1731, #, #, 1732#1734, #, #, 1735#1738, 1735#1739, #, #, 1739#1748, 1739#1749, 1739#1750, 1739#1751, 1739#1752, 1739#1753, 1739#1754, 1739#1755, #, #, #, #, #, #, #, #, #, #, #, 773#1758, 1758#1857, 1758#1858, 1758#1774, 1758#1782, 1758#1863, 1758#1783, 1758#1790, 1758#1859, 1758#1860, 1758#1861, 1758#1862, 1758#1807, 1758#1864, 1758#1844, #, 1774#1848, 1774#1779, 1774#1780, 1774#1781, #, #, #, #, #, 1783#1786, 1783#1787, #, #, 1787#1857, 1787#1858, #, 1790#1794, 1790#1795, 1790#1796, #, #, #, 1796#1799, 1796#1806, #, 1799#1802, 1799#1803, #, #, 1803#1857, 1803#1858, #, #, 1807#1817, 1807#1820, 1807#1823, 1807#1826, 1807#1829, 1807#1832, 1807#1835, 1807#1838, 1807#1841, #, 1817#1819, #, #, 1820#1822, #, #, 1823#1825, #, #, 1826#1828, #, #, 1829#1831, #, #, 1832#1834, #, #, 1835#1837, #, #, 1838#1840, #, #, 1841#1843, #, #, 1844#1847, 1844#1848, #, #, 1848#1857, 1848#1858, 1848#1859, 1848#1860, 1848#1861, 1848#1862, 1848#1863, 1848#1864, #, #, #, #, #, #, #, #, #, #, #, 1873#1867, #, 1873#1869, #, 1873#1871, 773#, #, 757#1874, #, 757#1876, 753#1879, #, 1879#, 1879#1882, #, #, 757#1883, 753#1886, #, 753#1888, #, 1888#, #, 757#1890, #, 757#1892, 753#1895, #, 1895#1897, #, 1897#1899, #, 1899#1963, 1899#1964, 1899#1913, 1899#1921, 1899#1922, 1899#1965, 1899#1966, 1899#1967, 1899#1937, 1899#1938, 1899#1933, 1899#1940, 1899#1955, #, 1913#1957, 1913#1918, 1913#1919, 1913#1920, #, #, #, #, #, 1922#1926, 1922#1929, 1922#1930, #, 1926#1963, 1926#1964, #, #, 1930#1932, #, #, 1933#1937, 1933#1938, 1933#1939, #, #, #, #, 1940#1945, 1940#1948, 1940#1949, 1940#1952, #, 1945#1947, #, #, #, 1949#1951, #, #, 1952#1954, #, #, 1955#1957, #, 1957#1963, 1957#1964, 1957#1965, 1957#1966, 1957#1967, #, #, #, #, #, #, #, 1897#1971, #, 1897#1973, #, 1897#1975, #, 1971#2039, 1971#2040, 1971#1989, 1971#1997, 1971#1998, 1971#2041, 1971#2042, 1971#2043, 1971#2013, 1971#2014, 1971#2009, 1971#2016, 1971#2031, #, 1989#2033, 1989#1994, 1989#1995, 1989#1996, #, #, #, #, #, 1998#2002, 1998#2005, 1998#2006, #, 2002#2039, 2002#2040, #, #, 2006#2008, #, #, 2009#2013, 2009#2014, 2009#2015, #, #, #, #, 2016#2021, 2016#2024, 2016#2025, 2016#2028, #, 2021#2023, #, #, #, 2025#2027, #, #, 2028#2030, #, #, 2031#2033, #, 2033#2039, 2033#2040, 2033#2041, 2033#2042, 2033#2043, #, #, #, #, #, #, #, #, #, 2053#2047, #, 2053#2049, #, 2053#2051, 1897#, #, #, #, #, #, #, #, #, #, 1897#2064, #, 1897#2066, #, 1897#2068, #, 2064#2132, 2064#2133, 2064#2082, 2064#2090, 2064#2091, 2064#2134, 2064#2135, 2064#2136, 2064#2106, 2064#2107, 2064#2102, 2064#2109, 2064#2124, #, 2082#2126, 2082#2087, 2082#2088, 2082#2089, #, #, #, #, #, 2091#2095, 2091#2098, 2091#2099, #, 2095#2132, 2095#2133, #, #, 2099#2101, #, #, 2102#2106, 2102#2107, 2102#2108, #, #, #, #, 2109#2114, 2109#2117, 2109#2118, 2109#2121, #, 2114#2116, #, #, #, 2118#2120, #, #, 2121#2123, #, #, 2124#2126, #, 2126#2132, 2126#2133, 2126#2134, 2126#2135, 2126#2136, #, #, #, #, #, #, #, #, 2066#2203, 2066#2204, 2066#2153, 2066#2161, 2066#2162, 2066#2205, 2066#2206, 2066#2207, 2066#2177, 2066#2178, 2066#2173, 2066#2180, 2066#2195, #, 2153#2197, 2153#2158, 2153#2159, 2153#2160, #, #, #, #, #, 2162#2166, 2162#2169, 2162#2170, #, 2166#2203, 2166#2204, #, #, 2170#2172, #, #, 2173#2177, 2173#2178, 2173#2179, #, #, #, #, 2180#2185, 2180#2188, 2180#2189, 2180#2192, #, 2185#2187, #, #, #, 2189#2191, #, #, 2192#2194, #, #, 2195#2197, #, 2197#2203, 2197#2204, 2197#2205, 2197#2206, 2197#2207, #, #, #, #, #, #, #, 2068#2273, 2068#2274, 2068#2223, 2068#2231, 2068#2232, 2068#2275, 2068#2276, 2068#2277, 2068#2247, 2068#2248, 2068#2243, 2068#2250, 2068#2265, #, 2223#2267, 2223#2228, 2223#2229, 2223#2230, #, #, #, #, #, 2232#2236, 2232#2239, 2232#2240, #, 2236#2273, 2236#2274, #, #, 2240#2242, #, #, 2243#2247, 2243#2248, 2243#2249, #, #, #, #, 2250#2255, 2250#2258, 2250#2259, 2250#2262, #, 2255#2257, #, #, #, 2259#2261, #, #, 2262#2264, #, #, 2265#2267, #, 2267#2273, 2267#2274, 2267#2275, 2267#2276, 2267#2277, #, #, #, #, #, #, 1897#2280, 2132#2203, #, #, #, #, #, #, #, 1897#2289, 2133#2273, 1897#2291, 2204#2274, 1973#2355, 1973#2356, 1973#2305, 1973#2313, 1973#2314, 1973#2357, 1973#2358, 1973#2359, 1973#2329, 1973#2330, 1973#2325, 1973#2332, 1973#2347, #, 2305#2349, 2305#2310, 2305#2311, 2305#2312, #, #, #, #, #, 2314#2318, 2314#2321, 2314#2322, #, 2318#2355, 2318#2356, #, #, 2322#2324, #, #, 2325#2329, 2325#2330, 2325#2331, #, #, #, #, 2332#2337, 2332#2340, 2332#2341, 2332#2344, #, 2337#2339, #, #, #, 2341#2343, #, #, 2344#2346, #, #, 2347#2349, #, 2349#2355, 2349#2356, 2349#2357, 2349#2358, 2349#2359, #, #, #, #, #, #, 1975#2424, 1975#2425, 1975#2374, 1975#2382, 1975#2383, 1975#2426, 1975#2427, 1975#2428, 1975#2398, 1975#2399, 1975#2394, 1975#2401, 1975#2416, #, 2374#2418, 2374#2379, 2374#2380, 2374#2381, #, #, #, #, #, 2383#2387, 2383#2390, 2383#2391, #, 2387#2424, 2387#2425, #, #, 2391#2393, #, #, 2394#2398, 2394#2399, 2394#2400, #, #, #, #, 2401#2406, 2401#2409, 2401#2410, 2401#2413, #, 2406#2408, #, #, #, 2410#2412, #, #, 2413#2415, #, #, 2416#2418, #, 2418#2424, 2418#2425, 2418#2426, 2418#2427, 2418#2428, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 1897#2439, 2425#2204, 1897#2441, 2356#2132, #, #, #, #, 1897#2445, 2445#2544, 2445#2545, 2445#2461, 2445#2469, 2445#2550, 2445#2470, 2445#2477, 2445#2546, 2445#2547, 2445#2548, 2445#2549, 2445#2494, 2445#2551, 2445#2531, #, 2461#2535, 2461#2466, 2461#2467, 2461#2468, #, #, #, #, #, 2470#2473, 2470#2474, #, #, 2474#2544, 2474#2545, #, 2477#2481, 2477#2482, 2477#2483, #, #, #, 2483#2486, 2483#2493, #, 2486#2489, 2486#2490, #, #, 2490#2544, 2490#2545, #, #, 2494#2504, 2494#2507, 2494#2510, 2494#2513, 2494#2516, 2494#2519, 2494#2522, 2494#2525, 2494#2528, #, 2504#2506, #, #, 2507#2509, #, #, 2510#2512, #, #, 2513#2515, #, #, 2516#2518, #, #, 2519#2521, #, #, 2522#2524, #, #, 2525#2527, #, #, 2528#2530, #, #, 2531#2534, 2531#2535, #, #, 2535#2544, 2535#2545, 2535#2546, 2535#2547, 2535#2548, 2535#2549, 2535#2550, 2535#2551, #, #, #, #, #, #, #, #, #, #, #, #, 1897#2555, 2555#2654, 2555#2655, 2555#2571, 2555#2579, 2555#2660, 2555#2580, 2555#2587, 2555#2656, 2555#2657, 2555#2658, 2555#2659, 2555#2604, 2555#2661, 2555#2641, #, 2571#2645, 2571#2576, 2571#2577, 2571#2578, #, #, #, #, #, 2580#2583, 2580#2584, #, #, 2584#2654, 2584#2655, #, 2587#2591, 2587#2592, 2587#2593, #, #, #, 2593#2596, 2593#2603, #, 2596#2599, 2596#2600, #, #, 2600#2654, 2600#2655, #, #, 2604#2614, 2604#2617, 2604#2620, 2604#2623, 2604#2626, 2604#2629, 2604#2632, 2604#2635, 2604#2638, #, 2614#2616, #, #, 2617#2619, #, #, 2620#2622, #, #, 2623#2625, #, #, 2626#2628, #, #, 2629#2631, #, #, 2632#2634, #, #, 2635#2637, #, #, 2638#2640, #, #, 2641#2644, 2641#2645, #, #, 2645#2654, 2645#2655, 2645#2656, 2645#2657, 2645#2658, 2645#2659, 2645#2660, 2645#2661, #, #, #, #, #, #, #, #, #, #, #, #, 1897#2665, 2665#2764, 2665#2765, 2665#2681, 2665#2689, 2665#2770, 2665#2690, 2665#2697, 2665#2766, 2665#2767, 2665#2768, 2665#2769, 2665#2714, 2665#2771, 2665#2751, #, 2681#2755, 2681#2686, 2681#2687, 2681#2688, #, #, #, #, #, 2690#2693, 2690#2694, #, #, 2694#2764, 2694#2765, #, 2697#2701, 2697#2702, 2697#2703, #, #, #, 2703#2706, 2703#2713, #, 2706#2709, 2706#2710, #, #, 2710#2764, 2710#2765, #, #, 2714#2724, 2714#2727, 2714#2730, 2714#2733, 2714#2736, 2714#2739, 2714#2742, 2714#2745, 2714#2748, #, 2724#2726, #, #, 2727#2729, #, #, 2730#2732, #, #, 2733#2735, #, #, 2736#2738, #, #, 2739#2741, #, #, 2742#2744, #, #, 2745#2747, #, #, 2748#2750, #, #, 2751#2754, 2751#2755, #, #, 2755#2764, 2755#2765, 2755#2766, 2755#2767, 2755#2768, 2755#2769, 2755#2770, 2755#2771, #, #, #, #, #, #, #, #, #, #, #, #, 757#2775, 753#2778, #, #, 757#2779, 753#2782, #, 2778#2784, #, 2784#2786, #, 2784#2788, #, 2788#, #, 757#2790, #, 757#2792, 2795#, #, 2798#2795, 2798#, #, 1895#2798, #, 757#2800, 1895#2803, 1897#, #, 757#2804, #, 757#2806, 753#2809, #, #, 757#2810, 753#2813, #, #, 757#2814, #, 2848#2816, #, 2848#2818, #, 2848#2820, #, 2848#2822, #, 2849#2824, #, 2849#2826, #, 2849#2828, #, 2849#2830, #, 2850#2832, #, 2850#2834, #, 2850#2836, #, 2850#2838, #, 2851#2840, #, 2851#2842, #, 2851#2844, #, 2851#2846, #, #, #, #, #, 2884#2852, #, 2884#2854, #, 2884#2856, #, 2884#2858, #, 2885#2860, #, 2885#2862, #, 2885#2864, #, 2885#2866, #, 2886#2868, #, 2886#2870, #, 2886#2872, #, 2886#2874, #, 2887#2876, #, 2887#2878, #, 2887#2880, #, 2887#2882, #, #, #, #, #, 2920#2888, #, 2920#2890, #, 2920#2892, #, 2920#2894, #, 2921#2896, #, 2921#2898, #, 2921#2900, #, 2921#2902, #, 2922#2904, #, 2922#2906, #, 2922#2908, #, 2922#2910, #, 2923#2912, #, 2923#2914, #, 2923#2916, #, 2923#2918, #, #, #, #, 2809#2964, 2809#2965, 2809#2966, 2809#2967, 2809#2968, 2809#2969, 2809#2970, 2809#2971, 2809#2972, 2809#2973, 2809#2974, 2809#2975, 2809#2976, 2809#2977, 2809#2978, 2809#2979, 2809#2980, 2809#2981, 2809#2982, 2809#2983, 2809#2984, 2809#2985, 2809#2986, 2809#2987, 2809#2988, 2809#2989, 2809#2990, 2809#2991, 2809#2992, 2809#2993, 2809#2994, 2809#2995, 2809#2996, 2809#2997, 2809#2998, 2809#2999, 2809#3000, 2809#3001, 2809#3002, 2809#3003, #, 3000#2964, #, 3000#2966, 3000#, #, 3000#2969, #, 3000#2971, #, 3001#2973, #, 3001#2975, 3001#, #, 3001#2978, #, 3001#2980, #, 3002#2982, #, 3002#2984, 3002#, #, 3002#2987, #, 3002#2989, #, 3003#2991, #, 3003#2993, 3003#, #, 3003#2996, #, 3003#2998, #, #, #, #, 2809#3025, 2809#3026, 2809#3027, 2809#3028, 2809#3029, 2809#3030, 2809#3031, 2809#3032, 2809#3033, 2809#3034, 2809#3035, 2809#3036, 2809#3037, 2809#3038, 2809#3039, 2809#3040, 2809#3041, 2809#3042, 2809#3043, 2809#3044, 2809#3045, #, 3039#3025, #, 3040#3027, #, 3041#3029, #, 3042#3031, #, 3043#3033, #, 3044#3035, #, 3045#3037, #, #, #, #, #, #, #, #3003, #, #, #, 2809#3051, 2809#, 2809#3056, 2809#3057, 2809#3058, 2809#3059, 3051#3001, 3051#3000, 3051#3002, 3051#3003, 2809#3066, 2809#3067, 2809#3068, 2809#3069, 2809#3070, 2809#3071, 3051#3039, 3051#3040, 3051#3041, 3051#3042, 3051#3043, 3051#3044, 2809#3073, 3035#3033, 2809#3075, 3033#3031, 2809#3077, 3029#3027, 2809#3079, 3027#3025, 2809#3084, 2809#3085, 2809#3086, 2809#3087, 3051#3073, 3051#3075, 3051#3077, 3051#3079, #, 757#3088, #, 757#3090, 
### 内容
#0, 17:
文档\物理问题\透镜系统.ftxt
## end
#2, 2:
20
## end
#3, 1:
u
## end
#4, 1:
1
## end
#5, 8:
DashLine
## end
#6, 11:
255,255,255
## end
#7, 4:
None
## end
#8, 37:
42.86246729709768, 41.841358731885514
## end
#9, 38:
-163.1964069528724, 14.520613960138132
## end
#18, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#19, 14:
+[返回目录]
+[内容]

## end
#22, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#23, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#25, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#26, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#28, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#29, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#31, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#32, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#34, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#35, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#37, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#38, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#40, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#41, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#43, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#44, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#46, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#47, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#49, 27:
+[返回目录](,移动)

mouseMove:...
## end
#59, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#60, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#63, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#64, 14:
+[返回目录]
+[内容]

## end
#67, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#70, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#71, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#72, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#76, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#79, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#80, 14:
+[返回目录]
+[内容]

## end
#83, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#84, 2:
矩形
## end
#85, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#86, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#92, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#107, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#108, 2:
20
## end
#109, 1:
v
## end
#110, 1:
1
## end
#111, 8:
DashLine
## end
#112, 11:
255,255,255
## end
#113, 4:
None
## end
#114, 38:
42.295846941993744, 43.921173971016806
## end
#115, 38:
112.21355461595273, 14.782815572477926
## end
#124, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#125, 14:
+[返回目录]
+[内容]

## end
#128, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#129, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#131, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#132, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#134, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#135, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#137, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#138, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#140, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#141, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#143, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#144, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#146, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#147, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#149, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#150, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#152, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#153, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#155, 27:
+[返回目录](,移动)

mouseMove:...
## end
#165, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#166, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#169, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#170, 14:
+[返回目录]
+[内容]

## end
#173, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#176, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#177, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#178, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#182, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#185, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#186, 14:
+[返回目录]
+[内容]

## end
#189, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#190, 2:
矩形
## end
#191, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#192, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#198, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#213, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#214, 2:
20
## end
#215, 1:
f
## end
#216, 1:
1
## end
#217, 8:
DashLine
## end
#218, 11:
255,255,255
## end
#219, 4:
None
## end
#220, 35:
40.5321911956565, 41.99608643478781
## end
#221, 38:
-7.093932416663341, 12.972272355084023
## end
#230, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#231, 14:
+[返回目录]
+[内容]

## end
#234, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#235, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#237, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#238, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#240, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#241, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#243, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#244, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#246, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#247, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#249, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#250, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#252, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#253, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#255, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#256, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#258, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#259, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#261, 27:
+[返回目录](,移动)

mouseMove:...
## end
#271, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#272, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#275, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#276, 14:
+[返回目录]
+[内容]

## end
#279, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#282, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#283, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#284, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#288, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#291, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#292, 14:
+[返回目录]
+[内容]

## end
#295, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#296, 2:
矩形
## end
#297, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#298, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#304, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#319, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#320, 1:
1
## end
#321, 8:
DashLine
## end
#322, 5:
0,0,0
## end
#323, 10:
-96.0, 8.0
## end
#324, 11:
71.0, -30.0
## end
#330, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#332, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#333, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#335, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#336, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#338, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#339, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#340, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#342, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#347, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#348, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#349, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#350, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#354, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#355, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#357, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#358, 14:
+[返回目录]
+[内容]

## end
#361, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#365, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#366, 2:
直线
## end
#367, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#368, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#374, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#388, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#389, 1:
1
## end
#390, 8:
DashLine
## end
#391, 5:
0,0,0
## end
#392, 11:
67.0, -30.0
## end
#393, 12:
338.0, -31.0
## end
#399, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#401, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#402, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#404, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#405, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#407, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#408, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#409, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#411, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#416, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#417, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#418, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#419, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#423, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#424, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#426, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#427, 14:
+[返回目录]
+[内容]

## end
#430, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#434, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#435, 2:
直线
## end
#436, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#437, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#443, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#457, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#458, 1:
1
## end
#459, 8:
DashLine
## end
#460, 5:
0,0,0
## end
#461, 12:
-372.0, 10.0
## end
#462, 11:
70.0, -29.0
## end
#468, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#470, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#471, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#473, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#474, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#476, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#477, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#478, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#480, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#485, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#486, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#487, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#488, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#492, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#493, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#495, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#496, 14:
+[返回目录]
+[内容]

## end
#499, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#503, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#504, 2:
直线
## end
#505, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#506, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#512, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#526, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#527, 1:
1
## end
#528, 8:
DashLine
## end
#529, 5:
0,0,0
## end
#530, 11:
68.0, -29.0
## end
#531, 11:
275.0, 10.0
## end
#537, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#539, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#540, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#542, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#543, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#545, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#546, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#547, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#549, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#554, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#555, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#556, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#557, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#561, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#562, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#564, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#565, 14:
+[返回目录]
+[内容]

## end
#568, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#572, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#573, 2:
直线
## end
#574, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#575, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#581, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#595, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#596, 1:
1
## end
#597, 8:
DashLine
## end
#598, 5:
0,0,0
## end
#599, 11:
69.0, -44.0
## end
#600, 10:
69.0, 75.0
## end
#606, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#608, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#609, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#611, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#612, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#614, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#615, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#616, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#618, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#623, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#624, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#625, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#626, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#630, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#631, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#633, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#634, 14:
+[返回目录]
+[内容]

## end
#637, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#641, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#642, 2:
直线
## end
#643, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#644, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#650, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#664, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#665, 1:
1
## end
#666, 8:
DashLine
## end
#667, 5:
0,0,0
## end
#668, 11:
-401.0, 9.0
## end
#669, 11:
314.0, 10.0
## end
#675, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#677, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#678, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#680, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#681, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#683, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#684, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#685, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#687, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#692, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#693, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#694, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#695, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#699, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#700, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#702, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#703, 14:
+[返回目录]
+[内容]

## end
#706, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#710, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#711, 2:
直线
## end
#712, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#713, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#719, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#733, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#745, 58:
https://en.wikipedia.org/wiki/Ray_transfer_matrix_analysis
## end
#749, 839:
<!--
+[H函数](,透镜的传输矩阵)

参考::https://en.wikipedia.org/wiki/Ray_transfer_matrix_analysis
-->

The thin lens equation is,
$$
\frac{1}{u}+\frac{1}{v}=\frac{1}{f}
$$
%场景
<br>
The ray transfer matrix for a thin lens with the focus length \(f\) is,
$$
\begin{pmatrix}
1  &  0
\\
-\frac{1}{f} & 1
\end{pmatrix}
$$
To verify it's correct, the input vector is, 
$$
A_i=
\begin{pmatrix}
u \theta
\\
\theta
\end{pmatrix}
$$
The output vector is,
$$
A_o=
\begin{pmatrix}
1  &  0
\\
-\frac{1}{f} & 1
\end{pmatrix}

\begin{pmatrix}
u \theta
\\
\theta
\end{pmatrix}

=
\begin{pmatrix}
u \theta
\\
\theta-\frac{u}{f}\theta
\end{pmatrix}
$$

The image distance \(u\) is,
$$
v=\frac{u\theta}{\theta-\frac{u}{f}\theta}=\frac{fu}{f-u}
\\
\Rightarrow
\frac{1}{f}=\frac{1}{u}-\frac{1}{v}
$$


<!--
+[H函数](,透镜的传输矩阵)

场景(画板):
+画板(场景,)
场景->画板(场景,)
+[画板](+新画板,场景)
-->
## end
#750, 4:
透镜系统
## end
#753, 517:
+[返回目录](,透镜系统)
地址::文档\物理问题\透镜系统.ftxt
+[导出结构](,透镜系统)

透镜动词:...
+[设置动词](,透镜动词)

网页画板::文档\S应用\网页画板.ftxt
+[打开文件](+新窗口,网页画板)
PPT场景::文档\S应用\PPT.ftxt
+[打开文件](+新窗口,PPT场景)


透镜是可以用传输矩阵来描述的. 先看一下关系. 
透镜的传输矩阵:...
+[H函数](,透镜的传输矩阵)
透镜成像(M函数):...
+[M函数](,透镜成像)

双透镜系统成像公式:...
+[H函数](,双透镜系统成像公式)
成像系统设计_1D(M函数):...
成像系统设计_2D(M函数):...
+[M函数](,成像系统设计_1D)
+[M函数](,成像系统设计_2D)

透镜系统还需要考虑透镜的Diameter. 
相机在出口20 inches 或者 50 inches的位置. 
QuantaRay长度为80.5 inches. 

单透镜系统:...
+[H函数](,单透镜系统)
示意图:...

光路设计::文档\S应用\绘制光路图.ftxt
+[打开文件](+新窗口,光路设计)
## end
#754, 49:
透镜系统:...
创建于 20210308

节点数目统计::
+[设置结构](,节点数目统计)

## end
#759, 550:
%{
+[返回目录](,透镜成像)

+[M函数](,透镜成像)

公式方案:...
%}
clf

u=800;
f1=250;
L=1000;
f2=100;
v=200;
y0=0;

N=10;
D=25;
Dtheta1=-0.005;
Dtheta2=0;

% matrix
T1=[1,u;0,1];
T2=[1,0;-1/f1,1];
T3=[1,L;0,1];
T4=[1,0;-1/f2,1];
T5=[1,v;0,1];

% vector
ray1=[y0*ones(1,N);linspace(Dtheta1,Dtheta2,N)];
ray2=T1*ray1;
ray3=T2*ray2;
ray4=T3*ray3;
ray5=T4*ray4;
ray6=T5*ray5;

% points
X=cumsum([0,u,0,L,0,v]);
Y=[ray1(1,:);ray2(1,:);ray3(1,:);ray4(1,:);ray5(1,:);ray6(1,:)];


% plot
hold on
plot(X,Y','b')
plot([X;X],[D/2;-D/2]*ones(1,length(X)),'k')


%{
+[M函数](,透镜成像)
%}
## end
#761, 1:
1
## end
#763, 8:
728, 233
## end
#765, 8:
0.0, 0.0
## end
#769, 390:
%{
+[返回目录](,透镜成像)

+[M函数](,透镜成像)

公式方案:...
+[修改内容](透镜成像,公式方案)
%}
clf

D=25;
f=250; 
u=1000;

v=f*u/(f-u);


pt_obj=[u,0];
pt_img=[v,0];

hold on
plot([pt_obj(1),pt_img(1)],[pt_obj(2),pt_img(2)],'k--');
plot([pt_obj(1),0,pt_img(1)],[pt_obj(2),D/2,pt_img(2)],'k-');
plot([pt_obj(1),0,pt_img(1)],[pt_obj(2),-D/2,pt_img(2)],'k-');
plot([0,0],[D/2,-D/2],'k-')
plot(0,D/2,'k^')
plot(0,-D/2,'kv')

## end
#771, 711:
<!--
+[H函数](,双透镜系统成像公式)

场景(画板)::
+[画板](+双透镜,场景)
-->

Calculate the object distance and the magnification of the two lens system,
%场景
<br>
The basic formula,
$$
\frac{1}{f}=\frac{1}{u}+\frac{1}{v}
$$
The distance between two lens is denoted as \(D\). Then we have, 
$$
\begin{cases}
\frac{1}{f_1}=\frac{1}{u_1}+\frac{1}{v_1}
\\
D=u_1+v_2
\\
\frac{1}{f_2}=\frac{1}{u_2}+\frac{1}{v_2}
\end{cases}
$$
In equations, \(v_1\) is given and \(D\) is given. We want to know \(u_1\), \(v_2\) and \(u_2\).<br>
$$
u_1=\frac{f_1v_1}{v_1-f_1}
\\
v_2=D-u_1
\\
u_2=\frac{f_2v_2}{v_2-f_2}
$$
The magnification is,
$$
M=\frac{v_2}{u_2}\cdot\frac{v_1}{u_1}
=
\frac{v_2-f_2}{f_2}
\frac{v_1-f_1}{f_1}
$$

<!--
+[H函数](,双透镜系统成像公式)
-->
## end
#775, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#790, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#796, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#797, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#798, 2:
直线
## end
#799, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#803, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#806, 14:
+[返回目录]
+[内容]

## end
#807, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#809, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#810, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#814, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#815, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#816, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#817, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#822, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#824, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#825, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#826, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#828, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#829, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#831, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#832, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#834, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#840, 11:
397.0, -2.0
## end
#841, 12:
-407.0, -3.0
## end
#842, 5:
0,0,0
## end
#843, 8:
DashLine
## end
#844, 1:
1
## end
#845, 2:
起点
## end
#846, 2:
终点
## end
#847, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#862, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#868, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#869, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#870, 2:
直线
## end
#871, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#875, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#878, 14:
+[返回目录]
+[内容]

## end
#879, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#881, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#882, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#886, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#887, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#888, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#889, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#894, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#896, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#897, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#898, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#900, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#901, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#903, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#904, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#906, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#912, 11:
173.0, 53.0
## end
#913, 12:
173.0, -65.0
## end
#914, 5:
0,0,0
## end
#915, 8:
DashLine
## end
#916, 1:
1
## end
#917, 2:
起点
## end
#918, 2:
起点
## end
#919, 2:
终点
## end
#920, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#935, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#941, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#942, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#943, 2:
直线
## end
#944, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#948, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#951, 14:
+[返回目录]
+[内容]

## end
#952, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#954, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#955, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#959, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#960, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#961, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#962, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#967, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#969, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#970, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#971, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#973, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#974, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#976, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#977, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#979, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#985, 11:
-87.0, 55.0
## end
#986, 12:
-88.0, -72.0
## end
#987, 5:
0,0,0
## end
#988, 8:
DashLine
## end
#989, 1:
1
## end
#990, 2:
起点
## end
#991, 2:
终点
## end
#992, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1007, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1013, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1014, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#1015, 2:
直线
## end
#1016, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#1020, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#1023, 14:
+[返回目录]
+[内容]

## end
#1024, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#1026, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#1027, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#1031, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1032, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1033, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1034, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#1039, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#1041, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#1042, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#1043, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#1045, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#1046, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#1048, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#1049, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1051, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#1057, 11:
379.0, -1.0
## end
#1058, 12:
172.0, -49.0
## end
#1059, 5:
0,0,0
## end
#1060, 8:
DashLine
## end
#1061, 1:
1
## end
#1062, 2:
起点
## end
#1063, 2:
终点
## end
#1064, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1079, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1085, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1086, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#1087, 2:
直线
## end
#1088, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#1092, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#1095, 14:
+[返回目录]
+[内容]

## end
#1096, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#1098, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#1099, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#1103, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1104, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1105, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1106, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#1111, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#1113, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#1114, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#1115, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#1117, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#1118, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#1120, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#1121, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1123, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#1129, 12:
174.0, -47.0
## end
#1130, 11:
-89.0, 33.0
## end
#1131, 5:
0,0,0
## end
#1132, 8:
DashLine
## end
#1133, 1:
1
## end
#1134, 2:
起点
## end
#1135, 2:
终点
## end
#1136, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1151, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1157, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1158, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#1159, 2:
直线
## end
#1160, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#1164, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#1167, 14:
+[返回目录]
+[内容]

## end
#1168, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#1170, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#1171, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#1175, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1176, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1177, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1178, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#1183, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#1185, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#1186, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#1187, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#1189, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#1190, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#1192, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#1193, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1195, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#1201, 11:
-88.0, 34.0
## end
#1202, 12:
-385.0, -2.0
## end
#1203, 5:
0,0,0
## end
#1204, 8:
DashLine
## end
#1205, 1:
1
## end
#1206, 2:
起点
## end
#1207, 2:
终点
## end
#1208, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1224, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1230, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1231, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1232, 2:
矩形
## end
#1233, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1236, 14:
+[返回目录]
+[内容]

## end
#1237, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1240, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1244, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1245, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1246, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1249, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1252, 14:
+[返回目录]
+[内容]

## end
#1253, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1256, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1257, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1267, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1269, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1270, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1272, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1273, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1275, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1276, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1278, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1279, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1281, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1282, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1284, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1285, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1287, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1288, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1290, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1291, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1293, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1294, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1297, 14:
+[返回目录]
+[内容]

## end
#1298, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1307, 14:
187.125, -88.0
## end
#1308, 11:
41.75, 36.0
## end
#1309, 4:
None
## end
#1310, 11:
255,255,255
## end
#1311, 8:
DashLine
## end
#1312, 1:
1
## end
#1313, 2:
f1
## end
#1314, 2:
10
## end
#1315, 2:
里面
## end
#1316, 3:
右上角
## end
#1317, 3:
右下角
## end
#1318, 2:
里面
## end
#1319, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1335, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1341, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1342, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1343, 2:
矩形
## end
#1344, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1347, 14:
+[返回目录]
+[内容]

## end
#1348, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1351, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1355, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1356, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1357, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1360, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1363, 14:
+[返回目录]
+[内容]

## end
#1364, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1367, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1368, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1378, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1380, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1381, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1383, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1384, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1386, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1387, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1389, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1390, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1392, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1393, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1395, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1396, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1398, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1399, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1401, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1402, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1404, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1405, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1408, 14:
+[返回目录]
+[内容]

## end
#1409, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1418, 16:
-141.25, -107.25
## end
#1419, 10:
52.5, 44.5
## end
#1420, 4:
None
## end
#1421, 11:
255,255,255
## end
#1422, 8:
DashLine
## end
#1423, 1:
1
## end
#1424, 2:
f2
## end
#1425, 2:
10
## end
#1426, 3:
右下角
## end
#1427, 2:
里面
## end
#1428, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1444, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1450, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1451, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1452, 2:
矩形
## end
#1453, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1456, 14:
+[返回目录]
+[内容]

## end
#1457, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1460, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1464, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1465, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1466, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1469, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1472, 14:
+[返回目录]
+[内容]

## end
#1473, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1476, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1477, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1487, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1489, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1490, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1492, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1493, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1495, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1496, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1498, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1499, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1501, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1502, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1504, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1505, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1507, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1508, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1510, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1511, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1513, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1514, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1517, 14:
+[返回目录]
+[内容]

## end
#1518, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1527, 12:
237.25, 0.25
## end
#1528, 10:
47.5, 35.5
## end
#1529, 4:
None
## end
#1530, 11:
255,255,255
## end
#1531, 8:
DashLine
## end
#1532, 1:
1
## end
#1533, 2:
v1
## end
#1534, 2:
10
## end
#1535, 3:
右下角
## end
#1536, 2:
里面
## end
#1537, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1553, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1559, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1560, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1561, 2:
矩形
## end
#1562, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1565, 14:
+[返回目录]
+[内容]

## end
#1566, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1569, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1573, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1574, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1575, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1578, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1581, 14:
+[返回目录]
+[内容]

## end
#1582, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1585, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1586, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1596, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1598, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1599, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1601, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1602, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1604, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1605, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1607, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1608, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1610, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1611, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1613, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1614, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1616, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1617, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1619, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1620, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1622, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1623, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1626, 14:
+[返回目录]
+[内容]

## end
#1627, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1636, 12:
90.75, -1.25
## end
#1637, 10:
50.5, 34.5
## end
#1638, 4:
None
## end
#1639, 11:
255,255,255
## end
#1640, 8:
DashLine
## end
#1641, 1:
1
## end
#1642, 2:
u1
## end
#1643, 2:
10
## end
#1644, 3:
右下角
## end
#1645, 2:
里面
## end
#1646, 2:
里面
## end
#1647, 2:
里面
## end
#1648, 2:
里面
## end
#1649, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1665, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1671, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1672, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1673, 2:
矩形
## end
#1674, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1677, 14:
+[返回目录]
+[内容]

## end
#1678, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1681, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1685, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1686, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1687, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1690, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1693, 14:
+[返回目录]
+[内容]

## end
#1694, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1697, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1698, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1708, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1710, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1711, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1713, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1714, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1716, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1717, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1719, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1720, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1722, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1723, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1725, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1726, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1728, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1729, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1731, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1732, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1734, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1735, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1738, 14:
+[返回目录]
+[内容]

## end
#1739, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1748, 14:
-50.25, -46.25
## end
#1749, 10:
50.5, 38.5
## end
#1750, 4:
None
## end
#1751, 11:
255,255,255
## end
#1752, 8:
DashLine
## end
#1753, 1:
1
## end
#1754, 2:
v2
## end
#1755, 2:
10
## end
#1756, 3:
右下角
## end
#1757, 2:
里面
## end
#1758, 507:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::0,0,0
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#1774, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1780, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#1781, 840:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#1782, 2:
矩形
## end
#1783, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#1786, 14:
+[返回目录]
+[内容]

## end
#1787, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#1790, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#1794, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1795, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1796, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1799, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#1802, 14:
+[返回目录]
+[内容]

## end
#1803, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#1806, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1807, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#1817, 27:
+[返回目录](,移动)

mouseMove:...
## end
#1819, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#1820, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#1822, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1823, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#1825, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1826, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#1828, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1829, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#1831, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1832, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#1834, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1835, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#1837, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1838, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#1840, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1841, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#1843, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#1844, 477:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
}

var size=[%尺寸];
var pos=[%起点]

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;

ctx.strokeRect(%起点,%尺寸);
ctx.fillRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1847, 14:
+[返回目录]
+[内容]

## end
#1848, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#1857, 15:
-217.25, -44.25
## end
#1858, 10:
42.5, 36.5
## end
#1859, 4:
None
## end
#1860, 11:
255,255,255
## end
#1861, 8:
DashLine
## end
#1862, 1:
1
## end
#1863, 2:
u2
## end
#1864, 2:
10
## end
#1865, 3:
右下角
## end
#1866, 2:
里面
## end
#1867, 18:
1.4641000000000006
## end
#1869, 8:
600, 202
## end
#1871, 8:
0.0, 0.0
## end
#1874, 4:
1876
## end
#1876, 4:
1883
## end
#1879, 818:
%{
+[M函数](,成像系统设计_1D)

+[matlab]"
f1=300;
f2=1000;
f0=f1*f2/(f1+f2)
"(Matlab,)

绘制场景:...
+[M函数](,绘制场景)
%}

clf


f1=300;
x1=240:290;
f2=1500;
x2=300;

M1=0.5;
M2=0.1;

x3=50*25.4;
QuantaRay=80.5*25.4;

v1=x1;
D=x2-x1;
u1=f1*v1./(v1-f1);
v2=D-u1;
u2=f2*v2./(v2-f2);


M=v2./u2.*v1./u1;
u2(u2<=0)=nan;
Length=u2+D+x1;

area_M=(abs(M)<=M1 & abs(M)>=M2);
area_L=(Length<=x3+QuantaRay & Length>=x3);


subplot(2,2,1)
hold on
a1=area(x1,max(M)*area_M);
a2=area(x1,max(M)*area_L);
a1.FaceAlpha=0.2;
a2.FaceAlpha=0.2;
plot(x1,M,[min(x1),max(x1)],[0,0],'k-.');
%axis([min(x1),max(x1),0,max(M)])
subplot(2,2,2)
hold on
a1=area(x1,max(Length)*area_M);
a2=area(x1,max(Length)*area_L);
a1.FaceAlpha=0.2;
a2.FaceAlpha=0.2;
plot(x1,Length)
%axis([min(x1),max(x1),0,x3+QuantaRay])




%{
+[M函数](,成像系统设计_1D)

绘制场景:...
+[M函数](,绘制场景)
%}

## end
#1882, 1212:
%{
+[返回目录](,绘制场景)

+[M函数](,绘制场景)
%}

f1=f1;
f2=f2;
y0=0;

N=10;
D_len=25;
Dtheta1=-0.01;
Dtheta2=0.01;

I=find(~isnan(u2));

for n=1:10:length(I)
i=I(n);
u=v1(i);
L=D(i);
v=u2(i);

% matrix
T1=[1,u;0,1];
T2=[1,0;-1/f1,1];
T3=[1,L;0,1];
T4=[1,0;-1/f2,1];
T5=[1,v;0,1];

% vector
ray1=[y0*ones(1,N);linspace(Dtheta1,Dtheta2,N)];
ray2=T1*ray1;
ray3=T2*ray2;
ray4=T3*ray3;
ray5=T4*ray4;
ray6=T5*ray5;

% points
X=cumsum([0,u,0,L,0,v]);
Y=[ray1(1,:);ray2(1,:);ray3(1,:);ray4(1,:);ray5(1,:);ray6(1,:)];


% plot
subplot(2,2,1);
if n==1
    hold on
    M_l=plot([v1(i),v1(i)],[0,M(i)],'r-');
    M_p=plot(v1(i),M(i),'ro');
    hold off
else
    M_l.XData=[v1(i),v1(i)];
    M_l.YData=[0,M(i)];
    M_p.XData=v1(i);
    M_p.YData=M(i);
end

subplot(2,2,2);
if n==1
    hold on
    L_l=plot([v1(i),v1(i)],[0,Length(i)],'r-');
    L_p=plot(v1(i),Length(i),'ro');
    hold off
else
    L_l.XData=[v1(i),v1(i)];
    L_l.YData=[0,Length(i)];
    L_p.XData=v1(i);
    L_p.YData=Length(i);
end


subplot(2,1,2);
hold off
plot(X,Y','b')
hold on
plot([X;X],[D_len/2;-D_len/2]*ones(1,length(X)),'k')
rectangle('Position',[x3,-200,QuantaRay,400])
axis([0,x3+QuantaRay*1.2,-15,15])
%axis equal
pause(0.01);
end


%{
+[M函数](,绘制场景)
%}
## end
#1883, 4:
1893
## end
#1886, 16:
文档\S应用\网页画板.ftxt
## end
#1888, 1183:
%{
+[M函数](,成像系统设计_2D)
%}

clf


f1=250;
x1=300:1000;
f2=250;
x2=500:2000;

x3=2200;
QuantaRay=80.5*25.4;

M1=1.5;
M2=0.1;

[X1,X2]=meshgrid(x1,x2);

V1=X1;
D_12=X2-X1;
U1=f1*V1./(V1-f1);
V2=D_12-U1;
U2=f2*V2./(V2-f2);


M=V2./U2.*V1./U1;
U2(U2<=0)=nan;
Len=U2+X2;
Len(Len>x3+QuantaRay*1.5)=nan;

max_Len=max(max(Len));
max_M=max(max(M));

area_M=double(M<=M1 & M>=M2);
area_M(area_M==0)=nan;
area_L=double(Len>=x3 & Len<=x3+QuantaRay);
area_L(area_L==0)=nan;

area_B=nan(size(area_M));
area_B(area_L==1)=area_M(area_L==1);

subplot(2,2,1)
surf(X1,X2,M)
hold on
% contour(X1,X2,Len/max_Len*max_M,...
%     [x3,x3+QuantaRay]/max_Len*max_M,'k')
contour(X1,X2,M,[M1,M2],'r')
xlabel('x_1')
ylabel('x_2')
title('Magnification')

view([0,-90])
shading interp

subplot(2,2,2)
surf(X1,X2,Len)
hold on
contour(X1,X2,Len,[x3,x3+QuantaRay],'k')
% contour(X1,X2,M,[0.3,0.5],'r')
xlabel('x_1')
ylabel('x_2')
title('Image distance')

view([0,-90])
shading interp

subplot(2,1,2)
hold on
contour(X1,X2,Len/max_Len*max_M,...
    [x3,x3+QuantaRay]/max_Len*max_M,'k')
contour(X1,X2,M,[M1,M2],'r')

surf(X1,X2,area_B)
xlabel('x_1')
ylabel('x_2')

view([0,-90])
shading interp


%{
+[M函数](,成像系统设计_2D)
%}

## end
#1890, 4:
1892
## end
#1892, 4:
2787
## end
#1895, 2141:
<!--
+[H函数](,单透镜系统)

+[导出PDF]"output\lens"(,单透镜系统)

场景(画板):...
+画板(场景,)
画板(场景,)->+[del](,画板)
场景->画板(场景,)->+[del](,画板)
+[画板](+透镜,场景)
-->

%场景
<br>
<b><u>Basic formulas</u></b><br>
The basic formula,
$$
\frac{1}{f}=\frac{1}{u}+\frac{1}{v}
$$
The magnification is,
$$
M=\frac{v}{u}=\frac{v}{f}-1
$$
The total distance is,
$$
L=u+v=v+\frac{vf}{v-f}=\frac{v^2}{v-f}\geq 4f
$$
The image distance can be expressed as a function of the total length,
$$
v^2-Lv+Lf=0
$$
$$
v=\frac{1-\sqrt{1-4f/L}}{2}L
\approx
\left[\frac{1}{2}-\frac{1}{2}(1-2f/L-2(f/L)^2)\right]L
\\
=\left[f/L+(f/L)^2\right]L
=f+f^2/L
$$
So we have,
$$
\Delta v=v_1-v_2=f^2\frac{L_2-L_1}{L_1 L_2}=-\frac{f^2}{L_1L_2}\Delta L
$$


<!--
+[H函数](,单透镜系统)

+[matlab]"
L1=20;
DL=80
L2=L1+L2;
Dv=2;
f0=sqrt(L1*L2*Dv/DL)

f1=300;
f2=1000;
f=f1*f2/(f1+f2)/25.4

M1=f0/L1
M2=f0/L2
"(Matlab,)
-->
<br><br><br><br>


<b><u>Real situation</u></b><br>
Here we have known the magnification \(M\). There are two possible questions:<br>
1.By a given focus length, what is the whole distance? <br>
2.By a given whole distance, what is the focus length?<br>
<br>
First, we can express the \(v\) and \(u\) as equations of \(M\) and \(L\), 
$$
v=M u
\Rightarrow
L=M u+u=(M+1)u
\\\Rightarrow
u=\frac{L}{M+1}
\Rightarrow
\begin{cases}
u=\frac{L}{M+1}
\\
v=\frac{ML}{M+1}
\end{cases}
$$
Then we have,
$$
\frac{1}{f}=\frac{1}{u}+\frac{1}{v}

=\frac{M+1}{L}+\frac{M+1}{ML}
\\
=\frac{(M+1)^2}{ML}
$$
As a result,
$$
f=\frac{ML}{(M+1)^2}
\equiv A L
$$
If we have, the camera size is \(6.6 \times 8.8 mm\) and the BBO crystal is \(12 mm\) high. Then there is, 
$$
M=\frac{6.6 mm}{12 mm}=0.55, 
A=0.23
$$
So, \(L\) is always four times of \(f\) almost for every shot.
And we have, <br>
The focus length: 300.00 mm<br>
The object length: 845.45 mm<br>
The image length: 465.00 mm<br>
The total length: 1310.45 mm<br>
<br>
The focus length: 125.00 mm<br>
The object length: 352.27 mm<br>
The image length: 193.75 mm<br>
The total length: 546.02 mm<br>
<!--
+[H函数](,公式)

计算(M函数):...
+[M函数](,计算)

Lens Checklist::C:\Users\cheng\Dropbox\iFAST_log\resources\20210315\Lens_chcecklist.xlsx
+[打开](,Lens Checklist)
-->





## end
#1897, 165:



透镜:...
中线:...
像:...
物:...

平行光:...
中心光:...
聚焦光:...

+[创建箭头](,物)
+[创建直线](,聚焦光)
+[创建箭头](,透镜)

的(中心光,终点)->的(聚焦光,终点#2)->+是(终点,终点#2)
的(像,终点)->的(平行光,起点#0)->+是(终点,起点#0)

## end
#1899, 229:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1913, 1164:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=30
D=0
d=10
text=文字


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush())

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#1919, 1164:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=30
D=0
d=10
text=文字


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush())

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#1920, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#1921, 2:
直线
## end
#1922, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#1926, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#1929, 14:
+[返回目录]
+[内容]

## end
#1930, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#1932, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#1933, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#1937, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#1938, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#1939, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#1940, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#1945, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#1947, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#1948, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#1949, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#1951, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#1952, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#1954, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#1955, 944:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

var pt1=[%起点];
var pt2=[%终点];


//arrows
var angle=30/180*Math.PI;
var l=20;
var d=10;

r=Math.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2);
if (r!=0) {
    theta=Math.sign(pt1[1]-pt2[1])*Math.acos((pt2[0]-pt1[0])/r);
}

dp21=[l*Math.cos(theta-angle/2),-l*Math.sin(theta-angle/2)];
dp22=[l*Math.cos(theta+angle/2),-l*Math.sin(theta+angle/2)];

pt10=[0,0];
pt20=[0,0];
pt10[0]=pt1[0];
pt10[1]=pt1[1];
pt20[0]=pt2[0];
pt20[1]=pt2[1];


ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;
ctx.fillStyle='rgb(0,0,0,0)';


ctx.beginPath();


ctx.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1]);
ctx.lineTo(pt10[0],pt10[1]);
ctx.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1]);

ctx.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1]);
ctx.lineTo(pt20[0],pt20[1]);
ctx.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1]);


ctx.moveTo(pt10[0],pt10[1]);
ctx.lineTo(pt20[0],pt20[1]);

ctx.stroke()
ctx.fill()



/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#1957, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#1963, 37:
7.684768080000004, 50.911588530000024
## end
#1964, 11:
7.0, -108.0
## end
#1965, 5:
0,0,0
## end
#1966, 8:
DashLine
## end
#1967, 1:
1
## end
#1968, 2:
里面
## end
#1969, 2:
终点
## end
#1971, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1973, 229:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1975, 229:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#1989, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1995, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#1996, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#1997, 2:
直线
## end
#1998, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2002, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2005, 14:
+[返回目录]
+[内容]

## end
#2006, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2008, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2009, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2013, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2014, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2015, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2016, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2021, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2023, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2024, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2025, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2027, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2028, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2030, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2031, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2033, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2039, 12:
377.5, -31.0
## end
#2040, 40:
-263.20022651953957, -31.970381697065978
## end
#2041, 5:
0,0,0
## end
#2042, 8:
DashLine
## end
#2043, 1:
1
## end
#2044, 2:
终点
## end
#2045, 2:
起点
## end
#2046, 2:
里面
## end
#2047, 17:
1.009761651354608
## end
#2049, 8:
950, 214
## end
#2051, 12:
100.0, -50.0
## end
#2054, 2:
起点
## end
#2055, 3:
半径点
## end
#2056, 2:
里面
## end
#2057, 2:
终点
## end
#2058, 2:
起点
## end
#2059, 2:
终点
## end
#2060, 2:
起点
## end
#2061, 2:
终点
## end
#2062, 2:
起点
## end
#2064, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#2066, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#2068, 253:
+[返回目录](,直线)

起点::300,-150
终点::100,-100
类型::直线

线颜色::0,0,0
线型::DashLine
线粗细::1

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)

动词:...
动作:...
的(动词,去掉选中框)->+[做](,直线)->+[code](+[做],去掉选中框)

+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

+[粘贴](,直线)
## end
#2082, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2088, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2089, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#2090, 2:
直线
## end
#2091, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2095, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2098, 14:
+[返回目录]
+[内容]

## end
#2099, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2101, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2102, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2106, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2107, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2108, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2109, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2114, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2116, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2117, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2118, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2120, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2121, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2123, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2124, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2126, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2132, 39:
-158.97863965500008, -63.87963466500002
## end
#2133, 37:
7.204470075000003, -63.39933666000003
## end
#2134, 5:
0,0,0
## end
#2135, 8:
DashLine
## end
#2136, 1:
1
## end
#2137, 2:
终点
## end
#2138, 2:
起点
## end
#2139, 2:
终点
## end
#2153, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2159, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2160, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#2161, 2:
直线
## end
#2162, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2166, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2169, 14:
+[返回目录]
+[内容]

## end
#2170, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2172, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2173, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2177, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2178, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2179, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2180, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2185, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2187, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2188, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2189, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2191, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2192, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2194, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2195, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2197, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2203, 39:
-158.97863965500008, -63.87963466500002
## end
#2204, 36:
287.5080303505139, 25.24679058592561
## end
#2205, 5:
0,0,0
## end
#2206, 8:
DashLine
## end
#2207, 1:
1
## end
#2208, 2:
终点
## end
#2209, 2:
起点
## end
#2223, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2229, 313:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawLine(pt1[0],pt1[1],pt2[0],pt2[1])
qp.setPen(QPen())



## end
#2230, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#2231, 2:
直线
## end
#2232, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2236, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2239, 14:
+[返回目录]
+[内容]

## end
#2240, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2242, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2243, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2247, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2248, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2249, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2250, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2255, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2257, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2258, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2259, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2261, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2262, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2264, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2265, 200:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;


ctx.beginPath();
ctx.moveTo(%起点);
ctx.lineTo(%终点)
ctx.stroke();

/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2267, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2273, 37:
7.204470075000003, -63.39933666000003
## end
#2274, 36:
287.5080303505139, 25.24679058592561
## end
#2275, 5:
0,0,0
## end
#2276, 8:
DashLine
## end
#2277, 1:
1
## end
#2278, 2:
起点
## end
#2281, 2:
起点
## end
#2282, 2:
终点
## end
#2283, 2:
起点
## end
#2284, 2:
起点
## end
#2285, 2:
终点
## end
#2286, 2:
里面
## end
#2287, 2:
终点
## end
#2305, 1194:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=10


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush(QColor(edgeColor[0],edgeColor[1],edgeColor[2])))

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

#qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#2311, 1194:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=10


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush(QColor(edgeColor[0],edgeColor[1],edgeColor[2])))

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

#qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#2312, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#2313, 2:
直线
## end
#2314, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2318, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2321, 14:
+[返回目录]
+[内容]

## end
#2322, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2324, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2325, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2329, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2330, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2331, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2332, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2337, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2339, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2340, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2341, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2343, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2344, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2346, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2347, 947:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

var pt1=[%起点];
var pt2=[%终点];


//arrows
var angle=30/180*Math.PI;
var l=10;
var d=10;

r=Math.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2);
if (r!=0) {
    theta=Math.sign(pt1[1]-pt2[1])*Math.acos((pt2[0]-pt1[0])/r);
}

dp21=[l*Math.cos(theta-angle/2),-l*Math.sin(theta-angle/2)];
dp22=[l*Math.cos(theta+angle/2),-l*Math.sin(theta+angle/2)];

pt10=[0,0];
pt20=[0,0];
pt10[0]=pt1[0];
pt10[1]=pt1[1];
pt20[0]=pt2[0];
pt20[1]=pt2[1];


ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;
ctx.fillStyle='rgb(%线颜色)';


ctx.beginPath();


//ctx.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1]);
//ctx.lineTo(pt10[0],pt10[1]);
//ctx.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1]);

ctx.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1]);
ctx.lineTo(pt20[0],pt20[1]);
ctx.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1]);


ctx.moveTo(pt10[0],pt10[1]);
ctx.lineTo(pt20[0],pt20[1]);

ctx.stroke()
ctx.fill()



/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2349, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2355, 39:
-159.9392356650001, -30.258774315000032
## end
#2356, 39:
-158.97863965500008, -63.87963466500002
## end
#2357, 5:
0,0,0
## end
#2358, 8:
DashLine
## end
#2359, 1:
1
## end
#2360, 2:
起点
## end
#2374, 1194:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=20


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush(QColor(edgeColor[0],edgeColor[1],edgeColor[2])))

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

#qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#2380, 1194:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...
输出:...

图形:...
选中框:...

"""
pt1=起点
pt2=终点

angle=30
l=20


lineWidth=线粗细[0]
lineType=线型

if len(线颜色)==0:
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))
    qp.setBrush(QBrush(QColor(edgeColor[0],edgeColor[1],edgeColor[2])))

r=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
if r!=0:
    theta=np.rad2deg(np.sign(pt1[1]-pt2[1])*np.arccos((pt2[0]-pt1[0])/r))
dp21=[l*np.cos(np.deg2rad(theta-angle/2)),-l*np.sin(np.deg2rad(theta-angle/2))]
dp22=[l*np.cos(np.deg2rad(theta+angle/2)),-l*np.sin(np.deg2rad(theta+angle/2))]

pt10=[0,0]
pt20=[0,0]
pt10[0]=pt1[0]
pt10[1]=pt1[1]
pt20[0]=pt2[0]
pt20[1]=pt2[1]

path1=QPainterPath()
#path1.moveTo(pt10[0],pt10[1])
path1.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1])
path1.lineTo(pt10[0],pt10[1])
path1.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1])

path2=QPainterPath()
#path2.moveTo(pt20[0],pt20[1])
path2.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1])
path2.lineTo(pt20[0],pt20[1])
path2.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1])

#qp.drawPath(path1)
qp.drawPath(path2)


qp.drawLine(pt10[0],pt10[1],pt20[0],pt20[1])

qp.setBrush(QBrush())
qp.setPen(QPen())



## end
#2381, 258:
"""
+[返回目录](,选中框)

"""
X=[pt1[0],pt2[0]]
Y=[pt1[1],pt2[1]]
R=6

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[1]-R,Y[1]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))
## end
#2382, 2:
直线
## end
#2383, 347:
"""
+[返回目录](,选中区域)
输入:...

点线公式:...
+[网页](web,点线公式)

"""

pt1=起点
pt2=终点
pt=mouse_pos

R=np.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2)
d=np.abs(((pt[1]-pt1[1])*(pt2[0]-pt1[0])-(pt[0]-pt1[0])*(pt2[1]-pt1[1]))/R)
l=((pt[1]-pt1[1])*(pt2[1]-pt1[1])+(pt[0]-pt1[0])*(pt2[0]-pt1[0]))/R**2


if l>=0 and l<=1 and d<3:
    state=True
else:
    state=False

## end
#2387, 42:
+[返回目录](,输入)

起点::200,100
终点::218.0, -9.0

## end
#2390, 14:
+[返回目录]
+[内容]

## end
#2391, 886:
<!--
+[返回目录](,点线公式)
+[网页](web,点线公式)

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">
如果有两个点, 
$$
\vec{p}_A=(x_1,y_1), \vec{p}_B=(x_2,y_2)
$$
那么, \(\overrightarrow{AB}\)平行方向的向量和垂直方向的向量分别是,
$$
\vec{r}_\|=(x_2-x_1,y_2-y_1)
$$$$
\vec{r}_\perp=(-y_2+y_1,x_2-x_1)
$$
于是, 第三个点\(C\)到线段\(AB\)的距离为,
$$
d=\frac{\vec{r}_{AC}\cdot \vec{r}_\perp}{\|\vec{r}_\perp\|}\\
=\frac{(y-y_1)(x_2-x_1)-(x-x_1)(y_2-y_1)}{\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}}
$$
而判断\(C\)在\(A\)和\(B\)之间的判据为,
$$
l=\frac{\vec{r}_{AC}\cdot \vec{r}_\|}{\|\vec{r}_\|\|^2}\\
=\frac{(y-y_1)(y_2-y_1)+(x-x_1)(x_2-x_1)}{(x_2-x_1)^2+(y_2-y_1)^2}
$$

    </mathjax></p>
  </body>
</html>

## end
#2393, 56:
https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
## end
#2394, 40:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...
## end
#2398, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2399, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2400, 941:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_物体,线粗细)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt0"([python],起点)->+[.]"pt1"([python],终点)...
->+[.]"width"([python],线粗细)->+按键位置->[python]"
pt=pt0
pt1=pt1
pm=pm
width=width[0]
R=6

X=[pt[0],pt1[0]]
Y=[pt[1],pt1[1]]

got=False
for i in range(len(X)):
    d=np.sqrt((X[i]-pm[0])**2+(Y[i]-pm[1])**2)
    if d<=R:
        got=True
        break

if got==False:
    ans='里面'
elif i==0:
    ans='起点'
else:
    ans='终点'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"起点"(,+按键位置)->的(动作,移动起点)->的(移动起点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"终点"(,+按键位置)->的(动作,移动终点)->的(移动终点,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2401, 72:
+[返回目录](,动作)

移动:...
移动起点:...
移动终点:...

+[粘贴](,移动终点)
+[修改内容](移动,移动终点)



## end
#2406, 46:
+[返回目录](,移动)

mouseMove:...
+[del](,mouseMove)
## end
#2408, 376:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
dx=pt2[0]-pt1[0]
dy=pt2[1]-pt1[1]
pt1=[m[0]-dx/2,m[1]-dy/2]
pt2=[m[0]+dx/2,m[1]+dy/2]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)->+[o]"pt2"(+[python],终点)

## end
#2409, 239:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt=m
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)

## end
#2410, 29:
+[返回目录](,移动起点)

mouseMove:...
## end
#2412, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,起点)->的(_画板,m_mouse)...
->+[python]"
pt1=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt1"(+[python],起点)
## end
#2413, 29:
+[返回目录](,移动终点)

mouseMove:...
## end
#2415, 259:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"直线"...
->的(_物体,终点)->的(_画板,m_mouse)...
->+[python]"
pt2=m

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt2"(+[python],终点)
## end
#2416, 947:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/

var pt1=[%起点];
var pt2=[%终点];


//arrows
var angle=30/180*Math.PI;
var l=15;
var d=10;

r=Math.sqrt((pt1[0]-pt2[0])**2+(pt1[1]-pt2[1])**2);
if (r!=0) {
    theta=Math.sign(pt1[1]-pt2[1])*Math.acos((pt2[0]-pt1[0])/r);
}

dp21=[l*Math.cos(theta-angle/2),-l*Math.sin(theta-angle/2)];
dp22=[l*Math.cos(theta+angle/2),-l*Math.sin(theta+angle/2)];

pt10=[0,0];
pt20=[0,0];
pt10[0]=pt1[0];
pt10[1]=pt1[1];
pt20[0]=pt2[0];
pt20[1]=pt2[1];


ctx.strokeStyle='rgb(%线颜色)';
ctx.lineWidth=%线粗细;
ctx.fillStyle='rgb(%线颜色)';


ctx.beginPath();


//ctx.moveTo(pt10[0]+dp21[0],pt10[1]+dp21[1]);
//ctx.lineTo(pt10[0],pt10[1]);
//ctx.lineTo(pt10[0]+dp22[0],pt10[1]+dp22[1]);

ctx.moveTo(pt20[0]-dp21[0],pt20[1]-dp21[1]);
ctx.lineTo(pt20[0],pt20[1]);
ctx.lineTo(pt20[0]-dp22[0],pt20[1]-dp22[1]);


ctx.moveTo(pt10[0],pt10[1]);
ctx.lineTo(pt20[0],pt20[1]);

ctx.stroke()
ctx.fill()



/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2418, 31:
线颜色::0,0,0
线型::DashLine
线粗细::2

## end
#2424, 38:
287.5080303505139, -31.428374004074414
## end
#2425, 36:
287.5080303505139, 25.24679058592561
## end
#2426, 5:
0,0,0
## end
#2427, 8:
DashLine
## end
#2428, 1:
1
## end
#2429, 2:
终点
## end
#2430, 2:
起点
## end
#2431, 2:
里面
## end
#2432, 2:
里面
## end
#2433, 2:
里面
## end
#2434, 2:
里面
## end
#2435, 2:
里面
## end
#2436, 2:
里面
## end
#2437, 2:
里面
## end
#2442, 2:
里面
## end
#2443, 2:
里面
## end
#2444, 2:
里面
## end
#2445, 506:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::None
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#2461, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2467, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#2468, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2469, 2:
矩形
## end
#2470, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#2473, 14:
+[返回目录]
+[内容]

## end
#2474, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#2477, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#2481, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2482, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2483, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2486, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#2489, 14:
+[返回目录]
+[内容]

## end
#2490, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#2493, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2494, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#2504, 27:
+[返回目录](,移动)

mouseMove:...
## end
#2506, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#2507, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#2509, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2510, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#2512, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2513, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#2515, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2516, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#2518, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2519, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#2521, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2522, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#2524, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2525, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#2527, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2528, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#2530, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2531, 655:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/


var size=[%尺寸];
var pos=[%起点];

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(255,255,255)';
} else {
	ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细;
        ctx.strokeRect(%起点,%尺寸);
}

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fillRect(%起点,%尺寸);
}

//ctx.strokeStyle='rgb(%线颜色)';
//ctx.lineWidth=%线粗细;
//ctx.strokeRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2534, 14:
+[返回目录]
+[内容]

## end
#2535, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#2544, 38:
37.822360969751976, -87.31253539367806
## end
#2545, 36:
52.23680484875996, 46.87234681228077
## end
#2546, 4:
None
## end
#2547, 4:
None
## end
#2548, 8:
DashLine
## end
#2549, 1:
1
## end
#2550, 1:
f
## end
#2551, 2:
10
## end
#2552, 2:
里面
## end
#2553, 3:
右下角
## end
#2554, 2:
里面
## end
#2555, 506:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::None
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#2571, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2577, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#2578, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2579, 2:
矩形
## end
#2580, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#2583, 14:
+[返回目录]
+[内容]

## end
#2584, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#2587, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#2591, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2592, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2593, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2596, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#2599, 14:
+[返回目录]
+[内容]

## end
#2600, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#2603, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2604, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#2614, 27:
+[返回目录](,移动)

mouseMove:...
## end
#2616, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#2617, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#2619, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2620, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#2622, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2623, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#2625, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2626, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#2628, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2629, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#2631, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2632, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#2634, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2635, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#2637, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2638, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#2640, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2641, 655:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/


var size=[%尺寸];
var pos=[%起点];

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(255,255,255)';
} else {
	ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细;
        ctx.strokeRect(%起点,%尺寸);
}

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fillRect(%起点,%尺寸);
}

//ctx.strokeStyle='rgb(%线颜色)';
//ctx.lineWidth=%线粗细;
//ctx.strokeRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2644, 14:
+[返回目录]
+[内容]

## end
#2645, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#2654, 36:
-106.9297174052326, -43.526319515124
## end
#2655, 36:
49.14601313968552, 41.72102729715675
## end
#2656, 4:
None
## end
#2657, 4:
None
## end
#2658, 8:
DashLine
## end
#2659, 1:
1
## end
#2660, 1:
v
## end
#2661, 2:
10
## end
#2662, 2:
里面
## end
#2663, 3:
右下角
## end
#2664, 2:
里面
## end
#2665, 506:
+[返回目录](,矩形)

起点::-200,100
尺寸::100,100
类型::矩形
文字::
字体::10

面颜色::None
线颜色::None
线型::DashLine
线粗细::2

画图:...
选中区域:...
HTML:...
的(画图,输入)->+[有](HTML,输入)
+[Canvas画图模板](,HTML)

+[生成类函数](画图,+[显示])->+[显示]
的(画图,输入)->的(输入,_变量)->+[显示](,_变量)

动词:...
动作:...
+[复制结构](,动词)

的(动词,画选中框)->+[做](,矩形)->+[code](+[做],画选中框)

+[创建输入](文字,画图)
+[创建输入](字体,画图)
+[创建输入](面颜色,画图)->+[创建输入](线颜色,画图)...
->+[创建输入](线型,画图)->+[创建输入](线粗细,画图)

的(动词,按键)->的(按键,核心代码)...
->+[创建输入](起点,核心代码)->+[创建输入](尺寸,核心代码)

+[按键](,矩形)->+[在](+[按键],+[鼠标])->+[鼠标]"0,0"
## end
#2681, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2687, 677:
"""
+[返回目录](,选中框)

"""


X=[pt[0],pt[0]+size[0]/2,pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]/2,pt[1]+size[1]]
R=6

qp.setBrush(QBrush())
qp.drawRect(pt[0],pt[1],size[0],size[1])

qp.setPen(QPen(QColor(140,140,140),2.5))
qp.setBrush(QBrush(Qt.white))
qp.drawEllipse(X[0]-R,Y[0]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[0]-R,2*R,2*R)

if size[0]>30 or size[0]<-30:
    qp.drawEllipse(X[1]-R,Y[0]-R,2*R,2*R)
    qp.drawEllipse(X[1]-R,Y[2]-R,2*R,2*R)

if size[1]>30 or size[1]<-30:
    qp.drawEllipse(X[0]-R,Y[1]-R,2*R,2*R)
    qp.drawEllipse(X[2]-R,Y[1]-R,2*R,2*R)


qp.drawEllipse(X[0]-R,Y[2]-R,2*R,2*R)
qp.drawEllipse(X[2]-R,Y[2]-R,2*R,2*R)
qp.setBrush(QBrush())
qp.setPen(QPen(Qt.black))

## end
#2688, 855:
"""
+[返回目录](,画图)
+[返回目录](,图形)
输入:...

图形:...
选中框:...

"""


pt=起点
size=尺寸
size_F=字体[0]

lineWidth=线粗细[0]
lineType=线型

if len(面颜色)==0 or 面颜色=='None':
    qp.setBrush(QBrush())
else:
    faceColor=面颜色
    qp.setBrush(QBrush(QColor(faceColor[0],faceColor[1],faceColor[2])))

if len(线颜色)==0 or 线颜色=='None':
    qp.setPen(QPen())
else:
    edgeColor=线颜色
    qp.setPen(QPen(QColor(edgeColor[0],edgeColor[1],edgeColor[2]),lineWidth))


qp.drawRect(pt[0],pt[1],size[0],size[1])
qp.setBrush(QBrush())
qp.setPen(QPen())


qp.setFont(QFont("Decorative",size_F))
qp.drawText(pt[0],pt[1],size[0],size[1],Qt.AlignHCenter|Qt.AlignVCenter,文字)
qp.setFont(QFont())

#if isinstance(文字,str):
#    qp.setFont(QFont("Decorative",size_F))
#    dy=size_F*1.4
#    dx=len(文字)*size_F*1.65
#    qp.drawText(pt[0]-dx/2+size[0]/2,pt[1]+dy/2+size[1]/2,文字)
#    qp.setFont(QFont())





## end
#2689, 2:
矩形
## end
#2690, 218:
"""
+[返回目录](,选中区域)
输入:...

"""

pt=起点
pt0=mouse_pos
size=尺寸

X=[pt[0],pt[0]+size[0]]
Y=[pt[1],pt[1]+size[1]]

if (pt0[0]-X[0])*(pt0[0]-X[1])<=0 and (pt0[1]-Y[0])*(pt0[1]-Y[1])<=0:
    state=True
else:
    state=False


## end
#2693, 14:
+[返回目录]
+[内容]

## end
#2694, 55:
+[返回目录](,输入)
+[内容]
起点::-384.0, -117.0
尺寸::168.0, 112.0

## end
#2697, 41:
+[返回目录](,动词)


画选中框:...
去掉选中框:...
按键:...

## end
#2701, 125:
"""
+[返回目录](,画选中框)

"""

+画选中框(,_物体)->+[del](,+画选中框)...
->的(_物体,画图)->的(画图,图形)->的(画图,选中框)...
->+[修改内容](图形,画图)->+[增加内容](选中框,画图)
## end
#2702, 96:
"""
+[返回目录](,去掉选中框)

"""

+去掉选中框(,_物体)->+[del](,+去掉选中框)...
->的(_物体,画图)->的(画图,图形)->+[修改内容](图形,画图)
## end
#2703, 1846:
"""
+[返回目录](,按键)
+[修改标题]"按键"(,设置按键)

P代码:...
+[创建函数](,P代码)
保存:...

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt
size=size
pm=pm
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2706, 659:
"""
+[返回目录](,P代码)
+[P函数](,P代码)
+[修改标题]"P代码"(,核心代码)

"""

pt=起点[0]
size=尺寸[0]
pm=mouse_pos
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

## end
#2709, 14:
+[返回目录]
+[内容]

## end
#2710, 50:
+[返回目录]
+[内容]
起点::-237.5, 105.5
尺寸::437.0, -197.0

## end
#2713, 1806:
"""
+[返回目录](,保存)

"""

+按键(,_物体)->在(+按键,_鼠标位置)->+[del](,+按键)...
->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)...
->+[.]"pm"([python],_鼠标位置)->+[.]"pt"([python],起点)->+[.]"size"([python],尺寸)...
->+按键位置->[python]"
pt=pt[0]
size=size[0]
pm=pm[0]
R=6

X=[pt[0],pt[0]+size[0],pt[0]+size[0]/2]
Y=[pt[1],pt[1]+size[1],pt[1]+size[1]/2]

got=False
for i in range(len(X)):
    for j in range(len(Y)):
        d=np.sqrt((X[i]-pm[0])**2+(Y[j]-pm[1])**2)
        if d<=R:
            got=True
            break
    if got:
        break

if i==0 and j==0:
    ans='左上角'
elif i==0 and j==1:
    ans='左下角'
elif i==1 and j==0:
    ans='右上角'
elif i==1 and j==1:
    ans='右下角'

elif i==0 and j==2:
    ans='左面'
elif i==1 and j==2:
    ans='右面'
elif i==2 and j==0:
    ans='上面'
elif i==2 and j==1:
    ans='下面'

else:
    ans='里面'

state=True
"(Python,+按键位置)...
->是([动作库],动作#0)->和(动作#0,画图动作)->的(画图动作,mouseMove#0)...
->的(_物体,动作)...
->[]{
	[==]"里面"(,+按键位置)->的(动作,移动)->的(移动,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"上面"(,+按键位置)->的(动作,上展宽)->的(上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"下面"(,+按键位置)->的(动作,下展宽)->的(下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左面"(,+按键位置)->的(动作,左展宽)->的(左展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右面"(,+按键位置)->的(动作,右展宽)->的(右展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左上角"(,+按键位置)->的(动作,左上展宽)->的(左上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右下角"(,+按键位置)->的(动作,右下展宽)->的(右下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"左下角"(,+按键位置)->的(动作,左下展宽)->的(左下展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]{
	[==]"右上角"(,+按键位置)->的(动作,右上展宽)->的(右上展宽,mouseMove)...
	->+[修改内容](mouseMove,mouseMove#0)
}:->[],->>[]
## end
#2714, 221:
+[返回目录](,动作)

移动:...
上展宽:...
下展宽:...
左展宽:...
右展宽:...
左上展宽:...
左下展宽:...
右上展宽:...
右下展宽:...


是([动作库],动作)->和(动作,画图动作)->的(画图动作,mouseMove)...
->的(下展宽,mouseMove#0)->+[修改内容](mouseMove#0,mouseMove)


是([动作库],动作)->+[打开文件](+新窗口,动作)
## end
#2724, 27:
+[返回目录](,移动)

mouseMove:...
## end
#2726, 313:
"""
+[返回目录](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
pt[0]=m[0]-size[0]/2
pt[1]=m[1]-size[1]/2
"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[.]"size"(+[python],尺寸)

## end
#2727, 28:
+[返回目录](,上展宽)

mouseMove:...
## end
#2729, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]+size[1]
ym=m[1]
size[1]=y0-ym
pt[1]=ym


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2730, 28:
+[返回目录](,下展宽)

mouseMove:...
## end
#2732, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
y0=pt[1]
ym=m[1]
size[1]=ym-y0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2733, 28:
+[返回目录](,左展宽)

mouseMove:...
## end
#2735, 339:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]+size[0]
xm=m[0]
size[0]=x0-xm
pt[0]=xm


"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2736, 28:
+[返回目录](,右展宽)

mouseMove:...
## end
#2738, 321:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
x0=pt[0]
xm=m[0]
size[0]=xm-x0

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2739, 29:
+[返回目录](,左上展宽)

mouseMove:...
## end
#2741, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2742, 29:
+[返回目录](,左下展宽)

mouseMove:...
## end
#2744, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=pt[0]+size[0]-m[0]
size[1]=m[1]-pt[1]
pt[0]=m[0]
pt[1]=m[1]-size[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2745, 29:
+[返回目录](,右上展宽)

mouseMove:...
## end
#2747, 366:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=pt[1]+size[1]-m[1]
pt[0]=m[0]-size[0]
pt[1]=m[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2748, 29:
+[返回目录](,右下展宽)

mouseMove:...
## end
#2750, 328:
"""
+[返回目录](,mouseMove)
+[复制](,mouseMove)

"""
+mouseMove(_画板,)->+[del](,+mouseMove)...
->的(_画板,m_select)->的(m_select,_物体)->的(_物体,类型)->类型"矩形"...
->的(_物体,起点)->的(_物体,尺寸)->的(_画板,m_mouse)...
->+[python]"
size[0]=m[0]-pt[0]
size[1]=m[1]-pt[1]

"(Python,)->+[.]"m"(+[python],m_mouse)->+[o]"pt"(+[python],起点)->+[o]"size"(+[python],尺寸)

## end
#2751, 655:
/*
+[返回目录](,HTML)

+[JS函数](,HTML)
+[设置结构](,输入)
*/


var size=[%尺寸];
var pos=[%起点];

if('%线颜色'==='None') {
	ctx.strokeStyle='rgba(255,255,255)';
} else {
	ctx.strokeStyle='rgb(%线颜色)';
        ctx.lineWidth=%线粗细;
        ctx.strokeRect(%起点,%尺寸);
}

if('%面颜色'==='None') {
	ctx.fillStyle='rgba(255,255,255,0)';
} else {
	ctx.fillStyle='rgb(%面颜色)';
        ctx.fillRect(%起点,%尺寸);
}

//ctx.strokeStyle='rgb(%线颜色)';
//ctx.lineWidth=%线粗细;
//ctx.strokeRect(%起点,%尺寸);

ctx.fillStyle='rgba(0,0,0,1)';
ctx.textAlign='center'
ctx.textBaseline='middle'
ctx.font=%字体*2+'px serif'
ctx.fillText('%文字',pos[0]+size[0]/2,pos[1]+size[1]/2);


/*
+[JS函数](,HTML)
+[设置结构](,输入)
*/
## end
#2754, 14:
+[返回目录]
+[内容]

## end
#2755, 76:
+[返回目录](,输入)

面颜色::255,255,255
线颜色::0,0,0
线型::DashLine
线粗细::1
文字::测试
字体::20

## end
#2764, 38:
196.99813398708378, -67.73752123620685
## end
#2765, 36:
69.75129120018158, 46.87234681228077
## end
#2766, 4:
None
## end
#2767, 4:
None
## end
#2768, 8:
DashLine
## end
#2769, 1:
1
## end
#2770, 1:
u
## end
#2771, 2:
10
## end
#2772, 3:
右下角
## end
#2773, 2:
里面
## end
#2774, 2:
终点
## end
#2775, 4:
2779
## end
#2778, 87:
+[返回目录](,透镜动词)

求解:已知系统放大率是8.8/12, 已知透镜焦距是500, (+[求解]) (+[总距离])...

+[修改标题]"求解"(,求解1)


## end
#2779, 4:
2792
## end
#2782, 17:
文档\S应用\绘制光路图.ftxt
## end
#2784, 457:
"""
+[返回目录](,求解)

示例::已知系统放大率是8.8/12, 已知透镜焦距是500, (+[求解]) (+[总距离])
+[求解](,+[总距离])->+[已知](+[求解],+[放大率])->+[已知](+[求解],+[透镜焦距])

M代码:...
公式(html):...

"""

+求解(,_结果)->+[del](,+求解)...
->已知(+求解,放大率)->已知(+求解,透镜焦距)...
->的(求解,M代码)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]"f"(+[matlab],透镜焦距)->+[.]"M"(+[matlab],放大率):
    ->[is](_结果,总距离)->+[o]"L"(+[matlab],总距离),
    ->[is](_结果,物距)->+[o]"u"(+[matlab],物距),
    ->[is](_结果,像距)->+[o]"v"(+[matlab],像距);


## end
#2786, 288:
%{
+[返回目录](,计算)
+[M函数](,计算)
%}
%f=300; 

%M=6.6/12;
%M=1/5;
A=M/(M+1)^2;

L=f/A;
u=L/(M+1);
v=M*L/(M+1);

disp(sprintf('The focus length: %.2f mm',f))
disp(sprintf('The object length: %.2f mm',u))
disp(sprintf('The image length: %.2f mm',v))
disp(sprintf('The total length: %.2f mm',L))


## end
#2788, 1408:
<!--
+[返回目录](,公式)

+[H函数](,公式)
-->
The basic formula,
$$
\frac{1}{f}=\frac{1}{u}+\frac{1}{v}
, 
M=\frac{v}{u}
, 
L=v+u
$$
In which, \(u\) is the object length, \(v\) is the image length. <br>
Here we have known the magnification \(M\). There are two possible questions:<br>
1.By a given focus length, what is the whole distance? <br>
2.By a given whole distance, what is the focus length?<br>
<br>
First, we can express the \(v\) and \(u\) as equations of \(M\) and \(L\), 
$$
v=M u
\Rightarrow
L=M u+u=(M+1)u
\\\Rightarrow
u=\frac{L}{M+1}
\Rightarrow
\begin{cases}
u=\frac{L}{M+1}
\\
v=\frac{ML}{M+1}
\end{cases}
$$
Then we have,
$$
\frac{1}{f}=\frac{1}{u}+\frac{1}{v}

=\frac{M+1}{L}+\frac{M+1}{ML}
\\
=\frac{(M+1)^2}{ML}
$$
As a result,
$$
f=\frac{ML}{(M+1)^2}
\equiv A L
$$
If we have, the camera size is \(6.6 \times 8.8 mm\) and the BBO crystal is \(12 mm\) high. Then there is, 
$$
M=\frac{6.6 mm}{12 mm}=0.55, 
A=0.23
$$
So, \(L\) is always four times of \(f\) almost for every shot.
And we have, <br>
The focus length: 300.00 mm<br>
The object length: 845.45 mm<br>
The image length: 465.00 mm<br>
The total length: 1310.45 mm<br>
<br>
The focus length: 125.00 mm<br>
The object length: 352.27 mm<br>
The image length: 193.75 mm<br>
The total length: 546.02 mm<br>
<!--
+[H函数](,公式)

Lens Checklist::C:\Users\cheng\Dropbox\iFAST_log\resources\20210315\Lens_chcecklist.xlsx
+[打开](,Lens Checklist)
-->

## end
#2790, 4:
2794
## end
#2792, 4:
2803
## end
#2795, 296:
%{
+[返回目录](,实际摆放)
+[M函数](,实际摆放)
%}

f=250; 

u=1550;
v=1./(1./f-1./u);

M=v/u;
L=u+v;

disp(sprintf('The focus length: %.2f mm',f))
disp(sprintf('M: %.2f',M))
disp(sprintf('The object length: %.2f mm',u))
disp(sprintf('The image length: %.2f mm',v))
disp(sprintf('The total length: %.2f mm',L))


## end
#2798, 327:
%{
+[返回目录](,计算)
+[M函数](,计算)

实际摆放(M函数):...
%}

f=250; 

M=4/12;
%M=1/5;
A=M/(M+1)^2;

L=f/A;
u=L/(M+1);
v=M*L/(M+1);

disp(sprintf('The focus length: %.2f mm',f))
disp(sprintf('M: %.2f',M))
disp(sprintf('The object length: %.2f mm',u))
disp(sprintf('The image length: %.2f mm',v))
disp(sprintf('The total length: %.2f mm',L))


## end
#2800, 4:
2805
## end
#2804, 4:
2806
## end
#2806, 4:
2811
## end
#2809, 1077:
+[返回目录](,示意图)
+[删除结构](,示意图)
+[显示星图](,示意图)


+[回答]"+透镜, +光斑, +相机, +滤光片都是图形"(示意图,)
+[回答]"+焦点, +A_1, +A_2, +A_3, +B_1, +B_2, +B_3都是点"(示意图,)
+[回答]"焦点距离透镜为(150,0)"(示意图,)
+[回答]"光斑距离透镜为(-300,0)"(示意图,)
+[回答]"相机距离透镜为(200,0)"(示意图,)
+[回答]"滤光片距离相机为(-20,0)"(示意图,)
+[回答](示意图,操作)
+[描述](操作,)
在(焦点,空间点)->+[显示](,空间点)

+[回答]"透镜是高20, 宽5的透镜"(示意图,)
+[回答]"相机是高15, 宽20的镜子"(示意图,)
+[回答]"滤光片是高20, 宽5的镜子"(示意图,)
+[回答]"光斑是高10, 宽0的镜子"(示意图,)
+[回答](示意图,操作)
+[描述](操作,)
的(透镜,x)->+[显示](,x)
+样式"二维曲线"(透镜,)

+[回答]"A_1距离光斑为(0,5)"(示意图,)
+[回答]"A_2距离透镜为(0,5)"(示意图,)
+[回答]"A_3沿着A_2和焦点的方向, 和相机的X坐标对齐"(示意图,)
+[回答](示意图,操作)

+[回答]"B_1距离光斑为(0,-5)"(示意图,)
+[回答]"B_2距离透镜为(0,-5)"(示意图,)
+[回答]"B_3沿着B_2和焦点的方向, 和相机的X坐标对齐"(示意图,)
+[回答](示意图,操作)

+[回答]"+入射光线是直线(A_1,A_2)"(示意图,)
+[回答]"+出射光线是直线(A_2,A_3)"(示意图,)
+[回答]"+入射光线是直线(B_1,B_2)"(示意图,)
+[回答]"+出射光线是直线(B_2,B_3)"(示意图,)

+[回答]"滤光片朝向透镜的方向"(示意图,)
+[回答]"相机朝向透镜的方向"(示意图,)
+[回答]"滤光片朝向45的角度"(示意图,)

+物体(示意图,)
物体(示意图,)
透镜, 光斑, 滤光片, 相机, A点, B点, 光线等都是物体. 
透镜->光斑->滤光片->相机=>[那](_,)=>+的(物体,_)
示意图=>的(示意图,_re)->_re"A|B"=>+的(物体,_re)
示意图=>的(示意图,_re)->_re"光线"=>+的(物体,_re)

+[显示PPT场景](,示意图)
+[显示](,样式)
## end
#2810, 4:
2820
## end
#2813, 15:
文档\S应用\PPT.ftxt
## end
#2814, 4:
3091
## end
#2820, 1:
0
## end
#2822, 3:
0,0
## end
#2828, 1:
0
## end
#2830, 3:
0,0
## end
#2836, 1:
0
## end
#2838, 3:
0,0
## end
#2844, 1:
0
## end
#2846, 3:
0,0
## end
#2856, 1:
0
## end
#2858, 3:
0,0
## end
#2864, 1:
0
## end
#2866, 3:
0,0
## end
#2872, 1:
0
## end
#2874, 3:
0,0
## end
#2880, 1:
0
## end
#2882, 3:
0,0
## end
#2892, 1:
0
## end
#2894, 3:
0,0
## end
#2900, 1:
0
## end
#2902, 3:
0,0
## end
#2908, 1:
0
## end
#2910, 3:
0,0
## end
#2916, 1:
0
## end
#2918, 3:
0,0
## end
#2964, 24:
-10.0, -10.0, 10.0, 10.0
## end
#2966, 20:
0.0, -5.0, -5.0, 0.0
## end
#2968, 3:
多边形
## end
#2969, 5:
180.0
## end
#2971, 10:
180.0, 0.0
## end
#2973, 20:
-7.5, -7.5, 7.5, 7.5
## end
#2975, 22:
0.0, -20.0, -20.0, 0.0
## end
#2977, 3:
多边形
## end
#2978, 5:
180.0
## end
#2980, 10:
200.0, 0.0
## end
#2982, 20:
-5.0, -5.0, 5.0, 5.0
## end
#2984, 20:
0.0, -0.0, -0.0, 0.0
## end
#2986, 3:
多边形
## end
#2987, 1:
0
## end
#2989, 11:
-300.0, 0.0
## end
#2991, 56:
7.5, 10.0, 7.5, nan, 10.0, -10.0, nan, -7.5, -10.0, -7.5
## end
#2993, 50:
-2.5, 0.0, 2.5, nan, 0.0, 0.0, nan, -2.5, 0.0, 2.5
## end
#2995, 2:
曲线
## end
#2996, 1:
0
## end
#2998, 3:
0,0
## end
#3025, 25:
200.0, 1.6666666666666679
## end
#3027, 9:
0.0, -5.0
## end
#3029, 12:
-300.0, -5.0
## end
#3031, 26:
200.0, -1.6666666666666679
## end
#3033, 8:
0.0, 5.0
## end
#3035, 11:
-300.0, 5.0
## end
#3037, 10:
150.0, 0.0
## end
#3046, 4:
5,20
## end
#3088, 4:
3093
## end
#3090, 4:
3095
## end
### 结束