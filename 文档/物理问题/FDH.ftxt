### 节点
地址, 3.用流体模型进行模拟, 等离子体折射率, 测试, 微扰流体方程, 等离子体流体方程, 的, 的, 的, 的, 用流体模型进行模拟, 输入, 输出, 的, 的, FDH分析, 场类型, 结束时间, 结果地址, 的, 的, 的, 的, 处理数据, 算法书签, 多beams, FDH处理数据, 提取数据, =, 输入, F, *, ^, e, 的, -, t, /, ^, 的, 括号, 的, 括号, t_0, -, 2, ^, \Delta, 2, ^, e, *, i, 的, 括号, -, *, \omega_0, t, *, ^, e, *, i, 的, 括号, -, \omega, *, 的, 括号, \omega_0, t_0, *, ^, e, *, 分母, 分子, 分式, 的, 括号, 1, 的, 4, 的, -, -, \omega, *, ^, 的, 括号, \omega_0, 2, \Delta, *, 输入, sqrt, \pi, 的, \Delta, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 验证公式, 的, 测试fft含义, 的, FDH基础算法验证程序, 参考论文, 的, 的, 的, 的, 的, 基础算法, Downer18, 的, 的, 的, 的, 的, 的, 的, FDH, 目录, 的, 的, PIC模拟, 初始参数, 的, 分析相位, 的, 一维分布, 的, 二维相位, 的, 20230504, 的, 稳定性, 的, 一维分布对比, 的, 二维分布相位, 的, 弱光相位, 的, 长波_一维分布, 的, 长波_二维分布, 的, 方格_二维分布, 的, 方格_一维分布, 的, 1_8_um_一维, 的, 1_8_um_二维, 的, 查看场分布, 的, 1800磁场分布, 的, 800磁场分布, 的, PIConGPU模拟, 的, 场景, 空间点, 在, 样式, 新建主语, 新建主语, 新建主语, 空间点, 在, 样式, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 空间点, 在, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 公式2, 公式2, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 的, 运行模拟, 的, p, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 新建主语, 的, 探测类型, 的, 探测类型, 的, 探测间隔, 的, 平面, 的, 位置, 的, 探测类型, 探测场, 的, png输出, 的, 模拟空间, 的, 窗口, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 格点尺寸, 的, 深度, 的, 时间步长, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 启动时间, 的, 速度, plasma, 的, pump, 的, 的, 数密度, 的, 上升沿, 的, a0, 的, 波长, 的, 腰宽, 的, 展宽, 的, 偏振, A, 的, 的, 焦点位置, 空间点, 在, probe, 的, 的, a0, 的, 波长, 的, 腰宽, 的, 展宽, 的, 焦点位置, 的, 偏振, 的, 起始位置, 的, 起始位置, 的, 模拟动画, 的, 地址, 的, 状态, 的, 保存代码, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 的, Smilei模拟, 的, 场景, 的, 运行模拟, 的, p, 的, 保存样本, 的, 地址, 窗口, 的, 模拟空间, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 的, 启动时间, 的, 的, 的, 速度, 的, probe, 的, 的, a0, 的, 展宽, 的, 腰宽, 的, 偏振态, 的, A, 空间点, 在, 的, 焦点位置, 的, 波长, pump, 的, 的, a0, 的, 波长, 的, 展宽, 的, 腰宽, 的, 偏振态, 的, 焦点位置, plasma, 的, 的, 数密度, 的, 模拟动画, 的, 保存代码, 探测场, 的, 的, 探测类型, 的, 探测间隔, 追踪, 探测, 外场, 粒子, 光束, 窗口, 空间, 地址, 代码, 的, 的, 插入, 的, 的, 的, 的, 的, 的, 的, 的, 状态, 手, 的, 获取数据, 的, 直接分析h5, 的, 初次读取, 的, read_data_Smilei_h5, M函数, 的, 地址, read_data_Smilei_h5, 的, 记忆, read_data_Smilei_h5, 的, 显示动画, 手, 的, 获取数据, 的, 读取h5, 的, 纵切面, 的, 横切面, 的, read_data_PIConGPU_h5_3D, M函数, 的, 地址, read_data_PIConGPU_h5_3D, 的, read_data_PIConGPU_h5_3D, 的, 保存, 的, 扫描截面, 的, 相位分布, 的, 扫描相位, 手, 的, 保存, 的, 20221002, 的, 分布图, 的, 格点尺寸, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 的, 高分辨率, 的, 读取h5_2D, 手, 的, 相位分布, 的, 动画, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 的, 探测类型, 的, 探测间隔, 节点, 顺序, 的, 节点, 顺序, 的, 的, profile, 手, 的, 示意图, 的, 场景1, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 样式, 样式, 样式, 样式, A1, 的, A2, 的, A3, 的, A4, 的, L1, 的, L2, 的, L3, 的, L4, 的, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 的, 经过, 的, 经过, 的, 经过, 的, 经过, 的, 经过, 的, 经过, 的, 经过, 的, 经过, 样式, y, 的, x, 的, 类型, 的, 样式, y, 的, x, 的, 类型, 的, 样式, y, 的, x, 的, 类型, 的, 样式, y, 的, x, 的, 类型, 的, 的, 方向, 的, 方向, 的, 的, 的, 的, 的, 间距, 的, 的, 的, 的, 的, 间距, 未知, 的, 的, 的, 未知, 的, 的, 的, 代码, 回收站, ., ., ., o, 坐标方程, 调用, 的, 的, 求解, 的, 的, 的, 的, 的, 的, 代码, ., ., ., o, 坐标方程, 调用, 的, 的, 求解, 的, 的, 的, 的, 的, 的, 的, 代码, 变量, 的, 变量, 的, 变量, 的, 变量, 的, 变量, 的, 变量, 的, 变量, 的, 变量, 的, 命名空间, 的, 的, 的, 的, 的, 的, 的, 后, 的, 初值, 的, 顺序, 的, 来源, 的, 类型, 的, 来源, 的, 类型, 的, 来源, 的, 类型, 的, 来源, 的, 类型, 的, 代码结构, 的, 的, JS函数, JS代码, 的, 的, SVG, 图1, 的, 的, 的, 缩进, 图形初值, 的, 缩进, 的, 缩进, 画图, 的, 缩进, 顺序, 的, 插入, 的, 的, 的, 的, 的, 画图, 的, 的, 插入, 节点, 节点, 节点, 节点, 节点, 节点, 线, 的, 顺序, ys, 的, 顺序, xs, 的, 顺序, pts, 节点, 节点, 节点, 的, 的, 顺序, 的, 的, 顺序, 的, 的, 顺序, 的, 的, 插入, 的, 的, 插入, 的, 的, 的, 的, 的, 插入, 的, 的, 的, 的, 的, 的, 节点, 节点, 节点, 节点, 节点, 节点, 线, 的, 顺序, ys, 的, 顺序, xs, 的, 顺序, pts, 节点, 节点, 节点, 的, 的, 的, 的, 的, 插入, 的, 的, 插入, 的, 的, 的, 的, 的, 插入, 的, 的, 的, 的, 的, 的, 节点, 节点, 节点, 节点, 节点, 节点, 线, 的, 顺序, ys, 的, 顺序, xs, 的, 顺序, pts, 节点, 节点, 节点, 的, 的, 的, 的, 的, 插入, 的, 的, 插入, 的, 的, 的, 的, 的, 插入, 的, 的, 的, 的, 的, 的, 节点, 节点, 节点, 节点, 节点, 节点, 线, 的, 顺序, ys, 的, 顺序, xs, 的, 顺序, pts, 节点, 节点, 节点, 的, 的, 的, 的, 的, 插入, 的, 的, 插入, 的, 的, 的, 的, 的, 插入, 的, 的, 的, 的, 的, 的, 节点, 节点, 节点, 的, 的, 的, 节点, 节点, 节点, 的, 的, 的, 节点, 节点, 节点, 的, 的, 的, 节点, 节点, 节点, 的, 的, 的, 的, 20230517, 的, 模拟过程, 的, Smilei结果, 的, PIConGPU结果, 的, 光斑形状, 的, 截面扫描, 的, 光斑, 的, 光斑演化, 的, 高a0问题, 的, 800nm, 的, 1800nm, 的, 低分辨率问题, 的, 分析日志, 的, 的, 探针理论, 的, 模拟数据, 的, 模拟动画, 的, 模拟数据_v, 的, 模拟数据_probe, 的, 模拟数据, 的, 理论探针, 的, 速度分布, 的, 查看速度分布, 的, 整理速度分布, 的, 理论探针_2D, 的, 理论探针_debug, 的, 1D理论_矩阵, 的, 流场分析, 的, 获取数据, 的, 一维数据, 的, 密度分布, 的, 保存, 的, DJ对比, 的, 二维分布, 的, carrier_envelop_probe, M函数, 的, 地址, 的, 测试, carrier_envelop_probe, 的, carrier_envelop_probe, 的, 计算波包, 的, DJ对比_2, 手, 在, 的, 等效质量, 的, 流场分析2, 的, 获取数据, 的, 计算质量, 的, 分布包络, 的, 初步, 的, 等效质量, 的, 对比相位差, 的, 获取数据2, 手, 的, 保存, 的, 对比相位差0, 手, 的, 单位换算, 的, 保存, 手, 手, 手, 的, 扫描参数, 的, 扫描波长, 的, 获取数据, 的, 对比分布, 的, 二维分布, 的, 基本数据, 的, 查看分布, 手, 在, 的, 二维分布, 的, 一维相位, 的, 简单关系, 的, [1]., 表达式, 的, 公式, 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 回收站, [8]., 表达式, 的, 公式, 的, 变量, [9]., 表达式, 的, 公式, 的, 变量, 的, [10]., 表达式, 的, 公式, 的, 保存, 的, 比较相位和jx, 的, jx和jy, 的, gamma分布, 的, [11]., 表达式, 的, 公式, 的, jx和Ey, 的, jx和drho, 的, [12]., 的, [13]., 的, [14]., 的, [15]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, b, b, 矩阵, 矩阵, 矩阵, 矩阵, 矩阵, 矩阵, 矩阵, 的, 草稿, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 然后, 调用, 求解, 调用, 求解, 的, 的, 的, 的, 的, 的, 相位分布, 的, 扫描密度, 激光, 的, plasma, 的, 经过, 的, 的, a0, 的, 密度, 的, 的, 的, 的, 的, 的, 未知, 腰宽, 的, 代码, 回收站, ., 求解, 波数, 的, 求解, 角频率, 的, ., o, 等离子体频率, 调用, 然后, ., o, 光学基本量, 调用, 然后, ., o, LWFA匹配条件, 调用, 的, 的, 求解, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 计算过程, 未知量, 的, 公式, 表达式, 的, [1]., 的, 的, 函数库, 公式, 表达式, 的, [2]., 的, 的, 函数库, 公式, 表达式, 的, [3]., 的, 的, 函数库, 的, w_1, 的, \omega_1, 的, k_1, 的, w_1, 回收站, o, 的, 求解, 的, 的, [4]., 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 的, 验证公式, 手, 的, 分析数据, 的, 获取数据, 的, 查看分布, 的, 二维分布, 的, 相位, 的, 平面, 的, 位置, 节点, 顺序, 的, 节点, 顺序, 的, 手, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 手, 的, [11.1]., 表达式, 的, 公式, 的, jy和Ey, 的, 多普勒效应, 在, 在, 手, 的, 查看相位, 手, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 手, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, 节点, 顺序, 的, info, 的, myscript, 的, incidentField, 的, png, 的, grid, 的, density, 的, 节点, 顺序, 的, 地址, 地址, 地址, 地址, 地址, 地址, 的, 的, 的, 的, 的, 的, 的, 测试梯度效应, 手, 
### 关联
#, #, #, #, #, #, 10#2, 10#3, 10#4, 10#5, #, #, #, 15#11, 15#12, #, #, #, #, 23#15, 23#16, 23#17, 23#18, #, 177#, #, #, #, 30#61, 30#, #, 33#50, 33#42, #, 29#33, 36#43, #, 40#47, 40#45, 40#36, #, 42#40, #, #, #40, #, 47#48, #, #, 50#54, #, 52#57, #, 54#52, #, #52, 57#58, #, #, 61#75, 61#65, #, 63#70, #, 65#63, #, 67#71, #, 70#72, 70#67, #, #, #, 75#98, 75#81, #, 79#92, 79#, 79#, #, 81#79, #, #, 78#82, #, 77#84, #79, 88#93, #, 92#95, 92#94, 92#88, #, #, #, #, 98#101, 98#, #, #, 97#99, #, 165#30, 165#29, 165#33, 165#32, 165#42, 165#40, 165#36, 165#35, 165#43, 165#44, 165#38, 165#45, 165#37, 165#47, 165#46, 165#48, 165#31, 165#50, 165#49, 165#54, 165#52, 165#55, 165#51, 165#57, 165#56, 165#58, 165#28, 165#61, 165#60, 165#65, 165#63, 165#62, 165#70, 165#67, 165#66, 165#71, 165#68, 165#72, 165#59, 165#75, 165#74, 165#81, 165#79, 165#78, 165#77, 165#82, 165#84, 165#86, 165#76, 165#92, 165#88, 165#87, 165#93, 165#90, 165#94, 165#89, 165#95, 165#73, 165#98, 165#97, 165#99, 165#96, 165#101, #, 167#165, #, 169#167, #, 177#, 176#25, 176#26, 176#27, 176#169, 176#170, #, #, 185#0, 185#1, 185#10, 185#23, 185#24, 185#176, 185#177, #, #, 186#185, 186#189, #, #, 190#192, #, 192#194, #, 192#196, #, 190#198, #, 198#200, #, 198#202, #, 198#204, #, 198#206, #, 198#208, #, 198#210, #, 198#212, #, 198#214, #, 198#216, #, 198#218, #, 198#220, #, 220#222, #, 220#224, #, 189#226, #, 226#228, #, #, #229, #, 228#, 228#, 228#, #, #235, #, 228#, 228#, 228#, 228#, 228#, 228#, 228#, 228#, 228#, #, #247, 228#, 228#, 228#, 228#, 228#, 228#, 228#, 228#, 228#, #, #, 228#, 228#, 228#, 228#, 228#, 228#, #, #, 267#266, #, #, 270#269, #, #, 273#272, 226#276, #, 276#278, #, 228#, 228#, 228#, 228#, 228#, 228#, #286, #, #288, #, #290, #, #292, #, #294, #, #296, #, #, 228#297, #, 228#299, #, 228#301, #, 228#303, #, 301#305, #, 301#307, #, 301#309, #, 301#311, #, 301#313, 301#, #, 301#316, 301#319, #, 301#321, #, 301#323, #, #, 303#324, #, 303#326, #, 303#328, #, 303#330, #, 303#332, 303#, #, 303#335, 303#338, #, 303#340, #, #, 228#341, #, 228#343, 341#346, #, 341#348, #, 343#350, #, 343#352, #, 343#354, #, 343#356, #, 343#358, #, #, 228#359, 343#362, #359, #, 359#363, #, 228#365, 365#368, #, 365#370, #, 365#372, #, 365#374, #, 365#376, #359, 365#378, #, 343#380, #, 365#382, #, 228#384, #, 228#386, #, 228#388, #, 228#390, #, #, #, 392#391, #, #, 395#394, #, #, 398#397, #, #, 401#400, 189#404, #, 404#406, #, 404#408, #, 408#410, #, 404#412, #, 406#414, #, #, 406#415, #, 406#417, #, 417#419, #, 417#421, #, 417#423, #, 417#425, #, 417#427, 417#, #, 417#430, #, 415#432, #, 415#434, #, 415#436, #, 415#438, #, 415#440, 415#, #, 415#443, 406#448, 406#447, #, 415#447, 406#452, 406#451, #, 415#451, #, 406#453, 453#456, #, 453#458, #, 453#460, #, 453#462, #, 406#464, #, #, 464#465, 453#468, #464, 453#470, #, #, 406#471, 471#474, #, 471#476, #, 471#478, #, 471#480, #, 471#482, #, 471#484, #464, #, 406#485, 485#488, #, 406#490, #, 406#492, #, #, 406#493, 493#496, #, 493#498, #, #, #, #, #, #, #, #, #, #, 510#506, 507#510, 507#, 510#505, 510#504, 510#503, 510#502, 510#501, 510#500, 510#499, 406#519, #, #408, 404#522, #, 522#524, #, 524#526, #, 524#528, #, 528#, 528#531, #, #528, 534#532, 186#, #, 524#537, #, #540, 226#540, #, 540#542, #, 542#544, #, 542#546, #, 542#548, #, 548#, 548#551, #, #548, 534#552, #, 542#556, #, 542#558, #, 542#560, #, 542#562, #, #408, 524#565, #, 524#567, #, 567#569, #, 417#571, #, #, #, 573#572, #, #, 576#575, #, #, 579#578, 524#582, #, 540#584, #, #408, 584#587, #, 584#589, #, #, #, 591#590, #, #, 594#593, #, #, 597#596, #, #, 600#599, 297#603, #, 297#605, #, #, #, 607#606, #, #, 610#609, 542#613, #, #408, 189#616, #, 616#618, #, #, #619, #, #621, #, #623, #, #625, #, #, #, #, #, 618#631, #, 618#633, #, 618#635, #, 618#637, #, 618#639, #, 618#641, #, 618#643, #, 618#645, #, 637#647, #, 635#649, #, 633#651, #, 631#653, 618#656, 641#633, 618#658, 639#633, 618#660, 643#635, 618#662, 641#635, 618#664, 645#637, 618#666, 643#637, 618#668, 639#631, 618#670, 645#631, 645#, #, 645#672, #, 645#674, #, 645#676, 643#, #, 643#679, #, 643#681, #, 643#683, 641#, #, 641#686, #, 641#688, #, 641#690, 639#, #, 639#693, #, 639#695, #, 639#697, 645#700, #, 641#702, #, 618#704, 631#708, 618#706, 637#708, 618#708, #, 618#710, 635#714, 618#712, 633#714, 618#714, #, #649, 618#650, 618#649, 618#715, #647, 618#648, 618#647, 618#719, #, 618#, 733#651, 733#702, 733#714, 733#649, #, 733#729, 724#733, 618#733, #649, 724#729, 724#730, 724#728, 724#726, 724#725, 724#727, #, 749#653, 749#700, 749#708, 749#647, #, 749#745, 724#749, 618#749, #647, 724#745, 724#746, 724#744, 724#742, 724#741, 724#743, 618#757, #, #649, 774#758, #702, 774#760, #651, 774#762, #714, 774#764, #647, 774#766, #700, 774#768, #653, 774#770, #708, 774#772, #, 757#774, 784#760, 784#762, 784#764, 784#768, 784#770, 784#772, 733#749, 786#782, #, 757#784, #, 757#786, #733, 790#788, #, 762#790, #733, 794#792, #, 758#794, #749, 798#796, #, 770#798, #749, 802#800, #, 766#802, #, 757#804, 808#807, 808#, #, 757#808, 812#811, 812#, #, 757#812, 808#822, 808#817, 827#817, #, 827#817, 827#784, 827#784, 827#822, #, 827#822, 827#825, #, 827#825, 808#, 827#784, 827#825, 827#817, 827#822, 812#833, #, 836#833, 812#836, 812#, #, #, #, #837, #838, #839, #, 846#845, 846#, #, 849#848, 849#, #, 852#851, 852#, #, #899, #900, #901, 858#855, 822#858, 822#, 861#854, 817#861, 817#, 864#853, 833#864, 833#, 867#852, 853#867, 853#, 870#849, 855#870, 855#, 870#846, 867#843, 870#843, 876#843, 854#876, 854#, 851#842, 848#841, 845#840, 851#839, 848#838, 845#837, #, #, #, #883, #884, #885, #, 892#891, 892#, #, 895#894, 895#, #, 898#897, 898#, #, #939, #940, #941, 858#901, 861#900, 864#899, 907#898, 899#907, 899#, 910#895, 901#910, 901#, 910#892, 907#889, 910#889, 916#889, 900#916, 900#, 897#888, 894#887, 891#886, 897#885, 894#884, 891#883, #, #, #, #923, #924, #925, #, 932#931, 932#, #, 935#934, 935#, #, 938#937, 938#, #, #979, #980, #981, 858#941, 861#940, 864#939, 947#938, 939#947, 939#, 950#935, 941#950, 941#, 950#932, 947#929, 950#929, 956#929, 940#956, 940#, 937#928, 934#927, 931#926, 937#925, 934#924, 931#923, #, #, #, #963, #964, #965, #, 972#971, 972#, #, 975#974, 975#, #, 978#977, 978#, #, #1003, #1004, #1005, 858#981, 861#980, 864#979, 987#978, 979#987, 979#, 990#975, 981#990, 981#, 990#972, 987#969, 990#969, 996#969, 980#996, 980#, 977#968, 974#967, 971#966, 977#965, 974#964, 971#963, #1009, #1010, #1011, 858#1005, 861#1004, 864#1003, #1015, #1016, #1017, 858#1011, 861#1010, 864#1009, #1021, #1022, #1023, 858#1017, 861#1016, 864#1015, #, #, #, 858#1023, 861#1022, 864#1021, 190#1028, #, 1028#1030, #, 1030#1032, #, 1030#1034, #, 1028#1036, #, 1036#1038, #, 1036#1040, #, 1036#1042, #, 1028#1044, #, 1044#1046, #, 1044#1048, #, 1028#1050, #, 189#1052, #, 1052#190, 1052#1055, #, 1055#1057, #, 1055#1059, #, 1055#1061, #, 1055#1063, #, 1063#1065, #, 1055#1067, #, 1055#1069, #, 1069#1071, #, 1069#1073, #, 1055#1075, #, 1055#1077, #, 1055#1079, #, 1052#1081, #, 1081#1083, #, 1081#1085, #, 1081#1087, #, 1081#1089, #, 1081#1091, #, 1081#1093, #, 1081#1095, #, 1095#, 1095#1098, #, 1095#1100, #, #1095, 534#1101, #, 1081#1105, #, 1081#1107, #, #1052, #, 1081#1111, #, 1052#1113, #, 1113#1115, #, 1113#1117, #, 1113#1119, #, 1119#1121, #, 1119#1123, #, 1119#1125, #, 1113#1127, #, #1113, 1113#1130, #, 1119#1132, #, #408, 1052#1135, #, 408#1137, #, #408, #408, #522, 1052#1142, #, 1142#1144, #, 1144#1146, #, 1144#1148, #, 1148#1150, #, 1146#1152, #, 1144#1154, #, #1162, #, 1154#1158, #, 1148#1160, #, 1148#1162, #, 1162#1164, #, #, 1164#1165, 1164#, 1162#1169, #, 1162#1171, #, 1162#1173, #, 1162#1175, #, #, 1169#1176, 1169#, #, 1171#1179, 1171#, #, 1173#1182, 1173#, #, 1175#1185, 1175#, 1162#1189, #, 1162#1191, #, #, 1189#1192, 1189#, #, 1191#1195, 1191#, 1162#, #, #, 1199#1200, 1199#, 1162#1199, #, #, #, 1205#1206, 1205#, 1162#1205, #, 1162#1212, #, #, 1212#1213, 1212#, 1148#1217, #, 1148#1219, #, 1148#1221, #, 1154#1223, #, 1162#1225, #, #, 1225#1226, 1225#, 1148#1230, #, 1148#1232, #, 1162#1234, #, 1162#1236, #, 1162#1238, #, 1162#1240, #, #, 1234#1241, 1234#, #, 1236#1244, 1236#, #, 1238#1247, 1238#, #, 1240#1250, 1240#, #, #, #, #, #, #, #, #, #, #, 1219#1264, #, 1264#1266, #, 1264#1268, #, 1264#1270, #, 1264#1272, #, 1264#1274, #, #1162, #, 1266#1276, 1266#, #, 1268#1279, 1268#, 1284#1286, 1284#, #, 1286#, 1162#, 1198#1283, 1198#1284, 1198#1282, 1198#1285, 1198#1286, 1158#1293, #, 1142#1295, #, #, 1295#1296, #, 1295#1298, 1296#1298, 1295#1300, 1296#1303, #, 1298#1305, #, 1316#1312, 1316#1313, 1316#1314, 1295#1312, 1295#1313, 1295#1314, #1313, #, 1296#1313, #, 1295#, 1340#1303, #1319, #, 1298#1319, #1322, #, 1298#1322, 1321#1305, 1321#1322, #, 1321#1326, 1321#1318, 1318#1322, 1318#1319, #, 1318#1331, 1318#1340, 1340#1319, 1340#1313, #, 1340#1336, 1316#1340, 1295#1340, #1313, 1316#1326, 1316#1327, 1316#1323, 1316#1322, 1316#1325, 1316#1324, 1316#1321, 1316#1328, 1316#1331, 1316#1332, 1316#1320, 1316#1319, 1316#1330, 1316#1329, 1316#1318, 1316#1333, 1316#1336, 1316#1337, 1316#1335, 1316#1334, 1316#1317, 1295#1363, #, #, 1363#1364, 1369#, #, 1369#1367, #, 1363#1369, 1318#1372, #, 1376#, #, 1376#1374, #, 1363#1376, 1321#1379, #, 1383#, #, 1383#1381, #, 1363#1383, 1340#1386, #, 1364#1388, #, 1364#1390, #, 1364#1392, #, 1395#1394, #, 1363#, 1398#1394, 1395#1398, #1394, 1395#1396, 1363#1401, #, #, 1401#1402, 1401#, #, 1367#1405, #, 1367#1407, #, 1374#1409, #, 1374#1411, 1363#1414, #, #408, 1295#1417, #, 1417#1419, #, 1417#1421, #, 1421#1423, #, 1160#1425, #, 297#1427, #, 297#1429, #, #, #, 1431#1430, #, #, 1434#1433, #408, #, #, 1438#1437, #, #, 1441#1440, #, #, 1444#1443, #, #, 1447#1446, #, #, 1450#1449, #1148, 1162#1454, #, #, 1454#1455, 1454#, 1230#1459, #, 1148#1461, #, #, #, #522, 524#1466, #, #408, #, 1470#1468, #, 492#1470, #, 1474#1472, #, 492#1474, #, 1478#1476, #, 492#1478, #408, #, #, 1482#1481, #, #, 1485#1484, #, #, 1488#1487, #, #, 1491#1490, #, #, 1494#1493, #, 390#1496, #, 390#1498, #, 390#1500, #, 390#1502, #, 390#1504, #, 390#1506, #, #, 1509#1508, #, #, #, #, #, #, 1496#1516, 1498#1515, 1500#1514, 1502#1513, 1504#1512, 1506#1511, 1148#1524, #, #408, 
### 内容
#0, 16:
文档\物理问题\FDH.ftxt
## end
#1, 3:
...
## end
#2, 1245:
<!--
+[返回目录]
+[网页](web,等离子体折射率)
-->


<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:1.5em">

假设等离子体中有线偏振横波平面波. 等离子体初始静止, 受无限大平面波影响而发生整体震动. 震动过程中, 电子密度始终均匀分布, 只是电流密度的分布发生了变化.<br>
于是有:
$$\vec{v} \parallel \vec{E}, \vec{k} \bot \vec{E}$$
不考虑磁场的作用, 于是有,

$$
\begin{cases}
\vec{k} \cdot \vec{E}=0\\
\vec{k} \cdot (n \vec{v}) = \frac{\partial n}{\partial t} = 0\\
i \vec{k} \times \vec{E} =i \omega \vec{B}\\
i \vec{k} \times \vec{B} =\mu_0 \vec{J} - i \mu_0 \epsilon_0 \omega \vec{E}\\
i \omega \vec{v} = \frac{e}{m_e} \vec{E}
\end{cases}
$$
所以有,
$$
\vec{J}=-e n \vec{v}=-\frac{n e^2}{i \omega m_e} \vec{E}
$$
代入波动方程就会变成:
$$
i \vec{k} \times \vec{B}=-\frac{i\omega}{c^2} \vec{E}+\mu_0 \vec{J}
=-\frac{i\omega}{c^2} \vec{E}-\mu_0 \frac{n e^2}{i \omega m_e} \vec{E}\\
\Rightarrow
i \vec{k} \times (i \vec{k} \times \vec{E}) = \frac{\omega^2}{c^2} \vec{E}-\mu_0\frac{n e^2}{m_e} \vec{E}
=\frac{\omega^2}{c^2}(1-\frac{n e^2}{\epsilon_0 m_e \omega^2}) \vec{E}\\
\Rightarrow
\vec{k}^2 \vec{E} = \frac{\omega^2}{c^2} (1-\frac{\omega_p^2}{\omega^2} )\vec{E}
$$
    </mathjax></p>
  </body>
</html>
## end
#3, 4062:
<!--
+[返回目录]
+[网页](web,测试)
-->

<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<style>
canvas {
    border:1px solid #d3d3d3;
    background-color: #f1f1f1;
}
</style>
</head>
<body onload="startGame()">
<script>

var myGamePiece;
var myObstacles = [];
var myScore;

function startGame() {
    myGamePiece = new component(30, 30, "red", 10, 120);
    myGamePiece.gravity = 0.05;
    myScore = new component("30px", "Consolas", "black", 280, 40, "text");
    myGameArea.start();
}

var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 480;
        this.canvas.height = 270;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.frameNo = 0;
        this.interval = setInterval(updateGameArea, 20);
        },
    clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
}

function component(width, height, color, x, y, type) {
    this.type = type;
    this.score = 0;
    this.width = width;
    this.height = height;
    this.speedX = 0;
    this.speedY = 0;    
    this.x = x;
    this.y = y;
    this.gravity = 0;
    this.gravitySpeed = 0;
    this.update = function() {
        ctx = myGameArea.context;
        if (this.type == "text") {
            ctx.font = this.width + " " + this.height;
            ctx.fillStyle = color;
            ctx.fillText(this.text, this.x, this.y);
        } else {
            ctx.fillStyle = color;
            ctx.fillRect(this.x, this.y, this.width, this.height);
        }
    }
    this.newPos = function() {
        this.gravitySpeed += this.gravity;
        this.x += this.speedX;
        this.y += this.speedY + this.gravitySpeed;
        this.hitBottom();
    }
    this.hitBottom = function() {
        var rockbottom = myGameArea.canvas.height - this.height;
        if (this.y > rockbottom) {
            this.y = rockbottom;
            this.gravitySpeed = 0;
        }
    }
    this.crashWith = function(otherobj) {
        var myleft = this.x;
        var myright = this.x + (this.width);
        var mytop = this.y;
        var mybottom = this.y + (this.height);
        var otherleft = otherobj.x;
        var otherright = otherobj.x + (otherobj.width);
        var othertop = otherobj.y;
        var otherbottom = otherobj.y + (otherobj.height);
        var crash = true;
        if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {
            crash = false;
        }
        return crash;
    }
}

function updateGameArea() {
    var x, height, gap, minHeight, maxHeight, minGap, maxGap;
    for (i = 0; i < myObstacles.length; i += 1) {
        if (myGamePiece.crashWith(myObstacles[i])) {
            return;
        } 
    }
    myGameArea.clear();
    myGameArea.frameNo += 1;
    if (myGameArea.frameNo == 1 || everyinterval(150)) {
        x = myGameArea.canvas.width;
        minHeight = 20;
        maxHeight = 200;
        height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);
        minGap = 50;
        maxGap = 200;
        gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);
        myObstacles.push(new component(10, height, "green", x, 0));
        myObstacles.push(new component(10, x - height - gap, "green", x, height + gap));
    }
    for (i = 0; i < myObstacles.length; i += 1) {
        myObstacles[i].x += -1;
        myObstacles[i].update();
    }
    myScore.text="SCORE: " + myGameArea.frameNo;
    myScore.update();
    myGamePiece.newPos();
    myGamePiece.update();
}

function everyinterval(n) {
    if ((myGameArea.frameNo / n) % 1 == 0) {return true;}
    return false;
}

function accelerate(n) {
    myGamePiece.gravity = n;
}
</script>
<br>
<button onmousedown="accelerate(-0.2)" onmouseup="accelerate(0.05)">ACCELERATE</button>
<p>Use the ACCELERATE button to stay in the air</p>
<p>How long can you stay alive?</p>
</body>
</html>
## end
#4, 816:
<!--
+[返回目录]
+[网页](web,微扰流体方程)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:2.3em">
$$
\begin{cases}
\nabla \cdot  \vec{E}  = -\frac{n e}{\epsilon_0}\\
\nabla \times   \vec{E}   = -\frac{\partial \vec{B}}{\partial t}\\
\nabla \cdot  \vec{B}  = 0\\
\nabla \times   \vec{B}   = \mu_0 \vec{J}+\mu_0 \epsilon_0 \frac{\partial \vec{E}}{\partial t}\\
\nabla \cdot (n_0 \vec{u} + n \vec{v}_0) = -\frac{\partial n}{\partial t}\\
\frac{\partial \vec{u}}{\partial t} +\vec{v}_0\cdot \nabla \vec{u} + \vec{u} \cdot \nabla \vec{v}_0
=-\frac{e}{m_e} (\vec{E}+\vec{u} \times \vec{B}_0+\vec{v}_0 \times \vec{B})
\end{cases}
$$
    </mathjax></p>
  </body>
</html>

## end
#5, 742:
<!--
+[返回目录]
+[网页](web,等离子体流体方程)
-->

<html>
  <head><script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
  </head>
  <body>
    <p><mathjax style="font-size:2.3em">
$$
\begin{cases}
\nabla \bullet  \vec{E}  = -\frac{n e}{\epsilon_0}\\
\nabla \times   \vec{E}   = -\frac{\partial \vec{B}}{\partial t}\\
\nabla \bullet  \vec{B}  = 0\\
\nabla \times   \vec{B}   = \mu_0 \vec{J}+\mu_0 \epsilon_0 \frac{\partial \vec{E}}{\partial t}\\
\nabla \bullet (n \vec{v}) = -\frac{\partial n}{\partial t}\\
m_e (\frac{\partial \vec{v}}{\partial t} +\vec{v}\bullet \nabla \vec{v})=-e \vec{E}-e \vec{v} \times \vec{B}
\end{cases}
$$
    </mathjax></p>
  </body>
</html>


## end
#10, 211:
+[返回目录]

大概思路是, 建立一个微扰的流体方程, 然后比较流体模拟和PIC模拟在结果上的区别. 
如果可以用流体模拟做的话, 我们就可以尝试跑大量算例, 然后用DL来试着做反解. 

好了, 现在先把公式还有推导过程用html显示出来.
等离子体流体方程:...
+[网页](web,等离子体流体方程)
微扰流体方程:...
等离子体折射率:...
测试:...

好了, 方程有了, 之后就可以写一些模拟了~~

## end
#11, 14:
+[返回目录]
+[内容]

## end
#12, 14:
+[返回目录]
+[内容]

## end
#15, 688:
%{
+[返回目录]
+[matlabStart](,Matlab)
输入:...
输出:...
%}

physics_constant;

dy0 = 8.3e-7;
dx0 = 3.6e-8;
dt0 = 1.e-16;

nx=size(field,2);
ny=size(field,1);

x=dx0*(1:nx);
y=dy0*(1:ny);

t=[-1e4*dt0:dt0:-dt0,x/c];

% extend the field:
field_x0=field0(18,:);

Field0=[zeros(1,1e4),field_x0];
[~,S0]=fft_x(t,Field0);
% S2=S2';

% extend the field:
field_x1=field1(18,:);

Field1=[zeros(1,1e4),field_x1];
[omega,S1]=fft_x(t,Field1);
% S1=S1';

lambda=2*pi*c./omega;


% FDH??
T=300e-15;
S=S1+S0.*exp(-1i*T*omega);
I=abs(S).^2;

[t_I,FI]=fft_x(omega,I);
FI(t_I<150e-15)=0;
[omega_I,fI]=fft_x(t_I,FI);
G=fI./S0;
[t_I,g]=fft_x(omega_I,G);


plot(t_I,g,t*0.85-T*1.52,Field1/max(Field1)*max(g),'--')



## end
#16, 2:
Ez
## end
#17, 2:
12
## end
#18, 72:
C:/Users/cheng/Desktop/Laser/TACC/SLAC/20200729LaserParameters/example00
## end
#23, 585:
+[返回目录]
+[返回]
的(记忆,日记)->+[跳转](,日记)

20200812:
的(知识,算例)->算例(,激光参数验证)->+[跳转](,激光参数验证)
的(知识,S应用)->S应用(,PIC后处理)->+[跳转](,PIC后处理)
结果地址::C:/Users/cheng/Desktop/Laser/TACC/SLAC/20200729LaserParameters/example00
结束时间::12
场类型::Ez

的(知识,S应用)->S应用(,PIC后处理)->的(PIC后处理,结果地址#0)->+[修改内容](结果地址,结果地址#0)
的(知识,S应用)->S应用(,PIC后处理)->的(PIC后处理,结束时间)->+[修改内容](结束时间#1,结束时间)
的(知识,S应用)->S应用(,PIC后处理)->的(PIC后处理,场类型)->+[修改内容](场类型#1,场类型)

的(知识,S应用)->S应用(,PIC后处理)->的(PIC后处理,核心)->+[M函数](,核心)

FDH分析:...
+[创建函数](,FDH分析)

问题是, 结果的单位... 除了要处理参考频率, 还要处理单位格子的长度. 那么, 先就直接把数据拷过来吧. 


+[联想](,+[算例])
激光参数验证(20200728,算例,Smilei,)
## end
#24, 2:
42
## end
#25, 313:
"""
+[返回目录]
的(记忆,日记)->+[跳转](,日记)

"""


import happi,math

lambda_0=0.8e-6
c=3e8
omega_r=2*math.pi*c/lambda_0
fileName=r"C:\Users\cheng\Desktop\Laser\TACC\SLAC\20200727TwoPulses\example0"

S=happi.Open(fileName,reference_angular_frequency_SI=omega_r)
diag=S.Field(0,'Rho',units={"x":"um","y":"um"})
diag.animate()
## end
#26, 1122:
%{
+[返回目录]
+[返回]
+[显示页面](browser,)
+[matlabStart](,Matlab)
%}

physics_constant;
field_type='Ey';
fileName1='C:\Users\cheng\Desktop\Laser\TACC\SLAC\20200720plasmaChannel\example10\Fields0.h5';
fileName2='C:\Users\cheng\Desktop\Laser\TACC\SLAC\20200720plasmaChannel\example1\Fields0.h5';
info1=h5info(fileName1);

addpath('C:\Users\cheng\Desktop\Laser\TACC\programs');
addpath('C:\Users\cheng\Desktop\Laser\TACC\programs\20200203parameterSearch');

t_size=size(info1.Groups.Groups,1);

if t_size>12
t_size=12;
end

field1=getFieldDataFromHdf5(fileName1,field_type,6);
field2=getFieldDataFromHdf5(fileName2,field_type,11);

field=[field1,field2];

Ly=80e-6;
Lx=40e-6;
y=linspace(0,Ly,size(field,1));
x=linspace(0,2*Lx,size(field,2));
[X,Y]=meshgrid(x,y);
T=X/c;

surf(T,Y,field);
shading interp

t=T(1,:)';
[omega_t,f_w]=fft_x(t,field');
lambda_t=2*pi*c./omega_t;
I=abs(f_w).^2;
I(omega_t<0,:)=0;

figure;
Lambda=ones(size(Y,1),1)*lambda_t;
surf(Lambda,Y,I')
shading interp;
y_m=max(max(I));
axis([0,1600e-9,0,Ly,0,y_m*1.2])
view(0,90)

figure;
[x,FDH]=fft_x(omega_t,I);
FDH=abs(FDH);
y=abs(y);
surf(T,Y,FDH')
shading interp
## end
#27, 140:
"""
+[返回目录]

"""

import happi

S=happi.Open(r"C:\Users\cheng\Desktop\Laser\TACC\SLAC\20200720plasmaChannel\example1")
diag=S.Field(0,'Ey')

## end
#165, 131:
F(e^(-(t-t_0)^2/\Delta^2)*e^(-i*\omega_0*t))=e^(i*(\omega-\omege_0)*t_0)*e^(-frac(1,4)*(\omega-\omega_0)^2*\Delta)*sqrt(\pi)*\Delta
## end
#167, 522:
%{
+[返回目录]
验证公式(公式):F(e^(-(t-t_0)^2/\Delta^2)*e^(-i*\omega_0*t))=e^(i*(\omega-\omega_0)*t_0)*e^(-frac(1,4)*(\omega-\omega_0)^2*\Delta)*sqrt(\pi)*\Delta
的(验证公式,F)->+[显示公式](,F)
%}

t_0=1;
Dt=1;
dt=0.1;
omega_0=1;

A=sqrt(pi)*Dt;

f=@(t)exp(-(t-t_0).^2/Dt^2).*exp(-1i*omega_0*t);
F=@(omega)A*exp(-(omega-omega_0).^2*Dt^2/4);

t=-10*Dt:dt:10*Dt;

omega=1/2/dt:-1/20/Dt:-1/2/dt;
omega=omega*2*pi;

fft_f=abs(fft(f(t)))*dt
n=fix(length(fft_f)/2)+1;
f_w=[fft_f(n+1:end),fft_f(1:n)]


plot(omega,f_w,omega,F(omega),'--')
hold off

## end
#169, 585:
%{
+[返回目录]
+[matlabStart](,Matlab)
测试fft含义:...
%}

physics_constant;

lambda=800e-9;
tau=12e-15;
t1=0;
t2=500e-15;
dt=tau/20;

E1=1;
E2=1;

omega=2*pi*c/lambda;

pulse1=@(t)E1*exp(-(t-t1).^2/tau^2).*exp(-1i*omega*t);
pulse2=@(t)E2*exp(-(t-t2).^2/tau^2).*exp(-1i*omega*t);

T1=t1-100*tau;
T2=t2+100*tau;
t=T1:dt:T2;
t=t';

y=pulse1(t)+pulse2(t);
plot(t,y)

figure;
[omega_t,f_w]=fft_x(t,y);
lambda_t=2*pi*c./omega_t;
I=abs(f_w).^2;
plot(lambda_t,I);
y_m=max(I);
axis([0,1600e-9,0,y_m*1.2])

figure
[x,FDH]=fft_x(omega_t,I);
FDH=abs(FDH);
y=abs(y);
plot(x,FDH/max(FDH),t,y/max(y)/2,'--')
## end
#170, 2:
41
## end
#176, 359:
+[返回目录]
的(记忆,日记)->+[跳转](,日记)

参考论文::41
的(知识,论文)->论文(,Downer18)->+[书签](Downer18,参考论文)

输入两个pulse的电场分布, 然后计算它们的能谱. 纵坐标是光强(先做fft, 然后绝对值平方). 最后对I(omega)做傅里叶逆变换.

FDH基础算法验证程序(M程序):...
接下来用之前的数据来做一下FDH.
的(知识,Smilei)->Smilei(,激光探测等离子体)->+[跳转](,激光探测等离子体)
使用例1和例10分别作为参考光和探测光.
的(知识,Smilei)->Smilei(,激光探测等离子体)->的(激光探测等离子体,模拟结果)->+[打开](,模拟结果)

FDH处理数据:...

多beams:...



## end
#177, 41:
C:\Users\cheng\Desktop\paper\Downer18.pdf
## end
#185, 380:
+[返回目录](,FDH)
地址::文档\物理问题\FDH.ftxt
+[导出结构](,FDH)

+[标签](+根目录,)
的(记忆,日记)->+[跳转](,日记)
的(知识,后处理)->后处理(,Matlab版PIC后处理)->+[跳转](,Matlab版PIC后处理)


好了, 现在开始处理FDH的问题了.
这里发展的目标是, 弄清楚FDH的算法. 在模拟上确定FDH在现实应用中会遇到的问题. 最终目标当然是和实验数据结合, 发展一套分析数据的工具.

Downer18(论文,LWFA,探测手段)::C:\Users\cheng\Desktop\paper\Downer18.pdf
+[打开](,Downer18)
算法书签::42
+[书签](Downer18,算法书签)
基础算法:...
处理数据:...
用流体模型进行模拟:...



## end
#186, 57:
FDH:...
PIC模拟:...
创建于 20210413

节点数目统计::
+[设置结构](,节点数目统计)
## end
#189, 239:

Nini, 打开plasma(文件)
Nini, 打开PIConGPU(文件)
Nini, 打开Smilei(文件)
Nini, 打开Smilei生成器(文件)
Nini, 打开周报告(文件)
Nini, 打开BNL实验模拟(文件)


PIConGPU模拟:...
Smilei模拟:...
分析日志:...
(这里有数据分析)
+[新建阅读窗口](,PIConGPU模拟)
+[新建阅读窗口](,Smilei模拟)
+[新建阅读窗口](,分析日志)


示意图:...


## end
#190, 52:

分析相位:...
20230504:...
20230517:...
(有价值的结果, 和问题总结)

## end
#192, 842:
%{
+[M函数](,分析相位)
运行指令"nautilus Matlab"
运行指令"mkdir Matlab/FDH"

一维分布:...
二维相位:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

% filename="/home/xiantao/Documents/PIC/output/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
field_name='Ex';

% j0=110;
for i=0:100:4000;
data_0=read_data_PIConGPU_h5(filename_0,i,'Ex');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ex');
E_x=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,i,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)

end

%{
colormap('default')
+[M函数](,分析相位)
%}
## end
#194, 618:
%{
+[M函数](,分析相位)

一维分布:...
%}

addpath('Matlab/readData');

% filename="/home/xiantao/Documents/PIC/output/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
field_name='Ex';

j0=110;
i=4000;
data_0=read_data_PIConGPU_h5(filename_0,i,'Ex');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ex');
E_x=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,i,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ez');
E_z=data_1-data_0;

x=1:size(E_x,2);
plot(x,E_x(j0,:),x,E_z(j0,:))


%{
colormap('default')
+[M函数](,读取h5)
%}
## end
#196, 872:
%{
+[M函数](,分析相位)
运行指令"nautilus Matlab"
运行指令"mkdir Matlab/FDH"

一维分布:...
二维相位:...

field_spatial_phase(M函数):...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

% filename="/home/xiantao/Documents/PIC/output/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
field_name='Ex';

% j0=110;
for i=0:100:4000;
data_0=read_data_PIConGPU_h5(filename_0,i,'Ex');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ex');
E_x=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,i,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)

end

%{
colormap('default')
+[M函数](,分析相位)
%}
## end
#198, 958:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...
查看场分布:...

弱光相位:...
长波_一维分布:...
长波_二维分布:...
方格_一维分布:...
方格_二维分布:...
1_8_um_一维:...
1_8_um_二维:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=0:100:10200

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)
end

%{
+[M函数](,20230504)
%}
## end
#200, 623:
%{
+[M函数](,20230504)

稳定性:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

% filename="/home/xiantao/Documents/PIC/output/openPMD/simData";
% filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0/openPMD/simData";
field_name='Ey';

j0=128;
for i=2000;
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);

x=1:size(data_0,2);
in_0=data_0(j0,:);
in_1=data_1(j0,:);
plot(x,in_0,x,in_1)
end

%{
+[M函数](,结果稳定性)
%}
## end
#202, 764:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=3500;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
x=1:size(data_0,2);
in_0=data_0(j0,:)-data_1(j0,:);

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
in_1=data_0(j0,:)-data_1(j0,:);


plot(x,in_0,x,in_1,'--')
end

%{
+[M函数](,20230504)
%}
## end
#204, 870:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=3200;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
end

%{
+[M函数](,20230504)
%}
## end
#206, 880:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=6200;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
end

%{
+[M函数](,20230504)
%}
## end
#208, 802:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/long_probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=3000;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
x=1:size(data_0,2);
in_0=data_0(j0,:)-data_1(j0,:);

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
in_1=data_0(j0,:)-data_1(j0,:);


plot(x,in_0,x,in_1,'--')
end

%{
+[M函数](,20230504)
%}
## end
#210, 897:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/BG/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Probe/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/long_probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=3300;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
end

%{
+[M函数](,20230504)
%}
## end
#212, 891:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
长波_二维分布:...
方格_二维分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_square_space/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_01_square_space/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=7300;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
end

%{
+[M函数](,20230504)
%}
## end
#214, 796:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
长波_二维分布:...
方格_二维分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_square_space/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/probe_a0_0_01_square_space/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=128;
for i=4500;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
x=1:size(data_0,2);
in_0=data_0(j0,:)-data_1(j0,:);

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
in_1=data_0(j0,:)-data_1(j0,:);


plot(x,in_0,x,in_1,'--')
end

%{
+[M函数](,20230504)
%}
## end
#216, 807:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
长波_二维分布:...
方格_一维分布:...
方格_二维分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=88;
for i=9500;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
x=1:size(data_0,2);
in_0=data_0(j0,:)-data_1(j0,:);

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
in_1=data_0(j0,:)-data_1(j0,:);


plot(x,in_0,x,in_1,'--')
end

%{
+[M函数](,20230504)
%}
## end
#218, 931:
%{
+[M函数](,20230504)

稳定性:...
一维分布对比:...
二维分布相位:...

弱光相位:...
长波_一维分布:...
长波_二维分布:...
方格_一维分布:...
方格_二维分布:...
1_8_um_一维:...
1_8_um_二维:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0_01/openPMD/simData";


%{
+[M函数](,20230504)
%}
j0=200;
for i=8200;

field_name='Ez';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_z=data_0-data_1;

field_name='Ex';
data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
E_x=data_0-data_1;


ph_z=field_spatial_phase(E_z);
ph_x=field_spatial_phase(E_x);

surf(sin(ph_z-ph_x))
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
end

%{
+[M函数](,20230504)
%}
## end
#220, 579:
%{
+[M函数](,查看场分布)

1800磁场分布:...
800磁场分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

% filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/long_probe_a0_0_01/openPMD/simData";


field_name='Bx';
%{
+[M函数](,查看场分布)
%}
j0=200;
for i=0:100:10000

data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_0(abs(data_0)>3e-3)=0;
surf(data_0)
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)
end

%{
+[M函数](,20230504)
%}
## end
#222, 630:
%{
+[M函数](,查看场分布)

1800磁场分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0_01/openPMD/simData";


field_name='Ez';
%{
+[M函数](,查看场分布)
%}
j0=200;
for i=0:100:10000

data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_1=read_data_PIConGPU_h5(filename_1,i,field_name);
in=data_0-data_1;

% surf(in)
surf(data_0)
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)
end

%{
+[M函数](,20230504)
%}
## end
#224, 579:
%{
+[M函数](,查看场分布)

1800磁场分布:...
800磁场分布:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

% filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/pump_1800_nm_probe_a0_0/openPMD/simData";
filename_0="/media/xiantao/Elements/LWFA/FDH/test_folder/long_probe_a0_0_01/openPMD/simData";


field_name='Bx';
%{
+[M函数](,查看场分布)
%}
j0=200;
for i=0:100:10000

data_0=read_data_PIConGPU_h5(filename_0,i,field_name);
data_0(abs(data_0)>3e-3)=0;
surf(data_0)
% surf(sin(ph_x))
shading interp
view([0,90])
axis([0,size(E_x,2),0,size(E_x,1)])
pause(0.1)
end

%{
+[M函数](,20230504)
%}
## end
#226, 97:
Nini, 打开PIConGPU(文件)

场景:...
运行模拟:...
获取数据:...
+[新建阅读窗口](,场景)
+[新建阅读窗口](,运行模拟)
+[新建阅读窗口](,获取数据)


## end
#228, 1201:
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25
运行指令"nautilus /home/xiantao/Documents/sim_output"
运行指令"mkdir /home/xiantao/Documents/sim_output/FDH"
状态::
状态::上传

有什么

1.772e-07*64
80e-6/64

保存代码:...
+[删除结构](,保存代码)->+[召唤星辰]"生成PIConGPU代码"(场景,保存代码)
+[删除结构](,保存代码)
+[新建阅读窗口](,保存代码)


有探测场
探测场有什么
探测场的探测类型是"fields"
探测场的探测间隔是"500"
探测场的平面是"xy"
探测场的位置是"0.5"
+[删除结构](,探测场)


有png输出
png输出的探测类型是"png"
png输出的探测间隔是"100"
png输出的平面是"xy"
png输出的位置是"0.5"
+[删除结构](,png输出)

有模拟空间和窗口
模拟空间是长方形(600e-6,80e-6)
模拟空间的格点尺寸是"1.5e-8,10.772e-7,10.772e-7"
模拟空间的深度是"80e-6"
模拟空间的时间步长是"0.47e-16"

窗口是长方形(100e-6,80e-6)
窗口的启动时间是"350e-15"
窗口的速度是"1"


有plasma, pump
plasma的数密度是"1.5e25"
plasma的'上升沿'是"30e-6"
plasma的数密度是什么

pump有什么
(800 mJ, 40 fs/40 fs, 20 um)
pump的a0是"1."
pump的波长是"1800e-9"
pump的腰宽是"8.2e-6"
pump的展宽是"12e-15"
pump的偏振是(1,0)

有A
pump的焦点位置是A
A在(60e-6,0)

probe的a0是什么
有probe
probe有什么
probe的a0是"0"
probe的波长是"800e-9"
probe的腰宽是"20e-6"
probe的展宽是"200e-15"
probe的焦点位置是A
probe的偏振是(1,1)


pump的起始位置是"80e-6"
probe的起始位置是"100e-6"

计算probe的波包形状
计算pump的波包形状
计算probe的光谱



模拟动画:...
+[召唤星辰]"生成PIC一维动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[M函数](,模拟动画)
+[设置结构](,模拟动画)
+[删除结构](,模拟动画)


+[显示PPT场景]"2"(,场景)
## end
#229, 8:
0.0, 0.0
## end
#231, 3:
多边形
## end
#232, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#233, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#234, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#235, 8:
0.0, 0.0
## end
#237, 3:
多边形
## end
#238, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#239, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#240, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#241, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#242, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#243, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#244, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#245, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#246, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#247, 10:
6e-05, 0.0
## end
#249, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#250, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#251, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#252, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#253, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#254, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#255, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#256, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#257, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#258, 386:
"""
M模板:...
+[新建阅读窗口](,M模板)

"""

+公式2(求解,_凭依)->+[del](,+公式1)...
->的(公式2,M模板)...

->o#1"波包形状"(求解,_波包形状)->变量#1(,_波包形状)...
->.#2"展宽"(求解,_展宽)->变量#2(,_展宽)...
->.#3"角频率"(求解,_角频率)->变量#3(,_角频率)...

->+函数库"physics_constant"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



## end
#259, 386:
"""
M模板:...
+[新建阅读窗口](,M模板)

"""

+公式2(求解,_凭依)->+[del](,+公式1)...
->的(公式2,M模板)...

->o#1"波包形状"(求解,_波包形状)->变量#1(,_波包形状)...
->.#2"展宽"(求解,_展宽)->变量#2(,_展宽)...
->.#3"角频率"(求解,_角频率)->变量#3(,_角频率)...

->+函数库"physics_constant"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



## end
#260, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#261, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#262, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#263, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#264, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#265, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#266, 34:
-m --windowMovePoint 1.049273603  
## end
#269, 34:
-m --windowMovePoint 1.049273603  
## end
#272, 34:
-m --windowMovePoint 1.049273603  
## end
#276, 669:
p::
p是子进程"ssh xtcheng@ls6.tacc.utexas.edu"
在p中, 运行指令"ls"

在p中, 运行指令"cd $WORK/picongpu_dev;source picongpu_GPU.sh;echo $BOOST_ROOT"
在p中, 运行指令"module load cuda/11.3"

在p中, 运行指令"du -hs $WORK/test_folder"
在p中, 运行指令"du -hs $WORK/test_folder/probe_a0_0_01/openPMD"

在p中, 运行指令"rm -rf $WORK/test_folder;mkdir $WORK/test_folder"

在p中, 运行指令"cd $WORK/test_folder;ls"
在p中, 运行指令"cd $WORK/test_folder/probe_a0_1_n_1_5e25;ls"
在p中, 运行指令"pic-build"

在p中, 运行指令"dos2unix myscript.txt"
在p中, 运行指令"date;sbatch myscript.txt"
在p中, 运行指令"squeue -u xtcheng"
在p中, 运行指令"squeue"

运行指令"scp -r xtcheng@ls6.tacc.utexas.edu:$WORK/test_folder/LWFA 文档/实验室问题/PIConGPU/"

运行指令"nautilus 文档/实验室问题/PIConGPU/"


## end
#279, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#280, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#281, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#282, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#283, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#284, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#286, 6:
fields
## end
#288, 6:
fields
## end
#290, 4:
2000
## end
#292, 2:
xy
## end
#294, 3:
0.5
## end
#296, 6:
fields
## end
#305, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#307, 29:
0.0, 0.0, 0.0006, 0.0006, 0.0
## end
#309, 8:
0.0, 0.0
## end
#311, 6:
0.0006
## end
#313, 5:
8e-05
## end
#315, 3:
多边形
## end
#316, 3:
长方形
## end
#319, 26:
1.5e-8,10.772e-7,10.772e-7
## end
#321, 5:
80e-6
## end
#323, 8:
0.47e-16
## end
#324, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#326, 29:
0.0, 0.0, 0.0001, 0.0001, 0.0
## end
#328, 8:
0.0, 0.0
## end
#330, 6:
0.0001
## end
#332, 5:
8e-05
## end
#334, 3:
多边形
## end
#335, 3:
长方形
## end
#338, 7:
350e-15
## end
#340, 1:
1
## end
#346, 6:
1.5e25
## end
#348, 5:
30e-6
## end
#350, 2:
1.
## end
#352, 7:
1800e-9
## end
#354, 6:
8.2e-6
## end
#356, 6:
12e-15
## end
#358, 3:
1,0
## end
#363, 10:
6e-05, 0.0
## end
#368, 1:
0
## end
#370, 6:
800e-9
## end
#372, 5:
20e-6
## end
#374, 7:
200e-15
## end
#378, 3:
1,1
## end
#380, 5:
80e-6
## end
#382, 6:
100e-6
## end
#384, 2723:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=1*c;
t0=350e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=8e-05;
L1=8e-05;
W0=0.0006;
W1=0.0001;

DW=0.0006-0.0001;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

lmprobe_1=800e-9;
tauprobe_1=200e-15*2.5;
focusprobe_1=[6e-05, 0.0];
w_0probe_1=20e-6;

if isnan(100e-6)
    initprobe_1=-1.5*c*tauprobe_1;
else
    initprobe_1=focusprobe_1(1)-100e-6;
end

% Gaussian beam
z_Rprobe_1=w_0probe_1^2*pi/lmprobe_1;
z=linspace(pt0(1),pt0(1)+W0,100);
wprobe_1=w_0probe_1.*sqrt(1+((z-focusprobe_1(1))./(z_Rprobe_1)).^(2));

lmpump_1=1800e-9;
taupump_1=12e-15*2.5;
focuspump_1=[6e-05, 0.0];
w_0pump_1=10e-6;

if isnan(80e-6)
    initpump_1=-1.5*c*taupump_1;
else
    initpump_1=focuspump_1(1)-80e-6;
end

% Gaussian beam
z_Rpump_1=w_0pump_1^2*pi/lmpump_1;
z=linspace(pt0(1),pt0(1)+W0,100);
wpump_1=w_0pump_1.*sqrt(1+((z-focuspump_1(1))./(z_Rpump_1)).^(2));

%代码
nplasma_1=1e25*ones(size(x));



clf
hold on

rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


patch([z,fliplr(z)],focusprobe_1(2)+[wprobe_1/2,-fliplr(wprobe_1)/2],[1,0,0],'FaceAlpha',0.2)
hprobe_1=rectangle('Position',[initprobe_1-c*tauprobe_1/sqrt(2)/2,pt1(2)-wprobe_1(1)/2,c*tauprobe_1/sqrt(2),wprobe_1(1)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);
patch([z,fliplr(z)],focuspump_1(2)+[wpump_1/2,-fliplr(wpump_1)/2],[1,0,0],'FaceAlpha',0.2)
hpump_1=rectangle('Position',[initpump_1-c*taupump_1/sqrt(2)/2,pt1(2)-wpump_1(1)/2,c*taupump_1/sqrt(2),wpump_1(1)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);
contourf(x,y,nplasma_1);

colorbar

for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

axis([pt0(1)+x1,pt0(1)+x1+W1,pt0(2)-L0/2,pt0(2)+L0/2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

w_zprobe_1=w_0probe_1.*sqrt(1+((c*t(i)+initprobe_1-focusprobe_1(1))./(z_Rprobe_1)).^(2));

hprobe_1.Position(1)=c*t(i)+initprobe_1-c*tauprobe_1/sqrt(2)/2;
hprobe_1.Position(2)=focusprobe_1(2)-w_zprobe_1/2;
hprobe_1.Position(4)=w_zprobe_1;

w_zpump_1=w_0pump_1.*sqrt(1+((c*t(i)+initpump_1-focuspump_1(1))./(z_Rpump_1)).^(2));

hpump_1.Position(1)=c*t(i)+initpump_1-c*taupump_1/sqrt(2)/2;
hpump_1.Position(2)=focuspump_1(2)-w_zpump_1/2;
hpump_1.Position(4)=w_zpump_1;



percent_t=i/length(t)*100;
title(sprintf('T=%.2f fs, L=%.2f um, Progress=%.2f %%',t(i)/1e-15,t(i)/1e-6*c,percent_t))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#386, 54:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25
## end
#388, 2:
上传
## end
#390, 82:

png:...
grid:...
incidentField:...
density:...
myscript:...

+[保存文本](,myscript)


## end
#391, 34:
-m --windowMovePoint 1.049273603  
## end
#394, 34:
-m --windowMovePoint 1.049273603  
## end
#397, 34:
-m --windowMovePoint 1.049273603  
## end
#400, 34:
-m --windowMovePoint 1.049273603  
## end
#404, 144:
Nini, 打开Smilei生成器(文件)
Nini, 打开Smilei(文件)
Nini, 打开TACC(文件)

保存样本:...

场景:...
运行模拟:...
获取数据:...
+[新建阅读窗口](,场景)
+[新建阅读窗口](,运行模拟)
+[新建阅读窗口](,获取数据)


## end
#406, 903:
地址::/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_0_res_10_50
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out/FDH_1"
状态::
状态::上传
地址是什么
+[打开文件夹](,地址)

+[生成Smilei代码_结构](场景,)
保存代码:...
+[删除结构](,保存代码)->+[召唤星辰]"生成Smilei代码"(场景,保存代码)
+[召唤星辰]"生成Smilei代码"(场景,保存代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,保存代码)

参考波长::800e-9

有探测场
探测场的探测类型是"Ey,Ez"
探测场的探测间隔是"2000"

有模拟空间和窗口
模拟空间是长方形(600e-6,80e-6)
模拟空间的格点尺寸是"1.e-8,0.5e-7,0.5e-7"

窗口是长方形(100e-6,80e-6)
窗口的启动时间是"300e-15"
窗口的启动时间是"100e-15"
窗口的速度是"0.999"

有plasma
plasma的数密度是"1e25"

有probe
probe的a0是"0.001"
probe的波长是"800e-9"
probe的展宽是"inf"
probe的腰宽是"20e-6"
probe的偏振态是(1,1)
probe的焦点位置是A

A::
A在(40e-6,0e-6)

有pump
pump的a0是"1"
pump的波长是"1800e-9"
pump的展宽是"12e-15"
pump的腰宽是"10e-6"
pump的偏振态是(1,0)
pump的焦点位置是A


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[M函数](,模拟动画)
+[新建阅读窗口](,模拟动画)


+[显示PPT场景]"1"(,场景)
## end
#408, 492:
保存:...

p::
p是子进程"ssh xtcheng@ls6.tacc.utexas.edu"
在p中, 运行指令"ls"

在p中, 运行指令"cd $WORK/Smilei;ls"
在p中, 运行指令"source $WORK/Smilei/install_para.sh"

在p中, 运行指令"rm -rf $WORK/sim_folder;mkdir $WORK/sim_folder"

在p中, 运行指令"cd $WORK/sim_folder;ls"
在p中, 运行指令"cd $WORK/sim_folder/FDH_1800_a0_0_res_10_50;ls"
在p中, 运行指令"$WORK/Smilei/smilei_test run.py"

在p中, 运行指令"cat errlog.txt"
在p中, 运行指令"cat stdout.txt"

在p中, 运行指令"dos2unix myscript.txt"
在p中, 运行指令"date;sbatch myscript.txt"
在p中, 运行指令"squeue -u xtcheng"



## end
#412, 1138:
地址::文档\模拟\Smilei\code\run.py
数据地址::文档\\模拟\\Smilei\\code
+[提取Smilei数据]"Rho"(数据地址,)
+[提取Smilei数据]"Ey"(数据地址,)
+[提取Smilei数据]"Bz"(数据地址,)
+[提取Smilei数据]"Jx"(数据地址,)
+[提取Smilei数据]"Jy"(数据地址,)
+[提取Smilei数据]"Jz"(数据地址,)
+[打开](,数据地址)

+[生成Smilei代码_结构](双光束,)
保存代码:...
+[保存文本](地址,保存代码)
+[新建阅读窗口](,保存代码)

有参考波长, 模拟空间, 窗口, 探测场, 背景电子, 驱动光和探测光
参考波长是"800e-9"

探测场有探测类型和探测间隔
探测场的探测类型是"'Ey','Bz','Jy'"
探测场的探测间隔是"400"

模拟空间和窗口都是长方形(200e-6,80e-6)

模拟空间是长方形(150e-6,80e-6)
模拟空间是长方形(443e-6,80e-6)

窗口是长方形(100e-6,80e-6)
窗口有启动时间和速度
窗口的启动时间是"300e-15"
窗口有速度
窗口的速度是"0.999"

探测光有a0, 展宽, 腰宽, 焦点位置和偏振态
探测光的展宽是"inf"
探测光的腰宽是"20e-6"
探测光的a0是"0.0"
探测光的偏振态是(1,1)
探测光的焦点位置是A

A::
A在(40e-6,0e-6)

驱动光有a0, 展宽, 腰宽, 焦点位置和偏振态
驱动光的展宽是"12e-15"
驱动光的腰宽是"10e-6"
驱动光的a0是"1"
驱动光的偏振态是(1,0)
驱动光的焦点位置是A

驱动光有波长
驱动光的波长是"1800e-9"

背景电子有数密度, gamma和beta_r
背景电子的gamma是"1"
背景电子的beta_r是"0,1,0"

背景电子的数密度是"1e25"
背景电子的数密度是fx
fx:...
将"\eqs{D=80*10^{-6};
L=80*10^{-6};
x_0=200*10^{-6};
y_0=0*10^{-6};
n_0=10^{26};
n(x,y)=\eqs{n_0,(x-x_0)+(y-y_0)>=0;
0,otherwise}}"记作为fx


模拟动画:...
+[删除结构](,模拟动画)->+[召唤星辰](双光束,模拟动画)
的(模拟动画,输出代码)->+[M函数](,输出代码)
+[新建阅读窗口](,模拟动画)

分析数据:...
+[新建阅读窗口](,分析数据)

+[显示PPT场景]"1"(,双光束)
## end
#414, 69:
/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_0_res_10_50
## end
#419, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#421, 29:
0.0, 0.0, 0.0006, 0.0006, 0.0
## end
#423, 8:
0.0, 0.0
## end
#425, 6:
0.0006
## end
#427, 5:
8e-05
## end
#429, 3:
多边形
## end
#430, 3:
长方形
## end
#432, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#434, 29:
0.0, 0.0, 0.0001, 0.0001, 0.0
## end
#436, 8:
0.0, 0.0
## end
#438, 6:
0.0001
## end
#440, 5:
8e-05
## end
#442, 3:
多边形
## end
#443, 3:
长方形
## end
#447, 7:
300e-15
## end
#451, 5:
0.999
## end
#456, 5:
0.001
## end
#458, 3:
inf
## end
#460, 5:
20e-6
## end
#462, 3:
1,1
## end
#465, 10:
4e-05, 0.0
## end
#470, 6:
800e-9
## end
#474, 1:
1
## end
#476, 7:
1800e-9
## end
#478, 6:
12e-15
## end
#480, 5:
10e-6
## end
#482, 3:
1,0
## end
#488, 4:
1e25
## end
#490, 1874:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0.999*c;
t0=300e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=8e-05;
L1=8e-05;
W0=0.0006;
W1=0.0001;

DW=0.0006-0.0001;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

%代码
nplasma_1=1e25*ones(size(x));

lmpump_1=1800e-9;
taupump_1=12e-15*2.5;
focuspump_1=[4e-05, 0.0];
w_0pump_1=10e-6;

if isnan(nan)
    initpump_1=-1.5*c*taupump_1;
else
    initpump_1=focuspump_1(1)-nan;
end

% Gaussian beam
z_Rpump_1=w_0pump_1^2*pi/lmpump_1;
z=linspace(pt0(1),pt0(1)+W0,100);
wpump_1=w_0pump_1.*sqrt(1+((z-focuspump_1(1))./(z_Rpump_1)).^(2));



clf
hold on

rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


contourf(x,y,nplasma_1);
patch([z,fliplr(z)],focuspump_1(2)+[wpump_1/2,-fliplr(wpump_1)/2],[1,0,0],'FaceAlpha',0.2)
hpump_1=rectangle('Position',[initpump_1-c*taupump_1/sqrt(2)/2,pt1(2)-wpump_1(1)/2,c*taupump_1/sqrt(2),wpump_1(1)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);

colorbar

for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

axis([pt0(1)+x1,pt0(1)+x1+W1,pt0(2)-L0/2,pt0(2)+L0/2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

w_zpump_1=w_0pump_1.*sqrt(1+((c*t(i)+initpump_1-focuspump_1(1))./(z_Rpump_1)).^(2));

hpump_1.Position(1)=c*t(i)+initpump_1-c*taupump_1/sqrt(2)/2;
hpump_1.Position(2)=focuspump_1(2)-w_zpump_1/2;
hpump_1.Position(4)=w_zpump_1;



percent_t=i/length(t)*100;
title(sprintf('T=%.2f fs, L=%.2f um, Progress=%.2f %%',t(i)/1e-15,t(i)/1e-6*c,percent_t))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#492, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#496, 5:
Ey,Ez
## end
#498, 4:
2000
## end
#519, 2:
上传
## end
#522, 245:
运行指令"scp -r xtcheng@ls6.tacc.utexas.edu:$WORK/sim_folder /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
运行指令"nautilus /media/xiantao/Elements/LWFA/FDH/Smilei"
运行指令"mkdir /media/xiantao/Elements/LWFA/FDH/Smilei"

直接分析h5:...
+[新建阅读窗口](,直接分析h5)




## end
#524, 1497:
%{
+[M函数](,直接分析h5)
clf
初次读取:...
显示动画:...
20221002:...
高分辨率:...
+[M函数](,显示动画)
+[新建阅读窗口](,20221002)

查看相位:...

保存:...

read_data_Smilei_h5(M函数):...
+[新建阅读窗口](,read_data_Smilei_h5)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_0_res_10_50/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_1_res_10_50/Fields0.h5";

% filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_0/Fields0.h5";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_pb_800/Fields0.h5";

%{
+[M函数](,直接分析h5)
25*400
%}

% tis=0:400:16000;
tis=0:2000:16000;
% tis=13000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';


% surf(Dph(100:300,100:7000)/1e-3)
% surf(Dph(20:60,100:7000)/1e-3)
surf(Dph/1e-3)
% surf(Ey)
shading interp
view([0,90])
colorbar
caxis([-30,30])
pause(0.1)
end

%{
1
caxis([-30,30])
size(Dph)
colormap('default')
+[M函数](,直接分析h5)
%}
## end
#526, 567:
%{
+[M函数](,直接分析h5)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test/Fields0.h5";
% h5disp(filename);
% h5disp(filename,'/data/0000002400/Jz');

data=h5read(filename,'/data/0000002400/Jx');
space=h5readatt(filename,'/data/0000002400/Jx','gridSpacing');
unit=h5readatt(filename,'/data/0000002400/Jx','unitSI');

x=1:size(data,2);
x=x*space(1)*lm_0;
y=1:size(data,1);
y=y*space(2)*lm_0;
I=data*unit;
space

surf(x,y,I)
shading interp
view([0,90])
axis equal

%{
colormap('default')
+[M函数](,直接分析h5)
%}
## end
#528, 1165:
%{
地址::Matlab/readData/read_data_Smilei_h5.m
+[保存M函数](,read_data_Smilei_h5)
nargin
%}

function [x,y,I,info]=read_data_Smilei_h5(file_name,ti,field_name0,lm_r)

physics_constant;
if nargin < 4
    lm_r=800e-9;
end

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;
E_r=m_e.*c.*omega_r./e;
B_r=m_e.*omega_r./e;
N_r=epsilon_0.*m_e.*omega_r.^(2)./e.^(2);
J_r=c.*e.*N_r;

if strcmp(field_name0,'Bx') || strcmp(field_name0,'By')...
     || strcmp(field_name0,'Bz')
    unit=B_r;
elseif strcmp(field_name0,'Ex') || strcmp(field_name0,'Ey')...
     || strcmp(field_name0,'Ez')
    unit=E_r;
elseif strcmp(field_name0,'Jx') || strcmp(field_name0,'Jy')...
     || strcmp(field_name0,'Jz')
    unit=J_r;
else
    unit=N_r;
end

if strcmp(field_name0,'n')
    field_name=sprintf('/data/%010d/%s',ti,"Rho");
else
    field_name=sprintf('/data/%010d/%s',ti,field_name0);
end

info=h5info(file_name,field_name);
data=h5read(file_name,field_name);
space=h5readatt(file_name,field_name,'gridSpacing');
% unit=h5readatt(file_name,field_name,'unitSI');

x=1:size(data,2);
x=x*space(1)*L_r;
y=1:size(data,1);
y=y*space(2)*L_r;
I=data*unit;

end


%{
+[保存M函数](,read_data_Smilei_h5)
%}
## end
#531, 37:
Matlab/readData/read_data_Smilei_h5.m
## end
#537, 412:
%{
+[M函数](,显示动画)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_0_n_2e25/Fields0.h5";

%{
+[M函数](,显示动画)
%}
tis=0:500:12500;

for i=1:length(tis)
ti=tis(i);
field='Rho';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(x,y,I)
shading interp
view([0,90])
% axis equal
pause(0.1)
end


%{
colormap('default')
+[M函数](,显示动画)
%}
## end
#540, 255:
运行指令"scp -r xtcheng@ls6.tacc.utexas.edu:$WORK/test_folder /media/xiantao/Elements/LWFA/FDH/PIConGPU"

运行指令"mkdir /media/xiantao/Elements/LWFA/FDH/PIConGPU"
运行指令"nautilus /media/xiantao/Elements/LWFA/FDH/PIConGPU"

读取h5:...
读取h5_2D:...
+[新建阅读窗口](,读取h5_2D)

## end
#542, 1126:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...
扫描截面:...
相位分布:...
扫描相位:...
(扫描纵向截面上相位的变化过程)
profile:...

保存:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01_3D/openPMD/simData";


i=10000;
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile=zeros(siz(1),siz(3));


for zi=1:siz(3)
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I=abs(sin(ph_z-ph_x));
I0=I(20:60,1000:end);

surf(I0)
shading interp
view([0,90])
colorbar
pause(0.1)
end


%{
+[M函数](,读取h5)
%}
## end
#544, 393:
%{
记住"Matlab"
+[M函数](,读取h5)
%}

filename="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData_004000.h5";
% h5disp(filename,'/data/4000/fields');
% h5disp(filename,'/data/2000/fields/E');
% h5disp(filename,'/data/2000/fields/E/x');

data=h5read(filename,'/data/4000/fields/E/y',[1,1,100],[256,1704,1]);

surf(data)
shading interp
view([0,90])


%{
+[M函数](,读取h5)
%}
## end
#546, 452:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...


%}

filename="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData_004000.h5";
% h5disp(filename,'/data/4000/fields');
% h5disp(filename,'/data/2000/fields/E');
% h5disp(filename,'/data/2000/fields/E/x');

data=h5read(filename,'/data/4000/fields/E/y',[100,1,1],[1,1704,256]);
data=reshape(data,1704,256)';
size(data)

surf(data)
shading interp
view([0,90])


%{
+[M函数](,读取h5)
%}
## end
#548, 1220:
%{
地址::Matlab/readData/read_data_PIConGPU_h5_3D.m
+[保存M函数](,read_data_PIConGPU_h5_3D)
%}

function [data,info]=read_data_PIConGPU_h5_3D(file_name0,ti,field_name0,ip,plane)
% file_name=sprintf("/home/xiantao/Documents/PIC/output/openPMD/simData_%06d.h5",2000);
file_name=sprintf("%s_%06d.h5",file_name0,ti);

if strcmp(field_name0,'Ex')
    field_name='fields/E/y';
elseif strcmp(field_name0,'Ey')
    field_name='fields/E/x';
elseif strcmp(field_name0,'Ez')
    field_name='fields/E/z';
elseif strcmp(field_name0,'Bx')
    field_name='fields/B/y';
elseif strcmp(field_name0,'By')
    field_name='fields/B/x';
elseif strcmp(field_name0,'Bz')
    field_name='fields/B/z';
elseif strcmp(field_name0,'n')
    field_name='fields/e_all_chargeDensity';
else
    field_name='fields/e_all_energyDensity';
end
data_name=sprintf("/data/%d/%s",ti,field_name);


info=h5info(file_name,data_name);
siz=info.Dataspace.Size;
if strcmp(plane,'xy') || strcmp(plane,'yx')
    data=h5read(file_name,data_name,[1,1,ip],[siz(1),siz(2),1]);
elseif strcmp(plane,'xz') || strcmp(plane,'zx')
    data=h5read(file_name,data_name,[ip,1,1],[1,siz(2),siz(3)]);
    data=reshape(data,siz(2),siz(3))';;
end

end


%{
+[保存M函数](,read_data_PIConGPU_h5)
%}
## end
#551, 42:
Matlab/readData/read_data_PIConGPU_h5_3D.m
## end
#556, 600:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

filename="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData_004000.h5";
% h5disp(filename,'/data/4000/fields');
% h5disp(filename,'/data/2000/fields/E');
% info=h5info(filename,'/data/4000/fields/E/x')
% info.Dataspace.Size

h5readatt(filename,'/data/4000/fields/E/y','Size')

data=h5read(filename,'/data/4000/fields/E/y',[100,1,1],[1,1704,256]);
data=reshape(data,1704,256)';
size(data)

surf(data)
shading interp
view([0,90])


%{
+[M函数](,读取h5)
%}
## end
#558, 413:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...

保存:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

addpath('Matlab/readData');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData";

i=4000;
field="Ey";
plane="xy";
zi=128;
data=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);

surf(data)
shading interp
view([0,90])

%{
+[M函数](,读取h5)
%}
## end
#560, 883:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...
扫描截面:...
相位分布:...

保存:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_01/openPMD/simData";


i=4000;
plane="xy";
zi=130;
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

surf(sin(ph_z-ph_x))
shading interp
view([0,90])

%{
+[M函数](,读取h5)
%}
## end
#562, 940:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...
扫描截面:...
相位分布:...

保存:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_01/openPMD/simData";


i=2000;
plane="xy";
for zi=1:256
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

% surf(sin(ph_z-ph_x))
surf(abs(sin(ph_z-ph_x)))
shading interp
view([0,90])
colorbar
pause(0.1)
end

%{
+[M函数](,读取h5)
%}
## end
#565, 475:
%{
+[M函数](,直接分析h5)

初次读取:...
显示动画:...

read_data_Smilei_h5(M函数):...
+[新建阅读窗口](,read_data_Smilei_h5)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/Fields0.h5";

%{
+[M函数](,直接分析h5)
%}
tis=0:400:13200;
field='Rho';

for i=1:length(tis)
ti=tis(i);
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(x,y,I)
shading interp
view([0,90])
axis equal
pause(0.1)
end

%{
colormap('default')
+[M函数](,直接分析h5)
%}
## end
#567, 1511:
%{
+[M函数](,20221002)

分布图:...
%}

physics_constant;
addpath('Matlab/fft')

ne=2e25;
gamma=2;
lmbd=800e-9;


% fileName='文档/模拟/report/20221002/res/LWFA/Ey_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ey_p_1mm.mat';
result=load(fileName);
a_y=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ey_0.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ey_0_1mm.mat';
result=load(fileName);
b_y=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ez_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ez_p_1mm.mat';
result=load(fileName);
a_z=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ez_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Rho_p_1mm.mat';
result=load(fileName);
p_r=result.result;

% j=25;
N_x=size(a_y,2);
N_y=size(a_y,3);
x=linspace(0,100e-6,N_x);
y=linspace(0,80e-6,N_y);

i=35;
field_y0=reshape(b_y(i,:,:),size(b_y,2),size(b_y,3));
field_y=reshape(a_y(i,:,:),size(a_y,2),size(a_y,3));
field_z=-reshape(a_z(i,:,:),size(a_z,2),size(a_z,3));

%{
+[M函数](,20221002)
%}
%field_y=field_y-mean(field_y);
%field_y0=field_y0-mean(field_y0);
field_y=field_y-field_y0;

[Ey_phase,Ey_x]=spatial_phase(field_y);
[Ez_phase,Ez_x]=spatial_phase(field_z);
Dph=sin(Ey_phase-Ez_phase);

ph_z=field_spatial_phase(field_z');
ph_y=field_spatial_phase(field_y');
I=sin(ph_y-ph_z)';


%{
+[M函数](,20221002)
%}
% surf(Dph(200:5500,5:37))
surf(I(200:5500,5:37))
% surf(Dph)
shading interp
view([90,-90])
axis([1,32,1,5300])
title('Spatial phase')
colorbar


%{
clf
记住"Matlab"
+[M函数](,20221002)
%}
## end
#569, 1385:
%{
+[M函数](,20221002)
%}

physics_constant;
addpath('Matlab/fft')

ne=2e25;
gamma=2;
lmbd=800e-9;


% fileName='文档/模拟/report/20221002/res/LWFA/Ey_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ey_p_1mm.mat';
result=load(fileName);
a_y=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ey_0.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ey_0_1mm.mat';
result=load(fileName);
b_y=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ez_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Ez_p_1mm.mat';
result=load(fileName);
a_z=result.result;

% fileName='文档/模拟/report/20221002/res/LWFA/Ez_p.mat';
fileName='文档/模拟/report/20221002/res/LWFA/Rho_p_1mm.mat';
result=load(fileName);
p_r=result.result;

% j=25;
N_x=size(a_y,2);
N_y=size(a_y,3);
x=linspace(0,100e-6,N_x);
y=linspace(0,80e-6,N_y);

i=35;
field_y0=reshape(b_y(i,:,:),size(b_y,2),size(b_y,3));
field_y=reshape(a_y(i,:,:),size(a_y,2),size(a_y,3));
field_z=-reshape(a_z(i,:,:),size(a_z,2),size(a_z,3));

%{
+[M函数](,20221002)
%}
%field_y=field_y-mean(field_y);
%field_y0=field_y0-mean(field_y0);
field_y=field_y-field_y0;

[Ey_phase,Ey_x]=spatial_phase(field_y);
[Ez_phase,Ez_x]=spatial_phase(field_z);
Dph=sin(Ey_phase-Ez_phase);


%{
+[M函数](,20221002)
%}
surf(Dph(200:5500,5:37))
% surf(Dph)
shading interp
view([90,-90])
axis([1,32,1,5300])
title('Spatial phase')
colorbar


%{
clf
记住"Matlab"
+[M函数](,20221002)
%}
## end
#571, 19:
1.e-8,0.5e-7,0.5e-7
## end
#572, 34:
-m --windowMovePoint 1.049273603  
## end
#575, 34:
-m --windowMovePoint 1.049273603  
## end
#578, 34:
-m --windowMovePoint 1.049273603  
## end
#582, 1036:
%{
+[M函数](,直接分析h5)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,直接分析h5)
25*400
%}
% tis=0:400:16000;
tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';


% size(I)
% surf(I(80:370,1:1800))
surf(Dph(:,100:8000))
% surf(Dph)
shading interp
view([0,90])
colorbar
pause(0.1)
end

%{
colormap('default')
+[M函数](,直接分析h5)
%}
## end
#584, 862:
%{
记住"Matlab"
+[M函数](,读取h5_2D)
相位分布:...
动画:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01/openPMD/simData";

%{
colormap('default')
+[M函数](,读取h5_2D)
%}
for i=0:400:14400
data_0=read_data_PIConGPU_h5(filename_0,i,'Ey');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ey');
E_y=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,i,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_y=field_spatial_phase(E_y);
I0=sin(ph_z-ph_y);
I=I0(20:60,:);

surf(I)
shading interp
view([0,90])
axis([0,size(E_y,2),0,size(E_y,1)])
colorbar
pause(0.1)

end

%{
colormap('default')
+[M函数](,读取h5_2D)
%}
## end
#587, 764:
%{
+[M函数](,相位分布)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_1_lm_1200/openPMD/simData";

%{
+[M函数](,相位分布)
%}
i=14000;
data_0=read_data_PIConGPU_h5(filename_0,i,'Ey');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ey');
E_y=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,i,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,i,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_y=field_spatial_phase(E_y);

I0=sin(ph_z-ph_y);
I=I0(20:60,:);

surf(I)
shading interp
view([0,90])
axis([0,size(I,2),0,size(I,1)])
pause(0.1)
colorbar

%{
colormap('default')
+[M函数](,相位分布)
%}
## end
#589, 511:
%{
+[M函数](,动画)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_lm_800/openPMD/simData";
% filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_01/openPMD/simData";

%{
+[M函数](,动画)
%}

field='Rho';
for i=0:500:42800
data_0=read_data_PIConGPU_h5(filename_0,i,field);

surf(data_0)
shading interp
view([0,90])
axis([0,size(E_y,2),0,size(E_y,1)])
pause(0.1)

end

%{
colormap('default')
+[M函数](,读取h5_2D)
%}
## end
#590, 34:
-m --windowMovePoint 1.049273603  
## end
#593, 34:
-m --windowMovePoint 1.049273603  
## end
#596, 34:
-m --windowMovePoint 1.049273603  
## end
#599, 34:
-m --windowMovePoint 1.049273603  
## end
#603, 6:
fields
## end
#605, 3:
500
## end
#606, 34:
-m --windowMovePoint 1.049273603  
## end
#609, 34:
-m --windowMovePoint 1.049273603  
## end
#613, 1161:
%{
记住"Matlab"
+[M函数](,读取h5)
纵切面:...
横切面:...
扫描截面:...
相位分布:...
扫描相位:...

保存:...

read_data_PIConGPU_h5_3D(M函数):...
+[新建阅读窗口](,read_data_PIConGPU_h5_3D)
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/test_folder/probe_a0_0_01_3D/openPMD/simData";


i=10000;
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile=zeros(siz(1),siz(3));


for zi=1:siz(3)
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,i,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,i,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I=abs(sin(ph_z-ph_x));

% I_y=sum(I(:,1350:end)');
I_y=sum(I');
profile(:,zi)=I_y;
end

Di=25;
sample=profile(Di:end-Di,Di:end-Di);
surf(sample)
view([0,90])
axis equal
shading interp

%{
+[M函数](,读取h5)
%}
## end
#616, 12:

场景1:...




## end
#618, 332:
+[显示PPT场景]"1"(,场景1)
axis([-1,1,0,1])

有A1, A2, A3和A4
有L1, L2, L3和L4

在屏幕"1"中, 添加标记点
A1, A2, A3和A4分别在标记点"1", 标记点"2", 标记点"3", 标记点"4"
L1, L2, L3, L4和L1依次相交于A2, A3, A4和A1
L1, L2, L3和L4都是折线

L4和L2的方向都是"90"
A4和A1的间距是"0.5"
A2和A3的间距是"0.5"
A4和A3都不固定

重新思考A3的位置
思考A4的位置
描述解题思路

代码:...
在代码中, 描述网页代码
更新示意图


+[显示星图]"2"(,场景1)
+[显示PPT场景]"1"(,场景1)
## end
#619, 39:
-0.4548494983277592, 0.6772575250836119
## end
#621, 39:
0.09030100334448177, 0.7809364548494983
## end
#623, 39:
0.0769230769230771, 0.30267558528428085
## end
#625, 41:
-0.46153846153846156, 0.18561872909698995
## end
#627, 2:
曲线
## end
#628, 2:
曲线
## end
#629, 2:
曲线
## end
#630, 2:
曲线
## end
#647, 38:
-0.46153846153846156, 0.68561872909699
## end
#649, 38:
0.0769230769230771, 0.8026755852842808
## end
#651, 39:
0.0769230769230771, 0.30267558528428085
## end
#653, 41:
-0.46153846153846156, 0.18561872909698995
## end
#671, 2:
曲线
## end
#672, 37:
0.18561872909698995, 0.68561872909699
## end
#674, 42:
-0.46153846153846156, -0.46153846153846156
## end
#676, 2:
折线
## end
#678, 2:
曲线
## end
#679, 36:
0.68561872909699, 0.8026755852842808
## end
#681, 40:
-0.46153846153846156, 0.0769230769230771
## end
#683, 2:
折线
## end
#685, 2:
曲线
## end
#686, 39:
0.8026755852842808, 0.30267558528428085
## end
#688, 38:
0.0769230769230771, 0.0769230769230771
## end
#690, 2:
折线
## end
#692, 2:
曲线
## end
#693, 40:
0.18561872909698995, 0.30267558528428085
## end
#695, 40:
-0.46153846153846156, 0.0769230769230771
## end
#697, 2:
折线
## end
#700, 2:
90
## end
#702, 2:
90
## end
#708, 3:
0.5
## end
#714, 3:
0.5
## end
#725, 2:
原点
## end
#726, 2:
方向
## end
#727, 2:
距离
## end
#728, 3:
空间点
## end
#741, 2:
原点
## end
#742, 2:
方向
## end
#743, 2:
距离
## end
#744, 3:
空间点
## end
#757, 90:
<!--
+[H函数](,代码)
-->

%图1

<!--
图1(SVG):...
JS代码(JS函数):...
+[新建阅读窗口](,图1)

+[H函数](,代码)
-->
## end
#758, 4:
pt_1
## end
#760, 4:
an_1
## end
#762, 4:
pt_2
## end
#764, 3:
L_1
## end
#766, 4:
pt_3
## end
#768, 4:
an_2
## end
#770, 4:
pt_4
## end
#772, 3:
L_2
## end
#784, 114:
var L_2 = 309.76046094857054;var an_2 = 55756.8829707427;var L_1 = 309.76046094857054;var an_1 = 55756.8829707427;
## end
#786, 228:
// Solving coordinates of pt_1
Dx=L_1*Math.cos(an_1);
Dy=L_1*Math.sin(an_1);
pt_1_x=pt_2_x+Dx;
pt_1_y=pt_2_y+Dy;

// Solving coordinates of pt_3
Dx=L_2*Math.cos(an_2);
Dy=L_2*Math.sin(an_2);
pt_3_x=pt_4_x+Dx;
pt_3_y=pt_4_y+Dy;


## end
#790, 4:
xy坐标
## end
#794, 4:
xy坐标
## end
#798, 4:
xy坐标
## end
#802, 4:
xy坐标
## end
#808, 6608:
/*
+[J函数](,JS代码)
*/


function intersection_lines_dir_pt(pt1,theta1,pt2,theta2) {
    X1=[pt1[0],pt1[0]+Math.cos(theta1)];
    Y1=[pt1[1],pt1[1]+Math.sin(theta1)];
    X2=[pt2[0],pt2[0]+Math.cos(theta2)];
    Y2=[pt2[1],pt2[1]+Math.sin(theta2)];

    D1=X1[0]*Y1[1]-X1[1]*Y1[0];
    D2=X2[0]*Y2[1]-X2[1]*Y2[0];
    DX1=X1[1]-X1[0];
    DX2=X2[1]-X2[0];
    DY1=Y1[1]-Y1[0];
    DY2=Y2[1]-Y2[0];
    x0=(D1*DX2-D2*DX1)/(DY1*DX2-DY2*DX1);
    y0=(D1*DY2-D2*DY1)/(DY1*DX2-DY2*DX1);
    return [x0,y0];
}


function joint_two_arms(pt_1,pt_2,L_1,L_2) {

    x_1=pt_1[0];
    y_1=pt_1[1];
    x_2=pt_2[0];
    y_2=pt_2[1];
    
    DX_1=x_1-x_2;
    DY_1=y_1-y_2;
    
    D=L_1**2-(y_1-y_2)**2-(x_1-x_2)**2-L_2**2;
    DX1=(-D*DX_1-Math.sqrt(4*L_2**2*DY_1**2*(DX_1**2+DY_1**2)-(D*DY_1)**2))/(2*(DX_1**2+DY_1**2));
    DX2=(-D*DX_1+Math.sqrt(4*L_2**2*DY_1**2*(DX_1**2+DY_1**2)-(D*DY_1)**2))/(2*(DX_1**2+DY_1**2));
    
    x1=DX1+x_2;
    x2=DX2+x_2;
    
    
    DY1=Math.sqrt(L_2**2-DX1**2);
    DY2=-Math.sqrt(L_2**2-DX2**2);
    
    y1=DY1+y_2;
    y2=DY2+y_2;
    
    if (Math.abs(Math.sqrt((x1-x_1)**2+(y1-y_1)**2)-L_1)>1e-6) {
        y1=-DY1+y_2;
    }
    
    if (Math.abs(Math.sqrt((x2-x_1)**2+(y2-y_1)**2)-L_1)>1e-6) {
        y2=-DY2+y_2;
    }
    
    X_1=x1-x_1;
    Y_1=y1-y_1;
    X_2=x1-x_2;
    Y_2=y1-y_2;
    // test=cross([x1-x_1,y1-y_1,0],[x1-x_2,y1-y_2,0]);
    test=X_1*Y_2-X_2*Y_1;
    
    if (x1===NaN) {
        x1=0;
    }
    if (y1===NaN) {
        y1=0;
    }
    
    if (x2===NaN) {
        x2=0;
    }
    if (y2===NaN) {
        y2=0;
    }

    if (test<0) {
        pt2=[x1,y1];
        pt1=[x2,y2];
    }
    else {
        pt1=[x1,y1];
        pt2=[x2,y2];
    }
    
    return [pt1,pt2]

}


function tangent_circle(x_0,y_0,R,x_1,y_1) {

    a=((y_1-y_0)**2-R**2);
    b_1=(-(x_1-x_0)*(y_1-y_0)+R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    b_2=(-(x_1-x_0)*(y_1-y_0)-R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+x_0;
    y_t=(b_1*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+y_0;
    pt_1=[x_t,y_t];
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+x_0;
    y_t=(b_2*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+y_0;
    pt_2=[x_t,y_t];

    return [angle_1,angle_2,pt_1,pt_2];
}


function tangent_two_circles(x_1,y_1,R_1,x_2,y_2,R_2) {

    x_3=(x_1*R_2-x_2*R_1)/(R_2-R_1);
    y_3=(y_1*R_2-y_2*R_1)/(R_2-R_1);
    pt_0=[x_3,y_3];
    
    a=((y_3-y_1)**2-R_1**2);
    b_1=(-(x_3-x_1)*(y_3-y_1)+R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    b_2=(-(x_3-x_1)*(y_3-y_1)-R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+x_1;
    y_t=(b_1*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+y_1;
    pt_1a=[x_t,y_t];
    pt_2a=[x_t,y_t];
    pt_2a[0]=pt_0[0]+(pt_1a[0]-pt_0[0])/R_1*R_2;
    pt_2a[1]=pt_0[1]+(pt_1a[1]-pt_0[1])/R_1*R_2;
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+x_1;
    y_t=(b_2*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+y_1;
    pt_1b=[x_t,y_t];
    pt_2b=[x_t,y_t];
    pt_2b[0]=pt_0[0]+(pt_1b[0]-pt_0[0])/R_1*R_2;
    pt_2b[1]=pt_0[1]+(pt_1b[1]-pt_0[1])/R_1*R_2;
    
    return [angle_1,angle_2,pt_1a,pt_1b,pt_2a,pt_2b];

}







function draw_update() {
    var line_an_2 = document.getElementById("line_an_2");
    var line_pt_1pt_3 = document.getElementById("line_pt_1pt_3");
    var line_an_1 = document.getElementById("line_an_1");
    var line_pt_2pt_4 = document.getElementById("line_pt_2pt_4");
    var pt_3 = document.getElementById("pt_3");
    var pt_3_x = +pt_3.getAttribute("cx");
    var pt_3_y = +pt_3.getAttribute("cy");
    
    var pt_1 = document.getElementById("pt_1");
    var pt_1_x = +pt_1.getAttribute("cx");
    var pt_1_y = +pt_1.getAttribute("cy");
    
    var pt_2 = document.getElementById("pt_2");
    var pt_2_x = +pt_2.getAttribute("cx");
    var pt_2_y = +pt_2.getAttribute("cy");
    
    var pt_4 = document.getElementById("pt_4");
    var pt_4_x = +pt_4.getAttribute("cx");
    var pt_4_y = +pt_4.getAttribute("cy");
    
    
    var L_2 = 309.76046094857054;var an_2 = 55756.8829707427;var L_1 = 309.76046094857054;var an_1 = 55756.8829707427;

    // Solving coordinates of pt_1
    Dx=L_1*Math.cos(an_1);
    Dy=L_1*Math.sin(an_1);
    pt_1_x=pt_2_x+Dx;
    pt_1_y=pt_2_y+Dy;
    
    // Solving coordinates of pt_3
    Dx=L_2*Math.cos(an_2);
    Dy=L_2*Math.sin(an_2);
    pt_3_x=pt_4_x+Dx;
    pt_3_y=pt_4_y+Dy;
    
    

    xs=[pt_4_x, pt_3_x];
    ys=[pt_4_y, pt_3_y];
    for(var i=0;i<line_an_2.points.length;i++) {
        line_an_2.points[i].x=xs[i];
        line_an_2.points[i].y=ys[i];
    }
    
    xs=[pt_3_x, pt_1_x];
    ys=[pt_3_y, pt_1_y];
    for(var i=0;i<line_pt_1pt_3.points.length;i++) {
        line_pt_1pt_3.points[i].x=xs[i];
        line_pt_1pt_3.points[i].y=ys[i];
    }
    
    xs=[pt_1_x, pt_2_x];
    ys=[pt_1_y, pt_2_y];
    for(var i=0;i<line_an_1.points.length;i++) {
        line_an_1.points[i].x=xs[i];
        line_an_1.points[i].y=ys[i];
    }
    
    xs=[pt_4_x, pt_2_x];
    ys=[pt_4_y, pt_2_y];
    for(var i=0;i<line_pt_2pt_4.points.length;i++) {
        line_pt_2pt_4.points[i].x=xs[i];
        line_pt_2pt_4.points[i].y=ys[i];
    }
    
    pt_3.setAttribute("cx",pt_3_x);
    pt_3.setAttribute("cy",pt_3_y);
    pt_1.setAttribute("cx",pt_1_x);
    pt_1.setAttribute("cy",pt_1_y);
    pt_2.setAttribute("cx",pt_2_x);
    pt_2.setAttribute("cy",pt_2_y);
    pt_4.setAttribute("cx",pt_4_x);
    pt_4.setAttribute("cy",pt_4_y);
    
}

var viewer = document.getElementById("viewer");
var ratio_viewer=viewer.getBoundingClientRect().width/1000;

function dragEle(e,name) {
    var x=(e.clientX-viewer.getBoundingClientRect().left)/ratio_viewer;
    var y=(e.clientY-viewer.getBoundingClientRect().top)/ratio_viewer;

    var pt_1 = document.getElementById(name);
    pt_1.setAttribute("cx", x);
    pt_1.setAttribute("cy", y);

    draw_update();
}

let doAction=function (e) {};
function onmousedown_diy(e) {
    doAction(e);
}

document.body.addEventListener("mousemove", onmousedown_diy);

document.body.addEventListener("mouseup", function(e) {
    doAction=function(e) {};
});

function loadDragFunc(name) {
    doAction=function(e) {dragEle(e,name)};
}


/*
+[J函数](,JS代码)
*/
## end
#812, 1599:

<svg id="viewer" xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 1000 497.27431857964496" style="overflow: hidden;border: 2px solid #888888;"> 

<polygon id="line_an_2" points="329.06195298824696, 382.27963240810203 329.06195298824696, 72.51917145953152" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_pt_1pt_3" points="329.06195298824696, 72.51917145953152 662.6501417020922, 0.0" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_an_1" points="662.6501417020922, 0.0 662.6501417020922, 309.76046094857054" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_pt_2pt_4" points="329.06195298824696, 382.27963240810203 662.6501417020922, 309.76046094857054" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_3" onmousedown="loadDragFunc('pt_3')" cx="329.06195298824696" cy="72.51917145953152" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_1" onmousedown="loadDragFunc('pt_1')" cx="662.6501417020922" cy="0.0" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_2" onmousedown="loadDragFunc('pt_2')" cx="662.6501417020922" cy="309.76046094857054" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_4" onmousedown="loadDragFunc('pt_4')" cx="329.06195298824696" cy="382.27963240810203" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />


</svg>


## end
#816, 4:
    
## end
#817, 1448:
var line_an_2 = document.getElementById("line_an_2");
var line_pt_1pt_3 = document.getElementById("line_pt_1pt_3");
var line_an_1 = document.getElementById("line_an_1");
var line_pt_2pt_4 = document.getElementById("line_pt_2pt_4");
var pt_3 = document.getElementById("pt_3");
var pt_3_x = +pt_3.getAttribute("cx");
var pt_3_y = +pt_3.getAttribute("cy");

var pt_1 = document.getElementById("pt_1");
var pt_1_x = +pt_1.getAttribute("cx");
var pt_1_y = +pt_1.getAttribute("cy");

var pt_2 = document.getElementById("pt_2");
var pt_2_x = +pt_2.getAttribute("cx");
var pt_2_y = +pt_2.getAttribute("cy");

var pt_4 = document.getElementById("pt_4");
var pt_4_x = +pt_4.getAttribute("cx");
var pt_4_y = +pt_4.getAttribute("cy");

var line_an_2 = document.getElementById("line_an_2");
var line_pt_1pt_3 = document.getElementById("line_pt_1pt_3");
var line_an_1 = document.getElementById("line_an_1");
var line_pt_2pt_4 = document.getElementById("line_pt_2pt_4");
var pt_3 = document.getElementById("pt_3");
var pt_3_x = +pt_3.getAttribute("cx");
var pt_3_y = +pt_3.getAttribute("cy");

var pt_1 = document.getElementById("pt_1");
var pt_1_x = +pt_1.getAttribute("cx");
var pt_1_y = +pt_1.getAttribute("cy");

var pt_2 = document.getElementById("pt_2");
var pt_2_x = +pt_2.getAttribute("cx");
var pt_2_y = +pt_2.getAttribute("cy");

var pt_4 = document.getElementById("pt_4");
var pt_4_x = +pt_4.getAttribute("cx");
var pt_4_y = +pt_4.getAttribute("cy");


## end
#819, 4:
    
## end
#821, 4:
    
## end
#822, 1920:
xs=[pt_4_x, pt_3_x];
ys=[pt_4_y, pt_3_y];
for(var i=0;i<line_an_2.points.length;i++) {
    line_an_2.points[i].x=xs[i];
    line_an_2.points[i].y=ys[i];
}

xs=[pt_3_x, pt_1_x];
ys=[pt_3_y, pt_1_y];
for(var i=0;i<line_pt_1pt_3.points.length;i++) {
    line_pt_1pt_3.points[i].x=xs[i];
    line_pt_1pt_3.points[i].y=ys[i];
}

xs=[pt_1_x, pt_2_x];
ys=[pt_1_y, pt_2_y];
for(var i=0;i<line_an_1.points.length;i++) {
    line_an_1.points[i].x=xs[i];
    line_an_1.points[i].y=ys[i];
}

xs=[pt_4_x, pt_2_x];
ys=[pt_4_y, pt_2_y];
for(var i=0;i<line_pt_2pt_4.points.length;i++) {
    line_pt_2pt_4.points[i].x=xs[i];
    line_pt_2pt_4.points[i].y=ys[i];
}

pt_3.setAttribute("cx",pt_3_x);
pt_3.setAttribute("cy",pt_3_y);
pt_1.setAttribute("cx",pt_1_x);
pt_1.setAttribute("cy",pt_1_y);
pt_2.setAttribute("cx",pt_2_x);
pt_2.setAttribute("cy",pt_2_y);
pt_4.setAttribute("cx",pt_4_x);
pt_4.setAttribute("cy",pt_4_y);
xs=[pt_4_x, pt_3_xpt_4_x, pt_3_x];
ys=[pt_4_y, pt_3_ypt_4_y, pt_3_y];
for(var i=0;i<line_an_2.points.length;i++) {
    line_an_2.points[i].x=xs[i];
    line_an_2.points[i].y=ys[i];
}

xs=[pt_3_x, pt_1_xpt_3_x, pt_1_x];
ys=[pt_3_y, pt_1_ypt_3_y, pt_1_y];
for(var i=0;i<line_pt_1pt_3.points.length;i++) {
    line_pt_1pt_3.points[i].x=xs[i];
    line_pt_1pt_3.points[i].y=ys[i];
}

xs=[pt_1_x, pt_2_xpt_1_x, pt_2_x];
ys=[pt_1_y, pt_2_ypt_1_y, pt_2_y];
for(var i=0;i<line_an_1.points.length;i++) {
    line_an_1.points[i].x=xs[i];
    line_an_1.points[i].y=ys[i];
}

xs=[pt_4_x, pt_2_xpt_4_x, pt_2_x];
ys=[pt_4_y, pt_2_ypt_4_y, pt_2_y];
for(var i=0;i<line_pt_2pt_4.points.length;i++) {
    line_pt_2pt_4.points[i].x=xs[i];
    line_pt_2pt_4.points[i].y=ys[i];
}

pt_3.setAttribute("cx",pt_3_x);
pt_3.setAttribute("cy",pt_3_y);
pt_1.setAttribute("cx",pt_1_x);
pt_1.setAttribute("cy",pt_1_y);
pt_2.setAttribute("cx",pt_2_x);
pt_2.setAttribute("cy",pt_2_y);
pt_4.setAttribute("cx",pt_4_x);
pt_4.setAttribute("cy",pt_4_y);

## end
#824, 4:
    
## end
#825, 228:
// Solving coordinates of pt_1
Dx=L_1*Math.cos(an_1);
Dy=L_1*Math.sin(an_1);
pt_1_x=pt_2_x+Dx;
pt_1_y=pt_2_y+Dy;

// Solving coordinates of pt_3
Dx=L_2*Math.cos(an_2);
Dy=L_2*Math.sin(an_2);
pt_3_x=pt_4_x+Dx;
pt_3_y=pt_4_y+Dy;


## end
#833, 1442:
<polygon id="line_an_2" points="329.06195298824696, 382.27963240810203 329.06195298824696, 72.51917145953152" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_pt_1pt_3" points="329.06195298824696, 72.51917145953152 662.6501417020922, 0.0" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_an_1" points="662.6501417020922, 0.0 662.6501417020922, 309.76046094857054" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon id="line_pt_2pt_4" points="329.06195298824696, 382.27963240810203 662.6501417020922, 309.76046094857054" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_3" onmousedown="loadDragFunc('pt_3')" cx="329.06195298824696" cy="72.51917145953152" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_1" onmousedown="loadDragFunc('pt_1')" cx="662.6501417020922" cy="0.0" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_2" onmousedown="loadDragFunc('pt_2')" cx="662.6501417020922" cy="309.76046094857054" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />
<circle id="pt_4" onmousedown="loadDragFunc('pt_4')" cx="329.06195298824696" cy="382.27963240810203" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />

## end
#837, 6:
pt_3_y
## end
#838, 6:
pt_3_x
## end
#839, 37:
329.06195298824696, 72.51917145953152
## end
#840, 6:
pt_4_y
## end
#841, 6:
pt_4_x
## end
#842, 38:
329.06195298824696, 382.27963240810203
## end
#843, 4:
an_2
## end
#845, 2:
, 
## end
#846, 28:
pt_4_y, pt_3_ypt_4_y, pt_3_y
## end
#848, 2:
, 
## end
#849, 28:
pt_4_x, pt_3_xpt_4_x, pt_3_x
## end
#851, 1:
 
## end
#852, 76:
329.06195298824696, 382.27963240810203 329.06195298824696, 72.51917145953152
## end
#853, 110:
<polygon id="line_%线" points="%pts" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />

## end
#854, 50:
var line_%线 = document.getElementById("line_%线");

## end
#855, 128:
xs=[%xs];
ys=[%ys];
for(var i=0;i<line_%线.points.length;i++) {
    line_%线.points[i].x=xs[i];
    line_%线.points[i].y=ys[i];
}


## end
#883, 6:
pt_1_y
## end
#884, 6:
pt_1_x
## end
#885, 22:
662.6501417020922, 0.0
## end
#886, 6:
pt_3_y
## end
#887, 6:
pt_3_x
## end
#888, 37:
329.06195298824696, 72.51917145953152
## end
#889, 8:
pt_1pt_3
## end
#891, 2:
, 
## end
#892, 28:
pt_3_y, pt_1_ypt_3_y, pt_1_y
## end
#894, 2:
, 
## end
#895, 28:
pt_3_x, pt_1_xpt_3_x, pt_1_x
## end
#897, 1:
 
## end
#898, 60:
329.06195298824696, 72.51917145953152 662.6501417020922, 0.0
## end
#899, 110:
<polygon id="line_%线" points="%pts" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />

## end
#900, 50:
var line_%线 = document.getElementById("line_%线");

## end
#901, 128:
xs=[%xs];
ys=[%ys];
for(var i=0;i<line_%线.points.length;i++) {
    line_%线.points[i].x=xs[i];
    line_%线.points[i].y=ys[i];
}


## end
#923, 6:
pt_2_y
## end
#924, 6:
pt_2_x
## end
#925, 37:
662.6501417020922, 309.76046094857054
## end
#926, 6:
pt_1_y
## end
#927, 6:
pt_1_x
## end
#928, 22:
662.6501417020922, 0.0
## end
#929, 4:
an_1
## end
#931, 2:
, 
## end
#932, 28:
pt_1_y, pt_2_ypt_1_y, pt_2_y
## end
#934, 2:
, 
## end
#935, 28:
pt_1_x, pt_2_xpt_1_x, pt_2_x
## end
#937, 1:
 
## end
#938, 60:
662.6501417020922, 0.0 662.6501417020922, 309.76046094857054
## end
#939, 110:
<polygon id="line_%线" points="%pts" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />

## end
#940, 50:
var line_%线 = document.getElementById("line_%线");

## end
#941, 128:
xs=[%xs];
ys=[%ys];
for(var i=0;i<line_%线.points.length;i++) {
    line_%线.points[i].x=xs[i];
    line_%线.points[i].y=ys[i];
}


## end
#963, 6:
pt_2_y
## end
#964, 6:
pt_2_x
## end
#965, 37:
662.6501417020922, 309.76046094857054
## end
#966, 6:
pt_4_y
## end
#967, 6:
pt_4_x
## end
#968, 38:
329.06195298824696, 382.27963240810203
## end
#969, 8:
pt_2pt_4
## end
#971, 2:
, 
## end
#972, 28:
pt_4_y, pt_2_ypt_4_y, pt_2_y
## end
#974, 2:
, 
## end
#975, 28:
pt_4_x, pt_2_xpt_4_x, pt_2_x
## end
#977, 1:
 
## end
#978, 76:
329.06195298824696, 382.27963240810203 662.6501417020922, 309.76046094857054
## end
#979, 110:
<polygon id="line_%线" points="%pts" style="fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;" />

## end
#980, 50:
var line_%线 = document.getElementById("line_%线");

## end
#981, 128:
xs=[%xs];
ys=[%ys];
for(var i=0;i<line_%线.points.length;i++) {
    line_%线.points[i].x=xs[i];
    line_%线.points[i].y=ys[i];
}


## end
#1003, 186:
<circle id="pt_3" onmousedown="loadDragFunc('pt_3')" cx="329.06195298824696" cy="72.51917145953152" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />

## end
#1004, 123:
var pt_3 = document.getElementById("pt_3");
var pt_3_x = +pt_3.getAttribute("cx");
var pt_3_y = +pt_3.getAttribute("cy");


## end
#1005, 64:
pt_3.setAttribute("cx",pt_3_x);
pt_3.setAttribute("cy",pt_3_y);

## end
#1009, 171:
<circle id="pt_1" onmousedown="loadDragFunc('pt_1')" cx="662.6501417020922" cy="0.0" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />

## end
#1010, 123:
var pt_1 = document.getElementById("pt_1");
var pt_1_x = +pt_1.getAttribute("cx");
var pt_1_y = +pt_1.getAttribute("cy");


## end
#1011, 64:
pt_1.setAttribute("cx",pt_1_x);
pt_1.setAttribute("cy",pt_1_y);

## end
#1015, 186:
<circle id="pt_2" onmousedown="loadDragFunc('pt_2')" cx="662.6501417020922" cy="309.76046094857054" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />

## end
#1016, 123:
var pt_2 = document.getElementById("pt_2");
var pt_2_x = +pt_2.getAttribute("cx");
var pt_2_y = +pt_2.getAttribute("cy");


## end
#1017, 64:
pt_2.setAttribute("cx",pt_2_x);
pt_2.setAttribute("cy",pt_2_y);

## end
#1021, 187:
<circle id="pt_4" onmousedown="loadDragFunc('pt_4')" cx="329.06195298824696" cy="382.27963240810203" r="10" style="fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;" />

## end
#1022, 123:
var pt_4 = document.getElementById("pt_4");
var pt_4_x = +pt_4.getAttribute("cx");
var pt_4_y = +pt_4.getAttribute("cy");


## end
#1023, 64:
pt_4.setAttribute("cx",pt_4_x);
pt_4.setAttribute("cy",pt_4_y);

## end
#1028, 57:

模拟过程:...
光斑形状:...
高a0问题:...
低分辨率问题:...
+[新建阅读窗口](,模拟过程)

## end
#1030, 1277:
%{
+[M函数](,模拟过程)

Smilei结果:...
PIConGPU结果:...
+[M函数](,Smilei结果)
+[新建阅读窗口](,Smilei结果)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01/openPMD/simData";

%{
colormap('default')
+[M函数](,读取h5_2D)
%}

tis=0:400:16000;
for i=1:length(tis)
ti=tis(i);

data_0=read_data_PIConGPU_h5(filename_0,ti,'Ey');
data_1=read_data_PIConGPU_h5(filename_1,ti,'Ey');
E_y=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,ti,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,ti,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_y=field_spatial_phase(E_y);
I0=sin(ph_z-ph_y);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;
y0=(1:size(I0,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>20e-6&y0<60e-6,x0>5e-6&x0<75e-6);
y=y0(y0>20e-6&y0<60e-6);
x=x0(x0>5e-6&x0<75e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)

end

%{
+[M函数](,模拟过程)
%}
## end
#1032, 1339:
%{
+[M函数](,模拟过程)

Smilei结果:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";



tis=0:400:16000;
% tis=0:500:16000;
% tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>10e-6&y0<70e-6,x0<80e-6);
y=y0(y0>10e-6&y0<70e-6);
x=x0(x0<80e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)
end

%{
+[M函数](,模拟过程)
%}
## end
#1034, 1255:
%{
+[M函数](,模拟过程)

Smilei结果:...
PIConGPU结果
+[新建阅读窗口](,Smilei结果)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01/openPMD/simData";

%{
colormap('default')
+[M函数](,读取h5_2D)
%}

tis=0:400:16000;
for i=1:length(tis)
ti=tis(i);

data_0=read_data_PIConGPU_h5(filename_0,ti,'Ey');
data_1=read_data_PIConGPU_h5(filename_1,ti,'Ey');
E_y=data_1-data_0;

data_0=read_data_PIConGPU_h5(filename_0,ti,'Ez');
data_1=read_data_PIConGPU_h5(filename_1,ti,'Ez');
E_z=data_1-data_0;


ph_z=field_spatial_phase(E_z);
ph_y=field_spatial_phase(E_y);
I0=sin(ph_z-ph_y);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;
y0=(1:size(I0,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>20e-6&y0<60e-6,x0>5e-6&x0<75e-6);
y=y0(y0>20e-6&y0<60e-6);
x=x0(x0>5e-6&x0<75e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)

end

%{
+[M函数](,模拟过程)
%}
## end
#1036, 1462:
%{
+[M函数](,光斑形状)

截面扫描:...
光斑:...
光斑演化:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dz=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01_3D/openPMD/simData";

tis=0:2000:22000;

for i=1:length(tis)
ti=tis(i);
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile0=zeros(siz(1),siz(3));


for zi=1:siz(3)

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I0=sin(ph_z-ph_x);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;

I_y=mean(abs(Dangle0(:,x0>5e-6&x0<75e-6)'));
profile0(:,zi)=I_y;

end

y1=20e-6;
y2=60e-6;
z1=20e-6;
z2=60e-6;
y0=(1:siz(1))*dy;
z0=(1:siz(3))*dz;
profile=profile0(z0>z1&z0<z2,y0>y1&y0<y2);
y=y0(y0>y1&y0<y2);
z=z0(z0>z1&z0<z2);

surf(z/1e-6,y/1e-6,profile)
view([0,90])
axis equal
shading interp
colorbar
xlabel('z [um]')
ylabel('y [um]')

title(sprintf('Propagation distance: %.1f um',ti*dt/1e-6*c))
pause(0.1)

end

%{
+[M函数](,光斑形状)
%}
## end
#1038, 1421:
%{
+[M函数](,光斑形状)

截面扫描:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dz=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01_3D/openPMD/simData";


ti=10000;
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile=zeros(siz(1),siz(3));


for zi=1:siz(3)
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I0=sin(ph_z-ph_x);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;
y0=(1:size(I0,1))*dy;

if ti*dt<t0
    Dt=0;
else
    Dt=ti*dt-t0;
end

Dangle=Dangle0(y0>20e-6&y0<60e-6,x0>5e-6&x0<75e-6);
y=y0(y0>20e-6&y0<60e-6);
x=x0(x0>5e-6&x0<75e-6)+Dt*c;


surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
% title(sprintf('Simulation time: %.1f fs',ti*dt/1e-15))
title(sprintf('Slice plane: %.1f um',zi*dz/1e-6))

pause(0.1)
end


%{
+[M函数](,光斑形状)
%}
## end
#1040, 1418:
%{
+[M函数](,光斑形状)

截面扫描:...
光斑:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dz=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01_3D/openPMD/simData";


ti=10000;
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile0=zeros(siz(1),siz(3));


for zi=1:siz(3)
%{
+[M函数](,读取h5)
%}

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I0=sin(ph_z-ph_x);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;

I_y=mean(abs(Dangle0(:,x0>5e-6&x0<75e-6)'));
profile0(:,zi)=I_y;

end

y1=20e-6;
y2=60e-6;
z1=20e-6;
z2=60e-6;
y0=(1:siz(1))*dy;
z0=(1:siz(3))*dz;
profile=profile0(z0>z1&z0<z2,y0>y1&y0<y2);
y=y0(y0>y1&y0<y2);
z=z0(z0>z1&z0<z2);

surf(z/1e-6,y/1e-6,profile)
view([0,90])
axis equal
shading interp
colorbar
xlabel('z [um]')
ylabel('y [um]')

title(sprintf('Propagation distance: %.1f um',ti*dt/1e-6*c))

%{
+[M函数](,光斑形状)
%}
## end
#1042, 1461:
%{
+[M函数](,光斑形状)

截面扫描:...
光斑:...
光斑演化:...
%}

addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
dx=1.5e-8;
dy=10.772e-7;
dz=10.772e-7;
dt=0.47e-16;
t0=350e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_3D/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01_3D/openPMD/simData";

tis=0:2000:22000

for i=1:length(tis)
ti=tis(i);
plane="xy";
[~,info]=read_data_PIConGPU_h5_3D(filename_0,0,'Ez',1,plane);
siz=info.Dataspace.Size;
profile0=zeros(siz(1),siz(3));


for zi=1:siz(3)

field="Ez";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ez=data_0-data_1;

field="Ex";
data_0=read_data_PIConGPU_h5_3D(filename_0,ti,field,zi,plane);
data_1=read_data_PIConGPU_h5_3D(filename_1,ti,field,zi,plane);
Ex=data_0-data_1;


ph_z=field_spatial_phase(Ez);
ph_x=field_spatial_phase(Ex);

I0=sin(ph_z-ph_x);
Dangle0=asind(I0);
x0=(1:size(I0,2))*dx;

I_y=mean(abs(Dangle0(:,x0>5e-6&x0<75e-6)'));
profile0(:,zi)=I_y;

end

y1=20e-6;
y2=60e-6;
z1=20e-6;
z2=60e-6;
y0=(1:siz(1))*dy;
z0=(1:siz(3))*dz;
profile=profile0(z0>z1&z0<z2,y0>y1&y0<y2);
y=y0(y0>y1&y0<y2);
z=z0(z0>z1&z0<z2);

surf(z/1e-6,y/1e-6,profile)
view([0,90])
axis equal
shading interp
colorbar
xlabel('z [um]')
ylabel('y [um]')

title(sprintf('Propagation distance: %.1f um',ti*dt/1e-6*c))
pause(0.1)

end

%{
+[M函数](,光斑形状)
%}
## end
#1044, 1344:
%{
+[M函数](,高a0问题)

800nm:...
1800nm:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=1.5e-8;
dy=20e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_1800_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_1800_1/Fields0.h5";



tis=0:500:16000;
% tis=0:500:16000;
% tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>10e-6&y0<70e-6,x0<80e-6);
y=y0(y0>10e-6&y0<70e-6);
x=x0(x0<80e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)
end

%{
+[M函数](,模拟过程)
%}
## end
#1046, 1320:
%{
+[M函数](,高a0问题)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=1.5e-8;
dy=20e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_800_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_800_1/Fields0.h5";



tis=0:500:16000;
% tis=0:500:16000;
% tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>10e-6&y0<70e-6,x0<80e-6);
y=y0(y0>10e-6&y0<70e-6);
x=x0(x0<80e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)
end

%{
+[M函数](,模拟过程)
%}
## end
#1048, 1344:
%{
+[M函数](,高a0问题)

800nm:...
1800nm:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=1.5e-8;
dy=20e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_1800_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highA0Issue/FDH_1800_1/Fields0.h5";



tis=0:500:16000;
% tis=0:500:16000;
% tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>10e-6&y0<70e-6,x0<80e-6);
y=y0(y0>10e-6&y0<70e-6);
x=x0(x0<80e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)
end

%{
+[M函数](,模拟过程)
%}
## end
#1050, 1348:
%{
+[M函数](,低分辨率问题)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=3.7e-8;
dy=1.7e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/LowResolution/BG.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/LowResolution/Probe.h5";



tis=0:400:16000;
% tis=0:500:16000;
% tis=16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

y1=25e-6;
y2=55e-6;
Dangle=Dangle0(y0>y1&y0<y2,x0<80e-6);
y=y0(y0>y1&y0<y2);
x=x0(x0<80e-6)+Dt*c;

% surf((x0+Dt*c)/1e-6,y0/1e-6,Dangle0)
surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)
end

%{
+[M函数](,低分辨率问题)
%}
## end
#1052, 198:
Nini, 打开plasma(文件)

单位换算:...

初始参数:...
探针理论:...
流场分析:...
在选择区域中, 将'流场分析'的"Jy"替换为"Jx"
流场分析2:...
+[新建阅读窗口](,流场分析2)
+[新建阅读窗口](,探针理论)
+[新建阅读窗口](,初始参数)

扫描参数:...
(扫描波长里做了较为完整的物理量间对比)
+[新建阅读窗口](,扫描参数)




## end
#1055, 2422:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...
+[M函数](,模拟数据)
+[M函数](,模拟数据_probe)
+[M函数](,模拟数据_v)

理论探针:...
(1D分布)
速度分布:...
理论探针_2D:...
理论探针_debug:...
1D理论_矩阵:...
(差很远, 甚至没有解决Jy的正负号的问题)
+[新建阅读窗口](,理论探针)
+[新建阅读窗口](,理论探针_2D)

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
Fy=fft(vy);
Fy(500:end-500)=0;
vy2=real(ifft(Fy));
Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));

E_x=zeros(size(x));
E_y=zeros(size(x));
E_z=zeros(size(x));
n_1=zeros(size(x));
n_2=zeros(size(x));
n_3=zeros(size(x));

beta2=vx2.^2+vy2.^2+vz.^2;
gamma=sqrt(1./(1-beta2));

% for i=1:1000
for i=1:length(x)
% for i=1000

beta_r=[vx2(i),vy2(i),vz(i)];
beta_r=beta_r/norm(beta_r);
% B0=[bx(i),by(i),bz(i)];
B0=[bx(i),by(i),bz(i)];
n_0=n2(i);
[n_r,E1,E2,E3]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma(i),beta_r,"flow");
Delta_n_r=plasma_refractive_index_current_shift(lm_0,k_r,n_0,gamma(i),beta_r,norm(B0),1);
n_r(2)=n_r(1)+0.13*Delta_n_r;
n_1(i)=n_r(1);
n_2(i)=n_r(2);
n_3(i)=n_r(2);
%{
+[M函数](,探针理论)
%}


E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*x(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*x(i)*k_0)+E_x(i);
E_x(i)=E0*E3*E3(1)'*exp(1i*n_r(3)*x(i)*k_0)+E_x(i);

E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*x(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*x(i)*k_0)+E_y(i);
E_y(i)=E0*E3*E3(2)'*exp(1i*n_r(3)*x(i)*k_0)+E_y(i);

E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*x(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*x(i)*k_0)+E_z(i);
E_z(i)=E0*E3*E3(3)'*exp(1i*n_r(3)*x(i)*k_0)+E_z(i);

end

E_y(isnan(E_y))=0;
E_z(isnan(E_z))=0;
[Ey_phase,Ey_x]=spatial_phase(E_y');
[Ez_phase,Ez_x]=spatial_phase(E_z');
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

ey=Ey(i0,:);
ez=Ez(i0,:);
[Ey_phase,Ey_x]=spatial_phase(ey');
[Ez_phase,Ez_x]=spatial_phase(ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);

figure
% plot(x,Dangle0,x,Dangle,x,vy*40,x,vy2*40)
plot(x,Dangle0,x,-Dangle)
axis([60e-6,140e-6,-10,10])


%{
plot(gamma)
plot(x,gamma)
plot(x,real(E_x))
axis([60e-6,140e-6,-10,10])
plot(x,n_2,x,n_1)
Dn=abs(n_2-n_1);
max(Dn(1:1000))

+[M函数](,探针理论)
%}
## end
#1057, 889:
%{
+[M函数](,模拟数据)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";

%{
+[M函数](,模拟数据)
%}
tis=0:400:16000;
i=41;

ti=tis(i);
field='Bx';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
Bx=data_0;
field='By';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
By=data_0;
field='Bz';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
Bz=data_0;

x0=(1:size(data_0,2))*dx;
y0=(1:size(data_0,1))*dy;

surf(x0/1e-6,y0/1e-6,Bx)
% surf(Bx(:,1:7000))
shading interp
view([0,90])
colorbar
% axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))



%{
max(max(data_0))
info.Attributes
info.Attributes.Value
+[M函数](,探针理论)
%}
## end
#1059, 1210:
%{
+[M函数](,探针理论)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";



tis=0:400:16000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);
x0=(1:size(Dph,2))*dx;
y0=(1:size(Dph,1))*dy;

if tis(i)*dt<t0
    Dt=0;
else
    Dt=tis(i)*dt-t0;
end

Dangle=Dangle0(y0>10e-6&y0<70e-6,x0<80e-6);
y=y0(y0>10e-6&y0<70e-6);
x=x0(x0<80e-6)+Dt*c;

surf(x/1e-6,y/1e-6,Dangle)
shading interp
view([0,90])
colorbar
axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))

pause(0.1)

end

%{
+[M函数](,探针理论)
%}
## end
#1061, 1015:
%{
+[M函数](,模拟数据_v)
模拟动画:...
模拟数据:...
模拟数据_v:...

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";

%{
+[M函数](,探针理论)
%}
tis=0:400:16000;
i=41;

ti=tis(i);
field='n';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
x0=(1:size(data_0,2))*dx;
y0=(1:size(data_0,1))*dy;
Rho=data_0;
[x,y,Jx,info]=read_data_Smilei_h5(filename_0,ti,"Jx");
[x,y,Jy,info]=read_data_Smilei_h5(filename_0,ti,"Jy");
[x,y,Jz,info]=read_data_Smilei_h5(filename_0,ti,"Jz");

v_x=Jx./Rho/e/c;
v_y=Jy./Rho/e/c;
v_z=Jz./Rho/e/c;
N0=-Rho;

% surf(x0/1e-6,y0/1e-6,field_0)
surf(v_y(:,10:7000))
shading interp
view([0,90])
colorbar
% axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))



%{
plot(v_y)
max(max(abs(n_0)))
max(max(abs(Jx)))
max(max(abs(Jy)))
max(max(abs(Jz)))
+[M函数](,探针理论)
%}
## end
#1063, 895:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,探针理论)
%}
tis=0:400:16000;
i=41;

ti=tis(i);
field='Ey';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_1-data_0;
field='Ez';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_1-data_0;

x0=(1:size(data_0,2))*dx;
y0=(1:size(data_0,1))*dy;

i0=50;
ey=Ey(i0,:);
ez=-Ez(i0,:);
figure
plot(x0,ey,x0,ez)


%{
+[M函数](,探针理论)
%}
## end
#1067, 2016:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...
+[M函数](,模拟数据)
+[M函数](,模拟数据_probe)
+[M函数](,模拟数据_v)

理论探针:...
(1D分布)
速度分布:...
理论探针_2D:...
理论探针_debug:...
+[新建阅读窗口](,理论探针)
+[新建阅读窗口](,理论探针_2D)

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
Fy=fft(vy);
Fy(500:end-500)=0;
vy2=real(ifft(Fy))*0;
Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));

E_x=zeros(size(x));
E_y=zeros(size(x));
E_z=zeros(size(x));
n_1=zeros(size(x));
n_2=zeros(size(x));

beta2=vx2.^2+vy2.^2+vz.^2;
gamma=sqrt(1./(1-beta2));
plot(gamma)

% for i=1:1000
for i=1:length(x)
% for i=1000

beta_r=[vx2(i),vy2(i),vz(i)];
beta_r=beta_r/norm(beta_r);
% B0=[bx(i),by(i),bz(i)];
B0=[bx(i),by(i),bz(i)]*0;
n_0=n2(i);
[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma(i),beta_r,B0);
% [n_r,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,bx(i));
n_1(i)=n_r(1);
n_2(i)=n_r(2);


E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*x(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*x(i)*k_0)+E_x(i);
E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*x(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*x(i)*k_0)+E_y(i);
E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*x(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*x(i)*k_0)+E_z(i);

end

E_y(isnan(E_y))=0;
E_z(isnan(E_z))=0;
[Ey_phase,Ey_x]=spatial_phase(E_y');
[Ez_phase,Ez_x]=spatial_phase(E_z');
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

ey=Ey(i0,:);
ez=Ez(i0,:);
[Ey_phase,Ey_x]=spatial_phase(ey');
[Ez_phase,Ez_x]=spatial_phase(ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);

figure
plot(x,Dangle0,x,Dangle,x,vy*40,x,vy2*40)
axis([60e-6,140e-6,-10,10])


%{
plot(x,real(E_x))
axis([60e-6,140e-6,-10,10])
tis
+[M函数](,探针理论)
%}
## end
#1069, 572:
%{
+[M函数](,速度分布)
查看速度分布:...
整理速度分布:...
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);


Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));
% plot(real(Fx))
% axis([0,9985,-15,10])
plot(x,n0,x,n2)

%{
+[M函数](,速度分布)
%}
## end
#1071, 662:
%{
+[M函数](,查看速度分布)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

E_z=zeros(size(x));
E_y=zeros(size(x));
E_z=zeros(size(x));
n_1=zeros(size(x));
n_2=zeros(size(x));

beta2=vx.^2+vy.^2+vz.^2;
gamma=sqrt(1./(1-beta2));
% plot(x,gamma)
plot(x,vx,x,vy,x,vz)
legend('v_x','v_y','v_z')


%{
+[M函数](,查看速度分布)
%}
## end
#1073, 574:
%{
+[M函数](,速度分布)
查看速度分布:...
整理速度分布:...
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);


Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
% plot(real(Fx))
% axis([0,9985,-15,10])
plot(x,vx,x,vx2)

%{
+[M函数](,速度分布)
%}
## end
#1075, 1879:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...
+[M函数](,模拟数据)
+[M函数](,模拟数据_probe)
+[M函数](,模拟数据_v)

理论探针:...
(1D分布)
速度分布:...
+[新建阅读窗口](,理论探针)

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');
addpath('Matlab/FDH');
addpath('Matlab/fft')

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;


E_x=zeros(size(Ez));
E_y=zeros(size(Ez));
E_z=zeros(size(Ez));
n_1=zeros(size(Ez));
n_2=zeros(size(Ez));

% for i0=1:size(Ez,1)
for i0=30:50
i0
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));

beta2=vx2.^2+vy.^2+vz.^2;
gamma=sqrt(1./(1-beta2));


for i=1:1000
% for i=1:length(x)
beta_r=[vx2(i),vy(i),vz(i)];
beta_r=beta_r/norm(beta_r);
B0=[bx(i),by(i),bz(i)];
n_0=n2(i);
[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma(i),beta_r,B0);
% [n_r,E10,E20]=plasma_refractive_index_FR(lm_0,n_0,by(i));
% E1=[E10(2);E10(3);E10(1)];
% E2=[E20(2);E20(3);E20(1)];
n_1(i0,i)=n_r(1);
n_2(i0,i)=n_r(2);

E_x(i0,i)=E0*E1*E1(1)'*exp(1i*n_r(1)*x(i)*k_0);
E_x(i0,i)=E0*E2*E2(1)'*exp(1i*n_r(2)*x(i)*k_0)+E_x(i0,i);
E_y(i0,i)=E0*E1*E1(2)'*exp(1i*n_r(1)*x(i)*k_0);
E_y(i0,i)=E0*E2*E2(2)'*exp(1i*n_r(2)*x(i)*k_0)+E_y(i0,i);
E_z(i0,i)=E0*E1*E1(3)'*exp(1i*n_r(1)*x(i)*k_0);
E_z(i0,i)=E0*E2*E2(3)'*exp(1i*n_r(2)*x(i)*k_0)+E_z(i0,i);

end


end

[Ey_phase,Ey_x]=spatial_phase(E_y');
[Ez_phase,Ez_x]=spatial_phase(E_z');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);


surf(Dangle0(30:50,100:1000))
shading interp
view([0,90])
colorbar


% plot(real(E_z(45,:)))
% plot(x,E_z,x,E_y)

%{
E_z_save_sim=E_z;
E_y_save_sim=E_y;

+[M函数](,探针理论)
%}
## end
#1077, 1840:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...
+[M函数](,模拟数据)
+[M函数](,模拟数据_probe)
+[M函数](,模拟数据_v)

理论探针:...
(1D分布)
速度分布:...
理论探针_2D:...
+[新建阅读窗口](,理论探针)
+[新建阅读窗口](,理论探针_2D)

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));

E_x=zeros(size(x));
E_y=zeros(size(x));
E_z=zeros(size(x));
n_1=zeros(size(x));
n_2=zeros(size(x));

beta2=vx2.^2+vy.^2+vz.^2;
gamma=sqrt(1./(1-beta2));


% for i=1:1000
% for i=1:length(x)
for i=1000
beta_r=[vx2(i),vy(i),vz(i)];
beta_r=beta_r/norm(beta_r);
B0=[bx(i),by(i),bz(i)];
n_0=n2(i);
[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma(i),beta_r,B0);
% [n_r,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,bx(i));
n_1(i)=n_r(1);
n_2(i)=n_r(2);

E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*x(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*x(i)*k_0)+E_x(i);
E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*x(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*x(i)*k_0)+E_y(i);
E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*x(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*x(i)*k_0)+E_z(i);

end

[Ey_phase,Ey_x]=spatial_phase(E_y');
[Ez_phase,Ez_x]=spatial_phase(E_z');
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

ey=Ey(i0,:);
ez=Ez(i0,:);
[Ey_phase,Ey_x]=spatial_phase(ey');
[Ez_phase,Ez_x]=spatial_phase(ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);


plot(x,Dangle0,x,Dangle,x,vy*40)
axis([60e-6,140e-6,-10,10])

%{
B
E_z_save_sim=E_z;
E_y_save_sim=E_y;

+[M函数](,探针理论)
%}
## end
#1079, 2389:
%{
+[M函数](,探针理论)
模拟动画:...
模拟数据:...
(磁场)
模拟数据_v:...
模拟数据_probe:...
+[M函数](,模拟数据)
+[M函数](,模拟数据_probe)
+[M函数](,模拟数据_v)

理论探针:...
(1D分布)
速度分布:...
理论探针_2D:...
理论探针_debug:...
1D理论_矩阵:...
+[新建阅读窗口](,理论探针)
+[新建阅读窗口](,理论探针_2D)

%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

i_sample=41;
q=e;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

k_r=[1,0,0];
E0=[0,1,1];
k_0=2*pi/lm_0;

if tis(i_sample)*dt<t0
    Dt=0;
else
    Dt=tis(i_sample)*dt-t0;
end
x=x0+Dt*c;

i0=45;
bx=Bx(i0,:);
by=By(i0,:);
bz=Bz(i0,:);
vx=v_x(i0,:);
vy=v_y(i0,:);
vz=v_z(i0,:);
n0=N0(i0,:);

Fx=fft(vx);
Fx(500:end-500)=0;
vx2=real(ifft(Fx));
Fy=fft(vy);
Fy(500:end-500)=0;
vy2=real(ifft(Fy));
Fn=fft(n0);
Fn(500:end-500)=0;
n2=real(ifft(Fn));

E_x=zeros(size(x));
E_y=zeros(size(x));
E_z=zeros(size(x));
n_1=zeros(size(x));
n_2=zeros(size(x));
n_3=zeros(size(x));

beta2=vx2.^2+vy2.^2+vz.^2;
gamma=sqrt(1./(1-beta2));

% for i=1:1000
for i=1:length(x)
% for i=1000

beta_r=[vx2(i),vy2(i),vz(i)];
beta_r=beta_r/norm(beta_r);
% B0=[bx(i),by(i),bz(i)];
B0=[bx(i),by(i),bz(i)];
n_0=n2(i);
% [n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma(i),beta_r,B0);
% [n_r,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,bx(i));
[n_r,E1,E2,E3]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma(i),beta_r,"no flow");
% [n_r,E1,E2,E3]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma(i),beta_r,"flow");
n_1(i)=n_r(1);
n_2(i)=n_r(2);
n_3(i)=n_r(2);


E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*x(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*x(i)*k_0)+E_x(i);
E_x(i)=E0*E3*E3(1)'*exp(1i*n_r(3)*x(i)*k_0)+E_x(i);

E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*x(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*x(i)*k_0)+E_y(i);
E_y(i)=E0*E3*E3(2)'*exp(1i*n_r(3)*x(i)*k_0)+E_y(i);

E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*x(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*x(i)*k_0)+E_z(i);
E_z(i)=E0*E3*E3(3)'*exp(1i*n_r(3)*x(i)*k_0)+E_z(i);

end

E_y(isnan(E_y))=0;
E_z(isnan(E_z))=0;
[Ey_phase,Ey_x]=spatial_phase(E_y');
[Ez_phase,Ez_x]=spatial_phase(E_z');
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

ey=Ey(i0,:);
ez=Ez(i0,:);
[Ey_phase,Ey_x]=spatial_phase(ey');
[Ez_phase,Ez_x]=spatial_phase(ez');
Dph=sin(Ey_phase-Ez_phase)';
Dangle0=asind(Dph);

figure
plot(x,Dangle0,x,Dangle,x,vy*40,x,vy2*40)
axis([60e-6,140e-6,-10,10])


%{
plot(x,abs(E_x))
plot(x,real(E_x))
axis([60e-6,140e-6,-10,10])
tis
+[M函数](,探针理论)
%}
## end
#1081, 2653:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...

DJ对比:...
二维分布:...
计算波包:...
DJ对比_2:...
(用了新的获取波包的方法)
+[新建阅读窗口](,二维分布)

等效质量:...

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0=Ez_0(i0,:);
Ez_1=Ez_1(i0,:);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0=Ey_0(i0,:);
Ey_1=Ey_1(i0,:);
Ey=Ey_1-Ey_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx_0=Jx_0(i0,:);
Jx_1=Jx_1(i0,:);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vx_0=Jx_0./Rho_0/e/c;
vy_0=Jy_0./Rho_0/e/c;
vz_0=Jz_0./Rho_0/e/c;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[~,~,Dvy_f]=carrier_envelop_probe(x0,Dvy,1e-13);
[~,~,Dvz_f]=carrier_envelop_probe(x0,-Dvz,1e-13);
%[x1,y1,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f]=carrier_envelop_probe(x0,-Ez,1e-13);


Dv=Dvy_f-Dvz_f;
my=e^2*Ey_f./Dvy_f/omega_0/m_e;
mz=e^2*Ez_f./Dvz_f/omega_0/m_e;


% plot(x1/1e-6,y1,x0/1e-6,Ey,x0/1e-6,Ey_f)
% plot(x0/1e-6,Ey_f,x0/1e-6,Ez_f)
% plot(x0/1e-6,Dvy_f,x0/1e-6,Dvz_f)
plot(x0/1e-6,my,x0/1e-6,mz,x0/1e-6,vy_0,x0/1e-6,vx_0,[0,200],[0,0],'k--',[0,200],[1,1],'k-.')

axis([20,60,-0.5,1.5])

%{
m_e
omega_0
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1083, 854:
%{
+[M函数](,获取数据)

获取数据
%}



physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i=41;

ti=tis(i);
field='Rho';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
Rho_0=data_0;
[x,y,data_0,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_1=data_0;


x0=(1:size(data_0,2))*dx;
y0=(1:size(data_0,1))*dy;

surf(x0/1e-6,y0/1e-6,Rho_1-Rho_0)
% surf(Bx(:,1:7000))
shading interp
view([0,90])
colorbar
% axis equal
xlabel('x [um]')
ylabel('y [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))



%{
+[M函数](,流场分析)
%}
## end
#1085, 768:
%{
+[M函数](,流场分析)

获取数据:...
一维数据:...
%}



physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz=data_1-data_0;
In=Jz(i0,:);



x0=(1:size(data_0,2))*dx;

plot(x0/1e-6,In)
xlabel('x [um]')
title(sprintf('Simulation time: %.1f fs',tis(i)*dt/1e-15))



%{
+[M函数](,流场分析)
%}
## end
#1087, 1238:
%{
+[M函数](,流场分析)

获取数据:...
一维数据:...
密度分布:...
%}



physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz=data_1-data_0;
Jz=Jz(i0,:);

field='Jy';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy=data_1-data_0;
Jy=Jy(i0,:);

field='Rho';
[x,y,data_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho=data_1-data_0;
Rho=Rho(i0,:);
Fn=fft(Rho);
Fn(500:end-500)=0;
Rho2=real(ifft(Fn));



x0=(1:size(data_0,2))*dx;

% plot(x0/1e-6,Jz,x0/1e-6,-Jy)
subplot(2,1,1)
plot(x0/1e-6,Jz+Jy)
xlabel('x [um]')

subplot(2,1,2)
% plot(x0/1e-6,Rho,x0/1e-6,Rho2)
plot(x0/1e-6,Rho2)
xlabel('x [um]')




%{
+[M函数](,流场分析)
%}
## end
#1089, 1661:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...
%}



physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

[Dvy_phase,Dvy_x]=spatial_phase(Dvy);
[Dvz_phase,Dvz_x]=spatial_phase(Dvz);



x0=(1:length(Rho))*dx;

% plot(x0/1e-6,Jz,x0/1e-6,-Jy)
subplot(2,1,1)
plot(x0/1e-6,Jz+Jy)
xlabel('x [um]')

subplot(2,1,2)
% plot(x0/1e-6,(vy+vz).*Rho_0,x0/1e-6,vy_0.*DRho2)
% plot(x0/1e-6,(vy+vz).*Rho_0,x0/1e-6,Jz+Jy,x0/1e-6,vy_0.*DRho2)
% plot(x0/1e-6,(vy+vz).*Rho_0+vy_0.*DRho2,x0/1e-6,Jz+Jy)
plot(x0/1e-6,(vy+vz).*Rho_0);
xlabel('x [um]')




%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1091, 1520:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...


保存:...
+[新建阅读窗口](,保存)
%}



physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

[Dvy_phase,Dvy_i]=spatial_phase(Dvy);
[Dvz_phase,Dvz_i]=spatial_phase(Dvz);

Dv=abs(Dvy_i)-abs(Dvz_i);


x0=(1:length(Rho))*dx;
% plot(x,abs(Dvy_i),x,real(Dvy_i),x,abs(Dvz_i))
% plot(x,real(Dvy_i),x,-real(Dvz_i))
plot(x0/1e-6,Dv.*Rho_0,x0/1e-6,vy_0.*DRho2)




%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1093, 1827:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...
DJ对比:...
二维分布:...
计算波包:...
+[新建阅读窗口](,二维分布)

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0;
Jz_1=Jz_1;
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0;
Jy_1=Jy_1;
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0;
Rho_1=Rho_1;
DRho=Rho_1-Rho_0;

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;
Dvy(:,1:20)=0;

x0=(1:length(Rho_0))*dx;

Dvy_ce=zeros(size(Dvy));
Dvz_ce=zeros(size(Dvz));


for i=1:size(Dvz,1)
[x_1,y_1]=carrier_envelop_probe(x0,Dvy(i,:),1e-13);
if length(x_1)>20
    p_ce_1=interp1(x_1,y_1,x0,'spline');
    p_ce_1(x0<min(x_1) | x0>max(x_1))=0;
    Dvy_ce(i,:)=p_ce_1;
end

[x_1,y_1]=carrier_envelop_probe(x0,Dvz(i,:),1e-13);
if length(x_1)>20
    p_ce_1=interp1(x_1,y_1,x0,'spline');
    p_ce_1(x0<min(x_1) | x0>max(x_1))=0;
    Dvz_ce(i,:)=p_ce_1;
end

end

surf(Dvy_ce-Dvz_ce)
shading interp
view([0,90])



%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1095, 634:
%{
地址::Matlab/FDH/carrier_envelop_probe.m
+[保存M函数](,carrier_envelop_probe)

测试:...
%}

function [x_pk,y_pk,f_1]=carrier_envelop_probe(x0,f,f_min)


zeros_l=[];
zeros_r=[];
for si=1:length(x0)-1
    if f(si)*f(si+1)<0
        zeros_l(end+1)=si;
        zeros_r(end+1)=si+1;
    end
end

x_pk=[];
y_pk=[];

for si=1:length(zeros_l)-1
    f_lc=f(zeros_r(si):zeros_l(si+1));
    f_max=max(f_lc);
    si_max=find(f_lc==f_max);
    si_0=si_max(1)-1+zeros_r(si);
    x_pk(end+1)=x0(si_0);
    y_pk(end+1)=f(si_0);
end
x_pk(y_pk<f_min)=[];
y_pk(y_pk<f_min)=[];

f_1=interp1(x_pk,y_pk,x0,'spline');
f_1(x0<min(x_pk) | x0>max(x_pk))=0;


end



## end
#1098, 34:
Matlab/FDH/carrier_envelop_probe.m
## end
#1100, 1915:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...
DJ对比:...
二维分布:...

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;
Dn=44;
n0=100;

zeros_l=[];
zeros_r=[];
for si=1:length(x0)-1
    if Dvy(si)*Dvy(si+1)<0
        zeros_l(end+1)=si;
        zeros_r(end+1)=si+1;
    end
end

x_pk=[];
y_pk=[];
% f=abs(Dvy);
f=Dvy;

for si=1:length(zeros_l)-1
    f_lc=f(zeros_r(si):zeros_l(si+1));
    f_max=max(f_lc);
    si_max=find(f_lc==f_max);
    si_0=si_max(1)-1+zeros_r(si);
    x_pk(end+1)=x0(si_0);
    y_pk(end+1)=f(si_0);
end
x_pk(y_pk<1e-13)=[];
y_pk(y_pk<1e-13)=[];

% plot(x0,Dvy,x_pk,y_pk,'o')
plot(x_pk,y_pk,'-o',x0,f)



%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1105, 1790:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...
DJ对比:...
二维分布:...
计算波包:...

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[x_1,y_1]=carrier_envelop_probe(x0,Dvy,1e-13);
[x_2,y_2]=carrier_envelop_probe(x0,-Dvz,1e-13);
p_ce_1=interp1(x_1,y_1,x0,'spline');
p_ce_2=interp1(x_2,y_2,x0,'spline');
p_ce_1(x0<min(x_1) | x0>max(x_1))=0;
p_ce_2(x0<min(x_2) | x0>max(x_2))=0;

% plot(x_1,y_1,'-o',x0,Dvy,x_2,y_2,'-o',x0,-Dvz)
% plot(x0,p_ce_1,x_1,y_1,'o',x0,p_ce_2,x_2,y_2,'o')
plot(x0,p_ce_1-p_ce_2)


%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1107, 1747:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...
DJ对比:...
二维分布:...
计算波包:...
+[新建阅读窗口](,二维分布)

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
+[M函数](,流场分析)
%}
field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[x_1,y_1]=carrier_envelop_probe(x0,Dvy,1e-13);
[x_2,y_2]=carrier_envelop_probe(x0,-Dvz,1e-13);
p_ce_1=interp1(x_1,y_1,x0,'spline');
p_ce_2=interp1(x_2,y_2,x0,'spline');
p_ce_1(x0<min(x_1) | x0>max(x_1))=0;
p_ce_2(x0<min(x_2) | x0>max(x_2))=0;

Dv=p_ce_1-p_ce_2;

plot(x0/1e-6,Dv.*Rho_0,x0/1e-6,vy_0.*DRho2)



%{
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1111, 2380:
%{
+[M函数](,流场分析)
Nini, 打开傅里叶变换的spatial_phase(节点)

获取数据:...
一维数据:...
密度分布:...

DJ对比:...
二维分布:...
计算波包:...
DJ对比_2:...
(用了新的获取波包的方法)
+[新建阅读窗口](,二维分布)

+[打开文件夹]"Matlab/FDH"
carrier_envelop_probe(M函数):...
+[新建阅读窗口](,carrier_envelop_probe)

保存:...
+[新建阅读窗口](,保存)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0=Ez_0(i0,:);
Ez_1=Ez_1(i0,:);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0=Ey_0(i0,:);
Ey_1=Ey_1(i0,:);
Ey=Ey_1-Ey_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vy_0=Jy_0./Rho_0;
vz_0=Jz_0./Rho_0;
plot(vy_0/e)

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[~,~,Dvy_f]=carrier_envelop_probe(x0,Dvy,1e-13);
[~,~,Dvz_f]=carrier_envelop_probe(x0,-Dvz,1e-13);
%[x1,y1,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f]=carrier_envelop_probe(x0,-Ez,1e-13);


Dv=Dvy_f-Dvz_f;
my=e^2*Ey_f./Dvy_f/omega_0/m_e;
mz=e^2*Ez_f./Dvz_f/omega_0/m_e;


% plot(x1/1e-6,y1,x0/1e-6,Ey,x0/1e-6,Ey_f)
% plot(x0/1e-6,Ey_f,x0/1e-6,Ez_f)
% plot(x0/1e-6,Dvy_f,x0/1e-6,Dvz_f)
plot(x0/1e-6,my,x0/1e-6,mz)

axis([20,60,0,1.5])

%{
m_e
omega_0
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1113, 2791:
%{
+[M函数](,流场分析2)

获取数据:...
计算质量:...
分布包络:...
+[M函数](,获取数据)
+[新建阅读窗口](,获取数据)
+[新建阅读窗口](,分布包络)

获取数据2:...
+[M函数](,获取数据2)
将'获取数据2'的"i0"替换为"i1:i2"
+[新建阅读窗口](,获取数据2)

保存:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

A_y=(Jy_f_1+Jy_f_2)./(Ey_f_1+Ey_f_2);
A_z=(Jz_f_1+Jz_f_2)./(Ez_f_1+Ez_f_2);
n_y=sqrt(1-A_y./omega_0/epsilon_0);
n_z=sqrt(1-A_z./omega_0/epsilon_0);

Dphi_j=(n_y-n_z)*70e-6*2*pi/lm_0;


[Ey_phase,Ey_x]=spatial_phase(Ey);
[Ez_phase,Ez_x]=spatial_phase(Ez);
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

Dph_dJ=-[0,diff(Jy2)];
Dph_dJ=Dph_dJ/max(Dph_dJ)*150;

Dph_dv=[0,diff(vy2)];
Dph_dv=Dph_dv/max(Dph_dv)*150;


dvydy=(vy2_2d(3,:)-vy2_2d(2,:))/dy;
dvydx=[0,diff(vy2)]/dx;

dJydy=(Jy2_2d(3,:)-Jy2_2d(2,:))/dy;
dJydx=[0,diff(Jy2)]/dx;


% plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dJ,x0/1e-6,Dph_dv)
% axis([10,70,-7,10])

%{
+[M函数](,流场分析2)
%}

subplot(3,1,1)
% dvydy=(vy2_2d(1,:)-vy2_2d(3,:))/2*3e2;
In=dvydx+dvydy*0.4;
In=In*1e-4;
plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dv,x0/1e-6,In)
axis([10,70,-7,10])
title('Phase difference')

subplot(3,1,2)
baseline0=mean(Jz_f_1+Jz_f_2)*1.15;
dvydx=-Dph_dv*0.6e12+baseline0;
dvydy=-(vy2_2d(1,:)-vy2_2d(3,:))/2*1.2e14+baseline0;
dJydy=-(Jy2_2d(1,:)-Jy2_2d(3,:))/2*1.2e14+baseline0;
plot(x0/1e-6,Jy_f_1+Jy_f_2,x0/1e-6,Jz_f_1+Jz_f_2,x0/1e-6,dvydx,x0/1e-6,dvydy)
axis([10,70,4.5e12,9.5e12])
title('Oscillation current')
legend('J_y','J_z','dv_{y0}')

subplot(3,1,3)
dvydx2=-Dph_dv*0.06;
plot(x0/1e-6,vy2,x0/1e-6,vx_0,x0/1e-6,dvydx2)
axis([10,70,-0.3,0.4])
title('Drifting velocity')
legend('v_{y0}','v_{x0}','dv_{y0}')





%{
In=diff(Jy_0'./Rho_0')';
surf(Jy_0(:,1:7000))
surf(In(:,20:7000))
shading interp
view([0,90])
plot(x0/1e-6,Jx2,x0/1e-6,Jy_0)

plot(Jy_0')
plot(vy_0')
plot(x0/1e-6,vy2_2d(1,:)'-vy2_2d(2,:)')
plot(x0/1e-6,Jy2_2d(1,:)'-Jy2_2d(2,:)')
plot(x0/1e-6,Jx,x0/1e-6,Jy)
plot(x0/1e-6,Jx,x0/1e-6,Jy)
plot(x0/1e-6,dvydx,x0/1e-6,Jx2/1e10*2)
plot(x0/1e-6,dvydx,x0/1e-6,[0,diff(Jx2)]/1e7)
plot(x0/1e-6,dvydx,x0/1e-6,dvydy)
plot(x0/1e-6,dvydx+dvydy*0.3)
plot(Rho_1)

+[M函数](,流场分析2)
%}
## end
#1115, 2563:
%{
+[M函数](,获取数据)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0=Ez_0(i0,:);
Ez_1=Ez_1(i0,:);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0=Ey_0(i0,:);
Ey_1=Ey_1(i0,:);
Ey=Ey_1-Ey_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx_0=Jx_0(i0,:);
Jx_1=Jx_1(i0,:);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

vx_0=Jx_0./Rho_0/e/c;
vy_0=Jy_0./Rho_0/e/c;
vz_0=Jz_0./Rho_0/e/c;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));
Fn=fft(Jx_0);
Fn(500:end-500)=0;
Jx2=real(ifft(Fn));
Fn=fft(Jy_0);
Fn(500:end-500)=0;
Jy2=real(ifft(Fn));
Fy=fft(vy_0);
Fy(500:end-500)=0;
vy2=real(ifft(Fy));


Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[~,~,Dvy_f]=carrier_envelop_probe(x0,Dvy,1e-13);
[~,~,Dvz_f]=carrier_envelop_probe(x0,-Dvz,1e-13);
%[x1,y1,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f]=carrier_envelop_probe(x0,-Ez,1e-13);


Dv=Dvy_f-Dvz_f;
my=e^2*Ey_f./Dvy_f/omega_0/m_e;
mz=e^2*Ez_f./Dvz_f/omega_0/m_e;


% plot(x1/1e-6,y1,x0/1e-6,Ey,x0/1e-6,Ey_f)
% plot(x0/1e-6,Ey_f,x0/1e-6,Ez_f)
% plot(x0/1e-6,Dvy_f,x0/1e-6,Dvz_f)
plot(x0/1e-6,my,x0/1e-6,mz,x0/1e-6,vy_0,x0/1e-6,vx_0,[0,200],[0,0],'k--',[0,200],[1,1],'k-.')

axis([20,60,-0.5,1.5])

%{
m_e
omega_0
+[打开文件夹]"Matlab/fft"
+[M函数](,获取数据)
%}
## end
#1117, 2404:
%{
+[M函数](,流场分析2)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,流场分析)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0=Ez_0(i0,:);
Ez_1=Ez_1(i0,:);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0=Ey_0(i0,:);
Ey_1=Ey_1(i0,:);
Ey=Ey_1-Ey_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0=Jz_0(i0,:);
Jz_1=Jz_1(i0,:);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0=Jy_0(i0,:);
Jy_1=Jy_1(i0,:);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx_0=Jx_0(i0,:);
Jx_1=Jx_1(i0,:);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0=Rho_0(i0,:);
Rho_1=Rho_1(i0,:);
DRho=Rho_1-Rho_0;

Fn=fft(DRho);
Fn(500:end-500)=0;
DRho2=real(ifft(Fn));

vx_0=Jx_0./Rho_0/e/c;
vy_0=Jy_0./Rho_0/e/c;
vz_0=Jz_0./Rho_0/e/c;

Dvy=Jy_0./Rho_0-Jy_1./Rho_1;
Dvz=Jz_0./Rho_0-Jz_1./Rho_1;

x0=(1:length(Rho_0))*dx;

Dx=7.036e-5-6.991e-5;

[~,~,Dvy_f]=carrier_envelop_probe(x0,Dvy,1e-13);
[~,~,Dvz_f]=carrier_envelop_probe(x0,-Dvz,1e-13);
%[x1,y1,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f]=carrier_envelop_probe(x0,-Ez,1e-13);


Dv=Dvy_f-Dvz_f;
my=e^2*Ey_f./Dvy_f/omega_0/m_e;
mz=e^2*Ez_f./Dvz_f/omega_0/m_e;


% plot(x1/1e-6,y1,x0/1e-6,Ey,x0/1e-6,Ey_f)
% plot(x0/1e-6,Ey_f,x0/1e-6,Ez_f)
% plot(x0/1e-6,Dvy_f,x0/1e-6,Dvz_f)
plot(x0/1e-6,my,x0/1e-6,mz,x0/1e-6,vy_0,x0/1e-6,vx_0,[0,200],[0,0],'k--',[0,200],[1,1],'k-.')

axis([20,60,-0.5,1.5])

%{
m_e
omega_0
+[打开文件夹]"Matlab/fft"
+[M函数](,流场分析)
%}
## end
#1119, 1876:
%{
+[M函数](,分布包络)

初步:...
等效质量:...
对比相位差0:...
对比相位差:...
+[新建阅读窗口](,等效质量)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

A_y=(Jy_f_1+Jy_f_2)./(Ey_f_1+Ey_f_2);
A_z=(Jz_f_1+Jz_f_2)./(Ez_f_1+Ez_f_2);
n_y=sqrt(1-A_y./omega_0/epsilon_0);
n_z=sqrt(1-A_z./omega_0/epsilon_0);

Dphi_j=(n_y-n_z)*70e-6*2*pi/lm_0;


[Ey_phase,Ey_x]=spatial_phase(Ey);
[Ez_phase,Ez_x]=spatial_phase(Ez);
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

Dph_dJ=-[0,diff(Jy2)];
Dph_dJ=Dph_dJ/max(Dph_dJ)*150;

Dph_dv=[0,diff(vy2)];
Dph_dv=Dph_dv/max(Dph_dv)*150;



% plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dJ,x0/1e-6,Dph_dv)
% axis([10,70,-7,10])

subplot(3,1,1)
plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dv)
axis([10,70,-7,10])
title('Phase difference')

subplot(3,1,2)
dvydx=-Dph_dv*0.6e12+mean(Jz_f_1+Jz_f_2)*1.15;
plot(x0/1e-6,Jy_f_1+Jy_f_2,x0/1e-6,Jz_f_1+Jz_f_2,x0/1e-6,dvydx)
axis([10,70,4.5e12,9.5e12])
title('Oscillation current')
legend('J_y','J_z','dv_{y0}')

subplot(3,1,3)
dvydx2=-Dph_dv*0.06;
plot(x0/1e-6,vy2,x0/1e-6,vx_0,x0/1e-6,dvydx2)
axis([10,70,-0.3,0.4])
title('Drifting velocity')
legend('v_{y0}','v_{x0}','dv_{y0}')


%{
clf
+[M函数](,分布包络)
%}
## end
#1121, 893:
%{
+[M函数](,分布包络)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

% plot(x0/1e-6,Jy,x0/1e-6,-Jz)
% plot(x0/1e-6,Ey,x0/1e-6,Ey_f)

% plot(x0/1e-6,-Jz,x0/1e-6,Jz_f_1,x0/1e-6,-Jz_f_2)
% plot(x0/1e-6,Jy,x0/1e-6,Jy_f_1,x0/1e-6,-Jy_f_2)

% plot(x0/1e-6,-Ez,x0/1e-6,Ez_f_1,x0/1e-6,-Ez_f_2)
plot(x0/1e-6,Ey,x0/1e-6,Ey_f_1,x0/1e-6,-Ey_f_2)



%{
+[M函数](,分布包络)
%}
## end
#1123, 1126:
%{
+[M函数](,分布包络)

初步:...
等效质量:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

subplot(3,1,1)
plot(x0/1e-6,my,x0/1e-6,mz)
axis([10,70,0.85,1.15])
title('Mass')
legend('m_y','m_z')

subplot(3,1,2)
plot(x0/1e-6,Jy_f_1+Jy_f_2,x0/1e-6,Jz_f_1+Jz_f_2)
axis([10,70,4.5e12,9.5e12])
title('Current')
legend('J_y','J_z')

subplot(3,1,3)
plot(x0/1e-6,Ey_f_1+Ey_f_2,x0/1e-6,Ez_f_1+Ez_f_2)
axis([10,70,4e10,6e10])
title('E field')
legend('E_y','E_z')


%{
+[M函数](,分布包络)
%}
## end
#1125, 1865:
%{
+[M函数](,分布包络)

初步:...
等效质量:...
对比相位差:...
+[新建阅读窗口](,等效质量)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

A_y=(Jy_f_1+Jy_f_2)./(Ey_f_1+Ey_f_2);
A_z=(Jz_f_1+Jz_f_2)./(Ez_f_1+Ez_f_2);
n_y=sqrt(1-A_y./omega_0/epsilon_0);
n_z=sqrt(1-A_z./omega_0/epsilon_0);

Dphi_j=(n_y-n_z)*70e-6*2*pi/lm_0;


[Ey_phase,Ey_x]=spatial_phase(Ey);
[Ez_phase,Ez_x]=spatial_phase(Ez);
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

Dph_dJ=-[0,diff(Jy2)];
Dph_dJ=Dph_dJ/max(Dph_dJ)*150;

Dph_dv=[0,diff(vy2)];
Dph_dv=Dph_dv/max(Dph_dv)*150;



% plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dJ,x0/1e-6,Dph_dv)
% axis([10,70,-7,10])

subplot(3,1,1)
plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dv)
axis([10,70,-7,10])
title('Phase difference')

subplot(3,1,2)
dvydx=-Dph_dv*0.6e12+mean(Jz_f_1+Jz_f_2)*1.15;
plot(x0/1e-6,Jy_f_1+Jy_f_2,x0/1e-6,Jz_f_1+Jz_f_2,x0/1e-6,dvydx)
axis([10,70,4.5e12,9.5e12])
title('Oscillation current')
legend('J_y','J_z','dv_{y0}')

subplot(3,1,3)
dvydx2=-Dph_dv*0.06;
plot(x0/1e-6,vy2,x0/1e-6,vx_0,x0/1e-6,dvydx2)
axis([10,70,-0.3,0.4])
title('Drifting velocity')
legend('v_{y0}','v_{x0}','dv_{y0}')


%{
clf
+[M函数](,分布包络)
%}
## end
#1127, 2491:
%{
+[M函数](,获取数据2)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,获取数据2)
%}
tis=0:400:16000;
% i0=45;
i1=44;
i2=46;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0_2d=Ez_0(i1:i2,:);
Ez_1_2d=Ez_1(i1:i2,:);
Ez_2d=Ez_1_2d-Ez_0_2d;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0_2d=Ey_0(i1:i2,:);
Ey_1_2d=Ey_1(i1:i2,:);
Ey_2d=Ey_1_2d-Ey_0_2d;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0_2d=Jz_0(i1:i2,:);
Jz_1_2d=Jz_1(i1:i2,:);
Jz_2d=Jz_1_2d-Jz_0_2d;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0_2d=Jy_0(i1:i2,:);
Jy_1_2d=Jy_1(i1:i2,:);
Jy_2d=Jy_1_2d-Jy_0_2d;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx_0_2d=Jx_0(i1:i2,:);
Jx_1_2d=Jx_1(i1:i2,:);
Jx_2d=Jx_1_2d-Jx_0_2d;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0_2d=Rho_0(i1:i2,:);
Rho_1_2d=Rho_1(i1:i2,:);
DRho_2d=Rho_1_2d-Rho_0_2d;

vx_0_2d=Jx_0_2d./Rho_0_2d/e/c;
vy_0_2d=Jy_0_2d./Rho_0_2d/e/c;
vz_0_2d=Jz_0_2d./Rho_0_2d/e/c;

Fn=fft(DRho_2d')';
Fn(:,500:end-500)=0;
DRho2_2d=real(ifft(Fn'))';
Fn=fft(Jy_0_2d')';
Fn(:,500:end-500)=0;
Jy2_2d=real(ifft(Fn'))';
Fy=fft(vy_0_2d')';
Fy(:,500:end-500)=0;
vy2_2d=real(ifft(Fy'))';


Dvy_2d=Jy_0_2d./Rho_0_2d-Jy_1_2d./Rho_1_2d;
Dvz_2d=Jz_0_2d./Rho_0_2d-Jz_1_2d./Rho_1_2d;

% x0=(1:length(Rho_0))*dx;

% Dx=7.036e-5-6.991e-5;



%{

[~,~,Dvy_f]=carrier_envelop_probe(x0,Dvy,1e-13);
[~,~,Dvz_f]=carrier_envelop_probe(x0,-Dvz,1e-13);
%[x1,y1,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ey_f]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f]=carrier_envelop_probe(x0,-Ez,1e-13);


Dv=Dvy_f-Dvz_f;
my=e^2*Ey_f./Dvy_f/omega_0/m_e;
mz=e^2*Ez_f./Dvz_f/omega_0/m_e;



+[M函数](,获取数据2)
%}
## end
#1130, 2361:
%{
+[M函数](,流场分析2)

获取数据:...
计算质量:...
分布包络:...
+[M函数](,获取数据)
+[新建阅读窗口](,获取数据)
+[新建阅读窗口](,分布包络)

获取数据2:...
+[M函数](,获取数据2)
将'获取数据2'的"i0"替换为"i1:i2"
+[新建阅读窗口](,获取数据2)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

A_y=(Jy_f_1+Jy_f_2)./(Ey_f_1+Ey_f_2);
A_z=(Jz_f_1+Jz_f_2)./(Ez_f_1+Ez_f_2);
n_y=sqrt(1-A_y./omega_0/epsilon_0);
n_z=sqrt(1-A_z./omega_0/epsilon_0);

Dphi_j=(n_y-n_z)*70e-6*2*pi/lm_0;


[Ey_phase,Ey_x]=spatial_phase(Ey);
[Ez_phase,Ez_x]=spatial_phase(Ez);
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

Dph_dJ=-[0,diff(Jy2)];
Dph_dJ=Dph_dJ/max(Dph_dJ)*150;

Dph_dv=[0,diff(vy2)];
Dph_dv=Dph_dv/max(Dph_dv)*150;



% plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dJ,x0/1e-6,Dph_dv)
% axis([10,70,-7,10])

subplot(3,1,1)
dvydy=(vy2_2d(1,:)-vy2_2d(3,:))/2*3e2;
In=-(Rho_0/min(Rho_0)-0.73)*18;
plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dv,x0/1e-6,In)
axis([10,70,-7,10])
title('Phase difference')

subplot(3,1,2)
baseline0=mean(Jz_f_1+Jz_f_2)*1.15;
dvydx=-Dph_dv*0.6e12+baseline0;
dvydy=-(vy2_2d(1,:)-vy2_2d(3,:))/2*1.2e14+baseline0;
dJydy=-(Jy2_2d(1,:)-Jy2_2d(3,:))/2*1.2e14+baseline0;
plot(x0/1e-6,Jy_f_1+Jy_f_2,x0/1e-6,Jz_f_1+Jz_f_2,x0/1e-6,dvydx,x0/1e-6,dvydy)
axis([10,70,4.5e12,9.5e12])
title('Oscillation current')
legend('J_y','J_z','dv_{y0}')

subplot(3,1,3)
dvydx2=-Dph_dv*0.06;
plot(x0/1e-6,vy2,x0/1e-6,vx_0,x0/1e-6,dvydx2)
axis([10,70,-0.3,0.4])
title('Drifting velocity')
legend('v_{y0}','v_{x0}','dv_{y0}')




%{
plot(Jy_0')
plot(vy_0')
plot(x0/1e-6,vy2_2d(1,:)'-vy2_2d(2,:)')
plot(x0/1e-6,Jy2_2d(1,:)'-Jy2_2d(2,:)')
plot(x0/1e-6,Jx,x0/1e-6,Jy)
plot(x0/1e-6,Jx,x0/1e-6,Jy)
plot(Rho_1)

+[M函数](,流场分析2)
%}
## end
#1132, 1512:
%{
+[M函数](,对比相位差0)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;


[~,~,Jy_f_1]=carrier_envelop_probe(x0,Jy,1e-13);
[~,~,Jz_f_1]=carrier_envelop_probe(x0,-Jz,1e-13);
[~,~,Jy_f_2]=carrier_envelop_probe(x0,-Jy,1e-13);
[~,~,Jz_f_2]=carrier_envelop_probe(x0,Jz,1e-13);

[~,~,Ey_f_1]=carrier_envelop_probe(x0,Ey,1e-13);
[~,~,Ez_f_1]=carrier_envelop_probe(x0,-Ez,1e-13);
[~,~,Ey_f_2]=carrier_envelop_probe(x0,-Ey,1e-13);
[~,~,Ez_f_2]=carrier_envelop_probe(x0,Ez,1e-13);

my=-e^2*(Ey_f_1+Ey_f_2)./(Jy_f_1+Jy_f_2)/omega_0/m_e.*Rho_0;
mz=-e^2*(Ez_f_1+Ez_f_2)./(Jz_f_1+Jz_f_2)/omega_0/m_e.*Rho_0;

A_y=(Jy_f_1+Jy_f_2)./(Ey_f_1+Ey_f_2);
A_z=(Jz_f_1+Jz_f_2)./(Ez_f_1+Ez_f_2);
n_y=sqrt(1-A_y./omega_0/epsilon_0);
n_z=sqrt(1-A_z./omega_0/epsilon_0);

Dphi_j=(n_y-n_z)*70e-6*2*pi/lm_0;


[Ey_phase,Ey_x]=spatial_phase(Ey);
[Ez_phase,Ez_x]=spatial_phase(Ez);
Dph=sin(Ey_phase-Ez_phase)';
Dangle=asind(Dph);

Dph_dJ=-[0,diff(Jy2)];
Dph_dJ=Dph_dJ/max(Dph_dJ)*150;

% Dph_dv=[0,diff(vy2)];
Dph_dv=[0,diff(vy2)];
Dph_dv=Dph_dv/max(Dph_dv)*150;



% plot(x0/1e-6,Dphi_j/pi*180,x0/1e-6,Dangle,x0/1e-6,Dph_dJ,x0/1e-6,Dph_dv)
% axis([10,70,-7,10])

x1_t=68+x0/1e-6;
plot(x1_t,Dangle,x1_t,Dph_dv)
axis([78,138,-7,10])
title('Phase difference')
ylabel('[a.u.]')
xlabel('x [um]')
legend('Phase difference','dv_y/dx')


%{
clf
+[M函数](,对比相位差0)
%}
## end
#1135, 694:
%{
+[M函数](,单位换算)
参考::https://smileipic.github.io/Smilei/Understand/units.html
+[打开网页](,参考)

Nini, 打开PIConGPU(文件)
%}

physics_constant;

lm_0=1800e-9;
omega_r0=2*pi/lm_0;

T_r0=1/omega_r0;
L_r0=c/omega_r0;
% E_r0=m_e*c*omega_r0/e;
% B_r0=m_e*omega_r0/e;
N_r0=epsilon_0*m_e*omega_r0^2/e^2;
% J_r0=c*e*N_r0;


n_0=1e25;
W_0=600e-6;
H_0=80e-6;
dx_0=1.e-8;
dy_0=10.e-7;
dt_0=1.39e-16;
w_0=20e-6;
Dtau_0=12e-15;



lm_1=800e-9;
omega_r1=2*pi/lm_1;

T_r1=1/omega_r1;
L_r1=c/omega_r1;
N_r1=epsilon_0*m_e*omega_r1^2/e^2;


n_1=n_0*N_r1/N_r0

W_1=W_0*L_r1/L_r0
H_1=H_0*L_r1/L_r0
dx_1=dx_0*L_r1/L_r0
dy_1=dy_0*L_r1/L_r0
w_1=w_0*L_r1/L_r0

dt_1=dt_0*T_r1/T_r0
Dtau_1=Dtau_0*T_r1/T_r0



%{
+[M函数](,单位换算)
%}
## end
#1137, 457:
保存:...

p::
p是子进程"ssh xtcheng@stampede2.tacc.utexas.edu"
在p中, 运行指令"ls"

在p中, 运行指令"cd $WORK/Smilei/Smilei;ls"
在p中, 运行指令"source $WORK/Smilei/Smilei/smilei_para.sh"

在p中, 运行指令"rm -rf $WORK/sim_folder;mkdir $WORK/sim_folder"

在p中, 运行指令"cd $WORK/sim_folder;ls"
在p中, 运行指令"cd $WORK/sim_folder/FDH_1800_a0_1_0;ls"
在p中, 运行指令"$WORK/Smilei/Smilei/smilei_test run.py"

在p中, 运行指令"dos2unix myscript.txt"
在p中, 运行指令"date;sbatch myscript.txt"
在p中, 运行指令"squeue -u xtcheng"



## end
#1142, 76:
运行指令"nautilus /media/xiantao/Elements/LWFA/FDH/Smilei"

扫描波长:...
扫描密度:...



## end
#1144, 376:
%{
+[M函数](,扫描波长)

获取数据:...
在选择区域中, 将'获取数据'的"E"替换为"B"
+[新建阅读窗口](,获取数据)

查看分布:...
对比分布:...
+[新建阅读窗口](,查看分布)
+[新建阅读窗口](,对比分布)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');


ph_z=field_spatial_phase(Ez);
ph_y=field_spatial_phase(Ey);

Dph0=sin(ph_z-ph_y);
Dph=Dph0(20:60,100:6000);

figure
surf(Dph)
shading interp
view([0,90])
pause(0.1)
colorbar


%{
+[M函数](,扫描波长)
%}
## end
#1146, 2816:
%{
+[M函数](,获取数据)

基本数据:...
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=1200e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_pb_800/Fields0.h5";

%{
+[M函数](,获取数据)
%}

tis=0:500:16000;
i0=45;
i=25;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ex';
[x,y,Ex_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ex_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ex=Ex_1-Ex_0;

field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey=Ey_1-Ey_0;

field='Bx';
[x,y,Bx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Bx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Bx=Bx_1-Bx_0;

field='Bz';
[x,y,Bz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Bz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Bz=Bz_1-Bz_0;

field='By';
[x,y,By_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,By_1,info]=read_data_Smilei_h5(filename_1,ti,field);
By=By_1-By_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
DRho=Rho_1-Rho_0;

Rho_0(isnan(Rho_0))=-1;
Rho_0(abs(Rho_0)<1e-5)=-1;

vx_0=Jx_0./Rho_0/e;
vy_0=Jy_0./Rho_0/e;
vz_0=Jz_0./Rho_0/e;

% vx_0(isnan(vx_0))=0;
% vy_0(isnan(vy_0))=0;
% vz_0(isnan(vz_0))=0;

Fn=fft(vy_0')';
Fn(:,500:end-500)=0;
vy_2=real(ifft(Fn'))';

Fn=fft(vx_0')';
Fn(:,500:end-500)=0;
vx_2=real(ifft(Fn'))';

Fn=fft(Jx')';
Fn(:,500:end-500)=0;
Jx_2=real(ifft(Fn'))';

Fn=fft(Jy')';
Fn(:,500:end-500)=0;
Jy_2=real(ifft(Fn'))';

Fn=fft(Jz')';
Fn(:,500:end-500)=0;
Jz_2=real(ifft(Fn'))';

Fn=fft(DRho')';
Fn(:,500:end-500)=0;
DRho_2=real(ifft(Fn'))';

Fn=fft(Rho_0')';
Fn(:,500:end-500)=0;
Rho_2=real(ifft(Fn'))';


dvxdy=diff(vx_2)/dy;
dvxdy(end+1,:)=0;
dvydy=diff(vy_0)/dy;
dvydy(end+1,:)=0;

dvydx=diff(vy_0')'/dx;
dvydx(:,end+1)=0;
dvxdx=diff(vx_2')'/dx;
dvxdx(:,end+1)=0;


x0=(1:size(Rho_0,2))*dx;


%{
size(dvydx)
size(dvxdy)
+[打开文件夹]"Matlab/fft"
+[M函数](,获取数据)
%}
## end
#1148, 910:
%{
+[M函数](,对比分布)

简单关系(html):...
+[新建阅读窗口](,简单关系)

二维分布:...
一维相位:...
+[M函数](,二维分布)
+[新建阅读窗口](,一维相位)

比较相位和jx:...
jx和jy:(用梯度关联起来的)...

jx和Ey:...
(这个结果很有意思, 电流和电场都在这里面)

jx和drho:...
+[新建阅读窗口](,比较相位和jx)
+[新建阅读窗口](,jx和drho)

多普勒效应:...
测试梯度效应:...
+[新建阅读窗口](,多普勒效应)
在选择区域中, 将'多普勒效应'的"E"替换为"j"



保存:...
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=400e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,对比分布)
%}
i=51;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);

rho_i=Rho_0(i,:);
drho_i=DRho(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy(i,:);

jx_t=-(vy_i/c.*n_e.*e^2)./(m_e*omega_0*gamma_i).*Ey_i;


plot(x0,drho_i*e,x0,jx_i/c)




%{
size(DRho)
plot(x0,Ex_i)
hold on
+[M函数](,对比分布)
%}
## end
#1150, 304:
%{
+[M函数](,对比分布)

二维分布:...
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');


ph_z=field_spatial_phase(Ez);
ph_y=field_spatial_phase(Ey);

Dph0=sin(ph_z-ph_y);
% Dph=Dph0(20:60,100:6000);
Dph=Dph0(:,100:6000);

figure
surf(Dph)
shading interp
view([0,90])
pause(0.1)
colorbar


%{
+[M函数](,二维分布)
%}
## end
#1152, 1545:
%{
+[M函数](,获取数据)

基本数据:...
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_1_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_1_pb_800/Fields0.h5";

%{
+[M函数](,获取数据)
%}
tis=0:400:16000;
i0=45;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ex';
[x,y,Ex_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ex_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ex=Ex_1-Ex_0;

field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey=Ey_1-Ey_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
DRho=Rho_1-Rho_0;




%{
+[打开文件夹]"Matlab/fft"
+[M函数](,获取数据)
%}
## end
#1154, 302:
%{
+[M函数](,查看分布)

二维分布:...
gamma分布:...
%}


i=51;

Fn=fft(Jx')';
Fn(:,500:end-500)=0;
Jx_2=real(ifft(Fn'))';

Fn=fft(DRho')';
Fn(:,500:end-500)=0;
DRho_2=real(ifft(Fn'))';

% plot(x0,Ex(i,:),x0,Ey(i,:))
% plot(x0,Jx_2(i,:),x0,Jy(i,:))
% plot(x0,Jx_2(i,:))
plot(x0,DRho_2(i,:))


%{
clf
+[M函数](,查看分布)
%}
## end
#1158, 521:
%{
+[M函数](,二维分布)
figure
相位分布:...
%}

ph_z=field_spatial_phase(Ez(10:70,100:6000));
ph_y=field_spatial_phase(Ey(10:70,100:6000));
Dph_2D=sin(ph_z-ph_y);

dRhody=[diff(Rho_0);zeros(1,size(Rho_0,2))];
dRhodx=[diff(Rho_0')',zeros(size(Rho_0,1),1)];

% surf(Jx_2(10:70,100:6000))
% surf(Rho_0(10:70,1000:6000))
surf(dRhody(10:70,1000:6000))
% surf(-dvxdx(10:70,1000:6000))
surf(-dvxdy(10:70,100:6000))
% surf(-vy_0(10:70,100:6000))
% surf(Dph_2D)
% surf(Ey)
shading interp
view([0,90])


%{
size(dvydx)
figure
+[M函数](,二维分布)
%}
## end
#1160, 805:
%{
+[M函数](,一维相位)

相位:...
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

i=51;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph=sin(ph_z-ph_y);

dRhody_i=dRhody(i,:);
dRhody_i=dRhody_i/max(dRhody_i)*0.08;
dRhodx_i=dRhodx(i,:);
dRhodx_i=dRhodx_i/max(dRhodx_i)*10.8;

dvxdy_i=dvxdy(i,:);
dvxdy_i=dvxdy_i/max(dvxdy_i)*0.05;
dvxdx_i=dvxdx(i,:);
dvxdx_i=dvxdx_i/max(dvxdx_i)*0.6;
dvydy_i=dvydy(i,:);
dvydy_i=dvydy_i/max(dvydy_i)*0.15;
dvydx_i=dvydx(i,:);
dvydx_i=dvydx_i/max(dvydx_i)*1.5;

% plot(x0/1e-6,Dph,x0/1e-6,dRhody_i)
% plot(x0/1e-6,Dph,x0/1e-6,dRhodx_i)
% plot(x0/1e-6,Dph,x0/1e-6,-dvxdy_i)
% plot(x0/1e-6,Dph,x0/1e-6,-dvxdx_i)
% plot(x0/1e-6,Dph,x0/1e-6,dvydy_i)
plot(x0/1e-6,Dph,x0/1e-6,-dvydx_i)
axis([5,70,-0.1,0.1])


%{
figure
hold on
size(Ez)
+[M函数](,一维相位)
%}
## end
#1162, 396:
<!--
+[H函数](,简单关系)
-->


%[1].
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].
%[8].
%[9].
%[10].

<h2>Laser field and current</h2>
%[11].
%[11.1].
(From plasma.ftxt)

<h2>Laser field EM force</h2>
%[12].
%[13].
%[14].
%[15].


<!--
[11.1].:
+[删除表达式](,[15.3].)
式(18)转换为"表达式"
将"j_y~\frac{n_e*q^2}{i*\omega*m}*E_y"记作为式(11.1)


记忆->思考(记忆,简单关系)->+[显示星图](,思考)
的([17].,表达式)->+[显示星图](,表达式)
更新式(15)
+[H函数](,简单关系)
-->
## end
#1164, 312:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\vec{p_{0}} \left(\vec{\nabla}\cdot \vec{j_{1}}\right)+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{p_{0}}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#1165, 208:
\p{t}{\mat{M}*\vec{j_1}}+\vec{p_0}*(\vec{\nabla}\cdot \vec{j_1})+(\vec{j_1}\cdot \vec{\nabla})*\vec{p_0}+(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\mat{M}*\vec{j_1}=\vec{F}
## end
#1169, 249:
\frac{\partial}{\partial t}\left(m j_{x}\right)+p_{x} \left(-\frac{\partial \rho}{\partial t}\right)+\left(\vec{j}\cdot \vec{\nabla}\right) p_{x}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) m j_{x}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) m j_{x}=0
## end
#1171, 254:
\frac{\partial}{\partial t}\left(m j_{x}\right)+p_{x} \left(\frac{\partial j_{x}}{\partial x}\right)+\left(\vec{j}\cdot \vec{\nabla}\right) p_{x}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) m j_{x}+\left(v_{x} \frac{\partial }{\partial x}\right) m j_{x}=0
## end
#1173, 201:
\frac{\partial}{\partial t}\left(m j_{x}\right)+2 v_{x} \frac{\partial}{\partial x}\left(m j_{x}\right)+\left(\vec{j}\cdot \vec{\nabla}\right) p_{x}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) m j_{x}=0
## end
#1175, 171:
\frac{\partial j_{x}}{\partial t}+2 v_{x} \frac{\partial j_{x}}{\partial x}+\left(\vec{j}\cdot \vec{\nabla}\right) v_{x}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) j_{x}=0
## end
#1176, 137:
\p{t}{m*j_x}+p_x*(-\p{t}{\rho})+(\vec{j}\cdot \vec{\nabla})*p_x+(\vec{\nabla}\cdot \vec{v_0})*m*j_x+(\vec{v_0}\cdot \vec{\nabla})*m*j_x=0
## end
#1179, 119:
\p{t}{m*j_x}+p_x*(\p{x}{j_x})+(\vec{j}\cdot \vec{\nabla})*p_x+(\vec{\nabla}\cdot \vec{v_0})*m*j_x+(v_x*\p{x}{})*m*j_x=0
## end
#1182, 101:
\p{t}{m*j_x}+2*v_x*\p{x}{m*j_x}+(\vec{j}\cdot \vec{\nabla})*p_x+(\vec{\nabla}\cdot \vec{v_0})*m*j_x=0
## end
#1185, 95:
\p{t}{j_x}+2*v_x*\p{x}{j_x}+(\vec{j}\cdot \vec{\nabla})*v_x+(\vec{\nabla}\cdot \vec{v_0})*j_x=0
## end
#1189, 253:
\frac{\partial j_{x}}{\partial t}+2 v_{x} \frac{\partial j_{x}}{\partial x}+\left(j_{x} \frac{\partial }{\partial x}+j_{y} \frac{\partial }{\partial y}\right) v_{x}+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right) j_{x}=0
## end
#1191, 219:
-i \omega j_{x}+2 v_{x} i k_{x} j_{x}+\left(j_{x} \frac{\partial v_{x}}{\partial x}+j_{y} \frac{\partial v_{x}}{\partial y}\right)+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right) j_{x}=0
## end
#1192, 87:
\p{t}{j_x}+2*v_x*\p{x}{j_x}+(j_x*\p{x}{}+j_y*\p{y}{})*v_x+(\p{x}{v_x}+\p{y}{v_y})*j_x=0
## end
#1195, 91:
-i*\omega*j_x+2*v_x*i*k_x*j_x+(j_x*\p{x}{v_x}+j_y*\p{y}{v_x})+(\p{x}{v_x}+\p{y}{v_y})*j_x=0
## end
#1199, 206:
-i \omega j_{x}+2 v_{x} i k_{x} j_{x}+\frac{\partial v_{x}}{\partial x} j_{x}+j_{y} \frac{\partial v_{x}}{\partial y}+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right) j_{x}=0
## end
#1200, 89:
-i*\omega*j_x+2*v_x*i*k_x*j_x+\p{x}{v_x}*j_x+j_y*\p{y}{v_x}+(\p{x}{v_x}+\p{y}{v_y})*j_x=0
## end
#1204, 3:
j_x
## end
#1205, 201:
j_{y} \frac{\partial v_{x}}{\partial y}+\left(-i \omega+2 v_{x} i k_{x}+\frac{\partial v_{x}}{\partial x}+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right)\right) j_{x}=0
## end
#1206, 79:
j_y*\p{y}{v_x}+(-i*\omega+2*v_x*i*k_x+\p{x}{v_x}+(\p{x}{v_x}+\p{y}{v_y}))*j_x=0
## end
#1210, 3:
j_x
## end
#1212, 163:
j_{x}=-\frac{\frac{\partial v_{x}}{\partial y}}{-i \omega+2 v_{x} i k_{x}+\left(2 \frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right)} j_{y}
## end
#1213, 75:
j_x=-\frac{\p{y}{v_x}}{-i*\omega+2*v_x*i*k_x+(2*\p{x}{v_x}+\p{y}{v_y})}*j_y
## end
#1217, 571:
%{
+[M函数](,对比分布)

简单关系(html):...
+[新建阅读窗口](,简单关系)

二维分布:...
一维相位:...
+[M函数](,二维分布)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

i=51;
ph_z=field_spatial_phase(Ez(i,100:6000));
ph_y=field_spatial_phase(Ey(i,100:6000));

Dph=sin(ph_z-ph_y);
% ex=Ex(i,100:6000);
x=x0(100:6000);
dvydx=-diff(vy_0(i,100:6000));
jx_2=Jx_2(i,100:6000);
rho_2=DRho_2(i,100:6000);

plot(x,Dph)
% plot(x,Dph,x,ex/max(ex)*0.04)
% plot(x,Dph,x,-jx_2/max(jx_2)*0.1)
plot(x,Dph,x,-rho_2/max(rho_2)*0.4)


%{
clf
hold on
plot(x(2:end),dvydx*300)
plot(x0,Jx_2(i,:))
size(Ez)
+[M函数](,对比分布)
%}
## end
#1219, 492:
%{
+[M函数](,比较相位和jx)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

i=51;
ph_z=field_spatial_phase(Ez(i,100:6000));
ph_y=field_spatial_phase(Ey(i,100:6000));

Dph=sin(ph_z-ph_y);
% ex=Ex(i,100:6000);
x=x0(100:6000);
dvydx_i=-diff(vy_0(i,99:6000));
jx_2=Jx_2(i,100:6000);
rho_2=DRho_2(i,100:6000);

% plot(x,Dph,x,dvydx_i/max(dvydx_i)*0.07)
plot(x,Dph)




%{
A=[0.04597,0.02753,0.0122]
A/A(3)

legend('800 nm','1200 nm','400 nm')
hold on
clf
草稿:...
+[新建阅读窗口](,草稿)
+[M函数](,比较相位和jx)
%}
## end
#1221, 579:
%{
+[M函数](,对比分布)

简单关系(html):...
+[新建阅读窗口](,简单关系)

二维分布:...
一维相位:...
+[M函数](,二维分布)

比较相位和jx:...
jx和jy:...

保存:...
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=1200e-9;
omega_0=2*pi*c/lm_0;

%{
+[M函数](,对比分布)
%}
i=51;

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
vx_i=vx_2(i,:);

rho_i=Rho_0(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy(i,:);

% plot(x0,dvxdx_i,x0,dvydy_i,x0,dvxdy_i)
% plot(x0,(-c+2*vx_i)/c*omega_0)
% plot(x0,(-c+2*vx_i)/c*omega_0+2*dvxdx_i+dvydy_i)
% plot(x0,dvxdy_i/omega_0)
plot(x0,jx_i,x0,jy_i.*dvxdy_i/omega_0*100)




%{
+[M函数](,对比分布)
%}
## end
#1223, 265:
%{
+[M函数](,二维分布)
%}


gamma_xy=sqrt(1-(vx_2.^2*0+vy_0.^2)/c^2);
% gamma_xy=vy_0;

surf(gamma_xy(10:70,100:6000))
% surf(Jx_2(10:70,100:6000))
% surf(DRho_2(10:70,100:6000))
% surf(dvydy(10:70,100:6000))
% surf(DRho)
shading interp
view([0,90])


%{
+[M函数](,二维分布)
%}
## end
#1225, 56:
j_{x}\approx -\frac{\beta n_{e} q^{2}}{i \omega m} E_{y}
## end
#1226, 41:
j_x~-\frac{\beta*n_e*q^2}{i*\omega*m}*E_y
## end
#1230, 874:
%{
+[M函数](,jx和Ey)

jy和Ey:...
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,jx和Ey)
%}

i=51;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);

rho_i=Rho_0(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy(i,:);

jx_t=-(vy_i/c.*n_e.*e^2)./(m_e*omega_0*gamma_i).*Ey_i;

% figure
% plot(x0,Dph_i,x0,-dvxdy_i/max(dvxdy_i)*0.1,x0,-jx_i/max(jx_i)*0.3)
% plot(x0,Dph_i,x0,-dvxdy_i/max(dvxdy_i)*0.1,x0,-dvxdx_i/max(dvxdy_i)*0.1,...
%     x0,-dvydy_i/max(dvxdy_i)*0.1,x0,-dvydx_i/max(dvxdy_i)*0.1)

% plot(x0,Dph_i,x0,-jx_i/max(jx_i)*0.3)
plot(x0,jx_i,x0,jx_t)
% axis([0,60e-6,-0.2,0.2])


%{
+[M函数](,jx和Ey)
%}
## end
#1232, 633:
%{
+[M函数](,jx和drho)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=1200e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,对比分布)
%}
i=51;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);

rho_i=Rho_0(i,:);
drho_i=DRho(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy(i,:);
jx_t=-(vy_i/c.*n_e.*e^2)./(m_e*omega_0*gamma_i).*Ey_i;


plot(x0,drho_i*e,x0,jx_i/c)




%{
size(DRho)
plot(x0,Ex_i)
hold on
+[M函数](,对比分布)
%}
## end
#1234, 52:
\vec{F}=q \left(\vec{E}+\vec{v}\times \vec{B}\right)
## end
#1236, 36:
\vec{k}\times \vec{E}=\omega \vec{B}
## end
#1238, 86:
\vec{F}=q \left(\vec{E}+\vec{v}\times \left(\vec{k}\times \vec{E}\right)/\omega\right)
## end
#1240, 109:
\vec{F}=q \begin{pmatrix}
n \beta_{y} E_{y},&E_{y}-n \beta_{x} E_{y},&E_{z}-n \beta_{x} E_{z}
\end{pmatrix}


## end
#1241, 41:
\vec{F}=q*(\vec{E}+\vec{v}\times \vec{B})
## end
#1244, 36:
\vec{k}\times \vec{E}=\omega*\vec{B}
## end
#1247, 64:
\vec{F}=q*(\vec{E}+\vec{v}\times (\vec{k}\times \vec{E})/\omega)
## end
#1250, 67:
\vec{F}=q*\vec{n*\beta_y*E_y, E_y-n*\beta_x*E_y, E_z-n*\beta_x*E_z}
## end
#1253, 11:
\vec{1,0,0}
## end
#1254, 15:
\vec{0,E_y,E_z}
## end
#1255, 23:
\vec{\beta_x,\beta_y,0}
## end
#1256, 1:
F
## end
#1257, 1:
F
## end
#1258, 1:
F
## end
#1259, 1:
F
## end
#1260, 1:
F
## end
#1261, 1:
F
## end
#1262, 1:
F
## end
#1264, 167:
<!--
+[H函数](,草稿)
-->


%[1].
%[2].
%[3].
%[4].



<!--
[5].:
将"\Delta \phi~A*\p{y}{v_x}=A*\p{x}{v_y}"记作为式(1)
将"\Delta \phi~B*\p{y}{v_x}/\omega"记作为式(2)

+[H函数](,草稿)
-->
## end
#1266, 90:
\Delta \phi\approx A \frac{\partial v_{x}}{\partial y}=A \frac{\partial v_{y}}{\partial x}
## end
#1268, 61:
\Delta \phi\approx B \frac{\partial v_{x}}{\partial y}/\omega
## end
#1276, 37:
\Delta \phi~A*\p{y}{v_x}=A*\p{x}{v_y}
## end
#1279, 31:
\Delta \phi~B*\p{y}{v_x}/\omega
## end
#1283, 6:
矩阵乘以系数
## end
#1285, 5:
思考下一步
## end
#1286, 1:
F
## end
#1293, 289:
%{
+[M函数](,二维分布)
%}

ph_z=field_spatial_phase(Ez(10:70,100:6000));
ph_y=field_spatial_phase(Ey(10:70,100:6000));
Dph_2D=sin(ph_z-ph_y);

% surf(Jx_2(10:70,100:6000))
surf(-dvxdy(10:70,100:6000))
% surf(Dph_2D)
% surf(Ey)
shading interp
view([0,90])


%{
size(dvydx)
figure
+[M函数](,二维分布)
%}
## end
#1295, 100:

分析数据:...
计算过程:...


有激光和plasma
激光经过plasma
激光的a0是"1"
plasma的密度是"1e25"

重新思考激光的腰宽
在'计算过程'中, 描述解题公式



## end
#1303, 1:
1
## end
#1305, 4:
1e25
## end
#1317, 2:
a0
## end
#1324, 2:
密度
## end
#1325, 3:
角频率
## end
#1329, 3:
角频率
## end
#1330, 2:
波数
## end
#1334, 2:
波数
## end
#1335, 2:
腰宽
## end
#1363, 299:
<!--
+[H函数](,计算过程)
-->

光学基本量: 
%[1].
等离子体频率: 
%[2].
LWFA匹配条件: 
%[3].

其中, \(a_1\), \(n_1\) 的数值是一开始给定的. 而, \(w_1\) 则是要求解的目标变量<br>
\(k_1\), \(\omega_1\), \(w_1\) 是需要被求解的中间变量

The result is,
%[4].



<!--
[4].:
式(1)转换为"表达式"
式(4)转换为"Matlab"
将式(3)记作为式(4)
将式(2)代入到式(4)

更新式(4)

验证公式:...
+[H函数](,计算过程)
-->
## end
#1367, 15:
k_1=\omega_1/c

## end
#1369, 18:
k_{1}=\omega_{1}/c
## end
#1372, 16:
physics_constant
## end
#1374, 47:
\omega_1=\sqrt{\frac{n_1*e^2}{m_e*\epsilon_0}}

## end
#1376, 56:
\omega_{1}=\sqrt{\frac{n_{1} e^{2}}{m_{e} \epsilon_{0}}}
## end
#1379, 16:
physics_constant
## end
#1381, 20:
w_1=2*\sqrt{a_1}/k_1
## end
#1383, 26:
w_{1}=2 \sqrt{a_{1}}/k_{1}
## end
#1386, 16:
physics_constant
## end
#1388, 3:
目标量
## end
#1401, 81:
w_{1}=2 \sqrt{a_{1}}/\left(\sqrt{\frac{n_{1} e^{2}}{m_{e} \epsilon_{0}}}/c\right)
## end
#1402, 60:
w_1=2*\sqrt{a_1}/(\sqrt{\frac{n_1*e^{2}}{m_e*\epsilon_0}}/c)
## end
#1405, 11:
\omega_1/c

## end
#1407, 3:
k_1
## end
#1409, 38:
\sqrt{\frac{n_1*e^2}{m_e*\epsilon_0}}

## end
#1411, 8:
\omega_1
## end
#1414, 134:
%{
+[M函数](,验证公式)
10e-6/sqrt(0.5)
%}

physics_constant;
a_1=1;
n_1=2e25;

w_1=2.*sqrt(a_1)./(sqrt((n_1.*e.^2)./(m_e.*epsilon_0))./c)



## end
#1417, 376:
%{
+[M函数](,分析数据)

获取数据:...
在选择区域中, 将'获取数据'的"E"替换为"B"
+[新建阅读窗口](,获取数据)

查看分布:...
对比分布:...
+[新建阅读窗口](,查看分布)
+[新建阅读窗口](,对比分布)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');


ph_z=field_spatial_phase(Ez);
ph_y=field_spatial_phase(Ey);

Dph0=sin(ph_z-ph_y);
Dph=Dph0(20:60,100:6000);

figure
surf(Dph)
shading interp
view([0,90])
pause(0.1)
colorbar


%{
+[M函数](,扫描波长)
%}
## end
#1419, 2626:
%{
+[M函数](,获取数据)

基本数据:...
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=800e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_0_n_2e25/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_1_n_2e25/Fields0.h5";

%{
figure
+[M函数](,获取数据)
%}

tis=0:500:16000;
i0=45;
i=25;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ex';
[x,y,Ex_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ex_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ex=Ex_1-Ex_0;

field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez=Ez_1-Ez_0;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey=Ey_1-Ey_0;

field='Bx';
[x,y,Bx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Bx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Bx=Bx_1-Bx_0;

field='Bz';
[x,y,Bz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Bz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Bz=Bz_1-Bz_0;

field='By';
[x,y,By_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,By_1,info]=read_data_Smilei_h5(filename_1,ti,field);
By=By_1-By_0;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz=Jz_1-Jz_0;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy=Jy_1-Jy_0;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx=Jx_1-Jx_0;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
DRho=Rho_1-Rho_0;

Rho_0(isnan(Rho_0))=-1;
Rho_0(abs(Rho_0)<1e-5)=-1;

vx_0=Jx_0./Rho_0/e;
vy_0=Jy_0./Rho_0/e;
vz_0=Jz_0./Rho_0/e;

% vx_0(isnan(vx_0))=0;
% vy_0(isnan(vy_0))=0;
% vz_0(isnan(vz_0))=0;

Fn=fft(vy_0')';
Fn(:,500:end-500)=0;
vy_2=real(ifft(Fn'))';

Fn=fft(vx_0')';
Fn(:,500:end-500)=0;
vx_2=real(ifft(Fn'))';

Fn=fft(Jx')';
Fn(:,500:end-500)=0;
Jx_2=real(ifft(Fn'))';

Fn=fft(DRho')';
Fn(:,500:end-500)=0;
DRho_2=real(ifft(Fn'))';


dvxdy=diff(vx_2)/dy;
dvxdy(end+1,:)=0;
dvydy=diff(vy_2)/dy;
dvydy(end+1,:)=0;

dvydx=diff(vy_2')'/dx;
dvydx(:,end+1)=0;
dvxdx=diff(vx_2')'/dx;
dvxdx(:,end+1)=0;


x0=(1:size(Rho_0,2))*dx;


%{
size(dvydx)
size(dvxdy)
+[打开文件夹]"Matlab/fft"
+[M函数](,获取数据)
%}
## end
#1421, 358:
%{
+[M函数](,查看分布)
+[打开文件夹]"Matlab/FDH"

二维分布:...
%}

ph_z=field_spatial_phase(Ez(10:70,100:6000));
ph_y=field_spatial_phase(Ey(10:70,100:6000));
Dph_2D=sin(ph_z-ph_y);



subplot(2,1,1)
surf(-dvxdy(10:70,1200:6000))
shading interp
view([0,90])
colorbar

subplot(2,1,2)
surf(Dph_2D)
shading interp
view([0,90])
colorbar


%{
size(dvydx)
figure
+[M函数](,查看分布)
%}
## end
#1423, 299:
%{
+[M函数](,查看分布)

二维分布:...
%}

ph_z=field_spatial_phase(Ez(10:70,100:6000));
ph_y=field_spatial_phase(Ey(10:70,100:6000));
Dph_2D=sin(ph_z-ph_y);

% surf(Jx_2(10:70,100:6000))
surf(-dvxdy(10:70,100:6000))
% surf(Dph_2D)
% surf(Ez)
shading interp
view([0,90])


%{
size(dvydx)
figure
+[M函数](,二维分布)
%}
## end
#1425, 234:
%{
+[M函数](,一维相位)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

i=51;
ph_z=field_spatial_phase(Ez(i,100:6000));
ph_y=field_spatial_phase(Ey(i,100:6000));

Dph=sin(ph_z-ph_y);

plot(Dph)


%{
hold on
size(Ez)
+[M函数](,对比分布)
%}
## end
#1427, 2:
xy
## end
#1429, 3:
0.5
## end
#1430, 34:
-m --windowMovePoint 1.049273603  
## end
#1433, 34:
-m --windowMovePoint 1.049273603  
## end
#1437, 34:
-m --windowMovePoint 1.049273603  
## end
#1440, 34:
-m --windowMovePoint 1.049273603  
## end
#1443, 34:
-m --windowMovePoint 1.049273603  
## end
#1446, 34:
-m --windowMovePoint 1.049273603  
## end
#1449, 34:
-m --windowMovePoint 1.049273603  
## end
#1454, 49:
j_{y}\approx \frac{n_{e} q^{2}}{i \omega m} E_{y}
## end
#1455, 34:
j_y~\frac{n_e*q^2}{i*\omega*m}*E_y
## end
#1459, 749:
%{
+[M函数](,jy和Ey)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');

lm_0=800e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,jx和Ey)
%}

i=51;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);

rho_i=Rho_0(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);
Ez_i=Ez(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy(i,:);
jz_i=Jz(i,:);

jx_t=-(vy_i/c.*rho_i.*e^2)./(m_e*omega_0*gamma_i).*Ey_i;
jy_t=(rho_i.*e^2)./(m_e*omega_0*gamma_i).*Ey_i;
jz_t=(rho_i.*e^2)./(m_e*omega_0*gamma_i).*Ez_i;

% plot(x0,jx_i,x0,jx_t)
plot(x0,jy_i,x0,jy_t)
% plot(x0,jz_i,x0,jz_t)



%{
+[M函数](,jy和Ey)
%}
## end
#1461, 2315:
%{
+[M函数](,多普勒效应)
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_0=800e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,多普勒效应)
%}

i=41;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);

gamma_y_i=1./sqrt(1-(vx_i.^2)/c^2);
% gamma_y_i=1-(vy_i.^2)/c^2;
%{
plot(gamma_y_i)
plot(vy_i.^2/c^2)
axis([0,8000,-0.01,0.01])
plot(vx_i.^2/c^2)
axis([0,8000,-0.01,0.01])
+[M函数](,多普勒效应)
%}

rho_i=Rho_2(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);
Ez_i=Ez(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy_2(i,:);
jz_i=Jz_2(i,:);


[~,~,jx_i_p]=carrier_envelop_probe(x0,jx_i,1e-13);
[~,~,jx_i_n]=carrier_envelop_probe(x0,-jx_i,1e-13);
[~,~,jy_i_p]=carrier_envelop_probe(x0,jy_i,1e-13);
[~,~,jy_i_n]=carrier_envelop_probe(x0,-jy_i,1e-13);
[~,~,jz_i_p]=carrier_envelop_probe(x0,jz_i,1e-13);
[~,~,jz_i_n]=carrier_envelop_probe(x0,-jz_i,1e-13);

[~,~,Ex_i_p]=carrier_envelop_probe(x0,Ex_i,1e-13);
[~,~,Ex_i_n]=carrier_envelop_probe(x0,-Ex_i,1e-13);
[~,~,Ey_i_p]=carrier_envelop_probe(x0,Ey_i,1e-13);
[~,~,Ey_i_n]=carrier_envelop_probe(x0,-Ey_i,1e-13);
[~,~,Ez_i_p]=carrier_envelop_probe(x0,Ez_i,1e-13);
[~,~,Ez_i_n]=carrier_envelop_probe(x0,-Ez_i,1e-13);

jy_i_D=jy_i_p+jy_i_n;
jz_i_D=jz_i_p+jz_i_n;
Ey_i_D=Ey_i_p+Ey_i_n;
Ez_i_D=Ez_i_p+Ez_i_n;

dpp_ratio_y=-Ey_i_D./jy_i_D./omega_0/m_e*e^2.*rho_i./gamma_i;
dpp_ratio_z=-Ez_i_D./jz_i_D./omega_0/m_e*e^2.*rho_i./gamma_i;

% dpp_ratio_y=-Ey_i_D./jy_i_D./omega_0/m_e*e^2.*rho_i;
% dpp_ratio_z=-Ez_i_D./jz_i_D./omega_0/m_e*e^2.*rho_i;

% dpp_ratio_y=Ey_i_D./jy_i_D./omega_0/m_e*e^2.*n_e;
% dpp_ratio_z=Ez_i_D./jz_i_D./omega_0/m_e*e^2.*n_e;

% plot(x0,jy_i,x0,jy_i_p,x0,-jy_i_n)
% plot(x0,jz_i,x0,jz_i_p,x0,-jz_i_n)
% plot(x0,Ey_i,x0,Ey_i_p,x0,-Ey_i_n)
% plot(x0,Ez_i,x0,Ez_i_p,x0,-Ez_i_n)

% plot(x0/1e-6,dpp_ratio_y,x0/1e-6,dpp_ratio_z,x0/1e-6,1-[0,diff(vx_i)]/c*20)
% plot(x0/1e-6,dpp_ratio_y,x0/1e-6,dpp_ratio_z,x0/1e-6,gamma_i)
% plot(x0/1e-6,1-dpp_ratio_y+dpp_ratio_z,x0/1e-6,gamma_i,x0/1e-6,dpp_ratio_z)
plot(x0/1e-6,1-dpp_ratio_y+dpp_ratio_z,x0/1e-6,gamma_y_i,x0/1e-6,dpp_ratio_z)
% axis([0,100,0.8,1.2])


%{
+[M函数](,多普勒效应)
%}
## end
#1466, 1499:
%{
+[M函数](,直接分析h5)
clf
初次读取:...
显示动画:...
20221002:...
高分辨率:...
+[M函数](,显示动画)
+[新建阅读窗口](,20221002)

查看相位:...

保存:...

read_data_Smilei_h5(M函数):...
+[新建阅读窗口](,read_data_Smilei_h5)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_0_highTResolution_2/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/FDH_1800_a0_1_highTResolution_2/Fields0.h5";

% filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_0/Fields0.h5";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/scan_wavelength/FDH_1800_a0_1_pb_800/Fields0.h5";

%{
+[M函数](,直接分析h5)
25*400
%}

% tis=0:400:16000;
tis=0:500:16000;
% tis=13000;

for i=1:length(tis)
ti=tis(i);
field='Ez';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ez=data_0-data_1;

field='Ey';
[x,y,data_0]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,data_1]=read_data_Smilei_h5(filename_1,ti,field);
Ey=data_0-data_1;

% ph_z=field_spatial_phase(Ez);
% ph_y=field_spatial_phase(Ey);
% I=sin(ph_z-ph_y);

[Ey_phase,Ey_x]=spatial_phase(Ey');
[Ez_phase,Ez_x]=spatial_phase(Ez');
Dph=sin(Ey_phase-Ez_phase)';


% surf(Dph(100:300,100:7000)/1e-3)
% surf(Dph(20:60,100:7000)/1e-3)
surf(Dph/1e-3)
shading interp
view([0,90])
colorbar
caxis([-30,30])
pause(0.1)
end

%{
caxis([-30,30])
size(Dph)
colormap('default')
+[M函数](,直接分析h5)
%}
## end
#1468, 76:
/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_1_res_10_50/run.py
## end
#1470, 2529:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_1_res_10_50/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)
记住"Python"

"""
import numpy as np


dt = 0.06479534848028948
nx = 9984
Lx = 784.1415263360124
Ly = 628.3185307179587
npatch_x = 128

Main(
    geometry = "2Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(71508)*dt,

    cell_length  = [0.07853981633974483, 0.39269908169872414],
    grid_length = [Lx, Ly],

    number_of_patches = [npatch_x, 1],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)


MovingWindow(
    time_start = 706.3693377408199,
    velocity_x = 1.0
)


LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)


Species(
    name = "plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.,0.,0.],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserGaussian2D(
    box_side                = "xmin",
    a0                            = 1.0,
    omega                    = 0.4444444444444444,
    focus                       = [314.1592653589793, 314.1592653589793],
    waist                       = 78.53981633974483,
    polarization_phi  = 0.0,
    ellipticity               = 0.0,
    time_envelope     = tgaussian(start=0.0, duration=28.2547735096328*4., fwhm=28.2547735096328, center=28.2547735096328*2., order=2.0, )
)

# LaserGaussian2D(
#     box_side                = "xmin",
#     a0                            = 0.001,
#     omega                    = 1.0,
#     focus                       = [314.1592653589793, 314.1592653589793],
#     waist                       = 157.07963267948966,
#     polarization_phi  = 0.7853981633974484,
#     ellipticity               = 0.0,
#     time_envelope     = tconstant(),
# )




DiagFields(
    fields = [ 'Ey', 'Ez' ],
    every = 2000,
)




DiagPerformances(
    every = 50,
)



## end
#1472, 78:
/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_1_res_10_50/info.txt
## end
#1474, 853:
地址::/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_1_res_10_50
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out/FDH_1"
状态::
状态::上传
地址是什么
+[打开文件夹](,地址)

+[生成Smilei代码_结构](场景,)
保存代码:...
+[删除结构](,保存代码)->+[召唤星辰]"生成Smilei代码"(场景,保存代码)
+[新建阅读窗口](,保存代码)

参考波长::800e-9

有探测场
探测场的探测类型是"Ey,Ez"
探测场的探测间隔是"2000"

有模拟空间和窗口
模拟空间是长方形(600e-6,80e-6)
模拟空间的格点尺寸是"1.e-8,0.5e-7,0.5e-7"

窗口是长方形(100e-6,80e-6)
窗口的启动时间是"300e-15"
窗口的启动时间是"100e-15"
窗口的速度是"0.999"

有plasma
plasma的数密度是"1e25"

有probe
probe的a0是"0.001"
probe的波长是"800e-9"
probe的展宽是"inf"
probe的腰宽是"20e-6"
probe的偏振态是(1,1)
probe的焦点位置是A

A::
A在(40e-6,0e-6)

有pump
pump的a0是"1"
pump的波长是"1800e-9"
pump的展宽是"12e-15"
pump的腰宽是"10e-6"
pump的偏振态是(1,0)
pump的焦点位置是A


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[M函数](,模拟动画)
+[新建阅读窗口](,模拟动画)


+[显示PPT场景]"1"(,场景)
## end
#1476, 82:
/home/xiantao/Documents/sim_output/Smilei_out/FDH_1800_a0_1_res_10_50/myscript.txt
## end
#1478, 1553:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 20:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/smilei run.py



## end
#1481, 34:
-m --windowMovePoint 1.049273603  
## end
#1484, 34:
-m --windowMovePoint 1.049273603  
## end
#1487, 34:
-m --windowMovePoint 1.049273603  
## end
#1490, 34:
-m --windowMovePoint 1.049273603  
## end
#1493, 34:
-m --windowMovePoint 1.049273603  
## end
#1496, 1201:
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25
运行指令"nautilus /home/xiantao/Documents/sim_output"
运行指令"mkdir /home/xiantao/Documents/sim_output/FDH"
状态::
状态::上传

有什么

1.772e-07*64
80e-6/64

保存代码:...
+[删除结构](,保存代码)->+[召唤星辰]"生成PIConGPU代码"(场景,保存代码)
+[删除结构](,保存代码)
+[新建阅读窗口](,保存代码)


有探测场
探测场有什么
探测场的探测类型是"fields"
探测场的探测间隔是"500"
探测场的平面是"xy"
探测场的位置是"0.5"
+[删除结构](,探测场)


有png输出
png输出的探测类型是"png"
png输出的探测间隔是"100"
png输出的平面是"xy"
png输出的位置是"0.5"
+[删除结构](,png输出)

有模拟空间和窗口
模拟空间是长方形(600e-6,80e-6)
模拟空间的格点尺寸是"1.5e-8,10.772e-7,10.772e-7"
模拟空间的深度是"80e-6"
模拟空间的时间步长是"0.47e-16"

窗口是长方形(100e-6,80e-6)
窗口的启动时间是"350e-15"
窗口的速度是"1"


有plasma, pump
plasma的数密度是"1.5e25"
plasma的'上升沿'是"30e-6"
plasma的数密度是什么

pump有什么
(800 mJ, 40 fs/40 fs, 20 um)
pump的a0是"1."
pump的波长是"1800e-9"
pump的腰宽是"8.2e-6"
pump的展宽是"12e-15"
pump的偏振是(1,0)

有A
pump的焦点位置是A
A在(60e-6,0)

probe的a0是什么
有probe
probe有什么
probe的a0是"0"
probe的波长是"800e-9"
probe的腰宽是"20e-6"
probe的展宽是"200e-15"
probe的焦点位置是A
probe的偏振是(1,1)


pump的起始位置是"80e-6"
probe的起始位置是"100e-6"

计算probe的波包形状
计算pump的波包形状
计算probe的光谱



模拟动画:...
+[召唤星辰]"生成PIC一维动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(场景,模拟动画)->+[M函数](,模拟动画)
+[M函数](,模拟动画)
+[设置结构](,模拟动画)
+[删除结构](,模拟动画)


+[显示PPT场景]"2"(,场景)
## end
#1498, 1873:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testPIConGPU           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p gpu-a100          # Queue (partition) name
#SBATCH -N 4               # Total # of nodes (must be 1 for serial)
#SBATCH -n 4               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 01:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module load cuda/11.3
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $PICSRC
echo $LD_LIBRARY_PATH


ibrun ./bin/picongpu  -d 1 4 1  -g 74 6667 74 -s 42932   --periodic 0 0 0    -m --windowMovePoint 1.049273603       --openPMD.source fields_all  --openPMD.ext h5  --openPMD.period 500  --openPMD.file simData  --openPMD.range :,:,37        --e_macroParticlesCount.period 100    --versionOnce | tee ./output





## end
#1500, 3244:
/*. 
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/incidentField.param
*/


#pragma once

#include "picongpu/fields/incidentField/profiles/profiles.def"

namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            struct LwfaBaseParamspump_1
            {
                static constexpr float_64 WAVE_LENGTH_SI = 1.8e-06;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI
                    * ::picongpu::SI::ELECTRON_MASS_SI * ::picongpu::SI::SPEED_OF_LIGHT_SI
                    * ::picongpu::SI::SPEED_OF_LIGHT_SI / ::picongpu::SI::ELECTRON_CHARGE_SI;
                static constexpr float_64 _A0 = 1.0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = 1.2e-14;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 0.0;
                static constexpr float_64 DIRECTION_Y = 1.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = 4e-05; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = 6e-05;
                static constexpr float_64 FOCUS_POSITION_Z_SI = 3.98564e-05; // 96 cells
//                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr PolarisationType Polarisation = PolarisationType::Linear;
                static constexpr float_64 POLARISATION_DIRECTION_X = 1.0;
                static constexpr float_64 POLARISATION_DIRECTION_Y = 0.0;
                static constexpr float_64 POLARISATION_DIRECTION_Z = 0.0;
            };



            namespace LwfaGaussianBeampump_1
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParampump_1 : public LwfaBaseParamspump_1
            {
                static constexpr float_64 W0_SI = 8.2e-06 / 1.17741;
                static constexpr float_64 PULSE_INIT = 11.11880317327174;
                using LAGUERREMODES_t = LwfaGaussianBeampump_1::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeampump_1::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeampump_1::MODENUMBER;
            };



            using XMin = profiles::None;
            using XMax = profiles::None;
            using YMin = profiles::GaussianBeam<BeamParampump_1>;
            using YMax = profiles::None;
            using ZMin = profiles::None;
            using ZMax = profiles::None;

            constexpr int32_t POSITION[3][2] = {
                {16, -16}, // x direction [negative, positive]
                {16, -16}, // y direction [negative, positive]
                {8, -8} // z direction [negative, positive]
            };

        } // namespace incidentField
    } // namespace fields
} // namespace picongpu

## end
#1502, 1693:
/*
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/png.param
*/


#pragma once

#include <cmath>


namespace picongpu
{
    constexpr float_64 scale_image = 1.0;
    constexpr bool scale_to_cellsize = true;

    constexpr bool white_box_per_GPU = false;

    namespace visPreview
    {
#define EM_FIELD_SCALE_CHANNEL1 7
#define EM_FIELD_SCALE_CHANNEL2 -1
#define EM_FIELD_SCALE_CHANNEL3 -1

        constexpr float_64 customNormalizationSI[3] = {5.0e12 / SI::SPEED_OF_LIGHT_SI, 5.0e12, 15.0};

        // multiply highest undisturbed particle density with factor
        constexpr float_X preParticleDens_opacity = 0.25;
        constexpr float_X preChannel1_opacity = 1.0;
        constexpr float_X preChannel2_opacity = 1.0;
        constexpr float_X preChannel3_opacity = 1.0;

        // specify color scales for each channel
        namespace preParticleDensCol = colorScales::grayInv;
        namespace preChannel1Col = colorScales::green;
        namespace preChannel2Col = colorScales::none;
        namespace preChannel3Col = colorScales::none;

        DINLINE float_X preChannel1(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return field_E.x() * field_E.x();
        }

        DINLINE float_X preChannel2(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return field_E.y();
        }

        DINLINE float_X preChannel3(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return -1.0_X * field_E.y();
        }

        /** @} */
    } // namespace visPreview
} // namespace picongpu
## end
#1504, 416:
/* 
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/grid.param
*/

#pragma once

namespace picongpu
{
    namespace SI
    {
        constexpr float_64 DELTA_T_SI = 4.7e-17;
        constexpr float_64 CELL_WIDTH_SI = 1.0772e-06;
        constexpr float_64 CELL_HEIGHT_SI = 1.5e-08;
        constexpr float_64 CELL_DEPTH_SI = 1.0772e-06;
    } // namespace SI
} // namespace picongpu
## end
#1506, 1089:
/*
地址::/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/density.param
+[保存文本](,density)
*/

#pragma once

#include "picongpu/particles/densityProfiles/profiles.def"
#include <pmacc/preprocessor/struct.hpp>

namespace picongpu
{
    namespace SI
    {
#ifndef PARAM_BASE_DENSITY_SI
#    define PARAM_BASE_DENSITY_SI 1.5e25
#endif
        constexpr float_64 BASE_DENSITY_SI = PARAM_BASE_DENSITY_SI;
    } // namespace SI

    namespace densityProfiles
    {
        PMACC_STRUCT(
            GaussianParameter,
            (PMACC_C_VALUE(float_X, gasFactor, -1.0))(PMACC_C_VALUE(float_X, gasPower, 4.0))
            (PMACC_C_VALUE(uint32_t, vacuumCellsY, 50))
            (PMACC_C_VALUE(float_64, gasCenterLeft_SI, 30e-6*2))(PMACC_C_VALUE(float_64, gasCenterRight_SI, 0.0006-30e-6*2))
            (PMACC_C_VALUE(float_64, gasSigmaLeft_SI, 30e-6))(
                PMACC_C_VALUE(float_64, gasSigmaRight_SI, 30e-6))); /* struct GaussianParam */

        using Gaussian = GaussianImpl<GaussianParameter>;
    } // namespace densityProfiles
} // namespace picongpu


## end
#1508, 34:
-m --windowMovePoint 1.049273603  
## end
#1511, 91:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/density.param
## end
#1512, 88:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/grid.param
## end
#1513, 87:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/png.param
## end
#1514, 97:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/include/picongpu/param/incidentField.param
## end
#1515, 67:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/myscript.txt
## end
#1516, 63:
/home/xiantao/Documents/sim_output/probe_a0_0_n_1_5e25/info.txt
## end
#1524, 2246:
%{
+[M函数](,测试梯度效应)
Nini, 打开plasma(文件)
记住"Matlab"
%}


addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft');
addpath('Matlab/funcs');
addpath('Matlab/plasma');

lm_0=800e-9;
omega_0=2*pi*c/lm_0;
n_e=1e25;

%{
+[M函数](,多普勒效应)
%}

i=41;
ph_z=field_spatial_phase(Ez(i,:));
ph_y=field_spatial_phase(Ey(i,:));
Dph_i=sin(ph_z-ph_y);

dvxdy_i=dvxdy(i,:);
dvxdx_i=dvxdx(i,:);
dvydy_i=dvydy(i,:);
dvydx_i=dvydx(i,:);
vx_i=vx_2(i,:);
vy_i=vy_2(i,:);
gamma_i=1./sqrt(1-(vx_i.^2+vy_i.^2)/c^2);


rho_i=Rho_2(i,:);
Ex_i=Ex(i,:);
Ey_i=Ey(i,:);
Ez_i=Ez(i,:);

jx_i=Jx_2(i,:);
jy_i=Jy_2(i,:);
jz_i=Jz_2(i,:);

% jx_i=Jx(i,:);
% jy_i=Jy(i,:);
% jz_i=Jz(i,:);


[~,~,jx_i_p]=carrier_envelop_probe(x0,jx_i,1e-13);
[~,~,jx_i_n]=carrier_envelop_probe(x0,-jx_i,1e-13);
[~,~,jy_i_p]=carrier_envelop_probe(x0,jy_i,1e-13);
[~,~,jy_i_n]=carrier_envelop_probe(x0,-jy_i,1e-13);
[~,~,jz_i_p]=carrier_envelop_probe(x0,jz_i,1e-13);
[~,~,jz_i_n]=carrier_envelop_probe(x0,-jz_i,1e-13);

[~,~,Ex_i_p]=carrier_envelop_probe(x0,Ex_i,1e-13);
[~,~,Ex_i_n]=carrier_envelop_probe(x0,-Ex_i,1e-13);
[~,~,Ey_i_p]=carrier_envelop_probe(x0,Ey_i,1e-13);
[~,~,Ey_i_n]=carrier_envelop_probe(x0,-Ey_i,1e-13);
[~,~,Ez_i_p]=carrier_envelop_probe(x0,Ez_i,1e-13);
[~,~,Ez_i_n]=carrier_envelop_probe(x0,-Ez_i,1e-13);

jy_i_D=jy_i_p+jy_i_n;
jz_i_D=jz_i_p+jz_i_n;
Ey_i_D=Ey_i_p+Ey_i_n;
Ez_i_D=Ez_i_p+Ez_i_n;

dpp_ratio_y=-Ey_i_D./jy_i_D./omega_0/m_e*e^2.*rho_i./gamma_i;
dpp_ratio_z=-Ez_i_D./jz_i_D./omega_0/m_e*e^2.*rho_i./gamma_i;


jx_t=zeros(size(jx_i));
jy_t=zeros(size(jy_i));
jz_t=zeros(size(jz_i));

for i=1:length(vx_i)
% for i=1:10

D=[2.*dvxdx_i(i)+dvydy_i(i),dvxdy_i(i),0;
dvydx_i(i),dvxdx_i(i)+2.*dvydy_i(i),0;
0,0,dvxdx_i(i)+dvydy_i(i)];

beta_x=vx_i(i)/c;
beta_y=vy_i(i)/c;
gamma=gamma_i(i);

R=[1,beta_y,0;
0,1-beta_x,0;
0,0,1-beta_x]^(-1)*m_e*[1+gamma.^2.*beta_x.^2,gamma.^2.*beta_x.*beta_y,0;
gamma.^2.*beta_y.*beta_x,1+gamma.^2.*beta_y.^2,0;
0,0,1]*([2.*beta_x-1,0,0;
beta_y,beta_x-1,0;
0,0,beta_x-1]-(1i)./(omega_0).*D);

RR=R^(-1);
E_i=[Ex_i(i),Ey_i(i),Ez_i(i)]';
j_i=RR*E_i*rho_i(i);

jx_t(i)=j_i(1);
jy_t(i)=j_i(2);
jz_t(i)=j_i(3);

end

% plot(x0/1e-6,1-dpp_ratio_y+dpp_ratio_z,x0/1e-6,dpp_ratio_z)
plot(x0/1e-6,jx_t)
plot(x0/1e-6,jy_i)


%{
+[M函数](,测试梯度效应)
%}
## end
### 结束