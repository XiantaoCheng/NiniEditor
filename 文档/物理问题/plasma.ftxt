### 节点
地址, 的, 等离子体, 目录, 的, 的, 基本材料, 的, Richard笔记, 的, 第三章, 的, 非均匀等离子体, 的, 基本材料, 的, 笔记, 的, Tang02, 的, 论文, 的, Cummer97, 的, 论文, 的, 等离子体中的波, 的, FDTD, M函数, 查看拟合曲线, M函数, 等离子体色散曲线, 地址, 的, M函数, 测量波长, 地址, 的, M函数, 数值模型, 的, 的, 的, 的, 波矢检测, 的, 检验模型, html, 等离子体折射率, 的, 的, M函数, 等离子体FDTD, 的, html, 等离子体方程, 的, 的, Young's DI, M函数, 地址, M函数, 的, 数值模型, 地址, M函数, 的, 测量波长, M函数, 等离子体色散曲线, M函数, 查看拟合曲线, 的, 的, 的, 的, 波矢检测, 的, 的, 算法, html, 的, 测试, M函数, 手, 的, 折射率, 的, [1]., 表达式, 的, 公式, 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, M函数, 的, [5]., 表达式, 的, 公式, 的, [6]., 表达式, 的, 公式, 的, Y_r斜率, 的, 保存, 的, func_max, 的, 地址, func_max, 的, 记忆, func_max, 的, Y_r形状, 的, plasma_refractive_index, M函数, 的, n_r对比, 的, 地址, plasma_refractive_index, 的, plasma_refractive_index, 的, zero版本, 的, plasma_refractive_index1, 的, 测试, 的, 折射率曲线, 的, 介质传播, 的, 本征模, 的, EigDecomposition, M函数, 的, 地址, EigDecomposition, 的, EigDecomposition, 的, FR公式, 打开网页, 的, 空间分布, 的, 输出偏振, 的, [7]., 表达式, 的, 公式, 的, [8]., 表达式, 的, 公式, 的, [9]., 表达式, 的, 公式, 的, [10]., 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 表达式, 的, 公式, 的, [13]., 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, 的, [15]., 表达式, 的, 公式, 的, [16]., 表达式, 的, 公式, 的, [17]., 表达式, 的, 公式, 的, plasma_refractive_index2, 的, [18]., 表达式, 的, 公式, 的, 相对论振荡, html, 的, [1]., 表达式, 的, 公式, 的, [2]., 表达式, 的, 公式, 的, [3]., 表达式, 的, 公式, 的, [4]., 表达式, 的, 公式, 的, [5]., 表达式, 的, 公式, 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [10]., 表达式, 的, 公式, 的, 公式验证, M函数, 手, 的, [11]., 表达式, 的, 公式, 的, Boris对比, M函数, 的, 振荡, 的, 理论曲线, 的, Boris_relativistic_osc, M函数, 的, 地址, Boris_relativistic_osc, 的, Boris_relativistic_osc, 的, 计算E0, M函数, 的, 课本1, 打开网页, 的, 笔记, 的, 课本1, 打开网页, 打开网页, 的, Xwave, 的, 书签, 打开网页, 的, 相对论效应, 的, 磁场, 的, 介电张量, 打开网页, 打开网页, 打开网页, 打开网页, 的, 质量张量, html, 的, 波动方程, html, 的, [1]., 的, [2]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [3]., 表达式, 的, 公式, 的, [4]., 表达式, 的, 公式, 的, [5]., 表达式, 的, 公式, 的, [6]., 表达式, 的, 公式, 的, [1]., 表达式, 的, 公式, [1]., 的, 定义Maxwell方程组, 的, 方程组, 表达式, 的, 公式, 的, 召唤规则, 的, 降临规则, 的, 导入方程2, 召唤规则, 的, 定义Maxwell方程组, 的, [2]., 公式, 表达式, 的, 导入方程组, 的, 导入方程3, 的, 导入方程4, 的, 导入方程1, 的, 的, [3]., 表达式, 的, 公式, 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [6]., 表达式, 的, 公式, 的, [7]., 公式, 表达式, 的, 的, [8]., 表达式, 的, 公式, 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 的, [12]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [13]., 的, [14]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [15]., 表达式, 的, 公式, 的, [16]., 表达式, 的, 公式, 的, [17]., 的, [18]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [19]., 的, [20]., 表达式, 的, 公式, 的, 磁场双折射, html, 的, 定义方程, 公式, 表达式, 召唤规则, 召唤规则, 的, 相对论波动方程, 的, [1]., 公式, 表达式, 的, 的, [2]., 的, [3]., 表达式, 的, 公式, 召唤规则, 的, 磁场矩阵, 公式, 表达式, 的, 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [6]., 表达式, 的, 公式, 召唤规则, 的, 等离子体频率, 召唤规则, 的, 磁场频率, 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 的, [13]., 的, [14]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [15]., 表达式, 的, 公式, 的, [16]., 的, [17]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [18]., 表达式, 的, 公式, 的, [19]., 表达式, 的, 公式, 的, [20]., 的, [21]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [22]., 表达式, 的, 公式, 的, 推导过程, 打开网页, 打开网页, 的, 参考1, 的, 参考2, 的, 结论化简, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 表达式, 的, 公式, 的, 法拉第旋转, html, 表达式, 的, 公式, 的, [23]., 表达式, 的, 公式, 的, [1]., 的, [2]., 的, [3]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [4]., 表达式, 的, 公式, 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 的, [10]., 的, [11]., 表达式, 的, 公式, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 表达式, 的, 公式, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 括号, 的, 表达式, 的, 公式, 的, 化简运算, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 参考磁场, 的, 初次估算, 的, disp_data_PIConGPU_h5, M函数, 的, 地址, disp_data_PIConGPU_h5, 的, disp_data_PIConGPU_h5, 的, 通用对比, 的, 变化介质, 的, 相位分布, 的, plasma_refractive_index_FR, M函数, 的, 地址, plasma_refractive_index_FR, 的, plasma_refractive_index_FR, 的, plasma_refractive_index_CM, M函数, 的, 地址, plasma_refractive_index_CM, 的, plasma_refractive_index_CM, 的, 电流重置, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [2.1]., 表达式, 的, 公式, 的, [6]., 的, [7]., 的, [8]., 的, [9]., 表达式, 的, 公式, 的, [5.1]., 表达式, 的, 公式, 的, [5.2]., 的, [5.3]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [10]., 的, [11]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [12]., 表达式, 的, 公式, 的, [13]., 表达式, 的, 公式, 的, [5.4]., 表达式, 的, 公式, 的, 相对论双折射, html, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [5]., 的, [6]., 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, b, 的, a, 的, 括号, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 的, 检测单位, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, M函数, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, 的, 磁场例子, 的, 磁场电流耦合, html, 的, [1]., 的, [2]., 的, [3]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [4]., 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 估算, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 括号, 的, 括号, 的, 的, [6]., 的, [7]., 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 括号, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [10]., 的, [11]., 的, [12]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 估算数据, 的, 测试矩阵, 的, 纵波, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [3.1]., 表达式, 的, 公式, 的, [1.1]., 表达式, 的, 公式, 的, [6]., 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [9]., 的, [10]., 的, [11]., 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 括号, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, 的, [15]., 的, [16]., 的, [17]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [6.1]., 表达式, 的, 公式, 的, [17.1]., 表达式, 的, 公式, 的, [18]., 的, [19]., 的, [20]., 的, [21]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 括号, 的, b, 的, a, 的, 括号, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [22]., 表达式, 的, 公式, 的, [23]., 的, [24]., 的, [25]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [26]., 的, [27]., 的, [28]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [29]., 的, [30]., 的, [31]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证纵波, 括号, 的, 括号, 的, 的, 测试相位差, 的, plasma_refractive_index_LW, 的, 地址, plasma_refractive_index_LW, 的, plasma_refractive_index_LW, 的, 测试, 的, 保存, 的, plasma_refractive_index_current_shift, M函数, 的, 地址, plasma_refractive_index_current_shift, 的, plasma_refractive_index_current_shift, 手, 的, 模拟场景, 的, 1D均匀模拟, 的, 运行模拟, 的, 获取数据, 手, 的, 直接分析h5, 的, read_data_1D_Smilei_h5, M函数, 的, 地址, read_data_1D_Smilei_h5, 的, read_data_1D_Smilei_h5, 的, 地址, 的, 状态, 的, 代码, 探测场, 的, 的, 探测类型, 的, 探测间隔, 的, 参考波长, 模拟空间, 的, 窗口, 的, 探测光, 的, 电子, 的, 正电子, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 格点尺寸, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 启动时间, 的, 速度, 的, 数密度, 的, 速度方向, 的, beta, 的, 数密度, 的, 电荷, 的, 速度方向, 的, beta, 的, a0, 的, 波长, 的, 展宽, 的, 腰宽, 的, 偏振, 的, 焦点位置, 的, A, 空间点, 在, 的, 模拟动画, 召唤, 的, 的, p, 的, 偏振态, 的, 单一场, 的, 观察DE, 手, 的, 方向对比, 的, 直接对比, 的, 对比差值, 的, 其它, 的, 圆偏光磁场, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 括号, 的, 表达式, 的, 公式, r, r, 表达式, 的, 公式, 的, [6]., 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 括号, 的, b, 的, a, 的, 括号, 的, 表达式, 的, 公式, b, 的, a, 的, 括号, 的, 表达式, 的, 公式, 的, [9]., 的, [10]., 的, [11]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [12]., 的, [13]., 的, [14]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 2D均匀模拟, 外场, 的, 的, 类型, 的, 场强, 的, 模拟动画, 的, 直接分析h5_2D, 的, 地址, 的, 状态, 的, 代码, 探测场, 的, 的, 探测类型, 的, 探测间隔, 的, 参考波长, 模拟空间, 的, 窗口, 的, 探测光, 的, 电子, 的, 正电子, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 格点尺寸, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 启动时间, 的, 速度, 的, 数密度, 的, 速度方向, 的, beta, 的, 数密度, 的, 电荷, 的, 速度方向, 的, beta, 的, a0, 的, 波长, 的, 展宽, 的, 腰宽, 的, 偏振态, 的, A, 的, 焦点位置, 空间点, 在, 的, 测试不注入, 的, 地址, 探测场, 的, 的, 探测类型, 的, 探测间隔, 的, 参考波长, 模拟空间, 的, 窗口, 的, 电子, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 格点尺寸, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 启动时间, 的, 速度, 的, 数密度, 的, 速度方向, 的, beta, 的, 模拟动画, 的, 代码, 的, 状态, 手, 的, 测试注入, 的, 1D, 的, 2D, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 的, 模拟场景, 的, 1D均匀模拟, 的, 状态, 探测场, 的, 的, 探测类型, 的, 探测间隔, 的, 参考波长, 模拟空间, 的, 窗口, 的, 探测光, 的, 电子, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 格点尺寸, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 启动时间, 的, 速度, 的, 数密度, 的, a0, 的, 波长, 的, 展宽, 的, 偏振态, 的, A, 空间点, 在, 的, 焦点位置, 的, 模拟动画, 的, 代码, 地址, 的, 外场, 的, 的, 类型, 的, 场强, 的, 获取数据, 的, 直接分析h5, 手, 的, IFR模拟, 模拟空间, 的, 窗口, 的, 入射光, 的, 电子, 的, 的, 数密度, 的, A, 的, 获取数据, 的, 对比一维分布, 的, 对比电流, 的, 质量分布, 的, 不注入, 的, 不注入, 的, 分析数据, 的, 获取数据, 的, 梯度下降法, 的, 计算折射率, 的, 理论折射率, 的, 初次计算, 的, 运行模拟, 的, p, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 的, 模拟折射率, 手, 的, 检查特定密度, 的, 分析均匀流体, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 模拟结果, 的, Ex_2D, 的, Ex_1D, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, Ey函数形状, 的, 检查相位, 的, 分布特征, 的, 计算折射率, 的, 比较yz分量相位, 的, E的相位, 的, J的幅值, 的, [10]., 的, [11]., 的, [12]., 的, [13]., 的, [14]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 保存, 的, 多普勒效应, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 括号, 的, 括号, 的, b, 的, a, 的, 括号, 的, 的, [8]., 的, [9]., 的, [10]., 表达式, 的, 公式, 手, 手, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [14]., 的, [15]., 的, [16]., 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 的, 测试beta影响, 的, 获取数据, 的, EyEz, 的, JyJz, 的, 不均匀模拟, 手, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 的, 获取1D数据, 的, 流体方程分析, 的, 参考1, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, 的, [14]., 的, [15]., 的, [16]., 的, [17]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [19]., 的, [20]., 的, [18]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [21]., 的, [22]., 的, [23]., 的, [24]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [25]., 的, [26]., 的, [27]., 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [28]., 表达式, 的, 公式, 的, 参考2, 的, [29]., 的, [30]., 的, [31]., 的, [32]., 的, [33]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [34]., 的, [35]., 的, [36]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [37]., 表达式, 的, 公式, 的, 验证公式, 的, 获取数据, 的, 矩阵系数, 的, 系数重组, 的, 群速度, 的, 参考, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 计算折射率, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [4.1]., 表达式, 的, 公式, 的, [7]., 的, [8]., 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [9]., 的, [10]., 的, [11]., 的, [12]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 验证式12, 的, [13]., 的, [14]., 的, [15]., 的, [16]., 的, [17]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 参考, 表达式, 的, 公式, 的, [18]., 的, [19]., 的, [20]., 的, [21]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 测试三次根, 的, cubic_roots, M函数, 的, 地址, 的, fig.1_, 图片, 的, 朗道, 的, 参考, 的, 书签, 的, 目录, 的, 课本, 的, 书单, 的, 入门, 的, 计算, 的, 电磁波, 的, 相对论流体方程, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 的, [10]., 的, [11]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [12]., 表达式, 的, 公式, 的, [13]., 的, [14]., 的, [15]., 的, [16]., 的, [17]., 的, [18]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 讨论散度项, html, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [11]., 的, [12]., 的, [13]., 表达式, 的, 公式, 的, [14]., 的, [15]., 的, [16]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 手, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [17]., 的, [18]., 的, [19]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [20]., 的, [21]., 的, [22]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [23]., 的, [24]., 的, [25]., 的, [26]., 的, [27]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [28]., 的, [29]., 的, [30]., 的, [31]., 的, [32]., 的, [33]., 表达式, 的, 公式, 表达式, 的, 公式, b, a, 手, 表达式, 的, 公式, 表达式, 的, 公式, 的, 受力项特征, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 的, [10]., 的, 参考1, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 的, [14]., 的, [15]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [16]., 的, [17]., 的, [18]., 的, [19]., 的, [20]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [21]., 的, [22]., 的, [23]., 的, [24]., 的, [25]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [26]., 的, [27]., 的, [28]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 的, [29]., 的, [30]., 的, [31]., 的, [32]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [33]., 表达式, 的, 公式, 的, [34]., 的, [35]., 的, [36]., 的, [37]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 讨论密度扰动, html, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 的, [10]., 的, [11]., 表达式, 的, 公式, 的, 验证公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [38]., 的, [39]., 的, [40]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 特征值, 手, 的, 特征向量, 的, 模拟结果, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 的, 讨论速度修正, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [8]., 的, [9]., 的, [10]., 的, [11]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 的, [12]., 的, [13]., 的, [14]., 的, [15]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [16]., 的, [17]., 的, [18]., 的, [19]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [20]., 的, [21]., 的, [22]., 的, [23]., 的, [24]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [25]., 的, [26]., 的, [27]., 的, [28]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [29]., 的, [30]., 的, [31]., 的, [32]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [33]., 的, [34]., 的, [35]., 的, [36]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [37]., 的, [38]., 的, [39]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 手, 的, [28.1]., 表达式, 的, 公式, 的, [40]., 的, [41]., 的, [42]., 的, [43]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [39.1]., 的, [39.2]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 求R的逆, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [5]., 的, [6]., 的, [7]., 的, [8]., 表达式, 的, 公式, 的, 快速猜测, html, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [10]., 的, [11]., 的, [12]., 表达式, 的, 公式, 的, 完整方程, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [19]., 的, [20]., 的, [21]., 的, [22]., 的, [23]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [24]., 的, [25]., 的, [26]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, 表达式, 的, 公式, 的, [27]., 的, [28]., 的, [29]., 的, [30]., 的, [31]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [24.1]., 的, [24.2]., 的, [24.3]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, 的, [32]., 的, [33]., 的, [34]., 的, [35]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [36]., 的, [37]., 的, [38]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [39]., 的, [40]., 的, [41]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, [42]., 的, [43]., 的, [44]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, d12项, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 回收站, b, b, 矩阵, [11]., 表达式, 的, 公式, 的, 然后, 调用, 求解, 然后, 求解, 调用, 然后, 调用, 求解, 调用, 求解, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, [12]., 的, [13]., 的, [14]., 的, [15]., 的, [16]., 的, [17]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [18]., 的, [19]., 的, [20]., 的, [21]., 的, [22]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 的, 均匀流体折射率, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [2.1]., 表达式, 的, 公式, 的, [2.2]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [6.1]., 表达式, 的, 公式, 的, [6.2]., 表达式, 的, 公式, 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [9]., 表达式, 的, 公式, 回收站, b, b, b, b, 矩阵, [10]., 表达式, 的, 公式, 的, b, b, 矩阵, [11]., 表达式, 的, 公式, 的, 矩阵, [12]., 表达式, 的, 公式, 的, 矩阵, [13]., 表达式, 的, 公式, 的, 矩阵, [14]., 表达式, 的, 公式, 的, 矩阵, [15]., 表达式, 的, 公式, 的, 矩阵, [16]., 表达式, 的, 公式, 的, b, b, b, 矩阵, 矩阵, 矩阵, 矩阵, b, b, 矩阵, 矩阵, 矩阵, 矩阵, 矩阵, 矩阵, 的, [17]., 的, [18]., 的, [19]., 的, [20]., 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, 表达式, 的, 公式, 表达式, 的, 公式, b, b, b, 矩阵, [21]., 表达式, 的, 公式, 的, 矩阵, [22]., 表达式, 的, 公式, 的, 的, [23]., 表达式, 的, 公式, 矩阵, [24]., 表达式, 的, 公式, 的, 矩阵, [25]., 表达式, 的, 公式, 的, 调用, 求解, 的, 的, 的, [26]., 表达式, 的, 公式, 的, [27]., 的, [28]., 的, [29]., 的, [30]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 表达式, 的, 公式, 表达式, 的, 公式, 的, [31]., 的, [32]., 的, [33]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [34]., 的, [35]., 的, [36]., 的, [37]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [6.c]., 表达式, 的, 公式, 的, 2.c]., 的, [22.c]., 的, [23.c]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 二维分布, 的, 一维分布, 的, 模拟场景, 的, 参考波长, 模拟空间, 的, 窗口, 的, 电子, 的, 探测光, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 的, 数密度, 的, 速度, 的, 波长, 的, 展宽, 的, a0, 的, 偏振态, 的, 模拟动画, 的, 状态, 的, 地址, 的, 模拟代码, 的, 格点尺寸, 的, 对比折射率, 手, 探测场, 的, 的, 探测间隔, 的, 探测类型, 正电子, 的, 的, 的, 的, 的, 的, 电荷, 的, 电流特征, 的, 基本关系, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 确认jx和rho, 的, [6]., 的, [7]., 的, [8]., 的, [9]., 的, [10]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 的, [13]., 的, [14]., 表达式, 的, 公式, b, 的, a, 的, 表达式, 的, 公式, 的, 确认Bz和Ey, 的, 确认Ey和jx, 的, 测试排除x分量, 手, 的, [1]., 表达式, 的, 公式, 回收站, 变量, [2]., 表达式, 的, 公式, 的, 变量, [3]., 表达式, 的, 公式, 的, 调用, 求解, 的, 的, 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 分离测试, 的, 显示分布, 的, [15]., 的, [16]., 的, [17]., 的, [18]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, 确认jx和rho和Ex, 的, 纵波方程, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 的, [5]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [1.2]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [6]., 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 表达式, 的, 公式, 的, [13]., 的, [14]., 的, [15]., 的, [16]., 的, [17]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [18]., 的, [19]., 的, [20]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [21]., 的, [22]., 的, [23]., 的, [24]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [25]., 的, [26]., 的, [27]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [28]., 表达式, 的, 公式, 的, [29]., 表达式, 的, 公式, 的, [13.1]., 表达式, 的, 公式, 手, 地址, 的, run, 的, 地址, 的, info, 的, 地址, 的, myscript, 的, 的, 洛伦兹变换, 的, [1]., 表达式, 的, 公式, 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 回收站, b, b, b, [5]., 表达式, 的, 公式, 的, [6]., 表达式, 的, 公式, 的, 的, [7]., 的, [8]., 表达式, 的, 公式, 的, [9]., 表达式, 的, 公式, 表达式, 的, 公式, b, b, [10]., 表达式, 的, 公式, 的, 表达式, 公式, [11]., 表达式, 的, 公式, 的, 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [14]., 表达式, 的, 公式, 的, [15]., 表达式, 的, 公式, b, 的, a, 的, b, 的, a, 的, [16]., 表达式, 的, 公式, 的, 的, [20]., 表达式, 的, 公式, 手, [17]., 表达式, 的, 公式, 的, [18]., 表达式, 的, 公式, 的, 接下来, 新式子, 接下来, 新式子, 接下来, 新式子, [19]., 表达式, 的, 公式, 的, 然后, 调用, 求解, 调用, 求解, 然后, ., 调用, 求解, 的, 的, 的, 的, 的, 的, 的, 的, 的, 的, 斜入射问题, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, b, 的, a, 的, 的, [5]., 的, [6]., 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, 的, 的, 表达式, 的, 的, 公式, [20.1]., 的, 的, 的, 表达式, 的, 的, 公式, [22.1]., 的, 的, 
### 关联
#, 2#0, #, #, 3#2, 2#6, #, 2#8, #, 8#10, #, 8#12, #, 8#14, #, 2#16, #, 16#18, #, 18#20, #, 16#22, #, 22#24, #, 2#26, #, 26#28, #, 30#, #, 32#, #, #, 36#33, 36#, #, #, 40#37, 40#, #, 45#30, 45#32, 45#36, 45#40, #, 47#45, #, 49#, #, 53#47, 53#49, 53#, #, 56#53, 56#, #, 26#56, 26#59, #, 59#, #, 64#, 64#61, #, #, 68#, 68#65, #, 70#, #, 72#, #, 77#64, 77#68, 77#70, 77#72, #, 59#77, 59#80, #, 80#, 64#83, #, 83#, #87, 2#87, #, 87#89, #, #, 89#90, 89#, 87#94, #, 87#96, #, 87#98, #, #, 94#99, 94#, #, 96#102, 96#, #, 98#105, 98#, 87#109, #, 109#, 87#112, #, #, 112#113, 112#, 87#117, #, #, 117#118, 117#, 109#122, #, 109#124, #, 109#126, #, 126#128, #, #126, 131#129, 3#, #, 109#134, #, 109#136, #, 136#, 109#139, #, 136#141, #, #136, 131#142, #, 136#146, #, 136#148, #, 136#150, #, 109#152, #, 109#154, #, 154#156, #, 154#158, #, 158#, 158#161, #, #158, 131#162, #, 154#166, #, #166, 154#169, #, 154#171, #, 87#173, #, #, 173#174, 173#, 87#178, #, #, 178#179, 178#, 87#183, #, #, 183#184, 183#, 87#188, #, #, 188#189, 188#, 87#193, #, #, 193#194, 193#, 87#198, #, #, 198#199, 198#, 87#203, #, #, 203#204, 203#, 87#208, #, #, 208#209, 208#, 87#213, #, #, 213#214, 213#, 87#218, #, #, 218#219, 218#, 87#223, #, #, 223#224, 223#, 136#228, #, 87#230, #, #, 230#231, 230#, 87#235, #, 235#, 235#238, #, #, 238#239, 238#, 235#243, #, #, 243#244, 243#, 235#248, #, #, 248#249, 248#, 235#253, #, #, 253#254, 253#, 235#258, #, #, 258#259, 258#, 235#263, #, 235#265, #, #, 263#266, 263#, #, 265#269, 265#, 235#273, #, 235#275, #, #, 273#276, 273#, #, 275#279, 275#, 235#283, #, #, 283#284, 283#, 235#288, #, 288#, #235, 235#292, #, #, 292#293, 292#, 288#297, #, 297#, 288#300, #, 288#302, #, 288#304, #, 304#, 304#307, #, #304, 131#308, #, 288#312, #, 312#, 2#315, #, #315, 26#318, #, 318#320, #, #320, #320, 318#324, #, 318#326, #, #320, 318#329, #, 318#331, #, 318#333, #, #329, #320, #320, #326, 87#339, #, 339#, 87#342, #, 342#, 339#345, #, 339#347, #, #, 345#348, 345#, #, 347#351, 347#, 339#355, #, #, 355#356, 355#, 339#360, #, #, 360#361, 360#, 339#365, #, #, 365#366, 365#, 339#370, #, #, 370#371, 370#, 342#375, #, #, 375#376, 375#, #, 342#381, #, 381#383, #, #, 383#384, 383#, 381#388, #, 381#390, #, 390#392, #, #, 395#393, #, 342#397, #, 397#, #, 397#399, #, 390#401, #, 390#403, #, 390#405, #, 390#407, 342#410, #, #, 410#411, 410#, 342#415, #, 342#417, #, #, 415#418, 415#, #, 417#421, 417#, 342#425, #, #, 425#426, 425#, 342#430, #, 430#, #, 430#432, 342#435, #, #, 435#436, 435#, 342#440, #, 342#442, #, #, 440#443, 440#, #, 442#446, 442#, 342#450, #, 342#452, #, #, 450#453, 450#, #, 452#456, 452#, 342#460, #, 342#462, #, #, 460#463, 460#, #, 462#466, 462#, 342#470, #, #, 470#471, 470#, 342#475, #, #, 475#476, 475#, 342#480, #, 342#482, #, #, 480#483, 480#, #, 482#486, 482#, 342#490, #, 342#492, #, #, 490#493, 490#, 87#497, #, 497#, 342#500, #, 500#, #, #, #, 506#504, #, 497#508, #, 508#, #, 508#510, 497#513, #, 497#515, #, #, 513#516, 513#, #, 521#519, #, 515#, #, 515#523, 497#526, #, 497#528, #, #, 526#529, 526#, #, 528#532, 528#, 497#536, #, #, 536#537, 536#, #, 542#540, #, #, 545#543, #, 497#547, #, 497#549, #, #, 547#550, 547#, #, 549#553, 549#, 497#557, #, 497#559, #, #, 557#560, 557#, #, 559#563, 559#, 497#567, #, #, 567#568, 567#, 497#572, #, 497#574, #, 497#576, #, #, 572#577, 572#, #, 574#580, 574#, #, 576#583, 576#, 497#587, #, #, 587#588, 587#, 497#592, #, 497#594, #, #, 592#595, 592#, #, 594#598, 594#, 497#602, #, #, 602#603, 602#, 497#607, #, #, 607#608, 607#, 497#612, #, 497#614, #, #, 612#615, 612#, #, 614#618, 614#, 497#622, #, #, 622#623, 622#, 497#627, #, #331, #324, 497#631, #, 497#633, #, 497#635, #, 635#637, #, 635#639, #, 635#641, #, 635#643, #, 635#645, #, #, 637#646, 637#, #, 639#649, 639#, #, 641#652, 641#, #, 643#655, 643#, #, 645#658, 645#, 635#662, #, 635#664, #, #, 662#665, 662#, #, 664#668, 664#, 635#672, #, 635#674, #, #, 672#675, 672#, 497#679, #, 679#, #, 674#681, 674#, 497#685, #, #, 685#686, 685#, 679#690, #, 679#692, #, 679#694, #, #, 690#695, 690#, #, 692#698, 692#, #, 694#701, 694#, 679#705, #, #, 705#706, 705#, 679#710, #, 679#712, #, 679#714, #, #, 710#715, 710#, #, 712#718, 712#, #, 714#721, 714#, 679#725, #, 679#727, #, 679#729, #, 679#731, #, #, 725#732, 725#, #, 732#735, #, 732#737, #, 732#739, #, 732#741, #, 732#743, #, 732#745, #, 727#747, 727#, #, 747#750, #, 747#752, #, 747#754, #, 747#756, #, 747#758, #, 747#760, #, 747#762, #, 747#764, #, 747#766, #, 747#768, #, 729#770, 729#, 679#774, #, 774#776, #, 774#778, #, 774#780, #, 774#782, #, #, 776#783, 776#, #, 778#786, 778#, #, 780#789, 780#, #, 782#792, 782#, 774#796, #, 774#798, #, 774#800, #, #, 796#801, 796#, #, 798#804, 798#, #, 800#807, 800#, 679#811, #, 679#813, #, #, 731#814, 731#, #, 811#817, 811#, 774#821, #, 774#823, #, #, 821#824, 821#, #, 823#827, 823#, 679#831, #, #, 813#832, 813#, #, 831#835, 831#, 497#839, #, 839#841, #, 839#843, #, 841#845, #, 845#, 845#848, #, #845, 131#849, #, 839#853, #, 2#855, #, 839#857, #, 839#859, #, 859#, 859#862, #, #859, 131#863, #, 839#867, #, 867#, 867#870, #, #867, 131#871, #, 342#875, #, 875#877, #, 875#879, #, 875#881, #, 875#883, #, 875#885, #, #965, #, 877#887, 877#, #, 879#890, 879#, #, 881#893, 881#, #, 883#896, 883#, 875#900, #, #, 885#901, 885#, 875#905, #, 875#907, #, 875#909, #, 875#911, #, #, 905#912, 905#, 875#916, #, #, 916#917, 916#, 875#921, #, 875#923, #, #, 921#924, 921#, #, 923#927, 923#, #, 907#930, 907#, #, 909#933, 909#, #, 911#936, 911#, 875#940, #, 875#942, #, #, 940#943, 940#, #, 942#946, 942#, 875#950, #, #, 950#951, 950#, 875#955, #, #, 955#956, 955#, 875#960, #, #, 960#961, 960#, 87#965, #, 965#, 965#968, #, 965#970, #, 965#972, #, 965#974, #, #, 968#975, 968#, #, 970#978, 970#, #, 972#981, 972#, 965#985, #, 965#987, #, #, 974#988, 974#, 875#992, #, #, 992#993, 992#, #, 978#996, #, 978#998, #, 981#1000, #, 985#1002, 985#, #, 987#1005, 987#, 965#1009, #, 965#1011, #, 965#1013, #, #, 1009#1014, 1009#, #, 1011#1017, 1011#, #965, 965#1022, #, 1022#1024, #, 1022#1026, #, 1022#1028, #, 1022#1030, #, 1022#1032, #, #, 1024#1033, 1024#, #, 1026#1036, 1026#, 965#1040, #, #, 1013#1041, 1013#, #, 1040#1044, 1040#, 965#1048, #, 1048#, #, 1028#1050, 1028#, #, 1030#1053, 1030#, 965#1057, #, #, 1057#1058, 1057#, 965#1062, #, 965#1064, #, #, 1062#1065, 1062#, #, 1064#1068, 1064#, 965#1072, #, #, 1072#1073, 1072#, 1048#1077, #, 87#1079, #, 1079#, 1079#1082, #, 1079#1084, #, 1079#1086, #, #1128, #, 1082#1088, 1082#, #, 1084#1091, 1084#, #, 1086#1094, 1086#, 1079#1098, #, 1079#1100, #, 1079#1102, #, 1079#1104, #, #, 1098#1105, 1098#, #, 1100#1108, 1100#, #, 1102#1111, 1102#, #, 1104#1114, 1104#, 1079#1118, #, 1079#1120, #, #, 1118#1121, 1118#, #, 1120#1124, 1120#, 1079#1128, #, 1128#1130, #, 1128#1132, #, 1128#1134, #, 1128#1136, #, 1128#1138, #, #, 1130#1139, 1130#, #, 1132#1142, 1132#, #, 1134#1145, 1134#, #, 1136#1148, 1136#, #, 1138#1151, 1138#, #, 1145#1154, #, 1145#1156, #, 1151#1158, #, 1151#1160, 1128#1163, #, 1128#1165, #, 1128#1167, #, 1128#1169, #, #, 1163#1170, 1163#, #, 1165#1173, 1165#, #, 1142#1176, #, 1142#1178, #, 1173#1180, #, 1167#1182, 1167#, #, 1169#1185, 1169#, 1128#1189, #, 1128#1191, #, 1128#1193, #, #, 1189#1194, 1189#, #, 1191#1197, 1191#, #, 1193#1200, 1193#, 1128#1204, #, 1204#1206, #, 1204#1208, #, 965#1210, #, 1210#1212, #, 1210#1214, #, 1210#1216, #, 1210#1218, #, 1210#1220, #, #1210, #, 1212#1222, 1212#, #, 1214#1225, 1214#, #, 1216#1228, 1216#, #, 1218#1231, 1218#, 1210#1235, #, #, 1235#1236, 1235#, 1210#1240, #, #, 1240#1241, 1240#, 1210#1245, #, 1210#1247, #, 1210#1249, #, #, 1220#1250, 1220#, #, 1245#1253, 1245#, #, 1247#1256, 1247#, #, 1249#1259, 1249#, 1210#1263, #, 1210#1265, #, 1210#1267, #, 1210#1269, #, 1210#1271, #, #, 1263#1272, 1263#, #, 1265#1275, 1265#, #1210, #, 1259#1279, #, 1267#1281, 1267#, #, 1269#1284, 1269#, 1210#1288, #, #, 1271#1289, 1271#, 1210#1293, #, #, 1293#1294, 1293#, 1210#1298, #, 1210#1300, #, 1210#1302, #, #, 1298#1303, 1298#, #, 1300#1306, 1300#, #, 1302#1309, 1302#, 1210#1313, #, #, 1313#1314, 1313#, 1210#1318, #, #, 1318#1319, 1318#, 1210#1323, #, 1210#1325, #, 1210#1327, #, 1210#1329, #, #, 1323#1330, 1323#, #, 1325#1333, 1325#, #, 1256#1336, #, 1256#1338, #, 1333#1340, #, 1314#1342, #, 1314#1344, #, 1333#1346, #, 1327#1348, 1327#, #, 1329#1351, 1329#, 1210#1355, #, #, 1355#1356, 1355#, 1210#1360, #, 1210#1362, #, 1210#1364, #, #, 1360#1365, 1360#, #, 1362#1368, 1362#, #, 1364#1371, 1364#, 1210#1375, #, 1210#1377, #, 1210#1379, #, #, 1375#1380, 1375#, #, 1377#1383, 1377#, #, 1379#1386, 1379#, 1210#1390, #, 1210#1392, #, 1210#1394, #, #, 1390#1395, 1390#, #, 1392#1398, 1392#, #, 1394#1401, 1394#, 1288#1405, #, #, 1365#1406, #, 1368#1408, 1288#1411, #, 1288#1413, #, 1413#1415, #, #1413, 131#1416, #, 1413#1420, #, 1413#1422, #, 1411#1424, #, 1424#, 1424#1427, #, #1424, 131#1428, #, #497, 2#1433, #, 1433#1435, #, 1433#1437, #, 1433#1439, #, #1439, 1439#1442, #, 1442#1444, #, 1444#, 1444#1447, #, #1444, 131#1448, #, 1435#1452, #, 1435#1454, #, 1435#1456, #, #, 1435#1457, 1457#1460, #, 1457#1462, #, 1435#1464, #, #, 1435#1465, #, 1435#1467, #, 1435#1469, #, 1435#1471, #, 1435#1473, #, 1465#1475, #, 1465#1477, #, 1465#1479, #, 1465#1481, #, 1465#1483, 1465#, #, 1465#1486, 1465#1489, #, #, 1467#1490, #, 1467#1492, #, 1467#1494, #, 1467#1496, #, 1467#1498, 1467#, #, 1467#1501, 1467#1504, #, 1467#1506, #, 1471#1508, #, 1471#1510, #, 1471#1512, #, 1473#1514, #, 1473#1516, #, 1473#1518, #, 1473#1520, #, 1469#1522, #, 1469#1524, #, 1469#1526, #, 1469#1528, #, 1469#1530, #, 1469#1532, #1534, 1435#1534, #, #, 1534#1535, 1435#1538, #, #, 1435#1539, 1437#1542, #, 1469#1544, #, 1442#1546, #, 1442#1548, #, #1437, 1442#1551, #, 1551#1553, #, 1551#1555, #, 2#1557, #, 1557#1559, #, 1559#1561, #, 1559#1563, #, 1559#1565, #, 1559#1567, #, 1559#1569, #, #1559, #, 1561#1571, 1561#, #, 1563#1574, 1563#, #, 1574#1577, #, 1565#1579, 1565#, #, #, #, 1567#1584, 1567#, 1559#1588, #, 1559#1590, #, 1559#1592, #, #, 1569#1593, 1569#, #, 1588#1596, 1588#, #, 1596#1599, #, 1579#1601, #, 1579#1603, #, 1596#1605, #, 1590#1607, 1590#, #, 1584#1610, #, 1584#1612, #, 1607#1614, #, 1592#1616, 1592#, 1559#1620, #, 1559#1622, #, 1559#1624, #, #, 1620#1625, 1620#, #, 1622#1628, 1622#, #, 1624#1631, 1624#, 1559#1635, #, 1559#1637, #, 1559#1639, #, #, 1635#1640, 1635#, #, 1637#1643, 1637#, 1559#1647, #, 1433#1649, #, #, 1435#1650, 1650#1653, #, 1650#1655, #, 1649#1657, #, 1439#1659, #, 1649#1661, #, 1649#1663, #, 1649#1665, #, #, 1649#1666, 1666#1669, #, 1666#1671, #, 1649#1673, #, #, 1649#1674, #, 1649#1676, #, 1649#1678, #, 1649#1680, #, 1649#1682, #, 1674#1684, #, 1674#1686, #, 1674#1688, #, 1674#1690, #, 1674#1692, 1674#, #, 1674#1695, 1674#1698, #, #, 1676#1699, #, 1676#1701, #, 1676#1703, #, 1676#1705, #, 1676#1707, 1676#, #, 1676#1710, 1676#1713, #, 1676#1715, #, 1680#1717, #, 1680#1719, #, 1680#1721, #, 1682#1723, #, 1682#1725, #, 1682#1727, #, 1682#1729, #, 1678#1731, #, 1678#1733, #, 1678#1735, #, 1678#1737, #, 1678#1739, #, 1649#1741, #, 1678#1743, #1741, #, 1741#1744, 1433#1747, #, 1747#1749, #, #, 1747#1750, 1750#1753, #, 1750#1755, #, 1747#1757, #, #, 1747#1758, #, 1747#1760, #, 1747#1762, #, 1758#1764, #, 1758#1766, #, 1758#1768, #, 1758#1770, #, 1758#1772, 1758#, #, 1758#1775, 1758#1778, #, #, 1760#1779, #, 1760#1781, #, 1760#1783, #, 1760#1785, #, 1760#1787, 1760#, #, 1760#1790, 1760#1793, #, 1760#1795, #, 1762#1797, #, 1762#1799, #, 1762#1801, #, 1747#1803, #, 1747#1805, #, 1747#1807, #, #1439, 1439#1810, #, 1810#1812, #, 1810#1814, #, #, 1817#1815, #, 1805#1817, #, 1821#1819, #, 1805#1821, #, 1825#1823, #, 1805#1825, 1557#1828, #, 1828#1830, #, 1830#1832, #, #, 1830#1833, 1833#1836, #, 1833#1838, #, 1830#1840, #, #, 1830#1841, #, 1830#1843, #, 1830#1845, #, 1830#1847, #, 1841#1849, #, 1841#1851, #, 1841#1853, #, 1841#1855, #, 1841#1857, 1841#, #, 1841#1860, 1841#1863, #, #, 1843#1864, #, 1843#1866, #, 1843#1868, #, 1843#1870, #, 1843#1872, 1843#, #, 1843#1875, 1843#1878, #, 1843#1880, #, 1847#1882, #, 1845#1884, #, 1845#1886, #, 1845#1888, #, 1845#1890, #, 1830#1892, #, #, 1892#1893, 1845#1896, #1892, 1830#1898, #, 1830#1900, #, #, 1830#1901, #, 1830#1903, 1903#1906, #, 1903#1908, #, 1828#1910, #, 1910#1912, #, #1437, 1828#1915, #, #, 1915#1916, #, 1915#1918, #, 1915#1920, #, 1915#1922, 1922#1925, #, 1915#1927, #, 1659#1929, #, 1659#1931, #, 1659#1933, #, 1659#1935, #, 1649#1937, 1682#, 1649#1939, 1680#, 1828#1941, #, 1941#1943, #, 1941#1945, #, 1941#1947, #, 1941#1949, #, 1949#1951, #, 1828#1953, #, 1953#1955, #, #, 1958#1956, #, 1900#1958, #, 1962#1960, #, 1900#1962, #, 1966#1964, #, 1900#1966, 1941#1969, #, #1437, 1929#1972, #, 1433#1974, #, 1974#1976, #, 1974#1978, #, 1974#1980, #, 1974#1982, #, 1974#1984, #, 1974#1986, #, #, 1976#1987, 1976#, #, 1978#1990, 1978#, #, 1980#1993, 1980#, #, 1982#1996, 1982#, 1974#2000, #, 2000#2002, #, 2000#2004, #, #, 1984#2005, 1984#, 1974#2009, #, 1974#2011, #, 1974#2013, #, #, 1986#2014, 1986#, #, 2009#2017, 2009#, #, 2011#2020, 2011#, 2000#2024, #, 2000#2026, #, 2026#2028, #, 2000#2030, #, 2000#2032, #, 2032#2034, #, 2032#2036, #, 1974#2038, #, 1974#2040, #, 1974#2042, #, 1974#2044, #, 1974#2046, #, #1974, #, 2013#2048, 2013#, #, 2038#2051, 2038#, #, 2040#2054, 2040#, #, 2042#2057, 2042#, #, 2044#2060, 2044#, 2000#2064, #, 1557#2066, #, 2066#2068, #, 2066#2070, #, 2066#2072, #, 2066#2074, #, 2066#2076, #, 2066#2078, #, 2066#2080, #, #, 2068#2081, 2068#, #, 2070#2084, 2070#, #, 2072#2087, 2072#, #, 2074#2090, 2074#, #, 2076#2093, 2076#, #, 2078#2096, 2078#, #, 2080#2099, 2080#, #, 2099#2102, #, 2099#2104, #, 2093#2106, #, 2093#2108, #, 2099#2110, 2066#2113, #, 2066#2115, #, 2066#2117, #, #, 2113#2118, 2113#, #2066, #2066, #, 2115#2123, 2115#, #, 2117#2126, 2117#, 2066#2130, #, 2066#2132, #, 2066#2134, #, #, 2130#2135, 2130#, #, 2132#2138, 2132#, #, 2134#2141, 2134#, 2066#2145, #, 2066#2147, #, 2066#2149, #, #, 2145#2150, 2145#, #, 2081#2153, #, 2081#2155, #, 2135#2157, #, 2135#2159, #, 2147#2161, 2147#, 1974#2165, #, 2165#2167, #, 1546#2169, #, 1546#2171, #, 1433#2173, #, #1437, #, 2177#2175, #, 1665#2177, #, 2181#2179, #, 1665#2181, #, 2185#2183, #, 1665#2185, 1929#2188, #, 2#2190, #, 2190#2192, #, 2190#2194, #, 2190#2196, #, 2190#2198, #, 2190#2200, #, 2190#2202, #, 2190#2204, #, #, 2194#2205, 2194#, #, 2196#2208, 2196#, #, 2198#2211, 2198#, #, 2200#2214, 2200#, #, 2202#2217, 2202#, #, 2204#2220, 2204#, 2190#2224, #, 2190#2226, #, 2190#2228, #, 2190#2230, #, #, 2224#2231, 2224#, #, 2226#2234, 2226#, #, 2228#2237, 2228#, #, 2230#2240, 2230#, 2190#2244, #, 2190#2246, #, 2190#2248, #, #, 2244#2249, 2244#, #, 2246#2252, 2246#, #2190, #, 2248#2256, 2248#, 2190#2260, #, 2190#2262, #, 2190#2264, #, 2190#2266, #, #, 2260#2267, 2260#, #, 2262#2270, 2262#, #, 2264#2273, 2264#, #, 2266#2276, 2266#, 2190#2280, #, 2190#2282, #, 2190#2284, #, #, 2284#2285, 2284#, #, 2280#2288, 2280#, #, 2282#2291, 2282#, 2190#2295, #, 2190#2297, #, 2190#2299, #, 2190#2301, #, #, 2295#2302, 2295#, #, 2297#2305, 2297#, #, 2299#2308, 2299#, #, 2301#2311, 2301#, 2190#2315, #, 2190#2317, #, 2190#2319, #, #, 2315#2320, 2315#, #, 2305#2323, #, 2305#2325, #, 2317#2327, 2317#, #, 2319#2330, 2319#, 2190#2334, #, #, 2334#2335, 2334#, 2190#2339, #, 2190#2341, #, 2190#2343, #, 2190#2345, #, 2190#2347, #, 2190#2349, #, #, 2341#2350, 2341#, #, 2343#2353, 2343#, #, 2345#2356, 2345#, #, 2347#2359, 2347#, #, 2349#2362, 2349#, 2190#2366, #, 2190#2368, #, 2190#2370, #, #, 2366#2371, 2366#, #, 2368#2374, 2368#, #, 2370#2377, 2370#, 2190#2381, #, #, 2381#2382, 2381#, 2190#2386, #, 2386#2388, #, 2386#2390, #, 2386#2392, #, 87#2394, #, 2394#2396, #, 2394#2398, #, 2394#2400, #, 2394#2402, #, 2394#2404, #, #2435, #, 2398#2406, 2398#, #, 2400#2409, 2400#, #, 2402#2412, 2402#, 2394#2416, #, 2394#2418, #, 2394#2420, #, #, 2404#2421, 2404#, #, 2406#2424, #, 2406#2426, #, 2416#2428, 2416#, #, 2418#2431, 2418#, 2394#2435, #, 2190#2437, #, 2437#2439, #, 2437#2441, #, 2437#2443, #, 2437#2445, #, 2437#2447, #, 2437#2449, #, #, 2439#2450, 2439#, #, 2441#2453, 2441#, #, 2443#2456, 2443#, #, 2445#2459, 2445#, #, 2456#2462, #, 2456#2464, #, 2447#2466, 2447#, 2437#2470, #, #, 2470#2471, 2470#, 2437#2475, #, 2437#2477, #, #, 2449#2478, 2449#, #, 2471#2481, #, 2471#2483, #, 2475#2485, 2475#, #, 2477#2488, 2477#, 2437#2492, #, 2437#2494, #, 2437#2496, #, 2437#2498, #, #, 2492#2499, 2492#, #, 2494#2502, 2494#, #, 2496#2505, 2496#, #, 2498#2508, 2498#, 2437#2512, #, 2512#2514, #, 2437#2516, #, 2437#2518, #, 2437#2520, #, 2437#2522, #, 2437#2524, #, #, 2516#2525, 2516#, #, 2518#2528, 2518#, #, 2520#2531, 2520#, #, 2522#2534, 2522#, 2437#2538, #, #, 2524#2539, 2524#, 2437#2543, #, 2437#2545, #, 2437#2547, #, 2437#2549, #, #, 2543#2550, 2543#, #, 2545#2553, 2545#, #, 2547#2556, 2547#, #, 2549#2559, 2549#, 2512#2563, #, 2512#2565, #, 2565#, 2565#2568, #, 2394#2570, #, 2570#, 16#2573, #, 2573#2575, #, 2573#2577, #, 2573#2579, #, 16#2581, #, 2581#2583, #, 2581#2585, #, 2581#2587, #, 2581#2589, #, 2190#2591, #, 2591#2593, #, 2591#2595, #, 2591#2597, #, 2591#2599, #, 2591#2601, #, 2591#2603, #, 2591#2605, #, #, 2593#2606, 2593#, #, 2595#2609, 2595#, #, 2597#2612, 2597#, #, 2599#2615, 2599#, #, 2601#2618, 2601#, #2591, #, 2603#2622, 2603#, #, 2605#2625, 2605#, 2591#2629, #, 2591#2631, #, 2591#2633, #, 2591#2635, #, #, 2629#2636, 2629#, #, 2631#2639, 2631#, #, 2636#2642, #, 2636#2644, #, 2633#2646, 2633#, #, 2635#2649, 2635#, 2591#2653, #, #, 2653#2654, 2653#, 2591#2658, #, 2591#2660, #, 2591#2662, #, 2591#2664, #, 2591#2666, #, 2591#2668, #, #, 2658#2669, 2658#, #, 2660#2672, 2660#, #, 2669#2675, #, 2669#2677, #, 2662#2679, 2662#, #, 2664#2682, 2664#, #, 2666#2685, 2666#, #, 2668#2688, 2668#, 2190#2692, #, 2692#, 2692#2695, #, 2692#2697, #, 2692#2699, #, 2692#2701, #, 2692#2703, #, 2692#2705, #, 2692#2707, #, #, 2695#2708, 2695#, #, 2697#2711, 2697#, #, 2699#2714, 2699#, #, 2701#2717, 2701#, #, 2703#2720, 2703#, #, 2705#2723, 2705#, 2692#2727, #, 2692#2729, #, 2692#2731, #, #, 2707#2732, 2707#, #, 2727#2735, 2727#, #, 2729#2738, 2729#, #, 2731#2741, 2731#, #, 2738#2744, #, 2738#2746, 2692#2749, #, 2692#2751, #, 2692#2753, #, #, 2749#2754, 2749#, 2692#2758, #, 2692#2760, #, 2692#2762, #, #, 2758#2763, 2758#, #, 2760#2766, 2760#, #2692, #2692, #, 2751#2771, 2751#, #, 2753#2774, 2753#, #, 2754#2777, #, 2754#2779, #, 2762#2781, 2762#, 2692#2785, #, 2692#2787, #, 2692#2789, #, #, 2785#2790, 2785#, #, 2787#2793, 2787#, #, 2789#2796, 2789#, 2692#2800, #, 2692#2802, #, 2692#2804, #, #, 2800#2805, 2800#, #, 2802#2808, 2802#, #, 2804#2811, 2804#, 2692#2815, #, 2692#2817, #, 2692#2819, #, 2692#2821, #, 2692#2823, #, #, 2815#2824, 2815#, #, 2817#2827, 2817#, #, 2819#2830, 2819#, #, 2821#2833, 2821#, #, 2823#2836, 2823#, 2692#2840, #, 2692#2842, #, 2692#2844, #, 2692#2846, #, 2692#2848, #, 2692#2850, #, #, 2840#2851, 2840#, #, 2842#2854, 2842#, #, #, #2867, #, 2844#2860, 2844#, #, 2846#2863, 2846#, 2692#2867, #, 2867#2869, #, 2867#2871, #, 2867#2873, #, 2867#2875, #, 2867#2877, #, 2867#2879, #, #, 2869#2880, 2869#, #, 2871#2883, 2871#, #, 2873#2886, 2873#, #, 2875#2889, 2875#, #, 2877#2892, 2877#, #, 2889#2895, #, 2889#2897, #, 2879#2899, 2879#, 2867#2903, #, 2867#2905, #, 2867#2907, #, 2867#2909, #, 2867#2911, #, #, 2903#2912, 2903#, #, 2905#2915, 2905#, 2867#2919, #, 2867#2921, #, 2867#2923, #, #, 2907#2924, 2907#, #, 2909#2927, 2909#, #, 2919#2930, 2919#, #, 2921#2933, 2921#, #, 2930#2936, #, 2930#2938, #, 2927#2940, #, 2927#2942, #, 2923#2944, 2923#, 2867#2948, #, 2867#2950, #, #, 2948#2951, 2948#, #, 2950#2954, 2950#, 2867#2958, #, 2867#2960, #, 2867#2962, #, 2867#2964, #, 2867#2966, #, #, 2958#2967, 2958#, #, 2960#2970, 2960#, #, 2962#2973, 2962#, 2867#2977, #, 2867#2979, #, 2867#2981, #, 2867#2983, #, 2867#2985, #, #, 2964#2986, 2964#, #, 2966#2989, 2966#, #, 2977#2992, 2977#, #, 2989#2995, #, 2989#2997, #, 2979#2999, 2979#, #, 2981#3002, 2981#, #, 2983#3005, 2983#, #, 2985#3008, 2985#, 2867#3012, #, 2867#3014, #, 2867#3016, #, #, 3012#3017, 3012#, #, 3014#3020, 3014#, #, 3016#3023, 3016#, #, 3017#3026, #, 3017#3028, #, 2924#3030, #, 2924#3032, 2867#3035, #, 2867#3037, #, 2867#3039, #, 2867#3041, #, #, 3035#3042, 3035#, #, 3037#3045, 3037#, #, 3039#3048, 3039#, #, 3041#3051, 3041#, 2867#3055, #, #, 3055#3056, 3055#, 2867#3060, #, 2867#3062, #, 2867#3064, #, 2867#3066, #, #, 3060#3067, 3060#, #, 3062#3070, 3062#, 2190#3074, #, 3074#, 3074#3077, #, 3074#3079, #, 3074#3081, #, 3074#3083, #, 3074#3085, #, 3074#3087, #, #2867, #, 3077#3089, 3077#, #, 3079#3092, 3079#, #, 3081#3095, 3081#, #, 3092#3098, #, 3092#3100, #, 3083#3102, 3083#, #, 3085#3105, 3085#, #, 3087#3108, 3087#, 3074#3112, #, 3074#3114, #, 3074#3116, #, 3074#3118, #, 3074#3120, #, #, 3112#3121, 3112#, 2867#3125, #, #, 3064#3126, 3064#, #, 3066#3129, 3066#, #, 3023#3132, #, 3023#3134, 2867#3137, #, 2867#3139, #, 2867#3141, #, #, 3137#3142, 3137#, #, 3139#3145, 3139#, #, 3141#3148, 3141#, 3125#3152, #, #3171, 3125#3155, #, 2867#3157, #, #, 3160#3158, #, 1456#3160, #, 3164#3162, #, 1456#3164, #, 3168#3166, #, 1456#3168, 2692#3171, #, 3171#3173, #, 3171#3175, #, 3171#3177, #, 3171#3179, #, 3171#3181, #, 3171#3183, #, 3171#3185, #, #, 3173#3186, 3173#, #, 3175#3189, 3175#, #, 3177#3192, 3177#, #, 3179#3195, 3179#, #, 3181#3198, 3181#, #, 3189#3201, #, 3189#3203, #, 3183#3205, 3183#, #, 3185#3208, 3185#, #, 3192#3211, #, 3192#3213, 3171#3216, #, 3171#3218, #, 3171#3220, #, 3171#3222, #, #, 3216#3223, 3216#, #, 3218#3226, 3218#, #, 3220#3229, 3220#, #, 3226#3232, #, 3226#3234, #, 3208#3236, #, 3208#3238, #, 3222#3240, 3222#, 3171#3244, #, 3171#3246, #, 3171#3248, #, 3171#3250, #, #, 3244#3251, 3244#, #, 3246#3254, 3246#, #, 3248#3257, 3248#, #, 3250#3260, 3250#, 3171#3264, #, 3171#3266, #, 3171#3268, #, 3171#3270, #, #, 3264#3271, 3264#, #, 3266#3274, 3266#, #, 3268#3277, 3268#, 3171#3281, #, 3171#3283, #, 3171#3285, #, 3171#3287, #, 3171#3289, #, #, 3270#3290, 3270#, #, 3281#3293, 3281#, #3171, #, 3283#3297, 3283#, #, 3271#3300, #, 3271#3302, #, 3274#3304, #, 3274#3306, #, 3277#3308, #, 3277#3310, #, 3285#3312, 3285#, #, 3287#3315, 3287#, #, 3289#3318, 3289#, 3171#3322, #, 3171#3324, #, 3171#3326, #, 3171#3328, #, #, 3322#3329, 3322#, #, 3324#3332, 3324#, #, 3326#3335, 3326#, #, 3318#3338, #, 3318#3340, #, 3328#3342, 3328#, 3171#3346, #, 3171#3348, #, 3171#3350, #, 3171#3352, #, #, 3346#3353, 3346#, #, 3348#3356, 3348#, #, 3342#3359, #, 3342#3361, #, 3350#3363, 3350#, #, 3356#3366, #, 3356#3368, #, 3352#3370, 3352#, 3171#3374, #, 3171#3376, #, 3171#3378, #, 3171#3380, #, #, 3374#3381, 3374#, #, 3376#3384, 3376#, #, 3378#3387, 3378#, #, 3380#3390, 3380#, 3171#3394, #, 3171#3396, #, 3171#3398, #, #, 3394#3399, 3394#, #, 3396#3402, 3396#, #, 3398#3405, 3398#, 3171#3409, #, #3482, 3171#3412, #, #, 3412#3413, 3412#, 3171#3417, #, 3171#3419, #, 3171#3421, #, 3171#3423, #, #, 3417#3424, 3417#, #, 3419#3427, 3419#, #, 3424#3430, #, 3424#3432, 3171#3435, #, 3171#3437, #, #, 3435#3438, 3435#, #, 3437#3441, 3437#, 3171#3445, #, 3445#3447, #, 3445#3449, #, 3445#3451, #, 3445#3453, #, #, 3447#3454, 3447#, #, 3449#3457, 3449#, #, 3451#3460, 3451#, #, 3454#3463, #, 3454#3465, #, 3453#3467, 3453#, 3445#3471, #, 3445#3473, #, 3445#3475, #, 3445#3477, #, #, 3471#3478, 3471#, 2190#3482, #, 3482#, 3482#3485, #, 3482#3487, #, 3482#3489, #, 3482#3491, #, 3482#3493, #, 3482#3495, #, #, 3485#3496, 3485#, #, 3487#3499, 3487#, #, 3489#3502, 3489#, #, 3491#3505, 3491#, #, 3493#3508, 3493#, #, 3502#3511, #, 3502#3513, #, 3495#3515, 3495#, 3482#3519, #, 3482#3521, #, 3482#3523, #, #, 3519#3524, 3519#, #, 3521#3527, 3521#, #, 3523#3530, 3523#, 3482#3534, #, 3482#3536, #, 3482#3538, #, #, 3534#3539, 3534#, 2591#3543, #, 3543#3545, #, 3543#3547, #, 3543#3549, #, 3543#3551, #, 3543#3553, #, 3543#3555, #, #2591, #, 3545#3557, 3545#, #, 3547#3560, 3547#, #, 3549#3563, 3549#, #, 3551#3566, 3551#, #, 3553#3569, 3553#, #, 3555#3572, 3555#, 2591#3576, #, 2591#3578, #, 2591#3580, #, 2591#3582, #, 2591#3584, #, #, 3576#3585, 3576#, #, 3578#3588, 3578#, #, 3580#3591, 3580#, #, 3582#3594, 3582#, #, 3591#3597, #, 3591#3599, 2591#3602, #, 2591#3604, #, 2591#3606, #, #, 3584#3607, 3584#, #, 3602#3610, 3602#, #2591, #, 3604#3614, 3604#, #, 3606#3617, 3606#, 2591#3621, #, 2591#3623, #, 2591#3625, #, 2591#3627, #, 2591#3629, #, #, 3621#3630, 3621#, #, 3623#3633, 3623#, 2591#3637, #, 2591#3639, #, 2591#3641, #, #, 3637#3642, 3637#, #, 3639#3645, 3639#, #, 3625#3648, 3625#, #, 3627#3651, 3627#, #2591, #, 3629#3655, 3629#, 2591#3659, #, 2591#3661, #, 2591#3663, #, 2591#3665, #, #, 3659#3666, 3659#, #, 3661#3669, 3661#, #, 3663#3672, 3663#, #, 3665#3675, 3665#, 2591#3679, #, 2591#3681, #, 2591#3683, #, #, 3679#3684, 3679#, #, 3681#3687, 3681#, 2591#3691, #, 2591#3693, #, 2591#3695, #, #, 3683#3696, 3683#, #, 3691#3699, 3691#, #, 3633#3702, #, 3633#3704, #, 3693#3706, 3693#, 2591#3710, #, 2591#3712, #, 2591#3714, #, #, 3695#3715, 3695#, #, 3710#3718, 3710#, #, 3712#3721, 3712#, #, 3714#3724, 3714#, 2591#3728, #, 3728#3730, #, 3728#3732, #, 3728#3734, #, 3728#3736, #, 3728#3738, #, 3728#3740, #, #3728, #, 3730#3742, 3730#, #, 3732#3745, 3732#, #, 3734#3748, 3734#, #, 3745#3751, #, 3745#3753, #, 3736#3755, 3736#, #, 3738#3758, 3738#, 3728#3762, #, 3728#3764, #, 3728#3766, #, 3728#3768, #, #, 3740#3769, 3740#, #, 3762#3772, 3762#, #, 3764#3775, 3764#, #, 3766#3778, 3766#, #, 3772#3781, #, 3772#3783, #, 3775#3785, #, 3775#3787, #, 3768#3789, 3768#, 3728#, #, #, #, #, #, 3796#3797, 3796#, 3728#3796, 3803#3811, 3803#, #, 3805#3811, 3732#, 3805#, 3809#3811, 3809#, #, 3811#, 3728#3796, 3792#3808, 3792#3809, 3792#3807, 3792#3806, 3792#3805, 3792#3804, 3792#3802, 3792#3803, 3792#3801, 3792#3810, 3792#3811, 3728#3824, #, 3728#3826, #, 3728#3828, #, 3728#3830, #, 3728#3832, #, 3728#3834, #, #, 3824#3835, 3824#, #, 3826#3838, 3826#, #, 3828#3841, 3828#, #, 3830#3844, 3830#, #, 3832#3847, 3832#, #, 3778#3850, #, 3778#3852, 3728#3855, #, 3728#3857, #, 3728#3859, #, 3728#3861, #, 3728#3863, #, #, 3834#3864, 3834#, #, 3855#3867, 3855#, #, 3857#3870, 3857#, #, 3859#3873, 3859#, #, 3861#3876, 3861#, #, 3863#3879, 3863#, #, 3870#3882, #, 3870#3884, #, 3876#3886, #, 3876#3888, 2591#3891, #, 3891#3893, #, 3891#3895, #, 3891#3897, #, 3891#3899, #, 3891#3901, #, 3891#3903, #, #, 3893#3904, 3893#, #, 3895#3907, 3895#, #, 3897#3910, 3897#, #, 3899#3913, 3899#, #, 3901#3916, 3901#, 3891#3920, #, #, 3920#3921, 3920#, 3891#3925, #, #, 3925#3926, 3925#, #, 3903#3929, 3903#, 3891#3933, #, #, 3933#3934, 3933#, 3891#3938, #, #, 3938#3939, 3938#, 3891#3943, #, 3891#3945, #, #, 3943#3946, 3943#, #, 3945#3949, 3945#, 3891#3953, #, #, 3953#3954, 3953#, 3891#, #, #, #, #, #, #, #, 3963#3964, 3963#, 3891#3963, #, #, #, #, #, 3971#3972, 3971#, 3891#3971, #, #, #, 3977#3978, 3977#, 3891#3977, #, #, #, 3983#3984, 3983#, 3891#3983, #, #, #, 3989#3990, 3989#, 3891#3989, #, #, #, 3995#3996, 3995#, 3891#3995, #, #, #, 4001#4002, 4001#, 3891#4001, #, #, #, #, #, #, #, #, #, #, #, #, #, #, #, 3891#4022, #, 3891#4024, #, 3891#4026, #, 3891#4028, #, #, 4022#4029, 4022#, #, 4024#4032, 4024#, #, 3996#4035, #, 3996#4037, #, 4002#4039, #, 4002#4041, #, 4026#4043, 4026#, #, 4028#4046, 4028#, #, #, #, #, #, #, 4053#4054, 4053#, 3891#4053, #, #, #, 4059#4060, 4059#, 3891#4059, 3891#4065, #, #, 4065#4066, 4065#, #, #, #, 4070#4071, 4070#, 3891#4070, #, #, #, 4076#4077, 4076#, 3891#4076, 4082#, 3891#4076, 3957#4081, 3957#4082, 3891#4086, #, #, 4086#4087, 4086#, 3891#4091, #, 3891#4093, #, 3891#4095, #, 3891#4097, #, #, 4091#4098, 4091#, #, 4093#4101, 4093#, #3891, #, 4095#4105, 4095#, #, 4097#4108, 4097#, 3891#4112, #, 3891#4114, #, 3891#4116, #, #, 4112#4117, 4112#, #, 4114#4120, 4114#, #, 4116#4123, 4116#, 3891#4127, #, 3891#4129, #, 3891#4131, #, 3891#4133, #, #, 4127#4134, 4127#, #, 4129#4137, 4129#, 3891#4141, #, #, 4141#4142, 4141#, 3891#4146, #, 3891#4148, #, 3891#4150, #, #, 4148#4151, 4148#, #, 4150#4154, 4150#, #, 4131#4157, 4131#, 3891#4161, #, 4161#4163, #, 4161#4165, #, 4161#4167, #, 4167#4169, #, #, 4167#4170, #, 4167#4172, #, 4167#4174, #, 4167#4176, #, 4172#4178, #, 4172#4180, #, 4172#4182, #, 4172#4184, #, 4172#4186, 4172#, #, 4172#4189, #, 4170#4191, #, 4170#4193, #, 4170#4195, #, 4170#4197, #, 4170#4199, 4170#, #, 4170#4202, 4174#4205, #, 4174#4207, #, 4176#4209, #, 4176#4211, #, 4176#4213, #, 4176#4215, #, 4167#4217, #, 4167#4219, #, 4167#4221, #, 4167#4223, #, 4170#4225, #, 4161#4227, #, #4246, #, 4167#4229, 4229#4232, #, 4229#4234, #, #, 4167#4235, 4167#4238, 4235#4205, 4167#4240, 4235#4207, 4235#4242, #, 4161#4244, #, 4244#4246, #, 4246#4248, #, 4246#4250, #, 4246#4252, #, 4246#4254, #, 4246#4256, #, #, 4248#4257, 4248#, #, 4250#4260, 4250#, #, 4252#4263, 4252#, 4244#4267, #, 4246#4269, #, 4246#4271, #, 4246#4273, #, 4246#4275, #, 4246#4277, #, #4246, #, 4254#4279, 4254#, #, 4256#4282, 4256#, #, 4269#4285, 4269#, #, 4271#4288, 4271#, #, 4273#4291, 4273#, #, 4275#4294, 4275#, #, 4277#4297, 4277#, 4246#4301, #, #, 4301#4302, 4301#, 4246#4306, #, 4246#4308, #, 4246#4310, #, #, 4306#4311, 4306#, #, 4302#4314, #, 4302#4316, #, 4308#4318, 4308#, 4244#4322, #, 4244#4324, #, 3891#4326, #, #4392, 4326#4329, #, #, 4329#4330, 4329#, 4326#, #, #, #, 4335#4336, 4335#, 4326#4335, #, #, #, 4341#4342, 4341#, 4326#4341, 4347#, 4326#4341, 4333#4346, 4333#4347, 4326#4351, #, 4326#4353, #, 4326#4355, #, #, 4351#4356, 4351#, #, 4353#4359, 4353#, 4227#4363, #, 4227#4365, #, 4246#4367, #, 4246#4369, #, 4246#4371, #, 4246#4373, #, #, 4310#4374, 4310#, #, 4367#4377, 4367#, #, 4369#4380, 4369#, #, 4371#4383, 4371#, #, 4373#4386, 4373#, 4244#4390, #, 3891#4392, #, 4392#4394, #, 4392#4396, #, 4392#4398, #, 4392#4400, #, 4392#4402, #, #, 4394#4403, 4394#, #, 4396#4406, 4396#, #, 4398#4409, 4398#, 4392#4413, #, #, 4413#4414, 4413#, #, 4400#4417, 4400#, 4392#4421, #, 4392#4423, #, 4392#4425, #, #, 4402#4426, 4402#, #, 4421#4429, 4421#, #, 4423#4432, 4423#, #, 4425#4435, 4425#, 4392#4439, #, 4392#4441, #, #, 4439#4442, 4439#, #, 4441#4445, 4441#, 4392#4449, #, #, 4449#4450, 4449#, 4392#4454, #, #, 4454#4455, 4454#, 4392#4459, #, 4392#4461, #, 4392#4463, #, 4392#4465, #, 4392#4467, #, #4392, #, 4459#4469, 4459#, #, 4461#4472, 4461#, #, 4463#4475, 4463#, #, 4465#4478, 4465#, #, 4467#4481, 4467#, #, 4475#4484, #, 4475#4486, 4392#4489, #, 4392#4491, #, 4392#4493, #, #, 4489#4494, 4489#, #, 4491#4497, 4491#, #, 4493#4500, 4493#, 4392#4504, #, 4392#4506, #, 4392#4508, #, 4392#4510, #, #, 4504#4511, 4504#, #, 4506#4514, 4506#, #, 4508#4517, 4508#, 4392#4521, #, 4392#4523, #, 4392#4525, #, #, 4510#4526, 4510#, #, 4521#4529, 4521#, #, 4523#4532, 4523#, #, 4525#4535, 4525#, #, 4517#4538, #, 4517#4540, 4392#4543, #, #, 4543#4544, 4543#, 4392#4548, #, #, 4548#4549, 4548#, 4246#4553, #, #, 4553#4554, 4553#, #4571, #, 4560#4558, #, 4223#4560, #, 4564#4562, #, 4223#4564, #, 4568#4566, #, 4223#4568, 3891#4571, #, 4571#4573, #, #, 4573#4574, 4573#, 4571#4578, #, 4571#4580, #, 4571#4582, #, #, 4578#4583, 4578#, #, 4580#4586, 4580#, #, 4582#4589, 4582#, 4571#, #, #, #, #, #, 4596#4597, 4596#, 4571#4596, #, #, 4601#4602, 4601#, 4571#4601, 4571#4607, #, 4571#4609, #, #, 4607#4610, 4607#, 4571#4614, #, #, 4609#4615, 4609#, #, 4614#4618, 4614#, #, #, #, #, 4623#4624, 4623#, 4571#4623, #, #, #, #, 4630#4631, 4630#, 4571#4630, 4571#4636, #, 4571#4638, #, #, 4636#4639, 4636#, #, 4638#4642, 4638#, 4571#4646, #, #, 4646#4647, 4646#, 4571#4651, #, #, 4651#4652, 4651#, #, 4639#4655, #, 4639#4657, #, 4642#4659, #, 4642#4661, #, #, 4663#4664, 4663#, 4571#4663, 4571#4669, #, #, 4669#4670, 4669#, #4571, #, #, 4674#4675, 4674#, 4571#4674, #, #, 4679#4680, 4679#, 4571#4679, #, #, #, #, #, #, #, #, 4690#4691, 4690#, 4571#4690, 4697#4699, 4697#, #, 4699#, #, 4699#4703, 4703#, 4703#, 4571#, 4592#4696, 4592#4697, 4592#4695, 4592#4698, 4592#4699, 4592#4700, 4592#4702, 4592#4701, 4592#4703, 3891#4714, #, 4714#4716, #, 4714#4718, #, 4714#4720, #, 4714#4722, #, #, 4716#4723, 4716#, #, 4718#4726, 4718#, #, 4720#4729, 4720#, #, 4722#4732, 4722#, #, 4726#4735, #, 4726#4737, 4714#4740, #, 4714#4742, #, 4714#4744, #, 4714#4746, #, #, 4740#4747, 4740#, #, 4742#4750, 4742#, 2591#4754, #, 3594#del, 2267#del, #, 4761#4757, 4761#4760, 4761#, #, 2591#4761, 4757#del, 2273#del, #, 4769#4765, 4769#4768, 4769#, #, 2591#4769, 4765#del, 
### 内容
#0, 19:
文档\物理问题\plasma.ftxt
## end
#2, 567:
+[返回目录](,等离子体)
地址::文档\物理问题\plasma.ftxt

Nini, 导入词典的库. 导入词典
Nini, 导入网页画板的库
Nini, 导入公式分析器的库. Nini, 导入公式结构的库
Nini, 导入PPT的库. Nini, 导入图形库的库
Nini, 导入三维场景的库

Nini, 打开相对论双折射(文件)
Nini, 打开周报告(文件)
Nini, 打开等离子体折射率(文件)
Nini, 打开Smilei生成器(文件)

课本1::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf
+[打开网页](,课本1)
Richard笔记:...
基本材料::https://farside.ph.utexas.edu/teaching/plasma/lectures1/Plasmahtml.html
+[打开网页](,基本材料)
笔记:...

等离子体中的波:...
折射率:...
流体方程分析:...
变化介质:...
模拟场景:...
其它:...
+[新建阅读窗口](,等离子体中的波)
+[新建阅读窗口](,流体方程分析)
+[新建阅读窗口](,模拟场景)
+[新建阅读窗口](,折射率)
+[新建阅读窗口](,其它)


## end
#3, 50:
等离子体:...
创建于 20210521

节点数目统计::
+[设置结构](,节点数目统计)


## end
#6, 71:
https://farside.ph.utexas.edu/teaching/plasma/lectures1/Plasmahtml.html
## end
#8, 836:
+[返回目录](,Richard笔记)
+[修改标题]"Richard笔记"(,笔记)

基本材料::https://farside.ph.utexas.edu/teaching/plasma/lectures1/Plasmahtml.html
+[打开网页](,基本材料)

MHD是指magnetohydrodynamics. 
等离子体的研究似乎主要是为核物理和天体物理服务的. 所以, 研究等离子体的稳定结构和在磁场中的性质, 是目前为止的研究重点. 


第三章::https://farside.ph.utexas.edu/teaching/plasma/lectures1/node27.html
+[打开网页](,第三章)
然后关于等离子体方程. 
出发点是Vlasov equations. 基本上是玻尔兹曼输运方程+Maxwell方程. 
通过转化为流体方程来简化计算. 
转化的过程中, 会写出任意阶moment的守恒方程, 同时会有多种带电粒子的问题. 
于是可以简化. 
首先是高阶的moment可以用低阶moment表示. (大概是粘滞系数张量可以用温度之类的表示)
然后是离子质量远大于电子的简化. 
然后是冷等离子体的简化. 
还有无碰撞的简化. 但是无碰撞会导致方程失去局域化的性质. 
在这个简化过程中就有了MHD. 
最后讨论了一个固体表面等离子体的方程. 

非均匀等离子体::https://farside.ph.utexas.edu/teaching/plasma/lectures1/node53.html
+[打开网页](,非均匀等离子体)
这里的方程有研究的价值. 
这一章很有研究价值. 先讨论了均匀等离子体中波的性质. 解出了色散关系并讨论了性质. 然后讨论了非均匀等离子体的方程, 用WKB的方法处理. 后面在Ray tracing里面介绍了WKB方法更高阶的近似怎么解. 

MHD似乎不适用于我需要的情况. 


## end
#10, 67:
https://farside.ph.utexas.edu/teaching/plasma/lectures1/node27.html
## end
#12, 67:
https://farside.ph.utexas.edu/teaching/plasma/lectures1/node53.html
## end
#14, 71:
https://farside.ph.utexas.edu/teaching/plasma/lectures1/Plasmahtml.html
## end
#16, 539:
+[返回目录](,笔记)

Tang02: 这篇是讲MHD的, 是用来做托克马克的模拟的...
Cummer97: 这篇比较了多种数值方法的精度和稳定性. 是我要的...
Lee99: 用3D的FDTD模拟研究了变化的plasma产生新频率的性质...
CannonDis: 用FDTD研究了无线电波在地外空间的传播... 

目前整体的感觉是, 等离子体问题MHD是模拟磁场下的等离子体, 物理条件比较特殊, 但是这个方程比较重要. 这是因为它可以用来模拟托克马克里面的等离子体. 
然后, 等离子体问题是有研究各种不同环境中的等离子体(比如固体表面和宇宙空间). 是研究等离子体本身的性质, 所以各种不稳定性很重要. 

而我关心的那一类问题, 就是等离子体中的电磁波, 好像用微扰论的做法就是常规做法. 模拟的话, FDTD也是比较常规的选择. 


我也不关心等离子体的演化, 做一个基于微扰论的数值模拟工具是有意义的. 
更精确的模拟我可以用PIC来做. 但是PIC不容易跑, 如果有一个微扰的工具, 我可以快速和自己的理论计算做对比, 然后也能比较地输出和PIC对比的结果. 

行了, 用Cummer97里面的(4)做吧. 


朗道:...
课本:...




## end
#18, 91:
+[返回目录](,Tang02)
论文::file:///C:/Users/cheng/Desktop/paper/Plasma/Tang02.pdf
+[打开网页](,论文)



## end
#20, 54:
file:///C:/Users/cheng/Desktop/paper/Plasma/Tang02.pdf
## end
#22, 94:
+[返回目录](,Cummer97)
论文::file:///C:/Users/cheng/Desktop/paper/Plasma/Cummer97.pdf
+[打开网页](,论文)


## end
#24, 56:
file:///C:/Users/cheng/Desktop/paper/Plasma/Cummer97.pdf
## end
#26, 145:
+[返回目录](,等离子体中的波)
FDTD::文档\物理问题\FDTD.ftxt
+[打开文件](+新窗口,FDTD)
+[新建阅读窗口](,等离子体中的波)

等离子体方程(html):...
+[H函数](,等离子体方程)
Young's DI(M函数):...

笔记:...



## end
#28, 17:
文档\物理问题\FDTD.ftxt
## end
#30, 69:
%{
+[M函数](,查看拟合曲线)
%}



plot(x_E,Ex,x_E',predict(nlModel,x_E'),'--')
## end
#32, 206:
%{
+[M函数](,等离子体色散曲线)
%}

physics_constant;
n_e=1e24;

omega_p=sqrt(n_e*e^2/me/epsilon0);
lm_p=2*pi*c/omega_p

lm=linspace(400e-9,33e-6,1000);
omega=2*pi*c./lm;
n_r=sqrt(1-omega_p^2./omega.^2);
plot(lm,n_r)

## end
#33, 32:
Matlab\FDTD\measure_wavelength.m
## end
#36, 458:
%{
+[返回目录](,测量波长)
+[M函数](,测量波长)

地址::Matlab\FDTD\measure_wavelength.m
+[保存文本](,测量波长)
%}

function [lm,nlModel]=measure_wavelength(x,y0,lm0)

physics_constant;
% y0=Ex(3:end);
% x=x_E(3:end);

p0=zeros(1,3);
p0(1)=max(y0);
p0(2)=2*pi/lm0;
p0(3)=acos(y0(1)/p0(1));
modelFun = @(p,x) p(1)*cos(p(2)*x+p(3));
nlModel=fitnlm(x,y0,modelFun,p0);
p=nlModel.Coefficients.Estimate;

% plot(x_E,Ex,x_E',predict(nlModel,x_E'),'--')
lm=2*pi/p(2);

end

%{
+[M函数](,测量波长)
%}
## end
#37, 19:
Matlab\FDTD\model.m
## end
#40, 2329:
%{
+[返回目录](,数值模型)
+[M函数](,数值模型)
地址::Matlab\FDTD\model.m
+[保存文本](,数值模型)

%}

function [x_E,Ex,Ey,x_B,Bx,By]=model(dx,dt,N,T,lm0,A,E0,n_e)
physics_constant;

%dx=50e-9;
%dt=dx/c;

%N=1000;
%T=1000;

%lm0=500e-9;
%A=[1,1i];
%E0=1e10;


fx=@(t)A(1)*exp(-1i*2*pi*t*c/lm0);
fy=@(t)A(2)*exp(-1i*2*pi*t*c/lm0);

t1=(1:T)*dt;
t2=(1:T)*dt+dt/2;
Ex_in=E0*real(fx(t1));
Ey_in=E0*real(fy(t1));
Bx_in=-E0/c*real(fy(t2));
By_in=E0/c*real(fx(t2));


x=(1:2*N-1)*dx/2;
x_E=x(1:2:2*N-1);
x_B=x(2:2:2*N-1);

Ex=zeros(1,N);
Ey=zeros(1,N);
Bx=zeros(1,N-1);
By=zeros(1,N-1);

Ex_out=zeros(1,T);
Ey_out=zeros(1,T);
Bx_out=zeros(1,T);
By_out=zeros(1,T);

n=zeros(1,2*N-1)+n_e;
vx=zeros(1,2*N-1);
vy=zeros(1,2*N-1);
vz=zeros(1,2*N-1);

for t=1:T
    dEx=zeros(size(Ex));
    dEy=zeros(size(Ey));
    Ex(1)=Ex_in(t);
    Ey(1)=Ey_in(t);
    Bx(1)=Bx_in(t);
    By(1)=By_in(t);

    Ex(N)=Ex(N-1);
    Ey(N)=Ey(N-1);
    for i=2:N-1
        dEx(i)=-(By(i)-By(i-1))*c^2/dx;
        dEy(i)=(Bx(i)-Bx(i-1))*c^2/dx;
    end
    dEx=dEx+mu0*e*n(1:2:end).*vx(1:2:end);
    dEy=dEy+mu0*e*n(1:2:end).*vy(1:2:end);
    Ex=Ex+dEx*dt;
    Ey=Ey+dEy*dt;


    dBx=zeros(size(Bx));
    dBy=zeros(size(By));
    for i=1:N-1
        dBx(i)=(Ey(i+1)-Ey(i))/dx;
        dBy(i)=-(Ex(i+1)-Ex(i))/dx;
    end
    Bx=Bx+dBx*dt;
    By=By+dBy*dt;

    % flow
    ex=interp1(x_E,Ex,x);
    ey=interp1(x_E,Ey,x);
    %ez=interp1(x_E,Ez,x);
    ez=zeros(1,2*N-1);

    bx=interp1(x_B,Bx,x);
    by=interp1(x_B,By,x);
    %bz=interp1(x_B,Bz,x);
    bz=zeros(1,2*N-1);

    fx=-e*ex-e*(vy.*bz-vz.*by);
    fy=-e*ey-e*(vz.*bx-vx.*bz);
    fz=-e*ez-e*(vx.*by-vy.*bx);

    dn=zeros(1,2*N-1);
    dvx=zeros(1,2*N-1);
    dvy=zeros(1,2*N-1);
    dvz=zeros(1,2*N-1);

    n(1)=n(2);
    n(N)=n(N-1);
    vx(1)=vx(2);
    vx(N)=vx(N-1);
    vy(1)=vy(2);
    vy(N)=vy(N-1);
    vz(1)=vz(2);
    vz(N)=vz(N-1);
    for k=2:2*N-2
        dn(k)=-(n(k+1)*vz(k+1)-n(k-1)*vz(k-1));
        dvx(k)=-vz(k)*(vx(k+1)-vx(k-1))+fx(k)/me;
        dvy(k)=-vz(k)*(vy(k+1)-vy(k-1))+fy(k)/me;
    %    dvz(k)=-vz(k)*(vz(k+1)-vz(k-1))+fz(k)/me;
    end

    n=n+dn/dx*dt;
    vx=vx+dvx/dx*dt;
    vy=vy+dvy/dx*dt;
    vz=vz+dvz/dx*dt;
    

    Ex_out(t)=Ex(end);
    Ey_out(t)=Ey(end);
    Bx_out(t)=Bx(end);
    By_out(t)=By(end);

end


%{
+[M函数](,等离子体FDTD)
等离子体折射率(html):...
+[H函数](,等离子体折射率)
检验模型:...
%}

## end
#45, 591:
%{
+[返回目录](,波矢检测)
+[M函数](,波矢检测)
+[新建阅读窗口](,波矢检测)

数值模型(M函数):...
测量波长(M函数):...
等离子体色散曲线(M函数):...
+[修改标题]"测量波长"(,测量波矢)
%}

addpath('C:\Users\cheng\Dropbox\Struct\Structure1.2\Nini\Matlab\FDTD');
physics_constant;
dx=50e-9;
dt=dx/c;
mu=1;

N=1000;
T=1000;

A=[1,1i];
E0=1e10;
n_e=2e33;

lm1=500e-9;
lm2=50e-6;
lm_x=linspace(lm1,lm2,10);
n_r=ones(size(lm_x));

for i=1:length(lm_x)
    lm0=lm_x(i);
    [x_E,Ex,Ey,x_B,Bx,By]=model(dx,dt,N,T,lm0,A,E0,n_e);
    [lm,nlModel]=measure_wavelength(x_E,Ex,lm0);
    n_r(i)=lm0/lm;
end
plot(lm_x,n_r)

%{
+[M函数](,波矢检测)
查看拟合曲线(M函数):...
+[M函数](,查看拟合曲线)
%}
## end
#47, 111:
+[返回目录](,检验模型)

接下来我想通过比较模拟得到的等离子体折射率与理论计算到的等离子体折射率, 来确定误差大小. 
还是需要做成函数的... 
先是比较波矢. 

波矢检测:...
+[复制结构](,波矢检测)

## end
#49, 1347:
<!--
+[H函数](,等离子体折射率)
-->

Let us calculate some properties of lights propagating in the plasma. <br>
<br>
<b><u>Refractive index of plasma</u></b><br>
For an electron in a oscillating field, the dynamic equation is,
$$
\vec{F}=-e \vec{E}=m_e\dot{\vec{v}}
$$
Since it is an oscillating field,
$$
\vec{E}(t)=\vec{E} e^{-i \omega t}
$$
Then we have,
$$
\vec{E}=i\omega\frac{m_e}{e}\vec{v}
=-\frac{m_e\omega^2}{e^2}(-e\vec{r})
=-\frac{m_e\omega^2}{n_e e^2}\vec{P}
$$
The density of electrons is \(n_e\), and the \(\vec{P}\) is the polarization density. As a result, the electric susceptibility of the plasma is, 
$$
\vec{P}=\chi\epsilon_0 \vec{E}
=-\frac{n_e e^2}{m_e \omega^2}\vec{E}
$$$$
\chi=-\frac{n_e e^2}{m_e\epsilon_0 \omega^2}
$$
And we have the refractive index, 
$$
n=\frac{\sqrt{\epsilon\mu}}{\sqrt{\epsilon_0\mu_0}}
=\sqrt{(1+\chi)}
=\sqrt{1-\frac{n_e e^2}{m_e\epsilon_0 \omega^2}}
\equiv \sqrt{1-\frac{\omega_p^2}{\omega^2}}
$$$$
\omega_p=\sqrt{\frac{n_e e^2}{m_e\epsilon_0}}
$$
And,
$$
k=\frac{n\omega}{c}=\frac{\omega}{c}\sqrt{1-\frac{\omega_p^2}{\omega^2}}
=\frac{1}{c}\sqrt{{\omega^2}-{\omega_p^2}}
$$
The group velocity is, 
$$
dk=\frac{1}{c}d(\sqrt{{\omega^2}-{\omega_p^2}})
=\frac{\omega d \omega}{c\sqrt{\omega^2-\omega_p^2}}
$$$$
v_g=\frac{d\omega}{dk}=\frac{c\sqrt{\omega^2-\omega_p^2}}{\omega}=nc
$$

<!--
+[H函数](,等离子体折射率)
-->
## end
#53, 2701:
%{
+[返回目录](,等离子体FDTD)
+[新建阅读窗口](,等离子体FDTD)
+[M函数](,等离子体FDTD)
%}

physics_constant;
dx=50e-9;
dt=dx/c;
n_r=1;
mu=1;

N=1000;
T=1000;

lm0=500e-9;
A=[1,1i];
E0=1e10;
fx=@(t)A(1)*exp(-1i*2*pi*t*c/lm0);
fy=@(t)A(2)*exp(-1i*2*pi*t*c/lm0);

t1=(1:T)*dt;
t2=(1:T)*dt+dt/2;
Ex_in=E0*real(fx(t1));
Ey_in=E0*real(fy(t1));
Bx_in=-E0/c*real(fy(t2));
By_in=E0/c*real(fx(t2));


x=(1:2*N-1)*dx/2;
x_E=x(1:2:2*N-1);
x_B=x(2:2:2*N-1);

Ex=zeros(1,N);
Ey=zeros(1,N);
Bx=zeros(1,N-1);
By=zeros(1,N-1);

Ex_out=zeros(1,T);
Ey_out=zeros(1,T);
Bx_out=zeros(1,T);
By_out=zeros(1,T);

n=zeros(1,2*N-1)+1e44;
vx=zeros(1,2*N-1);
vy=zeros(1,2*N-1);
vz=zeros(1,2*N-1);

for t=1:T
    dEx=zeros(size(Ex));
    dEy=zeros(size(Ey));
    Ex(1)=Ex_in(t);
    Ey(1)=Ey_in(t);
    Bx(1)=Bx_in(t);
    By(1)=By_in(t);

    Ex(N)=Ex(N-1);
    Ey(N)=Ey(N-1);
    for i=2:N-1
        dEx(i)=-(By(i)-By(i-1))*c^2*n_r^2/dx;
        dEy(i)=(Bx(i)-Bx(i-1))*c^2*n_r^2/dx;
    end
    dEx=dEx+mu0*e*n(1:2:end).*vx(1:2:end);
    dEy=dEy+mu0*e*n(1:2:end).*vy(1:2:end);
    Ex=Ex+dEx*dt;
    Ey=Ey+dEy*dt;


    dBx=zeros(size(Bx));
    dBy=zeros(size(By));
    for i=1:N-1
        dBx(i)=(Ey(i+1)-Ey(i))/dx;
        dBy(i)=-(Ex(i+1)-Ex(i))/dx;
    end
    Bx=Bx+dBx*dt;
    By=By+dBy*dt;

    % flow
    ex=interp1(x_E,Ex,x);
    ey=interp1(x_E,Ey,x);
    %ez=interp1(x_E,Ez,x);
    ez=zeros(1,2*N-1);

    bx=interp1(x_B,Bx,x);
    by=interp1(x_B,By,x);
    %bz=interp1(x_B,Bz,x);
    bz=zeros(1,2*N-1);

    fx=-e*ex-e*(vy.*bz-vz.*by);
    fy=-e*ey-e*(vz.*bx-vx.*bz);
    fz=-e*ez-e*(vx.*by-vy.*bx);

    dn=zeros(1,2*N-1);
    dvx=zeros(1,2*N-1);
    dvy=zeros(1,2*N-1);
    dvz=zeros(1,2*N-1);

    n(1)=n(2);
    n(N)=n(N-1);
    vx(1)=vx(2);
    vx(N)=vx(N-1);
    vy(1)=vy(2);
    vy(N)=vy(N-1);
    vz(1)=vz(2);
    vz(N)=vz(N-1);
    for k=2:2*N-2
        dn(k)=-(n(k+1)*vz(k+1)-n(k-1)*vz(k-1));
        dvx(k)=-vz(k)*(vx(k+1)-vx(k-1))+fx(k)/me;
        dvy(k)=-vz(k)*(vy(k+1)-vy(k-1))+fy(k)/me;
    %    dvz(k)=-vz(k)*(vz(k+1)-vz(k-1))+fz(k)/me;
    end

    n=n+dn/dx*dt;
    vx=vx+dvx/dx*dt;
    vy=vy+dvy/dx*dt;
    vz=vz+dvz/dx*dt;
    

    if mod(t,15)==1
        subplot(2,2,1)
        plot(x_E/1e-6,Ex);
        xlabel('x [um]')
        title('E_x')

        subplot(2,2,2)
        plot(x/1e-6,vx);
        xlabel('x [um]')
        title('v_x')

        subplot(2,2,3)
        plot(x/1e-6,n);
        xlabel('x [um]')
        title('n')

        subplot(2,2,4)
        plot(x/1e-6,vz);
        xlabel('x [um]')
        title('v_z')
        pause(0.01)
    end


    Ex_out(t)=Ex(end);
    Ey_out(t)=Ey(end);
    Bx_out(t)=Bx(end);
    By_out(t)=By(end);

end


%{
+[M函数](,等离子体FDTD)
等离子体折射率(html):...
+[H函数](,等离子体折射率)
检验模型:...
%}

## end
#56, 3205:
<!--
+[H函数](,等离子体方程)

+[新建阅读窗口](,等离子体方程)
-->



By combining FDTD and cold flow equations, we have, 
$$
\begin{cases}
\nabla\times \vec{E}=-\frac{\partial \vec{B}}{\partial t}
\\
\nabla\times \vec{B}=\mu_0\epsilon_0\frac{\partial \vec{E}}{\partial t}
+\mu_0\vec{J}
\\
\nabla\cdot \vec{J}=-\frac{\partial \rho}{\partial t}
\\
\nabla\cdot (\vec{v}n\vec{p})=-\frac{\partial}{\partial t}(n\vec{p})+\vec{F}
\\
\vec{F}=\rho(\vec{E}+\vec{v}\times\vec{B})
\end{cases}
$$

We can prove in a cold flow, the momentum conservation and the energy conservation are same, 
$$
\nabla\cdot (\frac{\vec{v}\vec{v}^2}{2}n m_e)=-\frac{\partial }{\partial t}(\frac{n m_e \vec{v}^2}{2})+\vec{v}\cdot \vec{F}
$$
The equation can be divided by terms,
$$
\nabla\cdot (\frac{\vec{v}\vec{v}^2}{2}n)
=
\frac{\vec{v}^2}{2}\nabla\cdot (\vec{v} n)
+
(\vec{v} n) \cdot\nabla \frac{\vec{v}^2}{2}
$$$$
\frac{\partial }{\partial t}(\frac{n \vec{v}^2}{2})
=
(\frac{\vec{v}^2}{2})\frac{\partial n}{\partial t}
+
n \frac{\partial }{\partial t}(\frac{\vec{v}^2}{2})
$$
The energy conservation equation becomes,
$$
(\vec{v} n m_e) \cdot\nabla \frac{\vec{v}^2}{2}
=
-n m_e \frac{\partial }{\partial t}(\frac{\vec{v}^2}{2})
+
\vec{v}\cdot \vec{F}
$$
Similarly, the momentum conservation looks like, 
$$
(\vec{v} n m_e)\cdot\nabla \vec{v}
=
-n m_e\frac{\partial \vec{v}}{\partial t}
+\vec{F}
$$
Obviously, they are same. <br>
<br>


<b><u>1D flow equations</u></b><br>
In 1D situation, \(\frac{\partial}{\partial x}=0, \frac{\partial}{\partial y}=0\), then we have, 
$$
\nabla\cdot(n \vec{v})=\frac{\partial (n v_z)}{\partial z}
=-\frac{\partial n}{\partial t}
$$$$
(\vec{v}n m_e)\cdot \nabla v_i
=
(n m_e v_z)\frac{\partial}{\partial z} v_i
=
-n m_e \frac{\partial v_i}{\partial t}+F_i
$$
Or,
$$
\begin{cases}
\frac{\partial }{\partial z}(n v_z)
=-\frac{\partial n}{\partial t}
\\
(n m_e v_z)\frac{\partial v_i}{\partial z}
=
-n m_e \frac{\partial v_i}{\partial t}+F_i
\end{cases}
$$
It's easy to see that, if the density is uniform over the space, then the flow equations are just a single particle dynamic equation. <br>
<br>



<b><u>Numerical equations</u></b><br>
The easiest form of 1D numerical equations are, 
$$
\begin{cases}
\frac{1}{\delta t}[n(k;n+1)-n(k;n)]
=
-\frac{1}{2\delta}[n(k+1;n) v_z(k+1;n)-n(k-1;n) v_z(k-1;n)]
\\
F_x(k;n)=-e E_x(k;n) - e[v_y(k;n) B_z(k;n)-v_z(k;n) B_y(k;n)]
\\
F_y(k;n)=-e E_y(k;n) - e[v_z(k;n) B_x(k;n)-v_x(k;n) B_z(k;n)]
\\
F_z(k;n)=-e E_z(k;n) - e[v_x(k;n) B_y(k;n)-v_y(k;n) B_x(k;n)]

\\
\frac{1}{\delta t}\left[
v_i(k;n+1)-v_i(k;n)
\right]
=-\frac{v_z(k;n) }{2\delta}\left[
v_i(k+1;n)-v_i(k-1;n)
\right]
+\frac{1}{m_e}F_i(k;n)

\end{cases}
$$
And the FDTD equations are, 
$$
\begin{cases}

\frac{E_x(k;n+1)}{\delta t}
=\frac{E_x(k;n)}{\delta t}
-\frac{B_y(k;n)-B_y(k-1;n)}{\delta}n(k;n)^2 c^2-\mu_0 J_x(k;n)
\\
\frac{E_y(k;n+1)}{\delta t}
=\frac{E_y(k;n)}{\delta t}
+\frac{B_x(k;n)-B_x(k-1;n)}{\delta}n(k;n)^2 c^2-\mu_0 J_y(k;n)
\\
\frac{B_x(k;n+1)}{\delta t}
=\frac{B_x(k;n)}{\delta t}
+\frac{E_y(k+1;n+1)-E_y(k;n+1)}{\delta}
\\
\frac{B_y(k;n+1)}{\delta t}
=\frac{B_y(k;n)}{\delta t}
-\frac{E_x(k+1;n+1)-E_x(k;n+1)}{\delta}
\end{cases}
$$

<!--
+[H函数](,等离子体方程)

等离子体FDTD(M函数):...
+[M函数](,等离子体FDTD)
-->

## end
#59, 57:
+[返回目录](,Young's DI)

算法(html):...
+[H函数](,算法)
波矢检测:...


## end
#61, 19:
Matlab\FDTD\model.m
## end
#64, 2099:
%{
+[返回目录](,数值模型)
+[M函数](,数值模型)
地址::Matlab\FDTD\model.m
+[保存文本](,数值模型)

测试(M函数):...
+[M函数](,测试)
%}

function [x_E,Ex,Ey,x_B,Bx,By]=model(dx,dt,N,T,lm0,A,E0,n_e,show_mode)
physics_constant;

%dx=50e-9;
%dt=dx/c;

%N=1000;
%T=1000;

%lm0=500e-9;
%A=[1,1i];
%E0=1e10;


fx=@(t)A(1)*exp(-1i*2*pi*t*c/lm0);
fy=@(t)A(2)*exp(-1i*2*pi*t*c/lm0);

t1=(1:T)*dt;
t2=(1:T)*dt+dt/2;
Ex_in=E0*real(fx(t1));
Ey_in=E0*real(fy(t1));
Bx_in=-E0/c*real(fy(t2));
By_in=E0/c*real(fx(t2));


x=(1:2*N-1)*dx/2;
x_E=x(1:2:2*N-1);
x_B=x(2:2:2*N-1);

Ex=zeros(1,N);
Ey=zeros(1,N);
Bx=zeros(1,N-1);
By=zeros(1,N-1);

Ex_out=zeros(1,T);
Ey_out=zeros(1,T);
Bx_out=zeros(1,T);
By_out=zeros(1,T);

Jx=zeros(1,N);
Jy=zeros(1,N);
Jz=zeros(1,N);

wp=sqrt(n_e*e^2/me/epsilon0);
v=0; 

for t=1:T
    % current
    Jx_0=Jx;
    Jy_0=Jy;
    Jx=(2-v*dt)/(2+v*dt)*Jx+(2*epsilon0*wp^2*dt)/(2+v*dt)*Ex;
    Jy=(2-v*dt)/(2+v*dt)*Jy+(2*epsilon0*wp^2*dt)/(2+v*dt)*Ey;


    dEx=zeros(size(Ex));
    dEy=zeros(size(Ey));
    Ex(1)=Ex_in(t);
    Ey(1)=Ey_in(t);
    Bx(1)=Bx_in(t);
    By(1)=By_in(t);

    Ex(N)=Ex(N-1);
    Ey(N)=Ey(N-1);
    for i=2:N-1
        dEx(i)=-(By(i)-By(i-1))*c^2/dx;
        dEy(i)=(Bx(i)-Bx(i-1))*c^2/dx;
    end
    dEx=dEx-mu0*(Jx+Jx_0)/2;
    dEy=dEy-mu0*(Jy+Jy_0)/2;
    Ex=Ex+dEx*dt;
    Ey=Ey+dEy*dt;


    dBx=zeros(size(Bx));
    dBy=zeros(size(By));
    for i=1:N-1
        dBx(i)=(Ey(i+1)-Ey(i))/dx;
        dBy(i)=-(Ex(i+1)-Ex(i))/dx;
    end
    Bx=Bx+dBx*dt;
    By=By+dBy*dt;

    

    if mod(t,15)==1 && show_mode==1
        subplot(2,2,1)
        plot(x_E/1e-6,Ex);
        xlabel('x [um]')
        title('E_x')

        subplot(2,2,2)
        plot(x_E/1e-6,Ey);
        xlabel('x [um]')
        title('E_y')

        subplot(2,2,3)
        plot(x_E/1e-6,Jx);
        xlabel('x [um]')
        title('J_x')

        subplot(2,2,4)
        plot(x_E/1e-6,Jy);
        xlabel('x [um]')
        title('J_y')
        pause(0.01)
    end

    Ex_out(t)=Ex(end);
    Ey_out(t)=Ey(end);
    Bx_out(t)=Bx(end);
    By_out(t)=By(end);

end


%{
+[M函数](,等离子体FDTD)
等离子体折射率(html):...
+[H函数](,等离子体折射率)
检验模型:...
%}

## end
#65, 32:
Matlab\FDTD\measure_wavelength.m
## end
#68, 458:
%{
+[返回目录](,测量波长)
+[M函数](,测量波长)

地址::Matlab\FDTD\measure_wavelength.m
+[保存文本](,测量波长)
%}

function [lm,nlModel]=measure_wavelength(x,y0,lm0)

physics_constant;
% y0=Ex(3:end);
% x=x_E(3:end);

p0=zeros(1,3);
p0(1)=max(y0);
p0(2)=2*pi/lm0;
p0(3)=acos(y0(1)/p0(1));
modelFun = @(p,x) p(1)*cos(p(2)*x+p(3));
nlModel=fitnlm(x,y0,modelFun,p0);
p=nlModel.Coefficients.Estimate;

% plot(x_E,Ex,x_E',predict(nlModel,x_E'),'--')
lm=2*pi/p(2);

end

%{
+[M函数](,测量波长)
%}
## end
#70, 206:
%{
+[M函数](,等离子体色散曲线)
%}

physics_constant;
n_e=1e24;

omega_p=sqrt(n_e*e^2/me/epsilon0);
lm_p=2*pi*c/omega_p

lm=linspace(400e-9,33e-6,1000);
omega=2*pi*c./lm;
n_r=sqrt(1-omega_p^2./omega.^2);
plot(lm,n_r)

## end
#72, 69:
%{
+[M函数](,查看拟合曲线)
%}



plot(x_E,Ex,x_E',predict(nlModel,x_E'),'--')
## end
#77, 593:
%{
+[返回目录](,波矢检测)
+[M函数](,波矢检测)
+[新建阅读窗口](,波矢检测)

数值模型(M函数):...
测量波长(M函数):...
等离子体色散曲线(M函数):...
+[修改标题]"测量波长"(,测量波矢)
%}

addpath('C:\Users\cheng\Dropbox\Struct\Structure1.2\Nini\Matlab\FDTD');
physics_constant;
dx=50e-9;
dt=dx/c;
mu=1;

N=1000;
T=1000;

A=[1,1i];
E0=1e10;
n_e=2e33;

lm1=500e-9;
lm2=50e-6;
lm_x=linspace(lm1,lm2,10);
n_r=ones(size(lm_x));

for i=1:length(lm_x)
    lm0=lm_x(i);
    [x_E,Ex,Ey,x_B,Bx,By]=model(dx,dt,N,T,lm0,A,E0,n_e,0);
    [lm,nlModel]=measure_wavelength(x_E,Ex,lm0);
    n_r(i)=lm0/lm;
end
plot(lm_x,n_r)

%{
+[M函数](,波矢检测)
查看拟合曲线(M函数):...
+[M函数](,查看拟合曲线)
%}
## end
#80, 1324:
<!--
+[返回目录](,算法)

+[H函数](,算法)
-->
The equations are, 
$$
\nabla \times \vec{E}=-\frac{\partial \vec{B}}{\partial t}
\\
\nabla \times \vec{B}=\epsilon_0 \frac{\partial \vec{E}}{\partial t}+\mu_0 \vec{J}
\\
\frac{\partial \vec{J}}{\partial t} + v \vec{J}=\epsilon_0 \omega_p^2 \vec{E}
$$

The FDTD equations are, 
$$
\begin{cases}

\frac{E_x(k;n+1)}{\delta t}
=\frac{E_x(k;n)}{\delta t}
-\frac{B_y(k;n)-B_y(k-1;n)}{\delta}c^2-\mu_0 J_x(k;n)
\\
\frac{E_y(k;n+1)}{\delta t}
=\frac{E_y(k;n)}{\delta t}
+\frac{B_x(k;n)-B_x(k-1;n)}{\delta}c^2-\mu_0 J_y(k;n)
\\
\frac{B_x(k;n+1)}{\delta t}
=\frac{B_x(k;n)}{\delta t}
+\frac{E_y(k+1;n+1)-E_y(k;n+1)}{\delta}
\\
\frac{B_y(k;n+1)}{\delta t}
=\frac{B_y(k;n)}{\delta t}
-\frac{E_x(k+1;n+1)-E_x(k;n+1)}{\delta}
\end{cases}
$$

For Young's DI, the current equation is, 
$$
\frac{\vec{J}(k;n+1)}{\delta t}
+
v\frac{\vec{J}(k;n+1)}{2}
=
\frac{\vec{J}(k;n)}{\delta t}
-
v\frac{\vec{J}(k;n)}{2}
+
\epsilon_0 \omega_p^2 \vec{E}(k;n+1)
$$
$$
(\frac{2+v\delta t}{2\delta t})
\vec{J}(k;n+1)
=
(\frac{2-v\delta t}{2\delta t})
\vec{J}(k;n)
+
\epsilon_0 \omega_p^2 \vec{E}(k;n+1)
$$
$$
\vec{J}(k;n+1)
=
(\frac{2-v\delta t}{2+v\delta t})
\vec{J}(k;n)
+
(\frac{2\epsilon_0 \omega_p^2 \delta t }{2+v\delta t})
\vec{E}(k;n+1)
$$

$$
\omega_p=\sqrt{\frac{n_e e^2}{m_e\epsilon_0}}
$$

<!--
+[H函数](,算法)
-->
## end
#83, 363:
%{
+[返回目录](,测试)
+[M函数](,测试)
%}

addpath('C:\Users\cheng\Dropbox\Struct\Structure1.2\Nini\Matlab\FDTD');
physics_constant;
dx=50e-9;
dt=dx/c;
mu=1;

N=1000;
T=1000;

A=[1,1i];
E0=1e10;
n_e=2e33;

lm1=500e-9;

lm0=lm1;
[x_E,Ex,Ey,x_B,Bx,By]=model(dx,dt,N,T,lm0,A,E0,n_e,1);
%[lm,nlModel]=measure_wavelength(x_E,Ex,lm0);
%n_r=lm0/lm;
plot(x_E,Ex)


%{
+[M函数](,测试)
%}
## end
#87, 1127:
<!--
Nini, 打开公式分析器(文件)
+[H函数](,折射率)
Nini, 打开相对论双折射(文件)
相对论振荡(html):...
质量张量(html):...
波动方程(html):...
+[H函数](,波动方程)
+[新建阅读窗口](,波动方程)
(这里是目前最完整的形式了)
磁场双折射(html):...
相对论双折射(html):...
磁场电流耦合(html):...
+[H函数](,磁场双折射)
+[H函数](,波动方程)
+[新建阅读窗口](,波动方程)
+[新建阅读窗口](,磁场双折射)
+[新建阅读窗口](,相对论双折射)
+[新建阅读窗口](,磁场电流耦合)

群速度(html):...
+[新建阅读窗口](,群速度)
-->

<h2>Relativistic plasma flow</h2>
For a plane wave with angular frequency \(\omega\), we have an equation below,
%[1].
%[2].
%[3].
%[4].
%[5].
%[6].

The above equations are incorrect, because I didn't consider the Lorentz force of a plane wave. A plane wave follow an equation,
%[7].
%[8].
%[9].
Then the force of the plane wave is,
%[10].
%[11].
%[12].
%[13].
Then the polarization density is, 
%[14].
%[15].
%[16].

As a result, the eq.[2] should be modified to,
%[17].
%[18].



<!--
+[H函数](,折射率)
[18].:
式(9)转换为"表达式"
将"\mat{C}=1+(\vec{\beta}\cdot \vec{k_0})-\vec{\beta}*\vec{k_0}"记作为式(18)
式(15)转换为"表达式"
\mat{C}=1+(\vec{\beta_0}\cdot \vec{k_0})-\vec{\beta_0}*\vec{k_0}

式(4)转换为"表达式"
将"\vec{F}=-e*\vec{E}-e*\vec{v_0}\times \vec{B}"记作为式(10)



验证公式(M函数):...
+[新建阅读窗口](,验证公式)
+[H函数](,折射率)
-->
## end
#89, 108:
\left(1-\vec{k_0}\ \vec{k_0}-\frac{\omega^{2}}{c^{2}\ k^{2}}\ \left(1+\chi_{plasma}\right)\right)\ \vec{E}=0
## end
#90, 74:
(1-\vec{k_0}*\vec{k_0}-\frac{\omega^2}{c^2*k^2}*(1+\chi_plasma))*\vec{E}=0
## end
#94, 111:
\chi_{plasma}=\frac{n_{e}\ e^{2}}{\epsilon_{0}\ \omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}
## end
#96, 77:
\mathbf{M}=\gamma\ m_{e}\ \left(1+\gamma^{2}\ \vec{\beta}\ \vec{\beta}\right)
## end
#98, 91:
\mathbf{B}=\begin{pmatrix}
0&-B_{z}&B_{y}\\ B_{z}&0&-B_{x}\\ -B_{y}&B_{x}&0
\end{pmatrix}


## end
#99, 80:
\chi_plasma=\frac{n_e*e^2}{\epsilon_0*\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1}
## end
#102, 55:
\mat{M}=\gamma*m_e*(1+\gamma^2*\vec{\beta}*\vec{\beta})
## end
#105, 46:
\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}
## end
#109, 840:
%{
+[M函数](,验证公式)

func_max:...
plasma_refractive_index(M函数):...

Y_r斜率:...
Y_r形状:...
n_r对比:...
折射率曲线:...

介质传播:...
保存:...
%}

physics_constant;
addpath('Matlab/funcs');
addpath('Matlab/plasma');

k_r=[0,0,1];
lm_0=800e-9;

L=100e-6;
n_e=1e26;
gamma=1;
beta_r=[0,1,0];
B0=[0,0,1];

k_0=2*pi/lm_0;

[n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0);

z=linspace(L*0.9,L,10000);
E1_x=E1(1)*exp(1i*k_0*z);
E1_y=E1(2)*exp(1i*k_0*z);
E2_x=E2(1)*exp(1i*k_0*z);
E2_y=E2(2)*exp(1i*k_0*z);

subplot(1,2,1)
plot(z/1e-6,E1_x,z/1e-6,E1_y);
xlabel('z [um]')
ylabel('Intensity [a.u.]')
axis([min(z)/1e-6,max(z)/1e-6,-1,1])
legend('E_x','E_y')
title('E_1')

subplot(1,2,2)
plot(z/1e-6,E2_x,z/1e-6,E2_y);
xlabel('z [um]')
ylabel('Intensity [a.u.]')
axis([min(z)/1e-6,max(z)/1e-6,-1,1])
legend('E_x','E_y')
title('E_2')

%{
+[M函数](,验证公式)
%}
## end
#112, 35:
\gamma=\frac{1}{\sqrt{1-\beta^{2}}}
## end
#113, 33:
\gamma=\frac{1}{\sqrt{1-\beta^2}}
## end
#117, 40:
\beta=\frac{\sqrt{\gamma^{2}-1}}{\gamma}
## end
#118, 38:
\beta=\frac{\sqrt{\gamma^2-1}}{\gamma}
## end
#122, 754:
%{
+[M函数](,Y_r斜率)
%}

physics_constant;
B_x=0;
B_y=0;
B_z=1;
%gamma=10;
gamma=1;
beta_r=[0,1,0];
n_e=1e25;
lm_0=800e-9;
k_r=[0,0,1];

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);
%k_0=[0,0,0];

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);

chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1)
M_r=@(n)eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma);
f_r=@(n)det(eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma));

n_r=linspace(0.9,2,1000);
Y_r=zeros(size(n_r));
for i=1:length(n_r)
    Y_r(i)=f_r(n_r(i));
end

dY_r=diff(Y_r);
n_r2=(n_r(2:end)+n_r(1:end-1))/2;
plot(n_r2,dY_r,n_r2(dY_r<0),dY_r(dY_r<0))

%{
+[M函数](,Y_r斜率)
%}
## end
#124, 765:
%{
+[M函数](,验证公式)

Y_r斜率:...
保存:...
%}

physics_constant;
addpath('Matlab\funcs');

B_x=0;
B_y=0;
B_z=1;
gamma=1;
beta_r=[0,1,0];
n_e=1e26;
lm_0=800e-9;
k_r=[0,0,1];

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);
%k_0=[0,0,0];

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);

chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);
M_r=@(n)eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma);
f_r=@(n)det(eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma));

n_r=linspace(0.9708,0.971,1000);
Y_r=zeros(size(n_r));
for i=1:length(n_r)
    Y_r(i)=f_r(n_r(i));
end

max(Y_r)
n_r(Y_r==max(Y_r))
plot(n_r,Y_r,n_r(Y_r>0),Y_r(Y_r>0))

%{
+[M函数](,验证公式)
%}
## end
#126, 357:
%{
地址::Matlab\funcs\func_max.m
+[保存M函数](,func_max)
+[M函数](,func_max)
%}


function x=func_max(f,x0,Dx,N)
%f=@(x)x.^2;
%x0=1;
%Dx=1;
%N=100;


x=x0;
if N>0
    if f(x)<f(x+Dx)
        x=func_max(f,x+Dx,Dx,N-1);
    elseif f(x)<f(x-Dx)
        x=func_max(f,x-Dx,Dx,N-1);
    else
        x=func_max(f,x,Dx/2,N-1);
    end
end


end

%{
+[M函数](,func_min)
%}



## end
#128, 23:
Matlab\funcs\func_max.m
## end
#134, 931:
%{
+[M函数](,验证公式)

func_max:...

Y_r斜率:...
保存:...
%}

physics_constant;
addpath('Matlab\funcs');

B_x=0;
B_y=0;
B_z=0;
gamma=2;
beta_r=[0,1,0];
n_e=1e26;
lm_0=800e-9;
k_r=[0,0,1];

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);
%k_0=[0,0,0];

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);

chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);
M_r=@(n)eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma);
f_r=@(n)det(eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma));

n_max=func_max(f_r,1,0.5,40);
Dn=0.5;
n_out=zeros(1,2);
if f_r(n_max)<0
    n_out=[n_max,n_max];
else
    n_out(1)=func_zero(f_r,n_max,n_max+Dn,40);
    n_out(2)=func_zero(f_r,n_max,n_max-Dn,40);
end

n_r=linspace(n_out(1),n_out(2),1000);
Y_r=zeros(size(n_r));
for i=1:length(n_r)
Y_r(i)=f_r(n_r(i));
end
plot(n_r,Y_r)


%{
+[M函数](,验证公式)
%}
## end
#136, 1073:
%{
创建"Matlab\plasma"
地址::Matlab\plasma\plasma_refractive_index.m

plasma_refractive_index1:...
(zero版本)
plasma_refractive_index2:...
(忘了加平面光洛伦兹力的版本)

测试:...
+[M函数](,测试)
+[保存M函数](,plasma_refractive_index)
%}

function [n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0)
physics_constant;
addpath('Matlab/funcs');

%lm_0=800e-9;
%k_r=[0,0,1];
%n_e=1e26;
%gamma=2;
%beta_r=[0,1,0];
%B0=[0,0,0];

B_x=B0(1);
B_y=B0(2);
B_z=B0(3);

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);
% chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);

C=eye(3)+(beta*k_0')-beta'*k_0;
chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1)*C;
A=(eye(3)-k_0'*k_0)/(eye(3)+chi_plasma);

values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(1/result(1,2));
n2=sqrt(1/result(1,3));
n_out=[n1,n2];

E1=result(2:end,2);
E2=result(2:end,3);

end


%{
+[M函数](,验证公式)
%}
## end
#139, 995:
%{
+[M函数](,n_r对比)
%}

physics_constant;
addpath('Matlab\funcs');

B_x=0;
B_y=0;
B_z=1000;
gamma=1;
beta_r=[0,1,0];
n_e=1e26;
lm_0=800e-9;
k_r=[0,0,1];

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);
%k_0=[0,0,0];

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);

chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);
A=(eye(3)-k_0'*k_0)/(eye(3)+chi_plasma);
values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(1/result(1,2))
n2=sqrt(1/result(1,3))

E1=result(2:end,2);
E2=result(2:end,3);


M_r=@(n)eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma);
f_r=@(n)det(eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma));

n_max=func_max(f_r,1,0.5,40);
Dn=0.5;
n_out=zeros(1,2);
if f_r(n_max)<0
    n_out=[n_max,n_max];
else
    n_out(1)=func_zero(f_r,n_max,n_max+Dn,40);
    n_out(2)=func_zero(f_r,n_max,n_max-Dn,40);
end


[n1,n2]
n_out
%{
+[M函数](,n_r对比)
%}
## end
#141, 39:
Matlab\plasma\plasma_refractive_index.m
## end
#148, 955:
%{
创建"Matlab\plasma"
地址::Matlab\plasma\plasma_refractive_index.m

+[保存M函数](,plasma_refractive_index)
%}

function n_out=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0)
physics_constant;
addpath('Matlab\funcs');

%lm_0=800e-9;
%k_r=[0,0,1];
%n_e=1e26;
%gamma=2;
%beta_r=[0,1,0];
%B0=[0,0,0];

B_x=B0(1);
B_y=B0(2);
B_z=B0(3);

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);

chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);
M_r=@(n)eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma);
f_r=@(n)det(eye(3)-k_0'*k_0-1./n.^2.*(eye(3)+chi_plasma));

n_max=func_max(f_r,1,0.5,40);
Dn=0.5;
n_out=zeros(1,2);
if f_r(n_max)<0
    n_out=[n_max,n_max];
else
    n_out(1)=func_zero(f_r,n_max,n_max+Dn,40);
    n_out(2)=func_zero(f_r,n_max,n_max-Dn,40);
end

end


%{
+[M函数](,验证公式)
%}
## end
#150, 222:
%{
+[M函数](,测试)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

lm_0=800e-9;
k_r=[0,0,1];
n_e=1e26;
gamma=2;
beta_r=[0,1,0];
B0=[0,0,0];

n_out=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0)
## end
#152, 462:
%{
+[M函数](,折射率曲线)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

k_r=[0,0,1];
n_e=1e25;
gamma=1.5;
beta_r=[0,1,0];
B0=[0,0,1];

lm_0=linspace(400e-9,3000e-9,100);
n1=zeros(size(lm_0));
n2=zeros(size(lm_0));

for i=1:length(lm_0)
n_out=plasma_refractive_index(lm_0(i),k_r,n_e,gamma,beta_r,B0);
n1(i)=n_out(1);
n2(i)=n_out(2);
end

plot(lm_0/1e-9,n1,lm_0/1e-9,n2)
xlabel('Wavelength [nm]')
ylabel('Refractive index')

%{
+[M函数](,验证公式)
%}
## end
#154, 1086:
%{
+[M函数](,介质传播)
EigDecomposition(M函数):...
FR公式::https://farside.ph.utexas.edu/teaching/em/lectures/node101.html
+[打开网页](,FR公式)

Nini, 打开相对论双折射(文件)
本征模:...
空间分布:...
输出偏振:...
+[M函数](,空间分布)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

k_r=[0,0,1];
lm_0=800e-9;
E0=[1,1i,0];

L=100e-6;
T=100e-15;
n_e=1e26;
gamma=2;
beta_r=[0,1,0];
B0=[0,0,100];
%{
+[M函数](,介质传播)
%}

k_0=2*pi/lm_0;
omega_0=c*k_0;

[n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0);
[A1,A2]=EigDecomposition(E0,E1,E2);

E_x=A1*E1(1)*exp(1i*k_0*L*n_out(1))+A2*E2(1)*exp(1i*k_0*L*n_out(2));
E_y=A1*E1(2)*exp(1i*k_0*L*n_out(1))+A2*E2(2)*exp(1i*k_0*L*n_out(2));

t=linspace(0,T,10000);
E0_x=E0(1)*exp(-1i*omega_0*t);
E0_y=E0(2)*exp(-1i*omega_0*t);
E1_x=E_x*exp(-1i*omega_0*t);
E1_y=E_y*exp(-1i*omega_0*t);

subplot(1,2,1)
plot(t/1e-15,E1_x,t/1e-15,E1_y);
xlabel('t [fs]')
ylabel('Intensity [a.u.]')
axis([min(t)/1e-15,max(t)/1e-15,-2,2])
legend('E_x','E_y')

subplot(1,2,2)
plot(real(E0_x),real(E0_y),real(E1_x),real(E1_y))
axis equal
legend('Input','Output')

%{
+[M函数](,介质传播)
%}
## end
#156, 739:
%{
+[M函数](,本征模)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

k_r=[0,0,1];
lm_0=800e-9;

L=100e-6;
n_e=1e26;
gamma=1.0001;
beta_r=[0,1,0];
B0=[0,0,1];

k_0=2*pi/lm_0;

[n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0);

z=linspace(L*0.9,L,10000);
E1_x=E1(1)*exp(1i*k_0*z);
E1_y=E1(2)*exp(1i*k_0*z);
E2_x=E2(1)*exp(1i*k_0*z);
E2_y=E2(2)*exp(1i*k_0*z);

subplot(1,2,1)
plot(z/1e-6,E1_x,z/1e-6,E1_y);
xlabel('z [um]')
ylabel('Intensity [a.u.]')
axis([min(z)/1e-6,max(z)/1e-6,-1,1])
legend('E_x','E_y')
title('E_1')

subplot(1,2,2)
plot(z/1e-6,E2_x,z/1e-6,E2_y);
xlabel('z [um]')
ylabel('Intensity [a.u.]')
axis([min(z)/1e-6,max(z)/1e-6,-1,1])
legend('E_x','E_y')
title('E_2')

%{
+[M函数](,介质传播)
%}
## end
#158, 206:
%{
地址::Matlab\plasma\EigDecomposition.m
+[保存M函数](,EigDecomposition)
E1'*E2
%}


function [A1,A2]=EigDecomposition(E,E1,E2)

E=reshape(E,3,1);
E1=reshape(E1,3,1);
E2=reshape(E2,3,1);

A1=E1'*E;
A2=E2'*E;
end
## end
#161, 32:
Matlab\plasma\EigDecomposition.m
## end
#166, 63:
https://farside.ph.utexas.edu/teaching/em/lectures/node101.html
## end
#169, 865:
%{
+[M函数](,介质传播)
EigDecomposition(M函数):...
FR公式::https://farside.ph.utexas.edu/teaching/em/lectures/node101.html
+[打开网页](,FR公式)

Nini, 打开相对论双折射(文件)
本征模:...
+[M函数](,空间分布)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

k_r=[0,0,1];
lm_0=800e-9;
E0=[1,1i,0];

L=100e-6;
n_e=1e26;
gamma=1.5;
beta_r=[0,1,0];
B0=[0,0,0];
%{
+[M函数](,介质传播)
%}

k_0=2*pi/lm_0;

[n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0);
[A1,A2]=EigDecomposition(E0,E1,E2);


%z=linspace(L*0.9,L,10000);
z=linspace(0,L,10000);
E_x=A1*E1(1)*exp(1i*k_0*z*n_out(1))+A2*E2(1)*exp(1i*k_0*z*n_out(2));
E_y=A1*E1(2)*exp(1i*k_0*z*n_out(1))+A2*E2(2)*exp(1i*k_0*z*n_out(2));

plot(z/1e-6,E_x,z/1e-6,E_y);
xlabel('z [um]')
ylabel('Intensity [a.u.]')
axis([min(z)/1e-6,max(z)/1e-6,-1,1])
legend('E_x','E_y')
axis([min(z)/1e-6,max(z)/1e-6,-2,2])


%{
+[M函数](,空间分布)
%}
## end
#171, 1077:
%{
+[M函数](,介质传播)
EigDecomposition(M函数):...
FR公式::https://farside.ph.utexas.edu/teaching/em/lectures/node101.html
+[打开网页](,FR公式)

Nini, 打开相对论双折射(文件)
本征模:...
空间分布:...
+[M函数](,介质传播)
%}

physics_constant;
addpath('Matlab\funcs');
addpath('Matlab\plasma');

k_r=[0,0,1];
lm_0=800e-9;
E0=[1,1i,0];

L=100e-6;
T=100e-15;
n_e=1e26;
gamma=2;
beta_r=[0,1,0];
B0=[0,0,100];
%{
+[M函数](,介质传播)
%}

k_0=2*pi/lm_0;
omega_0=c*k_0;

[n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0);
[A1,A2]=EigDecomposition(E0,E1,E2);

E_x=A1*E1(1)*exp(1i*k_0*L*n_out(1))+A2*E2(1)*exp(1i*k_0*L*n_out(2));
E_y=A1*E1(2)*exp(1i*k_0*L*n_out(1))+A2*E2(2)*exp(1i*k_0*L*n_out(2));

t=linspace(0,T,10000);
E0_x=E0(1)*exp(-1i*omega_0*t);
E0_y=E0(2)*exp(-1i*omega_0*t);
E1_x=E_x*exp(-1i*omega_0*t);
E1_y=E_y*exp(-1i*omega_0*t);

subplot(1,2,1)
plot(t/1e-15,E1_x,t/1e-15,E1_y);
xlabel('t [fs]')
ylabel('Intensity [a.u.]')
axis([min(t)/1e-15,max(t)/1e-15,-2,2])
legend('E_x','E_y')

subplot(1,2,2)
plot(real(E0_x),real(E0_y),real(E1_x),real(E1_y))
axis equal
legend('Input','Output')

%{
+[M函数](,输出偏振)
%}
## end
#173, 61:
\nabla\times \vec{E}=-\frac{\partial^1 \vec{B}}{\partial t\ }
## end
#174, 42:
\nabla\times \vec{E}=-\partial{t}{\vec{B}}
## end
#178, 43:
i\ \vec{k}\times \vec{E}=i\ \omega\ \vec{B}
## end
#179, 40:
i*\vec{k}\times \vec{E}=i*\omega*\vec{B}
## end
#183, 34:
\vec{k_0}\times \vec{E}=c\ \vec{B}
## end
#184, 33:
\vec{k_0}\times \vec{E}=c*\vec{B}
## end
#188, 46:
\vec{F}=-e\ \vec{E}-e\ \vec{v_0}\times \vec{B}
## end
#189, 44:
\vec{F}=-e*\vec{E}-e*\vec{v_0}\times \vec{B}
## end
#193, 79:
\vec{F}=-e\ \vec{E}+e\ \left(\vec{k_0}\times \vec{E}\right)\times \vec{\beta_0}
## end
#194, 66:
\vec{F}=-e*\vec{E}+e*(\vec{k_0}\times \vec{E})\times \vec{\beta_0}
## end
#198, 131:
\vec{F}=-e\ \left(1-\left(\vec{k_0}\cdot \vec{\beta_0}\right)\right)\ \vec{E}-e\ \vec{\beta_0}\ \left(\vec{k_0}\cdot \vec{E}\right)
## end
#199, 94:
\vec{F}=-e*(1-(\vec{k_0}\cdot \vec{\beta_0}))*\vec{E}-e*\vec{\beta_0}*(\vec{k_0}\cdot \vec{E})
## end
#203, 102:
\vec{F}=-e\ \left(1-\left(\vec{\beta_0}\cdot \vec{k_0}\right)+\vec{\beta_0}\ \vec{k_0}\right)\ \vec{E}
## end
#204, 77:
\vec{F}=-e*(1-(\vec{\beta_0}\cdot \vec{k_0})+\vec{\beta_0}*\vec{k_0})*\vec{E}
## end
#208, 110:
\vec{P}=-n_{e}\ \left(\frac{e}{\omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}\right)\ \vec{F}
## end
#209, 74:
\vec{P}=-n_e*(\frac{e}{\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1})*\vec{F}
## end
#213, 196:
\vec{P}=n_{e}\ \left(\frac{e^{2}}{\omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}\right)\ \left(1-\left(\vec{\beta_0}\cdot \vec{k_0}\right)+\vec{\beta_0}\ \vec{k_0}\right)\ \vec{E}
## end
#214, 136:
\vec{P}=n_e*(\frac{e^{2}}{\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1})*(1-(\vec{\beta_0}\cdot \vec{k_0})+\vec{\beta_0}*\vec{k_0})*\vec{E}
## end
#218, 125:
\vec{P}=n_{e}\ \left(\frac{e^{2}}{\omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}\right)\ \mathbf{C}\ \vec{E}
## end
#219, 83:
\vec{P}=n_e*(\frac{e^2}{\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1})*\mat{C}*\vec{E}
## end
#223, 123:
\chi_{plasma}=\frac{n_{e}\ e^{2}}{\epsilon_{0}\ \omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}\ \mathbf{C}
## end
#224, 88:
\chi_plasma=\frac{n_e*e^2}{\epsilon_0*\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1}*\mat{C}
## end
#228, 936:
%{
创建"Matlab\plasma"
地址::Matlab\plasma\plasma_refractive_index.m

plasma_refractive_index1:...
(zero版本)
plasma_refractive_index2:...


测试:...
+[保存M函数](,plasma_refractive_index)
%}

function [n_out,E1,E2]=plasma_refractive_index(lm_0,k_r,n_e,gamma,beta_r,B0)
physics_constant;
addpath('Matlab\funcs');

%lm_0=800e-9;
%k_r=[0,0,1];
%n_e=1e26;
%gamma=2;
%beta_r=[0,1,0];
%B0=[0,0,0];

B_x=B0(1);
B_y=B0(2);
B_z=B0(3);

k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);

B=[0,-B_z,B_y;
B_z,0,-B_x;
-B_y,B_x,0];
M=gamma.*m_e.*(eye(3)+gamma.^(2).*beta'*beta);
chi_plasma=(n_e.*e.^(2))./(epsilon_0.*omega).*(-M.*omega+1i.*e.*B)^(-1);
A=(eye(3)-k_0'*k_0)/(eye(3)+chi_plasma);

values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(1/result(1,2));
n2=sqrt(1/result(1,3));
n_out=[n1,n2];

E1=result(2:end,2);
E2=result(2:end,3);

end


%{
+[M函数](,验证公式)
%}
## end
#230, 75:
\mathbf{C}=1-\left(\vec{\beta}\cdot \vec{k_0}\right)+\vec{\beta}\ \vec{k_0}
## end
#231, 60:
\mat{C}=1-(\vec{\beta}\cdot \vec{k_0})+\vec{\beta}*\vec{k_0}
## end
#235, 568:
<!--
+[H函数](,相对论振荡)
Nini, 打开公式结构(文件)
-->

The dynamic equation of a relativistic electron in an optical field is,
%[1].
%[2].
As a result the momentum is,
%[3].
%[4].
The relation between momentum and \(\gamma\) is,
%[5].
%[6].
%[7].
%[8].
%[9].

Then the velocity is,
%[10].

For a mixed \(e^-\) and \(e^+\) flow, the total current should be,
%[11].


<!--
+[H函数](,相对论振荡)
[11].:
式(10)转换为"Matlab"
将"\vec{j}=n_e*e*(\vec{v_p}-\vec{v_e})"记作为式(11)
将式(5)记作为式(8)
将式(7)代入到式(8)
将"v=\beta*c"代入到式(5)

的([3].,表达式)->+[显示星图](,表达式)

公式验证(M函数):...
+[新建阅读窗口](,公式验证)
+[H函数](,相对论振荡)
-->
## end
#238, 31:
\frac{d\vec{p}}{dt}=-e\ \vec{E}
## end
#239, 36:
\frac{\d{\vec{p}}}{\d{t}}=-e*\vec{E}
## end
#243, 33:
\vec{E}=\vec{E_0}\ cos(\omega\ t)
## end
#244, 31:
\vec{E}=\vec{E_0}*cos(\omega*t)
## end
#248, 68:
\vec{p}=-e\ \int_{}^{}{dt\ }{\left(\vec{E_0}\ cos(\omega\ t)\right)}
## end
#249, 51:
\vec{p}=-e*\int_{}^{}{t}{(\vec{E_0}*cos(\omega*t))}
## end
#253, 62:
\vec{p}=-\frac{e\ \vec{E_0}}{\omega}\ sin(\omega\ t)+\vec{p_0}
## end
#254, 59:
\vec{p}=-\frac{e*\vec{E_0}}{\omega}*sin(\omega*t)+\vec{p_0}
## end
#258, 38:
p=\gamma\ m_{e}\ \left(\beta\ c\right)
## end
#259, 22:
p=\gamma*m_e*(\beta*c)
## end
#263, 35:
\gamma=\frac{1}{\sqrt{1-\beta^{2}}}
## end
#265, 40:
\beta=\frac{\sqrt{\gamma^{2}-1}}{\gamma}
## end
#266, 33:
\gamma=\frac{1}{\sqrt{1-\beta^2}}
## end
#269, 38:
\beta=\frac{\sqrt{\gamma^2-1}}{\gamma}
## end
#273, 44:
p=m_{e}\ c\ \left(\sqrt{\gamma^{2}-1}\right)
## end
#275, 51:
\gamma=\sqrt{1+\left(\frac{p}{m_{e}\ c}\right)^{2}}
## end
#276, 29:
p=m_e*c*(\sqrt{\gamma^{2}-1})
## end
#279, 35:
\gamma=\sqrt{1+(\frac{p}{m_e*c})^2}
## end
#283, 37:
\vec{v}=\frac{\vec{p}}{\gamma\ m_{e}}
## end
#284, 34:
\vec{v}=\frac{\vec{p}}{\gamma*m_e}
## end
#288, 1986:
%{
+[M函数](,公式验证)
Nini, 打开等离子体折射率(文件)

理论曲线:...
Boris对比(M函数):...
Boris_relativistic_osc(M函数):...
计算E0(M函数):...
%}

physics_constant;
addpath('Matlab\Smilei');

lm_0=800e-9;
E0=4e11;
% E0=4e8;
E_r=[0,1,1];
E_0=E_r*E0;

gamma=1.8;
beta_r=[0,0,1];
% p_0=0;
beta=sqrt(1-1/gamma^2);
p_0=gamma*m_e*beta*c*beta_r;
v_0=beta_r*beta*c;

omega=2*pi*c/lm_0;

t=linspace(0,3*lm_0/c,1000);
dt=t(2)-t(1);

E_x=E_0(1)*cos(omega*t);
E_y=E_0(2)*cos(omega*t);
E_z=E_0(3)*cos(omega*t);

B_x=E_x*0;
B_y=-E_z/c;
B_z=E_y/c;

[~,~,~,vx_e_B,vy_e_B,vz_e_B]=Boris_relativistic_osc([0,0,0],v_0,dt,E_x,E_y,E_z,B_x,B_y,B_z,m_e,-e);
[~,~,~,vx_p_B,vy_p_B,vz_p_B]=Boris_relativistic_osc([0,0,0],v_0,dt,E_x,E_y,E_z,B_x,B_y,B_z,m_e,e);

beta_e_B=sqrt(vx_e_B.^2+vy_e_B.^2+vz_e_B.^2)/c;
beta_p_B=sqrt(vx_p_B.^2+vy_p_B.^2+vz_p_B.^2)/c;

gamma_e_B=1./sqrt(1-beta_e_B.^2);
gamma_p_B=1./sqrt(1-beta_p_B.^2);

j_x_B=e*(vx_p_B-vx_e_B);
j_y_B=e*(vy_p_B-vy_e_B);
j_z_B=e*(vz_p_B-vz_e_B);




px_e=-(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_e=-(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_e=-(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

px_p=(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_p=(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_p=(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

gamma_e=sqrt(1+(px_e.^2+py_e.^2+pz_e.^2)./(m_e.*c).^(2));
gamma_p=sqrt(1+(px_p.^2+py_p.^2+pz_p.^2)./(m_e.*c).^(2));

vx_e=(px_e)./(gamma_e.*m_e);
vy_e=(py_e)./(gamma_e.*m_e);
vz_e=(pz_e)./(gamma_e.*m_e);

vx_p=(px_p)./(gamma_p.*m_e);
vy_p=(py_p)./(gamma_p.*m_e);
vz_p=(pz_p)./(gamma_p.*m_e);

j_x=e*(vx_p-vx_e);
j_y=e*(vy_p-vy_e);
j_z=e*(vz_p-vz_e);



subplot(1,2,1)
plot(t/1e-15,j_y_B,t/1e-15,j_z_B,t/1e-15,j_y,'--',t/1e-15,j_z,'--')
xlabel('t [fs]')
ylabel('J [C\cdot m/s]')
legend('Boris J_y','Boris J_z','J_y','J_z')

subplot(1,2,2)
plot(t/1e-15,gamma_e_B,t/1e-15,gamma_p_B,t/1e-15,gamma_e,'--',t/1e-15,gamma_p,'--')
xlabel('t [fs]')
ylabel('\gamma')
legend('Boris \gamma_e','Boris \gamma_p','\gamma_e','\gamma_p')


%{
+[M函数](,公式验证)
%}
## end
#292, 50:
\vec{j}=n_{e}\ e\ \left(\vec{v_p}-\vec{v_e}\right)
## end
#293, 35:
\vec{j}=n_e*e*(\vec{v_p}-\vec{v_e})
## end
#297, 1942:
%{
+[M函数](,公式验证)

理论曲线:...
Boris对比(M函数):...
Boris_relativistic_osc(M函数):...
%}

physics_constant;
addpath('Matlab\Smilei');

lm_0=800e-9;
E0=4e10;
E_r=[0,1,1];
E_0=E_r*E0;

gamma=1.8;
beta_r=[0,0,1];
% p_0=0;
beta=sqrt(1-1/gamma^2);
p_0=gamma*m_e*beta*c*beta_r;
v_0=beta_r*beta*c;

omega=2*pi*c/lm_0;

t=linspace(0,3*lm_0/c,1000);
dt=t(2)-t(1);

E_x=E_0(1)*cos(omega*t);
E_y=E_0(2)*cos(omega*t);
E_z=E_0(3)*cos(omega*t);

B_x=E_x*0;
B_y=-E_z/c;
B_z=E_y/c;

[~,~,~,vx_e_B,vy_e_B,vz_e_B]=Boris_relativistic_osc([0,0,0],v_0,dt,E_x,E_y,E_z,B_x,B_y,B_z,m_e,-e);
[~,~,~,vx_p_B,vy_p_B,vz_p_B]=Boris_relativistic_osc([0,0,0],v_0,dt,E_x,E_y,E_z,B_x,B_y,B_z,m_e,e);

beta_e_B=sqrt(vx_e_B.^2+vy_e_B.^2+vz_e_B.^2)/c;
beta_p_B=sqrt(vx_p_B.^2+vy_p_B.^2+vz_p_B.^2)/c;

gamma_e_B=1./sqrt(1-beta_e_B.^2);
gamma_p_B=1./sqrt(1-beta_p_B.^2);

j_x_B=e*(vx_p_B-vx_e_B);
j_y_B=e*(vy_p_B-vy_e_B);
j_z_B=e*(vz_p_B-vz_e_B);




px_e=-(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_e=-(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_e=-(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

px_p=(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_p=(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_p=(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

gamma_e=sqrt(1+(px_e.^2+py_e.^2+pz_e.^2)./(m_e.*c).^(2));
gamma_p=sqrt(1+(px_p.^2+py_p.^2+pz_p.^2)./(m_e.*c).^(2));

vx_e=(px_e)./(gamma_e.*m_e);
vy_e=(py_e)./(gamma_e.*m_e);
vz_e=(pz_e)./(gamma_e.*m_e);

vx_p=(px_p)./(gamma_p.*m_e);
vy_p=(py_p)./(gamma_p.*m_e);
vz_p=(pz_p)./(gamma_p.*m_e);

j_x=e*(vx_p-vx_e);
j_y=e*(vy_p-vy_e);
j_z=e*(vz_p-vz_e);



subplot(1,2,1)
plot(t/1e-15,j_y_B,t/1e-15,j_z_B,t/1e-15,j_y,'--',t/1e-15,j_z,'--')
xlabel('t [fs]')
ylabel('J [C\cdot m/s]')
legend('Boris J_y','Boris J_z','J_y','J_z')

subplot(1,2,2)
plot(t/1e-15,gamma_e_B,t/1e-15,gamma_p_B,t/1e-15,gamma_e,'--',t/1e-15,gamma_p,'--')
xlabel('t [fs]')
ylabel('\gamma')
legend('Boris \gamma_e','Boris \gamma_p','\gamma_e','\gamma_p')


%{
+[M函数](,公式验证)
%}
## end
#302, 1001:
%{
+[M函数](,公式验证)

理论曲线:...
Boris对比(M函数):...
%}

physics_constant;

lm_0=800e-9;
E0=4e10;
E_r=[0,1,1];
E_0=E_r*E0;

gamma=1.8;
beta_r=[0,0,1];
% p_0=0;
beta=sqrt(1-1/gamma^2);
p_0=gamma*m_e*beta*c*beta_r;

omega=2*pi*c/lm_0;

t=linspace(0,3*lm_0/c,1000);

px_e=-(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_e=-(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_e=-(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

px_p=(e.*E_0(1))./(omega).*sin(omega.*t)+p_0(1);
py_p=(e.*E_0(2))./(omega).*sin(omega.*t)+p_0(2);
pz_p=(e.*E_0(3))./(omega).*sin(omega.*t)+p_0(3);

gamma_e=sqrt(1+(px_e.^2+py_e.^2+pz_e.^2)./(m_e.*c).^(2));
gamma_p=sqrt(1+(px_p.^2+py_p.^2+pz_p.^2)./(m_e.*c).^(2));

vx_e=(px_e)./(gamma_e.*m_e);
vy_e=(py_e)./(gamma_e.*m_e);
vz_e=(pz_e)./(gamma_e.*m_e);

vx_p=(px_p)./(gamma_p.*m_e);
vy_p=(py_p)./(gamma_p.*m_e);
vz_p=(pz_p)./(gamma_p.*m_e);

j_x=e*(vx_p-vx_e);
j_y=e*(vy_p-vy_e);
j_z=e*(vz_p-vz_e);


subplot(1,2,1)
plot(t,j_y,t,j_z)
subplot(1,2,2)
plot(t,gamma_e,t,gamma_p)


%{
+[M函数](,公式验证)
%}
## end
#304, 631:
%{
地址::Matlab\Smilei\Boris_relativistic_osc.m
+[保存M函数](,Boris_relativistic_osc)
%}

function [x,y,z,v_x,v_y,v_z]=Boris_relativistic_osc(pt,v,dt,Ex,Ey,Ez,Bx,By,Bz,m,q)

physics_constant;

if nargin<10
m=m_e;
end
if nargin<11
q=e;
end

x=zeros(size(Ex));
y=zeros(size(Ex));
z=zeros(size(Ex));

v_x=zeros(size(Ex));
v_y=zeros(size(Ex));
v_z=zeros(size(Ex));

x0=pt(1);
y0=pt(2);
z0=pt(3);

v0_x=v(1);
v0_y=v(2);
v0_z=v(3);

for i=1:length(Ex)
[x0,y0,z0,v0_x,v0_y,v0_z]=BorisPusher(x0,y0,z0,v0_x,v0_y,v0_z,dt,[Ex(i),Ey(i),Ez(i)],[Bx(i),By(i),Bz(i)],m,q);

x(i)=x0;
y(i)=y0;
z(i)=z0;

v_x(i)=v0_x;
v_y(i)=v0_y;
v_z(i)=v0_z;
end

end




## end
#307, 38:
Matlab\Smilei\Boris_relativistic_osc.m
## end
#312, 168:
%{
+[M函数](,计算E0)
%}

physics_constant;
lm_0=800e-9;
% a_0=0.0001;
a_0=0.1;
r=40e-6;
Dtau=20e-15;

omega=2*pi*c/lm_0;
E_0=(omega.*m_e.*c)./(e).*a_0


%{
+[M函数](,计算E0)
%}
## end
#315, 59:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf
## end
#318, 695:
课本1::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=4
Xwave::https://en.wikipedia.org/wiki/Electromagnetic_electron_wave#cite_note-4
+[打开网页](,Xwave)

书签::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=94
+[打开网页](,书签)

相对论效应::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=210
(是温度达到相对论温度)
磁场::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=44
+[打开网页](,磁场)

关键词是X-wave

X-wave的基本处理方法和我的方法是一样的
介电张量::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=40

相对论效应那边, 他是从kinetic equation出发做的... 
额, 比较遗憾, 这个是相对论热等离子体


书签::file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=94
(等离子体流体)
+[打开网页](,书签)



## end
#320, 66:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=4
## end
#324, 71:
https://en.wikipedia.org/wiki/Electromagnetic_electron_wave#cite_note-4
## end
#326, 67:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=94
## end
#329, 68:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=210
## end
#331, 67:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=44
## end
#333, 67:
file:///C:/Users/cheng/Desktop/paper/Books/Plasma_Waves.pdf#page=40
## end
#339, 400:
<!--
+[H函数](,质量张量)
Nini, 打开公式分析器(文件)
-->

<h2>Mass tensor</h2>
The dynamic equation of a relativistic electron is, 
%[1].

And we have,
%[2].
%[3].

Then,
%[4].
%[5].
%[6].


<!--
[6].:
式(4)转换为"表达式"
将"\d{\vec{p}}=\gamma*m_0*(\mat{I}+\gamma^{2}*(\vec{\beta}*\vec{\beta}))\cdot \d{\vec{v}}"记作为式(6)
将式(1)记作为式(4)
将式(3)代入到式(4)

的([4].,表达式)->的(表达式,*)->+[显示](,*)
的([4].,表达式)->+[显示星图](,表达式)
+[H函数](,质量张量)
-->
## end
#342, 692:
<!--
+[H函数](,波动方程)

定义Maxwell方程组:...
定义方程:...
将'定义Maxwell方程组'封印为"Maxwell方程组"
'定义方程'是原型"Maxwell方程组"
将'定义方程'封印为"磁场频率"
+[新建阅读窗口](,定义方程)

电流重置(html):...
+[新建阅读窗口](,电流重置)
-->

<h2>Wave equation</h2>
The Maxwell equations are,
%[1].
To get the wave equation,
%[2].
%[3].
%[4].
%[5].

Then the current is,
%[6].

The \(n_1\) is,
%[7].
%[8].

The \(\vec{v_1}\) is,
%[9].
%[10].
%[11].
%[12].

Put them back into the current,
%[13].
%[14].

Put eq.[16] into eq.[5]. We will have,
%[15].
%[16].

Considering the Lorentz force of the light field and \(\vec{B_0}\) from the last page,
%[17].
%[18].

The equation is, 
%[19].
%[20].


<!--
[21].:
式(5)转换为"表达式"

的([9].,表达式)->+[显示星图](,表达式)
+[H函数](,波动方程)
-->
## end
#345, 56:
d\vec{p}=m_{0}\ \vec{v}\ d\gamma+\gamma\ m_{0}\ d\vec{v}
## end
#347, 48:
d\gamma=d\left(1/\sqrt{1-\vec{\beta}^{2}}\right)
## end
#348, 57:
\d{\vec{p}}=m_0*\vec{v}*\d{\gamma}+\gamma*m_0*\d{\vec{v}}
## end
#351, 41:
\d{\gamma}=\d{(1/\sqrt{1-\vec{\beta}^2})}
## end
#355, 62:
d\gamma=\gamma^{3}\ \left(\vec{\beta}\cdot d\vec{\beta}\right)
## end
#356, 54:
\d{\gamma}=\gamma^3*(\vec{\beta}\cdot \d{\vec{\beta}})
## end
#360, 103:
d\vec{p}=m_{0}\ \vec{v}\ \gamma^{3}\ \left(\vec{\beta}\cdot d\vec{\beta}\right)+\gamma\ m_{0}\ d\vec{v}
## end
#361, 92:
\d{\vec{p}}=m_0*\vec{v}*\gamma^{3}*(\vec{\beta}\cdot \d{\vec{\beta}})+\gamma*m_0*\d{\vec{v}}
## end
#365, 103:
d\vec{p}=m_{0}\ \gamma^{3}\ \left(\vec{\beta}\ \vec{\beta}\right)\cdot d\vec{v}+\gamma\ m_{0}\ d\vec{v}
## end
#366, 92:
\d{\vec{p}}=m_0*\gamma^{3}*(\vec{\beta}*\vec{\beta})\cdot \d{\vec{v}}+\gamma*m_0*\d{\vec{v}}
## end
#370, 111:
d\vec{p}=\gamma\ m_{0}\ \left(\mathbf{I}+\gamma^{2}\ \left(\vec{\beta}\ \vec{\beta}\right)\right)\cdot d\vec{v}
## end
#371, 86:
\d{\vec{p}}=\gamma*m_0*(\mat{I}+\gamma^{2}*(\vec{\beta}*\vec{\beta}))\cdot \d{\vec{v}}
## end
#375, 280:
\begin{cases}
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}\\ \vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t\ } (\vec{B})\\ \vec{\nabla}\cdot \vec{B}=0\\ \vec{\nabla}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \epsilon_{0}\ \frac{\partial}{\partial t\ } (\vec{E})
\end{cases}


## end
#376, 194:
\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}
## end
#379, 2850:
[1].#0"\begin{cases}
\vec{\nabla}\cdot \vec{D}=\rho\\ \vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t\ } (\vec{B})\\ \vec{\nabla}\cdot \vec{B}=0\\ \vec{\nabla}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \frac{\partial}{\partial t\ } (\vec{D})
\end{cases}

"(,)
的#1""([1].#0,表达式#2)
表达式#2"\eqs{\vec{\nabla}\cdot \vec{D}=\rho;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\p{t}{\vec{D}}}"(,)
的#3""(表达式#2,输入#4)
输入#4""(方程组#122,)
的#5""(输入#4,矢量#6)
矢量#6""(,\nabla#8)
的#7""(表达式#2,\nabla#8)
\nabla#8"\nabla"(,)
的#9""(表达式#2,输入#10)
输入#10""(矢量#6,\nabla#8)
的#11""(表达式#2,D#12)
D#12"D"(,)
的#13""(表达式#2,输入#14)
输入#14""(矢量#16,D#12)
的#15""(表达式#2,矢量#16)
矢量#16""(,D#12)
的#17""(表达式#2,*#18)
*#18"\cdot "(矢量#6,矢量#16)
的#19""(表达式#2,\rho#20)
\rho#20"\rho"(,)
的#21""(表达式#2,=#22)
=#22"="(矢量#6,\rho#20)
的#23""(表达式#2,输入#24)
输入#24""(输入#4,)
的#25""(输入#24,矢量#26)
矢量#26""(,\nabla#28)
的#27""(表达式#2,\nabla#28)
\nabla#28"\nabla"(,)
的#29""(表达式#2,输入#30)
输入#30""(矢量#26,\nabla#28)
的#31""(表达式#2,E#32)
E#32"E"(,)
的#33""(表达式#2,输入#34)
输入#34""(矢量#36,E#32)
的#35""(表达式#2,矢量#36)
矢量#36""(,E#32)
的#37""(表达式#2,*#38)
*#38"\times "(矢量#26,矢量#36)
的#39""(表达式#2,输入#40)
输入#40""(偏微分#50,)
的#41""(输入#40,t#42)
t#42"t"(,)
的#43""(表达式#2,B#44)
B#44"B"(,)
的#45""(表达式#2,输入#46)
输入#46""(矢量#48,B#44)
的#47""(表达式#2,矢量#48)
矢量#48""(,B#44)
的#49""(表达式#2,偏微分#50)
偏微分#50""(,矢量#48)
的#51""(表达式#2,负号#52)
负号#52""(偏微分#50,)
的#53""(表达式#2,=#54)
=#54"="(矢量#26,偏微分#50)
的#55""(表达式#2,输入#56)
输入#56""(输入#24,)
的#57""(输入#56,矢量#58)
矢量#58""(,\nabla#60)
的#59""(表达式#2,\nabla#60)
\nabla#60"\nabla"(,)
的#61""(表达式#2,输入#62)
输入#62""(矢量#58,\nabla#60)
的#63""(表达式#2,B#64)
B#64"B"(,)
的#65""(表达式#2,输入#66)
输入#66""(矢量#68,B#64)
的#67""(表达式#2,矢量#68)
矢量#68""(,B#64)
的#69""(表达式#2,*#70)
*#70"\cdot "(矢量#58,矢量#68)
的#71""(表达式#2,0#72)
0#72"0"(,)
的#73""(表达式#2,=#74)
=#74"="(矢量#58,0#72)
的#75""(表达式#2,输入#76)
输入#76""(输入#56,)
的#77""(输入#76,矢量#78)
矢量#78""(,\nabla#80)
的#79""(表达式#2,\nabla#80)
\nabla#80"\nabla"(,)
的#81""(表达式#2,输入#82)
输入#82""(矢量#78,\nabla#80)
的#83""(表达式#2,B#84)
B#84"B"(,)
的#85""(表达式#2,输入#86)
输入#86""(矢量#88,B#84)
的#87""(表达式#2,矢量#88)
矢量#88""(,B#84)
的#89""(表达式#2,*#90)
*#90"\times "(矢量#78,矢量#88)
的#91""(表达式#2,\mu_0#92)
\mu_0#92"\mu_0"(,)
的#93""(表达式#2,J#94)
J#94"J"(,)
的#95""(表达式#2,输入#96)
输入#96""(矢量#98,J#94)
的#97""(表达式#2,矢量#98)
矢量#98""(,J#94)
的#99""(表达式#2,*#100)
*#100"*"(\mu_0#92,矢量#98)
的#101""(表达式#2,\mu_0#102)
\mu_0#102"\mu_0"(,)
的#103""(表达式#2,输入#104)
输入#104""(偏微分#114,)
的#105""(输入#104,t#106)
t#106"t"(,)
的#107""(表达式#2,D#108)
D#108"D"(,)
的#109""(表达式#2,输入#110)
输入#110""(矢量#112,D#108)
的#111""(表达式#2,矢量#112)
矢量#112""(,D#108)
的#113""(表达式#2,偏微分#114)
偏微分#114""(,矢量#112)
的#115""(表达式#2,*#116)
*#116"*"(\mu_0#102,偏微分#114)
的#117""(表达式#2,+#118)
+#118"+"(\mu_0#92,\mu_0#102)
的#119""(表达式#2,=#120)
=#120"="(矢量#78,\mu_0#92)
的#121""(表达式#2,方程组#122)
方程组#122""(,)
的#123""(表达式#2,起点#124)
起点#124""(,方程组#122)

## end
#381, 269:

召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将"\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}"记作为方程组

方程组->公式(方程组,)






## end
#383, 280:
\begin{cases}
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}\\ \vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t\ } (\vec{B})\\ \vec{\nabla}\cdot \vec{B}=0\\ \vec{\nabla}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \epsilon_{0}\ \frac{\partial}{\partial t\ } (\vec{E})
\end{cases}


## end
#384, 194:
\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}
## end
#388, 367:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"Maxwell方程组"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#390, 77:


导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目"导入方程1"复制为条目"导入方程4"



## end
#392, 559:
"""
+[结构转表达式]

"""

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]"表达式"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]"LaTeX"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)



## end
#393, 367:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"Maxwell方程组"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#395, 6920:
定义Maxwell方程组#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义Maxwell方程组#0,方程组#2)
方程组#2"\begin{cases}
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}\\ \vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t\ } (\vec{B})\\ \vec{\nabla}\cdot \vec{B}=0\\ \vec{\nabla}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \epsilon_{0}\ \frac{\partial}{\partial t\ } (\vec{E})
\end{cases}

"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}"(,)
的#5""(表达式#4,输入#6)
输入#6""(方程组#132,)
的#7""(输入#6,矢量#8)
矢量#8""(,\nabla#10)
的#9""(表达式#4,\nabla#10)
\nabla#10"\nabla"(,)
的#11""(表达式#4,输入#12)
输入#12""(矢量#8,\nabla#10)
的#13""(表达式#4,E#14)
E#14"E"(,)
的#15""(表达式#4,输入#16)
输入#16""(矢量#18,E#14)
的#17""(表达式#4,矢量#18)
矢量#18""(,E#14)
的#19""(表达式#4,*#20)
*#20"\cdot "(矢量#8,矢量#18)
的#21""(表达式#4,\rho#22)
\rho#22"\rho"(,)
的#23""(表达式#4,\epsilon_0#24)
\epsilon_0#24"\epsilon_0"(,)
的#25""(表达式#4,/#26)
/#26"/"(\rho#22,\epsilon_0#24)
的#27""(表达式#4,=#28)
=#28"="(矢量#8,\rho#22)
的#29""(表达式#4,输入#30)
输入#30""(输入#6,)
的#31""(输入#30,矢量#32)
矢量#32""(,\nabla#34)
的#33""(表达式#4,\nabla#34)
\nabla#34"\nabla"(,)
的#35""(表达式#4,输入#36)
输入#36""(矢量#32,\nabla#34)
的#37""(表达式#4,E#38)
E#38"E"(,)
的#39""(表达式#4,输入#40)
输入#40""(矢量#42,E#38)
的#41""(表达式#4,矢量#42)
矢量#42""(,E#38)
的#43""(表达式#4,*#44)
*#44"\times "(矢量#32,矢量#42)
的#45""(表达式#4,输入#46)
输入#46""(偏微分#56,)
的#47""(输入#46,t#48)
t#48"t"(,)
的#49""(表达式#4,B#50)
B#50"B"(,)
的#51""(表达式#4,输入#52)
输入#52""(矢量#54,B#50)
的#53""(表达式#4,矢量#54)
矢量#54""(,B#50)
的#55""(表达式#4,偏微分#56)
偏微分#56""(,矢量#54)
的#57""(表达式#4,负号#58)
负号#58""(偏微分#56,)
的#59""(表达式#4,=#60)
=#60"="(矢量#32,偏微分#56)
的#61""(表达式#4,输入#62)
输入#62""(输入#30,)
的#63""(输入#62,矢量#64)
矢量#64""(,\nabla#66)
的#65""(表达式#4,\nabla#66)
\nabla#66"\nabla"(,)
的#67""(表达式#4,输入#68)
输入#68""(矢量#64,\nabla#66)
的#69""(表达式#4,B#70)
B#70"B"(,)
的#71""(表达式#4,输入#72)
输入#72""(矢量#74,B#70)
的#73""(表达式#4,矢量#74)
矢量#74""(,B#70)
的#75""(表达式#4,*#76)
*#76"\cdot "(矢量#64,矢量#74)
的#77""(表达式#4,0#78)
0#78"0"(,)
的#79""(表达式#4,=#80)
=#80"="(矢量#64,0#78)
的#81""(表达式#4,输入#82)
输入#82""(输入#62,)
的#83""(输入#82,矢量#84)
矢量#84""(,\nabla#86)
的#85""(表达式#4,\nabla#86)
\nabla#86"\nabla"(,)
的#87""(表达式#4,输入#88)
输入#88""(矢量#84,\nabla#86)
的#89""(表达式#4,B#90)
B#90"B"(,)
的#91""(表达式#4,输入#92)
输入#92""(矢量#94,B#90)
的#93""(表达式#4,矢量#94)
矢量#94""(,B#90)
的#95""(表达式#4,*#96)
*#96"\times "(矢量#84,矢量#94)
的#97""(表达式#4,\mu_0#98)
\mu_0#98"\mu_0"(,)
的#99""(表达式#4,J#100)
J#100"J"(,)
的#101""(表达式#4,输入#102)
输入#102""(矢量#104,J#100)
的#103""(表达式#4,矢量#104)
矢量#104""(,J#100)
的#105""(表达式#4,*#106)
*#106"*"(\mu_0#98,矢量#104)
的#107""(表达式#4,\mu_0#108)
\mu_0#108"\mu_0"(,)
的#109""(表达式#4,\epsilon_0#110)
\epsilon_0#110"\epsilon_0"(,)
的#111""(表达式#4,输入#112)
输入#112""(偏微分#122,)
的#113""(输入#112,t#114)
t#114"t"(,)
的#115""(表达式#4,E#116)
E#116"E"(,)
的#117""(表达式#4,输入#118)
输入#118""(矢量#120,E#116)
的#119""(表达式#4,矢量#120)
矢量#120""(,E#116)
的#121""(表达式#4,偏微分#122)
偏微分#122""(,矢量#120)
的#123""(表达式#4,*#124)
*#124"*"(\epsilon_0#110,偏微分#122)
的#125""(表达式#4,*#126)
*#126"*"(\mu_0#108,\epsilon_0#110)
的#127""(表达式#4,+#128)
+#128"+"(\mu_0#98,\mu_0#108)
的#129""(表达式#4,=#130)
=#130"="(矢量#84,\mu_0#98)
的#131""(表达式#4,方程组#132)
方程组#132""(,)
的#133""(表达式#4,起点#134)
起点#134""(,方程组#132)
的#135""(定义Maxwell方程组#0,召唤规则#136)
召唤规则#136"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"Maxwell方程组\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#137""(定义Maxwell方程组#0,降临规则#138)
降临规则#138"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#139""(降临规则#138,导入方程2#140)
导入方程2#140"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#141""(降临规则#138,导入方程组#142)
导入方程组#142"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#143""(降临规则#138,导入方程3#144)
导入方程3#144"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#145""(降临规则#138,导入方程4#146)
导入方程4#146"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#147""(降临规则#138,导入方程1#148)
导入方程1#148"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#397, 104:
i\ \vec{k}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \epsilon_{0}\ \frac{\partial}{\partial t\ } (\vec{E})
## end
#399, 69:
i*\vec{k}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}
## end
#401, 385:
"""


"""

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)



## end
#403, 572:
"""
+[结构转表达式]

"""

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]"表达式"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]"LaTeX"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)



## end
#405, 585:
"""
+[结构转表达式]

"""

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]"表达式"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]"LaTeX"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)



## end
#407, 538:
"""
+[结构转表达式]

"""

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]"表达式"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]"LaTeX"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)



## end
#410, 83:
i\ \vec{k}\times \vec{B}=\mu_{0}\ \vec{J}-\mu_{0}\ \epsilon_{0}\ i\ \omega\ \vec{E}
## end
#411, 71:
i*\vec{k}\times \vec{B}=\mu_0*\vec{J}-\mu_0*\epsilon_0*i*\omega*\vec{E}
## end
#415, 111:
\frac{\omega^{2}}{c^{2}}\ \vec{E}+\vec{k}\times \left(\vec{k}\times \vec{E}\right)=-i\ \omega\ \mu_{0}\ \vec{J}
## end
#417, 120:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i \omega \mu_{0} \vec{J}
## end
#418, 90:
\frac{\omega^2}{c^2}*\vec{E}+\vec{k}\times (\vec{k}\times \vec{E})=-i*\omega*\mu_0*\vec{J}
## end
#421, 101:
\frac{\omega^2}{c^2}*\vec{E}-\vec{k}^2*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#425, 51:
\vec{J}=q\ n_{0}\ \vec{v_{1}}+q\ n_{1}\ \vec{v_{0}}
## end
#426, 39:
\vec{J}=q*n_0*\vec{v_1}+q*n_1*\vec{v_0}
## end
#430, 45:
i\ \vec{k}\cdot \vec{E}=q\ n_{1}/\epsilon_{0}
## end
#432, 39:
i*\vec{k}\cdot \vec{E}=q*n_1/\epsilon_0
## end
#435, 45:
n_{1}=i\ \epsilon_{0}/q\ \vec{k}\cdot \vec{E}
## end
#436, 39:
n_1=i*\epsilon_0/q*\vec{k}\cdot \vec{E}
## end
#440, 50:
\vec{F}=q\ \vec{E}=\mathbf{M}\ \frac{d\vec{v}}{dt}
## end
#442, 99:
\mathbf{M}=\gamma\ m_{0}\ \left(\mathbf{I}+\gamma^{2}\ \left(\vec{\beta}\ \vec{\beta}\right)\right)
## end
#443, 41:
\vec{F}=q*\vec{E}=\mat{M}*\d{\vec{v}}_{t}
## end
#446, 65:
\mat{M}=\gamma*m_0*(\mat{I}+\gamma^{2}*(\vec{\beta}*\vec{\beta}))
## end
#450, 60:
\frac{d}{dt}\left(\vec{v}\right)=q\ \mathbf{M}^{-1}\ \vec{E}
## end
#452, 47:
\vec{v_1}=i\ q\ \mathbf{M}^{-1}\ \vec{E}/\omega
## end
#453, 38:
\d{\vec{v}}_{t}=q*\mat{M}^{-1}*\vec{E}
## end
#456, 41:
\vec{v_1}=i*q*\mat{M}^{-1}*\vec{E}/\omega
## end
#460, 118:
\vec{J}=i\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}/\omega+i\ \epsilon_{0}\ \left(\vec{v_0}\ \vec{k}\right)\cdot \vec{E}
## end
#462, 146:
\vec{J}=i\ \left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega}\ \mathbf{M}^{-1}+\left(\vec{\beta}\ \vec{k}\right)\ c\right)\cdot \vec{E}\ \epsilon_{0}
## end
#463, 91:
\vec{J}=i*q^2*n_0*\mat{M}^{-1}*\vec{E}/\omega+i*\epsilon_0*(\vec{v_0}*\vec{k})\cdot \vec{E}
## end
#466, 106:
\vec{J}=i*(\frac{q^2*n_0}{\epsilon_0*\omega}*\mat{M}^{-1}+(\vec{\beta}*\vec{k})*c)\cdot \vec{E}*\epsilon_0
## end
#470, 257:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=-i\ \omega\ \mu_{0}\ i\ \left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega}\ \mathbf{M}^{-1}+\left(\vec{\beta}\ \vec{k}\right)\ c\right)\cdot \vec{E}\ \epsilon_{0}
## end
#471, 200:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*i*(\frac{q^{2}*n_0}{\epsilon_0*\omega}*\mat{M}^{-1}+(\vec{\beta}*\vec{k})*c)\cdot \vec{E}*\epsilon_0
## end
#475, 233:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \mathbf{M}^{-1}+\left(\vec{\beta}\ \vec{k}\right)\ \frac{\omega}{c}\right)\cdot \vec{E}
## end
#476, 183:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^2}*\mat{M}^{-1}+(\vec{\beta}*\vec{k})*\frac{\omega}{c})\cdot \vec{E}
## end
#480, 123:
\chi_{plasma}=\frac{n_{e}\ e^{2}}{\epsilon_{0}\ \omega}\ \left(-\mathbf{M}\ \omega+i\ e\ \mathbf{B}\right)^{-1}\ \mathbf{C}
## end
#482, 75:
\mathbf{C}=1-\left(\vec{\beta}\cdot \vec{k_0}\right)+\vec{\beta}\ \vec{k_0}
## end
#483, 90:
\chi_plasma=\frac{n_e*e^{2}}{\epsilon_0*\omega}*(-\mat{M}*\omega+i*e*\mat{B})^{-1}*\mat{C}
## end
#486, 60:
\mat{C}=1-(\vec{\beta}\cdot \vec{k_0})+\vec{\beta}*\vec{k_0}
## end
#490, 299:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \left(\mathbf{M}+i\ q\ \mathbf{B}/\omega\right)^{-1}\ \mathbf{C}+\left(\vec{\beta}\ \vec{k_0}\right)\ \frac{\omega^{2}\ n_{r}}{c^{2}}\right)\cdot \vec{E}
## end
#493, 224:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}
## end
#497, 1042:
<!--
参考1::https://en.wikipedia.org/wiki/Electromagnetic_electron_wave#X_wave
参考2::file:///media/xiantao/Elements/paper/Books/Plasma_Waves.pdf#page=44
+[H函数](,磁场双折射)
+[打开网页](,参考2)
Nini, 打开天书(文件)
Nini, 打开FDH(文件)
Nini, 打开法拉第旋转(文件)
+[打开文件夹]"文档/物理问题"

法拉第旋转(html):...
+[新建阅读窗口](,法拉第旋转)
-->
<h2>Plasma in magnetic field</h2>
The general wave equation is,
%[1].
In this case, the wave equation is,
%[2].
%[3].

Rewrite the wave equation,
%[4].
%[5].
%[6].

If the magnetic field is along the x-axis and the laser is along the z-axis, the matrices are,
%[7].
%[8].
%[9].

The wave vector matrix is, 
%[10].
%[11].

For convience, let's re-define the coefficients,
%[12].
%[13].
%[14].

Solve the following equation to determine \(n_r\),
%[15].
%[16].

The solution is,
%[17].
%[18].
%[19].

Or we have,
%[20].
%[21].
%[22].
Or,
%[23].
(Here might be a sign problem, because \(n_{r2}\) should be smaller than \(n_{r1}\))


<!--
[23].:
式(5)转换为"表达式"
式(6)转换为"Matlab"


推导过程:...
结论化简:...
+[新建阅读窗口](,结论化简)

验证公式(M函数):...
+[新建阅读窗口](,验证公式)
+[H函数](,磁场双折射)
-->
## end
#500, 99:

召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将"\omega_B=\frac{q*B}{m_e}"记作为方程组

方程组->公式(方程组,)






## end
#502, 224:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}
## end
#503, 367:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"Maxwell方程组"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#504, 364:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"相对论波动方程"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#506, 8594:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \left(\mathbf{M}+i\ q\ \mathbf{B}/\omega\right)^{-1}\ \mathbf{C}+\left(\vec{\beta}\ \vec{k_0}\right)\ \frac{\omega^{2}\ n_{r}}{c^{2}}\right)\cdot \vec{E}"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#5""(表达式#4,\omega#6)
\omega#6"\omega"(,)
的#7""(表达式#4,2#8)
2#8"2"(,)
的#9""(表达式#4,^#10)
^#10""(\omega#6,2#8)
的#11""(表达式#4,c#12)
c#12"c"(,)
的#13""(表达式#4,2#14)
2#14"2"(,)
的#15""(表达式#4,^#16)
^#16""(c#12,2#14)
的#17""(表达式#4,分式#18)
分式#18""(,)
的#19""(分式#18,分子#20)
分子#20""(,\omega#6)
的#21""(分式#18,分母#22)
分母#22""(,c#12)
的#23""(表达式#4,E#24)
E#24"E"(,)
的#25""(表达式#4,输入#26)
输入#26""(矢量#28,E#24)
的#27""(表达式#4,矢量#28)
矢量#28""(,E#24)
的#29""(表达式#4,*#30)
*#30"*"(分式#18,矢量#28)
的#31""(表达式#4,k#32)
k#32"k"(,)
的#33""(表达式#4,输入#34)
输入#34""(矢量#36,k#32)
的#35""(表达式#4,矢量#36)
矢量#36""(,k#32)
的#37""(表达式#4,2#38)
2#38"2"(,)
的#39""(表达式#4,^#40)
^#40""(矢量#36,2#38)
的#41""(表达式#4,E#42)
E#42"E"(,)
的#43""(表达式#4,输入#44)
输入#44""(矢量#46,E#42)
的#45""(表达式#4,矢量#46)
矢量#46""(,E#42)
的#47""(表达式#4,*#48)
*#48"*"(矢量#36,矢量#46)
的#49""(表达式#4,k#50)
k#50"k"(,)
的#51""(表达式#4,输入#52)
输入#52""(矢量#54,k#50)
的#53""(表达式#4,矢量#54)
矢量#54""(,k#50)
的#55""(表达式#4,k#56)
k#56"k"(,)
的#57""(表达式#4,输入#58)
输入#58""(矢量#60,k#56)
的#59""(表达式#4,矢量#60)
矢量#60""(,k#56)
的#61""(表达式#4,*#62)
*#62"*"(矢量#54,矢量#60)
的#63""(表达式#4,括号#64)
括号#64")"(,)
的#65""(表达式#4,的#66)
的#66""(括号#64,矢量#54)
的#67""(表达式#4,E#68)
E#68"E"(,)
的#69""(表达式#4,输入#70)
输入#70""(矢量#72,E#68)
的#71""(表达式#4,矢量#72)
矢量#72""(,E#68)
的#73""(表达式#4,*#74)
*#74"\cdot "(括号#64,矢量#72)
的#75""(表达式#4,+#76)
+#76"+"(矢量#36,括号#64)
的#77""(表达式#4,-#78)
-#78"-"(分式#18,矢量#36)
的#79""(表达式#4,q#80)
q#80"q"(,)
的#81""(表达式#4,2#82)
2#82"2"(,)
的#83""(表达式#4,^#84)
^#84""(q#80,2#82)
的#85""(表达式#4,n_0#86)
n_0#86"n_0"(,)
的#87""(表达式#4,*#88)
*#88"*"(q#80,n_0#86)
的#89""(表达式#4,\epsilon_0#90)
\epsilon_0#90"\epsilon_0"(,)
的#91""(表达式#4,c#92)
c#92"c"(,)
的#93""(表达式#4,2#94)
2#94"2"(,)
的#95""(表达式#4,^#96)
^#96""(c#92,2#94)
的#97""(表达式#4,*#98)
*#98"*"(\epsilon_0#90,c#92)
的#99""(表达式#4,分式#100)
分式#100""(,)
的#101""(分式#100,分子#102)
分子#102""(,q#80)
的#103""(分式#100,分母#104)
分母#104""(,\epsilon_0#90)
的#105""(表达式#4,M#106)
M#106"M"(,)
的#107""(表达式#4,输入#108)
输入#108""(矩阵#110,M#106)
的#109""(表达式#4,矩阵#110)
矩阵#110""(,M#106)
的#111""(表达式#4,i#112)
i#112"i"(,)
的#113""(表达式#4,q#114)
q#114"q"(,)
的#115""(表达式#4,B#116)
B#116"B"(,)
的#117""(表达式#4,输入#118)
输入#118""(矩阵#120,B#116)
的#119""(表达式#4,矩阵#120)
矩阵#120""(,B#116)
的#121""(表达式#4,\omega#122)
\omega#122"\omega"(,)
的#123""(表达式#4,/#124)
/#124"/"(矩阵#120,\omega#122)
的#125""(表达式#4,*#126)
*#126"*"(q#114,矩阵#120)
的#127""(表达式#4,*#128)
*#128"*"(i#112,q#114)
的#129""(表达式#4,+#130)
+#130"+"(矩阵#110,i#112)
的#131""(表达式#4,括号#132)
括号#132")"(,)
的#133""(表达式#4,的#134)
的#134""(括号#132,矩阵#110)
的#135""(表达式#4,1#136)
1#136"1"(,)
的#137""(表达式#4,负号#138)
负号#138""(1#136,)
的#139""(表达式#4,^#140)
^#140""(括号#132,1#136)
的#141""(表达式#4,C#142)
C#142"C"(,)
的#143""(表达式#4,输入#144)
输入#144""(矩阵#146,C#142)
的#145""(表达式#4,矩阵#146)
矩阵#146""(,C#142)
的#147""(表达式#4,*#148)
*#148"*"(括号#132,矩阵#146)
的#149""(表达式#4,*#150)
*#150"*"(分式#100,括号#132)
的#151""(表达式#4,\beta#152)
\beta#152"\beta"(,)
的#153""(表达式#4,输入#154)
输入#154""(矢量#156,\beta#152)
的#155""(表达式#4,矢量#156)
矢量#156""(,\beta#152)
的#157""(表达式#4,k_0#158)
k_0#158"k_0"(,)
的#159""(表达式#4,输入#160)
输入#160""(矢量#162,k_0#158)
的#161""(表达式#4,矢量#162)
矢量#162""(,k_0#158)
的#163""(表达式#4,*#164)
*#164"*"(矢量#156,矢量#162)
的#165""(表达式#4,括号#166)
括号#166")"(,)
的#167""(表达式#4,的#168)
的#168""(括号#166,矢量#156)
的#169""(表达式#4,\omega#170)
\omega#170"\omega"(,)
的#171""(表达式#4,2#172)
2#172"2"(,)
的#173""(表达式#4,^#174)
^#174""(\omega#170,2#172)
的#175""(表达式#4,n_r#176)
n_r#176"n_r"(,)
的#177""(表达式#4,*#178)
*#178"*"(\omega#170,n_r#176)
的#179""(表达式#4,c#180)
c#180"c"(,)
的#181""(表达式#4,2#182)
2#182"2"(,)
的#183""(表达式#4,^#184)
^#184""(c#180,2#182)
的#185""(表达式#4,分式#186)
分式#186""(,)
的#187""(分式#186,分子#188)
分子#188""(,\omega#170)
的#189""(分式#186,分母#190)
分母#190""(,c#180)
的#191""(表达式#4,*#192)
*#192"*"(括号#166,分式#186)
的#193""(表达式#4,+#194)
+#194"+"(分式#100,括号#166)
的#195""(表达式#4,括号#196)
括号#196")"(,)
的#197""(表达式#4,的#198)
的#198""(括号#196,分式#100)
的#199""(表达式#4,E#200)
E#200"E"(,)
的#201""(表达式#4,输入#202)
输入#202""(矢量#204,E#200)
的#203""(表达式#4,矢量#204)
矢量#204""(,E#200)
的#205""(表达式#4,*#206)
*#206"\cdot "(括号#196,矢量#204)
的#207""(表达式#4,=#208)
=#208"="(分式#18,括号#196)
的#209""(表达式#4,起点#210)
起点#210""(,分式#18)
的#211""(方程组#2,表达式#212)
表达式#212"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#213""(定义方程#0,召唤规则#214)
召唤规则#214"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"相对论波动方程\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#215""(定义方程#0,降临规则#216)
降临规则#216"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#217""(降临规则#216,导入方程2#218)
导入方程2#218"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#219""(降临规则#216,导入方程组#220)
导入方程组#220"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#221""(降临规则#216,导入方程3#222)
导入方程3#222"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#223""(降临规则#216,导入方程4#224)
导入方程4#224"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#225""(降临规则#216,导入方程1#226)
导入方程1#226"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#508, 299:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \left(\mathbf{M}+i\ q\ \mathbf{B}/\omega\right)^{-1}\ \mathbf{C}+\left(\vec{\beta}\ \vec{k_0}\right)\ \frac{\omega^{2}\ n_{r}}{c^{2}}\right)\cdot \vec{E}
## end
#510, 224:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}
## end
#513, 213:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \left(m_{e}+i\ q\ \mathbf{B}/\omega\right)^{-1}\right)\cdot \vec{E}
## end
#515, 91:
\mathbf{B}=\begin{pmatrix}
0&-B_{z}&B_{y}\\ B_{z}&0&-B_{x}\\ -B_{y}&B_{x}&0
\end{pmatrix}


## end
#516, 163:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(m_e+i*q*\mat{B}/\omega)^{-1})\cdot \vec{E}
## end
#519, 361:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"磁场矩阵"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#521, 4728:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\mathbf{B}=\begin{pmatrix}
0&-B_{z}&B_{y}\\ B_{z}&0&-B_{x}\\ -B_{y}&B_{x}&0
\end{pmatrix}

"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}"(,)
的#5""(表达式#4,B#6)
B#6"B"(,)
的#7""(表达式#4,输入#8)
输入#8""(矩阵#10,B#6)
的#9""(表达式#4,矩阵#10)
矩阵#10""(,B#6)
的#11""(表达式#4,输入#12)
输入#12""(矩阵#42,)
的#13""(输入#12,0#14)
0#14"0"(,)
的#15""(输入#12,B_z#16)
B_z#16"B_z"(,)
的#17""(输入#12,B_y#18)
B_y#18"B_y"(,)
的#19""(表达式#4,负号#20)
负号#20""(B_z#16,)
的#21""(表达式#4,输入#22)
输入#22""(输入#12,)
的#23""(输入#22,B_z#24)
B_z#24"B_z"(,)
的#25""(输入#22,0#26)
0#26"0"(,)
的#27""(输入#22,B_x#28)
B_x#28"B_x"(,)
的#29""(表达式#4,负号#30)
负号#30""(B_x#28,)
的#31""(表达式#4,输入#32)
输入#32""(输入#22,)
的#33""(输入#32,B_y#34)
B_y#34"B_y"(,)
的#35""(输入#32,B_x#36)
B_x#36"B_x"(,)
的#37""(输入#32,0#38)
0#38"0"(,)
的#39""(表达式#4,负号#40)
负号#40""(B_y#34,)
的#41""(表达式#4,矩阵#42)
矩阵#42""(,)
的#43""(表达式#4,=#44)
=#44"="(矩阵#10,矩阵#42)
的#45""(表达式#4,起点#46)
起点#46""(,矩阵#10)
的#47""(方程组#2,表达式#48)
表达式#48"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#49""(定义方程#0,召唤规则#50)
召唤规则#50"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"磁场矩阵\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#51""(定义方程#0,降临规则#52)
降临规则#52"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#53""(降临规则#52,导入方程2#54)
导入方程2#54"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#55""(降临规则#52,导入方程组#56)
导入方程组#56"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#57""(降临规则#52,导入方程3#58)
导入方程3#58"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#59""(降临规则#52,导入方程4#60)
导入方程4#60"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#61""(降临规则#52,导入方程1#62)
导入方程1#62"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#523, 46:
\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}
## end
#526, 281:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}\ \vec{E}+\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}\ \left(\vec{k_0}\ \vec{k_0}\right)\cdot \vec{E}=\left(\frac{\omega_{p}^{2}}{c^{2}}\ \left(1+i\ \frac{\omega_{B}}{\omega}\ \mathbf{B_0}\right)^{-1}\right)\cdot \vec{E}
## end
#528, 58:
\omega_{p}=\sqrt{\frac{q^{2}\ n_{0}}{\epsilon_{0}\ m_{e}}}
## end
#529, 222:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\frac{n_r^2*\omega^{2}}{c^{2}}*\vec{E}+\frac{n_r^2*\omega^{2}}{c^{2}}*(\vec{k_0}*\vec{k_0})\cdot \vec{E}=(\frac{\omega_p^2}{c^{2}}*(1+i*\frac{\omega_B}{\omega}*\mat{B_0})^{-1})\cdot \vec{E}
## end
#532, 46:
\omega_p=\sqrt{\frac{q^2*n_0}{\epsilon_0*m_e}}
## end
#536, 29:
\omega_{B}=\frac{q\ B}{m_{e}}
## end
#537, 24:
\omega_B=\frac{q*B}{m_e}
## end
#540, 363:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"等离子体频率"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#542, 4561:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\omega_p=\sqrt{\frac{q^{2}*n_0}{\epsilon_0*m_e}}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\omega_{p}=\sqrt{\frac{q^{2}\ n_{0}}{\epsilon_{0}\ m_{e}}}"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\omega_p=\sqrt{\frac{q^{2}*n_0}{\epsilon_0*m_e}}"(,)
的#5""(表达式#4,\omega_p#6)
\omega_p#6"\omega_p"(,)
的#7""(表达式#4,q#8)
q#8"q"(,)
的#9""(表达式#4,2#10)
2#10"2"(,)
的#11""(表达式#4,^#12)
^#12""(q#8,2#10)
的#13""(表达式#4,n_0#14)
n_0#14"n_0"(,)
的#15""(表达式#4,*#16)
*#16"*"(q#8,n_0#14)
的#17""(表达式#4,\epsilon_0#18)
\epsilon_0#18"\epsilon_0"(,)
的#19""(表达式#4,m_e#20)
m_e#20"m_e"(,)
的#21""(表达式#4,*#22)
*#22"*"(\epsilon_0#18,m_e#20)
的#23""(表达式#4,分式#24)
分式#24""(,)
的#25""(分式#24,分子#26)
分子#26""(,q#8)
的#27""(分式#24,分母#28)
分母#28""(,\epsilon_0#18)
的#29""(表达式#4,根式#30)
根式#30""(,分式#24)
的#31""(表达式#4,=#32)
=#32"="(\omega_p#6,根式#30)
的#33""(表达式#4,起点#34)
起点#34""(,\omega_p#6)
的#35""(方程组#2,表达式#36)
表达式#36"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#37""(定义方程#0,召唤规则#38)
召唤规则#38"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"等离子体频率\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#39""(定义方程#0,降临规则#40)
降临规则#40"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#41""(降临规则#40,导入方程2#42)
导入方程2#42"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#43""(降临规则#40,导入方程组#44)
导入方程组#44"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#45""(降临规则#40,导入方程3#46)
导入方程3#46"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#47""(降临规则#40,导入方程4#48)
导入方程4#48"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#49""(降临规则#40,导入方程1#50)
导入方程1#50"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#543, 361:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"磁场频率"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#545, 4259:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\omega_B=\frac{q*B}{m_e}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\omega_{B}=\frac{q\ B}{m_{e}}"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\omega_B=\frac{q*B}{m_e}"(,)
的#5""(表达式#4,\omega_B#6)
\omega_B#6"\omega_B"(,)
的#7""(表达式#4,q#8)
q#8"q"(,)
的#9""(表达式#4,B#10)
B#10"B"(,)
的#11""(表达式#4,*#12)
*#12"*"(q#8,B#10)
的#13""(表达式#4,m_e#14)
m_e#14"m_e"(,)
的#15""(表达式#4,分式#16)
分式#16""(,)
的#17""(分式#16,分子#18)
分子#18""(,q#8)
的#19""(分式#16,分母#20)
分母#20""(,m_e#14)
的#21""(表达式#4,=#22)
=#22"="(\omega_B#6,分式#16)
的#23""(表达式#4,起点#24)
起点#24""(,\omega_B#6)
的#25""(方程组#2,表达式#26)
表达式#26"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#27""(定义方程#0,召唤规则#28)
召唤规则#28"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"磁场频率\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#29""(定义方程#0,降临规则#30)
降临规则#30"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#31""(降临规则#30,导入方程2#32)
导入方程2#32"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#33""(降临规则#30,导入方程组#34)
导入方程组#34"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#35""(降临规则#30,导入方程3#36)
导入方程3#36"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#37""(降临规则#30,导入方程4#38)
导入方程4#38"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#39""(降临规则#30,导入方程1#40)
导入方程1#40"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#547, 194:
\mathbf{I}+i\ \frac{\omega_{B}}{\omega}\ \mathbf{B_{0}}=\begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

+i\ \frac{\omega_{B}}{\omega}\ \begin{pmatrix}
0&0&0\\ 0&0&-1\\ 0&1&0
\end{pmatrix}


## end
#549, 119:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1&-i\ \frac{\omega_{B}}{\omega}\\ 0&i\ \frac{\omega_{B}}{\omega}&1
\end{pmatrix}


## end
#550, 122:
\mat{I}+i*\frac{\omega_B}{\omega}*\mat{B_0}=\mat{1,0,0;
0,1,0;
0,0,1}+i*\frac{\omega_B}{\omega}*\mat{0,0,0;
0,0,-1;
0,1,0}
## end
#553, 82:
\mat{T}=\mat{1,0,0;
0,1,-i*\frac{\omega_B}{\omega};
0,i*\frac{\omega_B}{\omega},1}
## end
#557, 225:
\mathbf{T}^{-1}=\begin{pmatrix}
1-\left(\frac{\omega_{B}}{\omega}\right)^{2}&0&0\\ 0&1&i\ \frac{\omega_{B}}{\omega}\\ 0&-i\ \frac{\omega_{B}}{\omega}&1
\end{pmatrix}

/\left(1-\left(\frac{\omega_{B}}{\omega}\right)^{2}\right)
## end
#559, 230:
\mathbf{K}=\left(\frac{\omega^{2}}{c^{2}}-\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}\right)\ \begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

+\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}\ \begin{pmatrix}
0&0&0\\ 0&0&0\\ 0&0&1
\end{pmatrix}


## end
#560, 151:
\mat{T}^{-1}=\mat{1-(\frac{\omega_B}{\omega})^{2},0,0;
0,1,i*\frac{\omega_B}{\omega};
0,-i*\frac{\omega_B}{\omega},1}/(1-(\frac{\omega_B}{\omega})^{2})
## end
#563, 148:
\mat{K}=(\frac{\omega^{2}}{c^{2}}-\frac{n_r^2*\omega^{2}}{c^{2}})*\mat{1,0,0;
0,1,0;
0,0,1}+\frac{n_r^2*\omega^{2}}{c^{2}}*\mat{0,0,0;
0,0,0;
0,0,1}
## end
#567, 205:
\mathbf{K}=\begin{pmatrix}
\frac{\omega^{2}}{c^{2}}-\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}&0&0\\ 0&\frac{\omega^{2}}{c^{2}}-\frac{n_{r}^{2}\ \omega^{2}}{c^{2}}&0\\ 0&0&\frac{\omega^{2}}{c^{2}}
\end{pmatrix}


## end
#568, 164:
\mat{K}=\mat{\frac{\omega^{2}}{c^{2}}-\frac{n_r^2*\omega^{2}}{c^{2}},0,0;
0,\frac{\omega^{2}}{c^{2}}-\frac{n_r^2*\omega^{2}}{c^{2}},0;
0,0,\frac{\omega^{2}}{c^{2}}}
## end
#572, 90:
\mathbf{K}=\begin{pmatrix}
A-n_{r}^{2}\ B&0&0\\ 0&A-n_{r}^{2}\ B&0\\ 0&0&A
\end{pmatrix}


## end
#574, 127:
\frac{\omega_{p}^{2}}{c^{2}}\ \mathbf{T}^{-1}=\begin{pmatrix}
\frac{\omega_{p}^{2}}{c^{2}}&0&0\\ 0&C&D\\ 0&-D&C
\end{pmatrix}


## end
#576, 149:
\mathbf{K}-\frac{\omega_{p}^{2}}{c^{2}}\ \mathbf{T}^{-1}=\begin{pmatrix}
A_{2}-n_{r}^{2}\ B&0&0\\ 0&A_{1}-n_{r}^{2}\ B&-D\\ 0&D&A_{1}
\end{pmatrix}


## end
#577, 49:
\mat{K}=\mat{A-n_r^2*B,0,0;
0,A-n_r^2*B,0;
0,0,A}
## end
#580, 90:
\frac{\omega_p^{2}}{c^{2}}*\mat{T}^{-1}=\mat{\frac{\omega_p^{2}}{c^{2}},0,0;
0,C,D;0,-D,C}
## end
#583, 98:
\mat{K}-\frac{\omega_p^{2}}{c^{2}}*\mat{T}^{-1}=\mat{A_2-n_r^{2}*B,0,0;0,A_1-n_r^{2}*B,-D;0,D,A_1}
## end
#587, 112:
A_{1}\ \left(A_{2}-n_{r}^{2}\ B\right)\ \left(A_{1}-n_{r}^{2}\ B\right)+D^{2}\ \left(A_{2}-n_{r}^{2}\ B\right)=0
## end
#588, 59:
A_1*(A_2-n_r^{2}*B)*(A_1-n_r^{2}*B)+D^{2}*(A_2-n_r^{2}*B)=0
## end
#592, 83:
\left(A_{1}^{2}-n_{r}^{2}\ B\ A_{1}+D^{2}\right)\ \left(A_{2}-n_{r}^{2}\ B\right)=0
## end
#594, 98:
\begin{cases}
n_{r1}=\sqrt{A_{2}/B}\\ n_{r2}=\sqrt{\frac{A_{1}^{2}+D^{2}}{A_{1}\ B}}
\end{cases}


## end
#595, 45:
(A_1^2-n_r^{2}*B*A_1+D^{2})*(A_2-n_r^{2}*B)=0
## end
#598, 64:
\eqs{n_r1=\sqrt{A_2/B};
n_r2=\sqrt{\frac{A_1^{2}+D^{2}}{A_1*B}}}
## end
#602, 153:
\begin{cases}
n_{r1}=\sqrt{\frac{A-\frac{\omega_{p}^{2}}{c^{2}}}{A}}\\ n_{r2}=\sqrt{\frac{\left(A-C\right)^{2}+D^{2}}{\left(A-C\right)\ A}}
\end{cases}


## end
#603, 97:
\eqs{n_r1=\sqrt{\frac{A-\frac{\omega_p^2}{c^2}}{A}};
n_r2=\sqrt{\frac{(A-C)^{2}+D^{2}}{(A-C)*A}}}
## end
#607, 223:
\begin{cases}
A=\frac{\omega^{2}}{c^{2}}\\ C=\frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}\\ D=i\ \frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}
\end{cases}


## end
#608, 163:
\eqs{A=\frac{\omega^2}{c^2};
C=\frac{\omega_p^2}{c^2}*\frac{\omega^2}{\omega^2-\omega_B^2};
D=i*\frac{\omega_p^2}{c^2}*\frac{\omega*\omega_B}{\omega^2-\omega_B^2}}
## end
#612, 49:
n_{r1}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}}
## end
#614, 251:
n_{r2}=\sqrt{\frac{\omega^{2}\ \left(1-\frac{\omega_{p}^{2}}{\omega^{2}-\omega_{B}^{2}}\right)^{2}-\left(\omega_{p}^{2}\ \frac{\omega_{B}}{\omega^{2}-\omega_{B}^{2}}\right)^{2}}{\omega^{2}-\omega_{p}^{2}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}}
## end
#615, 45:
n_r1=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}}
## end
#618, 210:
n_r2=\sqrt{\frac{\omega^{2}*(1-\frac{\omega_p^{2}}{\omega^{2}-\omega_B^{2}})^{2}-(\omega_p^{2}*\frac{\omega_B}{\omega^{2}-\omega_B^{2}})^{2}}{\omega^{2}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}}
## end
#622, 241:
n_{r2}=\sqrt{\frac{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)^{2}-\left(\omega_{p}^{2}\ \omega_{B}\right)^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}}
## end
#623, 177:
n_r2=\sqrt{\frac{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})^{2}-(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}}
## end
#627, 1418:

'[3].'是物体"磁场矩阵"
式(1)转换为"表达式"
将"\frac{\omega^{2}}{c^{2}}*\vec{E}-\frac{n_r^2*\omega^{2}}{c^{2}}*\vec{E}+\frac{n_r^2*\omega^{2}}{c^{2}}*(\vec{k_0}*\vec{k_0})\cdot \vec{E}=(\frac{\omega_p^2}{c^{2}}*(1+i*\frac{\omega_B}{\omega}*\mat{B_0})^{-1})\cdot \vec{E}"记作为式(4)
将"\omega_B=\frac{q*B}{m_e}"记作为式(6)
式(6)转换为"表达式"

式(12)转换为"表达式"

将"\eqs{n_r1=\sqrt{\frac{A_1}{B}};
n_r2=\sqrt{\frac{A_1^2+D^2}{A_1*B}}}"记作为式(18)
将"A*B-C=(A-C)*B"代入到式(18)
将"B=A"代入到式(18)
将"A=\frac{\omega^2}{c^2}"代入到式(18)
将"C=\frac{\omega_p^2}{c^2}/(1-(\frac{\omega_B}{\omega})^2)"代入到式(18)
将"D=i*\frac{\omega_p^2}{c^2}*(\frac{\omega_B}{\omega})/(1-(\frac{\omega_B}{\omega})^2)"代入到式(18)

将"\eqs{A=\frac{\omega^2}{c^2};
C=\frac{\omega_p^2}{c^2}*\frac{\omega^2}{\omega^2-\omega_B^2};
D=i*\frac{\omega_p^2}{c^2}*\frac{\omega*\omega_B}{\omega^2-\omega_B^2}}"记作为式(19)

将"n_r1=\sqrt{1-\frac{\omega_p^2}{\omega^2-\omega_B^2}}"记作为式(20)
将"n_r2=\sqrt{\frac{(A-C)^2-D^2}{(A-C)*A}}"记作为式(21)

将"A=\frac{\omega^2}{c^2}"代入到式(21)
将"C=\frac{\omega_p^2}{c^2}*\frac{\omega^2}{\omega^2-\omega_B^2}"代入到式(21)
将"D=\frac{\omega_p^2}{c^2}*\frac{\omega*\omega_B}{\omega^2-\omega_B^2}"代入到式(21)

式(21)转换为"表达式"
将"n_r2=\sqrt{\frac{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})^{2}-(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}}"记作为式(22)
将"_a*\omega^2=\omega^{2}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}"代入到式(21)
## end
#631, 66:
https://en.wikipedia.org/wiki/Electromagnetic_electron_wave#X_wave
## end
#633, 67:
file:///media/xiantao/Elements/paper/Books/Plasma_Waves.pdf#page=44
## end
#635, 270:
<!--
+[H函数](,结论化简)
-->

%[1].
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].
%[8].
%[9].


<!--
[9].:
式(9)转换为"表达式"
将"n_r2=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}+\frac{\omega_p^{2}*\omega_B^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})}}"记作为式(9)


更新式(2)
+[H函数](,结论化简)
-->
## end
#637, 241:
n_{r2}=\sqrt{\frac{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)^{2}-\left(\omega_{p}^{2}\ \omega_{B}\right)^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}}
## end
#639, 243:
n_{r2}^{2}=\frac{\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}}{\omega^{2}-\omega_{B}^{2}}-\frac{\left(\omega_{p}^{2}\ \omega_{B}\right)^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}
## end
#641, 219:
n_{r2}^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}-\omega_{B}^{2}}-\frac{\left(\omega_{p}^{2}\ \omega_{B}\right)^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}
## end
#643, 252:
n_{r2}^{2}=1-\frac{\omega^{2}\ \omega_{p}^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)+\left(\omega_{p}^{2}\ \omega_{B}\right)^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}
## end
#645, 239:
n_{r2}^{2}=1-\omega_{p}^{2}\ \frac{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)+\omega_{p}^{2}\ \omega_{B}^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}
## end
#646, 177:
n_r2=\sqrt{\frac{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})^{2}-(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}}
## end
#649, 187:
n_r2^2=\frac{\omega^{2}-\omega_B^{2}-\omega_p^{2}}{\omega^{2}-\omega_B^{2}}-\frac{(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}
## end
#652, 165:
n_r2^2=1-\frac{\omega_p^{2}}{\omega^{2}-\omega_B^{2}}-\frac{(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}
## end
#655, 183:
n_r2^2=1-\frac{\omega^{2}*\omega_p^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})+(\omega_p^{2}*\omega_B)^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}
## end
#658, 177:
n_r2^2=1-\omega_p^{2}*\frac{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})+\omega_p^2*\omega_B^2}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}
## end
#662, 221:
n_{r2}^{2}=1-\omega_{p}^{2}\ \frac{\left(\omega^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)\ \left(\omega^{2}-\omega_{B}^{2}\right)}
## end
#664, 141:
n_{r2}^{2}=1-\frac{\omega_{p}^{2}\ \left(\omega^{2}-\omega_{p}^{2}\right)}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)}
## end
#665, 157:
n_r2^2=1-\omega_p^{2}*\frac{(\omega^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})*(\omega^{2}-\omega_B^{2})}
## end
#668, 105:
n_r2^2=1-\frac{\omega_p^{2}*(\omega^{2}-\omega_p^{2})}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})}
## end
#672, 151:
n_{r2}^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}\ \omega_{B}^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)}
## end
#674, 154:
n_{r2}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}\ \omega_{B}^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)}}
## end
#675, 124:
n_r2^2=1-\frac{\omega_p^{2}}{\omega^{2}}+\frac{\omega_p^{2}*\omega_B^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})}
## end
#679, 458:
<!--
+[H函数](,法拉第旋转)
-->
<h2>Faraday rotation</h2>
If the magnetic field is along the z-axis and the laser is along the z-axis, the matrices are,
%[1].
%[2].

The whole matrix is,
%[3].
%[4].

The equation is,
%[5].
%[6].

The solution is,
%[7].
%[8].
%[9].
%[10].
Or,
%[11].
%[12].
Or,
%[13].
%[14].

<!--
[14].:
式(14)转换为"Matlab"
将"n_r2=\sqrt{1-\frac{\omega_p^{2}/\omega^{2}}{1-\omega_B/\omega}}"记作为式(14)


化简运算:...
+[新建阅读窗口](,化简运算)
更新式(9)
+[H函数](,法拉第旋转)
-->
## end
#681, 129:
n_r2=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}+\frac{\omega_p^{2}*\omega_B^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})}}
## end
#685, 154:
n_{r2}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}\ \omega_{B}^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}-\omega_{p}^{2}\right)}}
## end
#686, 129:
n_r2=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}+\frac{\omega_p^{2}*\omega_B^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2}-\omega_p^{2})}}
## end
#690, 119:
\mathbf{T}=\begin{pmatrix}
1&-i\ \frac{\omega_{B}}{\omega}&0\\ i\ \frac{\omega_{B}}{\omega}&1&0\\ 0&0&1
\end{pmatrix}


## end
#692, 225:
\mathbf{T}^{-1}=\begin{pmatrix}
1&i\ \frac{\omega_{B}}{\omega}&0\\ -i\ \frac{\omega_{B}}{\omega}&1&0\\ 0&0&1-\left(\frac{\omega_{B}}{\omega}\right)^{2}
\end{pmatrix}

/\left(1-\left(\frac{\omega_{B}}{\omega}\right)^{2}\right)
## end
#694, 149:
\mathbf{K}-\frac{\omega_{p}^{2}}{c^{2}}\ \mathbf{T}^{-1}=\begin{pmatrix}
A_{1}-n_{r}^{2}\ B&-D&0\\ D&A_{1}-n_{r}^{2}\ B&0\\ 0&0&A_{2}
\end{pmatrix}


## end
#695, 82:
\mat{T}=\mat{1,-i*\frac{\omega_B}{\omega},0;
i*\frac{\omega_B}{\omega},1,0;
0,0,1}
## end
#698, 151:
\mat{T}^{-1}=\mat{1,i*\frac{\omega_B}{\omega},0;
-i*\frac{\omega_B}{\omega},1,0;
0,0,1-(\frac{\omega_B}{\omega})^{2}}/(1-(\frac{\omega_B}{\omega})^{2})
## end
#701, 100:
\mat{K}-\frac{\omega_p^{2}}{c^{2}}*\mat{T}^{-1}=\mat{A_1-n_r^{2}*B,-D,0;
D,A_1-n_r^{2}*B,0;
0,0,A_2}
## end
#705, 314:
\begin{cases}
A_{1}=\frac{\omega^{2}}{c^{2}}-\frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}\\ A_{2}=\frac{\omega^{2}}{c^{2}}-\frac{\omega_{p}^{2}}{c^{2}}\\ B=\frac{\omega^{2}}{c^{2}}\\ D=i\ \frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}
\end{cases}


## end
#706, 265:
\eqs{A_1=\frac{\omega^{2}}{c^{2}}-\frac{\omega_p^{2}}{c^{2}}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}};
A_2=\frac{\omega^{2}}{c^{2}}-\frac{\omega_p^{2}}{c^{2}};
B=\frac{\omega^2}{c^2};
D=i*\frac{\omega_p^{2}}{c^{2}}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}}
## end
#710, 57:
A_{2}\ \left(A_{1}-n_{r}^{2}\ B\right)^{2}+D^{2}\ A_{2}=0
## end
#712, 83:
A_{2}\ \left(A_{1}-i\ D-n_{r}^{2}\ B\right)\ \left(A_{1}+i\ D-n_{r}^{2}\ B\right)=0
## end
#714, 99:
\begin{cases}
n_{r1}=\sqrt{\frac{A_{1}-i\ D}{B}}\\ n_{r2}=\sqrt{\frac{A_{1}+i\ D}{B}}
\end{cases}


## end
#715, 33:
A_2*(A_1-n_r^{2}*B)^2+D^{2}*A_2=0
## end
#718, 45:
A_2*(A_1-i*D-n_r^{2}*B)*(A_1+i*D-n_r^{2}*B)=0
## end
#721, 66:
\eqs{n_r1=\sqrt{\frac{A_1-i*D}{B}};
n_r2=\sqrt{\frac{A_1+i*D}{B}}}
## end
#725, 501:
\begin{cases}
n_{r1}=\sqrt{\frac{\frac{\omega^{2}}{c^{2}}-i\ i\ \frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\frac{\omega^{2}}{c^{2}}}}\\ n_{r2}=\sqrt{\frac{\frac{\omega^{2}}{c^{2}}+i\ i\ \frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\frac{\omega_{p}^{2}}{c^{2}}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\frac{\omega^{2}}{c^{2}}}}
\end{cases}


## end
#727, 377:
\begin{cases}
n_{r1}=\sqrt{\frac{\omega^{2}+\omega_{p}^{2}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\omega_{p}^{2}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\omega^{2}}}\\ n_{r2}=\sqrt{\frac{\omega^{2}-\omega_{p}^{2}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\omega_{p}^{2}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\omega^{2}}}
\end{cases}


## end
#729, 401:
\begin{cases}
n_{r1}=\sqrt{\frac{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}\right)+\omega_{p}^{2}\ \omega\ \omega_{B}-\omega_{p}^{2}\ \omega^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}\right)}}\\ n_{r2}=\sqrt{\frac{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}\right)-\omega_{p}^{2}\ \omega\ \omega_{B}-\omega_{p}^{2}\ \omega^{2}}{\omega^{2}\ \left(\omega^{2}-\omega_{B}^{2}\right)}}
\end{cases}


## end
#731, 121:
n_{r1}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega_{B}}{\omega+\omega_{B}}}
## end
#732, 444:
\eqs{n_r1=\sqrt{\frac{\frac{\omega^{2}}{c^{2}}-i*i*\frac{\omega_p^{2}}{c^{2}}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\frac{\omega_p^{2}}{c^{2}}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\frac{\omega^{2}}{c^{2}}}};
n_r2=\sqrt{\frac{\frac{\omega^{2}}{c^{2}}+i*i*\frac{\omega_p^{2}}{c^{2}}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\frac{\omega_p^{2}}{c^{2}}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\frac{\omega^{2}}{c^{2}}}}}
## end
#735, 1:
)
## end
#737, 1:
)
## end
#739, 1:
)
## end
#741, 1:
)
## end
#743, 1:
)
## end
#745, 1:
)
## end
#747, 324:
\eqs{n_r1=\sqrt{\frac{\omega^{2}+\omega_p^{2}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\omega^{2}}};
n_r2=\sqrt{\frac{\omega^{2}-\omega_p^{2}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\omega^{2}}}}
## end
#750, 1:
)
## end
#752, 1:
)
## end
#754, 1:
)
## end
#756, 1:
)
## end
#758, 1:
)
## end
#760, 1:
)
## end
#762, 1:
)
## end
#764, 1:
)
## end
#766, 1:
)
## end
#768, 1:
)
## end
#770, 300:
\eqs{n_r1=\sqrt{\frac{\omega^{2}*(\omega^{2}-\omega_B^{2})+\omega_p^{2}*\omega*\omega_B-\omega_p^{2}*\omega^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2})}};
n_r2=\sqrt{\frac{\omega^{2}*(\omega^{2}-\omega_B^{2})-\omega_p^{2}*\omega*\omega_B-\omega_p^{2}*\omega^{2}}{\omega^{2}*(\omega^{2}-\omega_B^{2})}}}
## end
#774, 195:
<!--
+[H函数](,化简运算)
-->

%[1].
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].
Or,
%[8].
%[9].

<!--
[9].:
式(9)转换为"表达式"
将"n_r1=\sqrt{1-\frac{\omega_p^2/\omega^2}{1+\omega_B/\omega}}"记作为式(9)

+[H函数](,化简运算)
-->
## end
#776, 173:
n_{r1}=\sqrt{\frac{\omega^{2}+\omega_{p}^{2}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\omega_{p}^{2}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\omega^{2}}}
## end
#778, 170:
n_{r1}^{2}=\frac{\omega^{2}+\omega_{p}^{2}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\omega_{p}^{2}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}}{\omega^{2}}
## end
#780, 180:
n_{r1}^{2}=1+\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega\ \omega_{B}}{\omega^{2}-\omega_{B}^{2}}-\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega^{2}}{\omega^{2}-\omega_{B}^{2}}
## end
#782, 120:
n_{r1}^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega\ \left(\omega-\omega_{B}\right)}{\omega^{2}-\omega_{B}^{2}}
## end
#783, 158:
n_r1=\sqrt{\frac{\omega^{2}+\omega_p^{2}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\omega^{2}}}
## end
#786, 153:
n_r1^2=\frac{\omega^{2}+\omega_p^{2}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\omega_p^{2}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}}{\omega^{2}}
## end
#789, 163:
n_r1^2=1+\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega*\omega_B}{\omega^{2}-\omega_B^{2}}-\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega^{2}}{\omega^{2}-\omega_B^{2}}
## end
#792, 95:
n_r1^2=1-\frac{\omega_p^{2}}{\omega^2}*\frac{\omega*(\omega-\omega_B)}{\omega^{2}-\omega_B^{2}}
## end
#796, 80:
n_{r1}^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega}{\omega+\omega_{B}}
## end
#798, 118:
n_{r1}^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega_{B}}{\omega+\omega_{B}}
## end
#800, 121:
n_{r1}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}+\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega_{B}}{\omega+\omega_{B}}}
## end
#801, 69:
n_r1^2=1-\frac{\omega_p^{2}}{\omega^2}*\frac{\omega}{\omega+\omega_B}
## end
#804, 101:
n_r1^2=1-\frac{\omega_p^{2}}{\omega^2}+\frac{\omega_p^{2}}{\omega^2}*\frac{\omega_B}{\omega+\omega_B}
## end
#807, 106:
n_r1=\sqrt{1-\frac{\omega_p^{2}}{\omega^2}+\frac{\omega_p^{2}}{\omega^2}*\frac{\omega_B}{\omega+\omega_B}}
## end
#811, 121:
n_{r2}=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}-\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\omega_{B}}{\omega-\omega_{B}}}
## end
#813, 69:
n_{r1}=\sqrt{1-\frac{\omega_{p}^{2}/\omega^{2}}{1+\omega_{B}/\omega}}
## end
#814, 110:
n_r1=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}+\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega_B}{\omega+\omega_B}}
## end
#817, 110:
n_r2=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}-\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega_B}{\omega-\omega_B}}
## end
#821, 66:
n_{r1}^{2}=1-\frac{\omega_{p}^{2}/\omega^{2}}{1+\omega_{B}/\omega}
## end
#823, 69:
n_{r1}=\sqrt{1-\frac{\omega_{p}^{2}/\omega^{2}}{1+\omega_{B}/\omega}}
## end
#824, 56:
n_r1^{2}=1-\frac{\omega_p^2/\omega^2}{1+\omega_B/\omega}
## end
#827, 59:
n_r1=\sqrt{1-\frac{\omega_p^2/\omega^2}{1+\omega_B/\omega}}
## end
#831, 69:
n_{r2}=\sqrt{1-\frac{\omega_{p}^{2}/\omega^{2}}{1-\omega_{B}/\omega}}
## end
#832, 63:
n_r1=\sqrt{1-\frac{\omega_p^{2}/\omega^{2}}{1+\omega_B/\omega}}
## end
#835, 63:
n_r2=\sqrt{1-\frac{\omega_p^{2}/\omega^{2}}{1-\omega_B/\omega}}
## end
#839, 1069:
%{
+[M函数](,验证公式)
运行指令"nautilus Matlab/plasma"
Nini, 打开FDH(文件)

参考磁场:...
初次估算:...
通用对比:...
相位分布:...

plasma_refractive_index_FR(M函数):...
plasma_refractive_index_CM(M函数):...
%}

physics_constant;
addpath('Matlab/funcs');
addpath('Matlab/plasma');

q=e;
n_0=1e25;
B0=8000;
lm_0=873e-9;
L=100e-6;

gamma=1;
beta_r=[0,1,0];
B_fr=[0,1,0];
k_r=[0,0,1];
E0=[1,1,0];

k_0=2*pi/lm_0;

z=linspace(0,L,2000);
B=B0*cos(pi*z/L*10);

E_x=zeros(size(z));
E_y=zeros(size(z));
E_z=zeros(size(z));
n_1=zeros(size(z));
n_2=zeros(size(z));

for i=1:length(z)
[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B_fr*B(i));
% [n_r,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,B(i));
n_1(i)=n_r(1);
n_2(i)=n_r(2);

E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*z(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*z(i)*k_0)+E_x(i);
E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*z(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*z(i)*k_0)+E_y(i);
E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*z(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*z(i)*k_0)+E_z(i);

end

plot(z,E_x,z,E_y)
% plot(z,n_1,z,n_2)

%{
1i'
plot(z,B)
+[M函数](,验证公式)
%}
## end
#841, 763:
%{
+[M函数](,参考磁场)
运行指令"nautilus Matlab"
Nini, 打开PIConGPU的read_data_PIConGPU_h5(节点)

disp_data_PIConGPU_h5(M函数):...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');

filename_0="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0/openPMD/simData";
filename_1="/media/xiantao/Elements/LWFA/FDH/PIConGPU/3D_highResolution/probe_a0_0_01/openPMD/simData";


%{
colormap('default')
+[M函数](,参考磁场)
%}

for i=0:400:14400
[data_0,info]=read_data_PIConGPU_h5(filename_0,i,'Bz');
[~,SI]=info.Attributes.Value;
B_field=data_0(:,1:2000)*SI;

surf(B_field)
shading interp
view([0,90])
axis([0,size(B_field,2),0,size(B_field,1)])
colorbar
pause(0.1)

end

%{
disp_data_PIConGPU_h5(filename_0,i,'Bz');
colormap('default')
+[M函数](,参考磁场)
%}
## end
#843, 528:
%{
+[M函数](,初次估算)
%}

physics_constant;
q=e;
n_0=1e25;
B=30;
lm_0=873e-9;
L=100e-6;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)+(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));
n_R=sqrt(1-(omega_p.^2./omega.^2)./(1+omega_B./omega));
n_L=sqrt(1-(omega_p.^2./omega.^2)./(1-omega_B./omega));

Dphi_1=(n_o-n_x)*L*k_0/pi*180
Dphi_2=(n_R-n_L)*L*k_0/pi*180


%{
+[M函数](,初次估算)
%}
## end
#845, 911:
%{
地址::Matlab/readData/disp_data_PIConGPU_h5.m
+[保存M函数](,disp_data_PIConGPU_h5)
sprintf('%06d',1)
%}

function disp_data_PIConGPU_h5(file_name0,ti,field_name0)
% file_name=sprintf("/home/xiantao/Documents/PIC/output/openPMD/simData_%06d.h5",2000);
file_name=sprintf("%s_%06d.h5",file_name0,ti);

if strcmp(field_name0,'Ex')
    field_name='fields/E/y';
elseif strcmp(field_name0,'Ey')
    field_name='fields/E/x';
elseif strcmp(field_name0,'Ez')
    field_name='fields/E/z';
elseif strcmp(field_name0,'Bx')
    field_name='fields/B/y';
elseif strcmp(field_name0,'By')
    field_name='fields/B/x';
elseif strcmp(field_name0,'Bz')
    field_name='fields/B/z';
elseif strcmp(field_name0,'n')
    field_name='fields/e_all_chargeDensity';
else
    field_name='fields/e_all_energyDensity';
end
data_name=sprintf("/data/%d/%s",ti,field_name);

h5disp(file_name,data_name);

end


%{
+[保存M函数](,read_data_PIConGPU_h5)
%}
## end
#848, 39:
Matlab/readData/disp_data_PIConGPU_h5.m
## end
#853, 998:
%{
+[M函数](,验证公式)

参考磁场:...
初次估算:...
通用对比:...
%}

physics_constant;
addpath('Matlab/funcs');
addpath('Matlab/plasma');

q=e;
n_0=1e25;
B=100;
lm_0=873e-9;
L=100e-6;

gamma=1;
beta_r=[0,1,0];
B_fr=[0,0,1]*B;
B_cm=[1,0,0]*B;
k_r=[0,0,1];

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)-(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));
n_R=sqrt(1-(omega_p.^2./omega.^2)./(1+omega_B./omega));
n_L=sqrt(1-(omega_p.^2./omega.^2)./(1-omega_B./omega));

% FR
[n_fr,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B_fr);
% CM
[n_cm,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B_cm);

disp("Faraday rotation:")
disp(sprintf("Maxtrix:  %.8f, %.8f",n_fr))
disp(sprintf("Equation: %.8f, %.8f",n_R,n_L))

disp("Cotton Mutton:")
disp(sprintf("Maxtrix:  %.8f, %.8f",n_cm))
disp(sprintf("Equation: %.8f, %.8f",n_o,n_x))

%{
+[M函数](,验证公式)
%}
## end
#855, 145:
移动的不均匀介质之后还需要专门花时间讨论. 只需要处理一维的波动方程即可
可以近似处理得到近似解, 也可以用FDTD得到数值解
以及, 建议考虑用时空图作为工具来理解物理过程
(可以作为自定义图形的应用)

现在用
phi(z)=z*n(z)*\omega/c
来估算相位分布应该是合理的

## end
#857, 1053:
%{
+[M函数](,验证公式)
运行指令"nautilus Matlab/plasma"

参考磁场:...
初次估算:...
通用对比:...
相位分布:...

plasma_refractive_index_FR(M函数):...
plasma_refractive_index_CM(M函数):...
%}

physics_constant;
addpath('Matlab/funcs');
addpath('Matlab/plasma');

q=e;
n_0=1e25;
B0=2000;
lm_0=873e-9;
L=100e-6;

gamma=1;
beta_r=[0,1,0];
B_fr=[0,1,0];
k_r=[0,0,1];
E0=[1,1,0];

k_0=2*pi/lm_0;

z=linspace(0,L,2000);
B=B0*cos(pi*z/L*10);

E_x=zeros(size(z));
E_y=zeros(size(z));
E_z=zeros(size(z));
n_1=zeros(size(z));
n_2=zeros(size(z));

for i=1:length(z)
[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B_fr*B(i));
% [n_r,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,B(i));
n_1(i)=n_r(1);
n_2(i)=n_r(2);

E_x(i)=E0*E1*E1(1)'*exp(1i*n_r(1)*z(i)*k_0);
E_x(i)=E0*E2*E2(1)'*exp(1i*n_r(2)*z(i)*k_0)+E_x(i);
E_y(i)=E0*E1*E1(2)'*exp(1i*n_r(1)*z(i)*k_0);
E_y(i)=E0*E2*E2(2)'*exp(1i*n_r(2)*z(i)*k_0)+E_y(i);
E_z(i)=E0*E1*E1(3)'*exp(1i*n_r(1)*z(i)*k_0);
E_z(i)=E0*E2*E2(3)'*exp(1i*n_r(2)*z(i)*k_0)+E_z(i);

end

plot(z,E_x,z,E_y)
% plot(z,n_1,z,n_2)

%{
1i'
plot(z,B)
+[M函数](,验证公式)
%}
## end
#859, 503:
%{
地址::Matlab/plasma/plasma_refractive_index_FR.m
+[保存M函数](,plasma_refractive_index_FR)
%}

function [n_out,E1,E2]=plasma_refractive_index_FR(lm_0,n_0,B0)
physics_constant;

q=e;
% n_0=1e25;
% B0=100;
% lm_0=873e-9;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B0)./(m_e);
omega=2*pi*c/lm_0;

n_R=sqrt(1-(omega_p.^2./omega.^2)./(1+omega_B./omega));
n_L=sqrt(1-(omega_p.^2./omega.^2)./(1-omega_B./omega));

n_out=[n_R,n_L];
E1=[-1i,-1,0]'/sqrt(2);
E2=[-1i,1,0]'/sqrt(2);
end


## end
#862, 42:
Matlab/plasma/plasma_refractive_index_FR.m
## end
#867, 517:
%{
地址::Matlab/plasma/plasma_refractive_index_CM.m
+[保存M函数](,plasma_refractive_index_CM)
%}

function [n_out,E1,E2]=plasma_refractive_index_CM(lm_0,n_0,B0)
physics_constant;

q=e;
% n_0=1e25;
% B0=100;
% lm_0=873e-9;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B0)./(m_e);
omega=2*pi*c/lm_0;

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)-(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));

n_out=[n_o,n_x];
E1=[0,1,0]';
E2=[1,0,0]';
end


## end
#870, 42:
Matlab/plasma/plasma_refractive_index_CM.m
## end
#875, 549:
<!--
+[H函数](,电流重置)
-->

<h2>Current re-distribution</h2>
(Equation (7) is incorrect! )
%[1].
But it should be,
%[2].
And we have, 
%[3].
%[4].
%[5].
%[5.1].
%[5.2].
%[5.3].
%[5.4].

And the dynamic equation is, 
%[6].
For a laser field, we have,
%[7].
%[8].
%[9].

If \(\vec{E}\perp \vec{\beta_0}\), then,
%[10].

If \(\vec{E}\parallel \vec{\beta_0}\), then,
%[11].
%[12].

As a result,
%[13].
%[14].


<!--
[14].:
式(9)转换为"表达式"
将"\vec{J_1}=\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega^2}*(\vec{\beta_0}\cdot \vec{E})"记作为式(14)

更新式(13)
+[H函数](,电流重置)
-->
## end
#877, 50:
\vec{F}=q\ \vec{E}=\mathbf{M}\ \frac{d\vec{v}}{dt}
## end
#879, 71:
q\ \vec{v_{0}}\times \vec{B}+q\ \vec{E}=\mathbf{M}\ \frac{d\vec{v}}{dt}
## end
#881, 72:
\vec{\nabla}\cdot \left(\vec{v}\ n\right)=-\frac{\partial n}{\partial t}
## end
#883, 134:
\left(\vec{\nabla}\cdot \vec{v_{1}}\right)\ n_{0}+\vec{v_{0}}\cdot \left(\vec{\nabla}\ n_{1}\right)=-\frac{\partial n_{1}}{\partial t}
## end
#885, 77:
\vec{k}\cdot \vec{v_{1}}\ n_{0}+\vec{v_{0}}\cdot \vec{k}\ n_{1}=\omega\ n_{1}
## end
#887, 41:
\vec{F}=q*\vec{E}=\mat{M}*\d{\vec{v}}_{t}
## end
#890, 59:
q*\vec{v_0}\times \vec{B}+q*\vec{E}=\mat{M}*\d{\vec{v}}_{t}
## end
#893, 39:
\vec{\nabla}\cdot (\vec{v}*n)=-\p{t}{n}
## end
#896, 79:
(\vec{\nabla}\cdot \vec{v_1})*n_0+\vec{v_0}\cdot (\vec{\nabla}*n_1)=-\p{t}{n_1}
## end
#901, 64:
\vec{k}\cdot \vec{v_1}*n_0+\vec{v_0}\cdot \vec{k}*n_1=\omega*n_1
## end
#905, 75:
q\ \vec{v_{0}}\times \vec{B}+q\ \vec{E}=-i\ \omega\ \mathbf{M}\ \vec{v_{1}}
## end
#907, 36:
\vec{k_{0}}\times \vec{E}=c\ \vec{B}
## end
#909, 110:
q\ \vec{\beta_{0}}\times \left(\vec{k_{0}}\times \vec{E}\right)+q\ \vec{E}=-i\ \omega\ \mathbf{M}\ \vec{v_{1}}
## end
#911, 146:
q\ \left(\vec{\beta_{0}}\cdot \vec{E}\ \vec{k_{0}}-\vec{\beta_{0}}\cdot \vec{k_{0}}\ \vec{E}\right)+q\ \vec{E}=-i\ \omega\ \mathbf{M}\ \vec{v_{1}}
## end
#912, 63:
q*\vec{v_0}\times \vec{B}+q*\vec{E}=-i*\omega*\mat{M}*\vec{v_1}
## end
#916, 83:
\left(\omega-\vec{v_{0}}\cdot \vec{k}\right)\ n_{1}=\vec{k}\cdot \vec{v_{1}}\ n_{0}
## end
#917, 62:
(\omega-\vec{v_0}\cdot \vec{k})*n_1=\vec{k}\cdot \vec{v_1}*n_0
## end
#921, 77:
n_{1}=\frac{\vec{k}\cdot \vec{v_{1}}\ n_{0}}{\omega-\vec{v_{0}}\cdot \vec{k}}
## end
#923, 99:
\vec{J_{1}}=q\ \vec{v_{0}}\ n_{0}\ \frac{\vec{k}\cdot \vec{v_{1}}}{\omega-\vec{v_{0}}\cdot \vec{k}}
## end
#924, 68:
n_1=\frac{\vec{k}\cdot \vec{v_1}*n_0}{\omega-\vec{v_0}\cdot \vec{k}}
## end
#927, 86:
\vec{J_1}=q*\vec{v_0}*n_0*\frac{\vec{k}\cdot \vec{v_1}}{\omega-\vec{v_0}\cdot \vec{k}}
## end
#930, 33:
\vec{k_0}\times \vec{E}=c*\vec{B}
## end
#933, 85:
q*\vec{\beta_0}\times (\vec{k_0}\times \vec{E})+q*\vec{E}=-i*\omega*\mat{M}*\vec{v_1}
## end
#936, 115:
q*(\vec{\beta_0}\cdot \vec{E}*\vec{k_0}-\vec{\beta_0}\cdot \vec{k_0}*\vec{E})+q*\vec{E}=-i*\omega*\mat{M}*\vec{v_1}
## end
#940, 26:
\vec{v_{1}}\cdot \vec{k}=0
## end
#942, 86:
q\ \vec{\beta_{0}}\cdot \vec{E}\ k=-i\ \omega\ m_{\parallel}\ \vec{v_{1}}\cdot \vec{k}
## end
#943, 24:
\vec{v_1}\cdot \vec{k}=0
## end
#946, 75:
q*\vec{\beta_0}\cdot \vec{E}*k=-i*\omega*m_\parallel*\vec{v_1}\cdot \vec{k}
## end
#950, 92:
\vec{k}\cdot \vec{v_{1}}=\frac{i\ q\ k}{m_{\parallel}\ \omega}\ \vec{\beta_{0}}\cdot \vec{E}
## end
#951, 82:
\vec{k}\cdot \vec{v_1}=\frac{i*q*k}{m_\parallel*\omega}*\vec{\beta_0}\cdot \vec{E}
## end
#955, 132:
\vec{J_{1}}=\vec{J_{0}}\ \frac{i\ q\ k}{m_{\parallel}\ \omega}\ \frac{\vec{\beta_{0}}\cdot \vec{E}}{\omega-\vec{v_{0}}\cdot \vec{k}}
## end
#956, 117:
\vec{J_1}=\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega}*\frac{\vec{\beta_0}\cdot \vec{E}}{\omega-\vec{v_0}\cdot \vec{k}}
## end
#960, 89:
\vec{J_{1}}=\vec{J_{0}}\ \frac{\vec{k}\cdot \vec{v_{1}}}{\omega-\vec{v_{0}}\cdot \vec{k}}
## end
#961, 80:
\vec{J_1}=\vec{J_0}*\frac{\vec{k}\cdot \vec{v_1}}{\omega-\vec{v_0}\cdot \vec{k}}
## end
#965, 459:
<!--
+[H函数](,相对论双折射)

检测单位:...
纵波:...
+[新建阅读窗口](,检测单位)
+[新建阅读窗口](,纵波)
-->

<h2>Current induced birefringence</h2>
(Equation (2) is incorrect. Check current re-distribution. )
%[1].
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].
%[8].
%[9].
%[10].
%[11].

<h2>Mass induced birefringence</h2>
%[12].
%[13].
%[14].


<!--
[14].:
将"n_1=\sqrt{1-\frac{1}{\gamma}*\frac{\omega_p^{2}}{\omega^{2}}}"记作为式(12)
式(1)转换为"表达式"

更新式(3)
验证公式(M函数):...
+[新建阅读窗口](,验证公式)
+[H函数](,相对论双折射)
-->
## end
#968, 126:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=-i\ \omega\ \mu_{0}\ \vec{J}
## end
#970, 105:
\vec{J}=\vec{J_{0}}\ \frac{i\ q\ k}{m_{\parallel}\ \omega^{2}}\ \left(\vec{\beta_{0}}\cdot \vec{E}\right)
## end
#972, 216:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=-i\ \omega\ \mu_{0}\ \vec{J_{0}}\ \frac{i\ q\ k}{m_{\parallel}\ \omega^{2}}\ \left(\vec{\beta_{0}}\cdot \vec{E}\right)
## end
#974, 154:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}=\vec{J_{0}}\ \frac{\mu_{0}\ q\ k}{m_{\parallel}\ \omega}\ \left(\vec{\beta_{0}}\cdot \vec{E}\right)
## end
#975, 107:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#978, 81:
\vec{J}=\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega^2}*(\vec{\beta_0}\cdot \vec{E})
## end
#981, 175:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega^{2}}*(\vec{\beta_0}\cdot \vec{E})
## end
#985, 94:
k^{2}+J_{0}\ \frac{\mu_{0}\ q\ \beta_{0}}{m_{\parallel}\ \omega}\ k-\frac{\omega^{2}}{c^{2}}=0
## end
#987, 194:
k=\frac{1}{2}\ \sqrt{\left(J_{0}\ \frac{\mu_{0}\ q\ \beta_{0}}{m_{\parallel}\ \omega}\right)^{2}+4\ \frac{\omega^{2}}{c^{2}}}-\frac{J_{0}}{2}\ \frac{\mu_{0}\ q\ \beta_{0}}{m_{\parallel}\ \omega}
## end
#988, 128:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}=\vec{J_0}*\frac{\mu_0*q*k}{m_\parallel*\omega}*(\vec{\beta_0}\cdot \vec{E})
## end
#992, 109:
\vec{J_{1}}=\vec{J_{0}}\ \frac{i\ q\ k}{m_{\parallel}\ \omega^{2}}\ \left(\vec{\beta_{0}}\cdot \vec{E}\right)
## end
#993, 83:
\vec{J_1}=\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega^2}*(\vec{\beta_0}\cdot \vec{E})
## end
#996, 73:
\vec{J_0}*\frac{i*q*k}{m_\parallel*\omega^2}*(\vec{\beta_0}\cdot \vec{E})
## end
#998, 7:
\vec{J}
## end
#1000, 1:
)
## end
#1002, 79:
k^2+J_0*\frac{\mu_0*q*\beta_0}{m_\parallel*\omega}*k-\frac{\omega^{2}}{c^{2}}=0
## end
#1005, 155:
k=\frac{1}{2}*\sqrt{(J_0*\frac{\mu_0*q*\beta_0}{m_\parallel*\omega})^2+4*\frac{\omega^{2}}{c^{2}}}-\frac{J_0}{2}*\frac{\mu_0*q*\beta_0}{m_\parallel*\omega}
## end
#1009, 21:
n=\frac{c\ k}{\omega}
## end
#1011, 151:
n=\sqrt{1+\left(J_{0}\ \frac{\mu_{0}\ q\ v_{0}}{2\ m_{\parallel}\ \omega^{2}}\right)^{2}}-J_{0}\ \frac{\mu_{0}\ q\ v_{0}}{2\ m_{\parallel}\ \omega^{2}}
## end
#1013, 95:
n=\sqrt{1+\left(\frac{\omega_{J}^{2}}{\omega^{2}}\right)^{2}}-\frac{\omega_{J}^{2}}{\omega^{2}}
## end
#1014, 20:
n=\frac{c*k}{\omega}
## end
#1017, 108:
n=\sqrt{1+(J_0*\frac{\mu_0*q*v_0}{2*m_\parallel*\omega^2})^2}-J_0*\frac{\mu_0*q*v_0}{2*m_\parallel*\omega^2}
## end
#1022, 159:
<!--
+[H函数](,检测单位)
-->
%[1].
%[2].
%[3].
%[4].
%[5].


<!--
[5].:
将"\omega_J=\frac{\beta_0*\omega_p}{\sqrt{2*\gamma^3}}"记作为式(4)
式(4)转换为"表达式"

+[H函数](,检测单位)
-->
## end
#1024, 67:
\omega_{J}=\sqrt{\frac{J_{0}\ \mu_{0}\ q\ v_{0}}{2\ m_{\parallel}}}
## end
#1026, 75:
\omega_{J}=\sqrt{\frac{n_{e}\ \mu_{0}\ q^{2}\ v_{0}^{2}}{2\ m_{\parallel}}}
## end
#1028, 94:
\omega_{J}=\frac{\beta_{0}}{\sqrt{2}}\ \sqrt{\frac{n_{e}\ q^{2}}{\epsilon_{0}\ m_{\parallel}}}
## end
#1030, 61:
\omega_{J}=\frac{\beta_{0}\ \omega_{p}}{\sqrt{2\ \gamma^{3}}}
## end
#1033, 53:
\omega_J=\sqrt{\frac{J_0*\mu_0*q*v_0}{2*m_\parallel}}
## end
#1036, 57:
\omega_J=\sqrt{\frac{n_e*\mu_0*q^2*v_0^2}{2*m_\parallel}}
## end
#1040, 75:
\omega_{J}=\sqrt{\frac{n_{e}\ \mu_{0}\ q^{2}\ v_{0}^{2}}{2\ m_{\parallel}}}
## end
#1041, 70:
n=\sqrt{1+(\frac{\omega_J^2}{\omega^2})^2}-\frac{\omega_J^2}{\omega^2}
## end
#1044, 61:
\omega_J=\sqrt{\frac{n_e*\mu_0*q^{2}*v_0^{2}}{2*m_\parallel}}
## end
#1048, 483:
%{
+[M函数](,验证公式)
磁场例子:...
%}

physics_constant;

beta_0=0.1;
q=e;
lm_0=873e-9;
m_1=me;
n_e=1e25;
L=100e-6;

k_0=2*pi/lm_0;
omega=2*pi*c/lm_0;
gamma=1/sqrt(1-beta_0^2);

omega_p=sqrt((q.^2.*n_e)./(epsilon_0.*m_e));
omega_J=(beta_0.*omega_p)./(sqrt(2.*gamma.^3));
Dn1=-(omega_J.^2)./(omega.^2);

n_1=sqrt(1-(1)./(gamma).*(omega_p.^2)./(omega.^2));
n_2=sqrt(1-(1)./(gamma.^3).*(omega_p.^2)./(omega.^2));
Dn2=n_1-n_2;

Dphi_1=Dn1*L*k_0/pi*180
Dphi_2=Dn2*L*k_0/pi*180

%{
+[M函数](,验证公式)
%}
## end
#1050, 79:
\omega_J=\frac{\beta_0}{\sqrt{2}}*\sqrt{\frac{n_e*q^2}{\epsilon_0*m_\parallel}}
## end
#1053, 51:
\omega_J=\frac{\beta_0*\omega_p}{\sqrt{2*\gamma^3}}
## end
#1057, 61:
\omega_{J}=\frac{\beta_{0}\ \omega_{p}}{\sqrt{2\ \gamma^{3}}}
## end
#1058, 53:
\omega_J=\frac{\beta_0*\omega_p}{\sqrt{2*\gamma^{3}}}
## end
#1062, 66:
n_{1}=\sqrt{1-\frac{1}{\gamma}\ \frac{\omega_{p}^{2}}{\omega^{2}}}
## end
#1064, 70:
n_{2}=\sqrt{1-\frac{1}{\gamma^{3}}\ \frac{\omega_{p}^{2}}{\omega^{2}}}
## end
#1065, 61:
n_1=\sqrt{1-\frac{1}{\gamma}*\frac{\omega_p^{2}}{\omega^{2}}}
## end
#1068, 59:
n_2=\sqrt{1-\frac{1}{\gamma^3}*\frac{\omega_p^2}{\omega^2}}
## end
#1072, 58:
\omega_{p}=\sqrt{\frac{q^{2}\ n_{0}}{\epsilon_{0}\ m_{e}}}
## end
#1073, 46:
\omega_p=\sqrt{\frac{q^2*n_0}{\epsilon_0*m_e}}
## end
#1077, 524:
%{
+[M函数](,初次估算)
%}

physics_constant;
q=e;
n_0=1e25;
B=30;
lm_0=873e-9;
L=100e-6;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)+(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));
n_R=sqrt(1-(omega_p.^2./omega.^2)./(1+omega_B./omega));
n_L=sqrt(1-(omega_p.^2./omega.^2)./(1-omega_B./omega));

Dphi_1=(n_o-n_x)*L*k_0/1e-3
Dphi_2=(n_R-n_L)*L*k_0/1e-3


%{
+[M函数](,初次估算)
%}
## end
#1079, 664:
<!--
+[H函数](,磁场电流耦合)

估算(html):...
+[新建阅读窗口](,估算)
-->
Assume that \(\vec{k}\) is along x-axis, \(\vec{J}\) along y-axis and that \(\vec{B}\) is along z-axis, then,
%[1].
%[2].
We can write the above equation in matrix and simplify the magnetic field term in the beginning,
%[3].
%[4].
%[5].

Here we have,
%[6].
%[7].

As a result,
%[8].
%[9].
(Not right)

<!--
[9].:
式(7)转换为"表达式"
将"\mat{T}^{-1}=\mat{1,i*\frac{\omega_B}{\omega},0;-i*\frac{\omega_B}{\omega},1,0;0,0,1-(\frac{\omega_B}{\omega})^{2}}/(1-(\frac{\omega_B}{\omega})^{2})"记作为式(7)
将"\vec{k}\cdot \vec{v}=\frac{i*q*k}{\omega*m_e*(1-(\omega_B/\omega)^{2})}*\mat{T}^{-1}*\vec{E}"记作为式(9)

+[H函数](,磁场电流耦合)
-->
## end
#1082, 98:
m\ \frac{d\vec{v}}{dt}=q\ \left(\vec{E}+\vec{v_{0}}\times \vec{B}+\vec{v}\times \vec{B_{0}}\right)
## end
#1084, 101:
q\ \vec{v}\times \vec{B_{0}}+i\ \omega\ m\ \vec{v}=-q\ \left(\vec{E}+\vec{v_{0}}\times \vec{B}\right)
## end
#1086, 61:
-q\ \mathbf{B}\ \vec{v}+i\ \omega\ m_{e}\ \vec{v}=-q\ \vec{E}
## end
#1088, 77:
m*\d{\vec{v}}_{t}=q*(\vec{E}+\vec{v_0}\times \vec{B}+\vec{v}\times \vec{B_0})
## end
#1091, 81:
q*\vec{v}\times \vec{B_0}+i*\omega*m*\vec{v}=-q*(\vec{E}+\vec{v_0}\times \vec{B})
## end
#1094, 50:
-q*\mat{B}*\vec{v}+i*\omega*m_e*\vec{v}=-q*\vec{E}
## end
#1098, 113:
\left(\mathbf{I}+i\ \frac{\omega_{B}}{\omega}\ \mathbf{B_{0}}\right)\ \vec{v}=\frac{i\ q\ \vec{E}}{\omega\ m_{e}}
## end
#1100, 91:
\mathbf{B}=\begin{pmatrix}
0&-B_{z}&B_{y}\\ B_{z}&0&-B_{x}\\ -B_{y}&B_{x}&0
\end{pmatrix}


## end
#1102, 205:
\mathbf{T}=\mathbf{I}+i\ \frac{\omega_{B}}{\omega}\ \mathbf{B_{0}}=\begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

+i\ \frac{\omega_{B}}{\omega}\ \begin{pmatrix}
0&-1&0\\ 1&0&0\\ 0&0&0
\end{pmatrix}


## end
#1104, 225:
\mathbf{T}^{-1}=\begin{pmatrix}
1&i\ \frac{\omega_{B}}{\omega}&0\\ -i\ \frac{\omega_{B}}{\omega}&1&0\\ 0&0&1-\left(\frac{\omega_{B}}{\omega}\right)^{2}
\end{pmatrix}

/\left(1-\left(\frac{\omega_{B}}{\omega}\right)^{2}\right)
## end
#1105, 84:
(\mat{I}+i*\frac{\omega_B}{\omega}*\mat{B_0})*\vec{v}=\frac{i*q*\vec{E}}{\omega*m_e}
## end
#1108, 46:
\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}
## end
#1111, 126:
\mat{T}=\mat{I}+i*\frac{\omega_B}{\omega}*\mat{B_0}=\mat{1,0,0;0,1,0;0,0,1}+i*\frac{\omega_B}{\omega}*\mat{0,-1,0;1,0,0;0,0,0}
## end
#1114, 149:
\mat{T}^{-1}=\mat{1,i*\frac{\omega_B}{\omega},0;-i*\frac{\omega_B}{\omega},1,0;0,0,1-(\frac{\omega_B}{\omega})^{2}}/(1-(\frac{\omega_B}{\omega})^{2})
## end
#1118, 60:
\vec{v}=\frac{i\ q}{\omega\ m_{e}}\ \mathbf{T}^{-1}\ \vec{E}
## end
#1120, 124:
\vec{k}\cdot \vec{v}=\frac{i\ q}{\omega\ m_{e}\ \left(1-\left(\omega_{B}/\omega\right)^{2}\right)}\ \mathbf{T}^{-1}\ \vec{E}
## end
#1121, 51:
\vec{v}=\frac{i*q}{\omega*m_e}*\mat{T}^{-1}*\vec{E}
## end
#1124, 90:
\vec{k}\cdot \vec{v}=\frac{i*q}{\omega*m_e*(1-(\omega_B/\omega)^{2})}*\mat{T}^{-1}*\vec{E}
## end
#1128, 416:
<!--
+[H函数](,估算)
-->

%[1].
E field induced velocity:
%[2].
B field induced velocity:
%[3].
%[4].
%[5].
%[6].
%[7].
%[8].
%[9].
As a result, we should replace \(\beta_0\) by \((\omega_B/\omega)\), 
%[10].
%[11].
%[12].


<!--
[12].:
式(11)转换为"表达式"
式(11)转换为"Matlab"
将"\Delta n=\frac{\omega_p^2}{\omega^{2}}*\frac{\beta_0}{2*\gamma^3}*(\frac{\omega_B}{\omega})"记作为式(12)

验证公式:...
+[新建阅读窗口](,验证公式)
更新式(7)
+[H函数](,估算)
-->
## end
#1130, 30:
\vec{F}=-i\ \omega\ m\ \vec{v}
## end
#1132, 34:
\vec{v_{1}}=i\ q\ \vec{E}/m/\omega
## end
#1134, 36:
\vec{F}=q\ \vec{v_{1}}\times \vec{B}
## end
#1136, 31:
\vec{v_{2}}=i\ \vec{F}/m/\omega
## end
#1138, 52:
\vec{v_{2}}=i\ q/m/\omega\ \vec{v_{1}}\times \vec{B}
## end
#1139, 27:
\vec{F}=-i*\omega*m*\vec{v}
## end
#1142, 30:
\vec{v_1}=i*q*\vec{E}/m/\omega
## end
#1145, 33:
\vec{F}=q*\vec{v_1}\times \vec{B}
## end
#1148, 28:
\vec{v_2}=i*\vec{F}/m/\omega
## end
#1151, 46:
\vec{v_2}=i*q/m/\omega*\vec{v_1}\times \vec{B}
## end
#1154, 25:
q*\vec{v_1}\times \vec{B}
## end
#1156, 7:
\vec{F}
## end
#1158, 1:
)
## end
#1160, 1:
)
## end
#1163, 41:
\vec{v_{2}}=i\ q\ B/m/\omega\ \vec{v_{1}}
## end
#1165, 52:
\vec{v_{2}}=i\ q\ B/m/\omega\ i\ q\ \vec{E}/m/\omega
## end
#1167, 61:
\vec{v_{2}}=-\left(\frac{q}{m\ \omega}\right)^{2}\ B\ \vec{E}
## end
#1169, 69:
v_{2}=-\frac{q}{m\ \omega}\ \left(\frac{\omega_{B}}{\omega}\right)\ E
## end
#1170, 34:
\vec{v_2}=i*q*B/m/\omega*\vec{v_1}
## end
#1173, 45:
\vec{v_2}=i*q*B/m/\omega*i*q*\vec{E}/m/\omega
## end
#1176, 20:
i*q*\vec{E}/m/\omega
## end
#1178, 9:
\vec{v_1}
## end
#1180, 1:
)
## end
#1182, 45:
\vec{v_2}=-(\frac{q}{m*\omega})^{2}*B*\vec{E}
## end
#1185, 51:
v_2=-\frac{q}{m*\omega}*(\frac{\omega_B}{\omega})*E
## end
#1189, 203:
n=\sqrt{1+\left(J_{0}\ \frac{\mu_{0}\ q\ c}{2\ m\ \omega^{2}}\right)^{2}\ \left(\frac{\omega_{B}}{\omega}\right)^{2}}-J_{0}\ \frac{\mu_{0}\ q\ c}{2\ m\ \omega^{2}}\ \left(\frac{\omega_{B}}{\omega}\right)
## end
#1191, 94:
\Delta n=J_{0}\ \frac{\mu_{0}\ q\ c}{2\ m\ \omega^{2}}\ \left(\frac{\omega_{B}}{\omega}\right)
## end
#1193, 115:
\Delta n=\frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{\beta_{0}}{2\ \gamma^{3}}\ \left(\frac{\omega_{B}}{\omega}\right)
## end
#1194, 142:
n=\sqrt{1+(J_0*\frac{\mu_0*q*c}{2*m*\omega^{2}})^2*(\frac{\omega_B}{\omega})^2}-J_0*\frac{\mu_0*q*c}{2*m*\omega^{2}}*(\frac{\omega_B}{\omega})
## end
#1197, 71:
\Delta n=J_0*\frac{\mu_0*q*c}{2*m*\omega^{2}}*(\frac{\omega_B}{\omega})
## end
#1200, 91:
\Delta n=\frac{\omega_p^2}{\omega^{2}}*\frac{\beta_0}{2*\gamma^3}*(\frac{\omega_B}{\omega})
## end
#1204, 460:
%{
+[M函数](,验证公式)

估算数据:...
测试矩阵:...
%}


physics_constant;
addpath('Matlab/funcs');
addpath('Matlab/plasma');

q=e;
n_0=1e25;
B=30;
beta_0=0.03;
lm_0=873e-9;
L=100e-6;

%{
+[M函数](,验证公式)
%}
k_r=[1,0,0];
B_r=[1,1,1];
beta_r=[1,1,1];
beta_0=0.2;

k_r=k_r/norm(k_r);
B_r=B_r/norm(B_r);
beta_r=beta_r/norm(beta_r);

gamma=1/sqrt(1-beta_0^2);
k_0=2*pi/lm_0;
B0=B*B_r;

[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B0);
n_r
E1
E2

%{
+[M函数](,验证公式)
%}
## end
#1206, 669:
%{
+[M函数](,估算数据)
%}


physics_constant;
q=e;
n_0=1e25;
B=30;
beta_0=0.03;
lm_0=873e-9;
L=100e-6;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;
gamma=1/sqrt(1-beta_0^2);

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)+(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));
n_R=sqrt(1-(omega_p.^2./omega.^2)./(1+omega_B./omega));
n_L=sqrt(1-(omega_p.^2./omega.^2)./(1-omega_B./omega));
Dn=(omega_p.^2)./(omega.^2).*(beta_0)./(2.*gamma.^3).*((omega_B)./(omega));

Dphi_1=(n_o-n_x)*L*k_0/pi*180
Dphi_2=(n_R-n_L)*L*k_0/pi*180
Dphi_3=Dn*L*k_0/pi*180




%{
+[M函数](,估算数据)
%}
## end
#1208, 399:
%{
+[M函数](,验证公式)

估算数据:...
%}


physics_constant;
q=e;
n_0=1e25;
B=30;
beta_0=0.03;
lm_0=873e-9;
L=100e-6;

%{
+[M函数](,验证公式)
%}
k_r=[1,0,0];
B_r=[1,1,1];
beta_r=[1,1,1];
beta_0=0.2;

k_r=k_r/norm(k_r);
B_r=B_r/norm(B_r);
beta_r=beta_r/norm(beta_r);

gamma=1/sqrt(1-beta_0^2);
k_0=2*pi/lm_0;
B0=B*B_r;

[n_r,E1,E2]=plasma_refractive_index(lm_0,k_r,n_0,gamma,beta_r,B0);
n_r
E1
E2

%{
+[M函数](,验证公式)
%}
## end
#1210, 1171:
<!--
+[H函数](,纵波)
-->

<h2>Basic formulas</h2>
%[1].
%[1.1].
%[2].
%[3].
%[3.1].
%[4].

<h2>Relativistic plasma without flow terms</h2>
There is no magnetic field in this case and we will ignore the magnetic field in the laser field for now. Then the equation is, 
%[5].
%[6].
The above formula is wrong. It should be,
%[6.1].
To simplify the problem, let's assume that \(\vec{v_0}=0\) at the beginning, 
%[7].
%[8].
%[9].
%[10].
%[11].
The expression of M is,
%[12].
%[13].
%[14].
%[15].
%[16].
The coefficient matrix is,
%[17].
It's wrong, because of equation (6). The correct one is,
%[17.1].

<h2>Relativistic plasma</h2>
The equation with all terms is,
%[18].
%[19].
%[20].
Finally, 
%[21].
%[22].

<h2>Current shift</h2>
The expression of refractive index caused by current shift is,
%[23].
%[24].
%[25].

The laser B-field induced current shift is,
%[26].
%[27].
%[28].

The external B-field induced current shift is,
%[29].
%[30].
%[31].


<!--
[31].:
式(22)转换为"Matlab"
式(31)转换为"表达式"
将"\Delta n_rB=(\frac{\omega_B/\omega}{2})*\frac{\omega_p^2}{\omega^{2}}*\frac{J_0}{q*n_e*c}"记作为式(31)

将"\vec{J_0}=J_0"代入到式(25)
更新式(25)
验证公式(M函数):...
+[新建阅读窗口](,验证公式)
+[H函数](,纵波)
-->
## end
#1212, 126:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=-i\ \omega\ \mu_{0}\ \vec{J}
## end
#1214, 51:
\vec{J}=q\ n_{0}\ \vec{v_{1}}+q\ n_{1}\ \vec{v_{0}}
## end
#1216, 138:
q\ \vec{E}+\frac{q}{\omega}\ \vec{v_{0}}\times \left(\vec{k}\times \vec{E}\right)+q\ \vec{v}\times \vec{B}=\mathbf{M}\ \frac{d\vec{v}}{dt}
## end
#1218, 77:
n_{1}=\frac{\vec{k}\cdot \vec{v_{1}}\ n_{0}}{\omega-\vec{v_{0}}\cdot \vec{k}}
## end
#1220, 126:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=-i\ \omega\ \mu_{0}\ \vec{J}
## end
#1222, 107:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#1225, 39:
\vec{J}=q*n_0*\vec{v_1}+q*n_1*\vec{v_0}
## end
#1228, 114:
q*\vec{E}+\frac{q}{\omega}*\vec{v_0}\times (\vec{k}\times \vec{E})+q*\vec{v}\times \vec{B}=\mat{M}*\d{\vec{v}}_{t}
## end
#1231, 68:
n_1=\frac{\vec{k}\cdot \vec{v_1}*n_0}{\omega-\vec{v_0}\cdot \vec{k}}
## end
#1235, 166:
q\ \vec{E}+\frac{q}{\omega}\ \left(\vec{v_{0}}\cdot \vec{E}\ \vec{k}-\vec{v_{0}}\cdot \vec{k}\ \vec{E}\right)+q\ \vec{v}\times \vec{B}=\mathbf{M}\ \frac{d\vec{v}}{dt}
## end
#1236, 138:
q*\vec{E}+\frac{q}{\omega}*(\vec{v_0}\cdot \vec{E}*\vec{k}-\vec{v_0}\cdot \vec{k}*\vec{E})+q*\vec{v}\times \vec{B}=\mat{M}*\d{\vec{v}}_{t}
## end
#1240, 41:
i\ \vec{k}\cdot \vec{E}=q\ n/\epsilon_{0}
## end
#1241, 37:
i*\vec{k}\cdot \vec{E}=q*n/\epsilon_0
## end
#1245, 57:
\vec{v_{1}}=\frac{q}{i\ \omega}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1247, 52:
n_{1}=\frac{\vec{k}\cdot \vec{v_{1}}\ n_{0}}{\omega}
## end
#1249, 130:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\vec{k}\ n_{1}/\epsilon_{0}\ q/i=-i\ \omega\ \mu_{0}\ q\ n_{0}\ \vec{v_{1}}
## end
#1250, 107:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#1253, 49:
\vec{v_1}=\frac{q}{i*\omega}*\mat{M}^{-1}*\vec{E}
## end
#1256, 45:
n_1=\frac{\vec{k}\cdot \vec{v_1}*n_0}{\omega}
## end
#1259, 111:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+\vec{k}*n_1/\epsilon_0*q/i=-i*\omega*\mu_0*q*n_0*\vec{v_1}
## end
#1263, 234:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}-\vec{k}\ q\ \frac{\vec{k}\cdot \frac{q}{\omega}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}}{\omega}/\epsilon_{0}=-i\ \omega\ \mu_{0}\ q\ n_{0}\ \frac{q}{i\ \omega}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1265, 193:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}-\frac{\vec{k}\ q^{2}\ n_{0}}{\omega^{2}\ \epsilon_{0}}\ \vec{k}\ \mathbf{M}^{-1}\ \vec{E}=-\mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1267, 194:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\frac{c^{2}}{\omega^{2}}\ \vec{k}\ \vec{k}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}=\mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1269, 99:
\mathbf{M}=\gamma\ m_{0}\ \left(\mathbf{I}+\gamma^{2}\ \left(\vec{\beta}\ \vec{\beta}\right)\right)
## end
#1271, 212:
\vec{E}-n_{r}^{2}\ \vec{E}-\frac{n_{r}^{2}\ c^{2}}{\omega^{2}}\ \vec{k_{0}}\ \vec{k_{0}}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}=-\frac{c^{2}}{\omega^{2}}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1272, 205:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}-\vec{k}*q*\frac{\vec{k}\cdot \frac{q}{\omega}*n_0*\mat{M}^{-1}*\vec{E}}{\omega}/\epsilon_0=-i*\omega*\mu_0*q*n_0*\frac{q}{i*\omega}*\mat{M}^{-1}*\vec{E}
## end
#1275, 167:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}-\frac{\vec{k}*q^{2}*n_0}{\omega^{2}*\epsilon_0}*\vec{k}*\mat{M}^{-1}*\vec{E}=-\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}
## end
#1279, 1:
)
## end
#1281, 167:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+\frac{c^{2}}{\omega^{2}}*\vec{k}*\vec{k}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}=\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}
## end
#1284, 65:
\mat{M}=\gamma*m_0*(\mat{I}+\gamma^{2}*(\vec{\beta}*\vec{\beta}))
## end
#1288, 698:
%{
+[M函数](,验证公式)
Nini, 打开plasma的plasma_refractive_index(节点)

验证纵波:...
测试相位差:...
plasma_refractive_index_LW(M函数):...
+[新建阅读窗口](,plasma_refractive_index_LW)
%}

physics_constant;
addpath("Matlab/plasma")

lm_0=873e-9;
I=eye(3);
n_0=1e25;
k_r=[1,0,0];
beta_r=[1,-0.6,0];
% gamma=1.2;
beta0=0.3;
gamma=1/sqrt(1-beta0^2);

%{
+[M函数](,验证公式)
%}

[n_out1,E1a,E2a,E3a]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma,beta_r,"no flow");
[n_out2,E1b,E2b,E3b]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma,beta_r,"flow");

disp(sprintf("n_1=%.6f,n_2=%.6f,n_3=%.6f",n_out1(1),n_out1(2),n_out2(3)))
disp(sprintf("n_1=%.6f,n_2=%.6f,n_3=%.6f",n_out2(1),n_out2(2),n_out2(3)))

n_out2(1)-n_out2(2)

%{
+[M函数](,验证公式)
%}
## end
#1289, 176:
\vec{E}-n_r^{2}*\vec{E}-\frac{n_r^{2}*c^{2}}{\omega^{2}}*\vec{k_0}*\vec{k_0}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}=-\frac{c^{2}}{\omega^{2}}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}
## end
#1293, 224:
n_{r}^{2}\ \vec{E}+n_{r}^{2}\ \frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\ \vec{E}=\vec{E}+\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1294, 177:
n_r^{2}*\vec{E}+n_r^{2}*\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1}*\vec{E}=\vec{E}+\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*\mat{M}^{-1}*\vec{E}
## end
#1298, 245:
n_{r}^{2}\ \left(\mathbf{I}+\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)\ \vec{E}=\left(\mathbf{I}+\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \mathbf{M}^{-1}\right)\ \vec{E}
## end
#1300, 250:
n_{r}^{2}\ \vec{E}=\left(\mathbf{I}-\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)^{-1}\ \left(\mathbf{I}-\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \mathbf{M}^{-1}\right)\ \vec{E}
## end
#1302, 229:
\mathbf{T}=\left(\mathbf{I}+\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)^{-1}\ \left(\mathbf{I}+\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \mathbf{M}^{-1}\right)
## end
#1303, 173:
n_r^{2}*(\mat{I}+\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})*\vec{E}=(\mat{I}+\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*\mat{M}^{-1})*\vec{E}
## end
#1306, 178:
n_r^{2}*\vec{E}=(\mat{I}-\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})^{-1}*(\mat{I}-\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*\mat{M}^{-1})*\vec{E}
## end
#1309, 160:
\mat{T}=(\mat{I}+\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})^{-1}*(\mat{I}+\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*\mat{M}^{-1})
## end
#1313, 57:
\vec{v_{1}}=\frac{i\ q}{\omega}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1314, 49:
\vec{v_1}=\frac{i*q}{\omega}*\mat{M}^{-1}*\vec{E}
## end
#1318, 229:
\mathbf{T}=\left(\mathbf{I}-\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)^{-1}\ \left(\mathbf{I}-\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \mathbf{M}^{-1}\right)
## end
#1319, 160:
\mat{T}=(\mat{I}-\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})^{-1}*(\mat{I}-\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*\mat{M}^{-1})
## end
#1323, 236:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\frac{c^{2}}{\omega^{2}}\ \vec{k}\ \vec{k}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}=\mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}-i\ \omega\ \mu_{0}\ q\ n_{1}\ \vec{v_{0}}
## end
#1325, 311:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\frac{c^{2}}{\omega^{2}}\ \vec{k}\ \vec{k}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}=\mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}-i\ \omega\ \mu_{0}\ q\ \frac{\vec{k}\cdot \frac{i\ q}{\omega}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}}{\omega}\ \vec{v_{0}}
## end
#1327, 279:
\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\frac{c^{2}}{\omega^{2}}\ \vec{k}\ \vec{k}\ \mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}=\mu_{0}\ q^{2}\ n_{0}\ \mathbf{M}^{-1}\ \vec{E}+\frac{\mu_{0}\ q^{2}\ n_{0}\ \vec{v_{0}}}{\omega}\ \vec{k}\ \mathbf{M}^{-1}\ \vec{E}
## end
#1329, 350:
n_{r}^{2}\ \vec{E}=\left(\mathbf{I}-\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)^{-1}\ \left(\mathbf{I}-\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{2}}\ \mathbf{M}^{-1}-\frac{c^{2}\ \mu_{0}\ q^{2}\ n_{0}}{\omega^{3}}\ \left(\vec{v_{0}}\ \vec{k}\right)\ \mathbf{M}^{-1}\right)\ \vec{E}
## end
#1330, 198:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+\frac{c^{2}}{\omega^{2}}*\vec{k}*\vec{k}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}=\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}-i*\omega*\mu_0*q*n_1*\vec{v_0}
## end
#1333, 266:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+\frac{c^{2}}{\omega^{2}}*\vec{k}*\vec{k}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}=\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}-i*\omega*\mu_0*q*\frac{\vec{k}\cdot \frac{i*q}{\omega}*n_0*\mat{M}^{-1}*\vec{E}}{\omega}*\vec{v_0}
## end
#1336, 41:
\frac{\vec{k}\cdot \vec{v_1}*n_0}{\omega}
## end
#1338, 3:
n_1
## end
#1340, 1:
)
## end
#1342, 39:
\frac{i*q}{\omega}*\mat{M}^{-1}*\vec{E}
## end
#1344, 9:
\vec{v_1}
## end
#1346, 1:
)
## end
#1348, 235:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+\frac{c^{2}}{\omega^{2}}*\vec{k}*\vec{k}*\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}=\mu_0*q^{2}*n_0*\mat{M}^{-1}*\vec{E}+\frac{\mu_0*q^2*n_0*\vec{v_0}}{\omega}*\vec{k}*\mat{M}^{-1}*\vec{E}
## end
#1351, 246:
n_r^{2}*\vec{E}=(\mat{I}-\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})^{-1}*(\mat{I}-\frac{c^{2}*\mu_0*q^{2}*n_0}{\omega^{2}}*\mat{M}^{-1}-\frac{c^2*\mu_0*q^2*n_0}{\omega^3}*(\vec{v_0}*\vec{k})*\mat{M}^{-1})*\vec{E}
## end
#1355, 333:
n_{r}^{2}\ \vec{E}=\left(\mathbf{I}-\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \left(\vec{k_{0}}\ \vec{k_{0}}\right)\ \mathbf{M}^{-1}\right)^{-1}\ \left(\mathbf{I}-\frac{q^{2}\ n_{0}}{\epsilon_{0}\ \omega^{2}}\ \mathbf{M}^{-1}-\frac{q}{\epsilon_{0}\ \omega^{3}}\ \left(\vec{J_{0}}\ \vec{k}\right)\ \mathbf{M}^{-1}\right)\ \vec{E}
## end
#1356, 239:
n_r^{2}*\vec{E}=(\mat{I}-\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*(\vec{k_0}*\vec{k_0})*\mat{M}^{-1})^{-1}*(\mat{I}-\frac{q^{2}*n_0}{\epsilon_0*\omega^{2}}*\mat{M}^{-1}-\frac{q}{\epsilon_0*\omega^3}*(\vec{J_0}*\vec{k})*\mat{M}^{-1})*\vec{E}
## end
#1360, 63:
\Delta n_{r}=A\ \frac{J_{0}\ q\ k}{\epsilon_{0}\ m\ \omega^{3}}
## end
#1362, 77:
\Delta n_{r}=A\ \frac{q\ n_{r}}{\epsilon_{0}\ m\ \omega^{2}}\ \frac{J_{0}}{c}
## end
#1364, 83:
\Delta n_{r}=A\ n_{r}\ \frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{J_{0}}{q\ n_{e}\ c}
## end
#1365, 52:
\Delta n_r=A*\frac{J_0*q*k}{\epsilon_0*m*\omega^{3}}
## end
#1368, 64:
\Delta n_r=A*\frac{q*n_r}{\epsilon_0*m*\omega^{2}}*\frac{J_0}{c}
## end
#1371, 68:
\Delta n_r=A*n_r*\frac{\omega_p^{2}}{\omega^{2}}*\frac{J_0}{q*n_e*c}
## end
#1375, 63:
\Delta n_{rp}=J_{0}\ \frac{\mu_{0}\ q\ v_{0}}{2\ m\ \omega^{2}}
## end
#1377, 81:
\Delta n_{rp}=\frac{v_{0}}{2\ c}\ \frac{q}{\epsilon_{0}\ c\ m\ \omega^{2}}\ J_{0}
## end
#1379, 95:
\Delta n_{rp}=\frac{\beta_{0}}{2}\ \frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{J_{0}}{q\ n_{e}\ c}
## end
#1380, 50:
\Delta n_rp=J_0*\frac{\mu_0*q*v_0}{2*m*\omega^{2}}
## end
#1383, 67:
\Delta n_rp=\frac{v_0}{2*c}*\frac{q}{\epsilon_0*c*m*\omega^{2}}*J_0
## end
#1386, 79:
\Delta n_rp=\frac{\beta_0}{2}*\frac{\omega_p^2}{\omega^{2}}*\frac{J_0}{q*n_e*c}
## end
#1390, 99:
\Delta n_{rB}=J_{0}\ \frac{\mu_{0}\ q\ c}{2\ m\ \omega^{2}}\ \left(\frac{\omega_{B}}{\omega}\right)
## end
#1392, 114:
\Delta n_{rB}=\left(\frac{1}{2}\ \frac{\omega_{B}}{\omega}\right)\ \frac{q}{\epsilon_{0}\ c\ m\ \omega^{2}}\ J_{0}
## end
#1394, 116:
\Delta n_{rB}=\left(\frac{\omega_{B}/\omega}{2}\right)\ \frac{\omega_{p}^{2}}{\omega^{2}}\ \frac{J_{0}}{q\ n_{e}\ c}
## end
#1395, 74:
\Delta n_rB=J_0*\frac{\mu_0*q*c}{2*m*\omega^{2}}*(\frac{\omega_B}{\omega})
## end
#1398, 89:
\Delta n_rB=(\frac{1}{2}*\frac{\omega_B}{\omega})*\frac{q}{\epsilon_0*c*m*\omega^{2}}*J_0
## end
#1401, 89:
\Delta n_rB=(\frac{\omega_B/\omega}{2})*\frac{\omega_p^2}{\omega^{2}}*\frac{J_0}{q*n_e*c}
## end
#1405, 777:
%{
+[M函数](,验证纵波)
%}

physics_constant;

lm_0=873e-9;
I=eye(3);
n_0=1e25;
k_r=[1,0,0];
beta_r=[1,1,0];
gamma=1.2;
%{

+[M函数](,验证公式)
%}

q=e;
k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);
M0=gamma.*(I+gamma.^(2).*beta'*beta);

% A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^(-1))^(-1)*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*m_e.*omega.^2)*M0^(-1))
A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1)

values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(result(1,1));
n2=sqrt(result(1,2));
n3=sqrt(result(1,3));
n_out=[n1,n2,n3]

E1=result(2:end,1)
E2=result(2:end,2)
E3=result(2:end,3)



%{
+[M函数](,验证公式)
%}
## end
#1406, 1:
)
## end
#1408, 1:
)
## end
#1411, 665:
%{
+[M函数](,测试相位差)

plasma_refractive_index_current_shift(M函数):...
%}

physics_constant;
q=e;
n_0=1e25;
B=30;
beta_0=0.03;
lm_0=873e-9;
L=100e-6;
A=1;
n_r=1;

J_0=n_0*beta_0*c*q;
k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;
gamma=1/sqrt(1-beta_0^2);
n_e=n_0;


Delta_n_r=A.*n_r.*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);
Delta_n_rp=(beta_0)./(2).*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);
Delta_n_rB=((omega_B./omega)./(2)).*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);


Dphi_1=Delta_n_r*L*k_0/pi*180
Dphi_2=Delta_n_rp*L*k_0/pi*180
Dphi_3=Delta_n_rB*L*k_0/pi*180


%{
omega_B/omega
+[M函数](,测试相位差)
%}
## end
#1413, 1122:
%{
地址::Matlab/plasma/plasma_refractive_index_LW.m
+[保存M函数](,plasma_refractive_index_LW)
测试:...

保存:...
%}

function [n_out,E1,E2,E3]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma,beta_r,type_txt)

physics_constant;

% lm_0=873e-9;
% n_0=1e25;
% k_r=[1,0,0];
% beta_r=[1,3,0];
% gamma=1.2;
% beta0=0.4;

I=eye(3);

q=e;
k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
% gamma=1/sqrt(1-beta0^2);
beta=beta0*beta_r/norm(beta_r);
M0=gamma.*(I+gamma.^(2).*beta'*beta);
J_0=q*n_0*beta*c;

if strcmp(type_txt,'no flow')
    A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1);
else
    A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1-(q)./(epsilon_0.*m_e.*omega.^2*c).*(J_0'*k_0)*M0^-1);
end

values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(result(1,1));
n2=sqrt(result(1,2));
n3=sqrt(result(1,3));
n_out=[n1,n2,n3];

E1=result(2:end,1);
E2=result(2:end,2);
E3=result(2:end,3);


end


%{
+[保存M函数](,plasma_refractive_index_LW)
%}
## end
#1415, 42:
Matlab/plasma/plasma_refractive_index_LW.m
## end
#1420, 1165:
%{
+[M函数](,验证公式)
Nini, 打开plasma的plasma_refractive_index(节点)

验证驻波:...
测试相位差:...
plasma_refractive_index_LW(M函数):...
+[新建阅读窗口](,plasma_refractive_index_LW)
J_0
%}

physics_constant;

lm_0=873e-9;
I=eye(3);
n_0=1e25;
k_r=[1,0,0];
beta_r=[1,3,0];
% gamma=1.2;
beta0=0.4;

%{
+[M函数](,测试)
%}

q=e;
k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

% beta0=(sqrt(gamma.^(2)-1))./(gamma);
gamma=1/sqrt(1-beta0^2);
beta=beta0*beta_r/norm(beta_r);
J_0=q*n_0*beta*c;
M0=gamma.*(I+gamma.^(2).*beta'*beta);

%{
+[M函数](,测试)
%}

% A1=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^(-1))^(-1)*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^(-1));

% A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1);

A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1-(q)./(epsilon_0.*m_e.*omega.^2*c).*(J_0'*k_0)*M0^-1);


values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(result(1,1));
n2=sqrt(result(1,2));
n3=sqrt(result(1,3));
n_out=[n1,n2,n3]

E1=result(2:end,1)
E2=result(2:end,2)
E3=result(2:end,3)



%{
+[M函数](,测试)
%}
## end
#1422, 1090:
%{
地址::Matlab/plasma/plasma_refractive_index_LW.m
+[保存M函数](,plasma_refractive_index_LW)
测试:...
%}

function [n_out,E1,E2,E3]=plasma_refractive_index_LW(lm_0,k_r,n_0,gamma,beta_r,type_txt)

physics_constant;

% lm_0=873e-9;
% n_0=1e25;
% k_r=[1,0,0];
% beta_r=[1,3,0];
% gamma=1.2;
% beta0=0.4;

I=eye(3);

q=e;
k=2*pi/lm_0;
omega=2*pi*c/lm_0;
k_0=k_r/norm(k_r);

beta0=(sqrt(gamma.^(2)-1))./(gamma);
% gamma=1/sqrt(1-beta0^2);
beta=beta0*beta_r/norm(beta_r);
M0=gamma.*(I+gamma.^(2).*beta'*beta);
J_0=q*n_0*beta*c;

if strcmp(type_txt,'no flow')
    A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1);
else
    A=(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2).*(k_0'*k_0)*M0^-1)^-1*(I-(q.^2.*n_0)./(epsilon_0.*m_e.*omega.^2)*M0^-1-(q)./(epsilon_0.*m_e.*omega.^2*c).*(J_0'*k_0)*M0^-1);
end

values=eig(A)';
[vec,~]=eig(A);
result=sortrows([values;vec]')';

n1=sqrt(result(1,1));
n2=sqrt(result(1,2));
n3=sqrt(result(1,3));
n_out=[n1,n2,n3];

E1=result(2:end,1);
E2=result(2:end,2);
E3=result(2:end,3);


end


%{
+[M函数](,验证公式)
%}
## end
#1424, 734:
%{
地址::Matlab/plasma/plasma_refractive_index_current_shift.m
+[保存M函数](,plasma_refractive_index_current_shift)
%}

function [Delta_n_r,Delta_n_rp,Delta_n_rB]=plasma_refractive_index_current_shift(lm_0,k_r,n_0,gamma,beta_r,B,n_r)
physics_constant;

q=e;

beta0=(sqrt(gamma.^(2)-1))./(gamma);
beta=beta0*beta_r/norm(beta_r);
J_0=n_0*beta(2)*c*q;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;
n_e=n_0;


Delta_n_r=n_r.*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);
Delta_n_rp=(beta(2))./(2).*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);
Delta_n_rB=((omega_B./omega)./(2)).*(omega_p.^2)./(omega.^2).*(J_0)./(q.*n_e.*c);


end

%{
+[保存M函数](,plasma_refractive_index_current_shift)
%}
## end
#1427, 53:
Matlab/plasma/plasma_refractive_index_current_shift.m
## end
#1433, 148:


1D均匀模拟:...
2D均匀模拟:...
不均匀模拟:...
测试不注入:...
运行模拟:...
获取数据:...
+[新建阅读窗口](,2D均匀模拟)
+[新建阅读窗口](,运行模拟)
+[新建阅读窗口](,获取数据)

分析均匀流体:...
+[新建阅读窗口](,分析均匀流体)



## end
#1435, 875:
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_1D_0
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传


代码:...
+[新建阅读窗口](,代码)
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"1D"(+[召唤星辰],)
+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)


有外场
外场的类型是"磁场"
外场的场强是"0,0,0"

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Jy__plasma_2"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子和正电子
有什么

模拟空间是长方形(200e-6,80e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(200e-6,80e-6)
窗口的启动时间是"700e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"
电子的速度方向是"0,1,0."
电子的beta是"0.99"

正电子的数密度是"1e25"
正电子的电荷是"1"
正电子的速度方向是"0,1,0."
正电子的beta是"0.99"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的展宽是"inf"
探测光的腰宽是"20e-6"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,0)



模拟动画:...
+[召唤星辰]"生成PIC一维动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#1437, 456:

p::
p是子进程"ssh xtcheng@stampede2.tacc.utexas.edu"
在p中, 运行指令"ls"

在p中, 运行指令"cd $WORK/Smilei/Smilei;ls"
在p中, 运行指令"source $WORK/Smilei/Smilei/smilei_para.sh"

在p中, 运行指令"rm -rf $WORK/sim_folder;mkdir $WORK/sim_folder"

在p中, 运行指令"cd $WORK/sim_folder;ls"
在p中, 运行指令"cd $WORK/sim_folder/RFB_2D_090_beta_func;ls"
在p中, 运行指令"$WORK/Smilei/Smilei/smilei_test run.py"

在p中, 运行指令"dos2unix myscript.txt"
在p中, 运行指令"date;sbatch myscript.txt"
在p中, 运行指令"squeue -u xtcheng"




## end
#1439, 386:
运行指令"scp -r xtcheng@stampede2.tacc.utexas.edu:$WORK/sim_folder /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
运行指令"cp -r /home/xiantao/Documents/sim_output/sim_folder_smilei /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
运行指令"nautilus /media/xiantao/Elements/LWFA/FDH/Smilei"
运行指令"mkdir /media/xiantao/Elements/LWFA/FDH/Smilei"

直接分析h5:...
直接分析h5_2D:...
测试注入:...

+[新建阅读窗口](,直接分析h5)




## end
#1442, 860:
%{
+[M函数](,直接分析h5)

单一场:...
观察DE:...
方向对比:...

read_data_1D_Smilei_h5(M函数):...
+[新建阅读窗口](,read_data_1D_Smilei_h5)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";

%{
+[M函数](,直接分析h5)
%}
ti=13000;
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,field);

field='Jy';
[x,Jy]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);

field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);


subplot(2,1,1)
plot(x/1e-6,Ey,x/1e-6,-Ez)
axis([180,200,-5e10,5e10])

subplot(2,1,2)
% plot(x,Jy,x,-Jz)
% plot(x/1e-6,Ey+Ez)
% axis([180,200,-3e8,3e8])

plot(x/1e-6,Rho)
% axis([180,200,-2e23,2e23])


%{
plot(x,Rho)
+[M函数](,直接分析h5)
%}
## end
#1444, 1133:
%{
地址::Matlab/readData/read_data_1D_Smilei_h5.m
+[保存M函数](,read_data_1D_Smilei_h5)
%}

function [x,I,info]=read_data_1D_Smilei_h5(file_name,ti,field_name0,lm_r)

physics_constant;
if nargin < 4
    lm_r=800e-9;
end

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;
E_r=m_e.*c.*omega_r./e;
B_r=m_e.*omega_r./e;
N_r=epsilon_0.*m_e.*omega_r.^(2)./e.^(2);
J_r=c.*e.*N_r;

if strcmp(field_name0,'Bx') || strcmp(field_name0,'By')...
     || strcmp(field_name0,'Bz')
    unit=B_r;
elseif strcmp(field_name0,'Ex') || strcmp(field_name0,'Ey')...
     || strcmp(field_name0,'Ez')
    unit=E_r;
elseif strcmp(field_name0,'Jx') || strcmp(field_name0,'Jy')...
     || strcmp(field_name0,'Jz')
    unit=J_r;
else
    unit=N_r;
end

if strcmp(field_name0,'n')
    field_name=sprintf('/data/%010d/%s',ti,"Rho");
else
    field_name=sprintf('/data/%010d/%s',ti,field_name0);
end

info=h5info(file_name,field_name);
data=h5read(file_name,field_name);
space=h5readatt(file_name,field_name,'gridSpacing');
% unit=h5readatt(file_name,field_name,'unitSI');

x=1:size(data,1);
x=x*space(1)*L_r;
I=data'*unit;

end


%{
+[保存M函数](,read_data_1D_Smilei_h5)
%}
## end
#1447, 40:
Matlab/readData/read_data_1D_Smilei_h5.m
## end
#1452, 54:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0
## end
#1454, 2:
本地
## end
#1456, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#1460, 43:
Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Jy__plasma_2
## end
#1462, 3:
500
## end
#1464, 6:
800e-9
## end
#1475, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#1477, 29:
0.0, 0.0, 0.0002, 0.0002, 0.0
## end
#1479, 8:
0.0, 0.0
## end
#1481, 6:
0.0002
## end
#1483, 5:
8e-05
## end
#1485, 3:
多边形
## end
#1486, 3:
长方形
## end
#1489, 20:
1.5e-8,20.e-7,20.e-7
## end
#1490, 36:
-4e-05, 4e-05, 4e-05, -4e-05, -4e-05
## end
#1492, 29:
0.0, 0.0, 0.0002, 0.0002, 0.0
## end
#1494, 8:
0.0, 0.0
## end
#1496, 6:
0.0002
## end
#1498, 5:
8e-05
## end
#1500, 3:
多边形
## end
#1501, 3:
长方形
## end
#1504, 7:
700e-15
## end
#1506, 5:
0.999
## end
#1508, 4:
1e25
## end
#1510, 6:
0,1,0.
## end
#1512, 4:
0.99
## end
#1514, 4:
1e25
## end
#1516, 1:
1
## end
#1518, 6:
0,1,0.
## end
#1520, 4:
0.99
## end
#1522, 4:
0.01
## end
#1524, 6:
873e-9
## end
#1526, 3:
inf
## end
#1528, 5:
20e-6
## end
#1530, 3:
1,0
## end
#1535, 10:
4e-05, 0.0
## end
#1538, 1872:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0.999*c;
t0=700e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=8e-05;
L1=8e-05;
W0=0.0002;
W1=0.0002;

DW=0.0002-0.0002;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

%代码
n_plasma_2=1e25*ones(size(x));

%代码
n_plasma_1=1e25*ones(size(x));

tau_light_1=inf*2.5;
focus_light_1=[4e-05, 0.0];
w_0_light_1=20e-6;

if isnan(nan)
    init_light_1=focus_light_1(1);
else
    init_light_1=focus_light_1(1)-nan;
end

% Gaussian beam
z_R_light_1=w_0_light_1^2*pi/lm_0;
z=linspace(pt0(1),pt0(1)+W0,100);
w_light_1=w_0_light_1.*sqrt(1+((z-focus_light_1(1))./(z_R_light_1)).^(2));



clf
hold on

rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


contourf(x,y,n_plasma_2);
contourf(x,y,n_plasma_1);
patch([z,fliplr(z)],focus_light_1(2)+[w_light_1/2,-fliplr(w_light_1)/2],[1,0,0],'FaceAlpha',0.2)
h_light_1=patch([z(1),fliplr(z(1))],focus_light_1(2)+[w_light_1(1)/2,-fliplr(w_light_1(1))/2],[1,0,0],'FaceAlpha',0.2);

colorbar

for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

axis([pt0(1)+x1,pt0(1)+x1+W1,pt0(2)-L0/2,pt0(2)+L0/2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

z_t0__light_1=c*t(i)+init_light_1-focus_light_1(1);
z_t_light_1=z(z<z_t0__light_1);
w_t_light_1=w_light_1(z<z_t0__light_1);
h_light_1.XData=[z_t_light_1,fliplr(z_t_light_1)];
h_light_1.YData=focus_light_1(2)+[w_t_light_1/2,-fliplr(w_t_light_1)/2];




title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#1544, 3:
1,1
## end
#1546, 343:
%{
+[M函数](,单一场)

EyEz:...
JyJz:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";
%{
+[M函数](,单一场)
%}
ti=12000;
% field='Jy__plasma_2';
field='Rho';
[x,In]=read_data_1D_Smilei_h5(filename_0,ti,field);


clf
plot(x,In)


%{
+[M函数](,单一场)
%}
## end
#1548, 639:
%{
+[M函数](,直接分析h5)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_1/Fields0.h5";

%{
+[M函数](,直接分析h5)
%}
ti=13000;
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,field);

field='Jy';
[x,Jy]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);


subplot(2,1,1)
plot(x/1e-6,Ey,x/1e-6,-Ez)
axis([180,200,-5e10,5e10])

subplot(2,1,2)
% plot(x,Jy,x,-Jz)
plot(x/1e-6,Ey+Ez)
axis([180,200,-3e8,3e8])


%{
size(data_0)
+[M函数](,直接分析h5)
%}
## end
#1551, 759:
%{
+[M函数](,方向对比)

直接对比:...
对比差值:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_3/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/uniform_1D_00/RFB_1D_3/Fields0.h5";

%{
+[M函数](,方向对比)
%}
ti=13000;
field='Ey';
[x,Ey_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ey_1]=read_data_1D_Smilei_h5(filename_1,ti,field);
field='Ez';
[x,Ez_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ez_1]=read_data_1D_Smilei_h5(filename_1,ti,field);



subplot(2,1,1)
plot(x/1e-6,Ey_0+Ez_0)
% axis([180,200,-5e10,5e10])
% axis([191.5,191.54,5e9,11e9])

subplot(2,1,2)
% plot(x/1e-6,Ey_1+Ez_1)
plot(x/1e-6,Ey_1-Ey_0)
% axis([191.5,191.54,5e9,11e9])



%{
+[M函数](,方向对比)
%}
## end
#1553, 741:
%{
+[M函数](,方向对比)

直接对比:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_2/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/uniform_1D_00/RFB_1D_2/Fields0.h5";

%{
+[M函数](,方向对比)
%}
ti=13000;
field='Ey';
[x,Ey_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ey_1]=read_data_1D_Smilei_h5(filename_1,ti,field);
field='Ez';
[x,Ez_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ez_1]=read_data_1D_Smilei_h5(filename_1,ti,field);



subplot(2,1,1)
plot(x/1e-6,Ey_0,x/1e-6,-Ez_0)
% axis([180,200,-5e10,5e10])
% axis([191.5,191.54,5e9,11e9])

subplot(2,1,2)
plot(x/1e-6,Ey_1,x/1e-6,-Ez_1)
% axis([191.5,191.54,5e9,11e9])



%{
+[M函数](,方向对比)
%}
## end
#1555, 750:
%{
+[M函数](,方向对比)

直接对比:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_3/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/uniform_1D_00/RFB_1D_3/Fields0.h5";

%{
+[M函数](,方向对比)
%}
ti=13000;
field='Ey';
[x,Ey_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ey_1]=read_data_1D_Smilei_h5(filename_1,ti,field);
field='Ez';
[x,Ez_0]=read_data_1D_Smilei_h5(filename_0,ti,field);
[x,Ez_1]=read_data_1D_Smilei_h5(filename_1,ti,field);



subplot(2,1,1)
plot(x/1e-6,Ey_0+Ez_0)
% axis([180,200,-5e10,5e10])
% axis([191.5,191.54,5e9,11e9])

subplot(2,1,2)
% plot(x/1e-6,Ey_1+Ez_1)
plot(x/1e-6,Ey_1-Ey_0)
% axis([191.5,191.54,5e9,11e9])



%{
+[M函数](,方向对比)
%}
## end
#1557, 32:

圆偏光磁场:...
模拟场景:...

多普勒效应:...


## end
#1559, 338:
<!--
+[H函数](,圆偏光磁场)
-->


%[1].
%[2].
%[3].
%[4].

The relation between currents and magnetic fields are,
%[5].
%[6].
%[7].
%[8].

Then,
%[9].

And,
%[10].
%[11].
%[12].
%[13].


As an example,
$$
n_e=1\times 10^{19} cm^{-3},\ \lambda=800\ nm,\ a_0=0.1
\\
B=0.7685\ T
$$




<!--
[14].:
式(11)转换为"表达式"


验证公式:...
更新式(12)
+[H函数](,圆偏光磁场)
-->
## end
#1561, 20:
F=r m_{e} \omega^{2}
## end
#1563, 25:
q\ E=r\ m_{e}\ \omega^{2}
## end
#1565, 32:
r=\frac{q\ E}{m_{e}\ \omega^{2}}
## end
#1567, 28:
v=\frac{q\ E}{m_{e}\ \omega}
## end
#1569, 13:
r j=B/\mu_{0}
## end
#1571, 16:
F=r*m_e*\omega^2
## end
#1574, 20:
q*E=r*m_e*\omega^{2}
## end
#1577, 1:
)
## end
#1579, 28:
r=\frac{q*E}{m_e*\omega^{2}}
## end
#1582, 1:
r
## end
#1583, 1:
r
## end
#1584, 24:
v=\frac{q*E}{m_e*\omega}
## end
#1588, 53:
\frac{q\ E}{m_{e}\ \omega^{2}}\ q\ n_{e}\ v=B/\mu_{0}
## end
#1590, 78:
\frac{q\ E}{m_{e}\ \omega^{2}}\ q\ n_{e}\ \frac{q\ E}{m_{e}\ \omega}=B/\mu_{0}
## end
#1592, 81:
B=\frac{q\ E^{2}\ \mu_{0}}{m_{e}\ \omega}\ \frac{q^{2}\ n_{e}}{m_{e}\ \omega^{2}}
## end
#1593, 11:
r*j=B/\mu_0
## end
#1596, 42:
\frac{q*E}{m_e*\omega^{2}}*q*n_e*v=B/\mu_0
## end
#1599, 1:
)
## end
#1601, 26:
\frac{q*E}{m_e*\omega^{2}}
## end
#1603, 1:
r
## end
#1605, 1:
)
## end
#1607, 63:
\frac{q*E}{m_e*\omega^{2}}*q*n_e*\frac{q*E}{m_e*\omega}=B/\mu_0
## end
#1610, 22:
\frac{q*E}{m_e*\omega}
## end
#1612, 1:
v
## end
#1614, 1:
)
## end
#1616, 61:
B=\frac{q*E^2*\mu_0}{m_e*\omega}*\frac{q^2*n_e}{m_e*\omega^2}
## end
#1620, 76:
B=\frac{q\ \mu_{0}}{m_{e}\ \omega}\ \frac{\omega_{p}^{2}}{\omega^{2}}\ E^{2}
## end
#1622, 14:
E=A_{0} \omega
## end
#1624, 21:
A_{0}=a_{0} m_{e} c/e
## end
#1625, 60:
B=\frac{q*\mu_0}{m_e*\omega}*\frac{\omega_p^2}{\omega^2}*E^2
## end
#1628, 12:
E=A_0*\omega
## end
#1631, 15:
A_0=a_0*m_e*c/e
## end
#1635, 87:
B=\frac{\mu_{0}\ c^{2}\ m_{e}}{e}\ \frac{\omega_{p}^{2}}{\omega^{2}}\ a_{0}^{2}\ \omega
## end
#1637, 85:
B=\frac{m_{e}\ \omega}{\epsilon_{0}\ q}\ \frac{\omega_{p}^{2}}{\omega^{2}}\ a_{0}^{2}
## end
#1640, 72:
B=\frac{\mu_0*c^2*m_e}{e}*\frac{\omega_p^{2}}{\omega^{2}}*a_0^{2}*\omega
## end
#1643, 73:
B=\frac{m_e*\omega}{\epsilon_0*q}*\frac{\omega_p^{2}}{\omega^{2}}*a_0^{2}
## end
#1647, 214:
%{
+[M函数](,验证公式)
%}

physics_constant;

q=e;
n_e=1e25;
a_0=0.1;
lm_0=800e-9;

omega=2*pi*c/lm_0;
omega_p=sqrt(q^2*n_e/m_e);


B=(m_e.*omega)./(epsilon_0.*q).*(omega_p.^2)./(omega.^2).*a_0.^2




%{
+[M函数](,验证公式)
%}
## end
#1649, 943:
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传
+[打开文件夹](,地址)

代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(2D均匀模拟,代码)
+[召唤星辰]"生成Smilei代码"(2D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

+不注入(电子,)
+不注入(正电子,)
不注入(电子,)->+[del](,不注入)
不注入(正电子,)->+[del](,不注入)

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Jy__plasma_1"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子和正电子


模拟空间是长方形(100e-6,160e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(100e-6,160e-6)
窗口的启动时间是"300e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"
电子的速度方向是"0,1,0"
电子的beta是"0.5"

正电子的数密度是"1e25"
正电子的电荷是"1"
正电子的速度方向是"0,1,0"
正电子的beta是"0.5"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的展宽是"inf"
探测光的腰宽是"60e-6"
探测光的腰宽是"20e-6"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,40e-6)
A在(40e-6,0)


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(2D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(2D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#1653, 2:
磁场
## end
#1655, 5:
0,0,0
## end
#1657, 1958:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0.999*c;
t0=300e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=0.00016;
L1=0.00016;
W0=0.0001;
W1=0.0001;

DW=0.0001-0.0001;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

%代码
n_plasma_2=1e25*ones(size(x));

%代码
n_plasma_1=1e25*ones(size(x));

lm_light_1=873e-9;
tau_light_1=inf*2.5;
focus_light_1=[4e-05, 4e-05];
w_0_light_1=20e-6;

if isnan(nan)
    init_light_1=focus_light_1(1);
else
    init_light_1=focus_light_1(1)-nan;
end

% Gaussian beam
z_R_light_1=w_0_light_1^2*pi/lm_light_1;
z=linspace(pt0(1),pt0(1)+W0,100);
w_light_1=w_0_light_1.*sqrt(1+((z-focus_light_1(1))./(z_R_light_1)).^(2));



clf
hold on

rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


contourf(x,y,n_plasma_2);
contourf(x,y,n_plasma_1);
patch([z,fliplr(z)],focus_light_1(2)+[w_light_1/2,-fliplr(w_light_1)/2],[1,0,0],'FaceAlpha',0.2)
h_light_1=patch([z(1),fliplr(z(1))],focus_light_1(2)+[w_light_1(1)/2,-fliplr(w_light_1(1))/2],[1,0,0],'FaceAlpha',0.2);

colorbar

for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

axis([pt0(1)+x1,pt0(1)+x1+W1,pt0(2)-L0/2,pt0(2)+L0/2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

z_t0__light_1=c*t(i)+init_light_1-focus_light_1(1);
z_t_light_1=z(z<z_t0__light_1);
w_t_light_1=w_light_1(z<z_t0__light_1);
h_light_1.XData=[z_t_light_1,fliplr(z_t_light_1)];
h_light_1.YData=focus_light_1(2)+[w_t_light_1/2,-fliplr(w_t_light_1)/2];




percent_t=i/length(t)*100;
title(sprintf('T=%.2f fs, L=%.2f um, Progress=%.2f %%',t(i)/1e-15,t(i)/1e-6*c,percent_t))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#1659, 644:
%{
+[M函数](,直接分析h5_2D)

获取数据:...
对比一维分布:...
对比电流:...
质量分布:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_0_9/Fields0.h5";

%{
+[M函数](,直接分析h5_2D)
%}
tis=6000;
i_y0=61;

field='Rho';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
% Rho=I_1(:,2000:end);
Rho_1=I_1(70:end,1800:end);
Rho_2=I_1(33:45,1800:end);

subplot(2,1,1)
surf(Rho_1)
shading interp
view([0,90])
colorbar

subplot(2,1,2)
surf(Rho_2)
shading interp
view([0,90])
colorbar

%{
+[M函数](,直接分析h5_2D)
%}
## end
#1661, 66:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func
## end
#1663, 2:
上传
## end
#1665, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#1669, 43:
Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Jy__plasma_1
## end
#1671, 3:
500
## end
#1673, 6:
800e-9
## end
#1684, 36:
-8e-05, 8e-05, 8e-05, -8e-05, -8e-05
## end
#1686, 29:
0.0, 0.0, 0.0001, 0.0001, 0.0
## end
#1688, 8:
0.0, 0.0
## end
#1690, 6:
0.0001
## end
#1692, 7:
0.00016
## end
#1694, 3:
多边形
## end
#1695, 3:
长方形
## end
#1698, 20:
1.5e-8,20.e-7,20.e-7
## end
#1699, 36:
-8e-05, 8e-05, 8e-05, -8e-05, -8e-05
## end
#1701, 29:
0.0, 0.0, 0.0001, 0.0001, 0.0
## end
#1703, 8:
0.0, 0.0
## end
#1705, 6:
0.0001
## end
#1707, 7:
0.00016
## end
#1709, 3:
多边形
## end
#1710, 3:
长方形
## end
#1713, 7:
300e-15
## end
#1715, 5:
0.999
## end
#1717, 4:
1e25
## end
#1719, 5:
0,1,0
## end
#1721, 3:
0.5
## end
#1723, 4:
1e25
## end
#1725, 1:
1
## end
#1727, 5:
0,1,0
## end
#1729, 3:
0.5
## end
#1731, 4:
0.01
## end
#1733, 6:
873e-9
## end
#1735, 3:
inf
## end
#1737, 5:
20e-6
## end
#1739, 3:
1,1
## end
#1744, 12:
4e-05, 4e-05
## end
#1747, 656:
地址::/home/xiantao/Documents/sim_output/Smilei_out/test_inj
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传
+[打开文件夹](,地址)

代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(测试不注入,代码)
+[召唤星辰]"生成Smilei代码"(测试不注入,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

+不注入(电子,)
不注入(电子,)->+[del](,不注入)


有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有电子


模拟空间是长方形(40e-6,40e-6)
模拟空间的格点尺寸是"7.e-7,7.e-7,7.e-7"

窗口是长方形(40e-6,40e-6)
窗口的启动时间是"1000e-15"
窗口的速度是"0.999"

电子的数密度是"1e15"
电子的速度方向是"1,1,0"
电子的beta是"0.3"


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(测试不注入,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(测试不注入,模拟动画)->+[M函数](,模拟动画)





## end
#1749, 54:
/home/xiantao/Documents/sim_output/Smilei_out/test_inj
## end
#1753, 30:
Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho
## end
#1755, 3:
500
## end
#1757, 6:
800e-9
## end
#1764, 36:
-2e-05, 2e-05, 2e-05, -2e-05, -2e-05
## end
#1766, 27:
0.0, 0.0, 4e-05, 4e-05, 0.0
## end
#1768, 8:
0.0, 0.0
## end
#1770, 5:
4e-05
## end
#1772, 5:
4e-05
## end
#1774, 3:
多边形
## end
#1775, 3:
长方形
## end
#1778, 17:
7.e-7,7.e-7,7.e-7
## end
#1779, 36:
-2e-05, 2e-05, 2e-05, -2e-05, -2e-05
## end
#1781, 27:
0.0, 0.0, 4e-05, 4e-05, 0.0
## end
#1783, 8:
0.0, 0.0
## end
#1785, 5:
4e-05
## end
#1787, 5:
4e-05
## end
#1789, 3:
多边形
## end
#1790, 3:
长方形
## end
#1793, 8:
1000e-15
## end
#1795, 5:
0.999
## end
#1797, 4:
1e15
## end
#1799, 5:
1,1,0
## end
#1801, 3:
0.3
## end
#1803, 1026:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0.999*c;
t0=700e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=4e-05;
L1=4e-05;
W0=4e-05;
W1=4e-05;

DW=4e-05-4e-05;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;
x=linspace(pt0(1),pt0(1)+W0,10000);

%代码
edge_plasma_1=0;
left_edge=edge_plasma_1*3;
right_edge=W0-edge_plasma_1*3;

n_plasma_1=ones(size(x));
z=x;
n_plasma_1(z<left_edge)=exp(-(z(z<left_edge)-left_edge).^2/edge_plasma_1^2);
n_plasma_1(z>right_edge)=exp(-(z(z>right_edge)-right_edge).^2/edge_plasma_1^2);



clf
hold on

axis([pt0(1),pt0(1)+W0,0,1.2])


patch([x,x(1)],[n_plasma_1,n_plasma_1(1)],[0,0,1],'faceAlpha',0.1)
plot(x,n_plasma_1,'b','lineWidth',2)


for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end

axis([pt0(1)+x1,pt0(1)+x1+W1,0,1.2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])



title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#1805, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#1807, 2:
本地
## end
#1810, 612:
%{
+[M函数](,测试注入)

1D:...
2D:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/test_inj/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";

%{
+[M函数](,测试注入)
%}
tis=0:500:7000;

for i=1:length(tis)
ti=tis(i);
field='Ey';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(x,y,I)
view([0,90])
shading interp

pause(0.1)
end

%{
记住"Matlab"
size(I)
surf(I)
plot(max(I))
colormap('default')
+[M函数](,测试注入)
%}
## end
#1812, 457:
%{
+[M函数](,1D)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";

%{
+[M函数](,1D)
%}
tis=0:500:7000;

for i=1:length(tis)
ti=tis(i);
field='Jx';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

plot(mean(I))
pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,1D)
%}
## end
#1814, 488:
%{
+[M函数](,2D)

1D:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/test_inj/Fields0.h5";

%{
+[M函数](,测试注入)
%}
tis=0:500:7000;

for i=1:length(tis)
ti=tis(i);
field='Rho';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(x,y,I)
view([0,90])
shading interp

pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,测试注入)
%}
## end
#1815, 61:
/home/xiantao/Documents/sim_output/Smilei_out/test_inj/run.py
## end
#1817, 2229:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/test_inj/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

"""
import numpy as np


dt = 0.3272844598199132
nx = 56
Lx = 307.8760800517997
Ly = 314.1592653589793
npatch_x = 4

Main(
    geometry = "2Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(7194)*dt,

    cell_length  = [5.497787143782138, 5.497787143782138],
    grid_length = [Lx, Ly],

    number_of_patches = [npatch_x, 1],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)



LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)


Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 5.740660892844831e-13, 

    mean_velocity = [0.21213203435596423, 0.21213203435596423, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

def n_profile_plasma_1 (x,y):
    return 5.740660892844831e-13
def t_profile_plasma_1 (t):
    return 1.

ParticleInjector(
    species   = "_plasma_1",
    box_side  = "ymin",
    time_envelope = t_profile_plasma_1,
    number_density = n_profile_plasma_1, 
    position_initialization = "random",

)


def n_profile_plasma_1 (x,y):
    return 5.740660892844831e-13
def t_profile_plasma_1 (t):
    return 1.

ParticleInjector(
    species   = "_plasma_1",
    box_side  = "xmin",
    time_envelope = t_profile_plasma_1,
    number_density = n_profile_plasma_1, 
    position_initialization = "random",

)





DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho' ],
    every = 500,
)




DiagPerformances(
    every = 50,
)



## end
#1819, 63:
/home/xiantao/Documents/sim_output/Smilei_out/test_inj/info.txt
## end
#1821, 656:
地址::/home/xiantao/Documents/sim_output/Smilei_out/test_inj
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传
+[打开文件夹](,地址)

代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(测试不注入,代码)
+[召唤星辰]"生成Smilei代码"(测试不注入,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

+不注入(电子,)
不注入(电子,)->+[del](,不注入)


有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有电子


模拟空间是长方形(40e-6,40e-6)
模拟空间的格点尺寸是"7.e-7,7.e-7,7.e-7"

窗口是长方形(40e-6,40e-6)
窗口的启动时间是"1000e-15"
窗口的速度是"0.999"

电子的数密度是"1e15"
电子的速度方向是"1,1,0"
电子的beta是"0.3"


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(测试不注入,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(测试不注入,模拟动画)->+[M函数](,模拟动画)





## end
#1823, 67:
/home/xiantao/Documents/sim_output/Smilei_out/test_inj/myscript.txt
## end
#1825, 1559:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A A-pcsli       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/Smilei/smilei run.py



## end
#1828, 85:

1D均匀模拟:...
IFR模拟:...
运行模拟:...
获取数据:...
分析数据:...
+[新建阅读窗口](,1D均匀模拟)
+[新建阅读窗口](,获取数据)

## end
#1830, 781:
地址::/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传


探测光的波长是"1100e-9"
代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"1D"(+[召唤星辰],)
+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

有外场
外场的类型是"磁场"
外场的场强是"1000,0,0"
外场的场强是"0,2000,0"


有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"200"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子


模拟空间是长方形(500e-6,160e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(200e-6,160e-6)
窗口的启动时间是"600e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,40e-6)


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#1832, 2:
上传
## end
#1836, 30:
Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho
## end
#1838, 3:
200
## end
#1840, 6:
800e-9
## end
#1849, 36:
-8e-05, 8e-05, 8e-05, -8e-05, -8e-05
## end
#1851, 29:
0.0, 0.0, 0.0005, 0.0005, 0.0
## end
#1853, 8:
0.0, 0.0
## end
#1855, 6:
0.0005
## end
#1857, 7:
0.00016
## end
#1859, 3:
多边形
## end
#1860, 3:
长方形
## end
#1863, 20:
1.5e-8,20.e-7,20.e-7
## end
#1864, 36:
-8e-05, 8e-05, 8e-05, -8e-05, -8e-05
## end
#1866, 29:
0.0, 0.0, 0.0002, 0.0002, 0.0
## end
#1868, 8:
0.0, 0.0
## end
#1870, 6:
0.0002
## end
#1872, 7:
0.00016
## end
#1874, 3:
多边形
## end
#1875, 3:
长方形
## end
#1878, 7:
600e-15
## end
#1880, 5:
0.999
## end
#1882, 4:
1e25
## end
#1884, 4:
0.01
## end
#1886, 7:
1100e-9
## end
#1888, 3:
inf
## end
#1890, 3:
1,1
## end
#1893, 12:
4e-05, 4e-05
## end
#1898, 1428:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0.999*c;
t0=600e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=0.00016;
L1=0.00016;
W0=0.0005;
W1=0.0002;

DW=0.0005-0.0002;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;
x=linspace(pt0(1),pt0(1)+W0,10000);

%代码
edge_plasma_1=0;
left_edge=edge_plasma_1*3;
right_edge=W0-edge_plasma_1*3;

n_plasma_1=ones(size(x));
z=x;
n_plasma_1(z<left_edge)=exp(-(z(z<left_edge)-left_edge).^2/edge_plasma_1^2);
n_plasma_1(z>right_edge)=exp(-(z(z>right_edge)-right_edge).^2/edge_plasma_1^2);

omega_light_1=2*pi*c/873e-9;
focus_light_1=[4e-05, 4e-05];

if isnan(nan)
    init_light_1=0;
else
    init_light_1=focus_light_1(1)-nan;
end

% Continus beam
f_light_1=@(t)cos(t*omega_light_1).*(sign(-t)+1)/2;



clf
hold on

axis([pt0(1),pt0(1)+W0,0,1.2])


patch([x,x(1)],[n_plasma_1,n_plasma_1(1)],[0,0,1],'faceAlpha',0.1)
plot(x,n_plasma_1,'b','lineWidth',2)
y=f_light_1((x-init_light_1)/c);
y=real(y)/max(abs(y))*0.4+0.6;
h_light_1=plot(x,y);


for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end

axis([pt0(1)+x1,pt0(1)+x1+W1,0,1.2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

x_t=x-init_light_1-t(i)*c;
y=f_light_1(x_t/c);
y=real(y)/max(abs(y))*0.4+0.6;
h_light_1.YData=y;


title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#1900, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#1901, 59:
/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100
## end
#1906, 2:
磁场
## end
#1908, 8:
0,2000,0
## end
#1910, 363:
运行指令"scp -r xtcheng@stampede2.tacc.utexas.edu:$WORK/sim_folder /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
运行指令"cp -r /home/xiantao/Documents/sim_output/sim_folder_smilei /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
运行指令"nautilus /media/xiantao/Elements/LWFA/FDH/Smilei"
运行指令"mkdir /media/xiantao/Elements/LWFA/FDH/Smilei"

直接分析h5:...

+[新建阅读窗口](,直接分析h5)




## end
#1912, 503:
%{
+[M函数](,直接分析h5)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_3/Fields0.h5";
filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";

%{
+[M函数](,直接分析h5)
%}
ti=20000;
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,field);


plot(x/1e-6,Ey,x/1e-6,-Ez)
axis([0,200,-5e10,5e10])

%{
plot(x,Rho)
+[M函数](,直接分析h5)
%}
## end
#1915, 249:
地址::

有模拟空间和窗口
有入射光和电子

模拟空间是长方形(40e-6,80e-6)
模拟空间的深度是"80e-6"
模拟空间的格点尺寸是""

窗口是长方形(40e-6,80e-6)
窗口的启动时间是"700e-15"

电子的数密度是"1e25"
电子的上升沿是"10e-6"

A::
A在(20e-6,0)

入射光的波长是"800e-9"
入射光的腰宽是"20e-6"
入射光的a0是"0.1"
入射光的展宽是"100e-15"
入射光的焦点是A
入射光的偏振态是(1,1)




## end
#1925, 4:
1e25
## end
#1929, 629:
%{
+[M函数](,直接分析h5_2D)
+[打开文件夹]"Matlab/readData"
Nini, 打开FDH的read_data_Smilei_h5(节点)

检查特定密度:...
获取1D数据:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_0_9/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_func/Fields0.h5";

%{
+[M函数](,获取数据)
%}
tis=0:500:10000;

for i=1:length(tis)
ti=tis(i);
% field='Rho__plasma_1';
field='Ez';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(x,y,I)
shading interp
view([0,90])
% axis equal
pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,获取数据)
%}
## end
#1931, 757:
%{
+[M函数](,对比一维分布)
注意到, 扫i_y0的位置会明显改变Ey和Ez的相对强度(这是发生了FR)
但是这个现象很不合理. 因为在真空部分就已经出现了Ey和Ez振幅不同的情况
而且一开始就有, 所以是程序的bug
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090/Fields0.h5";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_func/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_0_5/Fields0.h5";

%{
clf
figure
hold on
+[M函数](,对比一维分布)
%}
tis=6000;
i_y0=61;

field='Ey';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
Ey=I_1;
Ey=Ey(i_y0,:);

field='Ez';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
Ez=I_1;
Ez=Ez(i_y0,:);


plot(x,Ey,x,-Ez)
% axis([600,620,-3e10,3e10])


%{
+[M函数](,对比一维分布)
%}
## end
#1933, 953:
%{
+[M函数](,对比电流)

获取数据:...
对比一维分布:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test_no_large_0/Fields0.h5";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test_no_large/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_270/Fields0.h5";

%{
+[M函数](,对比电流)
%}
tis=6000;
i_y0=61;

field='Rho';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
Rho=I_1(i_y0,:);

field='Jy';
[x,y,I_0]=read_data_Smilei_h5(filename_0,tis,field);
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
Jy=I_1(i_y0,:)-I_0(i_y0,:);

field='Jz';
[x,y,I_0]=read_data_Smilei_h5(filename_0,tis,field);
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
Jz=I_1(i_y0,:)-I_0(i_y0,:);

plot(x,Jy,x,-Jz)
% axis([200,700,-1e23,1e23])


%{
plot(x,Rho)
+[M函数](,对比电流)
%}
## end
#1935, 730:
%{
+[M函数](,直接分析h5_2D)

获取数据:...
对比一维分布:...
对比电流:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test_no_large_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test_no_large/Fields0.h5";

%{
+[M函数](,直接分析h5_2D)
%}
tis=6000;
i_y0=61;

field='Rho';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
% Rho=I_1(:,2000:end);
Rho_1=I_1(70:end,1800:end);
Rho_2=I_1(33:45,1800:end);

subplot(2,1,1)
surf(Rho_1)
shading interp
view([0,90])
colorbar

subplot(2,1,2)
surf(Rho_2)
shading interp
view([0,90])
colorbar

%{
+[M函数](,直接分析h5_2D)
%}
## end
#1941, 1937:
%{
+[M函数](,分析数据)
Nini, 打开ShadowSpectrometer(文件)
lms_t
获取数据:...
+[新建阅读窗口](,获取数据)
梯度下降法:...
(这里不太好用)
计算折射率:...
理论折射率:...
模拟折射率:...
+[M函数](,计算折射率)
+[M函数](,理论折射率)

%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=873e-9;

file_pat_B="/media/xiantao/Elements/LWFA/FDH/Smilei/20230609/CM_1D_B_%d/Fields0.h5";
file_pat_lm="/media/xiantao/Elements/LWFA/FDH/Smilei/20230609/CM_1D_lm_%d/Fields0.h5";

Bs=[100, 300, 500, 1000, 2000, 2500, 3000];
lms=[400, 500, 700, 800, 900, 1000, 1100];
ti=20000;

n_o_B_s=zeros(size(Bs));
n_x_B_s=zeros(size(Bs));

for i=1:length(Bs)
filename_0=sprintf(file_pat_B,Bs(i));
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,'Ey');
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,'Ez');

x0=x(x>5e-6 & x<160e-6);
Ey_out=Ey(x>5e-6 & x<160e-6);
Ez_out=-Ez(x>5e-6 & x<160e-6);

[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lm_0/lm_y;
n_z=lm_0/lm_z;

n_o_B_s(i)=n_y;
n_x_B_s(i)=n_z;
end


n_o_lm_s=zeros(size(lms));
n_x_lm_s=zeros(size(lms));

for i=1:length(lms)
filename_0=sprintf(file_pat_lm,lms(i));
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,'Ey');
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,'Ez');

x0=x(x>5e-6 & x<160e-6);
Ey_out=Ey(x>5e-6 & x<160e-6);
Ez_out=-Ez(x>5e-6 & x<160e-6);

[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lms(i)*1e-9/lm_y;
n_z=lms(i)*1e-9/lm_z;

n_o_lm_s(i)=n_y;
n_x_lm_s(i)=n_z;
end

subplot(2,1,1)
plot(lms,n_o_lm_s,'bo',...
    lms,n_x_lm_s,'ro',...
    lms_t/1e-9,n_o_lm_t,'b-',...
    lms_t/1e-9,n_x_lm_t,'r-')
xlabel('wavelength [nm]')
ylabel('Refractive index')
legend('Sim: n_o','Sim: n_x','The: n_o','The: n_x')

subplot(2,1,2)
plot(Bs,n_o_B_s,'bo',...
    Bs,n_x_B_s,'ro',...
    Bs_t,n_o_B_t,'b-',...
    Bs_t,n_x_B_t,'r-')
xlabel('Magnetic field [T]')
ylabel('Refractive index')
% axis([0,3000,0.993,1])
legend('Sim: n_o','Sim: n_x','The: n_o','The: n_x')


%{
+[M函数](,分析数据)
%}
## end
#1943, 641:
%{
+[M函数](,获取数据)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_1D_3/Fields0.h5";
% filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";
filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/CM_1D_B_2000/Fields0.h5";

%{
+[M函数](,获取数据)
%}
ti=20000;
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,field);


x_out=x(x>5e-6 & x<160e-6);
Ey_out=Ey(x>5e-6 & x<160e-6);
Ez_out=-Ez(x>5e-6 & x<160e-6);

plot(x_out,Ey_out,x_out,Ez_out)

%{
+[M函数](,获取数据)
%}
## end
#1945, 388:
%{
+[M函数](,获取数据)
Nini, 打开ShadowSpectrometer(文件)

获取数据:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

f0=Ez_out;
x0=x_out;
A_1=max(f0);
A_2=800e-9;
g_f=@(x,A)A_1*cos(x/A_2*2*pi+A(1));
Q_f=@(A)trapz(x_out,(g_f(x_out,A)-f0).^2);
A0=[0];
fA1=fit_GradientD(A0,1e-6,Q_f,400)
Q_f(A0)
Q_f(fA1)
plot(x0,g_f(x0,fA1),x0,f0)


%{
fA1
A0
plot(x,Rho)
+[M函数](,分析数据)
%}
## end
#1947, 452:
%{
+[M函数](,计算折射率)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=873e-9;
x0=x_out;
[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lm_0/lm_y;
n_z=lm_0/lm_z;

subplot(2,1,1)
plot(x0/1e-6,f_y(x0),x0/1e-6,Ey_out);
xlabel('x [um]')
title(sprintf("n_y=%.8f",n_y))

subplot(2,1,2)
plot(x0/1e-6,f_z(x0),x0/1e-6,Ez_out);
xlabel('x [um]')
title(sprintf("n_z=%.8f",n_z))



%{
+[M函数](,分析数据)
%}
## end
#1949, 620:
%{
+[M函数](,理论折射率)

初次计算:...
%}

physics_constant;
addpath('Matlab/plasma');

q=e;
n_0=1e25;
B_0=2000;
lm_0=873e-9;

Bs_t=linspace(100,3000,100);
n_o_B_t=zeros(size(Bs_t));
n_x_B_t=zeros(size(Bs_t));

for i=1:length(Bs_t)
    B=Bs_t(i);
    n=plasma_refractive_index_CM(lm_0,n_0,B);

    n_o_B_t(i)=n(1);
    n_x_B_t(i)=n(2);
end


lms_t=linspace(400,1100,100)*1e-9;
n_o_lm_t=zeros(size(lms_t));
n_x_lm_t=zeros(size(lms_t));

for i=1:length(lms_t)
    lm=lms_t(i);
    n=plasma_refractive_index_CM(lm,n_0,B_0);

    n_o_lm_t(i)=n(1);
    n_x_lm_t(i)=n(2);
end


% plot(lms_t,n_o_lm_t,lms_t,n_x_lm_t)

%{
+[M函数](,理论折射率)
%}
## end
#1951, 359:
%{
+[M函数](,理论折射率)

初次计算:...
%}

physics_constant;
q=e;
n_0=1e25;
B=2000;
lm_0=873e-9;

k_0=2*pi/lm_0;
omega_p=sqrt((q.^2.*n_0)./(epsilon_0.*m_e));
omega_B=(q.*B)./(m_e);
omega=2*pi*c/lm_0;

n_o=sqrt(1-(omega_p.^2)./(omega.^2));
n_x=sqrt(1-(omega_p.^2)./(omega.^2)-(omega_p.^2.*omega_B.^2)./(omega.^2.*(omega.^2-omega_B.^2-omega_p.^2)));


%{
+[M函数](,理论折射率)
%}
## end
#1953, 449:

p::
p是子进程"ssh xtcheng@stampede2.tacc.utexas.edu"
在p中, 运行指令"ls"

在p中, 运行指令"cd $WORK/Smilei/Smilei;ls"
在p中, 运行指令"source $WORK/Smilei/Smilei/smilei_para.sh"

在p中, 运行指令"rm -rf $WORK/sim_folder;mkdir $WORK/sim_folder"

在p中, 运行指令"cd $WORK/sim_folder;ls"
在p中, 运行指令"cd $WORK/sim_folder/CM_1D_lm_1100;ls"
在p中, 运行指令"$WORK/Smilei/Smilei/smilei_test run.py"

在p中, 运行指令"dos2unix myscript.txt"
在p中, 运行指令"date;sbatch myscript.txt"
在p中, 运行指令"squeue -u xtcheng"




## end
#1956, 66:
/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100/run.py
## end
#1958, 1907:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

"""
import numpy as np


dt = 0.11663162726452106
nx = 13312
Lx = 1568.2830526720245
Ly = 1256.6370614359173
npatch_x = 128

Main(
    geometry = "1Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(32315)*dt,

    cell_length  = [0.11780972450961723],
    grid_length = [Lx],

    number_of_patches = [npatch_x],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)


MovingWindow(
    time_start = 1412.7386754816398,
    velocity_x = 1.0
)


LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)


Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.,0.,0.],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserPlanar1D(
    box_side                = "xmin",
    a0                            = 0.01,
    omega                    = 0.7272727272727272,
    polarization_phi  = 0.7853981633974484,
    ellipticity               = 0.0,
    time_envelope     = tconstant(),
)


ExternalField(
    field="By",
    profile=0.14939663290573127
)


DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho' ],
    every = 200,
)




DiagPerformances(
    every = 50,
)



## end
#1960, 68:
/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100/info.txt
## end
#1962, 781:
地址::/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传


探测光的波长是"1100e-9"
代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"1D"(+[召唤星辰],)
+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

有外场
外场的类型是"磁场"
外场的场强是"1000,0,0"
外场的场强是"0,2000,0"


有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"200"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子


模拟空间是长方形(500e-6,160e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(200e-6,160e-6)
窗口的启动时间是"600e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,40e-6)


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#1964, 72:
/home/xiantao/Documents/sim_output/Smilei_out/CM_1D_lm_1100/myscript.txt
## end
#1966, 1559:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A A-pcsli       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/Smilei/smilei run.py



## end
#1969, 1575:
%{
+[M函数](,获取数据)
Nini, 打开ShadowSpectrometer(文件)

获取数据:...
+[新建阅读窗口](,获取数据)
梯度下降法:...
(这里不太好用)
计算折射率:...
理论折射率:...
+[M函数](,计算折射率)
+[M函数](,理论折射率)


cos_fitting 的问题比较大. 我后来写了一个 periodic_self_fitting. 但是还没有在这里试过
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=873e-9;

file_pat_B="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/CM_1D_B_%d/Fields0.h5";
file_pat_lm="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/CM_1D_lm_%d/Fields0.h5";

Bs=[100, 300, 500, 1000, 2000, 2500, 3000];
lms=[400, 500, 700, 800, 900, 1000, 1100];
ti=20000;

n_o_B_s=zeros(size(Bs));
n_x_B_s=zeros(size(Bs));

for i=1:length(Bs)
filename_0=sprintf(file_pat_B,Bs(i));
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,'Ey');
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,'Ez');

x0=x(x>5e-6 & x<160e-6);
Ey_out=Ey(x>5e-6 & x<160e-6);
Ez_out=-Ez(x>5e-6 & x<160e-6);

[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lm_0/lm_y;
n_z=lm_0/lm_z;

n_o_B_s(i)=n_y;
n_x_B_s(i)=n_z;
end


n_o_lm_s=zeros(size(lms));
n_x_lm_s=zeros(size(lms));

for i=1:length(lms)
filename_0=sprintf(file_pat_lm,lms(i));
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,'Ey');
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,'Ez');

x0=x(x>5e-6 & x<160e-6);
Ey_out=Ey(x>5e-6 & x<160e-6);
Ez_out=-Ez(x>5e-6 & x<160e-6);

[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lms(i)*1e-9/lm_y;
n_z=lms(i)*1e-9/lm_z;

n_o_lm_s(i)=n_y;
n_x_lm_s(i)=n_z;
end

% plot(Bs,n_o_B_s,'o',Bs,n_x_B_s,'o')
plot(lms,n_o_lm_s,'o',lms,n_x_lm_s,'o')



%{
+[M函数](,分析数据)
%}
## end
#1972, 723:
%{
+[M函数](,检查特定密度)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test/Fields0.h5";
% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_test_inj_large/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_270_b/Fields0.h5";

%{
+[M函数](,获取数据)
%}
tis=0:500:10000;

for i=1:length(tis)
ti=tis(i);
field='Rho__plasma_1';
[x,y,I1]=read_data_Smilei_h5(filename,ti,field);
field='Ey';
[x,y,I2]=read_data_Smilei_h5(filename,ti,field);

subplot(1,2,1)
surf(x,y,I1)
shading interp
view([0,90])
% axis equal

subplot(1,2,2)
surf(x,y,I2)
shading interp
view([0,90])
% axis equal


pause(0.1)
end

%{
+[M函数](,检查特定密度)
%}
## end
#1974, 521:
<!--
+[H函数](,分析均匀流体)
-->

%[1].
<!--
来自于'折射率'的'波动方程'
-->

%[2].
%[3].
%[4].
等离子体密度分布只会直接影响纵波的等式. 当然, 在我们的参数下, 纵波是存在的(见Ex_1D, Ex_2D), 但是我们会优先讨论横波
%[5].
偏振态的影响体现在, 只有在恰当的偏振态下, 各种场的分布才是单频的. 而电流分布对折射率的影响来源于电流对电场的响应系数. 比如,
%[6].
如果有, 
%[7].
那么有, 
%[8].
横波的折射率变化只和电流分布有直接关系

而电流和质量的关系, 
%[9].
%[10].
%[11].
%[12].
As a result, we have,
%[13].


<!--
[14].:
式(1)转换为"表达式"
将"A=-\frac{q^2*n_e}{\omega*m_e*\gamma}"记作为式(13)

模拟结果:...
(数据保存在20230612_uniform_2D)
测试beta影响:...
+[新建阅读窗口](,模拟结果)
+[新建阅读窗口](,测试beta影响)


+[H函数](,分析均匀流体)
-->
## end
#1976, 120:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i \omega \mu_{0} \vec{J}
## end
#1978, 43:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}
## end
#1980, 40:
i \vec{k}\cdot \vec{E}=\rho/\epsilon_{0}
## end
#1982, 105:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}=i \vec{k} \rho/\epsilon_{0}-i \omega \mu_{0} \vec{J}
## end
#1984, 78:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}=-i \omega \mu_{0} \vec{J}
## end
#1986, 60:
\vec{E}-n^{2} \vec{E}=-\frac{i}{\omega \epsilon_{0}} \vec{J}
## end
#1987, 107:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#1990, 41:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0
## end
#1993, 38:
i*\vec{k}\cdot \vec{E}=\rho/\epsilon_0
## end
#1996, 101:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}=i*\vec{k}*\rho/\epsilon_0-i*\omega*\mu_0*\vec{J}
## end
#2000, 1574:
%{
+[M函数](,模拟结果)
Nini, 打开plasma的read_data_1D_Smilei_h5(节点)
Nini, 打开FDH的read_data_Smilei_h5(节点)
Nini, 打开函数拟合的cos_fitting(节点)
Nini, 打开FDH(文件)

Ex_2D:...
Ex_1D:...
Ey函数形状:...
+[新建阅读窗口](,Ey函数形状)
检查相位:...
计算折射率:...
比较yz分量相位:...
+[新建阅读窗口](,计算折射率)

保存:...
+[新建阅读窗口](,保存)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;
n_e=2*1e25;

% filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_360/Fields0.h5";
filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_000_beta_0_5/Fields0.h5";
%{
+[M函数](,模拟结果)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);

[ey,lm_y,E_y_ft]=cos_fitting(x0,Ey_out,10);
[ez,lm_z,E_z_ft]=cos_fitting(x0,Ez_out,10);
[fy,lm_y,J_y_ft]=cos_fitting(x0,Jy_out,10);
[fz,lm_z,J_z_ft]=cos_fitting(x0,Jz_out,10);

A_y_ft=J_y_ft*0.95/E_y_ft/1.03;
A_z_ft=J_z_ft*0.95/E_z_ft/1.03;
m_y_ft=e^2*n_e/omega_0/A_y_ft/m_e
m_z_ft=e^2*n_e/omega_0/A_z_ft/m_e

A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);
m_y=e^2*n_e/omega_0/A_y/m_e
m_z=e^2*n_e/omega_0/A_z/m_e


subplot(2,1,1)
plot(x0,Jy_out,x0,fy(x0)*0.95)
subplot(2,1,2)
plot(x0,Ez_out,x0,ez(x0)*1.03)


%{
+[M函数](,模拟结果)
%}
## end
#2002, 509:
%{
+[M函数](,Ex_2D)
+[打开文件夹]"Matlab/readData"
Nini, 打开FDH的read_data_Smilei_h5(节点)

检查特定密度:...
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_135/Fields0.h5";

%{
+[M函数](,模拟结果)
%}
tis=0:500:10000;

for i=1:length(tis)
ti=tis(i);
field='Ex';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(I(:,100:end))
shading interp
view([0,90])
% axis equal
pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,模拟结果)
%}
## end
#2004, 396:
%{
+[M函数](,Ex_1D)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_135/Fields0.h5";

%{
+[M函数](,模拟结果)
%}
tis=0:500:10000;

for i=1:length(tis)
ti=tis(i);
field='Ex';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);
Ex=I(61,:);

plot(Ex)
pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,模拟结果)
%}
## end
#2005, 76:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}=-i*\omega*\mu_0*\vec{J}
## end
#2009, 20:
\vec{J}=-i A \vec{E}
## end
#2011, 37:
n^{2}=1+\frac{A}{\omega \epsilon_{0}}
## end
#2013, 42:
\frac{d\vec{v}}{dt} m_{e} \gamma=q \vec{E}
## end
#2014, 56:
\vec{E}-n^2*\vec{E}=-\frac{i}{\omega*\epsilon_0}*\vec{J}
## end
#2017, 20:
\vec{J}=-i*A*\vec{E}
## end
#2020, 33:
n^2=1+\frac{A}{\omega*\epsilon_0}
## end
#2024, 696:
%{
+[M函数](,Ey函数形状)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=873e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_135/Fields0.h5";

%{
+[M函数](,模拟结果)
%}
ti=6000;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(61,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(61,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);

[f_y,lm_y]=cos_fitting(x0,Ey_out,10);
[f_z,lm_z]=cos_fitting(x0,Ez_out,10);

n_y=lm_0/lm_y;
n_z=lm_0/lm_z;

Ey_ft=f_y(x0);
F_out=abs(fft(Ey_out));
F_ft=abs(fft(Ey_ft));

plot(x0/1e-6,f_y(x0),x0/1e-6,Ey_out)
% plot(x0/1e-6,Ey_out-f_y(x0))
% plot(x0,F_out,x0,F_ft)


%{
+[M函数](,Ey函数形状)
%}
## end
#2026, 1235:
%{
+[M函数](,检查相位)

分布特征:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_135/Fields0.h5";

%{
+[M函数](,模拟结果)
%}
ti=6000;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(61,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(61,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Rho');
Rho=I(61,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Rho_out=Rho(x>5e-6 & x<75e-6);

[Ey_phase,Ey_x]=spatial_phase(Ey_out);
[Ez_phase,Ez_x]=spatial_phase(Ez_out);

[~,lm_y]=cos_fitting(x0,Ey_out,10);
[~,lm_z]=cos_fitting(x0,Ez_out,10);

for i=1:length(Ey_phase)-1
    if abs(Ey_phase(i+1)-Ey_phase(i))>2.
        Ey_phase(i+1:end)=Ey_phase(i+1:end)-2*pi;
    end
    if abs(Ez_phase(i+1)-Ez_phase(i))>2.
        Ez_phase(i+1:end)=Ez_phase(i+1:end)-2*pi;
    end
end

Ay=polyfit(x0,Ey_phase,1);
Az=polyfit(x0,Ez_phase,1);

D_Ey_phase=Ey_phase-Ay(1)*x0-Ay(2);
D_Ez_phase=Ez_phase-Az(1)*x0-Az(2);

n_y_ph=-lm_0/(2*pi/Ay(1));
n_z_ph=-lm_0/(2*pi/Az(1));

n_y_ft=lm_0/lm_y;
n_z_ft=lm_0/lm_z;

n_y_ft-n_z_ft
n_y_ph-n_z_ph



%{
+[M函数](,检查相位)
%}
## end
#2028, 1196:
%{
+[M函数](,检查相位)

分布特征:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_135/Fields0.h5";

%{
+[M函数](,模拟结果)
%}
ti=6000;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(61,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(61,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Rho');
Rho=I(61,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Rho_out=Rho(x>5e-6 & x<75e-6);

[Ey_phase,Ey_x]=spatial_phase(Ey_out);
[Ez_phase,Ez_x]=spatial_phase(Ez_out);

for i=1:length(Ey_phase)-1
    if abs(Ey_phase(i+1)-Ey_phase(i))>2.
        Ey_phase(i+1:end)=Ey_phase(i+1:end)-2*pi;
    end
    if abs(Ez_phase(i+1)-Ez_phase(i))>2.
        Ez_phase(i+1:end)=Ez_phase(i+1:end)-2*pi;
    end
end

Ay=polyfit(x0,Ey_phase,1);
Az=polyfit(x0,Ez_phase,1);

D_Ey_phase=Ey_phase-Ay(1)*x0-Ay(2);
D_Ez_phase=Ez_phase-Az(1)*x0-Az(2);

% plot(x0,D_Ey_phase,x0,D_Ez_phase)
plot(x0,Ey_phase-Ez_phase)
plot(x0,D_Ez_phase/max(D_Ez_phase),x0,Rho_out/max(Rho_out)*0.03)
axis([6e-5,7e-5,-0.1,0.1])


%{
+[M函数](,检查相位)
%}
## end
#2030, 1521:
%{
+[M函数](,计算折射率)


%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_360/Fields0.h5";

%{
+[M函数](,计算折射率)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);

[Ey_phase,Ey_x]=spatial_phase(Ey_out);
[Ez_phase,Ez_x]=spatial_phase(Ez_out);

[~,lm_y]=cos_fitting(x0,Ey_out,10);
[~,lm_z]=cos_fitting(x0,Ez_out,10);

A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);

for i=1:length(Ey_phase)-1
    if abs(Ey_phase(i+1)-Ey_phase(i))>2.
        Ey_phase(i+1:end)=Ey_phase(i+1:end)-2*pi;
    end
    if abs(Ez_phase(i+1)-Ez_phase(i))>2.
        Ez_phase(i+1:end)=Ez_phase(i+1:end)-2*pi;
    end
end

Ay=polyfit(x0,Ey_phase,1);
Az=polyfit(x0,Ez_phase,1);

D_Ey_phase=Ey_phase-Ay(1)*x0-Ay(2);
D_Ez_phase=Ez_phase-Az(1)*x0-Az(2);

n_y_ph=-lm_0/(2*pi/Ay(1));
n_z_ph=-lm_0/(2*pi/Az(1));

n_y_ft=lm_0/lm_y;
n_z_ft=lm_0/lm_z;

n_y_th=sqrt(1-A_y/omega_0/epsilon_0);
n_z_th=sqrt(1-A_z/omega_0/epsilon_0);

n_y_ph-n_z_ph
n_y_ft-n_z_ft
n_y_th-n_z_th


%{
plot(x0,Ey_out/max(Ey_out),x0,Ez_out/max(Ez_out))
+[M函数](,计算折射率)
%}
## end
#2032, 1041:
%{
+[M函数](,比较yz分量相位)

E的相位:...
J的幅值:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_360/Fields0.h5";

%{
+[M函数](,比较yz分量相位)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);


A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);

n_y_th=sqrt(1-A_y/omega_0/epsilon_0)
n_z_th=sqrt(1-A_z/omega_0/epsilon_0)

subplot(2,1,1)
plot(x0,Ey_out/max(Ey_out),x0,Ez_out/max(Ez_out))
axis([6.57e-5,6.75e-5,-1,1])

subplot(2,1,2)
plot(x0,Jy_out,x0,Jz_out)
% axis([3.57e-5,3.75e-5,-1,1])



%{
+[M函数](,比较yz分量相位)
%}
## end
#2034, 1032:
%{
+[M函数](,E的相位)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_360/Fields0.h5";

%{
+[M函数](,E的相位)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);


A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);

n_y_th=sqrt(1-A_y/omega_0/epsilon_0)
n_z_th=sqrt(1-A_z/omega_0/epsilon_0)

subplot(2,1,1)
plot(x0,Ey_out/max(Ey_out),x0,Ez_out/max(Ez_out))
axis([6.57e-5,6.75e-5,-1,1])

subplot(2,1,2)
plot(x0,Ey_out/max(Ey_out),x0,Ez_out/max(Ez_out))
axis([3.57e-5,3.75e-5,-1,1])



%{
+[M函数](,E的相位)
%}
## end
#2036, 1041:
%{
+[M函数](,比较yz分量相位)

E的相位:...
J的幅值:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_360/Fields0.h5";

%{
+[M函数](,比较yz分量相位)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);


A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);

n_y_th=sqrt(1-A_y/omega_0/epsilon_0)
n_z_th=sqrt(1-A_z/omega_0/epsilon_0)

subplot(2,1,1)
plot(x0,Ey_out/max(Ey_out),x0,Ez_out/max(Ez_out))
axis([6.57e-5,6.75e-5,-1,1])

subplot(2,1,2)
plot(x0,Jy_out,x0,Jz_out)
% axis([3.57e-5,3.75e-5,-1,1])



%{
+[M函数](,比较yz分量相位)
%}
## end
#2038, 40:
-i \omega \vec{v} m_{e} \gamma=q \vec{E}
## end
#2040, 47:
\vec{v}=\frac{i q}{\omega m_{e} \gamma} \vec{E}
## end
#2042, 57:
\vec{j}=\frac{i q^{2} n_{e}}{\omega m_{e} \gamma} \vec{E}
## end
#2044, 42:
A=-\frac{q^{2} n_{e}}{\omega m_{e} \gamma}
## end
#2048, 36:
\d{\vec{v}}_{t}*m_e*\gamma=q*\vec{E}
## end
#2051, 38:
-i*\omega*\vec{v}*m_e*\gamma=q*\vec{E}
## end
#2054, 45:
\vec{v}=\frac{i*q}{\omega*m_e*\gamma}*\vec{E}
## end
#2057, 51:
\vec{j}=\frac{i*q^2*n_e}{\omega*m_e*\gamma}*\vec{E}
## end
#2060, 36:
A=-\frac{q^2*n_e}{\omega*m_e*\gamma}
## end
#2064, 1324:
%{
+[M函数](,模拟结果)
Nini, 打开plasma的read_data_1D_Smilei_h5(节点)
Nini, 打开FDH的read_data_Smilei_h5(节点)
Nini, 打开函数拟合的cos_fitting(节点)
Nini, 打开FDH(文件)

Ex_2D:...
Ex_1D:...
Ey函数形状:...
+[新建阅读窗口](,Ey函数形状)
检查相位:...
计算折射率:...
比较yz分量相位:...
+[新建阅读窗口](,计算折射率)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;
n_e=2*1e25;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/20230612_uniform_2D/RFB_2D_180/Fields0.h5";
%{
+[M函数](,模拟结果)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);

[~,lm_y,E_y_ft]=cos_fitting(x0,Ey_out,10);
[~,lm_z,E_z_ft]=cos_fitting(x0,Ez_out,10);
[~,lm_y,J_y_ft]=cos_fitting(x0,Jy_out,10);
[~,lm_z,J_z_ft]=cos_fitting(x0,Jz_out,10);

A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);

n_y_th=sqrt(1-A_y/omega_0/epsilon_0);
n_z_th=sqrt(1-A_z/omega_0/epsilon_0);

m_y=e^2*n_e/omega_0/A_y/m_e
m_z=e^2*n_e/omega_0/A_z/m_e

plot(x0,Jz_out)


%{
+[M函数](,模拟结果)
%}
## end
#2066, 765:
<!--
+[H函数](,多普勒效应)
-->

<h2>Doppler effects in relativistic plasma</h2>

Let's consider Doppler effects in relativistic plasma which is flowing along the laser propagation direction, z-axis. The transformation matrix is,
%[1].
%[2].

OK, the EM-field of a laser beam is,
%[3].
%[4].
The electromagnetic tensor is,
%[5].

The lorentz transform is,
%[6].
%[7].
%[8].

As a result, we have,
%[9].
%[10].

The 4-vector of frequency is,
%[11].
And the frequency in the motion frame is,
%[12].
%[13].
%[14].
%[15].
%[16].



<!--
[16].:
式(11)转换为"表达式"
将"\mat{K}=\mat{\omega/c;0;0;k_z}"记作为式(11)
将式(12)记作为式(13)

将式(1)代入到式(13)
将式(11)代入到式(13)
将式(13)记作为式(14)
计算式(14)的'矩阵运算'
在式(14)中, 矩阵(1)的项(1,1)转换为"表达式"

将"\omega_2~\gamma*\omega(1+\beta)"记作为式(15)


更新式(14)
+[H函数](,多普勒效应)
-->
## end
#2068, 108:
\Gamma=\begin{pmatrix}
\gamma&0&0&\gamma \beta\\ 0&1&0&0\\ 0&0&1&0\\ \gamma \beta&0&0&\gamma
\end{pmatrix}


## end
#2070, 111:
\Gamma'=\begin{pmatrix}
\gamma&0&0&-\gamma \beta\\ 0&1&0&0\\ 0&0&1&0\\ -\gamma \beta&0&0&\gamma
\end{pmatrix}


## end
#2072, 51:
\vec{E}=\begin{pmatrix}
E_{x},&0,&0
\end{pmatrix}


## end
#2074, 51:
\vec{B}=\begin{pmatrix}
0,&B_{y},&0
\end{pmatrix}


## end
#2076, 102:
\mathbf{F}=\begin{pmatrix}
0&-E_{x}/c&0&0\\ E_{x}/c&0&0&B_{y}\\ 0&0&0&0\\ 0&-B_{y}&0&0
\end{pmatrix}


## end
#2078, 39:
\mathbf{F_{2}}=\Gamma \mathbf{F} \Gamma
## end
#2080, 310:
\mathbf{F_{2}}=\begin{pmatrix}
\gamma&0&0&\gamma \beta\\ 0&1&0&0\\ 0&0&1&0\\ \gamma \beta&0&0&\gamma
\end{pmatrix}

 \begin{pmatrix}
0&-E_{x}/c&0&0\\ E_{x}/c&0&0&B_{y}\\ 0&0&0&0\\ 0&-B_{y}&0&0
\end{pmatrix}

 \begin{pmatrix}
\gamma&0&0&\gamma \beta\\ 0&1&0&0\\ 0&0&1&0\\ \gamma \beta&0&0&\gamma
\end{pmatrix}


## end
#2081, 79:
\Gamma=\mat{\gamma,0,0,\gamma*\beta;
0,1,0,0;
0,0,1,0;
\gamma*\beta,0,0,\gamma}
## end
#2084, 82:
\Gamma'=\mat{\gamma,0,0,-\gamma*\beta;
0,1,0,0;
0,0,1,0;
-\gamma*\beta,0,0,\gamma}
## end
#2087, 21:
\vec{E}=\vec{E_x,0,0}
## end
#2090, 21:
\vec{B}=\vec{0,B_y,0}
## end
#2093, 62:
\mat{F}=\mat{0,-E_x/c,0,0;
E_x/c,0,0,B_y;
0,0,0,0;
0,-B_y,0,0}
## end
#2096, 31:
\mat{F_2}=\Gamma*\mat{F}*\Gamma
## end
#2099, 201:
\mat{F_2}=\mat{\gamma,0,0,\gamma*\beta;0,1,0,0;0,0,1,0;\gamma*\beta,0,0,\gamma}*\mat{0,-E_x/c,0,0;E_x/c,0,0,B_y;0,0,0,0;0,-B_y,0,0}*\mat{\gamma,0,0,\gamma*\beta;0,1,0,0;0,0,1,0;\gamma*\beta,0,0,\gamma}
## end
#2102, 1:
)
## end
#2104, 1:
)
## end
#2106, 54:
\mat{0,-E_x/c,0,0;
E_x/c,0,0,B_y;
0,0,0,0;
0,-B_y,0,0}
## end
#2108, 7:
\mat{F}
## end
#2110, 1:
)
## end
#2113, 424:
\mathbf{F_{2}}=\begin{pmatrix}
0&\left(\gamma\right) \left(-E_{x}/c\right)+\left(\gamma \beta\right) \left(-B_{y}\right)&0&0\\ \left(E_{x}/c\right) \left(\gamma\right)+\left(B_{y}\right) \left(\gamma \beta\right)&0&0&\left(E_{x}/c\right) \left(\gamma \beta\right)+\left(B_{y}\right) \left(\gamma\right)\\ 0&0&0&0\\ 0&\left(\gamma \beta\right) \left(-E_{x}/c\right)+\left(\gamma\right) \left(-B_{y}\right)&0&0
\end{pmatrix}


## end
#2115, 40:
E_{x2}=E_{x} \gamma+B_{y} \gamma \beta c
## end
#2117, 40:
E_{x2}=E_{x} \gamma \left(1+\beta\right)
## end
#2118, 195:
\mat{F_2}=\mat{0,(\gamma)*(-E_x/c)+(\gamma*\beta)*(-B_y),0,0;(E_x/c)*(\gamma)+(B_y)*(\gamma*\beta),0,0,(E_x/c)*(\gamma*\beta)+(B_y)*(\gamma);0,0,0,0;0,(\gamma*\beta)*(-E_x/c)+(\gamma)*(-B_y),0,0}
## end
#2123, 34:
E_x2=E_x*\gamma+B_y*\gamma*\beta*c
## end
#2126, 25:
E_x2=E_x*\gamma*(1+\beta)
## end
#2130, 67:
\mathbf{K}=\begin{pmatrix}
\omega/c\\ 0\\ 0\\ k_{z}
\end{pmatrix}


## end
#2132, 32:
\mathbf{K_{2}}=\Gamma \mathbf{K}
## end
#2134, 173:
\mathbf{K_{2}}=\begin{pmatrix}
\gamma&0&0&\gamma \beta\\ 0&1&0&0\\ 0&0&1&0\\ \gamma \beta&0&0&\gamma
\end{pmatrix}

 \begin{pmatrix}
\omega/c\\ 0\\ 0\\ k_{z}
\end{pmatrix}


## end
#2135, 30:
\mat{K}=\mat{\omega/c;0;0;k_z}
## end
#2138, 24:
\mat{K_2}=\Gamma*\mat{K}
## end
#2141, 102:
\mat{K_2}=\mat{\gamma,0,0,\gamma*\beta;0,1,0,0;0,0,1,0;\gamma*\beta,0,0,\gamma}*\mat{\omega/c;0;0;k_z}
## end
#2145, 230:
\mathbf{K_{2}}=\begin{pmatrix}
\left(\gamma\right) \left(\omega/c\right)+\left(\gamma \beta\right) \left(k_{z}\right)\\ 0\\ 0\\ \left(\gamma \beta\right) \left(\omega/c\right)+\left(\gamma\right) \left(k_{z}\right)
\end{pmatrix}


## end
#2147, 54:
\omega_{2}\approx \gamma \omega \left( 1+\beta \right)
## end
#2150, 101:
\mat{K_2}=\mat{(\gamma)*(\omega/c)+(\gamma*\beta)*(k_z);0;0;(\gamma*\beta)*(\omega/c)+(\gamma)*(k_z)}
## end
#2153, 72:
\mat{\gamma,0,0,\gamma*\beta;
0,1,0,0;
0,0,1,0;
\gamma*\beta,0,0,\gamma}
## end
#2155, 6:
\Gamma
## end
#2157, 22:
\mat{\omega/c;0;0;k_z}
## end
#2159, 7:
\mat{K}
## end
#2161, 31:
\omega_2~\gamma*\omega(1+\beta)
## end
#2165, 1253:
%{
+[M函数](,测试beta影响)

获取数据:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_0=873e-9;
omega_0=2*pi/lm_0*c;
n_e=2*1e25;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_0_9/Fields0.h5";
%{
+[M函数](,测试beta影响)
%}
ti=6000;
i0=61;
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ey');
Ey=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Ez');
Ez=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jy');
Jy=I(i0,:);
[x,y,I]=read_data_Smilei_h5(filename,ti,'Jz');
Jz=I(i0,:);

x0=x(x>5e-6 & x<75e-6);
Ey_out=Ey(x>5e-6 & x<75e-6);
Ez_out=-Ez(x>5e-6 & x<75e-6);
Jy_out=Jy(x>5e-6 & x<75e-6);
Jz_out=-Jz(x>5e-6 & x<75e-6);

[ey,lm_y,E_y_ft]=cos_fitting(x0,Ey_out,10);
[ez,lm_z,E_z_ft]=cos_fitting(x0,Ez_out,10);
[fy,lm_y,J_y_ft]=cos_fitting(x0,Jy_out,10);
[fz,lm_z,J_z_ft]=cos_fitting(x0,Jz_out,10);

A_y_ft=J_y_ft*0.95/E_y_ft/1.03;
A_z_ft=J_z_ft*0.95/E_z_ft/1.03;
m_y_ft=e^2*n_e/omega_0/A_y_ft/m_e
m_z_ft=e^2*n_e/omega_0/A_z_ft/m_e

A_y=max(Jy_out)/max(Ey_out);
A_z=max(Jz_out)/max(Ez_out);
m_y=e^2*n_e/omega_0/A_y/m_e
m_z=e^2*n_e/omega_0/A_z/m_e


subplot(2,1,1)
plot(x0,Jy_out,x0,fy(x0)*0.95)
subplot(2,1,2)
plot(x0,Ez_out,x0,ez(x0)*1.03)


%{
+[M函数](,测试beta影响)
%}
## end
#2167, 428:
%{
+[M函数](,获取数据)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_0_5/Fields0.h5";
%{
+[M函数](,模拟结果)
%}
tis=0:500:10000;

for i=1:length(tis)
ti=tis(i);
field='Ex';
[x,y,I]=read_data_Smilei_h5(filename,ti,field);

surf(I(:,100:end))
shading interp
view([0,90])
% axis equal
pause(0.1)
end

%{
plot(max(I))
colormap('default')
+[M函数](,模拟结果)
%}
## end
#2169, 363:
%{
记住"Matlab"
+[M函数](,EyEz)
figure
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";
%{
+[M函数](,EyEz)
%}
ti=12000;
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,'Ey');
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,'Ez');

clf
plot(x,Ey,x,-Ez)


%{
+[M函数](,EyEz)
%}
## end
#2171, 345:
%{
+[M函数](,JyJz)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";
%{
+[M函数](,EyEz)
%}
ti=12000;
[x,Jy]=read_data_1D_Smilei_h5(filename_0,ti,'Jy');
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,'Jz');

clf
plot(x,Jy,x,-Jz)


%{
+[M函数](,JyJz)
%}
## end
#2173, 2390:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)
记住"Python"
print(3%2.1)

"""
import numpy as np


dt = 0.11663162726452106
nx = 13312
Lx = 1568.2830526720245
Ly = 628.3185307179587
npatch_x = 128

Main(
    geometry = "1Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(14132)*dt,

    cell_length  = [0.11780972450961723],
    grid_length = [Lx],

    number_of_patches = [npatch_x],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)



LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)

Dx=Lx/50
def vy_dist(x):
    # vy=0.5*(x-Lx/2)/Lx*2
    # vy=-0.5*(x-Lx/2)/Lx*2
    # vy=-0.9*x/Lx
    vy=0.7*(x%Dx)/Dx
    return vy

n_e=0.005740660892844831


Species(
    name = "_plasma_2",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = 1,
    number_density = n_e, 

    mean_velocity = [0.0, vy_dist, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = n_e, 

    mean_velocity = [0.0, vy_dist, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserPlanar1D(
    box_side                = "xmin",
    a0                            = 0.01,
    omega                    = 0.9163802978235966,
    polarization_phi  = 0.7853981633974484,
    ellipticity               = 0.0,
    time_envelope     = tconstant(),
)




DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho', 'Jy__plasma_2' ],
    every = 500,
)




DiagPerformances(
    every = 50,
)



## end
#2175, 73:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func/run.py
## end
#2177, 2650:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_0_5_big_w/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

"""
import numpy as np


dt = 0.11663162726452106
nx = 6656
Lx = 784.1415263360122
Ly = 1256.6370614359173
npatch_x = 128

Main(
    geometry = "2Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(6056)*dt,

    cell_length  = [0.11780972450961723, 15.707963267948966],
    grid_length = [Lx, Ly],

    number_of_patches = [npatch_x, 1],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)



LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)

Dx=Lx/50
def vy_dist(x,y):
    # vy=0.5*(x-Lx/2)/Lx*2
    # vy=-0.5*(x-Lx/2)/Lx*2
    vy=0.5*x/Lx
    # vy=0.7*(x%Dx)/Dx
    return vy


Species(
    name = "_plasma_2",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = 1,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.0, vy_dist, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.0, vy_dist, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserGaussian2D(
    box_side                = "xmin",
    a0                            = 0.01,
    omega                    = 0.9163802978235966,
    focus                       = [314.1592653589793, 942.4777960769379],
    waist                       = 157.07963267948966,
    polarization_phi  = 0.7853981633974484,
    ellipticity               = 0.0,
    time_envelope     = tconstant(),
)




DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho', 'Jy__plasma_1' ],
    every = 500,
)




DiagPerformances(
    every = 50,
)



## end
#2179, 75:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func/info.txt
## end
#2181, 944:
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传
+[打开文件夹](,地址)

代码:...
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(2D均匀模拟,代码)
+[召唤星辰]"生成Smilei代码"(2D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)
+[新建阅读窗口](,代码)

+不注入(电子,)
+不注入(正电子,)
不注入(电子,)->+[del](,不注入)
不注入(正电子,)->+[del](,不注入)

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Rho__plasma_1"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子和正电子


模拟空间是长方形(100e-6,160e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(100e-6,160e-6)
窗口的启动时间是"300e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"
电子的速度方向是"0,1,0"
电子的beta是"0.5"

正电子的数密度是"1e25"
正电子的电荷是"1"
正电子的速度方向是"0,1,0"
正电子的beta是"0.5"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的展宽是"inf"
探测光的腰宽是"60e-6"
探测光的腰宽是"20e-6"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,40e-6)
A在(40e-6,0)


模拟动画:...
+[召唤星辰]"生成PIC一维动画"(2D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(2D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#2183, 79:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_090_beta_func/myscript.txt
## end
#2185, 1559:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A A-pcsli       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/Smilei/smilei run.py



## end
#2188, 541:
%{
+[M函数](,获取1D数据)
%}

physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090/Fields0.h5";
% filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_func/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/RFB_2D_090_beta_func/Fields0.h5";

%{
+[M函数](,获取1D数据)
%}
tis=6000;
i_y0=61;

field='Jz';
[x,y,I_1]=read_data_Smilei_h5(filename_1,tis,field);
In=I_1(i_y0,:);

plot(x,In)
% axis([600,620,-3e10,3e10])


%{
+[M函数](,获取1D数据)
%}
## end
#2190, 1594:
<!--
+[H函数](,流体方程分析)
+[上传临时网页](,流体方程分析)
参考1::https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations
参考2::file:///media/xiantao/Elements/paper/LWFA/weilu_dissertation.pdf#page=46

计算折射率(html):...
讨论散度项(html):...
讨论密度扰动(html):...
(揭示了现在的微扰方程可能有数学错误)
相对论流体方程(html):...
+[新建阅读窗口](,计算折射率)
+[新建阅读窗口](,讨论散度项)
+[新建阅读窗口](,相对论流体方程)
+[新建阅读窗口](,讨论密度扰动)

快速猜测(html):...
+[新建阅读窗口](,快速猜测)
-->

<h2>NS equations</h2>
%[1].
%[2].
In our cases, the temperature is assumed to be zero, so the energy conservation is same as the momentum conservation. And we studied the perturbation current caused by probe fields, 
%[3].
%[4].

Then equations become,
%[5].
%[6].

%[7].
%[8].
%[9].
%[10].

<h2>Probe field perturbations</h2>
Assuming that the probe beam is along the x-axis, then this equation can be farther simplified by considering following condition,
%[11].
Then
%[12].
%[13].

The matrix is,
%[14].
We should also simplify this,
%[15].
%[16].
%[17].
The eigenvalues can be calculated by solving the equation,
%[18].
%[19].
%[20].
The solution is,
%[21].
%[22].

And eigenvectors are, 
%[23].
%[24].
%[25].
%[26].
%[27].
%[28].


<h2>Quasi-static approximation</h2>
Let's use a new coordinates to describe equations,
%[29].
%[30].
%[31].

Then eqn.[13] will becomes,
%[32].
By using the approximation, \(\partial j/\partial s\approx 0\), we have,
%[33].

OK, let's put \(F=F_0 exp(i k \eta)\) into the equation,
%[34].
%[35].
%[36].

So,
%[37].



<!--
[37].:
式(16)转换为"表达式"
将"A=\frac{F_0}{t_1+i*(v_x-c)*k}"记作为式(37)

验证公式(M函数):...
+[新建阅读窗口](,验证公式)

更新式(25)
的([30].,表达式)->+[显示](,表达式)
+[H函数](,流体方程分析)
-->
## end
#2192, 61:
https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations
## end
#2194, 78:
\frac{\partial \rho}{\partial t}+\vec{\nabla}\cdot \left(\rho \vec{v}\right)=0
## end
#2196, 112:
\frac{\partial}{\partial t}\left(\rho \vec{v}\right)+\vec{\nabla}\cdot \left(\rho \vec{v} \vec{v}\right)=\vec{F}
## end
#2198, 31:
\vec{v}=\vec{v_{0}}+\vec{v_{1}}
## end
#2200, 28:
\vec{j_{1}}=\rho \vec{v_{1}}
## end
#2202, 31:
\vec{\nabla}\cdot \vec{j_{1}}=0
## end
#2204, 138:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\vec{\nabla}\cdot \left(\vec{v_{0}} \vec{j_{1}}+\vec{j_{1}} \vec{v_{0}}\right)=\vec{F}
## end
#2205, 46:
\p{t}{\rho}+\vec{\nabla}\cdot (\rho*\vec{v})=0
## end
#2208, 68:
\p{t}{\rho*\vec{v}}+\vec{\nabla}\cdot (\rho*\vec{v}*\vec{v})=\vec{F}
## end
#2211, 27:
\vec{v}=\vec{v_0}+\vec{v_1}
## end
#2214, 24:
\vec{j_1}=\rho*\vec{v_1}
## end
#2217, 29:
\vec{\nabla}\cdot \vec{j_1}=0
## end
#2220, 84:
\p{t}{\vec{j_1}}+\vec{\nabla}\cdot (\vec{v_0}*\vec{j_1}+\vec{j_1}*\vec{v_0})=\vec{F}
## end
#2224, 169:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\vec{\nabla}\cdot \left(\vec{v_{0}} \vec{j_{1}}\right)+\vec{\nabla}\cdot \left(\vec{j_{1}} \vec{v_{0}}\right)=\vec{F}
## end
#2226, 224:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\vec{\nabla}\cdot \left(\vec{v_{0}}\right) \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \vec{j_{1}}+\vec{\nabla}\cdot \left(\vec{j_{1}} \vec{v_{0}}\right)=\vec{F}
## end
#2228, 279:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \vec{j_{1}}+\left(\vec{\nabla}\cdot \vec{j_{1}}\right) \vec{v_{0}}+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{v_{0}}=\vec{F}
## end
#2230, 224:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \vec{j_{1}}+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{v_{0}}=\vec{F}
## end
#2231, 104:
\p{t}{\vec{j_1}}+\vec{\nabla}\cdot (\vec{v_0}*\vec{j_1})+\vec{\nabla}\cdot (\vec{j_1}*\vec{v_0})=\vec{F}
## end
#2234, 144:
\p{t}{\vec{j_1}}+\vec{\nabla}\cdot (\vec{v_0})*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\vec{j_1}+\vec{\nabla}\cdot (\vec{j_1}*\vec{v_0})=\vec{F}
## end
#2237, 184:
\p{t}{\vec{j_1}}+(\vec{\nabla}\cdot \vec{v_0})*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\vec{j_1}+(\vec{\nabla}\cdot \vec{j_1})*\vec{v_0}+(\vec{j_1}\cdot \vec{\nabla})*\vec{v_0}=\vec{F}
## end
#2240, 144:
\p{t}{\vec{j_1}}+(\vec{\nabla}\cdot \vec{v_0})*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\vec{j_1}+(\vec{j_1}\cdot \vec{\nabla})*\vec{v_0}=\vec{F}
## end
#2244, 91:
\vec{\nabla} \vec{j_{1}}\approx \hat{x} \frac{\partial}{\partial x}\left(\vec{j_{1}}\right)
## end
#2246, 227:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+v_{x} \frac{\partial}{\partial z}\left(\vec{j_{1}}\right)+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \vec{j_{1}}+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{v_{0}}=\vec{F}
## end
#2248, 140:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+v_{x} \frac{\partial}{\partial z}\left(\vec{j_{1}}\right)+\mathbf{T} \vec{j_{1}}=\vec{F}
## end
#2249, 47:
\vec{\nabla}*\vec{j_1}~\hat{x}*\p{x}{\vec{j_1}}
## end
#2252, 125:
\p{t}{\vec{j_1}}+v_x*\p{z}{\vec{j_1}}+(\vec{\nabla}\cdot \vec{v_0})*\vec{j_1}+(\vec{j_1}\cdot \vec{\nabla})*\vec{v_0}=\vec{F}
## end
#2256, 63:
\p{t}{\vec{j_1}}+v_x*\p{z}{\vec{j_1}}+\mat{T}*\vec{j_1}=\vec{F}
## end
#2260, 478:
\mathbf{T}=\begin{pmatrix}
\frac{\partial v_{x}}{\partial x}&\frac{\partial v_{x}}{\partial y}&\frac{\partial v_{x}}{\partial z}\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{y}}{\partial z}\\ \frac{\partial v_{z}}{\partial x}&\frac{\partial v_{z}}{\partial y}&\frac{\partial v_{z}}{\partial z}
\end{pmatrix}

+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}+\frac{\partial v_{z}}{\partial z}\right) \mathbf{I}
## end
#2262, 284:
\mathbf{T}=\begin{pmatrix}
\frac{\partial v_{x}}{\partial x}&\frac{\partial v_{x}}{\partial y}&0\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{y}}{\partial y}&0\\ 0&0&0
\end{pmatrix}

+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}\right) \mathbf{I}
## end
#2264, 330:
\mathbf{T}=\begin{pmatrix}
2 \frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{x}}{\partial y}&0\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{x}}{\partial x}+2 \frac{\partial v_{y}}{\partial y}&0\\ 0&0&\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}
\end{pmatrix}


## end
#2266, 64:
\mathbf{T}=\begin{pmatrix}
A&B&0\\ C&D&0\\ 0&0&E
\end{pmatrix}


## end
#2267, 157:
\mat{T}=\mat{\p{x}{v_x},\p{y}{v_x},\p{z}{v_x};
\p{x}{v_y},\p{y}{v_y},\p{z}{v_y};
\p{x}{v_z},\p{y}{v_z},\p{z}{v_z}}+(\p{x}{v_x}+\p{y}{v_y}+\p{z}{v_z})*\mat{I}
## end
#2270, 101:
\mat{T}=\mat{\p{x}{v_x},\p{y}{v_x},0;
\p{x}{v_y},\p{y}{v_y},0;
0,0,0}+(\p{x}{v_x}+\p{y}{v_y})*\mat{I}
## end
#2273, 115:
\mat{T}=\mat{2*\p{x}{v_x}+\p{y}{v_y},\p{y}{v_x},0;
\p{x}{v_y},\p{x}{v_x}+2*\p{y}{v_y},0;
0,0,\p{x}{v_x}+\p{y}{v_y}}
## end
#2276, 33:
\mat{T}=\mat{A,B,0;
C,D,0;
0,0,E}
## end
#2280, 73:
\left(D-t\right) \left(E-t\right) \left(A-t\right)-B \left(E-t\right) C=0
## end
#2282, 34:
t^{2}-\left(A+D\right) t+A D-B C=0
## end
#2284, 74:
\left|\begin{pmatrix}
A-t&B&0\\ C&D-t&0\\ 0&0&E-t
\end{pmatrix}

\right|=0
## end
#2285, 35:
[\mat{A-t,B,0;
C,D-t,0;
0,0,E-t}]=0
## end
#2288, 29:
(D-t)*(E-t)*(A-t)-B*(E-t)*C=0
## end
#2291, 21:
t^2-(A+D)*t+A*D-B*C=0
## end
#2295, 69:
t=\frac{A+D\pm \sqrt{\left(A+D\right)^{2}-4 \left(A D-B C\right)}}{2}
## end
#2297, 52:
t=\frac{A+D\pm \sqrt{\left(A-D\right)^{2}+4 B C}}{2}
## end
#2299, 11:
t a=a A+b B
## end
#2301, 17:
a=\frac{B}{t-A} b
## end
#2302, 43:
t=\frac{A+D+-\sqrt{(A+D)^2-4*(A*D-B*C)}}{2}
## end
#2305, 37:
t=\frac{A+D+-\sqrt{(A-D)^2+4*B*C}}{2}
## end
#2308, 11:
t*a=a*A+b*B
## end
#2311, 17:
a=\frac{B}{t-A}*b
## end
#2315, 66:
a=\frac{B}{\frac{A+D\pm \sqrt{\left(A-D\right)^{2}+4 B C}}{2}-A} b
## end
#2317, 70:
a=\frac{-2 B}{\left(A-D\right)\mp \sqrt{\left(A-D\right)^{2}+4 B C}} b
## end
#2319, 90:
a=\frac{-2 B \left(\left(A-D\right)\pm \sqrt{\left(A-D\right)^{2}+4 B C}\right)}{-4 B C} b
## end
#2320, 53:
a=\frac{B}{\frac{A+D+-\sqrt{(A-D)^{2}+4*B*C}}{2}-A}*b
## end
#2323, 35:
\frac{A+D+-\sqrt{(A-D)^2+4*B*C}}{2}
## end
#2325, 1:
t
## end
#2327, 46:
a=\frac{-2*B}{(A-D)-+\sqrt{(A-D)^{2}+4*B*C}}*b
## end
#2330, 55:
a=\frac{-2*B*((A-D)+-\sqrt{(A-D)^{2}+4*B*C})}{-4*B*C}*b
## end
#2334, 69:
a=\frac{\left(A-D\right)\pm \sqrt{\left(A-D\right)^{2}+4 B C}}{2 C} b
## end
#2335, 45:
a=\frac{(A-D)+-\sqrt{(A-D)^{2}+4*B*C}}{2*C}*b
## end
#2339, 72:
file:///media/xiantao/Elements/paper/LWFA/weilu_dissertation.pdf#page=46
## end
#2341, 44:
\begin{cases}
s=t\\ \eta=z-c t
\end{cases}


## end
#2343, 335:
\begin{cases}
\frac{\partial }{\partial t}=\frac{\partial s}{\partial t} \frac{\partial }{\partial s}+\frac{\partial \eta}{\partial t} \frac{\partial }{\partial \eta}\\ \frac{\partial }{\partial z}=\frac{\partial s}{\partial z} \frac{\partial }{\partial s}+\frac{\partial \eta}{\partial z} \frac{\partial }{\partial \eta}
\end{cases}


## end
#2345, 182:
\begin{cases}
\frac{\partial }{\partial t}=\frac{\partial }{\partial s}-c \frac{\partial }{\partial \eta}\\ \frac{\partial }{\partial z}=\frac{\partial }{\partial \eta}
\end{cases}


## end
#2347, 158:
\frac{\partial}{\partial s}\left(\vec{j_{1}}\right)+\left(v_{x}-c\right) \frac{\partial}{\partial \eta}\left(\vec{j_{1}}\right)+\mathbf{T} \vec{j_{1}}=\vec{F}
## end
#2349, 106:
\left(v_{x}-c\right) \frac{\partial}{\partial \eta}\left(\vec{j_{1}}\right)+\mathbf{T} \vec{j_{1}}=\vec{F}
## end
#2350, 20:
\eqs{s=t;\eta=z-c*t}
## end
#2353, 102:
\eqs{\p{t}{}=\p{t}{s}*\p{s}{}+\p{t}{\eta}*\p{\eta}{};
\p{z}{}=\p{z}{s}*\p{s}{}+\p{z}{\eta}*\p{\eta}{}}
## end
#2356, 54:
\eqs{\p{t}{}=\p{s}{}-c*\p{\eta}{};
\p{z}{}=\p{\eta}{}}
## end
#2359, 70:
\p{s}{\vec{j_1}}+(v_x-c)*\p{\eta}{\vec{j_1}}+\mat{T}*\vec{j_1}=\vec{F}
## end
#2362, 53:
(v_x-c)*\p{\eta}{\vec{j_1}}+\mat{T}*\vec{j_1}=\vec{F}
## end
#2366, 103:
\left(v_{x}-c\right) \frac{\partial j_{1}}{\partial \eta}+t_{1} j_{1}=F_{0} exp \left( i k \eta \right)
## end
#2368, 35:
j_{1}=A exp \left( i k \eta \right)
## end
#2370, 40:
\left(v_{x}-c\right) i k A+t_{1} A=F_{0}
## end
#2371, 47:
(v_x-c)*\p{\eta}{j_1}+t_1*j_1=F_0*exp(i*k*\eta)
## end
#2374, 19:
j_1=A*exp(i*k*\eta)
## end
#2377, 23:
(v_x-c)*i*k*A+t_1*A=F_0
## end
#2381, 46:
A=\frac{F_{0}}{t_{1}+i \left(v_{x}-c\right) k}
## end
#2382, 29:
A=\frac{F_0}{t_1+i*(v_x-c)*k}
## end
#2386, 1253:
%{
+[M函数](,验证公式)

获取数据:...
+[M函数](,获取数据)
矩阵系数:...
系数重组:...

+[新建阅读窗口](,获取数据)
%}

physics_constant;

q=e;
n_e=1e25;
lm_0=873e-9;
lm_1=1800e-9;
L=140e-6;

omega_0=2*pi*c/lm_0;
omega_1=2*pi*c/lm_1;
omega_p=sqrt((q.^2.*n_e)./(epsilon_0.*m_e));

dvydx=[0,diff(vy2_2d(2,:))]/dx;
dvxdx=[0,diff(vx2_2d(2,:))]/dx;

dvydy=(vy2_2d(2,:)-vy2_2d(1,:))/dy;
dvxdy=(vx2_2d(2,:)-vx2_2d(1,:))/dy;

A=2*dvxdx+dvydy;
B=dvxdy;
C=dvydx;
D=dvxdx+2*dvydy;
E=dvxdx+dvydy;

t_10=((A+D)+sqrt((A-D).^2+4*B.*C))/2*c;
t_20=((A+D)-sqrt((A-D).^2+4*B.*C))/2*c;
t_3=E*c;

a_10=-2*B./((A-D)-sqrt((A-D).^2+4*B.*C));
a_20=-2*B./((A-D)+sqrt((A-D).^2+4*B.*C));

% t_1=t_10;
% t_2=t_20;
% t_1(abs(a_10)<abs(a_20))=t_20(abs(a_10)<abs(a_20));
% t_2(abs(a_10)<abs(a_20))=t_10(abs(a_10)<abs(a_20));
t_1=(t_10.*abs(a_10)+t_20.*abs(a_20))./(abs(a_10)+abs(a_20));
t_2=(t_10.*abs(a_20)+t_20.*abs(a_10))./(abs(a_10)+abs(a_20));

n_1=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_1./omega_0));
n_2=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_2./omega_0));
n_3=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_3./omega_0));


% plot(x0/1e-6,n_1,x0/1e-6,n_2)
plot(x0/1e-6,n_1,x0/1e-6,n_2,x0/1e-6,n_3)


%{
plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3)
plot(x0/1e-6,B)
plot(vy2_2d(2,:))
+[M函数](,验证公式)
%}
## end
#2388, 2123:
%{
+[M函数](,获取数据)
%}


physics_constant;
addpath('Matlab/readData');
addpath('Matlab/FDH');
addpath('Matlab/fft')

lm_r=800e-9;
lm_0=873e-9;
dx=1e-8;
dy=10e-7;
dt=dx/c*0.99;
t0=300e-15;

omega_0=2*pi*c/lm_0;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_0/Fields0.h5";
filename_1="/media/xiantao/Elements/LWFA/FDH/Smilei/highResolution_1800/FDH_1/Fields0.h5";

%{
+[M函数](,获取数据2)
%}
tis=0:400:16000;
% i0=45;
i1=44;
i2=46;
i=41;

ti=tis(i);


%{
plot(Ey_1)
+[M函数](,流场分析)
%}
field='Ez';
[x,y,Ez_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ez_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ez_0_2d=Ez_0(i1:i2,:);
Ez_1_2d=Ez_1(i1:i2,:);
Ez_2d=Ez_1_2d-Ez_0_2d;

field='Ey';
[x,y,Ey_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Ey_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Ey_0_2d=Ey_0(i1:i2,:);
Ey_1_2d=Ey_1(i1:i2,:);
Ey_2d=Ey_1_2d-Ey_0_2d;


field='Jz';
[x,y,Jz_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jz_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jz_0_2d=Jz_0(i1:i2,:);
Jz_1_2d=Jz_1(i1:i2,:);
Jz_2d=Jz_1_2d-Jz_0_2d;

field='Jy';
[x,y,Jy_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jy_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jy_0_2d=Jy_0(i1:i2,:);
Jy_1_2d=Jy_1(i1:i2,:);
Jy_2d=Jy_1_2d-Jy_0_2d;

field='Jx';
[x,y,Jx_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Jx_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Jx_0_2d=Jx_0(i1:i2,:);
Jx_1_2d=Jx_1(i1:i2,:);
Jx_2d=Jx_1_2d-Jx_0_2d;

field='Rho';
[x,y,Rho_0,info]=read_data_Smilei_h5(filename_0,ti,field);
[x,y,Rho_1,info]=read_data_Smilei_h5(filename_1,ti,field);
Rho_0_2d=Rho_0(i1:i2,:);
Rho_1_2d=Rho_1(i1:i2,:);
DRho_2d=Rho_1_2d-Rho_0_2d;

vx_0_2d=Jx_0_2d./Rho_0_2d/e/c;
vy_0_2d=Jy_0_2d./Rho_0_2d/e/c;
vz_0_2d=Jz_0_2d./Rho_0_2d/e/c;

Fn=fft(DRho_2d')';
Fn(:,500:end-500)=0;
DRho2_2d=real(ifft(Fn'))';

Fn=fft(Jy_0_2d')';
Fn(:,500:end-500)=0;
Jy2_2d=real(ifft(Fn'))';

Fy=fft(vy_0_2d')';
Fy(:,500:end-500)=0;
vy2_2d=real(ifft(Fy'))';

Fy=fft(vx_0_2d')';
Fy(:,500:end-500)=0;
vx2_2d=real(ifft(Fy'))';


x0=(1:length(Rho_0))*dx;

%{
plot(vx2_2d')
+[M函数](,获取数据)
%}
## end
#2390, 556:
%{
+[M函数](,验证公式)

获取数据:...
+[M函数](,获取数据)
矩阵系数:...

+[新建阅读窗口](,获取数据)
%}

dvydx=[0,diff(vy2_2d(2,:))]/dx;
dvxdx=[0,diff(vx2_2d(2,:))]/dx;

dvydy=(vy2_2d(2,:)-vy2_2d(1,:))/dy;
dvxdy=(vx2_2d(2,:)-vx2_2d(1,:))/dy;

A=2*dvxdx+dvydy;
B=dvxdy;
C=dvydx;
D=dvxdx+2*dvydy;
E=dvxdx+dvydy;

t_1=((A+D)+sqrt((A-D).^2+4*B.*C))/2;
t_2=((A+D)-sqrt((A-D).^2+4*B.*C))/2;
t_3=E;

a_1=-2*B./((A-D)-sqrt((A-D).^2+4*B.*C));
a_2=-2*B./((A-D)+sqrt((A-D).^2+4*B.*C));


plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3)
plot(x0/1e-6,a_1,x0/1e-6,a_2)



%{
plot(vy2_2d(2,:))
+[M函数](,验证公式)
%}
## end
#2392, 998:
%{
+[M函数](,验证公式)

获取数据:...
+[M函数](,获取数据)
矩阵系数:...
系数重组:...

+[新建阅读窗口](,获取数据)
%}

dvydx=[0,diff(vy2_2d(2,:))]/dx;
dvxdx=[0,diff(vx2_2d(2,:))]/dx;

dvydy=(vy2_2d(2,:)-vy2_2d(1,:))/dy;
dvxdy=(vx2_2d(2,:)-vx2_2d(1,:))/dy;

A=2*dvxdx+dvydy;
B=dvxdy;
C=dvydx;
D=dvxdx+2*dvydy;
E=dvxdx+dvydy;

t_10=((A+D)+sqrt((A-D).^2+4*B.*C))/2;
t_20=((A+D)-sqrt((A-D).^2+4*B.*C))/2;
t_3=E;

a_10=-2*B./((A-D)-sqrt((A-D).^2+4*B.*C));
a_20=-2*B./((A-D)+sqrt((A-D).^2+4*B.*C));

% t_1=t_10;
% t_2=t_20;
% t_1(abs(a_10)<abs(a_20))=t_20(abs(a_10)<abs(a_20));
% t_2(abs(a_10)<abs(a_20))=t_10(abs(a_10)<abs(a_20));
t_1=(t_10.*abs(a_10)+t_20.*abs(a_20))./(abs(a_10)+abs(a_20));
t_2=(t_10.*abs(a_20)+t_20.*abs(a_10))./(abs(a_10)+abs(a_20));


subplot(2,1,1)
% plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3)
plot(x0/1e-6,t_2-t_3,x0/1e-6,dvydx)
axis([10,70,-4e4,4e4])

subplot(2,1,2)
plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3,x0/1e-6,a_1*1e4,'b-',x0/1e-6,a_2*1e4,'r-')
axis([10,70,-0.5e6,0.5e6])


%{
plot(vy2_2d(2,:))
+[M函数](,验证公式)
%}
## end
#2394, 807:
<!--
+[H函数](,群速度)
参考::https://hibp.ecse.rpi.edu/~connor/education/plasma/PlasmaEngineering/Appendix%20Group%20Velocity.pdf
+[打开网页](,参考)

-->

<h2>Phase difference</h2>
%fig.1_

<h2>Group velocity in plasma</h2>
The dispersion of plasma is,
%[1].
%[2].

The group velocity is,
%[3].
%[4].

%[5].
%[6].


For probe and pump in plasma, we have,
$$
\lambda_{probe}=873\ nm,\ \lambda_{pump}=1800\ nm,\ n_e=1\times 10^{19} cm^{-3}
$$
$$
v_{g}(873\ nm)/c=0.9966,\ v_{g}(1800\ nm)/c=0.9854
$$
After propengating 140 um distance, the mismatching distance is,
$$
\Delta=1.58\ \mu m
$$

<!--
fig.1_(图片)::文档/物理问题/plasma/PhaseDiff.png
[7].:
式(6)转换为"Matlab"
将"v_g=c*\frac{\sqrt{\omega^2-\omega_p^{2}}}{\omega}"记作为式(7)
将式(3)记作为式(4)
将式(1)代入到式(4)
将式(4)记作为式(5)

计算式(5)的'微分'


验证公式:...
+[新建阅读窗口](,验证公式)
更新式(5)
+[H函数](,群速度)
-->
## end
#2396, 100:
https://hibp.ecse.rpi.edu/~connor/education/plasma/PlasmaEngineering/Appendix%20Group%20Velocity.pdf
## end
#2398, 61:
k=\frac{\omega}{c} \sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}}}
## end
#2400, 56:
\omega_{p}=\sqrt{\frac{q^{2} n_{e}}{\epsilon_{0} m_{e}}}
## end
#2402, 26:
1/v_{g}=\frac{dk}{d\omega}
## end
#2404, 82:
1/v_{g}=\frac{d}{d\omega}\left(\frac{1}{c} \sqrt{\omega^{2}-\omega_{p}^{2}}\right)
## end
#2406, 55:
k=\frac{\omega}{c}*\sqrt{1-\frac{\omega_p^2}{\omega^2}}
## end
#2409, 46:
\omega_p=\sqrt{\frac{q^2*n_e}{\epsilon_0*m_e}}
## end
#2412, 20:
1/v_g=\d{k}_{\omega}
## end
#2416, 69:
1/v_{g}=\frac{1}{2 c} \frac{\omega}{\sqrt{\omega^{2}-\omega_{p}^{2}}}
## end
#2418, 55:
v_{g}=c \frac{\sqrt{\omega^{2}-\omega_{p}^{2}}}{\omega}
## end
#2421, 59:
1/v_g=\d{\frac{1}{c}*\sqrt{\omega^2-\omega_p^{2}}}_{\omega}
## end
#2424, 53:
\frac{\omega}{c}*\sqrt{1-\frac{\omega_p^2}{\omega^2}}
## end
#2426, 1:
k
## end
#2428, 63:
1/v_g=\frac{1}{2*c}*\frac{\omega}{\sqrt{\omega^2-\omega_p^{2}}}
## end
#2431, 49:
v_g=c*\frac{\sqrt{\omega^2-\omega_p^{2}}}{\omega}
## end
#2435, 431:
%{
+[M函数](,验证公式)
运行指令"mkdir 文档/物理问题/plasma"
在"文档/物理问题/plasma/PhaseDiff.png"处, 保存当前图像
%}

physics_constant;

q=e;
n_e=1e25;
lm_0=873e-9;
lm_1=1800e-9;
L=117e-6;

omega_0=2*pi*c/lm_0;
omega_1=2*pi*c/lm_1;

omega_p=sqrt((q.^2.*n_e)./(epsilon_0.*m_e));
v_g_0=c.*(sqrt(omega_0.^2-omega_p.^2))./(omega_0);
v_g_1=c.*(sqrt(omega_1.^2-omega_p.^2))./(omega_1);

Dv_g=v_g_0-v_g_1;
Dv_g/c
DL=L/v_g_0*Dv_g



%{
v_g_0/c
v_g_1/c
+[M函数](,验证公式)
%}
## end
#2437, 1039:
<!--
+[H函数](,计算折射率)
参考::https://baike.baidu.com/item/%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%B1%82%E6%A0%B9%E5%85%AC%E5%BC%8F/10721952
+[打开网页](,参考)

+[上传临时网页](,计算折射率)
式(5)转换为"表达式"
-->

<h2>Refractive index</h2>
The response matrix is,
%[1].
%[2].
%[3].
%[4].
%[4.1].

The wave equation is,
%[5].
%[6].

If we choose eigenvectors of matrix A, which is perpendicular to \(\vec{k}\), then all matrices in the equation will become a number,
%[7].
(Ignore v_x*k for simplification)
%[8].
%[9].
%[10].
%[11].
%[12].
(There is a problem with this result)

Now we re-consider the v_x*k term,
%[13].
%[14].
%[15].
%[16].
%[17].

One of the roots of a cubic equation is,
%[18].
%[19].

Here we have,
%[20].
%[21].


<!--
[21].:
式(19)转换为"Matlab"
n^{3}-(1+i*t_i/\omega+\beta_x)/\beta_x*n+(1+i*t_i/\omega-\frac{\omega_p^{2}}{\omega^{2}})/\beta_x=0
将"p=-(1+i*t_i/\omega+\beta_x)/\beta_x"记作为式(20)
将"q=(1+i*t_i/\omega-\frac{\omega_p^{2}}{\omega^{2}})/\beta_x"记作为式(21)
将式(5)记作为式(6)
将式(4.1)代入到式(6)


更新式(6)
验证公式(M函数):...
+[H函数](,计算折射率)
-->
## end
#2439, 140:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+v_{x} \frac{\partial}{\partial z}\left(\vec{j_{1}}\right)+\mathbf{T} \vec{j_{1}}=\vec{F}
## end
#2441, 74:
-i \omega \vec{j_{1}}+v_{x} i k \vec{j_{1}}+\mathbf{T} \vec{j_{1}}=\vec{F}
## end
#2443, 23:
\vec{F}=q n_{e} \vec{E}
## end
#2445, 95:
\left(\left(-i \omega+v_{x} i k\right) \mathbf{I}+\mathbf{T}\right) \vec{j_{1}}=q n_{e} \vec{E}
## end
#2447, 124:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i \omega \mu_{0} \vec{j_{1}}
## end
#2449, 144:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i \omega \mu_{0} q n_{e} \mathbf{A}^{-1} \vec{E}
## end
#2450, 63:
\p{t}{\vec{j_1}}+v_x*\p{z}{\vec{j_1}}+\mat{T}*\vec{j_1}=\vec{F}
## end
#2453, 63:
-i*\omega*\vec{j_1}+v_x*i*k*\vec{j_1}+\mat{T}*\vec{j_1}=\vec{F}
## end
#2456, 21:
\vec{F}=q*n_e*\vec{E}
## end
#2459, 61:
((-i*\omega+v_x*i*k)*\mat{I}+\mat{T})*\vec{j_1}=q*n_e*\vec{E}
## end
#2462, 13:
q*n_e*\vec{E}
## end
#2464, 7:
\vec{F}
## end
#2466, 109:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{j_1}
## end
#2470, 43:
\vec{j_{1}}=q n_{e} \mathbf{A}^{-1} \vec{E}
## end
#2471, 36:
\vec{j_1}=q*n_e*\mat{A}^{-1}*\vec{E}
## end
#2475, 85:
\frac{\omega^{2}}{c^{2}}-k^{2}=-i \omega \mu_{0} q n_{e}/\left(-i \omega+t_{i}\right)
## end
#2477, 80:
\frac{\omega^{2}}{c^{2}}-k^{2}=-\frac{i \omega \mu_{0} q n_{e}}{-i \omega+t_{i}}
## end
#2478, 126:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*q*n_e*\mat{A}^{-1}*\vec{E}
## end
#2481, 26:
q*n_e*\mat{A}^{-1}*\vec{E}
## end
#2483, 9:
\vec{j_1}
## end
#2485, 68:
\frac{\omega^{2}}{c^{2}}-k^{2}=-i*\omega*\mu_0*q*n_e/(-i*\omega+t_i)
## end
#2488, 74:
\frac{\omega^{2}}{c^{2}}-k^{2}=-\frac{i*\omega*\mu_0*q*n_e}{-i*\omega+t_i}
## end
#2492, 78:
1-n^{2}=\frac{c^{2}}{\omega^{2}} \frac{\omega \mu_{0} q n_{e}}{\omega+i t_{i}}
## end
#2494, 78:
n^{2}=1-\frac{c^{2}}{\omega^{2}} \frac{\omega \mu_{0} q n_{e}}{\omega+i t_{i}}
## end
#2496, 71:
n=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}} \frac{1}{1+i t_{i}/\omega}}
## end
#2498, 99:
n=\sqrt{1-\frac{\omega_{p}^{2}}{\omega^{2}} \frac{\omega^{2}-i t_{i} \omega}{\omega^{2}+t_{i}^{2}}}
## end
#2499, 72:
1-n^{2}=\frac{c^{2}}{\omega^{2}}*\frac{\omega*\mu_0*q*n_e}{\omega+i*t_i}
## end
#2502, 72:
n^{2}=1-\frac{c^{2}}{\omega^{2}}*\frac{\omega*\mu_0*q*n_e}{\omega+i*t_i}
## end
#2505, 67:
n=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}*\frac{1}{1+i*t_i/\omega}}
## end
#2508, 87:
n=\sqrt{1-\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega^2-i*t_i*\omega}{\omega^2+t_i^2}}
## end
#2512, 1937:
%{
+[M函数](,验证公式)
(数据 来自于流体方程分析 的获取数据)从

验证式12:...
测试三次根:...
(要用nthroot(x,3)来算立方根)
(也不行, 因为不能用复数)

cubic_roots(M函数):...
%}

physics_constant;

q=e;
n_e=1e25;
lm_0=873e-9;
lm_1=1800e-9;
L=140e-6;

omega_0=2*pi*c/lm_0;
omega_1=2*pi*c/lm_1;
omega_p=sqrt((q.^2.*n_e)./(epsilon_0.*m_e));

dvydx=[0,diff(vy2_2d(2,:))]/dx;
dvxdx=[0,diff(vx2_2d(2,:))]/dx;

dvydy=(vy2_2d(2,:)-vy2_2d(1,:))/dy;
dvxdy=(vx2_2d(2,:)-vx2_2d(1,:))/dy;

A=2*dvxdx+dvydy;
B=dvxdy;
C=dvydx;
D=dvxdx+2*dvydy;
E=dvxdx+dvydy;

t_10=((A+D)+sqrt((A-D).^2+4*B.*C))/2*c;
t_20=((A+D)-sqrt((A-D).^2+4*B.*C))/2*c;
t_3=E*c;

a_10=-2*B./((A-D)-sqrt((A-D).^2+4*B.*C));
a_20=-2*B./((A-D)+sqrt((A-D).^2+4*B.*C));

% t_1=t_10;
% t_2=t_20;
% t_1(abs(a_10)<abs(a_20))=t_20(abs(a_10)<abs(a_20));
% t_2(abs(a_10)<abs(a_20))=t_10(abs(a_10)<abs(a_20));
t_1=(t_10.*abs(a_10)+t_20.*abs(a_20))./(abs(a_10)+abs(a_20));
t_2=(t_10.*abs(a_20)+t_20.*abs(a_10))./(abs(a_10)+abs(a_20));


beta_x=vx2_2d(2,:);
p_1=-(1+1i.*t_1./omega_0+beta_x)./beta_x;
p_2=-(1+1i.*t_2./omega_0+beta_x)./beta_x;
p_3=-(1+1i.*t_3./omega_0+beta_x)./beta_x;

q_1=(1+1i.*t_1./omega_0-(omega_p.^2)./(omega_0.^2))./beta_x;
q_2=(1+1i.*t_2./omega_0-(omega_p.^2)./(omega_0.^2))./beta_x;
q_3=(1+1i.*t_3./omega_0-(omega_p.^2)./(omega_0.^2))./beta_x;

n_1=nthroot(-(q_1)./(2)+sqrt(((q_1)./(2)).^2+((p_1)./(3)).^3),3)+nthroot(-(q_1)./(2)-sqrt(((q_1)./(2)).^2+((p_1)./(3)).^3),3);
n_2=nthroot(-(q_2)./(2)+sqrt(((q_2)./(2)).^2+((p_2)./(3)).^3),3)+nthroot(-(q_2)./(2)-sqrt(((q_2)./(2)).^2+((p_2)./(3)).^3),3);
n_3=nthroot(-(q_3)./(2)+sqrt(((q_3)./(2)).^2+((p_3)./(3)).^3),3)+nthroot(-(q_3)./(2)-sqrt(((q_3)./(2)).^2+((p_3)./(3)).^3),3);


% plot(x0/1e-6,n_1,x0/1e-6,n_2)
% plot(x0/1e-6,n_1,x0/1e-6,n_2,x0/1e-6,n_3)


%{
n_1.^3+p_1.*n_1+q_1
plot(x0/1e-6,n_1.^3+p_1.*n_1+q_1)
axis([10,80,-1,100])


plot(t_2./omega_0)
plot(beta_x)
plot(x0/1e-6,n_3)

plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3)
plot(x0/1e-6,B)
plot(vy2_2d(2,:))
+[M函数](,验证公式)
%}
## end
#2514, 1225:
%{
+[M函数](,验证公式)
(数据 来自于流体方程分析 的获取数据)

验证式12:...
%}

physics_constant;

q=e;
n_e=1e25;
lm_0=873e-9;
lm_1=1800e-9;
L=140e-6;

omega_0=2*pi*c/lm_0;
omega_1=2*pi*c/lm_1;
omega_p=sqrt((q.^2.*n_e)./(epsilon_0.*m_e));

dvydx=[0,diff(vy2_2d(2,:))]/dx;
dvxdx=[0,diff(vx2_2d(2,:))]/dx;

dvydy=(vy2_2d(2,:)-vy2_2d(1,:))/dy;
dvxdy=(vx2_2d(2,:)-vx2_2d(1,:))/dy;

A=2*dvxdx+dvydy;
B=dvxdy;
C=dvydx;
D=dvxdx+2*dvydy;
E=dvxdx+dvydy;

t_10=((A+D)+sqrt((A-D).^2+4*B.*C))/2*c;
t_20=((A+D)-sqrt((A-D).^2+4*B.*C))/2*c;
t_3=E*c;

a_10=-2*B./((A-D)-sqrt((A-D).^2+4*B.*C));
a_20=-2*B./((A-D)+sqrt((A-D).^2+4*B.*C));

% t_1=t_10;
% t_2=t_20;
% t_1(abs(a_10)<abs(a_20))=t_20(abs(a_10)<abs(a_20));
% t_2(abs(a_10)<abs(a_20))=t_10(abs(a_10)<abs(a_20));
t_1=(t_10.*abs(a_10)+t_20.*abs(a_20))./(abs(a_10)+abs(a_20));
t_2=(t_10.*abs(a_20)+t_20.*abs(a_10))./(abs(a_10)+abs(a_20));

n_1=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_1./omega_0));
n_2=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_2./omega_0));
n_3=sqrt(1-(omega_p.^2)./(omega_0.^2).*(1)./(1+1i.*t_3./omega_0));


% plot(x0/1e-6,n_1,x0/1e-6,n_2)
plot(x0/1e-6,n_1,x0/1e-6,n_2,x0/1e-6,n_3)


%{
plot(x0/1e-6,t_1,x0/1e-6,t_2,x0/1e-6,t_3)
plot(x0/1e-6,B)
plot(vy2_2d(2,:))
+[M函数](,验证公式)
%}
## end
#2516, 79:
n^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}} \frac{\omega}{\omega-v_{x} k+i t_{i}}
## end
#2518, 80:
n^{2}=1-\frac{\omega_{p}^{2}}{\omega^{2}} \frac{1}{1-\beta_{x} n+i t_{i}/\omega}
## end
#2520, 123:
n^{2} \left(1-\beta_{x} n+i t_{i}/\omega\right)=\left(1-\beta_{x} n+i t_{i}/\omega\right)-\frac{\omega_{p}^{2}}{\omega^{2}}
## end
#2522, 122:
-\beta_{x} n^{3}+\left(1+i t_{i}/\omega+\beta_{x}\right) n=\left(1+i t_{i}/\omega\right)-\frac{\omega_{p}^{2}}{\omega^{2}}
## end
#2524, 133:
n^{3}-\left(1+i t_{i}/\omega+\beta_{x}\right)/\beta_{x} n+\left(1+i t_{i}/\omega-\frac{\omega_{p}^{2}}{\omega^{2}}\right)/\beta_{x}=0
## end
#2525, 73:
n^{2}=1-\frac{\omega_p^{2}}{\omega^{2}}*\frac{\omega}{\omega-v_x*k+i*t_i}
## end
#2528, 74:
n^{2}=1-\frac{\omega_p^{2}}{\omega^{2}}*\frac{1}{1-\beta_x*n+i*t_i/\omega}
## end
#2531, 91:
n^{2}*(1-\beta_x*n+i*t_i/\omega)=(1-\beta_x*n+i*t_i/\omega)-\frac{\omega_p^{2}}{\omega^{2}}
## end
#2534, 88:
-\beta_x*n^3+(1+i*t_i/\omega+\beta_x)*n=(1+i*t_i/\omega)-\frac{\omega_p^{2}}{\omega^{2}}
## end
#2538, 128:
https://baike.baidu.com/item/%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%B1%82%E6%A0%B9%E5%85%AC%E5%BC%8F/10721952
## end
#2539, 97:
n^3-(1+i*t_i/\omega+\beta_x)/\beta_x*n+(1+i*t_i/\omega-\frac{\omega_p^{2}}{\omega^{2}})/\beta_x=0
## end
#2543, 13:
n^{3}+p n+q=0
## end
#2545, 195:
n=\left(-\frac{q}{2}+\sqrt{\left(\frac{q}{2}\right)^{2}+\left(\frac{p}{3}\right)^{3}}\right)^{1/3}+\left(-\frac{q}{2}-\sqrt{\left(\frac{q}{2}\right)^{2}+\left(\frac{p}{3}\right)^{3}}\right)^{1/3}
## end
#2547, 52:
p=-\left(1+i t_{i}/\omega+\beta_{x}\right)/\beta_{x}
## end
#2549, 75:
q=\left(1+i t_{i}/\omega-\frac{\omega_{p}^{2}}{\omega^{2}}\right)/\beta_{x}
## end
#2550, 11:
n^3+p*n+q=0
## end
#2553, 121:
n=(-\frac{q}{2}+\sqrt{(\frac{q}{2})^2+(\frac{p}{3})^3})^{1/3}+(-\frac{q}{2}-\sqrt{(\frac{q}{2})^2+(\frac{p}{3})^3})^{1/3}
## end
#2556, 35:
p=-(1+i*t_i/\omega+\beta_x)/\beta_x
## end
#2559, 58:
q=(1+i*t_i/\omega-\frac{\omega_p^{2}}{\omega^{2}})/\beta_x
## end
#2563, 289:
%{
+[M函数](,测试三次根)
%}

p=10;
q=2;

n=nthroot(-(q)./(2)+sqrt(((q)./(2)).^(2)+((p)./(3)).^(3)),3)+nthroot(-(q)./(2)-sqrt(((q)./(2)).^(2)+((p)./(3)).^(3)),3)


%{
nthroot(-1,3)
(sqrt((1/3)^3))^(1/3)+(sqrt((1/3)^3))^(1/3)

sqrt(1/3)
(sqrt((1/3)^3))^(1/3)
(-1)^(1/3)
n.^3+p*n+q
+[M函数](,测试三次根)
%}
## end
#2565, 142:
%{
地址::/home/xiantao/Documents/MATLAB/cubic_roots.m
+[保存M函数](,cubic_roots)
%}

function y=cubic_roots(x)



end

%{
clear angle
angle(-1)/3
%}
## end
#2568, 44:
/home/xiantao/Documents/MATLAB/cubic_roots.m
## end
#2570, 28:
文档/物理问题/plasma/PhaseDiff.png
## end
#2573, 319:
目录::file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=11
参考::file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=120
书签::file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=162
+[打开网页](,书签)
+[打开网页](,目录)

额, 这本书里面主要用波尔兹曼方程讨论等离子体的性质. 主要讨论的是有温度的等离子体
碰撞我不太感兴趣
等离子体声波好像有意思
没有讨论漂移速度的影响


## end
#2575, 67:
file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=120
## end
#2577, 67:
file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=162
## end
#2579, 66:
file:///media/xiantao/Elements/paper/Books/Landau/Landau10#page=11
## end
#2581, 584:
书单::https://libguides.princeton.edu/c.php?g=84106&p=542104
入门::file:///media/xiantao/Elements/paper/Books/plasma/introducation.pdf#page=8
计算::file:///media/xiantao/Elements/paper/Books/plasma/computation.pdf#page=8
电磁波::file:///media/xiantao/Elements/paper/Books/plasma/EMwave.pdf#page=16
+[打开网页](,电磁波)
+[打开网页](,计算)
+[打开网页](,入门)

额, 这三本书都没有讨论我想要讨论的项
电磁波那本讨论了探测光在等离子体中的传播. 有常规的磁场中均匀等离子体的折射率. 和用射线法讨论非均匀等离子体对探测光的影响(这里讨论了不同模式的光线在腔体内会有不同路径的弯曲, 这个还挺有趣的). 还有托卡马克内部的等离子体流对探测光的散射(我猜和拉曼差不多, 因为是密度分布造成的散射). Polarimetry的那一章主要在讲测量数据怎么处理, 偏振的来源还是磁场

然后, 入门那本有介绍MHD的方程和一些不稳定性. 遗憾的是, MHD中完全没有漂移电流项


## end
#2583, 54:
https://libguides.princeton.edu/c.php?g=84106&p=542104
## end
#2585, 74:
file:///media/xiantao/Elements/paper/Books/plasma/introducation.pdf#page=8
## end
#2587, 72:
file:///media/xiantao/Elements/paper/Books/plasma/computation.pdf#page=8
## end
#2589, 68:
file:///media/xiantao/Elements/paper/Books/plasma/EMwave.pdf#page=16
## end
#2591, 1520:
<!--
+[H函数](,相对论流体方程)

完整方程:...
d12项:...
均匀流体折射率:...
+[新建阅读窗口](,均匀流体折射率)
+[新建阅读窗口](,完整方程)
+[新建阅读窗口](,d12项)

式(11)转换为"表达式"
-->

<h2>Relativistic momentum conservation</h2>
The basic equation is,
%[1].

We have,
%[2].
%[3].
%[4].
%[5].
%[6].

As a result,
%[7].
%[8].

And then,
%[9].

Then 1st order equation is, 
%[10].
%[11].

<h2>Approximations</h2>
Now we use following approximations in the eqn.[11], 
%[12].
%[13].

The equation becomes,
%[14].

By using quasi-static approximation, we will have,
%[15].

And because of eqn.[7], we will have, 
%[16].
Also,
%[17].
%[18].

<h2>Complete equation and matrix</h2>
I prefered \(D_2\) form of drifting term. The complete equation is,
%[19].

In our geometry, the laser is propagating along x-axis and flow is moving in the xy-plane. The matrix should be,
%[20].
%[20.1].

%[21].
%[22].
%[22.1].

<h3>Examples</h3>
Let's assume \(\beta_x=0\), 
%[23].
%[24].
%[24.1].
Since \(n\approx 1\), we have,
%[24.2].


If only \(d_{21}\ne 0\), then,
%[25].
%[26].
%[27].

Since \(n\approx 1\), we have,
%[28].

The eigenvalue is,
%[29].

%[30].
%[31].

%[32].
%[33].

The result is,
%[34].
%[35].
%[36].
%[37].

The inverse matrix is,
%[38].
%[39].
%[40].
%[41].
%[42].
%[43].
%[44].



<!--
[44].:
式(24)转换为"表达式"
式(39)的矩阵"3,3"转换为"表达式"
在式(39)中, 矩阵(1)的项(2,2)转换为"表达式"

将"\mat{D}=\mat{2*\p{x}{v_x}+\p{y}{v_y},\p{y}{v_x},0;\p{x}{v_y},\p{x}{v_x}+2*\p{y}{v_y},0;0,0,\p{x}{v_x}+\p{y}{v_y}}"记作为式(22.1)
式(22.1)转换为"Matlab"

计算式(39)的'矩阵运算'
更新式(39)
验证公式:...
+[新建阅读窗口](,验证公式)
+[H函数](,相对论流体方程)
-->
## end
#2593, 106:
\frac{\partial}{\partial t}\left(n \vec{p}\right)+\vec{\nabla}\cdot \left(n \vec{v} \vec{p}\right)=\vec{F}
## end
#2595, 56:
\vec{p}=\frac{m_{e} \vec{v}}{\sqrt{1-\vec{v}^{2}/c^{2}}}
## end
#2597, 63:
A=\frac{d}{dv}\left(\frac{m_{e} v}{\sqrt{1-v^{2}/c^{2}}}\right)
## end
#2599, 118:
A=\frac{m_{e} \sqrt{1-v^{2}/c^{2}}-m_{e} v \frac{0-v\times 2/c^{2}}{\sqrt{1-v^{2}/c^{2}}}/2}{\sqrt{1-v^{2}/c^{2}}^{2}}
## end
#2601, 85:
A=\frac{m_{e}}{\sqrt{1-v^{2}/c^{2}}}-\frac{m_{e} v v/c^{2}}{\sqrt{1-v^{2}/c^{2}}^{3}}
## end
#2603, 94:
d\vec{p}=\gamma m_{e} \left(\mathbf{I}+\gamma^{2} \vec{\beta} \vec{\beta}\right)\cdot d\vec{v}
## end
#2605, 42:
\vec{p}=\vec{p_{0}}+\mathbf{M} \vec{v_{1}}
## end
#2606, 62:
\p{t}{n*\vec{p}}+\vec{\nabla}\cdot (n*\vec{v}*\vec{p})=\vec{F}
## end
#2609, 50:
\vec{p}=\frac{m_e*\vec{v}}{\sqrt{1-\vec{v}^2/c^2}}
## end
#2612, 40:
A=\d{\frac{m_e*v}{\sqrt{1-v^2/c^2}}}_{v}
## end
#2615, 108:
A=\frac{m_e*\sqrt{1-v^{2}/c^{2}}-m_e*v*\frac{0-v*2/c^{2}}{\sqrt{1-v^{2}/c^{2}}}/2}{\sqrt{1-v^{2}/c^{2}}^{2}}
## end
#2618, 79:
A=\frac{m_e}{\sqrt{1-v^{2}/c^{2}}}-\frac{m_e*v*v/c^2}{\sqrt{1-v^{2}/c^{2}}^{3}}
## end
#2622, 82:
\d{\vec{p}}=\gamma*m_e*(\mat{I}+\gamma^2*\vec{\beta}*\vec{\beta})\cdot \d{\vec{v}}
## end
#2625, 35:
\vec{p}=\vec{p_0}+\mat{M}*\vec{v_1}
## end
#2629, 31:
\vec{v}=\vec{v_{0}}+\vec{v_{1}}
## end
#2631, 215:
\frac{\partial}{\partial t}\left(n \left(\vec{p_{0}}+\mathbf{M} \vec{v_{1}}\right)\right)+\vec{\nabla}\cdot \left(n \left(\vec{v_{0}}+\vec{v_{1}}\right) \left(\vec{p_{0}}+\mathbf{M} \vec{v_{1}}\right)\right)=\vec{F}
## end
#2633, 160:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\vec{\nabla}\cdot \left(\vec{j_{1}} \vec{p_{0}}+\vec{v_{0}} \mathbf{M} \vec{j_{1}}\right)=\vec{F}
## end
#2635, 312:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\vec{p_{0}} \left(\vec{\nabla}\cdot \vec{j_{1}}\right)+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{p_{0}}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#2636, 27:
\vec{v}=\vec{v_0}+\vec{v_1}
## end
#2639, 120:
\p{t}{n*(\vec{p_0}+\mat{M}*\vec{v_1})}+\vec{\nabla}\cdot (n*(\vec{v_0}+\vec{v_1})*(\vec{p_0}+\mat{M}*\vec{v_1}))=\vec{F}
## end
#2642, 19:
\vec{v_0}+\vec{v_1}
## end
#2644, 7:
\vec{v}
## end
#2646, 100:
\p{t}{\mat{M}*\vec{j_1}}+\vec{\nabla}\cdot (\vec{j_1}*\vec{p_0}+\vec{v_0}*\mat{M}*\vec{j_1})=\vec{F}
## end
#2649, 208:
\p{t}{\mat{M}*\vec{j_1}}+\vec{p_0}*(\vec{\nabla}\cdot \vec{j_1})+(\vec{j_1}\cdot \vec{\nabla})*\vec{p_0}+(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\mat{M}*\vec{j_1}=\vec{F}
## end
#2653, 59:
\vec{\nabla} j_{i}\approx \frac{\partial j_{i}}{\partial z}
## end
#2654, 27:
\vec{\nabla}*j_i~\p{z}{j_i}
## end
#2658, 38:
\vec{\nabla}\cdot \vec{j_{1}}\approx 0
## end
#2660, 262:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\left(v_{z} \frac{\partial }{\partial z}\right) \mathbf{M} \vec{j_{1}}+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{p_{0}}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#2662, 215:
\left(v_{x}-c\right) \frac{\partial}{\partial \eta}\left(\mathbf{M} \vec{j_{1}}\right)+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{p_{0}}+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#2664, 60:
\vec{\nabla} \vec{p_{0}}=\mathbf{M} \vec{\nabla} \vec{v_{0}}
## end
#2666, 25:
\mathbf{M}=\mathbf{M}^{T}
## end
#2668, 239:
\left(v_{x}-c\right) \frac{\partial}{\partial \eta}\left(\mathbf{M} \vec{j_{1}}\right)+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}+\left(\left(\mathbf{M} \vec{j_{1}}\right)\cdot \vec{\nabla}\right) \vec{v_{0}}=\vec{F}
## end
#2669, 29:
\vec{\nabla}\cdot \vec{j_1}~0
## end
#2672, 152:
\p{t}{\mat{M}*\vec{j_1}}+(v_z*\p{z}{})*\mat{M}*\vec{j_1}+(\vec{j_1}\cdot \vec{\nabla})*\vec{p_0}+(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}=\vec{F}
## end
#2675, 29:
\vec{\nabla}\cdot \vec{j_1}~0
## end
#2677, 29:
\vec{\nabla}\cdot \vec{j_1}~0
## end
#2679, 131:
(v_x-c)*\p{\eta}{\mat{M}*\vec{j_1}}+(\vec{j_1}\cdot \vec{\nabla})*\vec{p_0}+(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}=\vec{F}
## end
#2682, 53:
\vec{\nabla}*\vec{p_0}=\mat{M}*\vec{\nabla}*\vec{v_0}
## end
#2685, 17:
\mat{M}=\mat{M}^T
## end
#2688, 141:
(v_x-c)*\p{\eta}{\mat{M}*\vec{j_1}}+(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}+((\mat{M}*\vec{j_1})\cdot \vec{\nabla})*\vec{v_0}=\vec{F}
## end
#2692, 1023:
<!--
+[H函数](,讨论散度项)
+[上传临时网页](,讨论散度项)

受力项特征:...
讨论速度修正:...
+[新建阅读窗口](,受力项特征)
+[新建阅读窗口](,讨论速度修正)
'受力项特征'的式(18)转换为"表达式"
式(20)转换为"表达式"
-->

<h2>Density wave</h2>
Let's discuss effects of the density wave term. We will start from uniform flows,
%[1].
According to the approximation condition,
%[2].
%[3].
(Not necessary)<br>
Then in frequency domain, it is,
%[4].
%[5].
%[6].

Assume that the wave vector is along the z-axis. We can define the following matrix,
%[7].
%[8].
%[9].
%[10].
%[11].

Then eigenvalues are,
%[12].
%[13].
%[14].

<h2>Relativistic uniform flows</h2>
The flow equation is,
%[15].
%[16].
%[17].
%[18].

The response function is, 
%[19].
%[20].

Now the wave vector is along z-axis and the velocity is in the xy-plane, 
%[21].
%[22].

The mass matrix is,
%[23].
%[24].

The responce matrix is,
%[25].
%[26].
%[27].

%[28].
%[29].

<h3>Examples</h3>
If the velocity is along y-axis, 
%[30].

If the velocity is along x-axis, 
%[31].
%[32].
%[33].



<!--
[33].:
式(30)转换为"表达式"



更新式(31)
+[H函数](,讨论散度项)
-->
## end
#2695, 169:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \vec{j_{1}}+\left(\vec{\nabla}\cdot \vec{j_{1}}\right) \vec{v_{0}}=\vec{F}
## end
#2697, 59:
\vec{\nabla} j_{i}\approx \frac{\partial j_{i}}{\partial z}
## end
#2699, 176:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+v_{z} \frac{\partial}{\partial z}\left(\vec{j_{1}}\right)+\left(\frac{\partial j_{z}}{\partial z}\right) \vec{v_{0}}=\vec{F}
## end
#2701, 133:
-i \omega \vec{j_{1}}+\left(\vec{v_{0}}\cdot i \vec{k}\right) \vec{j_{1}}+\left(i \vec{k}\cdot \vec{j_{1}}\right) \vec{v_{0}}=\vec{F}
## end
#2703, 127:
-\omega \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{k}\right) \vec{j_{1}}+\left(\vec{v_{0}} \vec{k}\right)\cdot \vec{j_{1}}=\vec{F}
## end
#2705, 166:
-\vec{j_{1}}+\frac{n}{c} \left(\vec{v_{0}}\cdot \hat{k}\right) \vec{j_{1}}+\frac{n}{c} \left(\vec{v_{0}} \hat{k}\right)\cdot \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#2707, 100:
\mathbf{T}=\left(-1+\frac{v_{z} n}{c}\right) \mathbf{I}+\frac{n}{c} \left(\vec{v_{0}} \hat{k}\right)
## end
#2708, 104:
\p{t}{\vec{j_1}}+(\vec{v_0}\cdot \vec{\nabla})*\vec{j_1}+(\vec{\nabla}\cdot \vec{j_1})*\vec{v_0}=\vec{F}
## end
#2711, 27:
\vec{\nabla}*j_i~\p{z}{j_i}
## end
#2714, 68:
\p{t}{\vec{j_1}}+v_z*\p{z}{\vec{j_1}}+(\p{z}{j_z})*\vec{v_0}=\vec{F}
## end
#2717, 101:
-i*\omega*\vec{j_1}+(\vec{v_0}\cdot i*\vec{k})*\vec{j_1}+(i*\vec{k}\cdot \vec{j_1})*\vec{v_0}=\vec{F}
## end
#2720, 95:
-\omega*\vec{j_1}+(\vec{v_0}\cdot \vec{k})*\vec{j_1}+(\vec{v_0}*\vec{k})\cdot \vec{j_1}=\vec{F}
## end
#2723, 123:
-\vec{j_1}+\frac{n}{c}*(\vec{v_0}\cdot \hat{k})*\vec{j_1}+\frac{n}{c}*(\vec{v_0}*\hat{k})\cdot \vec{j_1}=\vec{F}/(i*\omega)
## end
#2727, 64:
\mathbf{I}=\begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#2729, 85:
\vec{v_{0}} \vec{k}=\begin{pmatrix}
0&0&v_{x}\\ 0&0&v_{y}\\ 0&0&v_{z}
\end{pmatrix}


## end
#2731, 176:
\mathbf{T}=\left(-1+\frac{v_{z} n}{c}\right) \begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

+\frac{n}{c} \begin{pmatrix}
0&0&v_{x}\\ 0&0&v_{y}\\ 0&0&v_{z}
\end{pmatrix}


## end
#2732, 68:
\mat{T}=(-1+\frac{v_z*n}{c})*\mat{I}+\frac{n}{c}*(\vec{v_0}*\hat{k})
## end
#2735, 31:
\mat{I}=\mat{1,0,0;0,1,0;0,0,1}
## end
#2738, 47:
\vec{v_0}*\vec{k}=\mat{0,0,v_x;0,0,v_y;0,0,v_z}
## end
#2741, 94:
\mat{T}=(-1+\frac{v_z*n}{c})*\mat{1,0,0;0,1,0;0,0,1}+\frac{n}{c}*\mat{0,0,v_x;0,0,v_y;0,0,v_z}
## end
#2744, 29:
\mat{0,0,v_x;0,0,v_y;0,0,v_z}
## end
#2746, 17:
\vec{v_0}*\vec{k}
## end
#2749, 210:
\mathbf{T}=\begin{pmatrix}
\left(-1+\frac{v_{z} n}{c}\right)&0&\frac{n}{c} v_{x}\\ 0&\left(-1+\frac{v_{z} n}{c}\right)&\frac{n}{c} v_{y}\\ 0&0&\left(-1+\frac{v_{z} n}{c}\right)+\frac{n}{c} v_{z}
\end{pmatrix}


## end
#2751, 25:
\left|\mathbf{T}\right|=0
## end
#2753, 160:
\left(\left(-1+\frac{v_{z} n}{c}\right)\right) \left(\left(-1+\frac{v_{z} n}{c}\right)+\frac{n}{c} v_{z}\right) \left(\left(-1+\frac{v_{z} n}{c}\right)\right)=0
## end
#2754, 132:
\mat{T}=\mat{(-1+\frac{v_z*n}{c}),0,\frac{n}{c}*v_x;0,(-1+\frac{v_z*n}{c}),\frac{n}{c}*v_y;0,0,(-1+\frac{v_z*n}{c})+\frac{n}{c}*v_z}
## end
#2758, 102:
\left(1-\frac{v_{z}}{c} n\right) \left(1-\frac{2 v_{z}}{c} n\right) \left(1-\frac{v_{z}}{c} n\right)=0
## end
#2760, 191:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\vec{p_{0}} \left(\vec{\nabla}\cdot \vec{j_{1}}\right)+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#2762, 155:
-i \omega \mathbf{M} \vec{j_{1}}+\vec{p_{0}} \left(i \vec{k}\cdot \vec{j_{1}}\right)+\left(\vec{v_{0}}\cdot i \vec{k}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#2763, 63:
(1-\frac{v_z}{c}*n)*(1-\frac{2*v_z}{c}*n)*(1-\frac{v_z}{c}*n)=0
## end
#2766, 120:
\p{t}{\mat{M}*\vec{j_1}}+\vec{p_0}*(\vec{\nabla}\cdot \vec{j_1})+(\vec{v_0}\cdot \vec{\nabla})*\mat{M}*\vec{j_1}=\vec{F}
## end
#2771, 11:
[\mat{T}]=0
## end
#2774, 86:
((-1+\frac{v_z*n}{c}))*((-1+\frac{v_z*n}{c})+\frac{n}{c}*v_z)*((-1+\frac{v_z*n}{c}))=0
## end
#2777, 124:
\mat{(-1+\frac{v_z*n}{c}),0,\frac{n}{c}*v_x;0,(-1+\frac{v_z*n}{c}),\frac{n}{c}*v_y;0,0,(-1+\frac{v_z*n}{c})+\frac{n}{c}*v_z}
## end
#2779, 7:
\mat{T}
## end
#2781, 117:
-i*\omega*\mat{M}*\vec{j_1}+\vec{p_0}*(i*\vec{k}\cdot \vec{j_1})+(\vec{v_0}\cdot i*\vec{k})*\mat{M}*\vec{j_1}=\vec{F}
## end
#2785, 188:
-\mathbf{M} \vec{j_{1}}+\frac{n}{c} \vec{p_{0}} \left(\hat{k}\cdot \vec{j_{1}}\right)+\frac{n}{c} \left(\vec{v_{0}}\cdot \hat{k}\right) \mathbf{M} \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#2787, 174:
\left(-\mathbf{M}+\frac{n}{c} m \left(\vec{v_{0}} \hat{k}\right)+\frac{n}{c} \left(\vec{v_{0}}\cdot \hat{k}\right) \mathbf{M}\right) \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#2789, 110:
\mathbf{T}=-\mathbf{M}+n \left(\vec{\beta} \hat{k}\right) m+n \left(\vec{\beta}\cdot \hat{k}\right) \mathbf{M}
## end
#2790, 139:
-\mat{M}*\vec{j_1}+\frac{n}{c}*\vec{p_0}*(\hat{k}\cdot \vec{j_1})+\frac{n}{c}*(\vec{v_0}\cdot \hat{k})*\mat{M}*\vec{j_1}=\vec{F}/(i*\omega)
## end
#2793, 118:
(-\mat{M}+\frac{n}{c}*m*(\vec{v_0}*\hat{k})+\frac{n}{c}*(\vec{v_0}\cdot \hat{k})*\mat{M})*\vec{j_1}=\vec{F}/(i*\omega)
## end
#2796, 79:
\mat{T}=-\mat{M}+n*(\vec{\beta}*\hat{k})*m+n*(\vec{\beta}\cdot \hat{k})*\mat{M}
## end
#2800, 82:
\mathbf{M}=\gamma m_{e} \left(\mathbf{I}+\gamma^{2} \vec{\beta} \vec{\beta}\right)
## end
#2802, 63:
\vec{\beta}=\begin{pmatrix}
v_{x}/c,&v_{y}/c,&0
\end{pmatrix}


## end
#2804, 47:
\hat{k}=\begin{pmatrix}
1,&0,&0
\end{pmatrix}


## end
#2805, 63:
\mat{M}=\gamma*m_e*(\mat{I}+\gamma^{2}*\vec{\beta}*\vec{\beta})
## end
#2808, 31:
\vec{\beta}=\vec{v_x/c,v_y/c,0}
## end
#2811, 19:
\hat{k}=\vec{1,0,0}
## end
#2815, 298:
\mathbf{M}=\gamma m_{e} \left(\begin{pmatrix}
1+\gamma^{2} \left(v_{x}/c\right) \left(v_{x}/c\right)&\gamma^{2} \left(v_{x}/c\right) \left(v_{y}/c\right)&0\\ \gamma^{2} \left(v_{y}/c\right) \left(v_{x}/c\right)&1+\gamma^{2} \left(v_{y}/c\right) \left(v_{y}/c\right)&0\\ 0&0&1
\end{pmatrix}

\right)
## end
#2817, 174:
\mathbf{M}=m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}


## end
#2819, 228:
\mathbf{T}=-\mathbf{M}+n \left(\begin{pmatrix}
v_{x}/c&0&0\\ v_{y}/c&0&0\\ 0&0&0
\end{pmatrix}

\right) m+n \left(\begin{pmatrix}
v_{x}/c,&v_{y}/c,&0
\end{pmatrix}

\cdot \begin{pmatrix}
1,&0,&0
\end{pmatrix}

\right) \mathbf{M}
## end
#2821, 434:
\mathbf{T}=-m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}

+n \left(\begin{pmatrix}
v_{x}/c&0&0\\ v_{y}/c&0&0\\ 0&0&0
\end{pmatrix}

\right) m+n \beta_{x} m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}


## end
#2823, 457:
\mathbf{T}=-\begin{pmatrix}
m \left(1+\gamma^{2} \beta_{x}^{2}\right)&m \gamma^{2} \beta_{x} \beta_{y}&0\\ m \gamma^{2} \beta_{y} \beta_{x}&m \left(1+\gamma^{2} \beta_{y}^{2}\right)&0\\ 0&0&m
\end{pmatrix}

+\begin{pmatrix}
n m v_{x}/c&0&0\\ n m v_{y}/c&0&0\\ 0&0&0
\end{pmatrix}

+n \beta_{x} m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}


## end
#2824, 148:
\mat{M}=\gamma*m_e*(\mat{1+\gamma^{2}*(v_x/c)*(v_x/c),\gamma^{2}*(v_x/c)*(v_y/c),0;\gamma^{2}*(v_y/c)*(v_x/c),1+\gamma^{2}*(v_y/c)*(v_y/c),0;0,0,1})
## end
#2827, 127:
\mat{M}=m*\mat{1+\gamma^{2}*\beta_x^2,\gamma^{2}*\beta_x*\beta_y,0;
\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^2,0;
0,0,1}
## end
#2830, 107:
\mat{T}=-\mat{M}+n*(\mat{v_x/c,0,0;v_y/c,0,0;0,0,0})*m+n*(\vec{v_x/c, v_y/c, 0}\cdot \vec{1, 0, 0})*\mat{M}
## end
#2833, 300:
\mat{T}=-m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}+n*(\mat{v_x/c,0,0;v_y/c,0,0;0,0,0})*m+n*\beta_x*m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}
## end
#2836, 312:
\mat{T}=-\mat{m*(1+\gamma^{2}*\beta_x^{2}),m*\gamma^{2}*\beta_x*\beta_y,0;m*\gamma^{2}*\beta_y*\beta_x,m*(1+\gamma^{2}*\beta_y^{2}),0;0,0,m}+\mat{n*m*v_x/c,0,0;n*m*v_y/c,0,0;0,0,0}+n*\beta_x*m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}
## end
#2840, 489:
\mathbf{T}=\begin{pmatrix}
n m v_{x}/c-m \left(1+\gamma^{2} \beta_{x}^{2}\right)&-m \gamma^{2} \beta_{x} \beta_{y}&0\\ n m v_{y}/c-m \gamma^{2} \beta_{y} \beta_{x}&-m \left(1+\gamma^{2} \beta_{y}^{2}\right)&0\\ 0&0&-m
\end{pmatrix}

+\begin{pmatrix}
n \beta_{x} m \left(1+\gamma^{2} \beta_{x}^{2}\right)&n \beta_{x} m \gamma^{2} \beta_{x} \beta_{y}&0\\ n \beta_{x} m \gamma^{2} \beta_{y} \beta_{x}&n \beta_{x} m \left(1+\gamma^{2} \beta_{y}^{2}\right)&0\\ 0&0&n \beta_{x} m
\end{pmatrix}


## end
#2842, 445:
\mathbf{T}=\begin{pmatrix}
n m v_{x}/c-m \left(1+\gamma^{2} \beta_{x}^{2}\right)+n \beta_{x} m \left(1+\gamma^{2} \beta_{x}^{2}\right)&-m \gamma^{2} \beta_{x} \beta_{y}+n \beta_{x} m \gamma^{2} \beta_{x} \beta_{y}&0\\ n m v_{y}/c-m \gamma^{2} \beta_{y} \beta_{x}+n \beta_{x} m \gamma^{2} \beta_{y} \beta_{x}&-m \left(1+\gamma^{2} \beta_{y}^{2}\right)+n \beta_{x} m \left(1+\gamma^{2} \beta_{y}^{2}\right)&0\\ 0&0&-m+n \beta_{x} m
\end{pmatrix}


## end
#2844, 86:
\mathbf{T}=\begin{pmatrix}
-m&0&0\\ n m \beta&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#2846, 131:
\mathbf{T}=\begin{pmatrix}
\left(-m+n \beta m\right) \gamma^{2}+n m \beta&0&0\\ 0&-m+n \beta m&0\\ 0&0&-m+n \beta m
\end{pmatrix}


## end
#2851, 348:
\mat{T}=\mat{n*m*v_x/c-m*(1+\gamma^{2}*\beta_x^{2}),-m*\gamma^{2}*\beta_x*\beta_y,0;
n*m*v_y/c-m*\gamma^{2}*\beta_y*\beta_x,-m*(1+\gamma^{2}*\beta_y^{2}),0;
0,0,-m}+\mat{n*\beta_x*m*(1+\gamma^{2}*\beta_x^{2}),n*\beta_x*m*\gamma^{2}*\beta_x*\beta_y,0;
n*\beta_x*m*\gamma^{2}*\beta_y*\beta_x,n*\beta_x*m*(1+\gamma^{2}*\beta_y^{2}),0;
0,0,n*\beta_x*m}
## end
#2854, 330:
\mat{T}=\mat{n*m*v_x/c-m*(1+\gamma^{2}*\beta_x^{2})+n*\beta_x*m*(1+\gamma^{2}*\beta_x^{2}),-m*\gamma^{2}*\beta_x*\beta_y+n*\beta_x*m*\gamma^{2}*\beta_x*\beta_y,0;n*m*v_y/c-m*\gamma^{2}*\beta_y*\beta_x+n*\beta_x*m*\gamma^{2}*\beta_y*\beta_x,-m*(1+\gamma^{2}*\beta_y^{2})+n*\beta_x*m*(1+\gamma^{2}*\beta_y^{2}),0;0,0,-m+n*\beta_x*m}
## end
#2857, 7:
\beta_y
## end
#2858, 5:
v_y/c
## end
#2860, 55:
\mat{T}=\mat{-m,0,0;
n*m*\beta,-m*\gamma^{2},0;
0,0,-m}
## end
#2863, 89:
\mat{T}=\mat{(-m+n*\beta*m)*\gamma^{2}+n*m*\beta,0,0;
0,-m+n*\beta*m,0;
0,0,-m+n*\beta*m}
## end
#2867, 1120:
<!--
+[H函数](,受力项特征)

参考1::file:///media/xiantao/Elements/paper/Books/Jackson.pdf#page=2
式(8)转换为"表达式"
-->

<h2>Force in laser fields</h2>
The B-field and E-field in a laser beam have a relation,
%[1].
%[2].

The force is,
%[3].
%[4].
%[5].
%[6].
%[7].
The responce matrix is,
%[8].

If the wave is along x-axis and velocity is in the xy-plane,
%[9].
%[10].
%[11].
%[12].
%[13].

<h3>Examples</h3>
If the velocity is along y-axis,
%[14].

If the velocity is along x-axis,
%[15].

<h2>Relativistic uniform flows</h2>
The flow equation is,
%[16].
%[17].
%[18].
%[19].

If the velocity is along x-axis,
%[20].
%[21].
%[22].
%[23].

If the velocity is along y-axis,
%[24].
%[25].
%[26].

The eigenvalues can be solved by,
%[27].
%[28].
%[29].
%[30].
%[31].
%[32].
%[33].

The solution is,
%[34].
%[35].

The eigen-vectors should be solved by following steps,
%[36].
%[37].
%[38].
%[39].
%[40].



<!--
[40].:
式(13)转换为"表达式"
将"(-m-n^{2}*m*\beta^{2}-M)*x+(n*m*\beta*\gamma^{2})*y=0"记作为式(39)
将"y/x=\frac{1+n^{2}*\beta^{2}+M/m}{n*\beta*\gamma^{2}}"记作为式(40)



验证公式(M函数):...
模拟结果(M函数):...
+[新建阅读窗口](,验证公式)
更新式(38)
+[H函数](,受力项特征)
-->
## end
#2869, 75:
\vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t}\left(\vec{B}\right)
## end
#2871, 40:
i \vec{k}\times \vec{E}=i \omega \vec{B}
## end
#2873, 56:
\vec{F}=q \left(\vec{E}+\vec{v_{0}}\times \vec{B}\right)
## end
#2875, 36:
\vec{B}=\vec{k}\times \vec{E}/\omega
## end
#2877, 90:
\vec{F}=q \left(\vec{E}+\vec{v_{0}}\times \left(\vec{k}\times \vec{E}\right)/\omega\right)
## end
#2879, 136:
\vec{F}=q \left(\vec{E}+\left(\vec{v_{0}}\cdot \vec{E}\right) \vec{k}/\omega-\left(\vec{v_{0}}\cdot \vec{k}\right) \vec{E}/\omega\right)
## end
#2880, 42:
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}}
## end
#2883, 40:
i*\vec{k}\times \vec{E}=i*\omega*\vec{B}
## end
#2886, 43:
\vec{F}=q*(\vec{E}+\vec{v_0}\times \vec{B})
## end
#2889, 36:
\vec{B}=\vec{k}\times \vec{E}/\omega
## end
#2892, 66:
\vec{F}=q*(\vec{E}+\vec{v_0}\times (\vec{k}\times \vec{E})/\omega)
## end
#2895, 28:
\vec{k}\times \vec{E}/\omega
## end
#2897, 7:
\vec{B}
## end
#2899, 99:
\vec{F}=q*(\vec{E}+(\vec{v_0}\cdot \vec{E})*\vec{k}/\omega-(\vec{v_0}\cdot \vec{k})*\vec{E}/\omega)
## end
#2903, 136:
\vec{F}=q \left(\mathbf{I}+\frac{n}{c} \left(\hat{k} \vec{v_{0}}\right)-\frac{n}{c} \left(\hat{k}\cdot \vec{v_{0}}\right)\right) \vec{E}
## end
#2905, 123:
\mathbf{T_{2}}=\left(1-n \left(\hat{k}\cdot \vec{\beta_{0}}\right)\right) \mathbf{I}+n \left(\hat{k} \vec{\beta_{0}}\right)
## end
#2907, 64:
\mathbf{I}=\begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#2909, 47:
\hat{k}=\begin{pmatrix}
1,&0,&0
\end{pmatrix}


## end
#2911, 61:
file:///media/xiantao/Elements/paper/Books/Jackson.pdf#page=2
## end
#2912, 96:
\vec{F}=q*(\mat{I}+\frac{n}{c}*(\hat{k}*\vec{v_0})-\frac{n}{c}*(\hat{k}\cdot \vec{v_0}))*\vec{E}
## end
#2915, 78:
\mat{T_2}=(1-n*(\hat{k}\cdot \vec{\beta_0}))*\mat{I}+n*(\hat{k}*\vec{\beta_0})
## end
#2919, 71:
\vec{\beta_{0}}=\begin{pmatrix}
\beta_{x},&\beta_{y},&0
\end{pmatrix}


## end
#2921, 150:
\mathbf{T_{2}}=\left(1-n \left(\beta_{x}\right)\right) \mathbf{I}+n \left(\begin{pmatrix}
\beta_{x}&\beta_{y}&0\\ 0&0&0\\ 0&0&0
\end{pmatrix}

\right)
## end
#2923, 102:
\mathbf{T_{2}}=\begin{pmatrix}
1&n \beta_{y}&0\\ 0&1-n \beta_{x}&0\\ 0&0&1-n \beta_{x}
\end{pmatrix}


## end
#2924, 31:
\mat{I}=\mat{1,0,0;0,1,0;0,0,1}
## end
#2927, 19:
\hat{k}=\vec{1,0,0}
## end
#2930, 37:
\vec{\beta_0}=\vec{\beta_x,\beta_y,0}
## end
#2933, 75:
\mat{T_2}=(1-n*(\beta_x))*\mat{I}+n*(\mat{\beta_x,\beta_y,0;
0,0,0;
0,0,0})
## end
#2936, 23:
\vec{\beta_x,\beta_y,0}
## end
#2938, 13:
\vec{\beta_0}
## end
#2940, 11:
\vec{1,0,0}
## end
#2942, 7:
\hat{k}
## end
#2944, 63:
\mat{T_2}=\mat{1,n*\beta_y,0;
0,1-n*\beta_x,0;
0,0,1-n*\beta_x}
## end
#2948, 74:
\mathbf{T_{2}}=\begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#2950, 84:
\mathbf{T_{2}}=\begin{pmatrix}
1&0&0\\ 0&1-n \beta&0\\ 0&0&1-n \beta
\end{pmatrix}


## end
#2951, 39:
\mat{T_2}=\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#2954, 51:
\mat{T_2}=\mat{1,0,0;
0,1-n*\beta,0;
0,0,1-n*\beta}
## end
#2958, 52:
\mathbf{T} \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#2960, 56:
i \omega \mathbf{T} \vec{j_{1}}=q \mathbf{T_{2}} \vec{E}
## end
#2962, 69:
\frac{i \omega}{q} \mathbf{T_{2}}^{-1} \mathbf{T} \vec{j_{1}}=\vec{E}
## end
#2964, 41:
\mathbf{R}=\mathbf{T_{2}}^{-1} \mathbf{T}
## end
#2966, 119:
\mathbf{T_{2}}^{-1}=\begin{pmatrix}
1&0&0\\ 0&1/\left(1-n \beta\right)&0\\ 0&0&1/\left(1-n \beta\right)
\end{pmatrix}


## end
#2967, 36:
\mat{T}*\vec{j_1}=\vec{F}/(i*\omega)
## end
#2970, 46:
i*\omega*\mat{T}*\vec{j_1}=q*\mat{T_2}*\vec{E}
## end
#2973, 59:
\frac{i*\omega}{q}*\mat{T_2}^{-1}*\mat{T}*\vec{j_1}=\vec{E}
## end
#2977, 231:
\mathbf{R}=\begin{pmatrix}
1&0&0\\ 0&1/\left(1-n \beta\right)&0\\ 0&0&1/\left(1-n \beta\right)
\end{pmatrix}

 \begin{pmatrix}
\left(-m+n \beta m\right) \gamma^{2}+n m \beta&0&0\\ 0&-m+n \beta m&0\\ 0&0&-m+n \beta m
\end{pmatrix}


## end
#2979, 111:
\mathbf{R}=\begin{pmatrix}
\left(-m+n \beta m\right) \gamma^{2}+n m \beta&0&0\\ 0&-m&0\\ 0&0&-m
\end{pmatrix}


## end
#2981, 51:
R_{11}=-m \gamma^{2}+n \beta m \gamma^{2}+n m \beta
## end
#2983, 80:
\mathbf{T_{2}}^{-1}=\begin{pmatrix}
1&-n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#2985, 147:
\mathbf{R}=\begin{pmatrix}
1&-n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

 \begin{pmatrix}
-m&0&0\\ n m \beta&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#2986, 30:
\mat{R}=\mat{T_2}^{-1}*\mat{T}
## end
#2989, 64:
\mat{T_2}^{-1}=\mat{1,0,0;
0,1/(1-n*\beta),0;
0,0,1/(1-n*\beta)}
## end
#2992, 135:
\mat{R}=\mat{1,0,0;0,1/(1-n*\beta),0;0,0,1/(1-n*\beta)}*\mat{(-m+n*\beta*m)*\gamma^{2}+n*m*\beta,0,0;0,-m+n*\beta*m,0;0,0,-m+n*\beta*m}
## end
#2995, 49:
\mat{1,0,0;
0,1/(1-n*\beta),0;
0,0,1/(1-n*\beta)}
## end
#2997, 14:
\mat{T_2}^{-1}
## end
#2999, 67:
\mat{R}=\mat{(-m+n*\beta*m)*\gamma^{2}+n*m*\beta,0,0;0,-m,0;0,0,-m}
## end
#3002, 49:
R_11=-m*\gamma^{2}+n*\beta*m*\gamma^{2}+n*m*\beta
## end
#3005, 47:
\mat{T_2}^{-1}=\mat{1,-n*\beta,0;
0,1,0;
0,0,1}
## end
#3008, 84:
\mat{R}=\mat{1,-n*\beta,0;0,1,0;0,0,1}*\mat{-m,0,0;n*m*\beta,-m*\gamma^{2},0;0,0,-m}
## end
#3012, 123:
\mathbf{R}=\begin{pmatrix}
-m-n^{2} m \beta^{2}&n m \beta \gamma^{2}&0\\ n m \beta&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3014, 34:
\mathbf{A}=\mathbf{R}-M \mathbf{I}
## end
#3016, 129:
\mathbf{A}=\begin{pmatrix}
-m-n^{2} m \beta^{2}-M&n m \beta \gamma^{2}&0\\ n m \beta&-m \gamma^{2}-M&0\\ 0&0&-m-M
\end{pmatrix}


## end
#3017, 88:
\mat{R}=\mat{-m-n^2*m*\beta^2,n*m*\beta*\gamma^{2},0;
n*m*\beta,-m*\gamma^{2},0;
0,0,-m}
## end
#3020, 25:
\mat{A}=\mat{R}-M*\mat{I}
## end
#3023, 96:
\mat{A}=\mat{-m-n^{2}*m*\beta^{2}-M,n*m*\beta*\gamma^{2},0;n*m*\beta,-m*\gamma^{2}-M,0;0,0,-m-M}
## end
#3026, 80:
\mat{-m-n^2*m*\beta^2,n*m*\beta*\gamma^{2},0;
n*m*\beta,-m*\gamma^{2},0;
0,0,-m}
## end
#3028, 7:
\mat{R}
## end
#3030, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#3032, 7:
\mat{I}
## end
#3035, 133:
\left|\begin{pmatrix}
-m-n^{2} m \beta^{2}-M&n m \beta \gamma^{2}&0\\ n m \beta&-m \gamma^{2}-M&0\\ 0&0&-m-M
\end{pmatrix}

\right|=0
## end
#3037, 133:
\left(-m \gamma^{2}-M\right) \left(-m-M\right) \left(-m-n^{2} m \beta^{2}-M\right)-n m \beta \gamma^{2} \left(-m-M\right) n m \beta=0
## end
#3039, 128:
\left(\left(m \gamma^{2}+M\right) \left(m+n^{2} m \beta^{2}+M\right)-\left(n m \beta \gamma\right)^{2}\right) \left(m+M\right)=0
## end
#3041, 135:
M^{2}+\left(m \gamma^{2}+m+n^{2} m \beta^{2}\right) M+\left(m+n^{2} m \beta^{2}\right) m \gamma^{2}-\left(n m \beta \gamma\right)^{2}=0
## end
#3042, 92:
[\mat{-m-n^{2}*m*\beta^{2}-M,n*m*\beta*\gamma^{2},0;n*m*\beta,-m*\gamma^{2}-M,0;0,0,-m-M}]=0
## end
#3045, 89:
(-m*\gamma^{2}-M)*(-m-M)*(-m-n^{2}*m*\beta^{2}-M)-n*m*\beta*\gamma^{2}*(-m-M)*n*m*\beta=0
## end
#3048, 73:
((m*\gamma^{2}+M)*(m+n^{2}*m*\beta^{2}+M)-(n*m*\beta*\gamma)^{2})*(m+M)=0
## end
#3051, 100:
M^2+(m*\gamma^{2}+m+n^{2}*m*\beta^{2})*M+(m+n^{2}*m*\beta^{2})*m*\gamma^{2}-(n*m*\beta*\gamma)^{2}=0
## end
#3055, 81:
M^{2}+\left(m \gamma^{2}+m+n^{2} m \beta^{2}\right) M+\left(m \gamma\right)^{2}=0
## end
#3056, 57:
M^2+(m*\gamma^{2}+m+n^{2}*m*\beta^{2})*M+(m*\gamma)^{2}=0
## end
#3060, 143:
M=\frac{-\left(m \gamma^{2}+m+n^{2} m \beta^{2}\right)+\sqrt{\left(m \gamma^{2}+m+n^{2} m \beta^{2}\right)^{2}-4 \left(m \gamma\right)^{2}}}{2}
## end
#3062, 122:
M=\frac{-\left(1+\gamma^{2}+n^{2} \beta^{2}\right)+\sqrt{\left(1+\gamma^{2}+n^{2} \beta^{2}\right)^{2}-4 \gamma^{2}}}{2} m
## end
#3064, 23:
\mathbf{A} \mathbf{X}=0
## end
#3066, 162:
\begin{pmatrix}
-m-n^{2} m \beta^{2}-M&n m \beta \gamma^{2}&0\\ n m \beta&-m \gamma^{2}-M&0\\ 0&0&-m-M
\end{pmatrix}

 \begin{pmatrix}
x\\ y\\ z
\end{pmatrix}

=0
## end
#3067, 110:
M=\frac{-(m*\gamma^{2}+m+n^{2}*m*\beta^{2})+\sqrt{(m*\gamma^{2}+m+n^{2}*m*\beta^{2})^{2}-4*(m*\gamma)^{2}}}{2}
## end
#3070, 100:
M=\frac{-(1+\gamma^{2}+n^{2}*\beta^{2})+\sqrt{(1+\gamma^{2}+n^{2}*\beta^{2})^{2}-4*\gamma^{2}}}{2}*m
## end
#3074, 395:
<!--
+[H函数](,讨论密度扰动)
-->


<h2>Velocity equation</h2>
%[1].
If we separate density and perturbation density,
%[2].
%[3].

So the perturbation equation is,
%[4].


And the density equation is,
%[5].
%[6].
%[7].
%[8].
%[9].
%[10].
%[11].





<!--
[11].:
式(6)转换为"表达式"
将"\p{t}{\rho_1}+\vec{\nabla}\cdot (\rho_1*\vec{v_0})+\vec{\nabla}\cdot (\rho_0*\vec{v_1})=0"记作为式(7)



更新式(6)
+[H函数](,讨论密度扰动)
-->
## end
#3077, 124:
\frac{\partial}{\partial t}\left(\rho \vec{v_{0}}\right)+\vec{\nabla}\cdot \left(\rho \vec{v_{0}} \vec{v_{0}}\right)=\vec{F}
## end
#3079, 22:
\rho=\rho_{0}+\rho_{1}
## end
#3081, 176:
\frac{\partial}{\partial t}\left(\left(\rho_{0}+\rho_{1}\right) \vec{v_{0}}\right)+\vec{\nabla}\cdot \left(\left(\rho_{0}+\rho_{1}\right) \vec{v_{0}} \vec{v_{0}}\right)=\vec{F}
## end
#3083, 132:
\frac{\partial}{\partial t}\left(\rho_{1} \vec{v_{0}}\right)+\vec{\nabla}\cdot \left(\rho_{1} \vec{v_{0}} \vec{v_{0}}\right)=\vec{F}
## end
#3085, 78:
\frac{\partial \rho}{\partial t}+\vec{\nabla}\cdot \left(\rho \vec{v}\right)=0
## end
#3087, 158:
\frac{\partial}{\partial t}\left(\rho_{0}+\rho_{1}\right)+\vec{\nabla}\cdot \left(\left(\rho_{0}+\rho_{1}\right) \left(\vec{v_{0}}+\vec{v_{1}}\right)\right)=0
## end
#3089, 74:
\p{t}{\rho*\vec{v_0}}+\vec{\nabla}\cdot (\rho*\vec{v_0}*\vec{v_0})=\vec{F}
## end
#3092, 18:
\rho=\rho_0+\rho_1
## end
#3095, 96:
\p{t}{(\rho_0+\rho_1)*\vec{v_0}}+\vec{\nabla}\cdot ((\rho_0+\rho_1)*\vec{v_0}*\vec{v_0})=\vec{F}
## end
#3098, 13:
\rho_0+\rho_1
## end
#3100, 4:
\rho
## end
#3102, 78:
\p{t}{\rho_1*\vec{v_0}}+\vec{\nabla}\cdot (\rho_1*\vec{v_0}*\vec{v_0})=\vec{F}
## end
#3105, 46:
\p{t}{\rho}+\vec{\nabla}\cdot (\rho*\vec{v})=0
## end
#3108, 80:
\p{t}{\rho_0+\rho_1}+\vec{\nabla}\cdot ((\rho_0+\rho_1)*(\vec{v_0}+\vec{v_1}))=0
## end
#3112, 142:
\frac{\partial \rho_{1}}{\partial t}+\vec{\nabla}\cdot \left(\rho_{1} \vec{v_{0}}\right)+\vec{\nabla}\cdot \left(\rho_{0} \vec{v_{1}}\right)=0
## end
#3121, 89:
\p{t}{\rho_1}+\vec{\nabla}\cdot (\rho_1*\vec{v_0})+\vec{\nabla}\cdot (\rho_0*\vec{v_1})=0
## end
#3125, 844:
%{
+[M函数](,验证公式)

特征值:...
特征向量:...
%}

physics_constant;

n=1;

beta=linspace(0.01,0.99,1000);
gamma=1./sqrt(1-beta.^2);

% gamma=linspace(1,20,1000);
% beta=sqrt(1-(1./gamma).^2);

m=gamma;
M_1=(-(1+gamma.^(2)+n.^(2).*beta.^(2))+sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;
M_2=(-(1+gamma.^(2)+n.^(2).*beta.^(2))-sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;

Ey_1=(1+n.^(2).*beta.^(2)+M_1./m)./(n.*beta.*gamma.^(2));
Ey_2=(1+n.^(2).*beta.^(2)+M_2./m)./(n.*beta.*gamma.^(2));

% Ey_1=(n.*beta)./(gamma.^2+M_1./m);
% Ey_2=(n.*beta)./(gamma.^2+M_2./m);

M_m=-(Ey_2.*M_1-Ey_1.*M_2)./(Ey_1-Ey_2);

subplot(2,1,1)
% plot(beta,-M_1./gamma,beta,-M_2./gamma)
% plot(beta,-M_1./gamma,beta,-M_m./gamma)
plot(beta,gamma.^3./gamma,beta,-M_m./gamma)
subplot(2,1,2)
plot(beta,Ey_1,beta,Ey_2)

%{
+[M函数](,验证公式)
%}
## end
#3126, 17:
\mat{A}*\mat{X}=0
## end
#3129, 102:
\mat{-m-n^{2}*m*\beta^{2}-M,n*m*\beta*\gamma^{2},0;n*m*\beta,-m*\gamma^{2}-M,0;0,0,-m-M}*\mat{x;y;z}=0
## end
#3132, 88:
\mat{-m-n^{2}*m*\beta^{2}-M,n*m*\beta*\gamma^{2},0;n*m*\beta,-m*\gamma^{2}-M,0;0,0,-m-M}
## end
#3134, 7:
\mat{A}
## end
#3137, 252:
\begin{pmatrix}
\left(-m-n^{2} m \beta^{2}-M\right) \left(x\right)+\left(n m \beta \gamma^{2}\right) \left(y\right)\\ \left(n m \beta\right) \left(x\right)+\left(-m \gamma^{2}-M\right) \left(y\right)\\ \left(-m-M\right) \left(z\right)
\end{pmatrix}

=0
## end
#3139, 75:
\left(-m-n^{2} m \beta^{2}-M\right) x+\left(n m \beta \gamma^{2}\right) y=0
## end
#3141, 52:
y/x=\frac{1+n^{2} \beta^{2}+M/m}{n \beta \gamma^{2}}
## end
#3142, 112:
\mat{(-m-n^{2}*m*\beta^{2}-M)*(x)+(n*m*\beta*\gamma^{2})*(y);(n*m*\beta)*(x)+(-m*\gamma^{2}-M)*(y);(-m-M)*(z)}=0
## end
#3145, 53:
(-m-n^{2}*m*\beta^{2}-M)*x+(n*m*\beta*\gamma^{2})*y=0
## end
#3148, 52:
y/x=\frac{1+n^{2}*\beta^{2}+M/m}{n*\beta*\gamma^{2}}
## end
#3152, 662:
%{
+[M函数](,验证公式)

特征值:...
%}

physics_constant;

n=1;

gamma=linspace(1,2,1000);
% gamma=1./sqrt(1-beta.^2);
beta=sqrt(1-(1./gamma).^2);

m=gamma;
M_1=-(-(1+gamma.^(2)+n.^(2).*beta.^(2))+sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;
M_2=-(-(1+gamma.^(2)+n.^(2).*beta.^(2))-sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;

Ey_1=(1+n.^(2).*beta.^(2)+M_1./m)./(n.*beta.*gamma.^(2));
Ey_2=(1+n.^(2).*beta.^(2)+M_2./m)./(n.*beta.*gamma.^(2));

% plot(beta,gamma,beta,M)
% plot(gamma,gamma,gamma,M_1,gamma,M_2)
% plot(gamma,gamma,gamma,M_1)
% plot(gamma,M_1./gamma)
plot(gamma,M_1./gamma,gamma,M_2./gamma)

%{
+[M函数](,验证公式)
%}
## end
#3155, 829:
%{
+[M函数](,验证公式)

特征值:...
特征向量:...
%}

physics_constant;

n=1;

gamma=linspace(1,20,1000);
% gamma=1./sqrt(1-beta.^2);
beta=sqrt(1-(1./gamma).^2);

m=gamma;
M_1=(-(1+gamma.^(2)+n.^(2).*beta.^(2))+sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;
M_2=(-(1+gamma.^(2)+n.^(2).*beta.^(2))-sqrt((1+gamma.^(2)+n.^(2).*beta.^(2)).^(2)-4.*gamma.^(2)))./(2).*m;

Ey_1=(1+n.^(2).*beta.^(2)+M_1./m)./(n.*beta.*gamma.^(2));
Ey_2=(1+n.^(2).*beta.^(2)+M_2./m)./(n.*beta.*gamma.^(2));

% Ey_1=(n.*beta)./(gamma.^2+M_1./m);
% Ey_2=(n.*beta)./(gamma.^2+M_2./m);

M_m=(Ey_2.*M_1-Ey_1.*M_2)./(Ey_1-Ey_2);

subplot(2,1,1)
plot(gamma,-M_1./gamma,gamma,-M_2./gamma)
% plot(gamma,-M_1./gamma,gamma,M_m./gamma)
% plot(gamma,-M_1./gamma,gamma,-M_2./gamma,gamma,M_m./gamma)
subplot(2,1,2)
plot(gamma,Ey_1,gamma,Ey_2)

%{
+[M函数](,验证公式)
%}
## end
#3157, 873:
%{
+[M函数](,模拟结果)
运行指令"cp -r /home/xiantao/Documents/sim_output/sim_folder_smilei /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
%}


physics_constant;
addpath('Matlab/readData');
lm_0=800e-9;

filename_0="/media/xiantao/Elements/LWFA/FDH/Smilei/test0/sim_folder_smilei/Fields0.h5";

%{
+[M函数](,直接分析h5)
%}
ti=13000;
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x,Ez]=read_data_1D_Smilei_h5(filename_0,ti,field);

field='Jy';
[x,Jy]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);

field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);


subplot(2,1,1)
plot(x/1e-6,Ey,x/1e-6,-Ez)
% axis([180,200,-5e10,5e10])

subplot(2,1,2)
plot(x/1e-6,Jy,x/1e-6,-Jz)
axis([10,200,-7e12,7e12])




%{
[x,field]=read_data_1D_Smilei_h5(filename_0,ti,"Rho");
plot(x,field)
+[M函数](,模拟结果)
%}
## end
#3158, 61:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0/run.py
## end
#3160, 2233:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

"""
import numpy as np


dt = 0.11663162726452106
nx = 13312
Lx = 1568.2830526720245
Ly = 628.3185307179587
npatch_x = 128

Main(
    geometry = "1Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(14132)*dt,

    cell_length  = [0.11780972450961723],
    grid_length = [Lx],

    number_of_patches = [npatch_x],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)



LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)


Species(
    name = "_plasma_2",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = 1,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.0, 0.99, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 0.005740660892844831, 

    mean_velocity = [0.0, 0.99, 0.0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserPlanar1D(
    box_side                = "xmin",
    a0                            = 0.01,
    omega                    = 0.9163802978235966,
    polarization_phi  = 0.7853981633974484,
    ellipticity               = 0.0,
    time_envelope     = tconstant(),
)




DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho', 'Jy__plasma_2' ],
    every = 500,
)




DiagPerformances(
    every = 50,
)



## end
#3162, 63:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0/info.txt
## end
#3164, 875:
地址::/home/xiantao/Documents/sim_output/Smilei_out/RFB_1D_0
运行指令"nautilus /home/xiantao/Documents/sim_output/Smilei_out"
状态::
状态::本地
状态::上传


代码:...
+[新建阅读窗口](,代码)
+[删除结构](,代码)->+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"1D"(+[召唤星辰],)
+[召唤星辰]"生成Smilei代码"(1D均匀模拟,代码)->+[.]"不构造"(+[召唤星辰],)


有外场
外场的类型是"磁场"
外场的场强是"0,0,0"

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho,Jy__plasma_2"
探测场的探测间隔是"500"

参考波长::800e-9
有模拟空间和窗口
有探测光, 电子和正电子
有什么

模拟空间是长方形(200e-6,80e-6)
模拟空间的格点尺寸是"1.5e-8,20.e-7,20.e-7"

窗口是长方形(200e-6,80e-6)
窗口的启动时间是"700e-15"
窗口的速度是"0.999"

电子的数密度是"1e25"
电子的速度方向是"0,1,0."
电子的beta是"0.99"

正电子的数密度是"1e25"
正电子的电荷是"1"
正电子的速度方向是"0,1,0."
正电子的beta是"0.99"

探测光有什么
探测光的a0是"0.01"
探测光的波长是"873e-9"
探测光的展宽是"inf"
探测光的腰宽是"20e-6"
探测光的偏振态是(1,1)
探测光的焦点位置是A
探测光的偏振态是什么

A::
A在(40e-6,0)



模拟动画:...
+[召唤星辰]"生成PIC一维动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)
+[召唤星辰]"生成PIC预览动画"(1D均匀模拟,模拟动画)->+[M函数](,模拟动画)





## end
#3166, 67:
/home/xiantao/Documents/sim_output/Smilei_out/RFB_2D_0/myscript.txt
## end
#3168, 1559:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A A-pcsli       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/Smilei/smilei run.py



## end
#3171, 1073:
<!--
+[H函数](,讨论速度修正)

求R的逆(html):...
+[新建阅读窗口](,求R的逆)
-->

<h2>Velocity correction</h2>
Considering an exmaple, the velocity is along the y-axis and the propagation direction is along the x-axis. The E-field of the laser field is along y-axis. First the laser field force is, 
%[1].
%[2].
%[3].

The \(v_x\) is,
%[4].
%[5].

The \(v_y\) is,
%[6].
%[7].

Then the current distribution is,
%[8].
%[9].
%[10].
%[11].
%[12].

OK, eqn.[10] is equivalent to,
%[13].

OK, maybe I should try,
%[14].

<h2>Modified velocity equation</h2>
The modified responce matrix is, 
%[15].
%[16].
%[17].
%[18].

It is, 
%[19].
%[20].
%[21].
%[22].

If \(\beta_x=0\), then,
%[23].
%[24].

<h2>Polarization mode</h2>
%[25].
%[26].
%[27].
%[28].
%[28.1].

The eigen-value of the matrix is,
%[29].
%[30].
%[31].
%[32].
%[33].
%[34].
%[35].
%[36].

Because \(n\approx 1\), then,
%[37].
%[38].
%[39].
%[39.1].
%[39.2].

The matrix is,
%[40].
%[41].
%[42].
%[43].


<!--
[39.2].:
式(15)转换为"表达式"
将"M~-\gamma^{2}*m+\gamma^2*\beta*m"记作为式(39.2)


验证公式(M函数):...
+[新建阅读窗口](,验证公式)
更新式(41)
+[H函数](,讨论速度修正)
-->
## end
#3173, 90:
\vec{F}=q \left(\vec{E}+\vec{v_{0}}\times \left(\vec{k}\times \vec{E}\right)/\omega\right)
## end
#3175, 24:
F_{x}=q v_{0} k E/\omega
## end
#3177, 9:
F_{y}=q E
## end
#3179, 24:
v_{x}=F_{x}/\omega/m_{x}
## end
#3181, 42:
v_{x}=\frac{q v_{0} k E}{\omega^{2} m_{x}}
## end
#3183, 24:
v_{y}=F_{y}/\omega/m_{y}
## end
#3185, 30:
v_{y}=\frac{q E}{\omega m_{y}}
## end
#3186, 66:
\vec{F}=q*(\vec{E}+\vec{v_0}\times (\vec{k}\times \vec{E})/\omega)
## end
#3189, 20:
F_x=q*v_0*k*E/\omega
## end
#3192, 7:
F_y=q*E
## end
#3195, 18:
v_x=F_x/\omega/m_x
## end
#3198, 34:
v_x=\frac{q*v_0*k*E}{\omega^2*m_x}
## end
#3201, 16:
q*v_0*k*E/\omega
## end
#3203, 3:
F_x
## end
#3205, 18:
v_y=F_y/\omega/m_y
## end
#3208, 26:
v_y=\frac{q*E}{\omega*m_y}
## end
#3211, 3:
q*E
## end
#3213, 3:
F_y
## end
#3216, 33:
J_{y}=q n_{0} v_{y}+q v_{0} n_{1}
## end
#3218, 26:
n_{1}=n_{0} k v_{x}/\omega
## end
#3220, 98:
J_{y}=q n_{0} \frac{q E}{\omega m_{y}}+q v_{0} n_{0} k \frac{q v_{0} k E}{\omega^{2} m_{x}}/\omega
## end
#3222, 95:
J_{y}=n_{0} \frac{q^{2} E}{\omega m_{y}}+n^{2} \beta_{0}^{2} n_{0} \frac{q^{2} E}{\omega m_{x}}
## end
#3223, 23:
J_y=q*n_0*v_y+q*v_0*n_1
## end
#3226, 20:
n_1=n_0*k*v_x/\omega
## end
#3229, 84:
J_y=q*n_0*\frac{q*E}{\omega*m_y}+q*v_0*n_0*k*\frac{q*v_0*k*E}{\omega^{2}*m_x}/\omega
## end
#3232, 16:
n_0*k*v_x/\omega
## end
#3234, 3:
n_1
## end
#3236, 22:
\frac{q*E}{\omega*m_y}
## end
#3238, 3:
v_y
## end
#3240, 75:
J_y=n_0*\frac{q^2*E}{\omega*m_y}+n^2*\beta_0^2*n_0*\frac{q^2*E}{\omega*m_x}
## end
#3244, 154:
J_{y}=n_{0} \frac{q^{2} E}{\omega m} \left(1-\beta_{0}^{2}\right)+n^{2} \beta_{0}^{2} n_{0} \frac{q^{2} E}{\omega m}\approx n_{0} \frac{q^{2} E}{\omega m}
## end
#3246, 108:
m_{2} \frac{\partial J_{y}}{\partial t}+m_{2} \vec{v_{0}} \left(\vec{\nabla}\cdot \vec{J_{1}}\right)=\vec{F}
## end
#3248, 183:
\left(-\mathbf{M}+\frac{n}{c} \mathbf{M} \left(\vec{v_{0}} \hat{k}\right)+\frac{n}{c} \left(\vec{v_{0}}\cdot \hat{k}\right) \mathbf{M}\right) \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#3250, 119:
\mathbf{T}=-\mathbf{M}+n \mathbf{M} \left(\vec{\beta} \hat{k}\right)+n \left(\vec{\beta}\cdot \hat{k}\right) \mathbf{M}
## end
#3251, 112:
J_y=n_0*\frac{q^2*E}{\omega*m}*(1-\beta_0^2)+n^2*\beta_0^2*n_0*\frac{q^2*E}{\omega*m}~n_0*\frac{q^2*E}{\omega*m}
## end
#3254, 66:
m_2*\p{t}{J_y}+m_2*\vec{v_0}*(\vec{\nabla}\cdot \vec{J_1})=\vec{F}
## end
#3257, 124:
(-\mat{M}+\frac{n}{c}*\mat{M}*(\vec{v_0}*\hat{k})+\frac{n}{c}*(\vec{v_0}\cdot \hat{k})*\mat{M})*\vec{j_1}=\vec{F}/(i*\omega)
## end
#3260, 85:
\mat{T}=-\mat{M}+n*\mat{M}*(\vec{\beta}*\hat{k})+n*(\vec{\beta}\cdot \hat{k})*\mat{M}
## end
#3264, 63:
\vec{\beta}=\begin{pmatrix}
v_{x}/c,&v_{y}/c,&0
\end{pmatrix}


## end
#3266, 47:
\hat{k}=\begin{pmatrix}
1,&0,&0
\end{pmatrix}


## end
#3268, 174:
\mathbf{M}=m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}


## end
#3270, 135:
\mathbf{T}=\mathbf{M} \left(n \left(\vec{\beta} \hat{k}\right)+\left(n \left(\vec{\beta}\cdot \hat{k}\right)-1\right) \mathbf{I}\right)
## end
#3271, 33:
\vec{\beta}=\vec{v_x/c, v_y/c, 0}
## end
#3274, 21:
\hat{k}=\vec{1, 0, 0}
## end
#3277, 129:
\mat{M}=m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}
## end
#3281, 200:
\mathbf{T}=\mathbf{M} \left(n \left(\begin{pmatrix}
\beta_{x}&0&0\\ \beta_{y}&0&0\\ 0&0&0
\end{pmatrix}

\right)+\left(n \beta_{x}-1\right) \begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

\right)
## end
#3283, 276:
\mathbf{T}=m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}

 \begin{pmatrix}
2 n \beta_{x}-1&0&0\\ n \beta_{y}&n \beta_{x}-1&0\\ 0&0&n \beta_{x}-1
\end{pmatrix}


## end
#3285, 484:
\mathbf{T}=m \begin{pmatrix}
\left(1+\gamma^{2} \beta_{x}^{2}\right) \left(2 n \beta_{x}-1\right)+\left(\gamma^{2} \beta_{x} \beta_{y}\right) \left(n \beta_{y}\right)&\left(\gamma^{2} \beta_{x} \beta_{y}\right) \left(n \beta_{x}-1\right)&0\\ \left(\gamma^{2} \beta_{y} \beta_{x}\right) \left(2 n \beta_{x}-1\right)+\left(1+\gamma^{2} \beta_{y}^{2}\right) \left(n \beta_{y}\right)&\left(1+\gamma^{2} \beta_{y}^{2}\right) \left(n \beta_{x}-1\right)&0\\ 0&0&n \beta_{x}-1
\end{pmatrix}


## end
#3287, 150:
\mathbf{T}=m \begin{pmatrix}
1&0&0\\ 0&1+\gamma^{2} \beta^{2}&0\\ 0&0&1
\end{pmatrix}

 \begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}


## end
#3289, 173:
\mathbf{T}=m \begin{pmatrix}
-1&0&0\\ \left(1+\gamma^{2} \beta^{2}\right) \left(n \beta\right)&\left(1+\gamma^{2} \beta^{2}\right) \left(-1\right)&0\\ 0&0&-1
\end{pmatrix}


## end
#3290, 82:
\mat{T}=\mat{M}*(n*(\vec{\beta}*\hat{k})+(n*(\vec{\beta}\cdot \hat{k})-1)*\mat{I})
## end
#3293, 95:
\mat{T}=\mat{M}*(n*(\mat{\beta_x,0,0;\beta_y,0,0;0,0,0})+(n*\beta_x-1)*\mat{1,0,0;0,1,0;0,0,1})
## end
#3297, 193:
\mat{T}=m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}*\mat{2*n*\beta_x-1,0,0;n*\beta_y,n*\beta_x-1,0;0,0,n*\beta_x-1}
## end
#3300, 21:
\vec{v_x/c, v_y/c, 0}
## end
#3302, 11:
\vec{\beta}
## end
#3304, 13:
\vec{1, 0, 0}
## end
#3306, 7:
\hat{k}
## end
#3308, 121:
m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}
## end
#3310, 7:
\mat{M}
## end
#3312, 287:
\mat{T}=m*\mat{(1+\gamma^{2}*\beta_x^{2})*(2*n*\beta_x-1)+(\gamma^{2}*\beta_x*\beta_y)*(n*\beta_y),(\gamma^{2}*\beta_x*\beta_y)*(n*\beta_x-1),0;(\gamma^{2}*\beta_y*\beta_x)*(2*n*\beta_x-1)+(1+\gamma^{2}*\beta_y^{2})*(n*\beta_y),(1+\gamma^{2}*\beta_y^{2})*(n*\beta_x-1),0;0,0,n*\beta_x-1}
## end
#3315, 87:
\mat{T}=m*\mat{1,0,0;0,1+\gamma^{2}*\beta^{2},0;0,0,1}*\mat{-1,0,0;n*\beta,-1,0;0,0,-1}
## end
#3318, 96:
\mat{T}=m*\mat{-1,0,0;(1+\gamma^{2}*\beta^{2})*(n*\beta),(1+\gamma^{2}*\beta^{2})*(-1),0;0,0,-1}
## end
#3322, 41:
\mathbf{R}=\mathbf{T_{2}}^{-1} \mathbf{T}
## end
#3324, 80:
\mathbf{T_{2}}^{-1}=\begin{pmatrix}
1&-n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#3326, 386:
\mathbf{R}=\begin{pmatrix}
m \left(-1\right)+\left(-n \beta\right) \left(m \left(1+\gamma^{2} \beta^{2}\right) \left(n \beta\right)\right)&\left(-n \beta\right) \left(m \left(1+\gamma^{2} \beta^{2}\right) \left(-1\right)\right)&0\\ m \left(1+\gamma^{2} \beta^{2}\right) \left(n \beta\right)&m \left(1+\gamma^{2} \beta^{2}\right) \left(-1\right)&0\\ 0&0&m \left(-1\right)
\end{pmatrix}


## end
#3328, 245:
\mathbf{R}=\begin{pmatrix}
-m-n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)&n \beta m \left(1+\gamma^{2} \beta^{2}\right)&0\\ n \beta m \left(1+\gamma^{2} \beta^{2}\right)&-m \left(1+\gamma^{2} \beta^{2}\right)&0\\ 0&0&-m
\end{pmatrix}


## end
#3329, 30:
\mat{R}=\mat{T_2}^{-1}*\mat{T}
## end
#3332, 45:
\mat{T_2}^{-1}=\mat{1,-n*\beta,0;0,1,0;0,0,1}
## end
#3335, 199:
\mat{R}=\mat{m*(-1)+(-n*\beta)*(m*(1+\gamma^{2}*\beta^{2})*(n*\beta)),(-n*\beta)*(m*(1+\gamma^{2}*\beta^{2})*(-1)),0;m*(1+\gamma^{2}*\beta^{2})*(n*\beta),m*(1+\gamma^{2}*\beta^{2})*(-1),0;0,0,m*(-1)}
## end
#3338, 88:
m*\mat{-1,0,0;(1+\gamma^{2}*\beta^{2})*(n*\beta),(1+\gamma^{2}*\beta^{2})*(-1),0;0,0,-1}
## end
#3340, 7:
\mat{T}
## end
#3342, 166:
\mat{R}=\mat{-m-n^2*\beta^2*m*(1+\gamma^{2}*\beta^{2}),n*\beta*m*(1+\gamma^{2}*\beta^{2}),0;
n*\beta*m*(1+\gamma^{2}*\beta^{2}),-m*(1+\gamma^{2}*\beta^{2}),0;
0,0,-m}
## end
#3346, 34:
\mathbf{A}=\mathbf{R}-M \mathbf{I}
## end
#3348, 251:
\mathbf{A}=\begin{pmatrix}
-m-n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)-M&n \beta m \left(1+\gamma^{2} \beta^{2}\right)&0\\ n \beta m \left(1+\gamma^{2} \beta^{2}\right)&-m \left(1+\gamma^{2} \beta^{2}\right)-M&0\\ 0&0&-m-M
\end{pmatrix}


## end
#3350, 281:
\left(-m \left(1+\gamma^{2} \beta^{2}\right)-M\right) \left(-m-M\right) \left(-m-n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)-M\right)-\left(n \beta m \left(1+\gamma^{2} \beta^{2}\right)\right) \left(-m-M\right) \left(n \beta m \left(1+\gamma^{2} \beta^{2}\right)\right)=0
## end
#3352, 192:
\left(m \left(1+\gamma^{2} \beta^{2}\right)+M\right) \left(m+n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)+M\right)-\left(n \beta m\right)^{2} \left(1+\gamma^{2} \beta^{2}\right)^{2}=0
## end
#3353, 25:
\mat{A}=\mat{R}-M*\mat{I}
## end
#3356, 174:
\mat{A}=\mat{-m-n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})-M,n*\beta*m*(1+\gamma^{2}*\beta^{2}),0;n*\beta*m*(1+\gamma^{2}*\beta^{2}),-m*(1+\gamma^{2}*\beta^{2})-M,0;0,0,-m-M}
## end
#3359, 158:
\mat{-m-n^2*\beta^2*m*(1+\gamma^{2}*\beta^{2}),n*\beta*m*(1+\gamma^{2}*\beta^{2}),0;
n*\beta*m*(1+\gamma^{2}*\beta^{2}),-m*(1+\gamma^{2}*\beta^{2}),0;
0,0,-m}
## end
#3361, 7:
\mat{R}
## end
#3363, 171:
(-m*(1+\gamma^{2}*\beta^{2})-M)*(-m-M)*(-m-n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})-M)-(n*\beta*m*(1+\gamma^{2}*\beta^{2}))*(-m-M)*(n*\beta*m*(1+\gamma^{2}*\beta^{2}))=0
## end
#3366, 166:
\mat{-m-n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})-M,n*\beta*m*(1+\gamma^{2}*\beta^{2}),0;n*\beta*m*(1+\gamma^{2}*\beta^{2}),-m*(1+\gamma^{2}*\beta^{2})-M,0;0,0,-m-M}
## end
#3368, 7:
\mat{A}
## end
#3370, 122:
(m*(1+\gamma^{2}*\beta^{2})+M)*(m+n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})+M)-(n*\beta*m)^2*(1+\gamma^{2}*\beta^{2})^2=0
## end
#3374, 303:
M^{2}+\left(m+n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)+m \left(1+\gamma^{2} \beta^{2}\right)\right) M+\left(m \left(1+\gamma^{2} \beta^{2}\right)\right) \left(m+n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)\right)-\left(n \beta m\right)^{2} \left(1+\gamma^{2} \beta^{2}\right)^{2}=0
## end
#3376, 158:
M^{2}+\left(m+n^{2} \beta^{2} m \left(1+\gamma^{2} \beta^{2}\right)+m \left(1+\gamma^{2} \beta^{2}\right)\right) M+m^{2} \left(1+\gamma^{2} \beta^{2}\right)=0
## end
#3378, 156:
M=\frac{-\left(m+n^{2} \beta^{2} m \gamma^{2}+m \gamma^{2}\right)+\sqrt{\left(m+n^{2} \beta^{2} m \gamma^{2}+m \gamma^{2}\right)^{2}-4 m^{2} \gamma^{2}}}{2}
## end
#3380, 144:
M=\frac{-\left(1+n^{2} \beta^{2} \gamma^{2}+\gamma^{2}\right)+\sqrt{\left(1+n^{2} \beta^{2} \gamma^{2}+\gamma^{2}\right)^{2}-4 \gamma^{2}}}{2} m
## end
#3381, 198:
M^2+(m+n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})+m*(1+\gamma^{2}*\beta^{2}))*M+(m*(1+\gamma^{2}*\beta^{2}))*(m+n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2}))-(n*\beta*m)^2*(1+\gamma^{2}*\beta^{2})^2=0
## end
#3384, 110:
M^2+(m+n^{2}*\beta^{2}*m*(1+\gamma^{2}*\beta^{2})+m*(1+\gamma^{2}*\beta^{2}))*M+m^2*(1+\gamma^{2}*\beta^{2})=0
## end
#3387, 134:
M=\frac{-(m+n^{2}*\beta^{2}*m*\gamma^{2}+m*\gamma^{2})+\sqrt{(m+n^{2}*\beta^{2}*m*\gamma^{2}+m*\gamma^{2})^{2}-4*m^{2}*\gamma^{2}}}{2}
## end
#3390, 122:
M=\frac{-(1+n^{2}*\beta^{2}*\gamma^{2}+\gamma^{2})+\sqrt{(1+n^{2}*\beta^{2}*\gamma^{2}+\gamma^{2})^{2}-4*\gamma^{2}}}{2}*m
## end
#3394, 67:
M\approx \frac{-2 \gamma^{2}+\sqrt{4 \gamma^{4}-4 \gamma^{2}}}{2} m
## end
#3396, 68:
M\approx \frac{-2 \gamma^{2}+2 \gamma^{2} \sqrt{1-\gamma^{-2}}}{2} m
## end
#3398, 58:
M\approx -\gamma^{2} \left(1-\sqrt{1-\gamma^{-2}}\right) m
## end
#3399, 60:
M~\frac{-2*\gamma^{2}+\sqrt{4*\gamma^{4}-4*\gamma^{2}}}{2}*m
## end
#3402, 61:
M~\frac{-2*\gamma^{2}+2*\gamma^{2}*\sqrt{1-\gamma^{-2}}}{2}*m
## end
#3405, 40:
M~-\gamma^{2}*(1-\sqrt{1-\gamma^{-2}})*m
## end
#3409, 266:
%{
+[M函数](,验证公式)
%}

physics_constant;

m=1;
gamma=linspace(1,2,1000);

M_1=gamma.^(2).*(1-sqrt(1-gamma.^(-2))).*m;
M_2=gamma.^(2).*(1+sqrt(1-gamma.^(-2))).*m;
M_m=(M_1+M_2)/2;

% plot(gamma,M_1,gamma,M_1.*M_2)
plot(gamma,M_1,gamma,M_1.*gamma)



%{
+[M函数](,验证公式)
%}
## end
#3412, 145:
\mathbf{R}=\begin{pmatrix}
-m-n^{2} \beta^{2} m \gamma^{2}&n \beta m \gamma^{2}&0\\ n \beta m \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3413, 112:
\mat{R}=\mat{-m-n^{2}*\beta^{2}*m*\gamma^{2},n*\beta*m*\gamma^{2},0;n*\beta*m*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3417, 123:
\mathbf{R}=\begin{pmatrix}
-m \gamma^{2}&\beta m \gamma^{2}&0\\ \beta m \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3419, 120:
\begin{pmatrix}
-m \gamma^{2}-M&\beta m \gamma^{2}&0\\ \beta m \gamma^{2}&-m \gamma^{2}-M&0\\ 0&0&-m-M
\end{pmatrix}

=0
## end
#3424, 90:
\mat{R}=\mat{-m*\gamma^{2},\beta*m*\gamma^{2},0;\beta*m*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3427, 90:
\mat{-m*\gamma^{2}-M,\beta*m*\gamma^{2},0;\beta*m*\gamma^{2},-m*\gamma^{2}-M,0;0,0,-m-M}=0
## end
#3430, 82:
\mat{-m*\gamma^{2},\beta*m*\gamma^{2},0;\beta*m*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3432, 7:
\mat{R}
## end
#3435, 51:
M\approx -\gamma^{2} m+\gamma m \sqrt{\gamma^{2}-1}
## end
#3437, 41:
M\approx -\gamma^{2} m+\gamma^{2} \beta m
## end
#3438, 44:
M~-\gamma^{2}*m+\gamma*m*\sqrt{\gamma^{2}-1}
## end
#3441, 32:
M~-\gamma^{2}*m+\gamma^2*\beta*m
## end
#3445, 218:
<!--
+[H函数](,求R的逆)
-->

%[1].
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].
%[8].


<!--
[8].:
式(3)转换为"表达式"
将式(4)记作为式(5)
将"\beta*m^2*\gamma^2=\beta"代入到式(5)
将"m^2*\gamma^2=1"代入到式(5)
将"[\mat{R}]=m"代入到式(5)

更新式(5)
+[H函数](,求R的逆)
-->
## end
#3447, 123:
\mathbf{R}=\begin{pmatrix}
-m \gamma^{2}&\beta m \gamma^{2}&0\\ \beta m \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3449, 27:
\mathbf{RR}=\mathbf{R}^{-1}
## end
#3451, 365:
\mathbf{RR}=\frac{1}{\left|\mathbf{R}\right|} \begin{pmatrix}
\left(-m \gamma^{2}\right) \left(-m\right)&-\left(\beta m \gamma^{2} \left(-m\right)\right)&0\\ -\left(\beta m \gamma^{2} \left(-m\right)\right)&\left(-m \gamma^{2}\right) \left(-m\right)&0\\ 0&0&\left(-m \gamma^{2}\right) \left(-m \gamma^{2}\right)-\beta m \gamma^{2} \beta m \gamma^{2}
\end{pmatrix}


## end
#3453, 186:
\mathbf{RR}=\frac{1}{\left|\mathbf{R}\right|} \begin{pmatrix}
m^{2} \gamma^{2}&\beta m^{2} \gamma^{2}&0\\ \beta m^{2} \gamma^{2}&m^{2} \gamma^{2}&0\\ 0&0&m^{2} \gamma^{2}
\end{pmatrix}


## end
#3454, 90:
\mat{R}=\mat{-m*\gamma^{2},\beta*m*\gamma^{2},0;\beta*m*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3457, 21:
\mat{RR}=\mat{R}^{-1}
## end
#3460, 208:
\mat{RR}=\frac{1}{[\mat{R}]}*\mat{(-m*\gamma^{2})*(-m),-(\beta*m*\gamma^{2}*(-m)),0;-(\beta*m*\gamma^{2}*(-m)),(-m*\gamma^{2})*(-m),0;0,0,(-m*\gamma^{2})*(-m*\gamma^{2})-\beta*m*\gamma^{2}*\beta*m*\gamma^{2}}
## end
#3463, 82:
\mat{-m*\gamma^{2},\beta*m*\gamma^{2},0;\beta*m*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3465, 7:
\mat{R}
## end
#3467, 131:
\mat{RR}=\frac{1}{[\mat{R}]}*\mat{m^2*\gamma^{2},\beta*m^2*\gamma^{2},0;
\beta*m^2*\gamma^{2},m^2*\gamma^{2},0;
0,0,m^2*\gamma^{2}}
## end
#3471, 85:
\mathbf{RR}=\frac{1}{m} \begin{pmatrix}
1&\beta&0\\ \beta&1&0\\ 0&0&1
\end{pmatrix}


## end
#3478, 52:
\mat{RR}=\frac{1}{m}*\mat{1,\beta,0;\beta,1,0;0,0,1}
## end
#3482, 477:
<!--
+[H函数](,快速猜测)
-->

<h2>Velocity gradient effect</h2>
Let's start from,
%[1].
%[2].

The \(v_x\) is,
%[3].
And
%[4].
%[5].
%[6].

The electrical conductivity is,
%[7].
And the real term is, 
%[8].
%[9].

The phase shift should be,
%[10].
%[11].
%[12].


<!--
[12].:
式(5)转换为"表达式"
将"\sigma=-n_e*\frac{q^2*n*\beta_0}{\omega^{2}*m}*\p{x}{v_y}"记作为式(7)
将"j_y=n_e*\frac{i*q^2*E}{\omega*m}"记作为式(9)
将"tan(\phi)=\frac{n*\beta_0}{\omega}*\p{x}{v_y}"记作为式(10)


更新式(5)
+[H函数](,快速猜测)
-->
## end
#3485, 90:
\vec{F}=q \left(\vec{E}+\vec{v_{0}}\times \left(\vec{k}\times \vec{E}\right)/\omega\right)
## end
#3487, 224:
\frac{\partial}{\partial t}\left(\vec{j_{1}}\right)+\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \vec{j_{1}}+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \vec{j_{1}}+\left(\vec{j_{1}}\cdot \vec{\nabla}\right) \vec{v_{0}}=\vec{F}
## end
#3489, 44:
v_{x}=\frac{i q v_{0} k E}{\omega^{2} m_{x}}
## end
#3491, 55:
-i \omega j_{y}=j_{x} \frac{\partial v_{y}}{\partial x}
## end
#3493, 96:
-i \omega j_{y}=q n_{e} \frac{i q v_{0} k E}{\omega^{2} m_{x}} \frac{\partial v_{y}}{\partial x}
## end
#3495, 87:
j_{y}=-n_{e} \frac{q^{2} v_{0} k}{\omega^{3} m_{x}} \frac{\partial v_{y}}{\partial x} E
## end
#3496, 66:
\vec{F}=q*(\vec{E}+\vec{v_0}\times (\vec{k}\times \vec{E})/\omega)
## end
#3499, 144:
\p{t}{\vec{j_1}}+(\vec{\nabla}\cdot \vec{v_0})*\vec{j_1}+(\vec{v_0}\cdot \vec{\nabla})*\vec{j_1}+(\vec{j_1}\cdot \vec{\nabla})*\vec{v_0}=\vec{F}
## end
#3502, 38:
v_x=\frac{i*q*v_0*k*E}{\omega^{2}*m_x}
## end
#3505, 28:
-i*\omega*j_y=j_x*\p{x}{v_y}
## end
#3508, 65:
-i*\omega*j_y=q*n_e*\frac{i*q*v_0*k*E}{\omega^{2}*m_x}*\p{x}{v_y}
## end
#3511, 34:
\frac{i*q*v_0*k*E}{\omega^{2}*m_x}
## end
#3513, 3:
v_x
## end
#3515, 54:
j_y=-n_e*\frac{q^2*v_0*k}{\omega^{3}*m_x}*\p{x}{v_y}*E
## end
#3519, 86:
\sigma=-n_{e} \frac{q^{2} n \beta_{0}}{\omega^{2} m} \frac{\partial v_{y}}{\partial x}
## end
#3521, 39:
-i \omega j_{y}=\frac{n_{e} q^{2} E}{m}
## end
#3523, 38:
j_{y}=n_{e} \frac{i q^{2} E}{\omega m}
## end
#3524, 57:
\sigma=-n_e*\frac{q^2*n*\beta_0}{\omega^{2}*m}*\p{x}{v_y}
## end
#3527, 33:
-i*\omega*j_y=\frac{n_e*q^2*E}{m}
## end
#3530, 32:
j_y=n_e*\frac{i*q^2*E}{\omega*m}
## end
#3534, 84:
tan \left( \phi \right)=\frac{n \beta_{0}}{\omega} \frac{\partial v_{y}}{\partial x}
## end
#3539, 45:
tan(\phi)=\frac{n*\beta_0}{\omega}*\p{x}{v_y}
## end
#3543, 443:
<!--
+[H函数](,完整方程)
-->

<h2>Drifting terms</h2>
%[1].
%[2].

The equivalent form is,
%[3].
And I would also like to suggest that,
%[4].
In our case, the drifting flow matrix should be,
%[5].

The complete equation is,
%[6].


<!--
[6].:
式(6)转换为"表达式"
将"(-\mat{M}+n*\mat{M}*(\vec{\beta_0}*\hat{k})+n*(\vec{\beta_0}\cdot \hat{k})*\mat{M}-i*\mat{M}*\mat{D}/\omega)*\vec{j_1}=\vec{F}/(i*\omega)"记作为式(6)


将"D_1=D_2"代入到式(4)
更新式(4)

+[H函数](,完整方程)
-->
## end
#3545, 150:
D_{1}=\left(\vec{\nabla}\cdot \vec{v_{0}}\right) \mathbf{M} \vec{j_{1}}+\left(\left(\mathbf{M} \vec{j_{1}}\right)\cdot \vec{\nabla}\right) \vec{v_{0}}
## end
#3547, 478:
\mathbf{D}=\begin{pmatrix}
\frac{\partial v_{x}}{\partial x}&\frac{\partial v_{x}}{\partial y}&\frac{\partial v_{x}}{\partial z}\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{y}}{\partial z}\\ \frac{\partial v_{z}}{\partial x}&\frac{\partial v_{z}}{\partial y}&\frac{\partial v_{z}}{\partial z}
\end{pmatrix}

+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}+\frac{\partial v_{z}}{\partial z}\right) \mathbf{I}
## end
#3549, 39:
D_{1}=\mathbf{D} \mathbf{M} \vec{j_{1}}
## end
#3551, 39:
D_{2}=\mathbf{M} \mathbf{D} \vec{j_{1}}
## end
#3553, 330:
\mathbf{D}=\begin{pmatrix}
2 \frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{x}}{\partial y}&0\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{x}}{\partial x}+2 \frac{\partial v_{y}}{\partial y}&0\\ 0&0&\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}
\end{pmatrix}


## end
#3555, 202:
\left(-\mathbf{M}+n \mathbf{M} \left(\vec{\beta_{0}} \hat{k}\right)+n \left(\vec{\beta_{0}}\cdot \hat{k}\right) \mathbf{M}-i \mathbf{M} \mathbf{D}/\omega\right) \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#3557, 101:
D_1=(\vec{\nabla}\cdot \vec{v_0})*\mat{M}*\vec{j_1}+((\mat{M}*\vec{j_1})\cdot \vec{\nabla})*\vec{v_0}
## end
#3560, 155:
\mat{D}=\mat{\p{x}{v_x},\p{y}{v_x},\p{z}{v_x};\p{x}{v_y},\p{y}{v_y},\p{z}{v_y};\p{x}{v_z},\p{y}{v_z},\p{z}{v_z}}+(\p{x}{v_x}+\p{y}{v_y}+\p{z}{v_z})*\mat{I}
## end
#3563, 29:
D_1=\mat{D}*\mat{M}*\vec{j_1}
## end
#3566, 29:
D_2=\mat{M}*\mat{D}*\vec{j_1}
## end
#3569, 113:
\mat{D}=\mat{2*\p{x}{v_x}+\p{y}{v_y},\p{y}{v_x},0;\p{x}{v_y},\p{x}{v_x}+2*\p{y}{v_y},0;0,0,\p{x}{v_x}+\p{y}{v_y}}
## end
#3572, 137:
(-\mat{M}+n*\mat{M}*(\vec{\beta_0}*\hat{k})+n*(\vec{\beta_0}\cdot \hat{k})*\mat{M}-i*\mat{M}*\mat{D}/\omega)*\vec{j_1}=\vec{F}/(i*\omega)
## end
#3576, 202:
\left(-\mathbf{M}+n \mathbf{M} \left(\vec{\beta_{0}} \hat{k}\right)+n \left(\vec{\beta_{0}}\cdot \hat{k}\right) \mathbf{M}-i \mathbf{M} \mathbf{D}/\omega\right) \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#3578, 163:
\mathbf{T}=\mathbf{M} \left(n \left(\vec{\beta_{0}} \hat{k}\right)+\left(n \left(\vec{\beta_{0}}\cdot \hat{k}\right)-1\right) \mathbf{I}-i \mathbf{D}/\omega\right)
## end
#3580, 317:
\mathbf{T}=m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}

 \left(\begin{pmatrix}
2 n \beta_{x}-1&0&0\\ n \beta_{y}&n \beta_{x}-1&0\\ 0&0&n \beta_{x}-1
\end{pmatrix}

-\frac{i}{\omega} \mathbf{D}\right)
## end
#3582, 410:
\mathbf{R}=\begin{pmatrix}
1&n \beta_{y}&0\\ 0&1-n \beta_{x}&0\\ 0&0&1-n \beta_{x}
\end{pmatrix}

^{-1} m \begin{pmatrix}
1+\gamma^{2} \beta_{x}^{2}&\gamma^{2} \beta_{x} \beta_{y}&0\\ \gamma^{2} \beta_{y} \beta_{x}&1+\gamma^{2} \beta_{y}^{2}&0\\ 0&0&1
\end{pmatrix}

 \left(\begin{pmatrix}
2 n \beta_{x}-1&0&0\\ n \beta_{y}&n \beta_{x}-1&0\\ 0&0&n \beta_{x}-1
\end{pmatrix}

-\frac{i}{\omega} \mathbf{D}\right)
## end
#3584, 244:
\mathbf{R}=\begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

^{-1} m \begin{pmatrix}
1&0&0\\ 0&\gamma^{2}&0\\ 0&0&1
\end{pmatrix}

 \left(\begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}

-\frac{i}{\omega} \mathbf{D}\right)
## end
#3585, 137:
(-\mat{M}+n*\mat{M}*(\vec{\beta_0}*\hat{k})+n*(\vec{\beta_0}\cdot \hat{k})*\mat{M}-i*\mat{M}*\mat{D}/\omega)*\vec{j_1}=\vec{F}/(i*\omega)
## end
#3588, 103:
\mat{T}=\mat{M}*(n*(\vec{\beta_0}*\hat{k})+(n*(\vec{\beta_0}\cdot \hat{k})-1)*\mat{I}-i*\mat{D}/\omega)
## end
#3591, 220:
\mat{T}=m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}*(\mat{2*n*\beta_x-1,0,0;n*\beta_y,n*\beta_x-1,0;0,0,n*\beta_x-1}-\frac{i}{\omega}*\mat{D})
## end
#3594, 277:
\mat{R}=\mat{1,n*\beta_y,0;0,1-n*\beta_x,0;0,0,1-n*\beta_x}^{-1}*m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}*(\mat{2*n*\beta_x-1,0,0;n*\beta_y,n*\beta_x-1,0;0,0,n*\beta_x-1}-\frac{i}{\omega}*\mat{D})
## end
#3597, 212:
m*\mat{1+\gamma^{2}*\beta_x^{2},\gamma^{2}*\beta_x*\beta_y,0;\gamma^{2}*\beta_y*\beta_x,1+\gamma^{2}*\beta_y^{2},0;0,0,1}*(\mat{2*n*\beta_x-1,0,0;n*\beta_y,n*\beta_x-1,0;0,0,n*\beta_x-1}-\frac{i}{\omega}*\mat{D})
## end
#3599, 7:
\mat{T}
## end
#3602, 212:
\mathbf{R}=\left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \left(\begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}

-\frac{i}{\omega} \mathbf{D}\right)
## end
#3604, 260:
\mathbf{R}=\left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \left(\begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}

-\frac{i}{\omega} \begin{pmatrix}
0&0&0\\ d_{21}&0&0\\ 0&0&0
\end{pmatrix}

\right)
## end
#3606, 208:
\mathbf{R}=\left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \left(\begin{pmatrix}
-1&0&0\\ n \beta-\frac{i}{\omega} d_{21}&-1&0\\ 0&0&-1
\end{pmatrix}

\right)
## end
#3607, 137:
\mat{R}=\mat{1,n*\beta,0;0,1,0;0,0,1}^{-1}*m*\mat{1,0,0;0,\gamma^{2},0;0,0,1}*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{D})
## end
#3610, 124:
\mat{R}=(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{D})
## end
#3614, 143:
\mat{R}=(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{0,0,0;d_21,0,0;0,0,0})
## end
#3617, 121:
\mat{R}=(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta-\frac{i}{\omega}*d_21,-1,0;0,0,-1})
## end
#3621, 219:
\mathbf{R}=\begin{pmatrix}
-m-n m \beta \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)&n m \beta \gamma^{2}&0\\ m \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3623, 205:
\mathbf{R}=\begin{pmatrix}
-m \gamma^{2}+m \beta \gamma^{2} \frac{i}{\omega} d_{21}&m \beta \gamma^{2}&0\\ m \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3625, 38:
\left|\mathbf{R}-M \mathbf{I}\right|=0
## end
#3627, 192:
\left(-m \gamma^{2}-M\right) \left(-m \gamma^{2}+m \beta \gamma^{2} \frac{i}{\omega} d_{21}-M\right)-m \beta \gamma^{2} \left(m \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)\right)=0
## end
#3629, 228:
M^{2}+\left(2 m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) M+\left(m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) m \gamma^{2}-\beta m^{2} \gamma^{4} \left(\beta-\frac{i}{\omega} d_{21}\right)=0
## end
#3630, 158:
\mat{R}=\mat{-m-n*m*\beta*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21),n*m*\beta*\gamma^{2},0;m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21),-m*\gamma^2,0;0,0,-m}
## end
#3633, 155:
\mat{R}=\mat{-m*\gamma^{2}+m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21,m*\beta*\gamma^{2},0;m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21),-m*\gamma^2,0;0,0,-m}
## end
#3637, 311:
\mathbf{R}=\left(\begin{pmatrix}
-m+\left(-n m \beta \gamma^{2}\right) \left(n \beta\right)&n m \beta \gamma^{2}&0\\ n m \beta \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}

\right)-\frac{i}{\omega} \left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \mathbf{D}
## end
#3639, 260:
\mathbf{R}=\left(\begin{pmatrix}
-m \gamma^{2}&m \beta \gamma^{2}&0\\ m \beta \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}

\right)-\frac{i}{\omega} \left(\begin{pmatrix}
m&-m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \mathbf{D}
## end
#3642, 201:
\mat{R}=(\mat{-m+(-n*m*\beta*\gamma^{2})*(n*\beta),n*m*\beta*\gamma^{2},0;n*m*\beta*\gamma^{2},-m*\gamma^{2},0;0,0,-m})-\frac{i}{\omega}*(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*\mat{D}
## end
#3645, 172:
\mat{R}=(\mat{-m*\gamma^{2},m*\beta*\gamma^{2},0;m*\beta*\gamma^{2},-m*\gamma^{2},0;0,0,-m})-\frac{i}{\omega}*(\mat{m,-m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*\mat{D}
## end
#3648, 21:
[\mat{R}-M*\mat{I}]=0
## end
#3651, 144:
(-m*\gamma^{2}-M)*(-m*\gamma^{2}+m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21-M)-m*\beta*\gamma^{2}*(m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21))=0
## end
#3655, 183:
M^2+(2*m*\gamma^2-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*M+(m*\gamma^{2}-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*m*\gamma^{2}-\beta*m^2*\gamma^{4}*(\beta-\frac{i}{\omega}*d_21)=0
## end
#3659, 148:
M^{2}+\left(2 m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) M+\left(m \gamma^{2}\right) m \gamma^{2}-\beta m^{2} \gamma^{4} \beta=0
## end
#3661, 97:
M^{2}+\left(2 m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) M+m^{2} \gamma^{2}=0
## end
#3663, 187:
M=\frac{-\left(2 m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right)\pm \sqrt{\left(2 m \gamma^{2}-m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right)^{2}-4 m^{2} \gamma^{2}}}{2}
## end
#3665, 173:
M=\frac{-2 m \gamma^{2} \left(1-\frac{i \beta d_{21}}{2 \omega}\right)\pm \sqrt{4 m^{2} \gamma^{4} \left(1-\frac{i \beta d_{21}}{2 \omega}\right)^{2}-4 m^{2} \gamma^{2}}}{2}
## end
#3666, 118:
M^2+(2*m*\gamma^2-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*M+(m*\gamma^{2})*m*\gamma^{2}-\beta*m^2*\gamma^{4}*\beta=0
## end
#3669, 78:
M^2+(2*m*\gamma^2-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*M+m^2*\gamma^{2}=0
## end
#3672, 149:
M=\frac{-(2*m*\gamma^2-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)+-\sqrt{(2*m*\gamma^2-m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)^2-4*m^2*\gamma^2}}{2}
## end
#3675, 133:
M=\frac{-2*m*\gamma^2*(1-\frac{i*\beta*d_21}{2*\omega})+-\sqrt{4*m^2*\gamma^4*(1-\frac{i*\beta*d_21}{2*\omega})^2-4*m^2*\gamma^2}}{2}
## end
#3679, 157:
M=-m \gamma^{2} \left(1-\frac{i \beta d_{21}}{2 \omega}\right)\pm \sqrt{m^{2} \gamma^{4} \left(1-\frac{i \beta d_{21}}{2 \omega}\right)^{2}-m^{2} \gamma^{2}}
## end
#3681, 148:
M=-m \gamma^{2} \left(\left(1-\frac{i \beta d_{21}}{2 \omega}\right)\mp \sqrt{\left(1-\frac{i \beta d_{21}}{2 \omega}\right)^{2}-\gamma^{-2}}\right)
## end
#3683, 27:
\mathbf{RR}=\mathbf{R}^{-1}
## end
#3684, 117:
M=-m*\gamma^2*(1-\frac{i*\beta*d_21}{2*\omega})+-\sqrt{m^2*\gamma^4*(1-\frac{i*\beta*d_21}{2*\omega})^2-m^2*\gamma^2}
## end
#3687, 105:
M=-m*\gamma^2*((1-\frac{i*\beta*d_21}{2*\omega})-+\sqrt{(1-\frac{i*\beta*d_21}{2*\omega})^2-\gamma^{-2}})
## end
#3691, 555:
\mathbf{RR}=\frac{1}{\left|\mathbf{M}\right|} \begin{pmatrix}
\left(-m \gamma^{2}\right) \left(-m\right)&-\left(m \beta \gamma^{2} \left(-m\right)\right)&0\\ -\left(\left(m \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)\right) \left(-m\right)\right)&\left(-m \gamma^{2}+m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) \left(-m\right)&0\\ 0&0&\left(-m \gamma^{2}+m \beta \gamma^{2} \frac{i}{\omega} d_{21}\right) \left(-m \gamma^{2}\right)-m \beta \gamma^{2} \left(m \gamma^{2} \left(n \beta-\frac{i}{\omega} d_{21}\right)\right)
\end{pmatrix}


## end
#3693, 67:
RR_{21}=m^{2} \gamma^{2} \left(\beta-\frac{i d_{21}}{\omega}\right)
## end
#3695, 69:
RR_{22}=\left(1-\beta \frac{i d_{21}}{\omega}\right) m^{2} \gamma^{2}
## end
#3696, 21:
\mat{RR}=\mat{R}^{-1}
## end
#3699, 346:
\mat{RR}=\frac{1}{[\mat{M}]}*\mat{(-m*\gamma^{2})*(-m),-(m*\beta*\gamma^{2}*(-m)),0;-((m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21))*(-m)),(-m*\gamma^{2}+m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*(-m),0;0,0,(-m*\gamma^{2}+m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21)*(-m*\gamma^{2})-m*\beta*\gamma^{2}*(m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21))}
## end
#3702, 147:
\mat{-m*\gamma^{2}+m*\beta*\gamma^{2}*\frac{i}{\omega}*d_21,m*\beta*\gamma^{2},0;m*\gamma^{2}*(n*\beta-\frac{i}{\omega}*d_21),-m*\gamma^2,0;0,0,-m}
## end
#3704, 7:
\mat{R}
## end
#3706, 50:
RR_21=m^2*\gamma^{2}*(\beta-\frac{i*d_21}{\omega})
## end
#3710, 135:
RR_{33}=\left(1-\beta \frac{i d_{21}}{\omega}\right) m^{2} \gamma^{4}-m^{2} \beta \gamma^{4} \left(\beta-\frac{i d_{21}}{\omega}\right)
## end
#3712, 24:
RR_{33}=m^{2} \gamma^{2}
## end
#3714, 140:
\mathbf{RR}=\frac{1}{-m} \begin{pmatrix}
1&\beta&0\\ \beta-\frac{i d_{21}}{\omega}&1-\beta \frac{i d_{21}}{\omega}&0\\ 0&0&1
\end{pmatrix}


## end
#3715, 50:
RR_22=(1-\beta*\frac{i*d_21}{\omega})*m^2*\gamma^2
## end
#3718, 103:
RR_33=(1-\beta*\frac{i*d_21}{\omega})*m^2*\gamma^{4}-m^2*\beta*\gamma^{4}*(\beta-\frac{i*d_21}{\omega})
## end
#3721, 20:
RR_33=m^2*\gamma^{2}
## end
#3724, 105:
\mat{RR}=\frac{1}{-m}*\mat{1,\beta,0;
\beta-\frac{i*d_21}{\omega},1-\beta*\frac{i*d_21}{\omega},0;
0,0,1}
## end
#3728, 680:
<!--
+[H函数](,d12项)
-->

<h2>Exmaple: \(d_{12}\ne 0\)</h2>
%[1].
%[2].
%[3].
%[4].
%[5].

Terms in the above matrix are,
%[6].
%[7].
%[8].
%[9].

<h3>Eigen modes</h3>
The eigen values can be calculated by,
%[10].
%[11].
%[12].
%[13].
%[14].

<h3>Reverse matrix</h3>
%[15].
%[16].
%[17].
%[18].
%[19].
%[20].
%[21].
%[22].



<!--
[22].:
式(16)转换为"表达式"
将"\mat{RR}=\mat{R}^{-1}"记作为式(15)
将式(15)记作为式(16)
将式(9)代入到式(16)
计算式(16)的'矩阵运算'

在式(16)中, 矩阵(1)的项(1,2)转换为"表达式"
将"R_12=m^2*(\beta*\gamma^{2}-\frac{i*d_12}{\omega})"记作为式(21)

将"\mat{RR}=\frac{1}{[\mat{M}]}*\mat{m^2*\gamma^{2},R_12,0;
m^2*\beta*\gamma^{2},m^2*\gamma^{2},0;
0,0,R_33}"记作为式(22)

将式(21)代入到式(22)


更新式(22)
+[H函数](,d12项)
-->
## end
#3730, 212:
\mathbf{R}=\left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \left(\begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}

-\frac{i}{\omega} \mathbf{D}\right)
## end
#3732, 69:
\mathbf{D}=\begin{pmatrix}
0&d_{12}&0\\ 0&0&0\\ 0&0&0
\end{pmatrix}


## end
#3734, 260:
\mathbf{R}=\left(\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

\right) \left(\begin{pmatrix}
-1&0&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}

-\frac{i}{\omega} \begin{pmatrix}
0&d_{12}&0\\ 0&0&0\\ 0&0&0
\end{pmatrix}

\right)
## end
#3736, 181:
\mathbf{R}=\begin{pmatrix}
m&-n m \beta \gamma^{2}&0\\ 0&m \gamma^{2}&0\\ 0&0&m
\end{pmatrix}

 \begin{pmatrix}
-1&-\frac{i}{\omega} d_{12}&0\\ n \beta&-1&0\\ 0&0&-1
\end{pmatrix}


## end
#3738, 365:
\mathbf{R}=\begin{pmatrix}
\left(m\right) \left(-1\right)+\left(-n m \beta \gamma^{2}\right) \left(n \beta\right)&\left(m\right) \left(-\frac{i}{\omega} d_{12}\right)+\left(-n m \beta \gamma^{2}\right) \left(-1\right)&0\\ \left(m \gamma^{2}\right) \left(n \beta\right)&\left(m \gamma^{2}\right) \left(-1\right)&0\\ 0&0&\left(m\right) \left(-1\right)
\end{pmatrix}


## end
#3740, 32:
R_{11}=-m-m \beta^{2} \gamma^{2}
## end
#3742, 124:
\mat{R}=(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{D})
## end
#3745, 34:
\mat{D}=\mat{0,d_12,0;0,0,0;0,0,0}
## end
#3748, 143:
\mat{R}=(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{0,d_12,0;0,0,0;0,0,0})
## end
#3751, 26:
\mat{0,d_12,0;0,0,0;0,0,0}
## end
#3753, 7:
\mat{D}
## end
#3755, 116:
\mat{R}=\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m}*\mat{-1,-\frac{i}{\omega}*d_12,0;n*\beta,-1,0;0,0,-1}
## end
#3758, 176:
\mat{R}=\mat{(m)*(-1)+(-n*m*\beta*\gamma^{2})*(n*\beta),(m)*(-\frac{i}{\omega}*d_12)+(-n*m*\beta*\gamma^{2})*(-1),0;(m*\gamma^{2})*(n*\beta),(m*\gamma^{2})*(-1),0;0,0,(m)*(-1)}
## end
#3762, 20:
R_{11}=-m \gamma^{2}
## end
#3764, 52:
R_{12}=-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}
## end
#3766, 150:
\mathbf{R}=\begin{pmatrix}
-m \gamma^{2}&-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}&0\\ m \beta \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3768, 38:
\left|\mathbf{R}-M \mathbf{I}\right|=0
## end
#3769, 28:
R_11=-m-m*\beta^2*\gamma^{2}
## end
#3772, 18:
R_11=-m*\gamma^{2}
## end
#3775, 48:
R_12=-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2}
## end
#3778, 115:
\mat{R}=\mat{-m*\gamma^{2},-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2},0;m*\beta*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3781, 13:
-m*\gamma^{2}
## end
#3783, 4:
R_11
## end
#3785, 43:
-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2}
## end
#3787, 4:
R_12
## end
#3789, 21:
[\mat{R}-M*\mat{I}]=0
## end
#3793, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#3794, 116:
(\mat{m,-n*m*\beta*\gamma^{2},0;0,m*\gamma^{2},0;0,0,m})*(\mat{-1,0,0;n*\beta,-1,0;0,0,-1}-\frac{i}{\omega}*\mat{D})
## end
#3795, 1:
A
## end
#3796, 210:
\left|\begin{pmatrix}
-m \gamma^{2}&-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}&0\\ m \beta \gamma^{2}&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}

-M \begin{pmatrix}
1&0&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}

\right|=0
## end
#3797, 137:
[\mat{-m*\gamma^{2},-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2},0;m*\beta*\gamma^{2},-m*\gamma^{2},0;0,0,-m}-M*\mat{1,0,0;0,1,0;0,0,1}]=0
## end
#3802, 5:
矩阵拆括号
## end
#3806, 4:
代入定义
## end
#3808, 6:
矩阵乘以系数
## end
#3810, 5:
思考下一步
## end
#3811, 1:
A
## end
#3824, 173:
\left(-m \gamma^{2}-M\right) \left(-m-M\right) \left(-m \gamma^{2}-M\right)-\left(-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}\right) \left(-m-M\right) m \beta \gamma^{2}=0
## end
#3826, 110:
\left(m \gamma^{2}+M\right)^{2}-\left(\beta \gamma^{2}-\frac{i d_{12}}{\omega}\right) m^{2} \beta \gamma^{2}=0
## end
#3828, 95:
M=-m \gamma^{2}\pm m \beta \gamma^{2} \sqrt{1-\frac{i}{\beta \gamma^{2}} \frac{d_{12}}{\omega}}
## end
#3830, 27:
\mathbf{RR}=\mathbf{R}^{-1}
## end
#3832, 445:
\mathbf{RR}=\frac{1}{\left|\mathbf{M}\right|} \begin{pmatrix}
\left(-m \gamma^{2}\right) \left(-m\right)&-\left(\left(-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}\right) \left(-m\right)\right)&0\\ -\left(m \beta \gamma^{2} \left(-m\right)\right)&\left(-m \gamma^{2}\right) \left(-m\right)&0\\ 0&0&\left(-m \gamma^{2}\right) \left(-m \gamma^{2}\right)-\left(-\frac{i d_{12}}{\omega} m+m \beta \gamma^{2}\right) m \beta \gamma^{2}
\end{pmatrix}


## end
#3834, 100:
R_{33}=m^{2} \gamma^{4}+\left(\frac{i d_{12}}{\omega} m-m \beta \gamma^{2}\right) m \beta \gamma^{2}
## end
#3835, 116:
(-m*\gamma^{2}-M)*(-m-M)*(-m*\gamma^{2}-M)-(-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2})*(-m-M)*m*\beta*\gamma^{2}=0
## end
#3838, 82:
(m*\gamma^{2}+M)^2-(\beta*\gamma^{2}-\frac{i*d_12}{\omega})*m^2*\beta*\gamma^{2}=0
## end
#3841, 85:
M=-m*\gamma^2+-m*\beta*\gamma^2*\sqrt{1-\frac{i}{\beta*\gamma^2}*\frac{d_12}{\omega}}
## end
#3844, 21:
\mat{RR}=\mat{R}^{-1}
## end
#3847, 262:
\mat{RR}=\frac{1}{[\mat{M}]}*\mat{(-m*\gamma^{2})*(-m),-((-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2})*(-m)),0;-(m*\beta*\gamma^{2}*(-m)),(-m*\gamma^{2})*(-m),0;0,0,(-m*\gamma^{2})*(-m*\gamma^{2})-(-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2})*m*\beta*\gamma^{2}}
## end
#3850, 107:
\mat{-m*\gamma^{2},-\frac{i*d_12}{\omega}*m+m*\beta*\gamma^{2},0;m*\beta*\gamma^{2},-m*\gamma^{2},0;0,0,-m}
## end
#3852, 7:
\mat{R}
## end
#3855, 70:
R_{33}=m^{2} \gamma^{2}+\frac{i d_{12}}{\omega} m^{2} \beta \gamma^{2}
## end
#3857, 68:
R_{33}=m^{2} \gamma^{2} \left(1+\frac{i d_{12}}{\omega} \beta\right)
## end
#3859, 66:
R_{12}=\left(m \beta \gamma^{2}-\frac{i d_{12}}{\omega} m\right) m
## end
#3861, 66:
R_{12}=m^{2} \left(\beta \gamma^{2}-\frac{i d_{12}}{\omega}\right)
## end
#3863, 268:
\mathbf{RR}=\frac{1}{\left|\mathbf{M}\right|} \begin{pmatrix}
m^{2} \gamma^{2}&m^{2} \left(\beta \gamma^{2}-\frac{i d_{12}}{\omega}\right)&0\\ m^{2} \beta \gamma^{2}&m^{2} \gamma^{2}&0\\ 0&0&m^{2} \gamma^{2} \left(1+\frac{i d_{12}}{\omega} \beta\right)
\end{pmatrix}


## end
#3864, 83:
R_33=m^2*\gamma^{4}+(\frac{i*d_12}{\omega}*m-m*\beta*\gamma^{2})*m*\beta*\gamma^{2}
## end
#3867, 62:
R_33=m^2*\gamma^{2}+\frac{i*d_12}{\omega}*m^2*\beta*\gamma^{2}
## end
#3870, 51:
R_33=m^2*\gamma^{2}*(1+\frac{i*d_12}{\omega}*\beta)
## end
#3873, 51:
R_12=(m*\beta*\gamma^{2}-\frac{i*d_12}{\omega}*m)*m
## end
#3876, 49:
R_12=m^2*(\beta*\gamma^{2}-\frac{i*d_12}{\omega})
## end
#3879, 195:
\mat{RR}=\frac{1}{[\mat{M}]}*\mat{m^{2}*\gamma^{2},m^{2}*(\beta*\gamma^{2}-\frac{i*d_12}{\omega}),0;m^{2}*\beta*\gamma^{2},m^{2}*\gamma^{2},0;0,0,m^{2}*\gamma^{2}*(1+\frac{i*d_12}{\omega}*\beta)}
## end
#3882, 46:
m^2*\gamma^{2}*(1+\frac{i*d_12}{\omega}*\beta)
## end
#3884, 4:
R_33
## end
#3886, 44:
m^2*(\beta*\gamma^{2}-\frac{i*d_12}{\omega})
## end
#3888, 4:
R_12
## end
#3891, 1428:
<!--
+[H函数](,均匀流体折射率)

测试排除x分量:...
纵波方程:...
(讨论了纵波修正)
(等离子体中的纵波不会传播, 其效力相当于修改了原有的响应系数)
斜入射问题:...
(这个讨论不靠谱)
+[新建阅读窗口](,测试排除x分量)
+[新建阅读窗口](,斜入射问题)

洛伦兹变换:...


在式(25)中, 矩阵(1)的项(2,2)转换为"表达式"
-->

<h2>Relativistic uniform flows</h2>
The flow equation is,
%[1].
%[2].
%[2.1].
%[2.2].
%[3].
The force is,
%[4].
%[5].

The wave equation is,
%[6].
(This equation is incorrect. The \(j_1\) is number current instead of charge current)
%[6.c].
(Above equation is corrected one)
%[6.1].
%[6.2].


<h2>Example</h2>
If the wave is propagating along x-axis and the flow is along y-axis, then,
%[7].
%[8].

Let's calculate T-matrices. Then \(T_1\) is,
%[9].
%[10].

\(T_2\) is,
%[11].
%[12].

\(T_3\) is, 
%[13].
%[14].

There are equations,
%[15].
%[16].
%[17].

Put them together, we will have,
%[18].
%[19].
%[20].
%[21].
%[22].
(It's incorrect. Notice that \(M=-m^3*\gamma^2\))
%[22.c].
<br>
<br>

%[23].
(It's incorrect. Notice that \(M=-m^3*\gamma^2\))
%[23.c].
<br>
<br>
%[24].
%[25].

Then,
%[26].
%[27].
%[28].
%[29].
%[30].
%[31].
%[32].
%[33].
%[34].
%[35].
(It's incorrect. Notice that \(M=-m^3*\gamma^2\))
%[36].
<br>
<br>
%[37].


<!--
[23.c].:
式(36)转换为"Matlab"
将式(35)记作为式(36)
将"\frac{\omega_p^2}{\omega^2}=-\frac{\omega_p^2}{\omega^2}"代入到式(36)
更新式(36)

将式(28)记作为式(29)
计算式(29)的'括号运算'
将"\frac{\omega_p^2}{\omega^2}/\gamma^2=\frac{\omega_p^2}{\omega^2}*(1-\beta^2)"代入到式(35)



验证公式:...
+[新建阅读窗口](,验证公式)
更新式(35)
+[H函数](,均匀流体折射率)
-->
## end
#3893, 191:
\frac{\partial}{\partial t}\left(\mathbf{M} \vec{j_{1}}\right)+\vec{p_{0}} \left(\vec{\nabla}\cdot \vec{j_{1}}\right)+\left(\vec{v_{0}}\cdot \vec{\nabla}\right) \mathbf{M} \vec{j_{1}}=\vec{F}
## end
#3895, 183:
\left(-\mathbf{M}+\frac{n}{c} \mathbf{M} \left(\vec{v_{0}} \hat{k}\right)+\frac{n}{c} \left(\vec{v_{0}}\cdot \hat{k}\right) \mathbf{M}\right) \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#3897, 90:
\mathbf{M}=\gamma m_{e} \left(\mathbf{I}+\gamma^{2} \vec{\beta_{0}} \vec{\beta_{0}}\right)
## end
#3899, 38:
\vec{F}=q n_{e} \mathbf{T_{2}} \vec{E}
## end
#3901, 123:
\mathbf{T_{2}}=\left(1-n \left(\hat{k}\cdot \vec{\beta_{0}}\right)\right) \mathbf{I}+n \left(\hat{k} \vec{\beta_{0}}\right)
## end
#3903, 124:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i \omega \mu_{0} \vec{j_{1}}
## end
#3904, 120:
\p{t}{\mat{M}*\vec{j_1}}+\vec{p_0}*(\vec{\nabla}\cdot \vec{j_1})+(\vec{v_0}\cdot \vec{\nabla})*\mat{M}*\vec{j_1}=\vec{F}
## end
#3907, 124:
(-\mat{M}+\frac{n}{c}*\mat{M}*(\vec{v_0}*\hat{k})+\frac{n}{c}*(\vec{v_0}\cdot \hat{k})*\mat{M})*\vec{j_1}=\vec{F}/(i*\omega)
## end
#3910, 67:
\mat{M}=\gamma*m_e*(\mat{I}+\gamma^{2}*\vec{\beta_0}*\vec{\beta_0})
## end
#3913, 31:
\vec{F}=q*n_e*\mat{T_2}*\vec{E}
## end
#3916, 78:
\mat{T_2}=(1-n*(\hat{k}\cdot \vec{\beta_0}))*\mat{I}+n*(\hat{k}*\vec{\beta_0})
## end
#3920, 131:
\mathbf{T_{1}}=-\mathbf{M}+n \mathbf{M} \left(\vec{\beta_{0}} \hat{k}\right)+n \left(\vec{\beta_{0}}\cdot \hat{k}\right) \mathbf{M}
## end
#3921, 91:
\mat{T_1}=-\mat{M}+n*\mat{M}*(\vec{\beta_0}*\hat{k})+n*(\vec{\beta_0}\cdot \hat{k})*\mat{M}
## end
#3925, 147:
\mathbf{T_{1}}=\mathbf{M} \left(\left(n \left(\vec{\beta_{0}}\cdot \hat{k}\right)-1\right) \mathbf{I}+n \left(\vec{\beta_{0}} \hat{k}\right)\right)
## end
#3926, 88:
\mat{T_1}=\mat{M}*((n*(\vec{\beta_0}\cdot \hat{k})-1)*\mat{I}+n*(\vec{\beta_0}*\hat{k}))
## end
#3929, 109:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*\omega*\mu_0*\vec{j_1}
## end
#3933, 126:
\vec{E}-n^{2} \vec{E}+n^{2} \left(\hat{k} \hat{k}\right)\cdot \vec{E}=\frac{1}{\epsilon_{0}} \vec{j_{1}}/\left(i \omega\right)
## end
#3934, 96:
\vec{E}-n^2*\vec{E}+n^2*(\hat{k}*\hat{k})\cdot \vec{E}=\frac{1}{\epsilon_0}*\vec{j_1}/(i*\omega)
## end
#3938, 81:
\mathbf{T_{3}}=\left(1-n^{2}\right) \mathbf{I}+n^{2} \left(\hat{k} \hat{k}\right)
## end
#3939, 47:
\mat{T_3}=(1-n^2)*\mat{I}+n^2*(\hat{k}*\hat{k})
## end
#3943, 59:
\vec{\beta_{0}}=\begin{pmatrix}
0,&\beta,&0
\end{pmatrix}


## end
#3945, 47:
\hat{k}=\begin{pmatrix}
1,&0,&0
\end{pmatrix}


## end
#3946, 31:
\vec{\beta_0}=\vec{0, \beta, 0}
## end
#3949, 21:
\hat{k}=\vec{1, 0, 0}
## end
#3953, 147:
\mathbf{T_{1}}=\mathbf{M} \left(\left(n \left(\vec{\beta_{0}}\cdot \hat{k}\right)-1\right) \mathbf{I}+n \left(\vec{\beta_{0}} \hat{k}\right)\right)
## end
#3954, 88:
\mat{T_1}=\mat{M}*((n*(\vec{\beta_0}\cdot \hat{k})-1)*\mat{I}+n*(\vec{\beta_0}*\hat{k}))
## end
#3958, 15:
\vec{0,\beta,0}
## end
#3959, 11:
\vec{1,0,0}
## end
#3960, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#3961, 59:
\gamma*m_e*(\mat{I}+\gamma^{2}*\vec{\beta_0}*\vec{\beta_0})
## end
#3962, 3:
T_1
## end
#3963, 101:
\mathbf{T_{1}}=\begin{pmatrix}
-m&0&0\\ m \gamma^{2} n \beta&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}


## end
#3964, 66:
\mat{T_1}=\mat{-m,0,0;m*\gamma^{2}*n*\beta,-m*\gamma^{2},0;0,0,-m}
## end
#3968, 15:
\vec{0,\beta,0}
## end
#3969, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#3970, 3:
T_1
## end
#3971, 123:
\mathbf{T_{2}}=\left(1-n \left(\hat{k}\cdot \vec{\beta_{0}}\right)\right) \mathbf{I}+n \left(\hat{k} \vec{\beta_{0}}\right)
## end
#3972, 78:
\mat{T_2}=(1-n*(\hat{k}\cdot \vec{\beta_0}))*\mat{I}+n*(\hat{k}*\vec{\beta_0})
## end
#3976, 3:
T_1
## end
#3977, 74:
\mathbf{T_{2}}=\begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#3978, 39:
\mat{T_2}=\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#3982, 3:
T_1
## end
#3983, 81:
\mathbf{T_{3}}=\left(1-n^{2}\right) \mathbf{I}+n^{2} \left(\hat{k} \hat{k}\right)
## end
#3984, 47:
\mat{T_3}=(1-n^2)*\mat{I}+n^2*(\hat{k}*\hat{k})
## end
#3988, 3:
T_1
## end
#3989, 80:
\mathbf{T_{3}}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}


## end
#3990, 45:
\mat{T_3}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}
## end
#3994, 3:
T_1
## end
#3995, 56:
\mathbf{T_{1}} \vec{j_{1}}=\vec{F}/\left(i \omega\right)
## end
#3996, 38:
\mat{T_1}*\vec{j_1}=\vec{F}/(i*\omega)
## end
#4000, 3:
T_1
## end
#4001, 38:
\vec{F}=q n_{e} \mathbf{T_{2}} \vec{E}
## end
#4002, 31:
\vec{F}=q*n_e*\mat{T_2}*\vec{E}
## end
#4006, 11:
\vec{1,0,0}
## end
#4007, 15:
\vec{0,\beta,0}
## end
#4008, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#4009, 3:
T_1
## end
#4010, 3:
T_1
## end
#4011, 3:
T_1
## end
#4012, 3:
T_1
## end
#4013, 23:
\mat{1,0,0;0,1,0;0,0,1}
## end
#4014, 13:
\vec{1, 0, 0}
## end
#4015, 3:
T_1
## end
#4016, 3:
T_1
## end
#4017, 3:
T_1
## end
#4018, 3:
T_1
## end
#4019, 3:
T_1
## end
#4020, 3:
T_3
## end
#4022, 79:
\mathbf{T_{3}} \vec{E}=\frac{1}{\epsilon_{0}} \vec{j_{1}}/\left(i \omega\right)
## end
#4024, 140:
\mathbf{T_{3}} \vec{E}=\frac{1}{\epsilon_{0}} \mathbf{T_{1}}^{-1} q n_{e} \mathbf{T_{2}} \vec{E}/\left(i \omega\right)/\left(i \omega\right)
## end
#4026, 107:
\mathbf{T_{3}} \vec{E}+\frac{q n_{e}}{\epsilon_{0} \omega^{2}} \mathbf{T_{1}}^{-1} \mathbf{T_{2}} \vec{E}=0
## end
#4028, 100:
\mathbf{T}=\mathbf{T_{3}}+\frac{q n_{e}}{\epsilon_{0} \omega^{2}} \mathbf{T_{1}}^{-1} \mathbf{T_{2}}
## end
#4029, 59:
\mat{T_3}*\vec{E}=\frac{1}{\epsilon_0}*\vec{j_1}/(i*\omega)
## end
#4032, 99:
\mat{T_3}*\vec{E}=\frac{1}{\epsilon_0}*\mat{T_1}^{-1}*q*n_e*\mat{T_2}*\vec{E}/(i*\omega)/(i*\omega)
## end
#4035, 18:
\vec{F}/(i*\omega)
## end
#4037, 19:
\mat{T_1}*\vec{j_1}
## end
#4039, 23:
q*n_e*\mat{T_2}*\vec{E}
## end
#4041, 7:
\vec{F}
## end
#4043, 86:
\mat{T_3}*\vec{E}+\frac{q*n_e}{\epsilon_0*\omega^2}*\mat{T_1}^{-1}*\mat{T_2}*\vec{E}=0
## end
#4046, 76:
\mat{T}=\mat{T_3}+\frac{q*n_e}{\epsilon_0*\omega^2}*\mat{T_1}^{-1}*\mat{T_2}
## end
#4049, 56:
\mat{-m,0,0;m*\gamma^{2}*n*\beta,-m*\gamma^{2},0;0,0,-m}
## end
#4050, 29:
\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4051, 35:
\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}
## end
#4052, 1:
T
## end
#4053, 268:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

+\frac{q n_{e}}{\epsilon_{0} \omega^{2}} \begin{pmatrix}
-m&0&0\\ m \gamma^{2} n \beta&-m \gamma^{2}&0\\ 0&0&-m
\end{pmatrix}

^{-1} \begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#4054, 171:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}+\frac{q*n_e}{\epsilon_0*\omega^{2}}*\mat{-m,0,0;m*\gamma^{2}*n*\beta,-m*\gamma^{2},0;0,0,-m}^{-1}*\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4058, 1:
T
## end
#4059, 300:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

+\frac{q n_{e}}{\epsilon_{0} \omega^{2}} \frac{1}{\mathbf{M}} \begin{pmatrix}
m \gamma^{2} m&0&0\\ m \gamma^{2} n \beta m&m m&0\\ 0&0&m m \gamma^{2}
\end{pmatrix}

 \begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#4060, 200:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}+\frac{q*n_e}{\epsilon_0*\omega^{2}}*\frac{1}{\mat{M}}*\mat{m*\gamma^{2}*m,0,0;m*\gamma^{2}*n*\beta*m,m*m,0;0,0,m*m*\gamma^{2}}*\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4065, 241:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

+\frac{\omega_{p}^{2}}{\omega^{2}} \begin{pmatrix}
1&0&0\\ n \beta&1/\gamma^{2}&0\\ 0&0&1
\end{pmatrix}

 \begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#4066, 143:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}+\frac{\omega_p^2}{\omega^{2}}*\mat{1,0,0;
n*\beta,1/\gamma^2,0;0,0,1}*\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4069, 1:
T
## end
#4070, 348:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

+\begin{pmatrix}
\frac{\omega_{p}^{2}}{\omega^{2}}&\frac{\omega_{p}^{2}}{\omega^{2}} n \beta&0\\ \frac{\omega_{p}^{2}}{\omega^{2}} n \beta&\frac{\omega_{p}^{2}}{\omega^{2}} \left(n \beta n \beta+1/\gamma^{2}\right)&0\\ 0&0&\frac{\omega_{p}^{2}}{\omega^{2}}
\end{pmatrix}


## end
#4071, 264:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}+\mat{\frac{\omega_p^{2}}{\omega^{2}},\frac{\omega_p^{2}}{\omega^{2}}*n*\beta,0;\frac{\omega_p^{2}}{\omega^{2}}*n*\beta,\frac{\omega_p^{2}}{\omega^{2}}*(n*\beta*n*\beta+1/\gamma^{2}),0;0,0,\frac{\omega_p^{2}}{\omega^{2}}}
## end
#4075, 1:
T
## end
#4076, 300:
\mathbf{T}=\begin{pmatrix}
1+\frac{\omega_{p}^{2}}{\omega^{2}}&\frac{\omega_{p}^{2}}{\omega^{2}} n \beta&0\\ \frac{\omega_{p}^{2}}{\omega^{2}} n \beta&1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} \left(n \beta n \beta+1/\gamma^{2}\right)&0\\ 0&0&1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}}
\end{pmatrix}


## end
#4077, 246:
\mat{T}=\mat{1+\frac{\omega_p^{2}}{\omega^{2}},\frac{\omega_p^{2}}{\omega^{2}}*n*\beta,0;\frac{\omega_p^{2}}{\omega^{2}}*n*\beta,1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*(n*\beta*n*\beta+1/\gamma^{2}),0;0,0,1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}}
## end
#4081, 3:
解方程
## end
#4082, 1:
T
## end
#4086, 25:
\left|\mathbf{T}\right|=0
## end
#4087, 11:
[\mat{T}]=0
## end
#4091, 341:
\left(1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} \left(n \beta n \beta+1/\gamma^{2}\right)\right) \left(1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)-\frac{\omega_{p}^{2}}{\omega^{2}} n \beta \left(1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}}\right) \frac{\omega_{p}^{2}}{\omega^{2}} n \beta=0
## end
#4093, 231:
\left(1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} \left(n \beta n \beta+1/\gamma^{2}\right)\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)-\frac{\omega_{p}^{2}}{\omega^{2}} n \beta \frac{\omega_{p}^{2}}{\omega^{2}} n \beta=0
## end
#4095, 250:
\left(1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} n \beta n \beta+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)-\frac{\omega_{p}^{2}}{\omega^{2}} n \beta \frac{\omega_{p}^{2}}{\omega^{2}} n \beta=0
## end
#4097, 251:
\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}+\left(\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2}-1\right) n^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)-\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2} n^{2}=0
## end
#4098, 274:
(1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*(n*\beta*n*\beta+1/\gamma^{2}))*(1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}})*(1+\frac{\omega_p^{2}}{\omega^{2}})-\frac{\omega_p^{2}}{\omega^{2}}*n*\beta*(1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}})*\frac{\omega_p^{2}}{\omega^{2}}*n*\beta=0
## end
#4101, 190:
(1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*(n*\beta*n*\beta+1/\gamma^{2}))*(1+\frac{\omega_p^{2}}{\omega^{2}})-\frac{\omega_p^{2}}{\omega^{2}}*n*\beta*\frac{\omega_p^{2}}{\omega^{2}}*n*\beta=0
## end
#4105, 218:
(1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*n*\beta*n*\beta+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2})*(1+\frac{\omega_p^{2}}{\omega^{2}})-\frac{\omega_p^{2}}{\omega^{2}}*n*\beta*\frac{\omega_p^{2}}{\omega^{2}}*n*\beta=0
## end
#4108, 180:
(1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2}+((\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2-1)*n^2)*(1+\frac{\omega_p^{2}}{\omega^{2}})-(\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2*n^2=0
## end
#4112, 300:
\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)+\left(\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2}-1\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right) n^{2}-\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2} n^{2}=0
## end
#4114, 269:
\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)+\left(\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2} \frac{\omega_{p}^{2}}{\omega^{2}}-\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)\right) n^{2}=0
## end
#4116, 224:
\left(\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)-\frac{\omega_{p}^{2}}{\omega^{2}}^{3} \beta^{2}\right) n^{2}=\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)
## end
#4117, 216:
(1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2})*(1+\frac{\omega_p^{2}}{\omega^{2}})+((\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2-1)*(1+\frac{\omega_p^{2}}{\omega^{2}})*n^2-(\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2*n^2=0
## end
#4120, 200:
(1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2})*(1+\frac{\omega_p^{2}}{\omega^{2}})+((\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2*\frac{\omega_p^{2}}{\omega^{2}}-(1+\frac{\omega_p^{2}}{\omega^{2}}))*n^2=0
## end
#4123, 166:
((1+\frac{\omega_p^{2}}{\omega^{2}})-\frac{\omega_p^{2}}{\omega^{2}}^3*\beta^2)*n^2=(1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2})*(1+\frac{\omega_p^{2}}{\omega^{2}})
## end
#4127, 235:
\left(1+\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2}\right)\right) n^{2}=\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right)
## end
#4129, 249:
n^{2}=\left(1+\frac{\omega_{p}^{2}}{\omega^{2}}\right) \left(1+\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\beta^{2}\right)\right)/\left(1+\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\left(\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2}\right)\right)
## end
#4131, 250:
n^{2}=\left(1-\frac{\omega_{p}^{2}}{\omega^{2}}\right) \left(1-\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\beta^{2}\right)\right)/\left(1-\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\left(-\frac{\omega_{p}^{2}}{\omega^{2}} \beta\right)^{2}\right)\right)
## end
#4134, 168:
(1+\frac{\omega_p^{2}}{\omega^{2}}*(1-(\frac{\omega_p^{2}}{\omega^{2}}*\beta)^2))*n^2=(1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2})*(1+\frac{\omega_p^{2}}{\omega^{2}})
## end
#4137, 175:
n^{2}=(1+\frac{\omega_p^{2}}{\omega^{2}})*(1+\frac{\omega_p^{2}}{\omega^{2}}*(1-\beta^{2}))/(1+\frac{\omega_p^{2}}{\omega^{2}}*(1-(\frac{\omega_p^{2}}{\omega^{2}}*\beta)^{2}))
## end
#4141, 126:
\frac{\omega^{2}}{c^{2}} \vec{E}-\vec{k}^{2} \vec{E}+\left(\vec{k} \vec{k}\right)\cdot \vec{E}=-i q \omega \mu_{0} \vec{j_{1}}
## end
#4142, 111:
\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=-i*q*\omega*\mu_0*\vec{j_1}
## end
#4148, 304:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

+\frac{q^{2} n_{e}}{\epsilon_{0} \omega^{2}} \frac{1}{\mathbf{M}} \begin{pmatrix}
m \gamma^{2} m&0&0\\ m \gamma^{2} n \beta m&m m&0\\ 0&0&m m \gamma^{2}
\end{pmatrix}

 \begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#4150, 241:
\mathbf{T}=\begin{pmatrix}
1&0&0\\ 0&1-n^{2}&0\\ 0&0&1-n^{2}
\end{pmatrix}

-\frac{\omega_{p}^{2}}{\omega^{2}} \begin{pmatrix}
1&0&0\\ n \beta&1/\gamma^{2}&0\\ 0&0&1
\end{pmatrix}

 \begin{pmatrix}
1&n \beta&0\\ 0&1&0\\ 0&0&1
\end{pmatrix}


## end
#4151, 204:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}+\frac{q^{2}*n_e}{\epsilon_0*\omega^{2}}*\frac{1}{\mat{M}}*\mat{m*\gamma^{2}*m,0,0;m*\gamma^{2}*n*\beta*m,m*m,0;0,0,m*m*\gamma^{2}}*\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4154, 146:
\mat{T}=\mat{1,0,0;0,1-n^{2},0;0,0,1-n^{2}}-\frac{\omega_p^{2}}{\omega^{2}}*\mat{1,0,0;n*\beta,1/\gamma^{2},0;0,0,1}*\mat{1,n*\beta,0;0,1,0;0,0,1}
## end
#4157, 176:
n^{2}=(1-\frac{\omega_p^{2}}{\omega^{2}})*(1-\frac{\omega_p^{2}}{\omega^{2}}*(1-\beta^{2}))/(1-\frac{\omega_p^{2}}{\omega^{2}}*(1-(-\frac{\omega_p^{2}}{\omega^{2}}*\beta)^{2}))
## end
#4161, 810:
%{
+[M函数](,验证公式)

一维分布:...
二维分布:...

模拟场景:...
对比折射率:...
电流特征:...
+[新建阅读窗口](,模拟场景)
+[新建阅读窗口](,对比折射率)
+[新建阅读窗口](,电流特征)
%}


physics_constant;

lm_0=800e-9;
n_e=30e25;


omega=2*pi*c/lm_0;

% omega_p=0.8;
% beta=linspace(0,1,100);
beta=linspace(0,1,1000);

gamma=1./sqrt(1-beta.^2);
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma.^2);



% A=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2).*(1-(-(omega_p.^2)./(omega.^2).*beta).^2));
% A_2=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2));

A=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1+(omega_p.^2)./(omega.^2).*beta.^2);
A_2=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2));
A_3=(1-(omega_p.^2)./(omega.^2));

plot(beta,A,beta,A_2,'--',beta,A_3,'--')
% xlabel('\omega_p')
% ylabel('\beta')


%{
omega_p/omega
+[M函数](,验证公式)
%}
## end
#4163, 360:
%{
+[M函数](,验证公式)

二维分布:...
%}


omega=1;

w_p=linspace(0,1,101);
b=linspace(0,1,100);
[omega_p,beta]=meshgrid(w_p,b);

A=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2).*(1-(-(omega_p.^2)./(omega.^2).*beta).^2));

% surf(w_p,b,A)
% shading interp
contourf(w_p,b,A,20)
view([0,90])
xlabel('\omega_p')
ylabel('\beta')


%{
+[M函数](,验证公式)
%}
## end
#4165, 400:
%{
+[M函数](,验证公式)

二维分布:...
一维分布:...
%}


omega=1;

omega_p=0.8;
% beta=linspace(0,1,100);
beta=linspace(0,0.5,1000);

A=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2).*(1-(-(omega_p.^2)./(omega.^2).*beta).^2));
A_2=(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2));

plot(beta,A,beta,A_2,'--')
% xlabel('\omega_p')
% ylabel('\beta')


%{
+[M函数](,验证公式)
%}
## end
#4167, 610:
运行指令"cp -r /home/xiantao/Documents/sim_output/sim_folder_smilei /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
地址::/home/xiantao/Documents/sim_output/Smilei_out/UF_1D
状态::本地
状态::


模拟代码:...
+[删除结构](,模拟代码)->+[召唤星辰]"生成Smilei代码"(模拟场景,模拟代码)...
    ->+[.]"1D"(+[召唤星辰],)
+[新建阅读窗口](,模拟代码)

参考波长::800e-9
有模拟空间和窗口
有电子和探测光

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"500"


模拟空间和窗口都是长方形(200e-6,100e-6)
模拟空间的格点尺寸是"1e-8,1e-7,1e-7"

有正电子和电子
电子的数密度是"0.5e25"
电子的速度是"-0.3,0.4,0"
正电子的电荷是"1"

探测光的波长是"800e-9"
探测光的展宽是"inf"
探测光的a0是"0.001"
探测光的偏振态是"1,1"
探测光有什么

模拟动画:...
+[召唤星辰]"生成PIC一维动画"(模拟场景,模拟动画)->+[M函数](,模拟动画)


## end
#4169, 6:
800e-9
## end
#4178, 36:
-5e-05, 5e-05, 5e-05, -5e-05, -5e-05
## end
#4180, 29:
0.0, 0.0, 0.0002, 0.0002, 0.0
## end
#4182, 8:
0.0, 0.0
## end
#4184, 6:
0.0002
## end
#4186, 6:
0.0001
## end
#4188, 3:
多边形
## end
#4189, 3:
长方形
## end
#4191, 36:
-5e-05, 5e-05, 5e-05, -5e-05, -5e-05
## end
#4193, 29:
0.0, 0.0, 0.0002, 0.0002, 0.0
## end
#4195, 8:
0.0, 0.0
## end
#4197, 6:
0.0002
## end
#4199, 6:
0.0001
## end
#4201, 3:
多边形
## end
#4202, 3:
长方形
## end
#4205, 6:
0.5e25
## end
#4207, 10:
-0.3,0.4,0
## end
#4209, 6:
800e-9
## end
#4211, 3:
inf
## end
#4213, 5:
0.001
## end
#4215, 3:
1,1
## end
#4217, 1407:
%{
+[M函数](,模拟动画)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=0*c;
t0=0;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=0.0001;
L1=0.0001;
W0=0.0002;
W1=0.0002;

DW=0.0002-0.0002;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;
x=linspace(pt0(1),pt0(1)+W0,10000);

omega_light_1=2*pi*c/800e-9;
focus_light_1=[0,0];

if isnan(nan)
    init_light_1=0;
else
    init_light_1=focus_light_1(1)-nan;
end

% Continus beam
f_light_1=@(t)cos(t*omega_light_1).*(sign(-t)+1)/2;

%代码
edge_plasma_1=0;
left_edge=edge_plasma_1*3;
right_edge=W0-edge_plasma_1*3;

n_plasma_1=ones(size(x));
z=x;
n_plasma_1(z<left_edge)=exp(-(z(z<left_edge)-left_edge).^2/edge_plasma_1^2);
n_plasma_1(z>right_edge)=exp(-(z(z>right_edge)-right_edge).^2/edge_plasma_1^2);



clf
hold on

axis([pt0(1),pt0(1)+W0,0,1.2])


y=f_light_1((x-init_light_1)/c);
y=real(y)/max(abs(y))*0.4+0.6;
h_light_1=plot(x,y);
patch([x,x(1)],[n_plasma_1,n_plasma_1(1)],[0,0,1],'faceAlpha',0.1)
plot(x,n_plasma_1,'b','lineWidth',2)


for i=1:length(t)

if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end

axis([pt0(1)+x1,pt0(1)+x1+W1,0,1.2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

x_t=x-init_light_1-t(i)*c;
y=f_light_1(x_t/c);
y=real(y)/max(abs(y))*0.4+0.6;
h_light_1.YData=y;


title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end


%{
+[M函数](,模拟动画)
%}
## end
#4219, 2:
本地
## end
#4221, 51:
/home/xiantao/Documents/sim_output/Smilei_out/UF_1D
## end
#4223, 52:

run:...
info:...
myscript:...

+[保存文本](,myscript)


## end
#4225, 14:
1e-8,1e-7,1e-7
## end
#4227, 1086:
%{
+[M函数](,对比折射率)

分离测试:...
显示分布:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=20e25;
beta=0.9;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,对比折射率)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Ey';
[x0,Ey0]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x0,Ez0]=read_data_1D_Smilei_h5(filename_0,ti,field);

x1=20e-6;
x2=170e-6;
x=x0(x0<x2 & x0>x1);
Ey=Ey0(x0<x2 & x0>x1);
Ez=Ez0(x0<x2 & x0>x1);

lm_y=periodic_self_fitting(x,Ey,40,180,1);
lm_z=periodic_self_fitting(x,Ez,40,180,1);

n_y=lm_0/lm_y
n_z=lm_0/lm_z

% n_y_1=sqrt((1-(omega_p.^2)./(omega.^2)).*(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2).*(1-(-(omega_p.^2)./(omega.^2).*beta).^2)))
n_y_1=sqrt((1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1+(omega_p.^2)./(omega.^2).*beta.^2))
n_z_1=sqrt((1-(omega_p.^2)./(omega.^2)))


%{
sprintf("%.6e",n_z)
sprintf("%.6e",n_y)
sprintf("%.6e",n_z_1)
sprintf("%.6e",n_y_1)
+[M函数](,对比折射率)
%}
## end
#4232, 3:
500
## end
#4234, 30:
Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho
## end
#4242, 1:
1
## end
#4244, 894:
%{
+[M函数](,电流特征)

基本关系(html):...
+[新建阅读窗口](,基本关系)

确认jx和rho:...
确认Bz和Ey:...
确认Ey和jx:...
确认jx和rho和Ex:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=2e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,电流特征)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Jx';
[x,Jx]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ex';
[x,Ex]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Bz';
[x,Bz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);

plot(x,Rho/epsilon_0*e,x,Ex*omega/c)
% plot(x,Jx,x,Ex*omega*epsilon_0)


%{
+[M函数](,电流特征)
%}
## end
#4246, 470:
<!--
+[H函数](,基本关系)
式(10)转换为"表达式"
-->

<h2>Flow equation</h2>
%[1].
%[2].
%[3].

<h2>Lorentz force</h2>
%[4].
%[5].
%[6].
%[7].
%[8].

<h2>Laser field</h2>
%[9].
%[10].
%[11].
%[12].
%[13].
(Here \(j_x\) is number currents)
%[13.1].
(Here \(j_x\) is charge currents)


<h2>MW1 and MW4</h2>
%[14].
%[15].
%[16].
%[17].
%[18].
(Here \(j_x\) is charge currents)


<!--
[13.1].:
式(13)转换为"表达式"
将"j_x~-\frac{\beta*n_e*q^2}{i*\omega*m}*E_y"记作为式(13.1)


更新式(13)
+[H函数](,基本关系)
-->
## end
#4248, 60:
\frac{\partial \rho}{\partial t}+\vec{\nabla}\cdot \vec{j}=0
## end
#4250, 21:
\omega \rho-k j_{x}=0
## end
#4252, 19:
\rho=k j_{x}/\omega
## end
#4254, 31:
\vec{F}=q \vec{v}\times \vec{B}
## end
#4256, 19:
F_{x}=q v_{y} B_{z}
## end
#4257, 39:
\p{t}{\rho}+\vec{\nabla}\cdot \vec{j}=0
## end
#4260, 19:
\omega*\rho-k*j_x=0
## end
#4263, 17:
\rho=k*j_x/\omega
## end
#4267, 595:
%{
+[M函数](,电流特征)

基本关系(html):...

确认jx和rho:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=2e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,电流特征)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Jx';
[x,Jx]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);

plot(x,Jx/c,x,Rho*e)


%{
+[M函数](,电流特征)
%}
## end
#4269, 61:
\vec{F} n_{e}=\frac{\partial}{\partial t}\left(\vec{j}\right)
## end
#4271, 27:
F_{x} n_{e}=-i \omega j_{x}
## end
#4273, 43:
j_{x}=-\frac{v_{y} n_{e} q}{i \omega} B_{z}
## end
#4275, 75:
\vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t}\left(\vec{B}\right)
## end
#4277, 36:
\vec{k}\times \vec{E}=\omega \vec{B}
## end
#4279, 31:
\vec{F}=q*\vec{v}\times \vec{B}
## end
#4282, 13:
F_x=q*v_y*B_z
## end
#4285, 26:
\vec{F}*n_e=\p{t}{\vec{j}}
## end
#4288, 21:
F_x*n_e=-i*\omega*j_x
## end
#4291, 35:
j_x=-\frac{v_y*n_e*q}{i*\omega}*B_z
## end
#4294, 42:
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}}
## end
#4297, 36:
\vec{k}\times \vec{E}=\omega*\vec{B}
## end
#4301, 20:
B_{z}=k E_{y}/\omega
## end
#4302, 16:
B_z=k*E_y/\omega
## end
#4306, 52:
j_{x}=-\frac{v_{y} n_{e} q}{i \omega} k E_{y}/\omega
## end
#4308, 50:
j_{x}\approx -\frac{\beta n_{e} q}{i \omega} E_{y}
## end
#4310, 43:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}
## end
#4311, 44:
j_x=-\frac{v_y*n_e*q}{i*\omega}*k*E_y/\omega
## end
#4314, 12:
k*E_y/\omega
## end
#4316, 3:
B_z
## end
#4318, 37:
j_x~-\frac{\beta*n_e*q}{i*\omega}*E_y
## end
#4322, 785:
%{
+[M函数](,电流特征)

基本关系(html):...
+[新建阅读窗口](,基本关系)

确认jx和rho:...
确认Bz和Ey:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=2e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,电流特征)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Jx';
[x,Jx]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Bz';
[x,Bz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);

% plot(x,Jx,x,Ey*beta*n_e/omega*e)
plot(x,Bz,x,Ey/c)



%{
+[M函数](,电流特征)
%}
## end
#4324, 741:
%{
+[M函数](,确认Ey和jx)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=1e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,电流特征)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Jx';
[x,Jx]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Bz';
[x,Bz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);

plot(x,Jx,x,Ey*beta*n_e/omega*e^2/m_e/gamma)
% plot(x,Bz,x,Ey/c)



%{
+[M函数](,电流特征)
%}
## end
#4326, 257:
<!--
+[H函数](,测试排除x分量)
-->


%[1].
%[2].
%[3].
%[4].
%[5].
%[6].


<!--
[6].:
式(5)转换为"Matlab"
将"n^{2}=\frac{1-\frac{\omega_p^{2}}{\omega^{2}}*(1-\beta^2)}{1+\frac{\omega_p^{2}}{\omega^{2}}*\beta^{2}}"记作为式(5)


重新思考式(1)的变量"n"
描述解题思路
执行操作

+[H函数](,测试排除x分量)
-->
## end
#4329, 85:
1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} \left(n \beta n \beta+1/\gamma^{2}\right)=0
## end
#4330, 72:
1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*(n*\beta*n*\beta+1/\gamma^{2})=0
## end
#4334, 1:
n
## end
#4335, 104:
1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} n \beta n \beta+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}=0
## end
#4336, 100:
1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*n*\beta*n*\beta+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2}=0
## end
#4340, 1:
n
## end
#4341, 104:
1-n^{2}+\frac{\omega_{p}^{2}}{\omega^{2}} n^{2} \beta^{2}+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}=0
## end
#4342, 100:
1-n^{2}+\frac{\omega_p^{2}}{\omega^{2}}*n^{2}*\beta^{2}+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2}=0
## end
#4346, 3:
解方程
## end
#4347, 1:
n
## end
#4351, 111:
\left(1-\frac{\omega_{p}^{2}}{\omega^{2}} \beta^{2}\right) n^{2}=1+\frac{\omega_{p}^{2}}{\omega^{2}}/\gamma^{2}
## end
#4353, 120:
n^{2}=\frac{1-\frac{\omega_{p}^{2}}{\omega^{2}} \left(1-\beta^{2}\right)}{1+\frac{\omega_{p}^{2}}{\omega^{2}} \beta^{2}}
## end
#4356, 96:
(1-\frac{\omega_p^{2}}{\omega^{2}}*\beta^{2})*n^{2}=1+\frac{\omega_p^{2}}{\omega^{2}}/\gamma^{2}
## end
#4359, 103:
n^{2}=\frac{1-\frac{\omega_p^{2}}{\omega^{2}}*(1-\beta^2)}{1+\frac{\omega_p^{2}}{\omega^{2}}*\beta^{2}}
## end
#4363, 1153:
%{
+[M函数](,对比折射率)

分离测试:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=2e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,分离测试)
%}
filename_1="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields1.h5";
filename_2="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields2.h5";
ti=20000;
field='Ey';
[x0,Ey0]=read_data_1D_Smilei_h5(filename_1,ti,field);
field='Ez';
[x0,Ez0]=read_data_1D_Smilei_h5(filename_2,ti,field);

x1=20e-6;
x2=170e-6;
x=x0(x0<x2 & x0>x1);
Ey=Ey0(x0<x2 & x0>x1);
Ez=Ez0(x0<x2 & x0>x1);

lm_y=periodic_self_fitting(x,Ey,40,180,1);
lm_z=periodic_self_fitting(x,Ez,40,180,1);

n_y=lm_0/lm_y
n_z=lm_0/lm_z

% n_y_1=sqrt((1-(omega_p.^2)./(omega.^2)).*(1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1-(omega_p.^2)./(omega.^2).*(1-(-(omega_p.^2)./(omega.^2).*beta).^2)))
n_y_1=sqrt((1-(omega_p.^2)./(omega.^2).*(1-beta.^2))./(1+(omega_p.^2)./(omega.^2).*beta.^2))
n_z_1=sqrt((1-(omega_p.^2)./(omega.^2)))


%{
sprintf("%.6e",n_z)
sprintf("%.6e",n_y)
sprintf("%.6e",n_z_1)
sprintf("%.6e",n_y_1)
+[M函数](,对比折射率)
%}
## end
#4365, 505:
%{
+[M函数](,显示分布)
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=20e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,显示分布)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Ey';
[x0,Ey0]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ez';
[x0,Ez0]=read_data_1D_Smilei_h5(filename_0,ti,field);


plot(x0,Ey0,x0,-Ez0)


%{
+[M函数](,显示分布)
%}
## end
#4367, 40:
i \vec{k}\cdot \vec{E}=\rho/\epsilon_{0}
## end
#4369, 111:
\vec{\nabla}\times \vec{B}=\mu_{0} \vec{J}+\mu_{0} \epsilon_{0} \frac{\partial}{\partial t}\left(\vec{E}\right)
## end
#4371, 55:
\mu_{0} \vec{J}-i \omega \mu_{0} \epsilon_{0} \vec{E}=0
## end
#4373, 33:
j_{x}=i \omega \epsilon_{0} E_{x}
## end
#4374, 41:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0
## end
#4377, 38:
i*\vec{k}\cdot \vec{E}=\rho/\epsilon_0
## end
#4380, 72:
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}
## end
#4383, 49:
\mu_0*\vec{J}-i*\omega*\mu_0*\epsilon_0*\vec{E}=0
## end
#4386, 27:
j_x=i*\omega*\epsilon_0*E_x
## end
#4390, 894:
%{
+[M函数](,电流特征)

基本关系(html):...
+[新建阅读窗口](,基本关系)

确认jx和rho:...
确认Bz和Ey:...
确认Ey和jx:...
确认jx和rho和Ex:...
%}

physics_constant;
addpath('Matlab/readData');
addpath('Matlab/fitting');

lm_0=1200e-9;
n_e=2e25;
beta=0.5;

gamma=1./sqrt(1-beta.^2);
omega=2*pi*c/lm_0;
omega_p=sqrt(e^2*n_e/epsilon_0/m_e./gamma);

%{
+[M函数](,电流特征)
%}
filename_0="/home/xiantao/Documents/sim_output/sim_folder_smilei/Fields0.h5";
ti=20000;
field='Jx';
[x,Jx]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Jz';
[x,Jz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ex';
[x,Ex]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Ey';
[x,Ey]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Bz';
[x,Bz]=read_data_1D_Smilei_h5(filename_0,ti,field);
field='Rho';
[x,Rho]=read_data_1D_Smilei_h5(filename_0,ti,field);

plot(x,Rho/epsilon_0*e,x,Ex*omega/c)
% plot(x,Jx,x,Ex*omega*epsilon_0)


%{
+[M函数](,电流特征)
%}
## end
#4392, 925:
<!--
+[H函数](,纵波方程)
-->

<h2>Longitudinal wave in plasma</h2>
%[1].
%[1.2].
%[2].

Since the drifting velocity is along y-axis and ignored the B-field, the eqn.[1]. can be,
%[3].
%[4].

The wave equation can be,
%[5].
%[6].
%[7].
%[8].

As a result, \(k=0\). It's not propagating. <br>
If there are B-fields, then,
%[9].
%[10].
The solution is,
%[11].
%[12].


<h2>Longitudinal wave correction</h2>
The responce currect induced by magnetic field can be solved in following way. 
%[13].
%[14].

For plane waves,
%[15].
%[16].
%[17].
%[18].
%[19].
%[20].
%[21].

<h2>Quick test</h2>
The B-field induced current is, (laser B-field intensity is expressed by E-field intensity)
%[22].
%[23].
%[24].
%[25].
%[26].
%[27].
%[28].
(Above equations are current without correction. )
After correction, the equation is,
%[29].


<!--
[29].:
式(27)转换为"表达式"
将"\Delta j=-\frac{\beta^2*n_e*q}{i*\omega}*E_y"记作为式(29)


更新式(27)
+[H函数](,纵波方程)
-->
## end
#4394, 139:
\frac{\partial}{\partial t}\left(\vec{p}\right)+\vec{\nabla}\cdot \left(\vec{v} \vec{p}\right)=q \left(\vec{E}+\vec{v}\times \vec{B}\right)
## end
#4396, 43:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}
## end
#4398, 57:
\frac{\partial}{\partial t}\left(\vec{p}\right)=q \vec{E}
## end
#4400, 69:
m \frac{\partial}{\partial t}\left(\vec{j}\right)=q^{2} n_{e} \vec{E}
## end
#4402, 160:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=\frac{\partial}{\partial t}\left(\frac{\partial \rho}{\partial t}\right)/\epsilon_{0}
## end
#4403, 84:
\p{t}{\vec{p}}+\vec{\nabla}\cdot (\vec{v}*\vec{p})=q*(\vec{E}+\vec{v}\times \vec{B})
## end
#4406, 41:
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0
## end
#4409, 24:
\p{t}{\vec{p}}=q*\vec{E}
## end
#4413, 60:
\frac{\partial \rho}{\partial t}+\vec{\nabla}\cdot \vec{j}=0
## end
#4414, 39:
\p{t}{\rho}+\vec{\nabla}\cdot \vec{j}=0
## end
#4417, 32:
m*\p{t}{\vec{j}}=q^2*n_e*\vec{E}
## end
#4421, 154:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=-\vec{\nabla}\cdot \frac{\partial}{\partial t}\left(\vec{j}\right)/\epsilon_{0}
## end
#4423, 149:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=-\vec{\nabla}\cdot \left(\frac{q^{2} n_{e}}{m \epsilon_{0}} \vec{E}\right)
## end
#4425, 129:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=-\vec{\nabla}\cdot \left(\omega_{p}^{2} \vec{E}\right)
## end
#4426, 64:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=\p{t}{\p{t}{\rho}}/\epsilon_0
## end
#4429, 79:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=-\vec{\nabla}\cdot \p{t}{\vec{j}}/\epsilon_0
## end
#4432, 92:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=-\vec{\nabla}\cdot (\frac{q^2*n_e}{m*\epsilon_0}*\vec{E})
## end
#4435, 74:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=-\vec{\nabla}\cdot (\omega_p^2*\vec{E})
## end
#4439, 164:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=-\vec{\nabla}\cdot \left(\omega_{p}^{2} \left(\vec{E}+\vec{v}\times \vec{B}\right)\right)
## end
#4441, 194:
\vec{\nabla}\cdot \frac{\partial^{2}}{\partial t ^{2}}\left(\vec{E}\right)=-\vec{\nabla}\cdot \left(\omega_{p}^{2} \vec{E}+\frac{\partial}{\partial t}\left(\vec{j_{B}}\right)/\epsilon_{0}\right)
## end
#4442, 98:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=-\vec{\nabla}\cdot (\omega_p^2*(\vec{E}+\vec{v}\times \vec{B}))
## end
#4445, 102:
\vec{\nabla}\cdot \p{t,t}{\vec{E}}=-\vec{\nabla}\cdot (\omega_p^2*\vec{E}+\p{t}{\vec{j_B}}/\epsilon_0)
## end
#4449, 76:
\omega^{2} \vec{E}=\omega_{p}^{2} \left(\vec{E}+\vec{v}\times \vec{B}\right)
## end
#4450, 61:
\omega^2*\vec{E}=\omega_p^{2}*(\vec{E}+\vec{v}\times \vec{B})
## end
#4454, 91:
\vec{E}=\frac{\omega_{p}^{2}}{\omega^{2}-\omega_{p}^{2}} \left(\vec{v}\times \vec{B}\right)
## end
#4455, 76:
\vec{E}=\frac{\omega_p^{2}}{\omega^{2}-\omega_p^{2}}*(\vec{v}\times \vec{B})
## end
#4459, 104:
m \frac{\partial}{\partial t}\left(\vec{j}\right)=q^{2} n_{e} \left(\vec{E}+\vec{v}\times \vec{B}\right)
## end
#4461, 70:
\vec{j}+\epsilon_{0} \frac{\partial}{\partial t}\left(\vec{E}\right)=0
## end
#4463, 50:
\vec{E}=\vec{j}/\left(i \omega \epsilon_{0}\right)
## end
#4465, 74:
-i \omega m \vec{j}=q^{2} n_{e} \left(\vec{E}+\vec{v}\times \vec{B}\right)
## end
#4467, 109:
-i \omega m \vec{j}=q^{2} n_{e} \left(\vec{j}/\left(i \omega \epsilon_{0}\right)+\vec{v}\times \vec{B}\right)
## end
#4469, 58:
m*\p{t}{\vec{j}}=q^{2}*n_e*(\vec{E}+\vec{v}\times \vec{B})
## end
#4472, 35:
\vec{j}+\epsilon_0*\p{t}{\vec{E}}=0
## end
#4475, 37:
\vec{E}=\vec{j}/(i*\omega*\epsilon_0)
## end
#4478, 61:
-i*\omega*m*\vec{j}=q^{2}*n_e*(\vec{E}+\vec{v}\times \vec{B})
## end
#4481, 83:
-i*\omega*m*\vec{j}=q^{2}*n_e*(\vec{j}/(i*\omega*\epsilon_0)+\vec{v}\times \vec{B})
## end
#4484, 29:
\vec{j}/(i*\omega*\epsilon_0)
## end
#4486, 7:
\vec{E}
## end
#4489, 121:
-i \omega m \vec{j}=q^{2} n_{e} \vec{j}/\left(i \omega \epsilon_{0}\right)+q^{2} n_{e} \left(\vec{v}\times \vec{B}\right)
## end
#4491, 128:
\vec{j}=\frac{q^{2} n_{e}}{\omega^{2} m \epsilon_{0}} \vec{j}+\frac{q^{2} n_{e}}{-i \omega m} \left(\vec{v}\times \vec{B}\right)
## end
#4493, 115:
\vec{j}=\frac{\omega_{p}^{2}}{\omega^{2}} \vec{j}+\frac{i q^{2} n_{e}}{\omega m} \left(\vec{v}\times \vec{B}\right)
## end
#4494, 93:
-i*\omega*m*\vec{j}=q^{2}*n_e*\vec{j}/(i*\omega*\epsilon_0)+q^{2}*n_e*(\vec{v}\times \vec{B})
## end
#4497, 109:
\vec{j}=\frac{q^{2}*n_e}{\omega^2*m*\epsilon_0}*\vec{j}+\frac{q^{2}*n_e}{-i*\omega*m}*(\vec{v}\times \vec{B})
## end
#4500, 96:
\vec{j}=\frac{\omega_p^2}{\omega^2}*\vec{j}+\frac{i*q^{2}*n_e}{\omega*m}*(\vec{v}\times \vec{B})
## end
#4504, 122:
\left(1-\frac{\omega_{p}^{2}}{\omega^{2}}\right) \vec{j}=\frac{i q^{2} n_{e}}{\omega m} \left(\vec{v}\times \vec{B}\right)
## end
#4506, 52:
j_{x}=-\frac{v_{y} n_{e} q}{i \omega} k E_{y}/\omega
## end
#4508, 45:
j_{x}=-\frac{\beta n n_{e} q}{i \omega} E_{y}
## end
#4510, 60:
\frac{\partial \rho}{\partial t}+\vec{\nabla}\cdot \vec{j}=0
## end
#4511, 92:
(1-\frac{\omega_p^2}{\omega^2})*\vec{j}=\frac{i*q^{2}*n_e}{\omega*m}*(\vec{v}\times \vec{B})
## end
#4514, 44:
j_x=-\frac{v_y*n_e*q}{i*\omega}*k*E_y/\omega
## end
#4517, 39:
j_x=-\frac{\beta*n*n_e*q}{i*\omega}*E_y
## end
#4521, 19:
\omega \rho=k j_{x}
## end
#4523, 14:
\rho=n j_{x}/c
## end
#4525, 48:
\rho=-n \frac{\beta n n_{e} q}{i \omega} E_{y}/c
## end
#4526, 39:
\p{t}{\rho}+\vec{\nabla}\cdot \vec{j}=0
## end
#4529, 17:
\omega*\rho=k*j_x
## end
#4532, 12:
\rho=n*j_x/c
## end
#4535, 44:
\rho=-n*\frac{\beta*n*n_e*q}{i*\omega}*E_y/c
## end
#4538, 35:
-\frac{\beta*n*n_e*q}{i*\omega}*E_y
## end
#4540, 3:
j_x
## end
#4543, 56:
\Delta j=-\frac{\beta^{2} n^{2} n_{e} q}{i \omega} E_{y}
## end
#4544, 48:
\Delta j=-\frac{\beta^2*n^2*n_e*q}{i*\omega}*E_y
## end
#4548, 50:
\Delta j=-\frac{\beta^{2} n_{e} q}{i \omega} E_{y}
## end
#4549, 44:
\Delta j=-\frac{\beta^2*n_e*q}{i*\omega}*E_y
## end
#4553, 56:
j_{x}\approx -\frac{\beta n_{e} q^{2}}{i \omega m} E_{y}
## end
#4554, 41:
j_x~-\frac{\beta*n_e*q^2}{i*\omega*m}*E_y
## end
#4558, 58:
/home/xiantao/Documents/sim_output/Smilei_out/UF_1D/run.py
## end
#4560, 2204:
"""
地址::/home/xiantao/Documents/sim_output/Smilei_out/UF_1D/run.py
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

"""
import numpy as np


dt = 0.07775441817634737
nx = 19968
Lx = 1568.2830526720247
Ly = 785.3981633974483
npatch_x = 128

Main(
    geometry = "1Dcartesian",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = 20202*dt,

    cell_length  = [0.07853981633974483],
    grid_length = [Lx],

    number_of_patches = [npatch_x],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        ["silver-muller","silver-muller"],
#        ["periodic", "periodic"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)



LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)


Species(
    name = "_plasma_2",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = 1,
    number_density = 0.0028703304464224155, 

    mean_velocity = [-0.3,0.4,0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

Species(
    name = "_plasma_1",
    position_initialization = "regular",
    momentum_initialization = "cold",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = -1.0,
    number_density = 0.0028703304464224155, 

    mean_velocity = [-0.3,0.4,0],
    temperature = [0.0],
    pusher = "boris",
    time_frozen = 0.0,
    boundary_conditions = [
        ["remove", "remove"],
#        ["periodic", "periodic"],
    ],
)

LaserPlanar1D(
    box_side                = "xmin",
    a0                            = 0.001,
    omega                    = 0.6666666666666666,
    polarization_phi  = 0.7853981633974484,
    ellipticity               = 0.0,
    time_envelope     = tconstant(),
)




DiagFields(
    fields = [ 'Ex', 'Ey', 'Ez', 'Bx', 'By', 'Bz', 'Jx', 'Jy', 'Jz', 'Rho' ],
    every = 500,
)




DiagPerformances(
    every = 50,
)



## end
#4562, 60:
/home/xiantao/Documents/sim_output/Smilei_out/UF_1D/info.txt
## end
#4564, 611:
运行指令"cp -r /home/xiantao/Documents/sim_output/sim_folder_smilei /media/xiantao/Elements/LWFA/FDH/Smilei/test0"
地址::/home/xiantao/Documents/sim_output/Smilei_out/UF_1D
状态::本地
状态::


模拟代码:...
+[删除结构](,模拟代码)->+[召唤星辰]"生成Smilei代码"(模拟场景,模拟代码)...
    ->+[.]"1D"(+[召唤星辰],)
+[新建阅读窗口](,模拟代码)

参考波长::800e-9
有模拟空间和窗口
有电子和探测光

有探测场
探测场的探测类型是"Ex,Ey,Ez,Bx,By,Bz,Jx,Jy,Jz,Rho"
探测场的探测间隔是"500"


模拟空间和窗口都是长方形(200e-6,100e-6)
模拟空间的格点尺寸是"1e-8,1e-7,1e-7"

有正电子和电子
电子的数密度是"0.5e25"
电子的速度是"-0.3,0.4,0"
正电子的电荷是"1"

探测光的波长是"1200e-9"
探测光的展宽是"inf"
探测光的a0是"0.001"
探测光的偏振态是"1,1"
探测光有什么

模拟动画:...
+[召唤星辰]"生成PIC一维动画"(模拟场景,模拟动画)->+[M函数](,模拟动画)


## end
#4566, 64:
/home/xiantao/Documents/sim_output/Smilei_out/UF_1D/myscript.txt
## end
#4568, 1553:
#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     "sbatch milan.serial.slurm" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute "module load launcher" 
#       followed by "module help launcher".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/smilei run.py



## end
#4571, 802:
<!--
+[H函数](,洛伦兹变换)
-->

<h2>Lorentz transformation</h2>

The lorentz boost matrix is,
%[1].
Here the velocity is along the x-axis. If the velocity is along \(\theta\) angle versus x axis, then,
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].

<h2>Wave in plasma</h2>
There is a wave propagating along x-axis in a plasma. The 4-vector wave number in lab frame is,
%[8].
Then 4-vector wave number in plasma frame is,
%[9].
%[10].
%[11].

As a result,
%[12].
%[13].

The refractive index in the plasma frame should be,
%[14].
%[15].
%[16].
%[17].
%[18].
%[19].
%[20].


<!--
[20].:
+[删除表达式](,[17].)
将"k^2*c^2=\omega^2-\omega_p2^2"记作为式(20)
在式(11)中, 矩阵"1"的项(2,1)转换为"表达式"
将"k_2^2/c^2=k_2^2*c^2"代入到式(14)


将式(13)代入到式(15)
更新式(18)

+[删除表达式](,[19.1].)
重新思考式(18)的变量"k"
描述解题思路
执行操作

+[初等化简](,[11].)
更新式(15)
+[H函数](,洛伦兹变换)
-->
## end
#4573, 119:
\mathbf{\Omega}=\begin{pmatrix}
\gamma&-\gamma \beta&0&0\\ -\gamma \beta&\gamma&0&0\\ 0&0&1&0\\ 0&0&0&1
\end{pmatrix}


## end
#4574, 87:
\mat{\Omega}=\mat{\gamma,-\gamma*\beta,0,0;
-\gamma*\beta,\gamma,0,0;
0,0,1,0;
0,0,0,1}
## end
#4578, 181:
\mathbf{R_{1}}=\begin{pmatrix}
1&0&0&0\\ 0&cos \left( \theta \right)&-sin \left( \theta \right)&0\\ 0&sin \left( \theta \right)&cos \left( \theta \right)&0\\ 0&0&0&1
\end{pmatrix}


## end
#4580, 181:
\mathbf{R_{2}}=\begin{pmatrix}
1&0&0&0\\ 0&cos \left( \theta \right)&sin \left( \theta \right)&0\\ 0&-sin \left( \theta \right)&cos \left( \theta \right)&0\\ 0&0&0&1
\end{pmatrix}


## end
#4582, 70:
\mathbf{\Omega_{\theta}}=\mathbf{R_{1}} \mathbf{\Omega} \mathbf{R_{2}}
## end
#4583, 91:
\mat{R_1}=\mat{1,0,0,0;
0,cos(\theta),-sin(\theta),0;
0,sin(\theta),cos(\theta),0;
0,0,0,1}
## end
#4586, 91:
\mat{R_2}=\mat{1,0,0,0;
0,cos(\theta),sin(\theta),0;
0,-sin(\theta),cos(\theta),0;
0,0,0,1}
## end
#4589, 52:
\mat{\Omega_\theta}=\mat{R_1}*\mat{\Omega}*\mat{R_2}
## end
#4593, 74:
\mat{\gamma,-\gamma*\beta,0,0;
-\gamma*\beta,\gamma,0,0;
0,0,1,0;
0,0,0,1}
## end
#4594, 81:
\mat{1,0,0,0;
0,cos(\theta),sin(\theta),0;
0,-sin(\theta),cos(\theta),0;
0,0,0,1}
## end
#4595, 81:
\mat{1,0,0,0;
0,cos(\theta),-sin(\theta),0;
0,sin(\theta),cos(\theta),0;
0,0,0,1}
## end
#4596, 462:
\mathbf{\Omega_{\theta}}=\begin{pmatrix}
1&0&0&0\\ 0&cos \left( \theta \right)&-sin \left( \theta \right)&0\\ 0&sin \left( \theta \right)&cos \left( \theta \right)&0\\ 0&0&0&1
\end{pmatrix}

 \begin{pmatrix}
\gamma&-\gamma \beta&0&0\\ -\gamma \beta&\gamma&0&0\\ 0&0&1&0\\ 0&0&0&1
\end{pmatrix}

 \begin{pmatrix}
1&0&0&0\\ 0&cos \left( \theta \right)&sin \left( \theta \right)&0\\ 0&-sin \left( \theta \right)&cos \left( \theta \right)&0\\ 0&0&0&1
\end{pmatrix}


## end
#4597, 249:
\mat{\Omega_\theta}=\mat{1,0,0,0;0,cos(\theta),-sin(\theta),0;0,sin(\theta),cos(\theta),0;0,0,0,1}*\mat{\gamma,-\gamma*\beta,0,0;-\gamma*\beta,\gamma,0,0;0,0,1,0;0,0,0,1}*\mat{1,0,0,0;0,cos(\theta),sin(\theta),0;0,-sin(\theta),cos(\theta),0;0,0,0,1}
## end
#4601, 687:
\mathbf{\Omega_{\theta}}=\begin{pmatrix}
\gamma&-\gamma \beta cos \left( \theta \right)&-\gamma \beta sin \left( \theta \right)&0\\ -cos \left( \theta \right) \gamma \beta&cos \left( \theta \right) \gamma cos \left( \theta \right)+sin \left( \theta \right) sin \left( \theta \right)&cos \left( \theta \right) \gamma sin \left( \theta \right)-sin \left( \theta \right) cos \left( \theta \right)&0\\ -sin \left( \theta \right) \gamma \beta&sin \left( \theta \right) \gamma cos \left( \theta \right)-cos \left( \theta \right) sin \left( \theta \right)&sin \left( \theta \right) \gamma sin \left( \theta \right)+cos \left( \theta \right) cos \left( \theta \right)&0\\ 0&0&0&1
\end{pmatrix}


## end
#4602, 370:
\mat{\Omega_\theta}=\mat{\gamma,-\gamma*\beta*cos(\theta),-\gamma*\beta*sin(\theta),0;-cos(\theta)*\gamma*\beta,cos(\theta)*\gamma*cos(\theta)+sin(\theta)*sin(\theta),cos(\theta)*\gamma*sin(\theta)-sin(\theta)*cos(\theta),0;-sin(\theta)*\gamma*\beta,sin(\theta)*\gamma*cos(\theta)-cos(\theta)*sin(\theta),sin(\theta)*\gamma*sin(\theta)+cos(\theta)*cos(\theta),0;0,0,0,1}
## end
#4607, 499:
\mathbf{\Omega_{\theta}}=\begin{pmatrix}
\gamma&-\gamma \beta cos \left( \theta \right)&-\gamma \beta sin \left( \theta \right)&0\\ -cos \left( \theta \right) \gamma \beta&1+\left(\gamma-1\right) cos \left( \theta \right)^{2}&\left(\gamma-1\right) cos \left( \theta \right) sin \left( \theta \right)&0\\ -sin \left( \theta \right) \gamma \beta&\left(\gamma-1\right) cos \left( \theta \right) sin \left( \theta \right)&1+\left(\gamma-1\right) sin \left( \theta \right)^{2}&0\\ 0&0&0&1
\end{pmatrix}


## end
#4609, 63:
\mathbf{k}=\begin{pmatrix}
\omega/c\\ k\\ 0\\ 0
\end{pmatrix}


## end
#4610, 281:
\mat{\Omega_\theta}=\mat{\gamma,-\gamma*\beta*cos(\theta),-\gamma*\beta*sin(\theta),0;
-cos(\theta)*\gamma*\beta,1+(\gamma-1)*cos(\theta)^{2},(\gamma-1)*cos(\theta)*sin(\theta),0;
-sin(\theta)*\gamma*\beta,(\gamma-1)*cos(\theta)*sin(\theta),1+(\gamma-1)*sin(\theta)^{2},0;
0,0,0,1}
## end
#4614, 41:
\mathbf{k_{p}}=\mathbf{\Omega} \mathbf{k}
## end
#4615, 28:
\mat{k}=\mat{\omega/c;k;0;0}
## end
#4618, 30:
\mat{k_p}=\mat{\Omega}*\mat{k}
## end
#4621, 74:
\mat{\gamma,-\gamma*\beta,0,0;
-\gamma*\beta,\gamma,0,0;
0,0,1,0;
0,0,0,1}
## end
#4622, 20:
\mat{\omega/c;k;0;0}
## end
#4623, 171:
\mathbf{k_{p}}=\begin{pmatrix}
\gamma&-\gamma \beta&0&0\\ -\gamma \beta&\gamma&0&0\\ 0&0&1&0\\ 0&0&0&1
\end{pmatrix}

 \begin{pmatrix}
\omega/c\\ k\\ 0\\ 0
\end{pmatrix}


## end
#4624, 102:
\mat{k_p}=\mat{\gamma,-\gamma*\beta,0,0;-\gamma*\beta,\gamma,0,0;0,0,1,0;0,0,0,1}*\mat{\omega/c;k;0;0}
## end
#4628, 99:
\mat{k_p}=\mat{(\gamma)*(\omega/c)+(-\gamma*\beta)*(k);(-\gamma*\beta)*(\omega/c)+(\gamma)*(k);0;0}
## end
#4630, 119:
\mathbf{k_{p}}=\begin{pmatrix}
\gamma \omega/c-\gamma \beta k\\ -\gamma \beta \omega/c+\gamma k\\ 0\\ 0
\end{pmatrix}


## end
#4631, 82:
\mat{k_p}=\mat{\gamma*\omega/c-\gamma*\beta*k;-\gamma*\beta*\omega/c+\gamma*k;0;0}
## end
#4636, 41:
\omega_{2}=\gamma \left(\omega-v k\right)
## end
#4638, 42:
k_{2}=\gamma \left(k-\beta \omega/c\right)
## end
#4639, 28:
\omega_2=\gamma*(\omega-v*k)
## end
#4642, 29:
k_2=\gamma*(k-\beta*\omega/c)
## end
#4646, 93:
\left(k_{2}^{2} c^{2}\right)/\omega_{2}^{2}=1-\left(\frac{\omega_{p2}}{\omega_{2}}\right)^{2}
## end
#4647, 63:
(k_2^{2}*c^{2})/\omega_2^{2}=1-(\frac{\omega_p2}{\omega_2})^{2}
## end
#4651, 123:
\left(\gamma \left(k-\beta \omega/c\right)\right)^{2} c^{2}=\left(\gamma \left(\omega-v k\right)\right)^{2}-\omega_{p2}^{2}
## end
#4652, 77:
(\gamma*(k-\beta*\omega/c))^{2}*c^{2}=(\gamma*(\omega-v*k))^{2}-\omega_p2^{2}
## end
#4655, 19:
\gamma*(\omega-v*k)
## end
#4657, 8:
\omega_2
## end
#4659, 25:
\gamma*(k-\beta*\omega/c)
## end
#4661, 3:
k_2
## end
#4663, 111:
\left(\gamma k-\gamma \beta \omega/c\right)^{2} c^{2}=\left(\gamma \omega-\gamma v k\right)^{2}-\omega_{p2}^{2}
## end
#4664, 87:
(\gamma*k-\gamma*\beta*\omega/c)^{2}*c^{2}=(\gamma*\omega-\gamma*v*k)^{2}-\omega_p2^{2}
## end
#4669, 38:
k^{2} c^{2}=\omega^{2}-\omega_{p2}^{2}
## end
#4670, 28:
k^2*c^2=\omega^2-\omega_p2^2
## end
#4674, 263:
\gamma k \gamma k c^{2}+\gamma \beta \omega/c \gamma \beta \omega/c c^{2}-\gamma k \gamma \beta \omega/c c^{2}-\gamma \beta \omega/c \gamma k c^{2}=\gamma \omega \gamma \omega+\gamma v k \gamma v k-\gamma \omega \gamma v k-\gamma v k \gamma \omega-\omega_{p2}^{2}
## end
#4675, 261:
\gamma*k*\gamma*k*c^{2}+\gamma*\beta*\omega/c*\gamma*\beta*\omega/c*c^{2}-\gamma*k*\gamma*\beta*\omega/c*c^{2}-\gamma*\beta*\omega/c*\gamma*k*c^{2}=\gamma*\omega*\gamma*\omega+\gamma*v*k*\gamma*v*k-\gamma*\omega*\gamma*v*k-\gamma*v*k*\gamma*\omega-\omega_p2^{2}
## end
#4679, 215:
\gamma^{2} c^{2} k^{2}+\gamma^{2} \beta^{2} \omega^{2}-\gamma^{2} \beta \omega c k-\gamma^{2} \beta \omega c k=\gamma^{2} \omega^{2}+\gamma^{2} v^{2} k^{2}-\gamma^{2} \omega v k-\gamma^{2} v \omega k-\omega_{p2}^{2}
## end
#4680, 213:
\gamma^{2}*c^{2}*k^{2}+\gamma^{2}*\beta^{2}*\omega^{2}-\gamma^{2}*\beta*\omega*c*k-\gamma^{2}*\beta*\omega*c*k=\gamma^{2}*\omega^{2}+\gamma^{2}*v^{2}*k^{2}-\gamma^{2}*\omega*v*k-\gamma^{2}*v*\omega*k-\omega_p2^{2}
## end
#4684, 7:
解一元二次方程
## end
#4686, 7:
解一元二次方程
## end
#4688, 7:
解一元二次方程
## end
#4690, 220:
\left(\gamma^{2} \omega v+\gamma^{2} v \omega-2 \gamma^{2} \beta \omega c\right) k+\left(\gamma^{2} \beta^{2} \omega^{2}+\omega_{p2}^{2}-\gamma^{2} \omega^{2}\right)+\left(\gamma^{2} c^{2}-\gamma^{2} v^{2}\right) k^{2}=0
## end
#4691, 185:
(\gamma^{2}*\omega*v+\gamma^{2}*v*\omega-2*\gamma^{2}*\beta*\omega*c)*k+(\gamma^{2}*\beta^{2}*\omega^{2}+\omega_p2^{2}-\gamma^{2}*\omega^{2})+(\gamma^{2}*c^{2}-\gamma^{2}*v^{2})*k^{2}=0
## end
#4696, 2:
减去
## end
#4698, 5:
整理x系数
## end
#4699, 1:
k
## end
#4701, 3:
解方程
## end
#4702, 5:
思考下一步
## end
#4703, 1:
k
## end
#4714, 703:
<!--
+[H函数](,斜入射问题)
-->

<h2>Plasma flow</h2>
If the velocity of a plasma flow is along \(\theta\) versus x-axis, which is the laser propagation direction, then the Doppler effect will contribute to density distribution as well. I will discuss about the correction in this situation. <br>
The dynamic equation is,
%[1].
The current will be,
%[2].
(\(\vec{j_f}\) is the current induced by Lorentz force)<br>
There is a flow equation,
%[3].
%[4].
%[5].
%[6].
%[7].


<!--
[8].:
式(4)转换为"表达式"
将"-(1-n*\beta_x)*\rho_1+\frac{n}{c}*\hat{k}\cdot \vec{j_f}=0"记作为式(6)
将"\vec{v}=\vec{v_1}"代入到式(1)

将式(3)记作为式(4)
将式(2)代入到式(4)
将"\vec{k}=i*\vec{k}"代入到式(4)
将公式"\p{t}{_f}=-i*\omega*_f"代入到式(4)


更新式(4)
+[H函数](,斜入射问题)
-->
## end
#4716, 86:
m \frac{d\vec{v_{1}}}{dt}=\vec{F} cos \left( \omega \left(1-\beta_{x}\right) t \right)
## end
#4718, 44:
\vec{j_{1}}=\rho_{1} \vec{v_{0}}+\vec{j_{f}}
## end
#4720, 68:
\frac{\partial \rho_{1}}{\partial t}+\vec{\nabla}\cdot \vec{j_{1}}=0
## end
#4722, 81:
-i \omega \rho_{1}+i \vec{k}\cdot \left(\rho_{1} \vec{v_{0}}+\vec{j_{f}}\right)=0
## end
#4723, 53:
m*\d{\vec{v_1}}_{t}=\vec{F}*cos(\omega*(1-\beta_x)*t)
## end
#4726, 36:
\vec{j_1}=\rho_1*\vec{v_0}+\vec{j_f}
## end
#4729, 43:
\p{t}{\rho_1}+\vec{\nabla}\cdot \vec{j_1}=0
## end
#4732, 62:
-i*\omega*\rho_1+i*\vec{k}\cdot (\rho_1*\vec{v_0}+\vec{j_f})=0
## end
#4735, 26:
\rho_1*\vec{v_0}+\vec{j_f}
## end
#4737, 9:
\vec{j_1}
## end
#4740, 64:
-\left(\omega-k v_{x}\right) \rho_{1}+\vec{k}\cdot \vec{j_{f}}=0
## end
#4742, 75:
-\left(1-n \beta_{x}\right) \rho_{1}+\frac{n}{c} \hat{k}\cdot \vec{j_{f}}=0
## end
#4747, 47:
-(\omega-k*v_x)*\rho_1+\vec{k}\cdot \vec{j_f}=0
## end
#4750, 58:
-(1-n*\beta_x)*\rho_1+\frac{n}{c}*\hat{k}\cdot \vec{j_f}=0
## end
#4754, 376:
%{
Nini, 打开FDH(文件)
在分析日志的扫描波长的测试梯度效应中有对比
%}


D=[2.*dv_x_dx+dv_y_dy,dv_x_dy,0;dv_y_dx,dv_x_dx+2.*dv_y_dy,0;0,0,dv_x_dx+dv_y_dy];
R=[1,n.*beta_y,0;0,1-n.*beta_x,0;0,0,1-n.*beta_x].^(-1).*m.*[1+gamma.^2.*beta_x.^2,gamma.^2.*beta_x.*beta_y,0;gamma.^2.*beta_y.*beta_x,1+gamma.^2.*beta_y.^2,0;0,0,1].*([2.*n.*beta_x-1,0,0;n.*beta_y,n.*beta_x-1,0;0,0,n.*beta_x-1]-(i)./(omega).*D)


## end
#4757, 155:
\mat{D}=\mat{\p{x}{v_x},\p{y}{v_x},\p{z}{v_x};\p{x}{v_y},\p{y}{v_y},\p{z}{v_y};\p{x}{v_z},\p{y}{v_z},\p{z}{v_z}}+(\p{x}{v_x}+\p{y}{v_y}+\p{z}{v_z})*\mat{I}
## end
#4761, 478:
\mathbf{D}=\begin{pmatrix}
\frac{\partial v_{x}}{\partial x}&\frac{\partial v_{x}}{\partial y}&\frac{\partial v_{x}}{\partial z}\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{y}}{\partial z}\\ \frac{\partial v_{z}}{\partial x}&\frac{\partial v_{z}}{\partial y}&\frac{\partial v_{z}}{\partial z}
\end{pmatrix}

+\left(\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}+\frac{\partial v_{z}}{\partial z}\right) \mathbf{I}
## end
#4765, 113:
\mat{D}=\mat{2*\p{x}{v_x}+\p{y}{v_y},\p{y}{v_x},0;\p{x}{v_y},\p{x}{v_x}+2*\p{y}{v_y},0;0,0,\p{x}{v_x}+\p{y}{v_y}}
## end
#4769, 330:
\mathbf{D}=\begin{pmatrix}
2 \frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}&\frac{\partial v_{x}}{\partial y}&0\\ \frac{\partial v_{y}}{\partial x}&\frac{\partial v_{x}}{\partial x}+2 \frac{\partial v_{y}}{\partial y}&0\\ 0&0&\frac{\partial v_{x}}{\partial x}+\frac{\partial v_{y}}{\partial y}
\end{pmatrix}


## end
### 结束