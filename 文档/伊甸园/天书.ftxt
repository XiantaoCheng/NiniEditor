### 节点
地址, 的, 天书, 目录, 的, 的, 节点数目统计, 的, 操作, 的, 测试矩形区域, 的, 测试矩形, 的, 场景, 手, 区域1, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 20220917, 的, 方向, 朝向, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 参考线, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, \Delta r_2, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, \Delta r_1, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, 方向, 朝向, 方向, 朝向, 箭头宽度, 的, 箭头长度, 的, 样式, 样式, 箭头宽度, 的, 箭头长度, 的, A点, 的, B点, 的, 空间点, 在, 空间点, 在, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, A, 的, B, 的, 空间点, 在, 空间点, 在, 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 括号, 的, 的, [9]., 的, [10]., L_1, 的, L_2, 的, L_3, 的, L_4, 的, 空间点, 在, 空间点, 在, 空间点, 在, 空间点, 在, 表达式, 的, 公式, 的, [11]., 的, [12]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [13]., 表达式, 的, 公式, 手, 20220918, 的, 的, 验证公式, 的, [14]., 的, [15]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [16]., 表达式, 的, 公式, 的, 测试场景, 矩形区域, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 方向, 朝向, 方程公式, 表达式, 的, 公式, 20220923, 的, 参数公式, 表达式, 的, 公式, 的, 电子, 的, 在, 密度, 的, 的, 公式结构, 的, 的, 的, 记录星辰, 的, 召唤星辰, 的, 星星, 的, 的, 星星模板, 的, 收集场景结构, 的, 测试结构, 的, 召唤规则, 的, 降临, 的, 降临规则, 的, 设置名称, 操作, 操作, 的, 初始化, 的, P代码, P代码, 的, 设置参数, 的, 20220924, 的, 矩形区域, 的, 的, 分布函数, 的, 召唤规则, 的, 降临规则, 的, 公式结构, 的, 输出代码, 的, 设置区域性质, 分布函数, 的, 的, 密度, 召唤规则, 的, 召唤规则, 的, 的, 设置全局性质, 的, 操作, 的, 密度函数, 的, 参数方程, 表达式, 的, 公式, 表达式, 的, 公式, 矩形区域2, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 方向, 朝向, 的, 在, 密度, 的, 的, P代码, 20220925, 的, 手, 的, 测试代码结构, 的, 样本代码, 的, 样本结构, 的, 输出代码, 的, 公式结构, 表达式, 的, 公式, 的, 产生代码, 序号, 的, 区域, 的, 区域, 的, 的, 类型, Smilei模板, 的, Smilei预览动画, 的, 召唤规则, 的, 20220927, 的, 20220928, 的, 20220929, 的, 20221001, 的, 20221008, 的, 坐标系, 的, 的, 保存天书, 椭圆曲线, 的, 的, 删除冗余, 定义样本, 的, 记忆, 定义样本, 定义Maxwell方程组, 的, 召唤规则, 的, 的, 召唤星辰原型, 的, 20221009, 的, 召唤规则, 相对论波动方程, 的, 召唤规则, 的, 磁场矩阵, 的, 召唤规则, 的, 等离子体频率, 的, 召唤规则, 的, 磁场频率, 的, 召唤规则, 的, 20221010, 的, 20221014, 的, 素描结构, 的, 召唤规则, 的, 20221016, 的, 乘方运算, 的, 召唤规则, 的, 20221019, 的, 20221022, 的, 乘法运算, 的, 召唤规则, 的, 加法运算, 的, 召唤规则, 的, 20221024, 的, 能谱仪原型, 的, 20221025, 的, 投影规则, 的, 召唤规则, 的, 20221026, 的, 20221028, 的, 20221029, 的, 20221103, 的, 扫描参数代码, 的, 召唤规则, 的, 20221106, 的, 解方程, 的, 召唤规则, 的, 20221108, 的, 生成GEANT4代码, 的, 召唤规则, 的, 20221110, 的, 20221119, 的, 场景示意图, 的, 召唤规则, 的, 动画预览图, 的, 召唤规则, 的, 蒙卡模拟代码, 的, 召唤规则, 的, 光场预览图, 的, 召唤规则, 的, 20221120, 的, 20221125, 的, 20221126, 的, 20221127, 的, 减法运算, 的, 召唤规则, 的, 文本转换, 的, 召唤规则, 的, 运动动画, 的, 召唤规则, 的, 计算能谱仪误差, 的, 召唤规则, 的, 计算发射角, 的, 召唤规则, 的, 计算电子IP图像, 的, 召唤规则, 的, 计算电子能谱, 的, 召唤规则, 的, 二维光线场景, 的, 召唤规则, 的, 光路结构转代码, 的, 召唤规则, 的, 文本结构化, 的, 召唤规则, 的, 文本转换_docx, 的, 召唤规则, 的, 液体运动, 的, 召唤规则, 的, 电子轨迹公式, 的, 召唤规则, 的, 高斯函数, 的, 召唤规则, 的, IP图像公式, 的, 召唤规则, 的, 能谱仪实验参数, 的, 召唤规则, 的, 推导结构转代码, 的, 召唤规则, 的, 直线方程, 的, 召唤规则, 的, 坐标方程, 的, 召唤规则, 的, 铰链公式, 的, 召唤规则, 的, 直线交点, 的, 召唤规则, 的, 垂直公式, 的, 召唤规则, 的, 平行公式, 的, 召唤规则, 的, 光栅GDD公式, 的, 召唤规则, 的, 光栅TOD公式, 的, 召唤规则, 的, 夹角公式, 的, 召唤规则, 的, 反射公式, 的, 召唤规则, 的, 电透镜场景转代码, 的, 召唤规则, 的, 光学基本量, 的, 召唤规则, 的, 光强定义, 的, 召唤规则, 的, 功率定义, 的, 召唤规则, 的, A0定义, 的, 召唤规则, 的, a0定义, 的, 召唤规则, 的, 极限焦点, 的, 召唤规则, 的, LWFA匹配条件, 的, 召唤规则, 的, 文本转换_博客, 的, 召唤规则, 的, 绘画人体, 的, 召唤规则, 的, 预览动画, 的, 召唤规则, 的, 结构转PIConGPU代码, 的, 召唤规则, 的, 描述相对坐标, 的, 召唤规则, 的, 场强定义, 的, 召唤规则, 的, 生成Parser代码, 的, 召唤规则, 的, dw和dt公式, 的, 召唤规则, 的, dw和dlm公式, 的, 召唤规则, 的, 光谱公式, 的, 召唤规则, 的, 波包形状公式, 的, 召唤规则, 的, 一维预览动画, 的, 召唤规则, 的, 生成例句代码, 的, 召唤规则, 的, 绘制约束示意图, 的, 召唤规则, 的, 更新约束关系, 的, 召唤规则, 的, 推导结构转描述文字, 的, 召唤规则, 的, 推导结构转代码2, 的, 召唤规则, 的, 生成互动网页, 的, 召唤规则, 的, 结构转Smilei代码, 的, 召唤规则, 的, 圆切线公式, 的, 召唤规则, 的, 双圆切线公式, 的, 召唤规则, 的, 自定义公式, 的, 召唤规则, 的, 生成Parser代码_快速, 的, 召唤规则, 的, 代码结构转文本描述, 的, 召唤规则, 的, 代码结构转流程图, 的, 召唤规则, 的, 一般结构转流程图, 的, 召唤规则, 的, 一般结构转结构文字, 的, 召唤规则, 的, 一般结构转分类图, 的, 召唤规则, 的, 文本转换_md, 的, 召唤规则, 的, 代码结构转代码, 的, 召唤规则, 的, 执行计算过程, 的, 召唤规则, 的, 光路示意图转三维场景, 的, 召唤规则, 的, 推导结构转公式推导页面, 的, 召唤规则, 的, 解题思路转题目答案, 的, 召唤规则, 的, 
### 关联
#, 2#0, #, #, 3#2, 3#6, #, 2#8, #, 2#10, #, 2#12, #, 12#14, #, #12, #, 14#16, #, 16#18, #, 16#20, #, 16#22, #, 16#24, #, 16#26, 16#, #, 16#29, #, 6#31, #, 16#33, 12#36, #, 12#38, #, 12#40, #, 12#42, #, #, 14#43, #, 43#45, #, 43#47, #, 43#49, #, 43#51, #, 43#53, #, 14#55, #, 55#57, #, 55#59, #, 55#61, #, 55#63, #, 55#65, #, 14#67, #, 67#69, #, 67#71, #, 67#73, #, 67#75, #, 67#77, #, 67#79, #, 55#81, #, 67#83, #, 67#85, 67#, 55#, #, 55#89, #, 55#91, #, 14#93, #, 14#95, #, 93#97, #, 95#99, #, 36#101, 36#, #, 38#104, 38#, #, 40#107, 40#, #, 42#110, 42#, #, 14#113, #, 14#115, #, 113#117, #, 115#119, 12#122, #, 12#124, #, #, 122#125, 122#, #, 124#128, 124#, 12#132, #, 12#134, #, #, 132#135, 132#, #, 134#138, 134#, #, 135#141, 12#144, #, 12#146, #, #, 14#147, #, 14#149, #, 14#151, #, 14#153, #, 147#155, #, 149#157, #, 151#159, #, 153#161, #, 144#163, 144#, 12#167, #, 12#169, #, #, 146#170, 146#, #, 167#173, 167#, #, 169#176, 169#, 12#180, #, #, 180#181, 180#, #12, #, 6#185, 12#188, #, 12#190, #, 12#192, #, #, 190#193, 190#, #, 192#196, 192#, 12#200, #, #, 200#201, 200#, 12#205, #, #, 205#206, #, 206#208, #, 206#210, #, 206#212, #, 206#214, #, 206#216, 206#, #, 206#219, #, 206#221, #, #, 223#224, 223#, #, 6#227, #, #, 229#230, 229#, 205#234, #, 205#236, 237#206, #, 234#237, 205#240, #, 240#223, 240#229, 8#244, #, 8#246, #, 244#248, #, 246#248, 244#251, #, 244#253, #, 205#255, #, 240#257, #, 246#259, #, 240#261, #, 261#263, #, #206, #255, 261#267, #, 263#269, #, #, 272#270, #, 261#272, #, 6#274, #, 248#276, 205#279, #, 279#281, #, 279#283, #, 279#285, #, 279#287, #, 283#289, #, #, 248#290, 205#293, #, #, 276#294, #, 290#296, 283#299, #, 289#301, #, 285#303, #, 285#305, #, #, 305#306, 305#, #, 303#309, 303#, #, 205#312, #, 312#314, #, 312#316, #, 312#318, #, 312#320, #, 312#322, 312#, #, 312#325, #, 312#327, 205#330, 331#312, #, 234#331, 289#334, #, #, 6#335, #285, 12#339, #, 339#341, #, 339#343, #, 339#345, #, 339#347, #, #, 347#348, 347#, 283#352, #, #, 293#353, #, 293#355, #, 293#357, 293#360, #, #, 248#361, #, 248#363, #, 363#365, #, 6#367, #, 6#369, #, 6#371, #, 6#373, #, 6#375, #, 248#377, 244#380, #, #, 248#381, 8#384, #, #279, 387#385, 3#, #, #, 248#389, #, 389#391, 8#394, #, 394#248, #, 6#396, #, #, 248#399, #, 399#401, #, 248#403, #, 403#405, #, 248#407, #, 407#409, #, 248#411, #, 411#413, #, 6#415, #, 6#417, #, 248#419, #, 419#421, #, 6#423, #, 248#425, #, 425#427, #, 6#429, #, 6#431, #, 248#433, #, 433#435, #, 248#437, #, 437#439, #, 6#441, #, 248#443, #, 6#445, #, 248#447, #, 447#449, #, 6#451, #, 6#453, #, 6#455, #, 6#457, #, 248#459, #, 459#461, #, 6#463, #, 248#465, #, 465#467, #, 6#469, #, 248#471, #, 471#473, #, 6#475, #, 6#477, #, 248#479, #, 479#481, #, 248#483, #, 483#485, #, 248#487, #, 487#489, #, 248#491, #, 491#493, #, 6#495, #, 6#497, #, 6#499, #, 6#501, #, 248#503, #, 503#505, #, 248#507, #, 507#509, #, 248#511, #, 511#513, #, 248#515, #, 515#517, #, 248#519, #, 519#521, #, 248#523, #, 523#525, #, 248#527, #, 527#529, #, 248#531, #, 531#533, #, 248#535, #, 535#537, #, 248#539, #, 539#541, #, 248#543, #, 543#545, #, 248#547, #, 547#549, #, 248#551, #, 551#553, #, 248#555, #, 555#557, #, 248#559, #, 559#561, #, 248#563, #, 563#565, #, 248#567, #, 567#569, #, 248#571, #, 571#573, #, 248#575, #, 575#577, #, 248#579, #, 579#581, #, 248#583, #, 583#585, #, 248#587, #, 587#589, #, 248#591, #, 591#593, #, 248#595, #, 595#597, #, 248#599, #, 599#601, #, 248#603, #, 603#605, #, 248#607, #, 607#609, #, 248#611, #, 611#613, #, 248#615, #, 615#617, #, 248#619, #, 619#621, #, 248#623, #, 623#625, #, 248#627, #, 627#629, #, 248#631, #, 631#633, #, 248#635, #, 635#637, #, 248#639, #, 639#641, #, 248#643, #, 643#645, #, 248#647, #, 647#649, #, 248#651, #, 651#653, #, 248#655, #, 655#657, #, 248#659, #, 659#661, #, 248#663, #, 663#665, #, 248#667, #, 667#669, #, 248#671, #, 671#673, #, 248#675, #, 675#677, #, 248#679, #, 679#681, #, 248#683, #, 683#685, #, 248#687, #, 687#689, #, 248#691, #, 691#693, #, 248#695, #, 695#697, #, 248#699, #, 699#701, #, 248#703, #, 703#705, #, 248#707, #, 707#709, #, 248#711, #, 711#713, #, 248#715, #, 715#717, #, 248#719, #, 719#721, #, 248#723, #, 723#725, #, 248#727, #, 727#729, #, 248#731, #, 731#733, #, 248#735, #, 735#737, #, 248#739, #, 739#741, #, 248#743, #, 743#745, #, 248#747, #, 747#749, #, 248#751, #, 751#753, #, 248#755, #, 755#757, #, 248#759, #, 759#761, #, 248#763, #, 763#765, #, 248#767, #, 767#769, #, 248#771, #, 771#773, #, 248#775, #, 775#777, 
### 内容
#0, 14:
文档\伊甸园\天书.ftxt
## end
#2, 229:
+[返回目录](,天书)
地址::文档\伊甸园\天书.ftxt


操作:...
+[设置动词](,操作)
+[新建阅读窗口](,操作)

Nini, 导入词典的库. 导入词典
Nini, 导入网页画板的库
Nini, 导入公式分析器的库
Nini, 导入编程语言parser的库
Nini, 导入PPT的库. Nini, 导入图形库的库
Nini, 导入天书的库


Nini, 打开星辰(文件)


测试矩形:...
+[新建阅读窗口](,测试矩形)


## end
#3, 159:
天书:...
创建于 20220917

节点数目统计::
+[设置结构](,节点数目统计)

[当前文件](天书,)->是([当前文件],_文件)->+[显示星图](,_文件)
[]=>输入->的(输入,_n)=>+[del](,_n)->+[del](,输入)
[]=>2e19=>+[del](,2e19)



## end
#8, 88:


记录星辰:...
召唤星辰:...
召唤星辰原型:...

删除冗余:...
+[新建阅读窗口](,记录星辰)
将'召唤星辰原型'的"召唤星辰"替换为"召唤星辰原型"



## end
#12, 1218:
<!--
+[H函数](,测试矩形)
+[修改天使]
场景:...
测试场景:...
测试代码结构:...
+[新建阅读窗口](,测试场景)
-->

<h2>Rectangle area</h2>
The position point is \(\vec{r_0}=(x_0,y_0)\). The direction angle of the rectangle is \(\theta\). <br>

The vectors are,
%[1].
%[2].
There are two points,
%[3].
%[4].

The line passing through a point \((x_0,y_0)\) by \(\theta\) as the angle is,
%[5].
%[6].
%[7].
%[8].

The distance from a point to the line \(L_1, L_2, L_3, L_4\) are,
%[9].
%[10].
%[11].
%[12].

The condition of the area is,
%[13].

Then I want to write the function with the input parameters only. So we have,
%[14].
%[15].
%[16].


<!--
[15].:
+[新建阅读窗口](,[13].)
式(16)转换为"表达式"
式(13)转换为"Matlab"
\eqs{x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*y_2+W*sin(\theta)}

将式(9)记作为式(14)
将"(\vec{r}-\vec{r_A})\cdot \vec{r_1}=(x-x_A)*x_1+(y-y_A)*y_1"代入到式(14)

将"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta)}"记作为式(15)

将"\eqs{x_B=x_0-L/2*x_2+W*x_1;
y_B=y_0-L/2*y_2+W*y_1}"记作为式(16)
将"x_1=cos(\theta)"代入到式(16)
将"y_1=sin(\theta)"代入到式(16)
将"x_2=-sin(\theta)"代入到式(16)
将"y_2=cos(\theta)"代入到式(16)


的([16].,表达式)=>的(表达式,*)=>+[显示](,*)
的([15].,表达式)->+[显示星图](,表达式)
的([14].,表达式)->+[设置结构](,表达式)
Nini, 打开公式分析器(文件)
验证公式:...
+[新建阅读窗口](,验证公式)
+[H函数](,测试矩形)
-->
## end
#14, 440:
+[显示PPT场景](,场景)


有区域1
区域1是长方形"1,2"
区域1在什么位置
+[设置结构](,区域1)

区域1在(-0.05,0)
区域1朝向"30"

有\Delta r_1, \Delta r_2和参考线
参考线是线段"4"
参考线距离区域1为(-2,0)

\Delta r_1是线段"1"
\Delta r_2是线段"1"
\Delta r_1朝向"30"
\Delta r_2朝向"120"

\Delta r_1是箭头"0.1,0.1"
\Delta r_2是箭头"0.1,0.1"

有A点和B点
A点在(-0.4,1)
B点在(1,0.4)

A点是"\Delta r_2"
B点是"\Delta r_1"

有A和B
标记屏幕
在屏幕上, 添加标记点
A在标记点"1"的位置
B在标记点"2"的位置
A在什么位置

有L_1, L_2, L_3和L_4
L_4在标记点"4"的位置


+[显示图形名称](,场景)
+[显示PPT场景](,场景)
## end
#16, 3:
多边形
## end
#18, 20:
-1.0, 1.0, 1.0, -1.0
## end
#20, 18:
0.0, 0.0, 1.0, 1.0
## end
#22, 7:
-0.05,0
## end
#24, 3:
1.0
## end
#26, 3:
2.0
## end
#28, 3:
多边形
## end
#29, 3:
长方形
## end
#31, 3:
250
## end
#33, 2:
30
## end
#36, 66:
\vec{r_1}=\begin{pmatrix}
cos(\theta),&sin(\theta)
\end{pmatrix}


## end
#38, 67:
\vec{r_2}=\begin{pmatrix}
-sin(\theta),&cos(\theta)
\end{pmatrix}


## end
#40, 34:
\vec{r_A}=\vec{r_0}+L/2\ \vec{r_2}
## end
#42, 47:
\vec{r_B}=\vec{r_0}-L/2\ \vec{r_2}+W\ \vec{r_1}
## end
#45, 8:
0.0, 0.0
## end
#47, 8:
0.0, 4.0
## end
#49, 9:
-2.0, 0.0
## end
#51, 3:
4.0
## end
#53, 2:
线段
## end
#57, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#59, 28:
0.0, 1.0, nan, 0.9, 1.0, 0.9
## end
#61, 8:
0.0, 0.0
## end
#63, 3:
1.0
## end
#65, 2:
箭头
## end
#69, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#71, 28:
0.0, 1.0, nan, 0.9, 1.0, 0.9
## end
#73, 8:
0.0, 0.0
## end
#75, 3:
1.0
## end
#77, 2:
箭头
## end
#79, 2:
30
## end
#81, 3:
120
## end
#83, 3:
0.1
## end
#85, 3:
0.1
## end
#87, 2:
曲线
## end
#88, 2:
曲线
## end
#89, 3:
0.1
## end
#91, 3:
0.1
## end
#93, 10:
\Delta r_2
## end
#95, 10:
\Delta r_1
## end
#97, 6:
-0.4,1
## end
#99, 5:
1,0.4
## end
#101, 39:
\vec{r_1}=\vec{cos(\theta),sin(\theta)}
## end
#104, 40:
\vec{r_2}=\vec{-sin(\theta),cos(\theta)}
## end
#107, 33:
\vec{r_A}=\vec{r_0}+L/2*\vec{r_2}
## end
#110, 45:
\vec{r_B}=\vec{r_0}-L/2*\vec{r_2}+W*\vec{r_1}
## end
#117, 39:
-0.6333585921141822, 0.8332907192197805
## end
#119, 38:
1.4194241965562897, -0.443440039587464
## end
#122, 22:
x=x_{0}-t\ sin(\theta)
## end
#124, 22:
y=y_{0}+t\ cos(\theta)
## end
#125, 19:
x=x_0-t*sin(\theta)
## end
#128, 19:
y=y_0+t*cos(\theta)
## end
#132, 34:
t=\left(x_{0}-x\right)/sin(\theta)
## end
#134, 53:
y=y_{0}+\left(x_{0}-x\right)/sin(\theta)\ cos(\theta)
## end
#135, 21:
t=(x_0-x)/sin(\theta)
## end
#138, 37:
y=y_0+(x_0-x)/sin(\theta)*cos(\theta)
## end
#144, 51:
d_{1}=\left(\vec{r}-\vec{r_A}\right)\cdot \vec{r_1}
## end
#146, 52:
d_{2}=-\left(\vec{r}-\vec{r_A}\right)\cdot \vec{r_2}
## end
#155, 41:
0.052571266539121364, -0.3382975065092203
## end
#157, 39:
-0.14269343774904453, 1.163738680322832
## end
#159, 38:
0.6383653794036226, 1.0085282743501867
## end
#161, 39:
0.7435079124818662, -0.5035214870607463
## end
#163, 38:
d_1=(\vec{r}-\vec{r_A})\cdot \vec{r_1}
## end
#167, 52:
d_{3}=-\left(\vec{r}-\vec{r_B}\right)\cdot \vec{r_1}
## end
#169, 51:
d_{4}=\left(\vec{r}-\vec{r_B}\right)\cdot \vec{r_2}
## end
#170, 39:
d_2=-(\vec{r}-\vec{r_A})\cdot \vec{r_2}
## end
#173, 39:
d_3=-(\vec{r}-\vec{r_B})\cdot \vec{r_1}
## end
#176, 38:
d_4=(\vec{r}-\vec{r_B})\cdot \vec{r_2}
## end
#180, 270:
n=\begin{cases}
n_{e}, & \left(\vec{r}-\vec{r_A}\right)\cdot \vec{r_1}\ge 0, & -\left(\vec{r}-\vec{r_A}\right)\cdot \vec{r_2}\ge 0, & -\left(\vec{r}-\vec{r_B}\right)\cdot \vec{r_1}\ge 0, & \left(\vec{r}-\vec{r_B}\right)\cdot \vec{r_2}\ge 0\\ 0, & otherwise
\end{cases}


## end
#181, 178:
n=\eqs{n_e,(\vec{r}-\vec{r_A})\cdot \vec{r_1}>=0,-(\vec{r}-\vec{r_A})\cdot \vec{r_2}>=0,-(\vec{r}-\vec{r_B})\cdot \vec{r_1}>=0,(\vec{r}-\vec{r_B})\cdot \vec{r_2}>=0;
0,otherwise}
## end
#185, 3:
273
## end
#188, 596:
%{
+[M函数](,验证公式)
%}

theta=pi/5;
L=2;
W=1;
r_0=[0,0];
n_e=1;

x=linspace(-2,2,100);
y=linspace(-2,2,101);
[X,Y]=meshgrid(x,y);
n=zeros(size(X));

r_1=[cos(theta), sin(theta)];
r_2=[-sin(theta), cos(theta)];

r_A=r_0+L./2.*r_2;
r_B=r_0-L./2.*r_2+W.*r_1;

for i=1:length(x)
    for j=1:length(y)
        r=[x(i),y(j)];
        if  sum((r-r_B).*r_2)>=0 &&  -sum((r-r_B).*r_1)>=0 &&  -sum((r-r_A).*r_2)>=0 &&  sum((r-r_A).*r_1)>=0 
            n(j,i)=n_e;
        else
            n(j,i)=0;
        end
    
    end
end

surf(X,Y,n)
view([0,90])
axis equal
shading interp

%{
size(X)
+[M函数](,验证公式)
%}
## end
#190, 81:
d_{1}=\left(x-x_{A}\right)\cdot cos(\theta)+\left(y-y_{A}\right)\cdot sin(\theta)
## end
#192, 87:
\begin{cases}
x_{A}=x_{0}-L/2\ sin(\theta)\\ y_{A}=y_{0}+L/2\ cos(\theta)
\end{cases}


## end
#193, 53:
d_1=(x-x_A)\cdot cos(\theta)+(y-y_A)\cdot sin(\theta)
## end
#196, 54:
\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta)}
## end
#200, 117:
\begin{cases}
x_{B}=x_{0}+L/2\ sin(\theta)+W\ cos(\theta)\\ y_{B}=y_{0}-L/2\ cos(\theta)+W\ sin(\theta)
\end{cases}


## end
#201, 82:
\eqs{x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}
## end
#205, 899:
+[显示PPT场景](,测试场景)
+[显示星图](,测试场景)
+[设置结构](,测试场景)
Nini, 打开词典的条目(节点)
Nini, 打开动词(库)

有矩形区域
矩形区域是长方形"1,3"
矩形区域朝向"30"

有矩形区域2
矩形区域2是长方形"2,3"
矩形区域2距离矩形区域为(-2,0)
矩形区域2朝向"-70"

电子::
在矩形区域中, 电子的密度是"1e19"
在矩形区域2中, 电子有密度
在矩形区域2中, 电子的密度是"2e19"
+[设置结构](,电子)
电子=>的(电子,密度)->在(密度,_区域)=>+[显示](,_区域)
在矩形区域中, 电子的密度是什么


公式结构:...
+[新建阅读窗口](,公式结构)
+[记录星辰]"矩形区域"(,公式结构)
+[设置结构](,公式结构)
分布函数:...
将分布函数(节点)记作定义样本
Nini, 关于天书, 你记得什么?
+[新建阅读窗口](,分布函数)
+[记录星辰]"分布函数"(,分布函数)

测试结构:...
+[新建阅读窗口](,测试结构)
+[召唤星辰](+测试1,测试结构)->+[del](,+测试1)
+[记录星辰]"测试"(,公式结构)->+[召唤星辰](矩形区域,测试结构)
+[删除结构](,测试结构)->+[记录星辰]"矩形区域"(,公式结构)->+[召唤星辰](矩形区域,测试结构)...
->+[.](测试结构,+[临时文本])->+[临时文本]"12"


密度:...
+[新建阅读窗口](,密度)
+[删除结构](,密度)->+[召唤星辰]"分布"(电子,密度)
+[删除结构](,密度)->+[记录星辰]"分布函数"(,分布函数)->+[召唤星辰]"分布"(电子,密度)
的(密度,公式结构)->+[新建阅读窗口](,公式结构)
的(密度,公式结构)->的(公式结构,参数方程)->的(参数方程,表达式)->+[显示星图](,表达式)


公式结构的表达式是什么
的(公式结构,表达式)->+[显示星图](,表达式)
的(参数公式,表达式)->+[显示星图](,表达式)
## end
#208, 20:
-1.5, 1.5, 1.5, -1.5
## end
#210, 18:
0.0, 0.0, 1.0, 1.0
## end
#212, 8:
0.0, 0.0
## end
#214, 3:
1.0
## end
#216, 3:
3.0
## end
#218, 3:
多边形
## end
#219, 3:
长方形
## end
#221, 2:
30
## end
#223, 327:
\begin{cases}
\left(x-x_{A}\right)\ cos(\theta)+\left(y-y_{A}\right)\ sin(\theta)\ge 0\\ \left(x-x_{A}\right)\ sin(\theta)-\left(y-y_{A}\right)\ cos(\theta)\ge 0\\ -\left(x-x_{B}\right)\ cos(\theta)-\left(y-y_{B}\right)\ sin(\theta)\ge 0\\ -\left(x-x_{B}\right)\ sin(\theta)+\left(y-y_{B}\right)\ cos(\theta)\ge 0
\end{cases}


## end
#224, 190:
\eqs{(x-x_A)*cos(\theta)+(y-y_A)*sin(\theta)\ge 0;
(x-x_A)*sin(\theta)-(y-y_A)*cos(\theta)\ge 0;
-(x-x_B)*cos(\theta)-(y-y_B)*sin(\theta)\ge 0;
-(x-x_B)*sin(\theta)+(y-y_B)*cos(\theta)\ge 0}
## end
#227, 3:
305
## end
#229, 179:
\begin{cases}
x_{A}=x_{0}-L/2\ sin(\theta)\\ y_{A}=y_{0}+L/2\ cos(\theta)\\ x_{B}=x_{0}+L/2\ sin(\theta)+W\ cos(\theta)\\ y_{B}=y_{0}-L/2\ cos(\theta)+W\ sin(\theta)
\end{cases}


## end
#230, 132:
\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}
## end
#237, 4:
1e19
## end
#240, 665:
长度是L. 宽度是W. 角度是\theta. 空间点是(x_0,y_0)
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)

+[修改标题]"方程公式"(,公式结构)
方程公式:...
将"\eqs{(x-x_A)*x_1+(y-y_A)*y_1>=0;
-(x-x_A)*x_2-(y-y_A)*y_2>=0;
-(x-x_B)*x_1-(y-y_B)*y_1>=0;
(x-x_B)*x_2+(y-y_B)*y_2>=0}"记作为方程公式

将"x_1=cos(\theta)"代入到方程公式
将"y_1=sin(\theta)"代入到方程公式
将"x_2=-sin(\theta)"代入到方程公式
将"y_2=cos(\theta)"代入到方程公式
方程公式转换为"表达式"

更新方程公式
显示方程公式


参数公式:...
将"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}"记作为参数公式

更新参数公式
显示参数公式

的(方程公式,表达式)->+[生成公式结构](表达式,表达式)->+[更新公式起点](,表达式)
的(方程公式,表达式)->+[设置结构](,表达式)
的(方程公式,表达式)->+[删除结构](,表达式)
的(参数公式,表达式)->+[删除结构](,表达式)
## end
#244, 1157:
"""
星星模板:%[临时文本]...
星星:...
收集场景结构:...
保存天书:...

+[新建阅读窗口](,星星)
Nini, 打开名词(库)
[当前文件](记录星辰,)->是([当前文件],_文件)->+[显示](,_文件)
->[当前文件](记录星辰,)->是([当前文件],_文件)...

"""

+记录星辰(,_物体)->+[del](,+记录星辰)...
->记录星辰->的(记录星辰,星星)->的(记录星辰,星星模板)...
->的(记录星辰,收集场景结构)->的(记录星辰,保存天书)...

->[]{[]=>[==](,+记录星辰)}...
->+[临时文本]->[m_text](+记录星辰,+[临时文本])...

->+的(+[临时文本],_物体)->+[del](,+的)...
->+[code]([想],收集场景结构)->[想](_物体,+[临时文本])...
->[记录结构](+[临时文本],)...

->的(天书,记录星辰)->天书"文档\伊甸园\天书.ftxt"...

->[]{
    []:->的(星星,_条目)->_条目->[标题](_条目,)->[==]([标题],+记录星辰)...
        ->+[修改内容](,_条目)->[m_text]([记录结构],+[修改内容])...
        ->+的(+记录星辰,_条目)->+[del](,+的),

    ->+的#0(星星,+条目)->+的(天书,+条目)->+的(天书,+的#0)...
        ->+[修改标题](,+条目)->[m_text](+记录星辰,+[修改标题])...
        ->+[模板文本](星星模板,+[增加内容])->+[增加内容](,星星)...
        ->+[.](+[模板文本],+[临时文本])...
        ->+[修改内容](,+条目)->[m_text]([记录结构],+[修改内容])...
        ->+的(+记录星辰,+条目)->+[del](,+的)
}...

->的(+记录星辰,_条目)->的(星星,_条目)...
->[]{
    []:->的(_物体,召唤规则)->召唤规则->[]{
        []:->的(_条目,召唤规则#1)->召唤规则#1->+[修改内容](召唤规则,召唤规则#1),
        ->+的#1(_条目,+召唤规则)->+[修改内容](召唤规则,+召唤规则)...
            ->+的(天书,+召唤规则)->+的(天书,+的#1)
    },->[]
}...

->+[做]->+[code](+[做],保存天书)


## end
#246, 821:
"""
星星:...
降临:...
+[新建阅读窗口](,星星)
Nini, 打开动词(库)
+[修改天使]
.(

"""

+召唤星辰(_媒介,_凭依)->+[del](,+召唤星辰)...
->的(召唤星辰,星星)->的(召唤星辰,降临)...

->+操作->+[del](,+操作)...
->的(星星,_条目)->[]{
    []:->的(_条目,召唤规则)->召唤规则(,)...
        ->+[.]([想],+操作)->+[code]([想],召唤规则)->[想](_媒介,+召唤星辰),
    ->[标题](_条目,)->[==]([标题],+召唤星辰),
    ->[eq](_条目,_媒介)
}->[标题](_条目,)->[说](,[标题])...

->+[标题](_凭依,)...
->[]{
    []:->.(+召唤星辰,_文件)->_文件->[==]"当前文件"(,.)...
        ->+[导入节点](_条目,_文件)->+起点(+[导入节点],_凭依),
    ->+[导入节点](_条目,+[临时文本])->+起点(+[导入节点],_凭依)
}->+[标题]#2(_凭依,)...

->+[替换](+[标题],+[标题]#2)->+在(+[替换],_凭依)->+[del](,+在)...
->+[修改内容](+[标题],+[修改标题])->+[修改标题](,_凭依)...

->+[del](,+起点)...

->[]{
    []=>的(+操作,_操作)->_操作(_主语,_宾语)=>[说](,_操作)...
        ->_主语->_宾语->+操作#0(_主语,_宾语)->[m_name](_操作,+操作#0)...
        ->+[做](+操作#0,_凭依)->+[code](+[做],降临)->+[del](,+操作#0)
}




## end
#248, 1301:
+[设置结构](,Smilei预览动画)
+[设置结构](,星星)
的(Smilei预览动画,召唤规则)->+[消息窗口](,召唤规则)
的(Smilei预览动画,召唤规则)->+[新建阅读窗口](,召唤规则)
计算能谱仪误差

矩形区域:...
分布函数:...
Smilei模板:...
Smilei预览动画:...
坐标系:...
椭圆曲线:...
定义Maxwell方程组:...
定义方程:...
相对论波动方程:...
磁场矩阵:...
等离子体频率:...
磁场频率:...
素描结构:...
乘方运算:...
乘法运算:...
加法运算:...
fiducial1:...
fiducial2:...
能谱仪原型:...
投影规则:...
投影规则:...
扫描参数代码:...
解方程:...
生成GEANT4代码:...
场景示意图:...
动画预览图:...
蒙卡模拟代码:...
光场预览图:...
减法运算:...

[]=>投影规则=>+[显示](,投影规则)
星星=>的(星星,减法运算)=>+[显示](,减法运算)
星星=>的(星星,_星)=>+[标题](_星,)->+[显示](,+[标题])

文本转换:...
文本结构化:...
文本转换_docx:...
运动动画:...
计算能谱仪误差:...
计算发射角:...
计算电子能谱:...
计算电子IP图像:...
计算电子能谱:...
二维光线场景:...
光路结构转代码:...
液体运动:...
电子轨迹公式:...
高斯函数:...
IP图像公式:...
能谱仪实验参数:...
推导结构转代码:...
直线方程:...
坐标方程:...
铰链公式:...
直线交点:...
垂直公式:...
平行公式:...
光栅GDD公式:...
光栅TOD公式:...
夹角公式:...
反射公式:...
电透镜场景转代码:...
光学基本量:...
光强定义:...
功率定义:...
A0定义:...
a0定义:...
极限焦点:...
LWFA匹配条件:...
文本转换_博客:...
绘画人体:...
预览动画:...
结构转PIConGPU代码:...
描述相对坐标:...
场强定义:...
生成Parser代码:...
dw和dt公式:...
dw和dlm公式:...
光谱公式:...
波包形状公式:...
一维预览动画:...
生成例句代码:...
绘制约束示意图:...
更新约束关系:...
推导结构转描述文字:...
推导结构转代码2:...
生成互动网页:...
结构转Smilei代码:...
圆切线公式:...
双圆切线公式:...
自定义公式:...
生成Parser代码_快速:...
代码结构转文本描述:...
代码结构转流程图:...
一般结构转流程图:...
一般结构转结构文字:...
一般结构转分类图:...
文本转换_md:...
代码结构转代码:...
执行计算过程:...
光路示意图转三维场景:...
推导结构转公式推导页面:...
解题思路转题目答案:...

## end
#251, 12:
%[临时文本]:...

## end
#253, 368:
"""



"""

+收集场景结构(_场景,_结构)->收集场景结构(,)...

->[]{
    []:->在(_场景,空间点)->空间点->+的(_结构,在)->+的(_结构,空间点),->[]
}...
->[]{
    []:->朝向(_场景,方向)->方向->+的(_结构,朝向)->+的(_结构,方向),->[]
}...
->[]{
    []:->样式(_场景,)->+的(_结构,样式),->[]
}...

->[]{
    []=>的#0(_场景,_节点)->_节点=>[]:
        ->的(_结构,_节点),
        ->+的(_结构,的#0)->+的(_结构,_节点)...
            ->+[code]([想],收集场景结构)->[想](_节点,_结构)
}


## end
#255, 538:
长度是L. 宽度是W. 角度是\theta. 空间点是(x_0,y_0)
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)

+[修改标题]"方程公式"(,测试结构)
方程公式:...
将"\eqs{(x-x_A)*x_1+(y-y_A)*y_1>=0;
-(x-x_A)*x_2-(y-y_A)*y_2>=0;
-(x-x_B)*x_1-(y-y_B)*y_1>=0;
(x-x_B)*x_2+(y-y_B)*y_2>=0}"记作为测试结构

显示方程公式

参数公式:...
将"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}"记作为参数公式

更新参数公式
显示参数公式

的(方程公式,表达式)->+[生成测试结构](表达式,表达式)->+[更新公式起点](,表达式)
的(方程公式,表达式)->+[设置结构](,表达式)
的(方程公式,表达式)->+[删除结构](,表达式)
的(参数公式,表达式)->+[删除结构](,表达式)
## end
#257, 214:
"""


"""

+召唤规则(_区域,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->的(_区域,宽度)->的(_区域,长度)...
->在(_区域,空间点)->朝向(_区域,方向)...

->+设置参数(_区域,_凭依)->+的(操作,+设置参数)...
->+设置名称(_区域,_凭依)->+的(操作,+设置名称)...
->+初始化(_区域,_凭依)->+的(操作,+初始化)



## end
#259, 156:
"""


"""

+降临(_操作,_凭依)->+[del](,+降临)...

->的(_凭依,降临规则)->的(降临规则,_规则)->[eq](_规则,_操作)...

->_操作(_主语,_宾语)->_主语->_宾语(,)...
->+[做](_主语,_宾语)->+[code](+[做],_规则)



## end
#261, 52:


初始化:...
设置参数:...
设置名称:...
将条目"设置参数"复制为条目"设置名称"




## end
#263, 1662:
"""
P代码:...

"""

+设置名称(_区域,_凭依)->+[del](,+设置名称)...
->的(设置名称,P代码)...

->Python->+[python](Python,)->[]{
    []:->.(_凭依,_名字)...
        ->+[s]"str_N"(+[python],_名字)->+[del](,.),
    ->+[s]"str_N"(+[python],+[临时文本])->+[临时文本]"1"
}...

->的(_凭依,参数公式)...
->[]{
    的(参数公式,表达式)->表达式&:
        =>的(表达式,x_A)=>+[标题](x_A,)...
            ->+[python](Python,+[修改标题]#1)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#1(,x_A),
        =>的(表达式,y_A)=>+[标题](y_A,)...
            ->+[python](Python,+[修改标题]#2)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#2(,y_A),

        =>的(表达式,x_B)=>+[标题](x_B,)...
            ->+[python](Python,+[修改标题]#3)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#3(,x_B),
        =>的(表达式,y_B)=>+[标题](y_B,)...
            ->+[python](Python,+[修改标题]#4)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#4(,y_B)
}...

->的(_凭依,方程公式)...
->[]{
    的(方程公式,表达式)->表达式&:
        =>的(表达式,x_A)=>+[标题](x_A,)...
            ->+[python](Python,+[修改标题]#1)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#1(,x_A),
        =>的(表达式,y_A)=>+[标题](y_A,)...
            ->+[python](Python,+[修改标题]#2)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#2(,y_A),

        =>的(表达式,x_B)=>+[标题](x_B,)...
            ->+[python](Python,+[修改标题]#3)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#3(,x_B),
        =>的(表达式,y_B)=>+[标题](y_B,)...
            ->+[python](Python,+[修改标题]#4)->+[code](+[python],P代码)...
            ->+[s]"name"(+[python],+[标题])->+[修改标题]#4(,y_B)
}



## end
#267, 207:
"""


"""

+初始化(_区域,_凭依)->+[del](,+初始化)...

->的(_凭依,方程公式)->的(方程公式,表达式#1)...
    ->+[生成公式结构](表达式#1,表达式#1)->+[更新公式起点](,表达式#1)...
->的(_凭依,参数公式)->的(参数公式,表达式#2)...
    ->+[生成公式结构](表达式#2,表达式#2)->+[更新公式起点](,表达式#2)

## end
#269, 38:
"""
记住"Python"

"""
ans=name+str_N




## end
#270, 102:
"""
记住"Python"
print(theta)

"""

import numpy as np

theta=angle[0]/180.*np.pi
x_0=pt[0]
y_0=pt[1]



## end
#272, 812:
"""
P代码:...
Nini, 打开公式分析器(文件)

"""

+设置参数(_区域,_凭依)->+[del](,+设置参数)...
->的(设置参数,P代码)...

->的(_区域,长度)->的(_区域,宽度)...
->在(_区域,空间点)->朝向(_区域,方向)...

->+[python](Python,)->+[code](+[python],P代码)...
->+[.]"pt"(+[python],空间点)->+[.]"angle"(+[python],方向)...
->+[o]"theta"(+[python],+theta)...

->的(_凭依,参数公式)...
->[]{
    的(参数公式,表达式)->表达式&:
        =>的(表达式,L)=>+[修改标题](,L)->[m_text](长度,+[修改标题]),
        =>的(表达式,W)=>+[修改标题](,W)->[m_text](宽度,+[修改标题]),
        =>的(表达式,\theta)=>+[修改内容](+theta,+[修改标题]#t)->+[修改标题]#t(,\theta),
        =>的(表达式,x_0)=>+[python]"ans=x_0"(Python,+[修改标题]#x)->+[修改标题]#x(,x_0),
        =>的(表达式,y_0)=>+[python]"ans=y_0"(Python,+[修改标题]#y)->+[修改标题]#y(,y_0)
}...

->的(_凭依,方程公式)...
->[]{
    的(方程公式,表达式)->表达式&:
        =>的(表达式,\theta)=>+[修改内容](+theta,+[修改标题]#t)->+[修改标题]#t(,\theta)
}...

->+[del](,+theta)


## end
#274, 3:
466
## end
#276, 5062:
公式结构#0"长度是L. 宽度是W. 角度是\theta. 空间点是(x_0,y_0)
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)

+[修改标题]\"方程公式\"(,公式结构)
方程公式:...
将\"\eqs{(x-x_A)*x_1+(y-y_A)*y_1>=0;
-(x-x_A)*x_2-(y-y_A)*y_2>=0;
-(x-x_B)*x_1-(y-y_B)*y_1>=0;
(x-x_B)*x_2+(y-y_B)*y_2>=0}\"记作为方程公式

将\"x_1=cos(\theta)\"代入到方程公式
将\"y_1=sin(\theta)\"代入到方程公式
将\"x_2=-sin(\theta)\"代入到方程公式
将\"y_2=cos(\theta)\"代入到方程公式
方程公式转换为\"表达式\"

更新方程公式
显示方程公式


参数公式:...
将\"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}\"记作为参数公式

更新参数公式
显示参数公式

的(方程公式,表达式)->+[生成公式结构](表达式,表达式)->+[更新公式起点](,表达式)
的(方程公式,表达式)->+[设置结构](,表达式)
的(方程公式,表达式)->+[删除结构](,表达式)
的(参数公式,表达式)->+[删除结构](,表达式)"(,)
的#1""(公式结构#0,方程公式#2)
方程公式#2"\begin{cases}
\left(x-x_{A}\right)\ cos(\theta)+\left(y-y_{A}\right)\ sin(\theta)\ge 0\\ \left(x-x_{A}\right)\ sin(\theta)-\left(y-y_{A}\right)\ cos(\theta)\ge 0\\ -\left(x-x_{B}\right)\ cos(\theta)-\left(y-y_{B}\right)\ sin(\theta)\ge 0\\ -\left(x-x_{B}\right)\ sin(\theta)+\left(y-y_{B}\right)\ cos(\theta)\ge 0
\end{cases}

"(,)
的#3""(方程公式#2,表达式#4)
表达式#4"\eqs{(x-x_A)*cos(\theta)+(y-y_A)*sin(\theta)\ge 0;
(x-x_A)*sin(\theta)-(y-y_A)*cos(\theta)\ge 0;
-(x-x_B)*cos(\theta)-(y-y_B)*sin(\theta)\ge 0;
-(x-x_B)*sin(\theta)+(y-y_B)*cos(\theta)\ge 0}"(,)
的#5""(公式结构#0,参数公式#6)
参数公式#6"\begin{cases}
x_{A}=x_{0}-L/2\ sin(\theta)\\ y_{A}=y_{0}+L/2\ cos(\theta)\\ x_{B}=x_{0}+L/2\ sin(\theta)+W\ cos(\theta)\\ y_{B}=y_{0}-L/2\ cos(\theta)+W\ sin(\theta)
\end{cases}

"(,)
的#7""(参数公式#6,表达式#8)
表达式#8"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}"(,)
的#9""(公式结构#0,召唤规则#10)
召唤规则#10"\"\"\"


\"\"\"

+召唤规则(_区域,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->的(_区域,宽度)->的(_区域,长度)...
->在(_区域,空间点)->朝向(_区域,方向)...

->+设置参数(_区域,_凭依)->+的(操作,+设置参数)...
->+设置名称(_区域,_凭依)->+的(操作,+设置名称)...
->+初始化(_区域,_凭依)->+的(操作,+初始化)


"(,)
的#11""(公式结构#0,降临规则#12)
降临规则#12"

初始化:...
设置参数:...
设置名称:...
将条目\"设置参数\"复制为条目\"设置名称\"



"(,)
的#13""(降临规则#12,设置名称#14)
设置名称#14"\"\"\"
P代码:...

\"\"\"

+设置名称(_区域,_凭依)->+[del](,+设置名称)...
->的(设置名称,P代码)...

->Python->+[python](Python,)->[]{
    []:->.(_凭依,_名字)...
        ->+[s]\"str_N\"(+[python],_名字)->+[del](,.),
    ->+[s]\"str_N\"(+[python],+[临时文本])->+[临时文本]\"1\"
}...

->的(_凭依,参数公式)...
->[]{
    的(参数公式,表达式)->表达式&:
        =>的(表达式,x_A)=>+[标题](x_A,)...
            ->+[python](Python,+[修改标题]#1)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#1(,x_A),
        =>的(表达式,y_A)=>+[标题](y_A,)...
            ->+[python](Python,+[修改标题]#2)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#2(,y_A),

        =>的(表达式,x_B)=>+[标题](x_B,)...
            ->+[python](Python,+[修改标题]#3)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#3(,x_B),
        =>的(表达式,y_B)=>+[标题](y_B,)...
            ->+[python](Python,+[修改标题]#4)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#4(,y_B)
}...

->的(_凭依,方程公式)...
->[]{
    的(方程公式,表达式)->表达式&:
        =>的(表达式,x_A)=>+[标题](x_A,)...
            ->+[python](Python,+[修改标题]#1)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#1(,x_A),
        =>的(表达式,y_A)=>+[标题](y_A,)...
            ->+[python](Python,+[修改标题]#2)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#2(,y_A),

        =>的(表达式,x_B)=>+[标题](x_B,)...
            ->+[python](Python,+[修改标题]#3)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#3(,x_B),
        =>的(表达式,y_B)=>+[标题](y_B,)...
            ->+[python](Python,+[修改标题]#4)->+[code](+[python],P代码)...
            ->+[s]\"name\"(+[python],+[标题])->+[修改标题]#4(,y_B)
}


"(,)
的#15""(设置名称#14,P代码#16)
P代码#16"\"\"\"
记住\"Python\"

\"\"\"
ans=name+str_N



"(,)
的#17""(降临规则#12,初始化#18)
初始化#18"\"\"\"


\"\"\"

+初始化(_区域,_凭依)->+[del](,+初始化)...

->的(_凭依,方程公式)->的(方程公式,表达式#1)...
    ->+[生成公式结构](表达式#1,表达式#1)->+[更新公式起点](,表达式#1)...
->的(_凭依,参数公式)->的(参数公式,表达式#2)...
    ->+[生成公式结构](表达式#2,表达式#2)->+[更新公式起点](,表达式#2)
"(,)
的#19""(降临规则#12,设置参数#20)
设置参数#20"\"\"\"
P代码:...
Nini, 打开公式分析器(文件)

\"\"\"

+设置参数(_区域,_凭依)->+[del](,+设置参数)...
->的(设置参数,P代码)...

->的(_区域,长度)->的(_区域,宽度)...
->在(_区域,空间点)->朝向(_区域,方向)...

->+[python](Python,)->+[code](+[python],P代码)...
->+[.]\"pt\"(+[python],空间点)->+[.]\"angle\"(+[python],方向)...
->+[o]\"theta\"(+[python],+theta)...

->的(_凭依,参数公式)...
->[]{
    的(参数公式,表达式)->表达式&:
        =>的(表达式,L)=>+[修改标题](,L)->[m_text](长度,+[修改标题]),
        =>的(表达式,W)=>+[修改标题](,W)->[m_text](宽度,+[修改标题]),
        =>的(表达式,\theta)=>+[修改内容](+theta,+[修改标题]#t)->+[修改标题]#t(,\theta),
        =>的(表达式,x_0)=>+[python]\"ans=x_0\"(Python,+[修改标题]#x)->+[修改标题]#x(,x_0),
        =>的(表达式,y_0)=>+[python]\"ans=y_0\"(Python,+[修改标题]#y)->+[修改标题]#y(,y_0)
}...

->的(_凭依,方程公式)...
->[]{
    的(方程公式,表达式)->表达式&:
        =>的(表达式,\theta)=>+[修改内容](+theta,+[修改标题]#t)->+[修改标题]#t(,\theta)
}...

->+[del](,+theta)

"(,)
的#21""(设置参数#20,P代码#22)
P代码#22"\"\"\"
记住\"Python\"
print(theta)

\"\"\"

import numpy as np

theta=angle[0]/180.*np.pi
x_0=pt[0]
y_0=pt[1]


"(,)

## end
#279, 104:

召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

的(降临规则,产生代码)->+[做](,密度)->+[code](+[做],产生代码)

公式结构:...
输出代码:...





## end
#281, 265:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"分布"(,召唤星辰)...

->+产生代码(_凭依,_凭依)->+的(操作,+产生代码)...
->[]{
    []=>的(_媒介,_性质)->_性质->[eq](_性质,_凭依)=>[]:
        ->在(_性质,_区域)->+设置区域性质(_性质,_凭依)->+的(操作,+设置区域性质),
        ->+设置全局性质(_性质,_凭依)->+的(操作,+设置全局性质)
}



## end
#283, 54:

设置区域性质:...
设置全局性质:...
产生代码:...
+[新建阅读窗口](,设置区域性质)




## end
#285, 204:


参数方程:...
密度函数:...

将"\eqs{1}"记作为参数方程
将"n(x,y)=\eqs{0,otherwise}"记作为密度函数
显示密度函数

更新参数方程
更新密度函数
显示参数方程
显示密度函数

的(参数方程,表达式)->+[显示星图](,表达式)
的(密度函数,表达式)->+[显示星图](,表达式)
的(密度函数,表达式)->的(表达式,输入)->+[设置结构](,输入)



## end
#289, 460:
"""
操作:...
P代码:...
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,操作)

"""
+设置区域性质(_性质,_分布)->+[del](,+设置区域性质)...
->的(设置区域性质,操作)->的(设置区域性质,P代码)...

->[]{
    []:->的(_分布,序号)->序号(,)...
        ->+[python](Python,序号)->+[code](+[python],P代码)->+[.]"n"(+[python],序号),
    ->+的(_分布,+序号)->+序号"0"
}...

->在(_性质,_区域)...
->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...
->+[.]"性质"(+[structure],_性质)->+[.]"分布区域"(+[structure],_区域)...
->+[.]"分布"(+[structure],_分布)



## end
#290, 3598:
分布函数#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

的(降临规则,产生代码)->+[做](,密度)->+[code](+[做],产生代码)

公式结构:...
输出代码:...




"(,)
的#1""(分布函数#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"分布\"(,召唤星辰)...

->+产生代码(_凭依,_凭依)->+的(操作,+产生代码)...
->[]{
    []=>的(_媒介,_性质)->_性质->[eq](_性质,_凭依)=>[]:
        ->在(_性质,_区域)->+设置区域性质(_性质,_凭依)->+的(操作,+设置区域性质),
        ->+设置全局性质(_性质,_凭依)->+的(操作,+设置全局性质)
}


"(,)
的#3""(分布函数#0,降临规则#4)
降临规则#4"
设置区域性质:...
设置全局性质:...
产生代码:...
+[新建阅读窗口](,设置区域性质)



"(,)
的#5""(降临规则#4,设置区域性质#6)
设置区域性质#6"\"\"\"
操作:...
P代码:...
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,操作)

\"\"\"
+设置区域性质(_性质,_分布)->+[del](,+设置区域性质)...
->的(设置区域性质,操作)->的(设置区域性质,P代码)...

->[]{
    []:->的(_分布,序号)->序号(,)...
        ->+[python](Python,序号)->+[code](+[python],P代码)->+[.]\"n\"(+[python],序号),
    ->+的(_分布,+序号)->+序号\"0\"
}...

->在(_性质,_区域)...
->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...
->+[.]\"性质\"(+[structure],_性质)->+[.]\"分布区域\"(+[structure],_区域)...
->+[.]\"分布\"(+[structure],_分布)


"(,)
的#7""(设置区域性质#6,操作#8)
操作#8"\"\"\"


\"\"\"

的(分布,序号)...
    ->+的(分布,+区域)->+[召唤星辰](分布区域,+区域)->+[.](+区域,序号);


的(区域,参数公式)->的(参数公式,表达式#0)...
    ->的(表达式#0,方程组#0)->输入#0(方程组#0,)...
    ->的(表达式#0,输入#01)->输入#01(_re,)->_re\"输入|方程组\"...
    ->[]{[]=>输入#2(输入#01,)}...
->的(分布,公式结构)->的(公式结构,参数方程)->的(参数方程,表达式#1)...
    ->的(表达式#1,方程组#1)->输入#1(方程组#1,)...
->+[左连](输入#1,输入#01)->+[左连](输入#0,方程组#1);


的(区域,方程公式)->的(方程公式,表达式#0)->的(表达式#0,方程组#0)...
->的(分布,公式结构)->的(公式结构,密度函数)...
    ->的(密度函数,表达式#1)->的(表达式#1,方程组#1)...
->+的(+输入,+n)->+[修改标题](,+n)->[m_text](性质,+[修改标题])...
->[]{
    []=>的(表达式#0,输入)->输入(_re,)->_re\"输入|方程组\"...
    =>的(输入,_方程)->+[左连](的,+输入)
}...
->输入(方程组#1,)->+[左连](输入,+输入)->+[左连](+输入,方程组#1);


的(分布,公式结构)->的(公式结构,参数方程)->的(参数方程,表达式#1)...
    ->的(表达式#1,输入#1)->的(输入#1,1)->[]{[]=>=(1,)}...
->+[del](,输入#1)->+[del](,1)


"(,)
的#9""(设置区域性质#6,P代码#10)
P代码#10"\"\"\"


\"\"\"

n=n[0]
ans=int(n+1)


"(,)
的#11""(降临规则#4,设置全局性质#12)
设置全局性质#12"\"\"\"


\"\"\"
+设置全局性质(_性质,_分布)->+[del](,+设置全局性质)...

->+[消息窗口]\"!!!\"


"(,)
的#13""(降临规则#4,产生代码#14)
产生代码#14"\"\"\"


\"\"\"
+产生代码(,_凭依)->+[del](,+产生代码)...

->的(_凭依,公式结构)...
    ->的(公式结构,参数方程)->的(参数方程,表达式#0)...
    ->的(公式结构,密度函数)->的(密度函数,表达式#1)...

->的(_凭依,输出代码)...
->[]{
    []:->的(_凭依,类型)->类型(,)...
        ->+[算式结构转换](表达式#0,+[修改内容]#1)->+[修改内容]#1(,输出代码)...
            ->[m_text](类型,+[算式结构转换])...
        ->+[算式结构转换](表达式#1,+[增加内容]#1)->+[增加内容]#1(,输出代码)...
            ->[m_text](类型,+[算式结构转换]),

    ->+[算式结构转换]\"Python\"(表达式#0,+[修改内容])->+[修改内容](,输出代码)...
    ->+[算式结构转换]\"Python\"(表达式#1,+[增加内容])->+[增加内容](,输出代码)

}"(,)
的#15""(分布函数#0,公式结构#16)
公式结构#16"

参数方程:...
密度函数:...

将\"\eqs{1}\"记作为参数方程
将\"n(x,y)=\eqs{0,otherwise}\"记作为密度函数
显示密度函数

更新参数方程
更新密度函数
显示参数方程
显示密度函数

的(参数方程,表达式)->+[显示星图](,表达式)
的(密度函数,表达式)->+[显示星图](,表达式)
的(密度函数,表达式)->的(表达式,输入)->+[设置结构](,输入)


"(,)
的#17""(公式结构#16,密度函数#18)
密度函数#18"n(x,y)=\begin{cases}
0, & otherwise
\end{cases}

"(,)
的#19""(密度函数#18,表达式#20)
表达式#20"n(x,y)=\eqs{0,otherwise}"(,)
的#21""(表达式#20,n#22)
n#22"n"(,)
的#23""(表达式#20,输入#24)
输入#24""(n#22,)
的#25""(输入#24,x#26)
x#26"x"(,)
的#27""(输入#24,y#28)
y#28"y"(,)
的#29""(表达式#20,输入#30)
输入#30""(方程组#36,)
的#31""(输入#30,0#32)
0#32"0"(,)
的#33""(输入#30,otherwise#34)
otherwise#34"otherwise"(,)
的#35""(表达式#20,方程组#36)
方程组#36""(,)
的#37""(表达式#20,=#38)
=#38"="(n#22,方程组#36)
的#39""(表达式#20,起点#40)
起点#40""(,n#22)
的#41""(公式结构#16,参数方程#42)
参数方程#42"\begin{cases}
1
\end{cases}

"(,)
的#43""(参数方程#42,表达式#44)
表达式#44"\eqs{1}"(,)
的#45""(表达式#44,输入#46)
输入#46""(方程组#50,)
的#47""(输入#46,1#48)
1#48"1"(,)
的#49""(表达式#44,方程组#50)
方程组#50""(,)
的#51""(表达式#44,起点#52)
起点#52""(,方程组#50)
的#53""(分布函数#0,输出代码#54)
输出代码#54""(,)

## end
#293, 154:
记住"Matlab"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)
+[del](,召唤规则)

类型::Matlab
的(降临规则,产生代码)->+[做](,密度)->+[code](+[做],产生代码)

公式结构:...
输出代码:...
+[M函数](,输出代码)






## end
#294, 214:
"""


"""

+召唤规则(_区域,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->的(_区域,宽度)->的(_区域,长度)...
->在(_区域,空间点)->朝向(_区域,方向)...

->+设置参数(_区域,_凭依)->+的(操作,+设置参数)...
->+设置名称(_区域,_凭依)->+的(操作,+设置名称)...
->+初始化(_区域,_凭依)->+的(操作,+初始化)



## end
#296, 265:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"分布"(,召唤星辰)...

->+产生代码(_凭依,_凭依)->+的(操作,+产生代码)...
->[]{
    []=>的(_媒介,_性质)->_性质->[eq](_性质,_凭依)=>[]:
        ->在(_性质,_区域)->+设置区域性质(_性质,_凭依)->+的(操作,+设置区域性质),
        ->+设置全局性质(_性质,_凭依)->+的(操作,+设置全局性质)
}



## end
#299, 66:
"""


"""
+设置全局性质(_性质,_分布)->+[del](,+设置全局性质)...

->+[消息窗口]"!!!"



## end
#301, 772:
"""


"""

的(分布,序号)...
    ->+的(分布,+区域)->+[召唤星辰](分布区域,+区域)->+[.](+区域,序号);


的(区域,参数公式)->的(参数公式,表达式#0)...
    ->的(表达式#0,方程组#0)->输入#0(方程组#0,)...
    ->的(表达式#0,输入#01)->输入#01(_re,)->_re"输入|方程组"...
    ->[]{[]=>输入#2(输入#01,)}...
->的(分布,公式结构)->的(公式结构,参数方程)->的(参数方程,表达式#1)...
    ->的(表达式#1,方程组#1)->输入#1(方程组#1,)...
->+[左连](输入#1,输入#01)->+[左连](输入#0,方程组#1);


的(区域,方程公式)->的(方程公式,表达式#0)->的(表达式#0,方程组#0)...
->的(分布,公式结构)->的(公式结构,密度函数)...
    ->的(密度函数,表达式#1)->的(表达式#1,方程组#1)...
->+的(+输入,+n)->+[修改标题](,+n)->[m_text](性质,+[修改标题])...
->[]{
    []=>的(表达式#0,输入)->输入(_re,)->_re"输入|方程组"...
    =>的(输入,_方程)->+[左连](的,+输入)
}...
->输入(方程组#1,)->+[左连](输入,+输入)->+[左连](+输入,方程组#1);


的(分布,公式结构)->的(公式结构,参数方程)->的(参数方程,表达式#1)...
    ->的(表达式#1,输入#1)->的(输入#1,1)->[]{[]=>=(1,)}...
->+[del](,输入#1)->+[del](,1)



## end
#303, 49:
n(x,y)=\begin{cases}
0, & otherwise
\end{cases}


## end
#305, 29:
\begin{cases}
1
\end{cases}


## end
#306, 7:
\eqs{1}
## end
#309, 24:
n(x,y)=\eqs{0,otherwise}
## end
#314, 20:
-1.5, 1.5, 1.5, -1.5
## end
#316, 18:
0.0, 0.0, 2.0, 2.0
## end
#318, 9:
-2.0, 0.0
## end
#320, 3:
2.0
## end
#322, 3:
3.0
## end
#324, 3:
多边形
## end
#325, 3:
长方形
## end
#327, 3:
-70
## end
#331, 4:
2e19
## end
#334, 33:
"""


"""

n=n[0]
ans=int(n+1)



## end
#335, 3:
368
## end
#339, 292:

Nini, 打开核心(文件)
Nini, 打开编程语言parser(文件)

公式结构:...
样本代码:...
样本结构:...
输出代码:...
+[新建阅读窗口](,样本代码)
+[显示星图](,样本结构)

将样本代码解析为样本结构
按照"Javascript", 将样本结构转换为输出代码
显示输出代码

将"n(x)=\eqs{a,a>=b;
b,b<=a}"记作为公式结构
将"\eqs{a,a>=b;
b,b<=a}"记作为公式结构
显示公式结构

公式结构转换为"Python"
n=zeros(size(x));
n(a>=b)=a;
n(b<=a)=b;



## end
#341, 80:
a=1
b=2

if a>b:
    b=a
elif a==b:
    a=b
elif a>=3*b:
    a=b
else:
    a=b


## end
#343, 362:
起点#0""(,块#1)
块#1"a=1
b=2
"(,)
块#2""(,)
然后#3""(块#1,块#2)
块#4"b=a
"(,)
if#5"a>b"(块#2,块#4)
eof#6""(,)
然后#7""(块#4,eof#6)
eof#8""(,)
然后#9""(块#10,eof#8)
块#10"a=b
"(,)
elif#11"a==b"(if#5,块#10)
eof#12""(,)
然后#13""(块#14,eof#12)
块#14"a=b
"(,)
elif#15"a>=3*b"(elif#11,块#14)
块#16"a=b
"(,)
else#17""(if#5,块#16)
eof#18""(,)
然后#19""(块#16,eof#18)
eof#20""(,)
然后#21""(块#2,eof#20)

## end
#345, 49:
a=1;
b=2;
if(a>b) {
    b=a;
}

else {
    a=b;
}
## end
#347, 58:
n(x)=\begin{cases}
a, & a\ge b\\ b, & b\le a
\end{cases}


## end
#348, 25:
n(x)=\eqs{a,a>=b;
b,b<=a}
## end
#352, 496:
"""


"""
+产生代码(,_凭依)->+[del](,+产生代码)...

->的(_凭依,公式结构)...
    ->的(公式结构,参数方程)->的(参数方程,表达式#0)...
    ->的(公式结构,密度函数)->的(密度函数,表达式#1)...

->的(_凭依,输出代码)...
->[]{
    []:->的(_凭依,类型)->类型(,)...
        ->+[算式结构转换](表达式#0,+[修改内容]#1)->+[修改内容]#1(,输出代码)...
            ->[m_text](类型,+[算式结构转换])...
        ->+[算式结构转换](表达式#1,+[增加内容]#1)->+[增加内容]#1(,输出代码)...
            ->[m_text](类型,+[算式结构转换]),

    ->+[算式结构转换]"Python"(表达式#0,+[修改内容])->+[修改内容](,输出代码)...
    ->+[算式结构转换]"Python"(表达式#1,+[增加内容])->+[增加内容](,输出代码)

}
## end
#353, 1:
1
## end
#355, 661:
长度是L. 宽度是W. 角度是\theta. 空间点是(x_0,y_0)
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)

+[修改标题]"方程公式"(,区域)
方程公式:...
将"\eqs{(x-x_A)*x_1+(y-y_A)*y_1>=0;
-(x-x_A)*x_2-(y-y_A)*y_2>=0;
-(x-x_B)*x_1-(y-y_B)*y_1>=0;
(x-x_B)*x_2+(y-y_B)*y_2>=0}"记作为方程公式

将"x_1=cos(\theta)"代入到方程公式
将"y_1=sin(\theta)"代入到方程公式
将"x_2=-sin(\theta)"代入到方程公式
将"y_2=cos(\theta)"代入到方程公式
方程公式转换为"表达式"

更新方程公式
显示方程公式


参数公式:...
将"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}"记作为参数公式

更新参数公式
显示参数公式

的(方程公式,表达式)->+[生成区域](表达式,表达式)->+[更新公式起点](,表达式)
的(方程公式,表达式)->+[设置结构](,表达式)
的(方程公式,表达式)->+[删除结构](,表达式)
的(参数公式,表达式)->+[删除结构](,表达式)
## end
#357, 661:
长度是L. 宽度是W. 角度是\theta. 空间点是(x_0,y_0)
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)

+[修改标题]"方程公式"(,区域)
方程公式:...
将"\eqs{(x-x_A)*x_1+(y-y_A)*y_1>=0;
-(x-x_A)*x_2-(y-y_A)*y_2>=0;
-(x-x_B)*x_1-(y-y_B)*y_1>=0;
(x-x_B)*x_2+(y-y_B)*y_2>=0}"记作为方程公式

将"x_1=cos(\theta)"代入到方程公式
将"y_1=sin(\theta)"代入到方程公式
将"x_2=-sin(\theta)"代入到方程公式
将"y_2=cos(\theta)"代入到方程公式
方程公式转换为"表达式"

更新方程公式
显示方程公式


参数公式:...
将"\eqs{x_A=x_0-L/2*sin(\theta);
y_A=y_0+L/2*cos(\theta);
x_B=x_0+L/2*sin(\theta)+W*cos(\theta);
y_B=y_0-L/2*cos(\theta)+W*sin(\theta)}"记作为参数公式

更新参数公式
显示参数公式

的(方程公式,表达式)->+[生成区域](表达式,表达式)->+[更新公式起点](,表达式)
的(方程公式,表达式)->+[设置结构](,表达式)
的(方程公式,表达式)->+[删除结构](,表达式)
的(参数公式,表达式)->+[删除结构](,表达式)
## end
#360, 6:
Matlab
## end
#361, 1743:
模拟结构#0"+[生成Smilei代码_结构](模拟结构,)
+[记录星辰]\"Smilei模板\"(,模拟结构)

有参考波长, 模拟空间, 窗口, 电子, 光束和探测场
参考波长是\"1800e-9\"

模拟空间是长方形(0.3e-3,200e-6)
模拟空间再(0,0)

窗口是长方形(80e-6,200e-6)
窗口在模拟空间的位置
窗口有速度和启动时间
窗口的速度是\"0.999\"
窗口的启动时间是\"250e-15\"

电子有数密度, gamma和beta_r
电子的数密度是\"1e25\"
电子的gamma是\"1\"
电子的beta_r是\"0,0,1\"

光束是长方形(300e-6,20e-6)
光束在模拟空间的位置
光束有偏振态和焦点位置
光束的焦点位置是A
光束的偏振态是(1,0)

A::
A距离光束为(100e-6,0)

+[显示PPT场景](,模拟结构)"(,)
的#1""(模拟结构#0,参考波长#2)
参考波长#2"1800e-9"(,)
的#3""(模拟结构#0,模拟空间#4)
模拟空间#4"多边形"(,)
在#5""(模拟空间#4,空间点#6)
空间点#6"0.0, 0.0"(,)
的#7""(模拟空间#4,类型#8)
类型#8"长方形"(,)
的#9""(模拟空间#4,长度#10)
长度#10"0.0002"(,)
的#11""(模拟空间#4,宽度#12)
宽度#12"0.0003"(,)
的#13""(模拟空间#4,x#14)
x#14"0.0, 0.0, 0.0003, 0.0003"(,)
的#15""(模拟空间#4,y#16)
y#16"-0.0001, 0.0001, 0.0001, -0.0001"(,)
的#17""(模拟结构#0,窗口#18)
窗口#18"多边形"(,)
在#19""(窗口#18,空间点#20)
空间点#20"0.0, 0.0"(,)
的#21""(窗口#18,类型#22)
类型#22"长方形"(,)
的#23""(窗口#18,长度#24)
长度#24"0.0002"(,)
的#25""(窗口#18,宽度#26)
宽度#26"8e-05"(,)
的#27""(窗口#18,x#28)
x#28"0.0, 0.0, 8e-05, 8e-05"(,)
的#29""(窗口#18,y#30)
y#30"-0.0001, 0.0001, 0.0001, -0.0001"(,)
的#31""(窗口#18,速度#32)
速度#32"0.999"(,)
的#33""(窗口#18,启动时间#34)
启动时间#34"250e-15"(,)
的#35""(模拟结构#0,电子#36)
电子#36""(,)
的#37""(电子#36,数密度#38)
数密度#38"1e25"(,)
的#39""(电子#36,gamma#40)
gamma#40"1"(,)
的#41""(电子#36,beta_r#42)
beta_r#42"0,0,1"(,)
的#43""(模拟结构#0,光束#44)
光束#44"多边形"(,)
在#45""(光束#44,空间点#46)
空间点#46"0.0, 0.0"(,)
的#47""(光束#44,类型#48)
类型#48"长方形"(,)
的#49""(光束#44,长度#50)
长度#50"2e-05"(,)
的#51""(光束#44,宽度#52)
宽度#52"0.0003"(,)
的#53""(光束#44,x#54)
x#54"0.0, 0.0, 0.0003, 0.0003"(,)
的#55""(光束#44,y#56)
y#56"-1e-05, 1e-05, 1e-05, -1e-05"(,)
的#57""(光束#44,偏振态#58)
偏振态#58"1,0"(,)
的#59""(光束#44,焦点位置#60)
焦点位置#60""(,A#64)
的#61""(模拟结构#0,探测场#62)
探测场#62""(,)
的#63""(模拟结构#0,A#64)
A#64""(,)
在#65""(A#64,空间点#66)
空间点#66"0.0001, 0.0"(,)

## end
#363, 18002:
预览动画#0"+[设置结构](,预览动画)
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)


代码结构:...
输出代码:...

"(,)
的#1""(预览动画#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开天书(文件)
记住\"Python\"
state=(not (1==1.0))
print(state)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成Smilei预览动画\"(,召唤星辰)...
->的(_媒介,模拟空间)->的(_媒介,窗口)...

->+生成代码(_凭依,_凭依)->+的(操作,+生成代码)...
->+设置框架(_媒介,_凭依)->+的(操作,+设置框架)...
->[]{
    []=>的(_媒介,_物体)->_物体=>[]:
        ->的(_物体,gamma)->[python]\"state=(not (ans[0]==1.0))\"(Python,gamma)...
            ->在(_物体,空间点)->+设置运动电子(_物体,_凭依)->+的(操作,+设置运动电子),
        ->的(_物体,数密度)->+设置电子(_物体,_凭依)->+的(操作,+设置电子),
        ->的(_物体,输入边)->[==]\"ymin\"(,输入边)...
            ->+设置光束2(_物体,_凭依)->+的(操作,+设置光束2),
        ->的(_物体,焦点位置)->+设置光束(_物体,_凭依)->+的(操作,+设置光束),
        ->[]
}...
->[]{
    []=>的(_媒介,_电子)->_电子->的(_电子,数密度)->数密度(,_函数)->的(_函数,表达式)...
    =>+函数转换(表达式,_函数)->+的(操作,+函数转换)
}

"(,)
的#3""(预览动画#0,降临规则#4)
降临规则#4"样本代码:...
+[新建阅读窗口](,样本代码)

函数转换:...

设置框架:...
设置电子:...
设置运动电子:...
设置光束:...
设置光束2:...
生成代码:...
+[新建阅读窗口](,设置光束)
将条目\"设置光束\"复制为条目\"设置光束2\"
设置电子的\"光束\"替换为\"电子\"

"(,)
的#5""(降临规则#4,样本代码#6)
样本代码#6"%{
+[M函数](,样本代码)
记住\"Matlab\"
保存:...
%}

physics_constant;
lm0=800e-9;
% lm0=0.1;

v=v0*c;
Nt=100;
w_0=L2/2;
pt1(1)=pt0(1);
pt1(2)=pt0(2);
pt2(1)=pt0(1);
pt2(2)=pt3(2);

DW=W0-W1;
Dt=DW/v;
t=linspace(0,t0+Dt,Nt);
x0=0;
x1=0;
W2=W0;

% Gaussian beam
z_R=w_0^2*pi/lm0;
z=linspace(pt0(1),pt0(1)+W0,100);
w=w_0.*sqrt(1+((z-pt3(1))./(z_R)).^(2));

clf
patch([z,fliplr(z)],pt3(2)+[w/2,-fliplr(w)/2],[1,0,0],'FaceAlpha',0.2)
rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[0,0,1,0.2]);
h2=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,0,0.2]);
h3=rectangle('Position',[pt2(1)-W1/2,pt2(2)-L2/2,W1/2,L2],'Curvature',[1,1],'FaceColor',[1,0.5,0,0.8]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])



for i=1:length(t)

if t(i)>t0
    x0=v*(t(i)-t0);
end
x1=c*t(i);

w_x1=w_0.*sqrt(1+((x1+pt2(1)-W1/2-pt3(1))./(z_R)).^(2));

h2.Position(1)=x0+pt1(1);
h3.Position(1)=x1+pt2(1)-W1/2;
h3.Position(2)=pt2(2)-w_x1/2;
h3.Position(4)=w_x1;
title(sprintf('T=%.2f fs',t(i)/1e-15))
pause(0.03)
end


%{
+[M函数](,M代码)
%}"(,)
的#7""(样本代码#6,保存#8)
保存#8"%{
+[M函数](,样本代码)
记住\"Matlab\"
%}

physics_constant;
lm0=800e-9;
% lm0=0.1;

v=v0*c;
Nt=100;
w_0=L2/2;
pt1(1)=pt0(1);
pt1(2)=pt0(2);
pt2(1)=pt0(1);
pt2(2)=pt3(2);

DW=W0-W1;
Dt=DW/v;
t=linspace(0,t0+Dt,Nt);
x0=0;
x1=0;
W2=W0;

% Gaussian beam
z_R=w_0^2*pi/lm0;
z=linspace(pt0(1),pt0(1)+W0,100);
w=w_0.*sqrt(1+((z-pt3(1))./(z_R)).^(2));

clf
patch([z,fliplr(z)],pt3(2)+[w/2,-fliplr(w)/2],[1,0,0],'FaceAlpha',0.2)
rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[0,0,1,0.2]);
h2=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,0,0.2]);
h3=rectangle('Position',[pt2(1)-W1/2,pt2(2)-L2/2,W1/2,L2],'Curvature',[1,1],'FaceColor',[1,0.5,0,0.8]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

%for i=1
for i=1:length(t)
if t(i)>t0
x0=v*(t(i)-t0);
end
x1=c*t(i);

w_x1=w_0.*sqrt(1+((x1+pt2(1)-W1/2-pt3(1))./(z_R)).^(2));

h2.Position(1)=x0+pt1(1);
h3.Position(1)=x1+pt2(1)-W1/2;
h3.Position(2)=pt2(2)-w_x1/2;
h3.Position(4)=w_x1;
title(sprintf('T=%.2f fs',t(i)/1e-15))
pause(0.03)
end


%{
+[M函数](,M代码)
%}"(,)
的#9""(降临规则#4,设置框架#10)
设置框架#10"\"\"\"
M代码:...
M模板_初始化:...
M模板_画图:...
M模板_动画:...
+[新建阅读窗口](,M代码)

保存:...

\"\"\"

+设置框架(_媒介,_凭依)->+[del](,+设置框架)...
->的(设置框架,M代码)...
->的(设置框架,M模板_初始化)->的(设置框架,M模板_画图)->的(设置框架,M模板_动画)...

->的(_媒介,模拟空间)...
->的(模拟空间,长度#0)->的(模拟空间,宽度#0)...
->的(_媒介,窗口)...
->的(窗口,长度#1)->的(窗口,宽度#1)...
->的(窗口,启动时间)...

->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,框架代码)...
->的(框架代码,初始化)->的(框架代码,画图)->的(框架代码,动画)...

->+[修改内容](M模板_画图,画图)->+[修改内容](M模板_动画,动画)...
->+[模板文本](M模板_初始化,初始化)...
->+[.]\"长度0\"(+[模板文本],长度#0)->+[.]\"宽度0\"(+[模板文本],宽度#0)...
->+[.]\"长度1\"(+[模板文本],长度#1)->+[.]\"宽度1\"(+[模板文本],宽度#1)...
->+[.](+[模板文本],启动时间)...

->[]{
    []:->在(模拟空间,空间点#0)->空间点#0->+[.]\"空间点0\"(+[模板文本],空间点#0),
    ->+[.]\"空间点0\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...

->[]{
    []:->在(窗口,空间点#1)->空间点#1->+[.]\"空间点1\"(+[模板文本],空间点#1),
    ->+[.]\"空间点1\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...

->[]{
    []:->的(窗口,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}

"(,)
的#11""(设置框架#10,M模板_画图#12)
M模板_画图#12"
rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

"(,)
的#13""(设置框架#10,M模板_初始化#14)
M模板_初始化#14"physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=%速度*c;
t0=%启动时间;
Nt=100;
pt0=[%空间点0];
pt1=[%空间点1];
L0=%长度0;
L1=%长度1;
W0=%宽度0;
W1=%宽度1;

DW=%宽度0-%宽度1;
Dt=DW/v;
if v==0
    Dt=0;
end
t=linspace(0,t0+Dt,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

"(,)
的#15""(设置框架#10,M代码#16)
M代码#16"%{
+[M函数](,M代码)
%}

physics_constant;
lm_0=800e-9;

v=v0*c;
Nt=100;
pt1(1)=pt0(1);
pt1(2)=pt0(2);

DW=W0-W1;
Dt=DW/v;
t=linspace(0,t0+Dt,Nt);
x0=0;
x1=0;


clf
rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[0,0,1,0.2]);
h2=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,0,0.2]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


for i=1:length(t)

if t(i)>t0
    x0=v*(t(i)-t0);
end
x1=c*t(i);
h2.Position(1)=x0+pt1(1);
title(sprintf('T=%.2f fs',t(i)/1e-15))

pause(0.03)
end


%{
+[M函数](,M代码)
%}"(,)
的#17""(设置框架#10,M模板_动画#18)
M模板_动画#18"if t(i)>t0
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

"(,)
的#19""(设置框架#10,保存#20)
保存#20"\"\"\"
M代码:...
M模板_初始化:...
M模板_画图:...
M模板_动画:...
+[新建阅读窗口](,M代码)

保存:...

\"\"\"

+设置框架(_媒介,_凭依)->+[del](,+设置框架)...
->的(设置框架,M代码)...
->的(设置框架,M模板_初始化)->的(设置框架,M模板_画图)->的(设置框架,M模板_动画)...

->的(_媒介,模拟空间)...
->的(模拟空间,长度#0)->的(模拟空间,宽度#0)->在(模拟空间,空间点#0)...
->的(_媒介,窗口)...
->的(窗口,长度#1)->的(窗口,宽度#1)->在(窗口,空间点#1)...
->的(窗口,启动时间)...

->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,框架代码)...
->的(框架代码,初始化)->的(框架代码,画图)->的(框架代码,动画)...

->+[修改内容](M模板_画图,画图)->+[修改内容](M模板_动画,动画)...
->+[模板文本](M模板_初始化,初始化)...
->+[.]\"长度0\"(+[模板文本],长度#0)->+[.]\"宽度0\"(+[模板文本],宽度#0)...
->+[.]\"空间点0\"(+[模板文本],空间点#0)...
->+[.]\"长度1\"(+[模板文本],长度#1)->+[.]\"宽度1\"(+[模板文本],宽度#1)...
->+[.]\"空间点1\"(+[模板文本],空间点#1)->+[.](+[模板文本],启动时间)...

->[]{
    []:->在(模拟空间,空间点#0)->空间点#0->+[.](+[模板文本],空间点#0),
    ->+[.]\"空间点0\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...

->[]{
    []:->在(窗口,空间点#1)->空间点#1->+[.](+[模板文本],空间点#1),
    ->+[.]\"空间点1\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...

->[]{
    []:->的(窗口,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}

"(,)
的#21""(降临规则#4,设置运动电子#22)
设置运动电子#22"\"\"\"
M模板_初始化:...
M模板_画图:...
M模板_动画:...
+[新建阅读窗口](,M模板_初始化)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+设置运动电子(_电子,_凭依)->+[del](,+设置运动电子)...
->的(设置运动电子,M模板_初始化)->的(设置运动电子,M模板_画图)...
->的(设置运动电子,M模板_动画)->的(设置运动电子,M代码)...

->的(_电子,beta_r)->的(_电子,gamma)...
->在(_电子,空间点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.](+[matlab],beta_r)->+[.](+[matlab],gamma)...
->+[o]\"v\"(+[matlab],+[临时文本]#v)...

->[]{
    []:->的(_凭依,序号)->序号->+[python]\"ans=int(n[0])+1
print(n)\"(Python,序号)->+[.]\"n\"(+[python],序号),
    ->+的(_凭依,+序号)->+序号\"2\"
}...
->的(_凭依,序号)...
->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,粒子代码)...
->+的(粒子代码,+初始化)->+的(粒子代码,+画图)->+的(粒子代码,+动画)...

->+[模板文本](M模板_初始化,+初始化)->+[.]\"n\"(+[模板文本],序号)...
->+[.]\"v\"(+[模板文本],+[临时文本]#v)->+[.]\"pt\"(+[模板文本],空间点)...

->+[模板文本](M模板_画图,+画图)->+[.]\"n\"(+[模板文本],序号)...
->+[模板文本](M模板_动画,+动画)->+[.]\"n\"(+[模板文本],序号)


"(,)
的#23""(设置运动电子#22,M模板_初始化#24)
M模板_初始化#24"v%n=[%v]*c;
v_n%n=v%n/norm(v%n);
pt_e%n=[%pt];
"(,)
的#25""(设置运动电子#22,M模板_画图#26)
M模板_画图#26"h_p%n=plot(pt_e%n(1),pt_e%n(2),'r*');
h_t%n=text(pt_e%n(1),pt_e%n(2),'electron%n');
plot([pt_e%n(1),pt_e%n(1)+v%n(1)*t(end)],[pt_e%n(2),pt_e%n(2)+v%n(2)*t(end)],'k--');
"(,)
的#27""(设置运动电子#22,M模板_动画#28)
M模板_动画#28"x%n=pt_e%n(1)+v%n(1)*t(i);
y%n=pt_e%n(2)+v%n(2)*t(i);
h_p%n.XData=x%n;
h_p%n.YData=y%n;
h_t%n.Position(1)=x%n;
h_t%n.Position(2)=y%n;
"(,)
的#29""(设置运动电子#22,M代码#30)
M代码#30"%{

%}

beta0=(sqrt(gamma.^(2)-1))./(gamma);
v=beta_r/norm(beta_r)*beta0;

"(,)
的#31""(降临规则#4,设置光束2#32)
设置光束2#32"\"\"\"
M代码:...
M模板_初始化:...
M模板_画图:...
M模板_动画:...
M模板_画图2:...
M模板_动画2:...
+[新建阅读窗口](,M模板_画图2)
h=patch()
get(h)
记住\"Matlab\"

\"\"\"

+设置光束2(_光束,_凭依)->+[del](,+设置光束2)...
->的(设置光束2,M代码)...
->的(设置光束2,M模板_初始化)->的(设置光束2,M模板_画图)->的(设置光束2,M模板_动画)...
->的(设置光束2,M模板_画图2)->的(设置光束2,M模板_动画2)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...

->[]{
    []:->的(_凭依,序号)->序号->+[python]\"ans=int(n[0])+1
print(n)\"(Python,序号)->+[.]\"n\"(+[python],序号),
    ->+的(_凭依,+序号)->+序号\"2\"
}...
->的(_凭依,序号)...
->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,光束代码)...
->+的(光束代码,+初始化)->+的(光束代码,+画图)->+的(光束代码,+动画)...

->+[模板文本](M模板_初始化,+初始化)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->+[.]\"焦点坐标\"(+[模板文本],空间点#A)->+[.]\"n\"(+[模板文本],序号)...

->[]{
    []:->[==]\"inf\"(,展宽)...
        ->+[模板文本](M模板_画图2,+画图)->+[.]\"n\"(+[模板文本],序号)...
        ->+[模板文本](M模板_动画2,+动画)->+[.]\"n\"(+[模板文本],序号),
        
    ->+[模板文本](M模板_画图,+画图)->+[.]\"n\"(+[模板文本],序号)...
    ->+[模板文本](M模板_动画,+动画)->+[.]\"n\"(+[模板文本],序号)
}...

->[]{
    []:->的(_光束,a0)->a0(,)...
        ->+[.]([python],a0)->[python]\"state=(a0[0]==0)\"(Python,)...
        ->+[del](,+画图)->+[del](,+动画)->+[del](,+初始化),
    ->[]
}

"(,)
的#33""(设置光束2#32,M代码#34)
M代码#34"%{
+[M函数](,M代码)
%}


w_0=L2;
% Gaussian beam
z_R=w_0^2*pi/lm_0;
z=linspace(pt0(1),pt0(1)+W0,100);
w=w_0.*sqrt(1+((z-pt3(1))./(z_R)).^(2));

patch([z,fliplr(z)],pt3(2)+[w/2,-fliplr(w)/2],[1,0,0],'FaceAlpha',0.2)
h3=rectangle('Position',[pt2(1)-W1/2,pt2(2)-L2/2,W1/2,L2],'Curvature',[1,1],'FaceColor',[1,0.5,0,0.8]);

for i=1:length(t)

if t(i)>t0
    x0=v*(t(i)-t0);
end
x1=c*t(i);

w_x1=w_0.*sqrt(1+((x1+pt2(1)-W1/2-pt3(1))./(z_R)).^(2));

h3.Position(1)=x1+pt2(1)-W1/2;
h3.Position(2)=pt2(2)-w_x1/2;
h3.Position(4)=w_x1;
title(sprintf('T=%.2f fs',t(i)/1e-15))
pause(0.03)
end





%{
+[M函数](,M代码)
%}"(,)
的#35""(设置光束2#32,M模板_初始化#36)
M模板_初始化#36"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;
% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z%n=linspace(pt0(2)-L0/2,pt0(2)-L0/2+L0,100);
w%n=w_0%n.*sqrt(1+((z%n-focus%n(2))./(z_R%n)).^(2));

"(,)
的#37""(设置光束2#32,M模板_画图#38)
M模板_画图#38"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.2)
h%n=rectangle('Position',[pt1(1)-c*tau%n,pt1(2)-w%n(1)/2,c*tau%n,w%n(1)],'Curvature',[1,1],'FaceColor',[1,0.5,0,0.8]);
"(,)
的#39""(设置光束2#32,M模板_动画#40)
M模板_动画#40"w_z%n=w_0%n.*sqrt(1+((c*t(i)+pt1(1)-focus%n(1))./(z_R%n)).^(2));

h%n.Position(1)=c*t(i)+pt1(1)-c*tau%n;
h%n.Position(2)=focus%n(2)-w_z%n/2;
h%n.Position(4)=w_z%n;

"(,)
的#41""(设置光束2#32,M模板_画图2#42)
M模板_画图2#42"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.1)
h%n=patch(focus%n(1)+[w%n(1)/2,-fliplr(w%n(1))/2],[z%n(1),fliplr(z%n(1))],[1,0,0],'FaceAlpha',0.2);
"(,)
的#43""(设置光束2#32,M模板_动画2#44)
M模板_动画2#44"z_t0_%n=c*t(i)+pt1(1);
z_t%n=z%n(z%n<z_t0_%n);
w_t%n=w%n(z%n<z_t0_%n);
h%n.XData=focus%n(1)+[w_t%n/2,-fliplr(w_t%n)/2];
h%n.YData=[z_t%n,fliplr(z_t%n)];
"(,)
的#45""(降临规则#4,生成代码#46)
生成代码#46"\"\"\"
M模板:...
M代码:...

保存:...

\"\"\"

+生成代码(,_凭依)->+[del](,+生成代码)...
->的(生成代码,M模板)->的(生成代码,M代码)...

->的(_凭依,代码结构)->的(代码结构,代码内容)...
->的(代码内容,框架代码)->的(代码内容,光束代码)->的(代码内容,粒子代码)...

->的(_凭依,输出代码)...

->的(框架代码,初始化)->+[修改内容](初始化,+[临时文本]#初始化)...
->[]{
    []=>的(光束代码,初始化#1)->初始化#1=>+[增加内容](初始化#1,+[临时文本]#初始化)
}...
->[]{
    []=>的(粒子代码,初始化#1)->初始化#1=>+[增加内容](初始化#1,+[临时文本]#初始化)
}...

->+[临时文本]#画图->[]{
    []=>的(粒子代码,画图#1)->画图#1=>+[增加内容](画图#1,+[临时文本]#画图)
}...
->的(框架代码,画图)->+[增加内容](画图,+[临时文本]#画图)...
->[]{
    []=>的(光束代码,画图#1)->画图#1=>+[增加内容](画图#1,+[临时文本]#画图)
}...

->+[临时文本]#动画->的(框架代码,动画)->+[增加内容](动画,+[临时文本]#动画)...
->[]{
    []=>的(粒子代码,动画#1)->动画#1=>+[增加内容](动画#1,+[临时文本]#动画)
}...
->[]{
    []=>的(光束代码,动画#1)->动画#1=>+[增加内容](动画#1,+[临时文本]#动画)
}...

->+[模板文本](M模板,M代码)...
->+[.]\"初始化\"(+[模板文本],+[临时文本]#初始化)...
->+[.]\"画图\"(+[模板文本],+[临时文本]#画图)...
->+[.]\"动画\"(+[模板文本],+[临时文本]#动画)...
->+[修改内容](M代码,_凭依)...

->+[删除结构](,_凭依)


"(,)
的#47""(生成代码#46,M模板#48)
M模板#48"%{
+[M函数](,输出代码)
%}


%初始化

clf
hold on
%画图
colorbar

for i=1:length(t)

%动画

title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end
"(,)
的#49""(生成代码#46,M代码#50)
M代码#50""(,)
的#51""(生成代码#46,保存#52)
保存#52"\"\"\"
M模板:...
M代码:...

\"\"\"

+生成代码(,_凭依)->+[del](,+生成代码)...
->的(生成代码,M模板)->的(生成代码,M代码)...

->的(_凭依,代码结构)->的(代码结构,代码内容)...
->的(代码内容,框架代码)->的(代码内容,光束代码)->的(代码内容,粒子代码)...

->的(_凭依,输出代码)...

->的(框架代码,初始化)->+[修改内容](初始化,+[临时文本]#初始化)...
->[]{
    []=>的(光束代码,初始化#1)->初始化#1=>+[增加内容](初始化#1,+[临时文本]#初始化)
}...
->[]{
    []=>的(粒子代码,初始化#1)->初始化#1=>+[增加内容](初始化#1,+[临时文本]#初始化)
}...

->+[临时文本]#画图->[]{
    []=>的(粒子代码,画图#1)->画图#1=>+[增加内容](画图#1,+[临时文本]#画图)
}...
->的(框架代码,画图)->+[增加内容](画图,+[临时文本]#画图)...
->[]{
    []=>的(光束代码,画图#1)->画图#1=>+[增加内容](画图#1,+[临时文本]#画图)
}...

->+[临时文本]#动画->的(框架代码,动画)->+[增加内容](动画,+[临时文本]#动画)...
->[]{
    []=>的(粒子代码,动画#1)->动画#1=>+[增加内容](动画#1,+[临时文本]#动画)
}...
->[]{
    []=>的(光束代码,动画#1)->动画#1=>+[增加内容](动画#1,+[临时文本]#动画)
}...

->+[模板文本](M模板,M代码)...
->+[.]\"初始化\"(+[模板文本],+[临时文本]#初始化)...
->+[.]\"画图\"(+[模板文本],+[临时文本]#画图)...
->+[.]\"动画\"(+[模板文本],+[临时文本]#动画)...
->+[修改内容](M代码,输出代码)

"(,)
的#53""(降临规则#4,设置电子#54)
设置电子#54"\"\"\"
M模板_初始化:...
M模板_初始化2:...
M模板_画图:...
+[新建阅读窗口](,M模板_初始化)

\"\"\"

+设置电子(_电子,_凭依)->+[del](,+设置电子)...
->的(设置电子,M模板_初始化)->的(设置电子,M模板_初始化2)->的(设置电子,M模板_画图)...

->的(_电子,数密度)->数密度(,_代码)...

->[]{
    []:->的(_凭依,序号)->序号->+[python]\"ans=int(n[0])+1
print(n)\"(Python,序号)->+[.]\"n\"(+[python],序号),
    ->+的(_凭依,+序号)->+序号\"2\"
}...
->的(_凭依,序号)...
->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,粒子代码)...
->+的(粒子代码,+初始化)->+的(粒子代码,+画图)...

->+[模板文本](,+初始化)->+[.]\"n\"(+[模板文本],序号)...
->[]{
    []:->_代码->+[code](+[模板文本],M模板_初始化)...
        ->+[.]\"代码\"(+[模板文本],_代码),
    ->+[code](+[模板文本],M模板_初始化2)->[]{
        []:->[==](,数密度)->+[.]\"数密度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\",
        ->+[.](+[模板文本],数密度)
    }
}...

->+[模板文本](M模板_画图,+画图)->+[.]\"n\"(+[模板文本],序号)


"(,)
的#55""(设置电子#54,M模板_画图#56)
M模板_画图#56"contourf(x,y,n%n);
"(,)
的#57""(设置电子#54,M模板_初始化#58)
M模板_初始化#58"%代码
n%n=n;

"(,)
的#59""(设置电子#54,M模板_初始化2#60)
M模板_初始化2#60"n%n=%数密度*ones(size(x));

"(,)
的#61""(降临规则#4,函数转换#62)
函数转换#62"\"\"\"


\"\"\"

+函数转换(表达式,_函数)->+[del](,+函数转换)...

->+[表达式转结构](表达式,表达式)->+[算式结构转换]\"Matlab\"(表达式,+[修改内容])...
->+[修改内容](,_函数)
"(,)
的#63""(降临规则#4,设置光束#64)
设置光束#64"\"\"\"
M代码:...
M模板_初始化:...
M模板_画图:...
M模板_动画:...
M模板_画图2:...
M模板_动画2:...
+[新建阅读窗口](,M模板_画图2)
h=patch()
get(h)
记住\"Matlab\"
[python]\"print(0==0)\"(Python,)

\"\"\"

+设置光束(_光束,_凭依)->+[del](,+设置光束)...
->的(设置光束,M代码)...
->的(设置光束,M模板_初始化)->的(设置光束,M模板_画图)->的(设置光束,M模板_动画)...
->的(设置光束,M模板_画图2)->的(设置光束,M模板_动画2)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...

->[]{
    []:->的(_凭依,序号)->序号->+[python]\"ans=int(n[0])+1
print(n)\"(Python,序号)->+[.]\"n\"(+[python],序号),
    ->+的(_凭依,+序号)->+序号\"2\"
}...
->的(_凭依,序号)...
->的(_凭依,代码结构)->的(代码结构,代码内容)->的(代码内容,光束代码)...
->+的(光束代码,+初始化)->+的(光束代码,+画图)->+的(光束代码,+动画)...

->+[模板文本](M模板_初始化,+初始化)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->+[.]\"焦点坐标\"(+[模板文本],空间点#A)->+[.]\"n\"(+[模板文本],序号)...

->[]{
    []:->[==]\"inf\"(,展宽)...
        ->+[模板文本](M模板_画图2,+画图)->+[.]\"n\"(+[模板文本],序号)...
        ->+[模板文本](M模板_动画2,+动画)->+[.]\"n\"(+[模板文本],序号),
        
    ->+[模板文本](M模板_画图,+画图)->+[.]\"n\"(+[模板文本],序号)...
    ->+[模板文本](M模板_动画,+动画)->+[.]\"n\"(+[模板文本],序号)
}...

->[]{
    []:->的(_光束,a0)->a0(,)...
        ->+[.]([python],a0)->[python]\"state=(a0[0]==0)\"(Python,)...
        ->+[del](,+画图)->+[del](,+动画)->+[del](,+初始化),
    ->[]
}


"(,)
的#65""(设置光束#64,M模板_动画2#66)
M模板_动画2#66"z_t0_%n=c*t(i)+pt1(1);
z_t%n=z(z<z_t0_%n);
w_t%n=w%n(z<z_t0_%n);
h%n.XData=[z_t%n,fliplr(z_t%n)];
h%n.YData=focus%n(2)+[w_t%n/2,-fliplr(w_t%n)/2];
"(,)
的#67""(设置光束#64,M模板_画图2#68)
M模板_画图2#68"patch([z,fliplr(z)],focus%n(2)+[w%n/2,-fliplr(w%n)/2],[1,0,0],'FaceAlpha',0.1);
h%n=patch([z(1),fliplr(z(1))],focus%n(2)+[w%n(1)/2,-fliplr(w%n(1))/2],[1,0,0],'FaceAlpha',0.2);
"(,)
的#69""(设置光束#64,M模板_动画#70)
M模板_动画#70"w_z%n=w_0%n.*sqrt(1+((c*t(i)+pt1(1)-focus%n(1))./(z_R%n)).^(2));

h%n.Position(1)=c*t(i)+pt1(1)-c*tau%n*1.2;
h%n.Position(2)=focus%n(2)-w_z%n/2;
h%n.Position(4)=w_z%n;

"(,)
的#71""(设置光束#64,M模板_画图#72)
M模板_画图#72"patch([z,fliplr(z)],focus%n(2)+[w%n/2,-fliplr(w%n)/2],[1,0,0],'FaceAlpha',0.2)
h%n=rectangle('Position',[pt1(1)-c*tau%n*1.2,pt1(2)-w%n(1)/2,c*tau%n/sqrt(2),w%n(1)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);
"(,)
的#73""(设置光束#64,M模板_初始化#74)
M模板_初始化#74"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;
% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z=linspace(pt0(1),pt0(1)+W0,100);
w%n=w_0%n.*sqrt(1+((z-focus%n(1))./(z_R%n)).^(2));

"(,)
的#75""(设置光束#64,M代码#76)
M代码#76"%{
+[M函数](,M代码)
%}


w_0=L2;
% Gaussian beam
z_R=w_0^2*pi/lm_0;
z=linspace(pt0(1),pt0(1)+W0,100);
w=w_0.*sqrt(1+((z-pt3(1))./(z_R)).^(2));

patch([z,fliplr(z)],pt3(2)+[w/2,-fliplr(w)/2],[1,0,0],'FaceAlpha',0.2)
h3=rectangle('Position',[pt2(1)-W1/2,pt2(2)-L2/2,W1/2,L2],'Curvature',[1,1],'FaceColor',[1,0.5,0,0.8]);

for i=1:length(t)

if t(i)>t0
    x0=v*(t(i)-t0);
end
x1=c*t(i);

w_x1=w_0.*sqrt(1+((x1+pt2(1)-W1/2-pt3(1))./(z_R)).^(2));

h3.Position(1)=x1+pt2(1)-W1/2;
h3.Position(2)=pt2(2)-w_x1/2;
h3.Position(4)=w_x1;
title(sprintf('T=%.2f fs',t(i)/1e-15))
pause(0.03)
end





%{
+[M函数](,M代码)
%}"(,)
的#77""(预览动画#0,代码结构#78)
代码结构#78"Nini, 打开编程语言parser(文件)

样本代码:...
代码框架:...
生成代码:...
+[新建阅读窗口](,样本代码)

代码内容:...
+[设置结构](,代码内容)
代码内容有什么
代码内容的框架代码有什么

将样本代码解析为代码框架
按照\"Python\", 将代码框架转换为生成代码
+[显示星图](,代码框架)



"(,)
的#79""(代码结构#78,代码框架#80)
代码框架#80"起点#0\"\"(,块#1)
块#1\"初始化
\"(,)
块#2\"\"(,)
然后#3\"\"(块#1,块#2)
块#4\"运动
\"(,)
for#5\"条件\"(块#2,块#4)
变量#6\"i\"(for#5,)
eof#7\"\"(,)
然后#8\"\"(块#4,eof#7)
eof#9\"\"(,)
然后#10\"\"(块#2,eof#9)
"(,)
的#81""(代码结构#78,样本代码#82)
样本代码#82"
初始化
for i in 条件:
    运动



"(,)
的#83""(代码结构#78,生成代码#84)
生成代码#84"初始化
for i in 条件:
    运动"(,)
的#85""(代码结构#78,代码内容#86)
代码内容#86"
有框架代码, 光束代码和粒子代码

框架代码有初始化, 画图和动画
+[设置结构](,框架代码)

显示框架代码的初始化

"(,)
的#87""(代码内容#86,框架代码#88)
框架代码#88""(,)
的#89""(框架代码#88,初始化#90)
初始化#90""(,)
的#91""(框架代码#88,画图#92)
画图#92""(,)
的#93""(框架代码#88,动画#94)
动画#94""(,)
的#95""(代码内容#86,光束代码#96)
光束代码#96""(,)
的#97""(代码内容#86,粒子代码#98)
粒子代码#98""(,)
的#99""(预览动画#0,输出代码#100)
输出代码#100""(,)

## end
#365, 736:
"""
Nini, 打开天书(文件)
记住"Python"
state=(not (1==1.0))
print(state)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成Smilei预览动画"(,召唤星辰)...
->的(_媒介,模拟空间)->的(_媒介,窗口)...

->+生成代码(_凭依,_凭依)->+的(操作,+生成代码)...
->+设置框架(_媒介,_凭依)->+的(操作,+设置框架)...
->[]{
    []=>的(_媒介,_物体)->_物体=>[]:
        ->的(_物体,gamma)->[python]"state=(not (ans[0]==1.0))"(Python,gamma)...
            ->在(_物体,空间点)->+设置运动电子(_物体,_凭依)->+的(操作,+设置运动电子),
        ->的(_物体,数密度)->+设置电子(_物体,_凭依)->+的(操作,+设置电子),
        ->的(_物体,输入边)->[==]"ymin"(,输入边)...
            ->+设置光束2(_物体,_凭依)->+的(操作,+设置光束2),
        ->的(_物体,焦点位置)->+设置光束(_物体,_凭依)->+的(操作,+设置光束),
        ->[]
}...
->[]{
    []=>的(_媒介,_电子)->_电子->的(_电子,数密度)->数密度(,_函数)->的(_函数,表达式)...
    =>+函数转换(表达式,_函数)->+的(操作,+函数转换)
}


## end
#367, 3:
369
## end
#369, 3:
371
## end
#371, 3:
373
## end
#373, 3:
375
## end
#375, 3:
385
## end
#377, 1288:
坐标系#0"+[显示PPT场景]\"1\"(,坐标系)

有x轴, y轴, x记号, y记号和原点

x轴和y轴都是线段\"1\"
y轴朝向\"90\"
x轴和y轴都是箭头\"0.1,0.05\"
+[设置结构](,x轴)
x轴->样式(x轴,)->+[显示](,样式)

原点在(0,0)
x记号在(0.5,0)
y记号在(0,0.4)

x记号::X
y记号::Y
原点::O

x轴距离原点为(-0.5,0)
x轴是线段\"1\"
y轴距离原点为(0,-0.4)
y轴是线段\"0.8\"
x轴和y轴都是箭头\"0.03,0.03\"


axis([-1,1.5,-0.5,1.2])
+[显示PPT场景](,坐标系)"(,)
的#1""(坐标系#0,x轴#2)
x轴#2""(,)
在#3""(x轴#2,空间点#4)
空间点#4"-0.5, 0.0"(,)
样式#5"曲线"(x轴#2,)
的#6""(x轴#2,y#7)
y#7"0.0, 0.0, nan, -0.015, 0.0, 0.015"(,)
的#8""(x轴#2,x#9)
x#9"0.0, 1.0, nan, 0.97, 1.0, 0.97"(,)
的#10""(x轴#2,长度#11)
长度#11"1.0"(,)
的#12""(x轴#2,类型#13)
类型#13"箭头"(,)
的#14""(x轴#2,箭头宽度#15)
箭头宽度#15"0.03"(,)
的#16""(x轴#2,箭头长度#17)
箭头长度#17"0.03"(,)
的#18""(坐标系#0,y轴#19)
y轴#19""(,)
在#20""(y轴#19,空间点#21)
空间点#21"0.0, -0.4"(,)
朝向#22""(y轴#19,方向#23)
方向#23"90"(,)
样式#24"曲线"(y轴#19,)
的#25""(y轴#19,y#26)
y#26"0.0, 0.0, nan, -0.015, 0.0, 0.015"(,)
的#27""(y轴#19,x#28)
x#28"0.0, 0.8, nan, 0.77, 0.8, 0.77"(,)
的#29""(y轴#19,长度#30)
长度#30"0.8"(,)
的#31""(y轴#19,类型#32)
类型#32"箭头"(,)
的#33""(y轴#19,箭头宽度#34)
箭头宽度#34"0.03"(,)
的#35""(y轴#19,箭头长度#36)
箭头长度#36"0.03"(,)
的#37""(坐标系#0,x#38)
x#38""(,)
的#39""(坐标系#0,原点#40)
原点#40"O"(,)
在#41""(原点#40,空间点#42)
空间点#42"0,0"(,)
的#43""(坐标系#0,x记号#44)
x记号#44"X"(,)
在#45""(x记号#44,空间点#46)
空间点#46"0.5,0"(,)
的#47""(坐标系#0,y记号#48)
y记号#48"Y"(,)
在#49""(y记号#48,空间点#50)
空间点#50"0,0.4"(,)

## end
#380, 212:
"""
保存天书->的(天书,保存天书)->天书"文档\伊甸园\天书.ftxt"
->+[显示](,天书)
保存天书->的(天书,保存天书)->+[显示星图](,天书)

"""

+保存天书->+[del](,+保存天书)...

->保存天书->的(天书,保存天书)->天书"文档\伊甸园\天书.ftxt"...
->+[导出节点](,天书)->+[覆盖](+[导出节点],)->+[list](+[导出节点],天书)

## end
#381, 9699:
椭圆曲线#0"+[显示PPT场景](,椭圆曲线)
+[修改天使]
记住\"Matlab\"

有C
有椭圆, F_1和F_2
椭圆是函数曲线
椭圆的f是\"t=linspace(0,360,200);
x=a*cosd(t);
y=b*sind(t);\"

A=1/3;
B=1/4;
C=sqrt(A^2-B^2);
clipboard('copy',C);

x_0=0.2;
y_0=sqrt(1-x_0^2/A^2)*B
clipboard('copy',[x_0,y_0]);


F_1在(0.220479275922049,0)
F_2在(-0.220479275922049,0)
C在(0.2,0.2)
在(C,空间点)->+[显示](,空间点)

有连线
连线经过F_1, C和F_2
连线是折线
连线有什么
连线的x是什么


+[显示PPT场景]\"1\"(,椭圆曲线)"(,)
的#1""(椭圆曲线#0,椭圆#2)
椭圆#2""(,)
在#3""(椭圆#2,空间点#4)
空间点#4"0.0, 0.0"(,)
样式#5"曲线"(椭圆#2,)
的#6""(椭圆#2,y#7)
y#7"0.0, 0.007892137441202632, 0.01577640782816841, 0.02364495194871124, 0.03148992626692939, 0.03930351074181269, 0.04707791662242947, 0.054805394211922834, 0.06247824059257709, 0.0700888073042536, 0.07762950796854219, 0.0850928258510282, 0.09247132135413672, 0.09975763943308524, 0.1069445169275524, 0.114024789801754, 0.12099140028570969, 0.12783740391058168, 0.13455597643107214, 0.14114042062797952, 0.14758417298413207, 0.1538808102270448, 0.16002405573177678, 0.1660077857776078, 0.1718260356522961, 0.17747300559783322, 0.1829430665917692, 0.18823076595834426, 0.19333083280383478, 0.19823818327069465, 0.2029479256052552, 0.20745536503393147, 0.2117560084430747, 0.21584556885780584, 0.2197199697153651, 0.22337534892871852, 0.22680806273637033, 0.23001468933454364, 0.23299203228810872, 0.23573712371685926, 0.2382472272539598, 0.2405198407736157, 0.24255269888524655, 0.2443437751916768, 0.24589128430909246, 0.24719368364675065, 0.2482496749446674, 0.24905820556775168, 0.2496184695550947, 0.24992990842336948, 0.24999221172353908, 0.2498053173503189, 0.24936941160408468, 0.24868492900516423, 0.24775255186069803, 0.24657320958450069, 0.24514807777060102, 0.24347857702138442, 0.24156637153150545, 0.2394133674289824, 0.23702171087512738, 0.23439378592520627, 0.23153221215196032, 0.2284398420343592, 0.2251197581141879, 0.22157526992330215, 0.2178099106846149, 0.21382743379010294, 0.20963180905934434, 0.20522721878231565, 0.2006180535503945, 0.19580890787972263, 0.19080457563129216, 0.18561004523232072, 0.18023049470367905, 0.17467128649832658, 0.16893796215590218, 0.16303623677879667, 0.1569719933352146, 0.1507512767949037, 0.1443802881033972, 0.13786537800077683, 0.13121304069111706, 0.12442990736892076, 0.11752273960900075, 0.1104984226263948, 0.10336395841303354, 0.09612645875800274, 0.08879313815835715, 0.08137130662755288, 0.07386836240866748, 0.06629178459966965, 0.058649125698092185, 0.05094800407253804, 0.04319609636852492, 0.03540112985623796, 0.0275708747278187, 0.019713136351869075, 0.011835747492889473, 0.003946560503409233, -0.003946560503409233, -0.011835747492889473, -0.019713136351869075, -0.0275708747278187, -0.03540112985623796, -0.04319609636852492, -0.05094800407253804, -0.058649125698092185, -0.06629178459966965, -0.07386836240866748, -0.08137130662755288, -0.08879313815835715, -0.09612645875800274, -0.10336395841303354, -0.1104984226263948, -0.11752273960900075, -0.12442990736892076, -0.13121304069111706, -0.13786537800077683, -0.1443802881033972, -0.1507512767949037, -0.1569719933352146, -0.16303623677879667, -0.16893796215590218, -0.17467128649832658, -0.18023049470367905, -0.18561004523232072, -0.19080457563129216, -0.19580890787972263, -0.2006180535503945, -0.20522721878231565, -0.20963180905934434, -0.21382743379010294, -0.21780991068461486, -0.2215752699233022, -0.22511975811418794, -0.2284398420343592, -0.23153221215196032, -0.23439378592520627, -0.23702171087512738, -0.23941336742898237, -0.24156637153150545, -0.24347857702138442, -0.24514807777060102, -0.24657320958450066, -0.247752551860698, -0.24868492900516426, -0.2493694116040847, -0.2498053173503189, -0.24999221172353908, -0.24992990842336948, -0.2496184695550947, -0.24905820556775168, -0.2482496749446674, -0.24719368364675065, -0.2458912843090925, -0.24434377519167683, -0.24255269888524658, -0.24051984077361574, -0.23824722725395983, -0.23573712371685931, -0.23299203228810866, -0.23001468933454358, -0.2268080627363703, -0.2233753489287185, -0.21971996971536506, -0.21584556885780581, -0.2117560084430747, -0.20745536503393147, -0.2029479256052552, -0.19823818327069465, -0.19333083280383478, -0.18823076595834431, -0.18294306659176926, -0.1774730055978333, -0.17182603565229615, -0.1660077857776079, -0.16002405573177672, -0.15388081022704472, -0.14758417298413204, -0.14114042062797946, -0.13455597643107212, -0.12783740391058165, -0.12099140028570969, -0.114024789801754, -0.10694451692755243, -0.09975763943308527, -0.09247132135413676, -0.08509282585102829, -0.07762950796854229, -0.0700888073042537, -0.06247824059257721, -0.05480539421192272, -0.04707791662242937, -0.03930351074181261, -0.03148992626692933, -0.023644951948711187, -0.01577640782816838, -0.007892137441202617, 0.0"(,)
的#8""(椭圆#2,x#9)
x#9"0.3333333333333333, 0.3331671963753913, 0.33266895111049777, 0.3318390942003686, 0.3306784528644192, 0.3291881840551746, 0.32736977330499345, 0.32522503324525787, 0.32275610179950237, 0.31996544005228567, 0.31685582979592763, 0.31343037075755853, 0.3096924775092435, 0.3056458760642629, 0.3012946001629412, 0.2966429872517267, 0.29169567415953124, 0.2864575924756373, 0.28093396363378353, 0.2751302937073254, 0.2690523679206618, 0.2627062448823974, 0.2560982505459902, 0.24923497190390304, 0.24212325042154642, 0.2347701752175574, 0.22718307599721124, 0.21936951574601254, 0.2113372831907462, 0.2030943850355056, 0.19464903798043537, 0.1860096605311467, 0.17718486460696714, 0.16818344695639248, 0.15901438038829652, 0.14968680482764005, 0.14021001820459478, 0.13059346718616435, 0.12084673775954148, 0.11097954567658705, 0.1010017267689576, 0.09092322714353435, 0.08075409326792772, 0.07050446195593968, 0.060184550262967436, 0.04980464530142029, 0.03937509398630266, 0.028906292721183616, 0.018408677034836007, 0.007892711178874648, -0.0026311223032377557, -0.013152333025417556, -0.023660433216005337, -0.03414494817220444, -0.04459542670149303, -0.05500145153959972, -0.06535264973465937, -0.07563870298719672, -0.08584935793563221, -0.09597443637705545, -0.10600384541307944, -0.11592758751066079, -0.12573577046785864, -0.1354186172745963, -0.14496647585859768, -0.1543698287067826, -0.16361930235253122, -0.17270567671935916, -0.18161989431169015, -0.1903530692435649, -0.1988964960962853, -0.207241658596165, -0.21538023810373652, -0.22330412190595178, -0.2310054113031106, -0.23847642948245712, -0.245709729170593, -0.2526981000570818, -0.2594345759818433, -0.26591244187917307, -0.2721252404714663, -0.2780667787059725, -0.28373113392816485, -0.28911265978557155, -0.2942059918561823, -0.29900605299582117, -0.30350805839915407, -0.30770752036928684, -0.3116002527911994, -0.31518237530455573, -0.3184503171717316, -0.3214008208372039, -0.3240309451747523, -0.3263380684192382, -0.32831989078003676, -0.329974436733519, -0.3313000569922959, -0.3322954301492644, -0.3329595639948145, -0.33329179650588575, -0.33329179650588575, -0.3329595639948145, -0.3322954301492644, -0.3313000569922959, -0.329974436733519, -0.32831989078003676, -0.3263380684192382, -0.3240309451747523, -0.3214008208372039, -0.3184503171717316, -0.31518237530455573, -0.3116002527911994, -0.30770752036928684, -0.30350805839915407, -0.29900605299582117, -0.2942059918561823, -0.28911265978557155, -0.28373113392816485, -0.2780667787059725, -0.2721252404714663, -0.26591244187917307, -0.2594345759818433, -0.2526981000570818, -0.245709729170593, -0.23847642948245712, -0.2310054113031106, -0.22330412190595178, -0.21538023810373652, -0.207241658596165, -0.1988964960962853, -0.1903530692435649, -0.18161989431169015, -0.17270567671935916, -0.16361930235253128, -0.1543698287067825, -0.1449664758585976, -0.1354186172745963, -0.12573577046785864, -0.11592758751066079, -0.10600384541307944, -0.09597443637705552, -0.08584935793563228, -0.0756387029871968, -0.06535264973465946, -0.05500145153959988, -0.0445954267014932, -0.03414494817220427, -0.02366043321600517, -0.013152333025417476, -0.002631122303237673, 0.00789271117887473, 0.01840867703483609, 0.028906292721183616, 0.03937509398630266, 0.04980464530142029, 0.06018455026296736, 0.0705044619559396, 0.08075409326792765, 0.09092322714353425, 0.10100172676895747, 0.11097954567658688, 0.12084673775954163, 0.1305934671861645, 0.14021001820459483, 0.14968680482764013, 0.1590143803882966, 0.16818344695639253, 0.17718486460696717, 0.1860096605311467, 0.19464903798043537, 0.20309438503550553, 0.21133728319074618, 0.2193695157460125, 0.22718307599721116, 0.23477017521755728, 0.24212325042154637, 0.2492349719039029, 0.25609825054599034, 0.2627062448823975, 0.26905236792066184, 0.27513029370732545, 0.28093396363378353, 0.2864575924756373, 0.29169567415953124, 0.2966429872517267, 0.30129460016294113, 0.30564587606426286, 0.30969247750924345, 0.3134303707575585, 0.3168558297959276, 0.3199654400522856, 0.3227561017995023, 0.32522503324525787, 0.32736977330499345, 0.3291881840551746, 0.33067845286441927, 0.3318390942003686, 0.33266895111049777, 0.3331671963753913, 0.3333333333333333"(,)
的#10""(椭圆#2,x范围#11)
x范围#11"0.0, 1.0"(,)
的#12""(椭圆#2,f#13)
f#13"t=linspace(0,360,200);
x=a*cosd(t);
y=b*sind(t);"(,)
的#14""(椭圆#2,类型#15)
类型#15"函数曲线"(,)
的#16""(椭圆曲线#0,F_1#17)
F_1#17""(,)
在#18""(F_1#17,空间点#19)
空间点#19"0.220479275922049,0"(,)
的#20""(椭圆曲线#0,F_2#21)
F_2#21""(,)
在#22""(F_2#21,空间点#23)
空间点#23"-0.220479275922049,0"(,)
的#24""(椭圆曲线#0,C#25)
C#25""(,)
在#26""(C#25,空间点#27)
空间点#27"0.2,0.2"(,)
的#28""(椭圆曲线#0,连线#29)
连线#29""(,)
样式#30"曲线"(连线#29,)
的#31""(连线#29,y#32)
y#32"0.0, 0.2, 0.0"(,)
的#33""(连线#29,x#34)
x#34"-0.220479275922049, 0.2, 0.220479275922049"(,)
的#35""(连线#29,类型#36)
类型#36"折线"(,)
的#37""(椭圆曲线#0,经过#38)
经过#38""(连线#29,F_1#17)
的#39""(椭圆曲线#0,经过#40)
经过#40""(连线#29,C#25)
的#41""(椭圆曲线#0,经过#42)
经过#42""(连线#29,F_2#21)

## end
#384, 202:
"""
[当前文件](删除冗余,)->是([当前文件],_文件)->+[消息窗口](,_文件)

"""

+删除冗余(,_物体)->+[del](,+删除冗余)...

->[当前文件](_物体,)->是([当前文件],_文件)...
=>的(_物体,_内在)->[]{[]=>的(_文件1,_内在)->[is](_文件,_文件1)}...
=>+[删除结构](,_内在)->+[del](,_内在)

## end
#389, 6920:
定义Maxwell方程组#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义Maxwell方程组#0,方程组#2)
方程组#2"\begin{cases}
\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_{0}\\ \vec{\nabla}\times \vec{E}=-\frac{\partial}{\partial t\ } (\vec{B})\\ \vec{\nabla}\cdot \vec{B}=0\\ \vec{\nabla}\times \vec{B}=\mu_{0}\ \vec{J}+\mu_{0}\ \epsilon_{0}\ \frac{\partial}{\partial t\ } (\vec{E})
\end{cases}

"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\eqs{\vec{\nabla}\cdot \vec{E}=\rho/\epsilon_0;
\vec{\nabla}\times \vec{E}=-\p{t}{\vec{B}};
\vec{\nabla}\cdot \vec{B}=0;
\vec{\nabla}\times \vec{B}=\mu_0*\vec{J}+\mu_0*\epsilon_0*\p{t}{\vec{E}}}"(,)
的#5""(表达式#4,输入#6)
输入#6""(方程组#132,)
的#7""(输入#6,矢量#8)
矢量#8""(,\nabla#10)
的#9""(表达式#4,\nabla#10)
\nabla#10"\nabla"(,)
的#11""(表达式#4,输入#12)
输入#12""(矢量#8,\nabla#10)
的#13""(表达式#4,E#14)
E#14"E"(,)
的#15""(表达式#4,输入#16)
输入#16""(矢量#18,E#14)
的#17""(表达式#4,矢量#18)
矢量#18""(,E#14)
的#19""(表达式#4,*#20)
*#20"\cdot "(矢量#8,矢量#18)
的#21""(表达式#4,\rho#22)
\rho#22"\rho"(,)
的#23""(表达式#4,\epsilon_0#24)
\epsilon_0#24"\epsilon_0"(,)
的#25""(表达式#4,/#26)
/#26"/"(\rho#22,\epsilon_0#24)
的#27""(表达式#4,=#28)
=#28"="(矢量#8,\rho#22)
的#29""(表达式#4,输入#30)
输入#30""(输入#6,)
的#31""(输入#30,矢量#32)
矢量#32""(,\nabla#34)
的#33""(表达式#4,\nabla#34)
\nabla#34"\nabla"(,)
的#35""(表达式#4,输入#36)
输入#36""(矢量#32,\nabla#34)
的#37""(表达式#4,E#38)
E#38"E"(,)
的#39""(表达式#4,输入#40)
输入#40""(矢量#42,E#38)
的#41""(表达式#4,矢量#42)
矢量#42""(,E#38)
的#43""(表达式#4,*#44)
*#44"\times "(矢量#32,矢量#42)
的#45""(表达式#4,输入#46)
输入#46""(偏微分#56,)
的#47""(输入#46,t#48)
t#48"t"(,)
的#49""(表达式#4,B#50)
B#50"B"(,)
的#51""(表达式#4,输入#52)
输入#52""(矢量#54,B#50)
的#53""(表达式#4,矢量#54)
矢量#54""(,B#50)
的#55""(表达式#4,偏微分#56)
偏微分#56""(,矢量#54)
的#57""(表达式#4,负号#58)
负号#58""(偏微分#56,)
的#59""(表达式#4,=#60)
=#60"="(矢量#32,偏微分#56)
的#61""(表达式#4,输入#62)
输入#62""(输入#30,)
的#63""(输入#62,矢量#64)
矢量#64""(,\nabla#66)
的#65""(表达式#4,\nabla#66)
\nabla#66"\nabla"(,)
的#67""(表达式#4,输入#68)
输入#68""(矢量#64,\nabla#66)
的#69""(表达式#4,B#70)
B#70"B"(,)
的#71""(表达式#4,输入#72)
输入#72""(矢量#74,B#70)
的#73""(表达式#4,矢量#74)
矢量#74""(,B#70)
的#75""(表达式#4,*#76)
*#76"\cdot "(矢量#64,矢量#74)
的#77""(表达式#4,0#78)
0#78"0"(,)
的#79""(表达式#4,=#80)
=#80"="(矢量#64,0#78)
的#81""(表达式#4,输入#82)
输入#82""(输入#62,)
的#83""(输入#82,矢量#84)
矢量#84""(,\nabla#86)
的#85""(表达式#4,\nabla#86)
\nabla#86"\nabla"(,)
的#87""(表达式#4,输入#88)
输入#88""(矢量#84,\nabla#86)
的#89""(表达式#4,B#90)
B#90"B"(,)
的#91""(表达式#4,输入#92)
输入#92""(矢量#94,B#90)
的#93""(表达式#4,矢量#94)
矢量#94""(,B#90)
的#95""(表达式#4,*#96)
*#96"\times "(矢量#84,矢量#94)
的#97""(表达式#4,\mu_0#98)
\mu_0#98"\mu_0"(,)
的#99""(表达式#4,J#100)
J#100"J"(,)
的#101""(表达式#4,输入#102)
输入#102""(矢量#104,J#100)
的#103""(表达式#4,矢量#104)
矢量#104""(,J#100)
的#105""(表达式#4,*#106)
*#106"*"(\mu_0#98,矢量#104)
的#107""(表达式#4,\mu_0#108)
\mu_0#108"\mu_0"(,)
的#109""(表达式#4,\epsilon_0#110)
\epsilon_0#110"\epsilon_0"(,)
的#111""(表达式#4,输入#112)
输入#112""(偏微分#122,)
的#113""(输入#112,t#114)
t#114"t"(,)
的#115""(表达式#4,E#116)
E#116"E"(,)
的#117""(表达式#4,输入#118)
输入#118""(矢量#120,E#116)
的#119""(表达式#4,矢量#120)
矢量#120""(,E#116)
的#121""(表达式#4,偏微分#122)
偏微分#122""(,矢量#120)
的#123""(表达式#4,*#124)
*#124"*"(\epsilon_0#110,偏微分#122)
的#125""(表达式#4,*#126)
*#126"*"(\mu_0#108,\epsilon_0#110)
的#127""(表达式#4,+#128)
+#128"+"(\mu_0#98,\mu_0#108)
的#129""(表达式#4,=#130)
=#130"="(矢量#84,\mu_0#98)
的#131""(表达式#4,方程组#132)
方程组#132""(,)
的#133""(表达式#4,起点#134)
起点#134""(,方程组#132)
的#135""(定义Maxwell方程组#0,召唤规则#136)
召唤规则#136"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"Maxwell方程组\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#137""(定义Maxwell方程组#0,降临规则#138)
降临规则#138"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#139""(降临规则#138,导入方程2#140)
导入方程2#140"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#141""(降临规则#138,导入方程组#142)
导入方程组#142"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#143""(降临规则#138,导入方程3#144)
导入方程3#144"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#145""(降临规则#138,导入方程4#146)
导入方程4#146"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#147""(降临规则#138,导入方程1#148)
导入方程1#148"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#391, 367:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"Maxwell方程组"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#394, 587:
"""
星星:...
+[新建阅读窗口](,星星)
Nini, 打开动词(库)
+[修改天使]

"""

+召唤星辰原型(_媒介,_凭依)->+[del](,+召唤星辰原型)...
->的(召唤星辰原型,星星)...

->+召唤星辰(_媒介,_凭依)->[m_text](+召唤星辰原型,+召唤星辰)->+[del](,+召唤星辰)...

->+操作->+[del](,+操作)...
->的(星星,_条目)->[]{
    []:->的(_条目,召唤规则)->召唤规则(,)...
        ->+[.]([想],+操作)->+[code]([想],召唤规则)->[想](_媒介,+召唤星辰),
    ->[标题](_条目,)->[==]([标题],+召唤星辰),
    ->[eq](_条目,_媒介)
}->[标题](_条目,)->[说](,[标题])...

->+[标题](_凭依,)...
->+[导入节点](_条目,+[临时文本])->+起点(+[导入节点],_凭依)...
->+[标题]#2(_凭依,)...

->+[替换](+[标题],+[标题]#2)->+在(+[替换],_凭依)->+[del](,+在)...
->+[修改内容](+[标题],+[修改标题])->+[修改标题](,_凭依)...

->+[del](,+起点)


## end
#396, 3:
402
## end
#398, 367:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"Maxwell方程组"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#399, 8594:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\frac{\omega^{2}}{c^{2}}\ \vec{E}-\vec{k}^{2}\ \vec{E}+\left(\vec{k}\ \vec{k}\right)\cdot \vec{E}=\left(\frac{q^{2}\ n_{0}}{\epsilon_{0}\ c^{2}}\ \left(\mathbf{M}+i\ q\ \mathbf{B}/\omega\right)^{-1}\ \mathbf{C}+\left(\vec{\beta}\ \vec{k_0}\right)\ \frac{\omega^{2}\ n_{r}}{c^{2}}\right)\cdot \vec{E}"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#5""(表达式#4,\omega#6)
\omega#6"\omega"(,)
的#7""(表达式#4,2#8)
2#8"2"(,)
的#9""(表达式#4,^#10)
^#10""(\omega#6,2#8)
的#11""(表达式#4,c#12)
c#12"c"(,)
的#13""(表达式#4,2#14)
2#14"2"(,)
的#15""(表达式#4,^#16)
^#16""(c#12,2#14)
的#17""(表达式#4,分式#18)
分式#18""(,)
的#19""(分式#18,分子#20)
分子#20""(,\omega#6)
的#21""(分式#18,分母#22)
分母#22""(,c#12)
的#23""(表达式#4,E#24)
E#24"E"(,)
的#25""(表达式#4,输入#26)
输入#26""(矢量#28,E#24)
的#27""(表达式#4,矢量#28)
矢量#28""(,E#24)
的#29""(表达式#4,*#30)
*#30"*"(分式#18,矢量#28)
的#31""(表达式#4,k#32)
k#32"k"(,)
的#33""(表达式#4,输入#34)
输入#34""(矢量#36,k#32)
的#35""(表达式#4,矢量#36)
矢量#36""(,k#32)
的#37""(表达式#4,2#38)
2#38"2"(,)
的#39""(表达式#4,^#40)
^#40""(矢量#36,2#38)
的#41""(表达式#4,E#42)
E#42"E"(,)
的#43""(表达式#4,输入#44)
输入#44""(矢量#46,E#42)
的#45""(表达式#4,矢量#46)
矢量#46""(,E#42)
的#47""(表达式#4,*#48)
*#48"*"(矢量#36,矢量#46)
的#49""(表达式#4,k#50)
k#50"k"(,)
的#51""(表达式#4,输入#52)
输入#52""(矢量#54,k#50)
的#53""(表达式#4,矢量#54)
矢量#54""(,k#50)
的#55""(表达式#4,k#56)
k#56"k"(,)
的#57""(表达式#4,输入#58)
输入#58""(矢量#60,k#56)
的#59""(表达式#4,矢量#60)
矢量#60""(,k#56)
的#61""(表达式#4,*#62)
*#62"*"(矢量#54,矢量#60)
的#63""(表达式#4,括号#64)
括号#64")"(,)
的#65""(表达式#4,的#66)
的#66""(括号#64,矢量#54)
的#67""(表达式#4,E#68)
E#68"E"(,)
的#69""(表达式#4,输入#70)
输入#70""(矢量#72,E#68)
的#71""(表达式#4,矢量#72)
矢量#72""(,E#68)
的#73""(表达式#4,*#74)
*#74"\cdot "(括号#64,矢量#72)
的#75""(表达式#4,+#76)
+#76"+"(矢量#36,括号#64)
的#77""(表达式#4,-#78)
-#78"-"(分式#18,矢量#36)
的#79""(表达式#4,q#80)
q#80"q"(,)
的#81""(表达式#4,2#82)
2#82"2"(,)
的#83""(表达式#4,^#84)
^#84""(q#80,2#82)
的#85""(表达式#4,n_0#86)
n_0#86"n_0"(,)
的#87""(表达式#4,*#88)
*#88"*"(q#80,n_0#86)
的#89""(表达式#4,\epsilon_0#90)
\epsilon_0#90"\epsilon_0"(,)
的#91""(表达式#4,c#92)
c#92"c"(,)
的#93""(表达式#4,2#94)
2#94"2"(,)
的#95""(表达式#4,^#96)
^#96""(c#92,2#94)
的#97""(表达式#4,*#98)
*#98"*"(\epsilon_0#90,c#92)
的#99""(表达式#4,分式#100)
分式#100""(,)
的#101""(分式#100,分子#102)
分子#102""(,q#80)
的#103""(分式#100,分母#104)
分母#104""(,\epsilon_0#90)
的#105""(表达式#4,M#106)
M#106"M"(,)
的#107""(表达式#4,输入#108)
输入#108""(矩阵#110,M#106)
的#109""(表达式#4,矩阵#110)
矩阵#110""(,M#106)
的#111""(表达式#4,i#112)
i#112"i"(,)
的#113""(表达式#4,q#114)
q#114"q"(,)
的#115""(表达式#4,B#116)
B#116"B"(,)
的#117""(表达式#4,输入#118)
输入#118""(矩阵#120,B#116)
的#119""(表达式#4,矩阵#120)
矩阵#120""(,B#116)
的#121""(表达式#4,\omega#122)
\omega#122"\omega"(,)
的#123""(表达式#4,/#124)
/#124"/"(矩阵#120,\omega#122)
的#125""(表达式#4,*#126)
*#126"*"(q#114,矩阵#120)
的#127""(表达式#4,*#128)
*#128"*"(i#112,q#114)
的#129""(表达式#4,+#130)
+#130"+"(矩阵#110,i#112)
的#131""(表达式#4,括号#132)
括号#132")"(,)
的#133""(表达式#4,的#134)
的#134""(括号#132,矩阵#110)
的#135""(表达式#4,1#136)
1#136"1"(,)
的#137""(表达式#4,负号#138)
负号#138""(1#136,)
的#139""(表达式#4,^#140)
^#140""(括号#132,1#136)
的#141""(表达式#4,C#142)
C#142"C"(,)
的#143""(表达式#4,输入#144)
输入#144""(矩阵#146,C#142)
的#145""(表达式#4,矩阵#146)
矩阵#146""(,C#142)
的#147""(表达式#4,*#148)
*#148"*"(括号#132,矩阵#146)
的#149""(表达式#4,*#150)
*#150"*"(分式#100,括号#132)
的#151""(表达式#4,\beta#152)
\beta#152"\beta"(,)
的#153""(表达式#4,输入#154)
输入#154""(矢量#156,\beta#152)
的#155""(表达式#4,矢量#156)
矢量#156""(,\beta#152)
的#157""(表达式#4,k_0#158)
k_0#158"k_0"(,)
的#159""(表达式#4,输入#160)
输入#160""(矢量#162,k_0#158)
的#161""(表达式#4,矢量#162)
矢量#162""(,k_0#158)
的#163""(表达式#4,*#164)
*#164"*"(矢量#156,矢量#162)
的#165""(表达式#4,括号#166)
括号#166")"(,)
的#167""(表达式#4,的#168)
的#168""(括号#166,矢量#156)
的#169""(表达式#4,\omega#170)
\omega#170"\omega"(,)
的#171""(表达式#4,2#172)
2#172"2"(,)
的#173""(表达式#4,^#174)
^#174""(\omega#170,2#172)
的#175""(表达式#4,n_r#176)
n_r#176"n_r"(,)
的#177""(表达式#4,*#178)
*#178"*"(\omega#170,n_r#176)
的#179""(表达式#4,c#180)
c#180"c"(,)
的#181""(表达式#4,2#182)
2#182"2"(,)
的#183""(表达式#4,^#184)
^#184""(c#180,2#182)
的#185""(表达式#4,分式#186)
分式#186""(,)
的#187""(分式#186,分子#188)
分子#188""(,\omega#170)
的#189""(分式#186,分母#190)
分母#190""(,c#180)
的#191""(表达式#4,*#192)
*#192"*"(括号#166,分式#186)
的#193""(表达式#4,+#194)
+#194"+"(分式#100,括号#166)
的#195""(表达式#4,括号#196)
括号#196")"(,)
的#197""(表达式#4,的#198)
的#198""(括号#196,分式#100)
的#199""(表达式#4,E#200)
E#200"E"(,)
的#201""(表达式#4,输入#202)
输入#202""(矢量#204,E#200)
的#203""(表达式#4,矢量#204)
矢量#204""(,E#200)
的#205""(表达式#4,*#206)
*#206"\cdot "(括号#196,矢量#204)
的#207""(表达式#4,=#208)
=#208"="(分式#18,括号#196)
的#209""(表达式#4,起点#210)
起点#210""(,分式#18)
的#211""(方程组#2,表达式#212)
表达式#212"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#213""(定义方程#0,召唤规则#214)
召唤规则#214"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"相对论波动方程\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#215""(定义方程#0,降临规则#216)
降临规则#216"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#217""(降临规则#216,导入方程2#218)
导入方程2#218"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#219""(降临规则#216,导入方程组#220)
导入方程组#220"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#221""(降临规则#216,导入方程3#222)
导入方程3#222"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#223""(降临规则#216,导入方程4#224)
导入方程4#224"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#225""(降临规则#216,导入方程1#226)
导入方程1#226"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#401, 364:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"相对论波动方程"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#403, 4728:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\mathbf{B}=\begin{pmatrix}
0&-B_{z}&B_{y}\\ B_{z}&0&-B_{x}\\ -B_{y}&B_{x}&0
\end{pmatrix}

"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\mat{B}=\mat{0,-B_z,B_y;B_z,0,-B_x;-B_y,B_x,0}"(,)
的#5""(表达式#4,B#6)
B#6"B"(,)
的#7""(表达式#4,输入#8)
输入#8""(矩阵#10,B#6)
的#9""(表达式#4,矩阵#10)
矩阵#10""(,B#6)
的#11""(表达式#4,输入#12)
输入#12""(矩阵#42,)
的#13""(输入#12,0#14)
0#14"0"(,)
的#15""(输入#12,B_z#16)
B_z#16"B_z"(,)
的#17""(输入#12,B_y#18)
B_y#18"B_y"(,)
的#19""(表达式#4,负号#20)
负号#20""(B_z#16,)
的#21""(表达式#4,输入#22)
输入#22""(输入#12,)
的#23""(输入#22,B_z#24)
B_z#24"B_z"(,)
的#25""(输入#22,0#26)
0#26"0"(,)
的#27""(输入#22,B_x#28)
B_x#28"B_x"(,)
的#29""(表达式#4,负号#30)
负号#30""(B_x#28,)
的#31""(表达式#4,输入#32)
输入#32""(输入#22,)
的#33""(输入#32,B_y#34)
B_y#34"B_y"(,)
的#35""(输入#32,B_x#36)
B_x#36"B_x"(,)
的#37""(输入#32,0#38)
0#38"0"(,)
的#39""(表达式#4,负号#40)
负号#40""(B_y#34,)
的#41""(表达式#4,矩阵#42)
矩阵#42""(,)
的#43""(表达式#4,=#44)
=#44"="(矩阵#10,矩阵#42)
的#45""(表达式#4,起点#46)
起点#46""(,矩阵#10)
的#47""(方程组#2,表达式#48)
表达式#48"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#49""(定义方程#0,召唤规则#50)
召唤规则#50"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"磁场矩阵\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#51""(定义方程#0,降临规则#52)
降临规则#52"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#53""(降临规则#52,导入方程2#54)
导入方程2#54"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#55""(降临规则#52,导入方程组#56)
导入方程组#56"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#57""(降临规则#52,导入方程3#58)
导入方程3#58"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#59""(降临规则#52,导入方程4#60)
导入方程4#60"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#61""(降临规则#52,导入方程1#62)
导入方程1#62"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#405, 361:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"磁场矩阵"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#407, 3207:
等离子体频率#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"波数\"替换为\"密度\"

"(,)
的#1""(等离子体频率#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,等离子体频率)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"角频率\"(求解,)->.\"密度\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"密度\"(求解,)->.\"角频率\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(等离子体频率#0,降临规则#4)
降临规则#4"
整理代码:...

的(降临规则,公式2)->+的(+公式2,公式2)->+[del](,的)->+[修改标题]\"M代码\"(,公式2)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"密度\"替换为\"角频率\"
将'公式1'的\"波长\"替换为\"角频率\"
+[新建阅读窗口](,公式1)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式1#8)
公式1#8"\"\"\"
M代码:...
表达式:...
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式1#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"密度\"(求解,_密度)->变量#2(,_密度)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%角频率=\sqrt{\frac{%密度*e^2}{m_e*\epsilon_0}}
"(,)
的#13""(公式1#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"密度\"(求解,_密度)->变量#2(,_密度)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"% Plasma frequency
%角频率=sqrt((%密度.*e.^(2))./(m_e.*epsilon_0));
"(,)
的#17""(降临规则#4,公式2#18)
公式2#18"\"\"\"
M代码:...
表达式:...
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式2#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"密度\"(求解,_密度)->变量#1(,_密度)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%密度=\frac{%角频率^2*m_e*\epsilon_0}{e^2}
"(,)
的#23""(公式2#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"密度\"(求解,_密度)->变量#1(,_密度)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"% Plasma frequency
%密度=%角频率.^2*m_e*epsilon_0/e^2;
"(,)

## end
#409, 290:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,等离子体频率)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"角频率"(求解,)->."密度"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"密度"(求解,)->."角频率"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#411, 4259:
定义方程#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,降临规则)

方程组:...
将\"\omega_B=\frac{q*B}{m_e}\"记作为方程组

方程组->公式(方程组,)





"(,)
的#1""(定义方程#0,方程组#2)
方程组#2"\omega_{B}=\frac{q\ B}{m_{e}}"(,)
的#3""(方程组#2,表达式#4)
表达式#4"\omega_B=\frac{q*B}{m_e}"(,)
的#5""(表达式#4,\omega_B#6)
\omega_B#6"\omega_B"(,)
的#7""(表达式#4,q#8)
q#8"q"(,)
的#9""(表达式#4,B#10)
B#10"B"(,)
的#11""(表达式#4,*#12)
*#12"*"(q#8,B#10)
的#13""(表达式#4,m_e#14)
m_e#14"m_e"(,)
的#15""(表达式#4,分式#16)
分式#16""(,)
的#17""(分式#16,分子#18)
分子#18""(,q#8)
的#19""(分式#16,分母#20)
分母#20""(,m_e#14)
的#21""(表达式#4,=#22)
=#22"="(\omega_B#6,分式#16)
的#23""(表达式#4,起点#24)
起点#24""(,\omega_B#6)
的#25""(方程组#2,表达式#26)
表达式#26"\frac{\omega^{2}}{c^{2}}*\vec{E}-\vec{k}^{2}*\vec{E}+(\vec{k}*\vec{k})\cdot \vec{E}=(\frac{q^{2}*n_0}{\epsilon_0*c^{2}}*(\mat{M}+i*q*\mat{B}/\omega)^{-1}*\mat{C}+(\vec{\beta}*\vec{k_0})*\frac{\omega^2*n_r}{c^2})\cdot \vec{E}"(,)
的#27""(定义方程#0,召唤规则#28)
召唤规则#28"\"\"\"
Nini, 打开天书的定义样本(节点)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"磁场频率\"(,召唤星辰)...
->[]{
    []:->[==]\"1\"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]\"2\"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]\"3\"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]\"4\"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}



"(,)
的#29""(定义方程#0,降临规则#30)
降临规则#30"

导入方程组:...
导入方程1:...
导入方程2:...
导入方程3:...
导入方程4:...
将条目\"导入方程1\"复制为条目\"导入方程4\"


"(,)
的#31""(降临规则#30,导入方程2#32)
导入方程2#32"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程2(,_凭依)->+[del](,+导入方程2)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)...
->的(输入#2,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#33""(降临规则#30,导入方程组#34)
导入方程组#34"\"\"\"


\"\"\"

+导入方程组(,_凭依)->+[del](,+导入方程组)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](表达式#0,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](表达式#0,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](方程组,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#35""(降临规则#30,导入方程3#36)
导入方程3#36"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程3(,_凭依)->+[del](,+导入方程3)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)...
->的(输入#3,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#37""(降临规则#30,导入方程4#38)
导入方程4#38"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程4(,_凭依)->+[del](,+导入方程4)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)...
->输入(方程组#0,)->输入#2(输入,)->输入#3(输入#2,)->输入#4(输入#3,)...
->的(输入#4,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)
的#39""(降临规则#30,导入方程1#40)
导入方程1#40"\"\"\"
+[结构转表达式]

\"\"\"

+导入方程1(,_凭依)->+[del](,+导入方程1)...

->的(_凭依,召唤规则)->的(_凭依,降临规则)...
->的(_凭依,方程组)->的(方程组,表达式#0)...
->的(表达式#0,方程组#0)->输入(方程组#0,)->的(输入,_起点)...

->+[算式结构转换]\"表达式\"(_起点,+[临时文本]#表达式)...
->+[算式结构转换]\"LaTeX\"(_起点,+[临时文本]#LaTeX)...
->[]{
    []:->的(_凭依,表达式)->表达式->+[修改内容](+[临时文本]#表达式,表达式),
    ->+的(_凭依,+表达式)->+[修改内容](+[临时文本]#表达式,+表达式)
}...
->的(_凭依,表达式)->+[表达式转结构](表达式,表达式)...

->[]{
    []:->公式(_凭依,),->+公式(_凭依,)
}...
->+[修改内容](+[临时文本]#LaTeX,_凭依)...

->+[删除结构](,方程组)->+[删除结构](,降临规则)...
->+[del](,召唤规则)->+[del](,降临规则)->+[del](,方程组)


"(,)

## end
#413, 361:
"""
Nini, 打开天书的定义样本(节点)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"磁场频率"(,召唤星辰)...
->[]{
    []:->[==]"1"(,_凭依)->+导入方程1(_媒介,_凭依)->+的(操作,+导入方程1),
    ->[==]"2"(,_凭依)->+导入方程2(_媒介,_凭依)->+的(操作,+导入方程2),
    ->[==]"3"(,_凭依)->+导入方程3(_媒介,_凭依)->+的(操作,+导入方程3),
    ->[==]"4"(,_凭依)->+导入方程4(_媒介,_凭依)->+的(操作,+导入方程4),
    ->+导入方程组(_媒介,_凭依)->+的(操作,+导入方程组)
}




## end
#415, 3:
417
## end
#417, 3:
423
## end
#419, 16445:
素描结构#0"
召唤规则:...
降临规则:...



"(,)
的#1""(素描结构#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]\"素描结构\"(,召唤星辰)...

->+新建腿部(_媒介,_凭依)->+的(操作,+新建腿部)...
->+新建身体(_媒介,_凭依)->+的(操作,+新建身体)...
->+新建手臂(_媒介,_凭依)->+的(操作,+新建手臂)...
->+新建肩膀(_媒介,_凭依)->+的(操作,+新建肩膀)...
->+新建头部(_媒介,_凭依)->+的(操作,+新建头部)



"(,)
的#3""(素描结构#0,降临规则#4)
降临规则#4"
新建头部:...
新建手臂:...
新建身体:...
新建腿部:...
+[新建阅读窗口](,新建头部)

将条目\"新建头部\"复制为条目\"新建腿部\"


"(,)
的#5""(降临规则#4,新建手臂#6)
新建手臂#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+新建手臂(_媒介,_凭依)->+[del](,+新建手臂)...
->的(新建手臂,描述结构)->的(新建手臂,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[]:
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
            ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
            =>_关联(_操作,_参数)->[说](,_关联)...
            =>+关联(+[做],_参数)->[m_name](_关联,+关联)->[说](,+关联),
        ->[]
}


"(,)
的#7""(新建手臂#6,库#8)
库#8"

画左臂:...
画右臂:...
将条目\"画左臂\"复制为条目\"画右臂\"
将'画左臂'的\"头\"替换为\"左臂\"

+[修改标题]\"画左臂\"(,画头)
+[复制结构](,画左臂)


"(,)
的#9""(库#8,画右臂#10)
画右臂#10"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画右臂(_媒介,_凭依)->+[del](,+画右臂)...
->的(画右臂,M代码)...

->肩膀位置(+画右臂,空间点#1)->手肘位置(+画右臂,空间点#2)->手腕位置(+画右臂,空间点#3)...
->手长(+画右臂,长度#3)->手方向(+画右臂,方向#3)...

->+的(_凭依,+右臂)...
->+的(+右臂,+x)->+的(+右臂,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->+[.]\"L3\"(+[matlab],长度#3)->+[.]\"angle3\"(+[matlab],方向#3)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)




"(,)
的#11""(画右臂#10,M代码#12)
M代码#12"%{
+[M函数](,M代码)
%}

R=0.02;
t=linspace(0,360,200);
x_c=R*cosd(t);
y_c=R*sind(t);

dr_x1=pt2-pt1;
L1=norm(dr_x1);
dr_x1=dr_x1/norm(dr_x1);
dr_y1=[dr_x1(2),-dr_x1(1)];

dr_x2=pt3-pt2;
L2=norm(dr_x2);
dr_x2=dr_x2/norm(dr_x2);
dr_y2=[dr_x2(2),-dr_x2(1)];

dr_x3=[cosd(angle3),sind(angle3)];
dr_y3=[dr_x3(2),-dr_x3(1)];

x_c1=pt1(1)+x_c;
y_c1=pt1(2)+y_c;

x_01=[0,0,L1-2.4*R,L1-2.4*R,0]+R*1.2;
y_01=[-R,R,R,-R,-R]*0.8;
x_1=pt1(1)+x_01*dr_x1(1)+y_01*dr_y1(1);
y_1=pt1(2)+x_01*dr_x1(2)+y_01*dr_y1(2);

x_c2=pt2(1)+x_c;
y_c2=pt2(2)+y_c;

x_02=[0,0,L2-2.4*R,L2-2.4*R,0]+R*1.2;
y_02=[-R,R,R,-R,-R]*0.8;
x_2=pt2(1)+x_02*dr_x2(1)+y_02*dr_y2(1);
y_2=pt2(2)+x_02*dr_x2(2)+y_02*dr_y2(2);

x_c3=pt3(1)+x_c;
y_c3=pt3(2)+y_c;

x_03=[0,0,L3,L3,0]+R;
y_03=[-R,R,R,-R,-R];
x_3=pt3(1)+x_03*dr_x3(1)+y_03*dr_y3(1);
y_3=pt3(2)+x_03*dr_x3(2)+y_03*dr_y3(2);


x=[x_c1,nan,x_1,nan,x_c2,nan,x_2,nan,x_c3,nan,x_3,nan];
y=[y_c1,nan,y_1,nan,y_c2,nan,y_2,nan,y_c3,nan,y_3,nan];





%{
+[M函数](,M代码)
%}"(,)
的#13""(库#8,画左臂#14)
画左臂#14"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画左臂(_媒介,_凭依)->+[del](,+画左臂)...
->的(画左臂,M代码)...

->肩膀位置(+画左臂,空间点#1)->手肘位置(+画左臂,空间点#2)->手腕位置(+画左臂,空间点#3)...
->手长(+画左臂,长度#3)->手方向(+画左臂,方向#3)...

->+的(_凭依,+左臂)...
->+的(+左臂,+x)->+的(+左臂,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->+[.]\"L3\"(+[matlab],长度#3)->+[.]\"angle3\"(+[matlab],方向#3)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)




"(,)
的#15""(画左臂#14,M代码#16)
M代码#16"%{
+[M函数](,M代码)
%}

R=0.02;
t=linspace(0,360,200);
x_c=R*cosd(t);
y_c=R*sind(t);

dr_x1=pt2-pt1;
L1=norm(dr_x1);
dr_x1=dr_x1/norm(dr_x1);
dr_y1=[dr_x1(2),-dr_x1(1)];

dr_x2=pt3-pt2;
L2=norm(dr_x2);
dr_x2=dr_x2/norm(dr_x2);
dr_y2=[dr_x2(2),-dr_x2(1)];

dr_x3=[cosd(angle3),sind(angle3)];
dr_y3=[dr_x3(2),-dr_x3(1)];

x_c1=pt1(1)+x_c;
y_c1=pt1(2)+y_c;

x_01=[0,0,L1-2.4*R,L1-2.4*R,0]+R*1.2;
y_01=[-R,R,R,-R,-R]*0.8;
x_1=pt1(1)+x_01*dr_x1(1)+y_01*dr_y1(1);
y_1=pt1(2)+x_01*dr_x1(2)+y_01*dr_y1(2);

x_c2=pt2(1)+x_c;
y_c2=pt2(2)+y_c;

x_02=[0,0,L2-2.4*R,L2-2.4*R,0]+R*1.2;
y_02=[-R,R,R,-R,-R]*0.8;
x_2=pt2(1)+x_02*dr_x2(1)+y_02*dr_y2(1);
y_2=pt2(2)+x_02*dr_x2(2)+y_02*dr_y2(2);

x_c3=pt3(1)+x_c;
y_c3=pt3(2)+y_c;

x_03=[0,0,L3,L3,0]+R;
y_03=[-R,R,R,-R,-R];
x_3=pt3(1)+x_03*dr_x3(1)+y_03*dr_y3(1);
y_3=pt3(2)+x_03*dr_x3(2)+y_03*dr_y3(2);


x=[x_c1,nan,x_1,nan,x_c2,nan,x_2,nan,x_c3,nan,x_3,nan];
y=[y_c1,nan,y_1,nan,y_c2,nan,y_2,nan,y_c3,nan,y_3,nan];





%{
+[M函数](,M代码)
%}"(,)
的#17""(新建手臂#6,描述结构#18)
描述结构#18"\"\"\"



\"\"\"

+描述结构(_媒介,_凭依)...

->+操作(+描述结构,)...

->的(_媒介,左大臂)...
    ->的(左大臂,长度#1)->在(左大臂,空间点#1)->朝向(左大臂,方向#1)...
->的(_媒介,左小臂)...
    ->的(左小臂,长度#2)->在(左小臂,空间点#2)->朝向(左小臂,方向#2)...
->的(_媒介,左手)...
    ->的(左手,长度#3)->在(左手,空间点#3)->朝向(左手,方向#3)...

->的(_媒介,右大臂)...
    ->的(右大臂,长度#4)->在(右大臂,空间点#4)->朝向(右大臂,方向#4)...
->的(_媒介,右小臂)...
    ->的(右小臂,长度#5)->在(右小臂,空间点#5)->朝向(右小臂,方向#5)...
->的(_媒介,右手)...
    ->的(右手,长度#6)->在(右手,空间点#6)->朝向(右手,方向#6)...


->+画左臂(_媒介,_凭依)->+的(+操作,+画左臂)...
    ->+肩膀位置(+画左臂,空间点#1)->+手肘位置(+画左臂,空间点#2)...
    ->+手腕位置(+画左臂,空间点#3)...
    ->+手长(+画左臂,长度#3)->+手方向(+画左臂,方向#3)...

->+画右臂(_媒介,_凭依)->+的(+操作,+画右臂)...
    ->+肩膀位置(+画右臂,空间点#4)->+手肘位置(+画右臂,空间点#5)...
    ->+手腕位置(+画右臂,空间点#6)...
    ->+手长(+画右臂,长度#6)->+手方向(+画右臂,方向#6)




"(,)
的#19""(降临规则#4,新建身体#20)
新建身体#20"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+新建身体(_媒介,_凭依)->+[del](,+新建身体)...
->的(新建身体,描述结构)->的(新建身体,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[]:
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
            ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
            =>_关联(_操作,_参数)->[说](,_关联)...
            =>+关联(+[做],_参数)->[m_name](_关联,+关联)->[说](,+关联),
        ->[]
}


"(,)
的#21""(新建身体#20,描述结构#22)
描述结构#22"\"\"\"


\"\"\"

+描述结构(_媒介,_凭依)...

->+操作(+描述结构,)...

->的(_媒介,头)->的(头,半径)...
->的(_媒介,左肩)->的(左肩,长度#1)->朝向(左肩,方向#1)...
->的(_媒介,右肩)->的(右肩,长度#2)->朝向(右肩,方向#2)...
->的(_媒介,胸部)...
    ->的(胸部,长度#3)->的(胸部,宽度#3)->在(胸部,空间点#3)->朝向(胸部,方向#3)...
->的(_媒介,腹部)...
    ->的(腹部,长度#4)->的(腹部,宽度#4)->在(腹部,空间点#4)->朝向(腹部,方向#4)...
->的(_媒介,屁股)->在(屁股,空间点#5)->朝向(屁股,方向#5)...


->+画胸部(_媒介,_凭依)->+的(+操作,+画胸部)...
    ->+头部大小(+画胸部,半径)...
    ->+左肩长度(+画胸部,长度#1)->+左肩方向(+画胸部,方向#1)...
    ->+右肩长度(+画胸部,长度#2)->+右肩方向(+画胸部,方向#2)...
    ->+宽度(+画胸部,长度#3)->+长度(+画胸部,宽度#3)...
    ->+位置(+画胸部,空间点#3)->+方向(+画胸部,方向#3)...
->+画腹部(_媒介,_凭依)->+的(+操作,+画腹部)...
    ->+胸部位置(+画腹部,空间点#3)->+屁股位置(+画腹部,空间点#5)...
    ->+胸部方向(+画腹部,方向#3)->+屁股方向(+画腹部,方向#5)...
    ->+宽度(+画腹部,长度#4)->+位置(+画腹部,空间点#4)->+方向(+画腹部,方向#4)


"(,)
的#23""(新建身体#20,库#24)
库#24"

画胸部:...
画腹部:...
将条目\"画胸部\"复制为条目\"画腹部\"
将'画头'的\"头\"替换为\"胸部\"
+[复制结构](,画胸部)


"(,)
的#25""(库#24,画腹部#26)
画腹部#26"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画腹部(_媒介,_凭依)->+[del](,+画腹部)...
->的(画腹部,M代码)...

->胸部位置(+画腹部,_位置#1)->屁股位置(+画腹部,_位置#2)...
->胸部方向(+画腹部,_方向#1)->屁股方向(+画腹部,_方向#2)...

->宽度(+画腹部,_宽度)...
->位置(+画腹部,_位置)->方向(+画腹部,_方向)...

->+的(_凭依,+腹部)...
->+的(+腹部,+x)->+的(+腹部,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],_位置)->+[.]\"angle\"(+[matlab],_方向)...
->+[.]\"W2\"(+[matlab],_宽度)...
->+[.]\"pt_1\"(+[matlab],_位置#1)->+[.]\"pt_2\"(+[matlab],_位置#2)...
->+[.]\"angle_1\"(+[matlab],_方向#1)->+[.]\"angle_2\"(+[matlab],_方向#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#27""(画腹部#26,M代码#28)
M代码#28"%{
+[M函数](,M代码)
%}

addpath('Matlab\space');
r_x=[cosd(angle),sind(angle)];
r_y=[-sind(angle),cosd(angle)];
pt_01=pt+r_y*W2/2;
pt_02=pt-r_y*W2/2;

[x11,y11]=intersection_lines_dir_pt(pt,(angle_1+90)/180*pi,pt_01,angle/180*pi);
[x12,y12]=intersection_lines_dir_pt(pt,(angle_1+90)/180*pi,pt_02,angle/180*pi);
[x21,y21]=intersection_lines_dir_pt(pt_2,(angle_2+90)/180*pi,pt_01,angle/180*pi);
[x22,y22]=intersection_lines_dir_pt(pt_2,(angle_2+90)/180*pi,pt_02,angle/180*pi);

x=[x11,x12,x22,x21,x11];
y=[y11,y12,y22,y21,y11];


%{
+[M函数](,M代码)
%}"(,)
的#29""(库#24,画胸部#30)
画胸部#30"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画胸部(_媒介,_凭依)->+[del](,+画胸部)...
->的(画胸部,M代码)...

->头部大小(+画胸部,_半径)...
->左肩长度(+画胸部,长度#1)->左肩方向(+画胸部,方向#1)...
->右肩长度(+画胸部,长度#2)->右肩方向(+画胸部,方向#2)...

->宽度(+画胸部,_宽度)->长度(+画胸部,_长度)...
->位置(+画胸部,_位置)->方向(+画胸部,_方向)...

->+的(_凭依,+胸部)...
->+的(+胸部,+x)->+的(+胸部,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],_位置)->+[.]\"angle\"(+[matlab],_方向)...
->+[.]\"L\"(+[matlab],_长度)->+[.]\"W\"(+[matlab],_宽度)...
->+[.]\"R\"(+[matlab],_半径)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"an_1\"(+[matlab],方向#1)...
->+[.]\"L2\"(+[matlab],长度#2)->+[.]\"an_2\"(+[matlab],方向#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#31""(画胸部#30,M代码#32)
M代码#32"%{
+[M函数](,M代码)
%}

if isempty(angle)
angle=0;
end

dr1=[cosd(an_1),sind(an_1)]*L1;
dr2=[cosd(an_2),sind(an_2)]*L2;

r_y=[cosd(angle),sind(angle)];
r_x=[-sind(angle),cosd(angle)];
pt_1=r_y*L-r_x*L1;
pt_2=r_y*L+r_x*L2;

x=pt(1)+[0,dr1(1),pt_1(1),pt_2(1),dr2(1),0];
y=pt(2)+[0,dr1(2),pt_1(2),pt_2(2),dr2(2),0];


%{
+[M函数](,M代码)
%}"(,)
的#33""(降临规则#4,新建腿部#34)
新建腿部#34"\"\"\"
描述结构:...
将'描述结构'的\"手\"替换为\"脚\"
库:...
+[新建阅读窗口](,描述结构)
+[新建阅读窗口](,库)

\"\"\"

+新建腿部(_媒介,_凭依)->+[del](,+新建腿部)...
->的(新建腿部,描述结构)->的(新建腿部,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[]:
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
            ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
            =>_关联(_操作,_参数)->[说](,_关联)...
            =>+关联(+[做],_参数)->[m_name](_关联,+关联)->[说](,+关联),
        ->[]
}


"(,)
的#35""(新建腿部#34,库#36)
库#36"
画左腿:...
画右腿:...
画屁股:...
将'画屁股'的\"胸部\"替换为\"屁股\"
+[新建阅读窗口](,画屁股)
+[粘贴](,库)
+[修改标题]\"画屁股\"(,画胸部)

"(,)
的#37""(库#36,画右腿#38)
画右腿#38"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画右腿(_媒介,_凭依)->+[del](,+画右腿)...
->的(画右腿,M代码)...

->宽度(+画右腿,_宽度)->方向(+画右腿,方向#0)...
->髋关节位置(+画右腿,空间点#1)->膝盖位置(+画右腿,空间点#2)->脚踝位置(+画右腿,空间点#3)...
->脚长(+画右腿,长度#3)->脚方向(+画右腿,方向#3)...

->+的(_凭依,+右腿)...
->+的(+右腿,+x)->+的(+右腿,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"angle0\"(+[matlab],方向#0)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->+[.]\"L3\"(+[matlab],长度#3)->+[.]\"angle3\"(+[matlab],方向#3)...
->+[.]\"W0\"(+[matlab],_宽度)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)




"(,)
的#39""(画右腿#38,M代码#40)
M代码#40"%{
+[M函数](,M代码)
%}

R1=W0/3;
R2=0.02*2;
R3=0.02;

t=linspace(0,360,200);
x_c=R*cosd(t);
y_c=R*sind(t);

dr_x1=pt2-pt1;
L1=norm(dr_x1);
dr_x1=dr_x1/norm(dr_x1);
dr_y1=[dr_x1(2),-dr_x1(1)];

dr_x2=pt3-pt2;
L2=norm(dr_x2);
dr_x2=dr_x2/norm(dr_x2);
dr_y2=[dr_x2(2),-dr_x2(1)];

dr_x3=[cosd(angle3),sind(angle3)];
dr_y3=[dr_x3(2),-dr_x3(1)];

t1=linspace(0,180,200)+90+angle0;
x_c1=pt1(1)+R1*cosd(t1);
y_c1=pt1(2)+R1*sind(t1);

x_01=[0,L1,L1,0]+[0,-R2,-R2,0]*1.2;
y_01=[R1,R2*0.8,-R2*0.8,-R1];
x_1=pt1(1)+x_01*dr_x1(1)+y_01*dr_y1(1);
y_1=pt1(2)+x_01*dr_x1(2)+y_01*dr_y1(2);

x_c2=pt2(1)+R2*cosd(t);
y_c2=pt2(2)+R2*sind(t);

x_02=[0,0,L2,L2,0]+[R2,R2,-R3,-R3,R2]*1.2;
y_02=[-R2,R2,R3,-R3,-R2]*0.8;
x_2=pt2(1)+x_02*dr_x2(1)+y_02*dr_y2(1);
y_2=pt2(2)+x_02*dr_x2(2)+y_02*dr_y2(2);

x_c3=pt3(1)+R3*cosd(t);
y_c3=pt3(2)+R3*sind(t);

x_03=[0,0,L3,L3,0]+R3;
y_03=[-R3,R3,R3,-R3,-R3];
x_3=pt3(1)+x_03*dr_x3(1)+y_03*dr_y3(1);
y_3=pt3(2)+x_03*dr_x3(2)+y_03*dr_y3(2);


x=[x_c1,x_1,nan,x_c2,nan,x_2,nan,x_c3,nan,x_3,nan];
y=[y_c1,y_1,nan,y_c2,nan,y_2,nan,y_c3,nan,y_3,nan];


%{
+[M函数](,M代码)
%}"(,)
的#41""(库#36,画左腿#42)
画左腿#42"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画左腿(_媒介,_凭依)->+[del](,+画左腿)...
->的(画左腿,M代码)...

->宽度(+画左腿,_宽度)->方向(+画左腿,方向#0)...
->髋关节位置(+画左腿,空间点#1)->膝盖位置(+画左腿,空间点#2)->脚踝位置(+画左腿,空间点#3)...
->脚长(+画左腿,长度#3)->脚方向(+画左腿,方向#3)...

->+的(_凭依,+左腿)...
->+的(+左腿,+x)->+的(+左腿,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"angle0\"(+[matlab],方向#0)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->+[.]\"L3\"(+[matlab],长度#3)->+[.]\"angle3\"(+[matlab],方向#3)...
->+[.]\"W0\"(+[matlab],_宽度)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)




"(,)
的#43""(画左腿#42,M代码#44)
M代码#44"%{
+[M函数](,M代码)
%}

R1=W0/3;
R2=0.02*2;
R3=0.02;

t=linspace(0,360,200);
x_c=R*cosd(t);
y_c=R*sind(t);

dr_x1=pt2-pt1;
L1=norm(dr_x1);
dr_x1=dr_x1/norm(dr_x1);
dr_y1=[dr_x1(2),-dr_x1(1)];

dr_x2=pt3-pt2;
L2=norm(dr_x2);
dr_x2=dr_x2/norm(dr_x2);
dr_y2=[dr_x2(2),-dr_x2(1)];

dr_x3=[cosd(angle3),sind(angle3)];
dr_y3=[dr_x3(2),-dr_x3(1)];

t1=linspace(0,180,200)+90+angle0;
x_c1=pt1(1)+R1*cosd(t1);
y_c1=pt1(2)+R1*sind(t1);

x_01=[0,L1,L1,0]+[0,-R2,-R2,0]*1.2;
y_01=[R1,R2*0.8,-R2*0.8,-R1];
x_1=pt1(1)+x_01*dr_x1(1)+y_01*dr_y1(1);
y_1=pt1(2)+x_01*dr_x1(2)+y_01*dr_y1(2);

x_c2=pt2(1)+R2*cosd(t);
y_c2=pt2(2)+R2*sind(t);

x_02=[0,0,L2,L2,0]+[R2,R2,-R3,-R3,R2]*1.2;
y_02=[-R2,R2,R3,-R3,-R2]*0.8;
x_2=pt2(1)+x_02*dr_x2(1)+y_02*dr_y2(1);
y_2=pt2(2)+x_02*dr_x2(2)+y_02*dr_y2(2);

x_c3=pt3(1)+R3*cosd(t);
y_c3=pt3(2)+R3*sind(t);

x_03=[0,0,L3,L3,0]+R3;
y_03=[-R3,R3,R3,-R3,-R3];
x_3=pt3(1)+x_03*dr_x3(1)+y_03*dr_y3(1);
y_3=pt3(2)+x_03*dr_x3(2)+y_03*dr_y3(2);


x=[x_c1,x_1,nan,x_c2,nan,x_2,nan,x_c3,nan,x_3,nan];
y=[y_c1,y_1,nan,y_c2,nan,y_2,nan,y_c3,nan,y_3,nan];


%{
+[M函数](,M代码)
%}"(,)
的#45""(库#36,画屁股#46)
画屁股#46"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画屁股(_媒介,_凭依)->+[del](,+画屁股)...
->的(画屁股,M代码)...

->宽度(+画屁股,_宽度)->长度(+画屁股,_长度)...
->位置(+画屁股,_位置)->方向(+画屁股,_方向)...

->+的(_凭依,+屁股)...
->+的(+屁股,+x)->+的(+屁股,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt5\"(+[matlab],_位置)->+[.]\"angle5\"(+[matlab],_方向)...
->+[.]\"L5\"(+[matlab],_长度)->+[.]\"W5\"(+[matlab],_宽度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#47""(画屁股#46,M代码#48)
M代码#48"%{
+[M函数](,M代码)
%}


r_x=[-sind(angle5),cosd(angle5)];
r_y=[cosd(angle5),sind(angle5)];

x_0=[-W5/2,-W5/2,-0.02,0.02,W5/2,W5/2,-W5/2];
y_0=-[0,-L5+W5/2,-L5+W5/8,-L5+W5/8,-L5+W5/2,0,0];
x=pt5(1)+x_0*r_x(1)+y_0*r_y(1);
y=pt5(2)+x_0*r_x(2)+y_0*r_y(2);


%{
+[M函数](,M代码)
%}"(,)
的#49""(新建腿部#34,描述结构#50)
描述结构#50"\"\"\"


\"\"\"

+描述结构(_媒介,_凭依)...

->+操作(+描述结构,)...

->的(_媒介,屁股)...
    ->的(屁股,长度#0)->的(屁股,宽度#0)->在(屁股,空间点#0)->朝向(屁股,方向#0)...

->的(_媒介,左大腿)...
    ->的(左大腿,长度#1)->在(左大腿,空间点#1)->朝向(左大腿,方向#1)...
->的(_媒介,左小腿)...
    ->的(左小腿,长度#2)->在(左小腿,空间点#2)->朝向(左小腿,方向#2)...
->的(_媒介,左脚)...
    ->的(左脚,长度#3)->在(左脚,空间点#3)->朝向(左脚,方向#3)...

->的(_媒介,右大腿)...
    ->的(右大腿,长度#4)->在(右大腿,空间点#4)->朝向(右大腿,方向#4)...
->的(_媒介,右小腿)...
    ->的(右小腿,长度#5)->在(右小腿,空间点#5)->朝向(右小腿,方向#5)...
->的(_媒介,右脚)...
    ->的(右脚,长度#6)->在(右脚,空间点#6)->朝向(右脚,方向#6)...

->+画屁股(_媒介,_凭依)->+的(+操作,+画屁股)...
    ->+宽度(+画屁股,长度#0)->+长度(+画屁股,宽度#0)...
    ->+位置(+画屁股,空间点#0)->+方向(+画屁股,方向#0)...

->+画左腿(_媒介,_凭依)->+的(+操作,+画左腿)...
    ->+宽度(+画左腿,长度#0)->+方向(+画左腿,方向#1)...
    ->+髋关节位置(+画左腿,空间点#1)->+膝盖位置(+画左腿,空间点#2)...
    ->+脚踝位置(+画左腿,空间点#3)...
    ->+脚长(+画左腿,长度#3)->+脚方向(+画左腿,方向#3)...

->+画右腿(_媒介,_凭依)->+的(+操作,+画右腿)...
    ->+宽度(+画右腿,长度#0)->+方向(+画右腿,方向#4)...
    ->+髋关节位置(+画右腿,空间点#4)->+膝盖位置(+画右腿,空间点#5)...
    ->+脚踝位置(+画右腿,空间点#6)...
    ->+脚长(+画右腿,长度#6)->+脚方向(+画右腿,方向#6)



"(,)
的#51""(降临规则#4,新建头部#52)
新建头部#52"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+新建头部(_媒介,_凭依)->+[del](,+新建头部)...
->的(新建头部,描述结构)->的(新建头部,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[]:
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
            ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
            =>_关联(_操作,_参数)->[说](,_关联)...
            =>+关联(+[做],_参数)->[m_name](_关联,+关联)->[说](,+关联),
        ->[]
}


"(,)
的#53""(新建头部#52,描述结构#54)
描述结构#54"\"\"\"


\"\"\"

+描述结构(_媒介,_凭依)...

->+操作(+描述结构,)...

->的(_媒介,头)...
    ->的(头,半径)->在(头,空间点#1)->朝向(头,方向#1)...
->的(_媒介,脖子)...
    ->的(脖子,长度)->在(脖子,空间点#2)->朝向(脖子,方向#2)...

->+画头(_媒介,_凭依)->+的(+操作,+画头)...
    ->+大小(+画头,半径)->+位置(+画头,空间点#1)->+方向(+画头,方向#1)...
->+画脖子(_媒介,_凭依)->+的(+操作,+画脖子)...
    ->+头部大小(+画脖子,半径)...
    ->+长度(+画脖子,长度)->+位置(+画脖子,空间点#2)->+方向(+画脖子,方向#2)


"(,)
的#55""(新建头部#52,库#56)
库#56"

画头:...
画脖子:...
将条目\"画头\"复制为条目\"画脖子\"



"(,)
的#57""(库#56,画脖子#58)
画脖子#58"\"\"\"
M代码:...

\"\"\"

+画脖子(_媒介,_凭依)->+[del](,+画脖子)...
->的(画脖子,M代码)...

->头部大小(+画脖子,_半径)...
->长度(+画脖子,_长度)->位置(+画脖子,_位置)->方向(+画脖子,_方向)...

->+的(_凭依,+脖子)->+在(+脖子,+空间点)->+朝向(+脖子,+方向)...
->+的(+脖子,+x)->+的(+脖子,+y)...

->+[修改内容](_位置,+空间点)->+[修改内容](_方向,+方向)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"L\"(+[matlab],_长度)->+[.]\"R\"(+[matlab],_半径)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#59""(画脖子#58,M代码#60)
M代码#60"%{
+[M函数](,M代码)
%}

x=[0,0,L,L];
y=[1,-1,-1,1]*R/3;


%{
+[M函数](,M代码)
%}"(,)
的#61""(库#56,画头#62)
画头#62"\"\"\"
M代码:...

\"\"\"

+画头(_媒介,_凭依)->+[del](,+画头)...
->的(画头,M代码)...

->大小(+画头,_半径)->位置(+画头,_位置)->方向(+画头,_方向)...

->+的(_凭依,+头)->+在(+头,+空间点)->+朝向(+头,+方向)...
->+的(+头,+x)->+的(+头,+y)...

->+[修改内容](_位置,+空间点)->+[修改内容](_方向,+方向)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],+空间点)->+[.]\"angle\"(+[matlab],+方向)...
->+[.]\"R\"(+[matlab],_半径)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#63""(画头#62,M代码#64)
M代码#64"%{
+[M函数](,M代码)
%}

t=linspace(0,360,200);
x=R*cosd(t);
y=R*sind(t);

x=[x,nan,-R*0.7,R*0.7,nan,0,0,nan];
y=[y,nan,0,0,nan,-R/2,R/2,nan];


%{
+[M函数](,M代码)
%}"(,)

## end
#421, 250:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...

->召唤星辰(,_凭依)->[==]"素描结构"(,召唤星辰)...

->+新建腿部(_媒介,_凭依)->+的(操作,+新建腿部)...
->+新建身体(_媒介,_凭依)->+的(操作,+新建身体)...
->+新建手臂(_媒介,_凭依)->+的(操作,+新建手臂)...
->+新建肩膀(_媒介,_凭依)->+的(操作,+新建肩膀)...
->+新建头部(_媒介,_凭依)->+的(操作,+新建头部)




## end
#423, 3:
425
## end
#425, 3288:
乘方运算#0"
召唤规则:...
降临规则:...



"(,)
的#1""(乘方运算#0,降临规则#2)
降临规则#2"

乘方1:...
乘方2:...
负号乘方:...


"(,)
的#3""(降临规则#2,负号乘方#4)
负号乘方#4""(,)
的#5""(降临规则#2,乘方2#6)
乘方2#6"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+乘方2(_y,_指数)->+[del](,+乘方2)...
->的(乘方2,描述结构)->的(乘方2,库)...
->的(库,整理底数)...

->+[算式结构转换]\"表达式\"(_指数,+指数)...
->+[code]([想],描述结构)->[想](_y,_指数)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_底数,_指数2)->_底数(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->[]{
            []:->_指数2->+[做](_底数,_指数2)->+[code](+[做],_条目),
            ->+[做](_底数,+指数)->+[code](+[做],_条目)
        }...
        ->+[做](,_底数)->+[code](+[做],整理底数)
}...
->+[del](,+指数)


"(,)
的#7""(乘方2#6,库#8)
库#8"有什么

复杂指数:...
单变量指数:...
指数相乘:...
整理底数:...

将'复杂指数'的\"单变量指数\"替换为\"复杂指数\"


"(,)
的#9""(库#8,指数相乘#10)
指数相乘#10"\"\"\"


\"\"\"

+指数相乘(_n,_m)->+[del](,+指数相乘)...

->+目标->+定理->+乘以(_n,_m)->+的(+目标,+乘以)...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)

"(,)
的#11""(库#8,整理底数#12)
整理底数#12"\"\"\"


\"\"\"




"(,)
的#13""(库#8,复杂指数#14)
复杂指数#14"\"\"\"
操作:...
Nini, 打开词典的条目(节点)

\"\"\"
+复杂指数(_底数,_指数)->+[del](,+复杂指数)...
->的(复杂指数,操作)...

->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...

->+[.]\"底数\"(+[structure],_底数)->+[.]\"指数\"(+[structure],_指数)

"(,)
的#15""(复杂指数#14,操作#16)
操作#16"\"\"\"
+[左连](的,表达式)

\"\"\"

+[表达式转结构](指数,+指数结构);

底数->的(表达式,底数)->的(指数结构,起点)->起点(,_起点)...
->+^(底数,_起点)->+的(表达式,+^)...
->+[del](,起点)->+[del](,指数结构)...
=>的(指数结构,_x)=>+的(表达式,_x);



"(,)
的#17""(库#8,单变量指数#18)
单变量指数#18"\"\"\"


\"\"\"
+单变量指数(_底数,_指数)->+[del](,+单变量指数)...

->的(表达式,_底数)...
->+^(_底数,+指数)->[m_name](_指数,+指数)->[m_text](_指数,+指数)...
->+的(表达式,+^)->+的(表达式,+指数)...
->[]{
    []:->负号(_指数,)->+负号(+指数,)->+的(表达式,+负号),
    ->[]
}

"(,)
的#19""(乘方2#6,描述结构#20)
描述结构#20"\"\"\"
乘式:...
+[新建阅读窗口](,乘式)

\"\"\"

+描述结构(_y,_指数)->+操作(+描述结构,)...
->的(描述结构,乘式)...

->+[code]([想],乘式)->+[.]([想],+操作)->[想](_y,_指数)

"(,)
的#21""(描述结构#20,乘式#22)
乘式#22"\"\"\"
->+复杂指数(_x,)->+的(操作,+复杂指数)

\"\"\"
+乘式(_x,_指数)->乘式(,)...

->.(+乘式,操作)...
->[]{
    []:->_re\"[*/]\"(_x,_x2)->_x2->+[code]([想],乘式)->+[.]([想],操作)->[想](_x2,_指数),
    ->[]
}...

->[]{
    []:->^(_x,_n)->_n->+指数相乘(_n,_指数)->+的(操作,+指数相乘),
        ->+复杂指数(_x,)->+的(操作,+复杂指数)
}
"(,)
的#23""(降临规则#2,乘方1#24)
乘方1#24""(,)
的#25""(乘方运算#0,召唤规则#26)
召唤规则#26"\"\"\"
(x+y)^2->乘方1
(x*y)^2->乘方2
(-x*y)^2->负号乘方
保存:...

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,乘方#2)->乘方#2(_y,_指数2)->_y->_指数2(,)...
        ->+底数(+式子,_y)->+指数(+式子,_指数2)
}...

->底数(+式子,_y)->指数(+式子,_指数)...
->[]{
    []:->_re\"[+\-]\"(_y,_y1)->_y1->+乘方1(_y,_指数)->+的(操作,+乘方1),
    ->+乘方2(_y,_指数)->+的(操作,+乘方2)
}...
->[]{
    []:->负号(_y,)->+负号乘方(负号,_y)->+的(操作,+负号乘方),
    ->[]
}




"(,)
的#27""(召唤规则#26,保存#28)
保存#28"\"\"\"
(x+y)^2->乘方1
(x*y)^2->乘方2
(-x*y)^2->负号乘方
保存:...

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,拆括号)->拆括号(,括号)->^(括号,_指数)...
            ->+括号(+式子,括号)->+指数(+式子,_指数),
        ->的(目标,乘方#2)->乘方#2(_指数2,括号#2)->+括号(+式子,括号#2)->+指数(+括号,_指数2)
}...

->括号(+式子,_括号)->指数(+式子,_指数)...
->的(_括号,_x)->[]{
    []:->_re\"[+\-]\"(_x,_y)->_y->+乘方1(_括号,_指数)->+的(操作,+乘方1),
    ->+乘方2(_括号,_指数)->+的(操作,+乘方2)
}...
->[]{
    []:->负号(_x,)->+负号乘方(负号,_x)->+的(操作,+负号乘方),
    ->[]
}




"(,)

## end
#427, 435:
"""
(x+y)^2->乘方1
(x*y)^2->乘方2
(-x*y)^2->负号乘方
保存:...

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,乘方#2)->乘方#2(_y,_指数2)->_y->_指数2(,)...
        ->+底数(+式子,_y)->+指数(+式子,_指数2)
}...

->底数(+式子,_y)->指数(+式子,_指数)...
->[]{
    []:->_re"[+\-]"(_y,_y1)->_y1->+乘方1(_y,_指数)->+的(操作,+乘方1),
    ->+乘方2(_y,_指数)->+的(操作,+乘方2)
}...
->[]{
    []:->负号(_y,)->+负号乘方(负号,_y)->+的(操作,+负号乘方),
    ->[]
}





## end
#429, 3:
431
## end
#431, 3:
441
## end
#433, 6456:
乘法运算#0"
召唤规则:...
降临规则:...



"(,)
的#1""(乘法运算#0,降临规则#2)
降临规则#2"

乘法1:...
乘法2:...
将乘法2的\"_指数\"替换为\"_乘数2\"
+[新建阅读窗口](,乘法2)


"(,)
的#3""(降临规则#2,乘法1#4)
乘法1#4"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+乘法1(_乘数1,_乘数2)->+[del](,+乘法2)...
->的(乘法1,描述结构)->的(乘法1,库)...

->+[code]([想],描述结构)->[想](_乘数1,_乘数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}


"(,)
的#5""(乘法1#4,库#6)
库#6"

乘以:...




"(,)
的#7""(库#6,乘以#8)
乘以#8"\"\"\"
整理负号:...

\"\"\"

+乘以(_y,_x)->+[del](,+乘以)...
->乘以->的(库,乘以)->的(乘法1,库)->的(降临规则,乘法1)->的(降临规则,乘法2)...
->的(乘以,整理负号)...

->+[做](_y,_x)->+[code](+[做],乘法2)...
->+[做](,_y)->+[code](+[做],整理负号)


"(,)
的#9""(乘以#8,整理负号#10)
整理负号#10"\"\"\"


\"\"\"
+整理负号(,_y)->+[del](,+整理负号)...

->负号(_y,)->+[del](,负号):
    ->+(,_y)->+[修改标题]\"-\"(,+)->+[修改内容]\"-\"(,+),
    ->-(,_y)->+[修改标题]\"+\"(,-)->+[修改内容]\"+\"(,-)



"(,)
的#11""(乘法1#4,描述结构#12)
描述结构#12"\"\"\"
依次乘以:...
+[新建阅读窗口](,依次乘以)

\"\"\"

+描述结构(_乘数1,_乘数2)->+操作(+描述结构,)...
->的(描述结构,依次乘以)...

->+[code]([想]#2,依次乘以)->+[.]([想]#2,+操作)->[想]#2(_乘数1,_乘数2)

"(,)
的#13""(描述结构#12,依次乘以#14)
依次乘以#14"\"\"\"


\"\"\"
+依次乘以(_y,_x)->依次乘以(,)...

->.(+依次乘以,操作)->[]{
    []:->_re\"[+\-]\"(_y,_y2)->_y2->+[code]([想],依次乘以)->+[.]([想],操作)->[想](_y2,_x),
    ->[]
}...

->+乘以(_y,_x)->+的(操作,+乘以)


"(,)
的#15""(降临规则#2,乘法2#16)
乘法2#16"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+乘法2(_乘数1,_乘数2)->+[del](,+乘法2)...
->的(乘法2,描述结构)->的(乘法2,库)...
->的(库,整理负号)...

->+[code]([想],描述结构)->[想](_乘数1,_乘数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}...

->+[做](_乘数1,_乘数2)->+[code](+[做],整理负号)


"(,)
的#17""(乘法2#16,库#18)
库#18"

数字乘以:...
变量乘以:...
新变量:...
乘以0:...

整理负号:...

"(,)
的#19""(库#18,乘以0#20)
乘以0#20"\"\"\"


\"\"\"

+乘以0(_y,_0)->+[del](,+乘以0)...

->+[修改标题]\"0\"(,_y)...
->[]{
    []=>_re\"[*/\^]\"(_y,)=>+[del](,_re)
}

"(,)
的#21""(库#18,整理负号#22)
整理负号#22"\"\"\"


\"\"\"

+整理负号(_y,_x)->+[del](,+整理负号)...

->的(表达式,_y)->[]:
    ->[is](_y,0#1)->负号(_y,)->+[del](,负号),
    ->[is](_y,0#2),

    ->负号#x(_x,)->负号#y(_y,)->+[del](,负号#y),
    ->负号(_x,)->+负号(_y,)->+的(表达式,+负号),
    ->[]

"(,)
的#23""(库#18,新变量#24)
新变量#24"\"\"\"
保存:...
操作:...
+[新建阅读窗口](,操作)

\"\"\"

+新变量(_y,_x)->+[del](,+新变量)...
->的(新变量,操作)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->_re\"[*/]\"(,_x)->+[修改标题](_re,+运算),
    ->+[修改标题]\"*\"(,+运算)
}...
->[]{
    []:->_re\"[*/]\"(_y,)->+[左连](_re,+变量),
    ->[]
}...

->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...

->+[.](+[structure],+变量)->+[.](+[structure],表达式)...
->+[.](+[structure],+乘数)->+乘数(,_x)...
->+[del](,+变量)->+[del](,+乘数)


"(,)
的#25""(新变量#24,保存#26)
保存#26"\"\"\"
保存:...

\"\"\"

+新变量(_y,_x)->+[del](,+新变量)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->+[修改标题](_x,+变量)
}...
->[]{
    []:->_re\"[*/]\"(,_x)->+[修改标题](_re,+运算),
    ->+[修改标题]\"*\"(,+运算)
}...

->[]{
    []:->_re\"[*/]\"(_y,)->+[左连](_re,+变量),
    ->[]
}


"(,)
的#27""(新变量#24,操作#28)
操作#28"\"\"\"
Nini, 打开公式分析器(文件)

\"\"\"

+[修改内容]\"表达式\"(,记忆);
乘数(,_x)->+新变量->[]{
    []:->_re\"[*/]\"(_x,)->+[左连](_re,)->+[乘式](_x,+新变量)->+[左连](_re,_x),
    ->+[乘式](_x,+新变量)
}->+[表达式转结构](+新变量,+新变量);

的(新变量,起点)->起点(,_x)->变量&:
    =>_re#1\"[*/]\"(变量,)=>+[左连](_re#1,_x),
    =>_re#2\"[*/]\"(,变量)=>+[右连](_re#2,_x);

的(新变量,起点)->起点(,_起点)...
->+[del](,起点)->+[del](,新变量)...
=>的(新变量,_x)=>+的(表达式,_x);


"(,)
的#29""(操作#28,新窗口#30)
新窗口#30""(公式分析器,)
的#31""(新窗口#30,m_compiler#32)
m_compiler#32""(,compiler)
的#33""(新窗口#30,m_port#34)
m_port#34""(,端口)
的#35""(新窗口#30,m_event#36)
m_event#36""(,event)
的#37""(新窗口#30,m_readPtr#38)
m_readPtr#38""(,)
的#39""(新窗口#30,m_cursor#40)
m_cursor#40"0,0"(,)
的#41""(新窗口#30,m_x#42)
m_x#42"958"(,)
的#43""(新窗口#30,m_y#44)
m_y#44"38"(,)
的#45""(新窗口#30,m_height#46)
m_height#46"476"(,)
的#47""(新窗口#30,m_width#48)
m_width#48"961"(,)
的#49""(库#18,变量乘以#50)
变量乘以#50"\"\"\"


\"\"\"

+变量乘以(_y,_x)->+[del](,+变量乘以)...

->+目标->+定理->的(表达式,_y)->[]{
    []:->^(_y,_指数)->_指数->[]{
        []:->^(_x,_指数2)->_指数2->+加上(_指数,_指数2)->+的(+目标,+加上),
        ->+加上(_指数,+1)->+的(+目标,+加上)
    },
    ->+^(_y,+1)->+的(表达式,+^)->+的(表达式,+1)->[]{
        []:->^(_x,_指数2)->_指数2->+加上(+1,_指数2)->+的(+目标,+加上),
        ->+加上(+1,+1#0)->+的(+目标,+加上)
    }
}...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)

"(,)
的#51""(库#18,数字乘以#52)
数字乘以#52"\"\"\"
M代码:...

\"\"\"

+数字乘以(_y,_x)->+[del](,+数字乘以)...
->的(数字乘以,M代码)...

->+[标题]#y(_y,)->+[标题]#x(_x,)...
->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
->+[.]\"x\"(+[matlab],+[标题]#x)->+[.]\"y\"(+[matlab],+[标题]#y)...

->+[修改内容](+[临时文本],+[修改标题]#y)->+[修改标题]#y(,_y)...
->+[修改内容](+[临时文本],+[修改内容]#y)->+[修改内容]#y(,_y)



"(,)
的#53""(数字乘以#52,M代码#54)
M代码#54"%{
+[matlab]\"int64(1)\"(Matlab,+[消息窗口])
%}

y=y*x;
if floor(y)==y
    ans=int64(y);
else
    ans=y;
end


"(,)
的#55""(乘法2#16,描述结构#56)
描述结构#56"\"\"\"
乘式:...
依次乘以:...
+[新建阅读窗口](,乘式)

\"\"\"

+描述结构(_乘数1,_乘数2)->+操作(+描述结构,)...
->的(描述结构,乘式)->的(描述结构,依次乘以)...

->+乘式(_乘数1,)...
->+[code]([想],乘式)->[想](+乘式,_乘数1)...

->+[code]([想]#2,依次乘以)->+[.]([想]#2,+操作)->[想]#2(+乘式,_乘数2)

"(,)
的#57""(描述结构#56,依次乘以#58)
依次乘以#58"\"\"\"


\"\"\"
+依次乘以(乘式,_x)->依次乘以(,)...

->乘式(_ys,)...
->.(+依次乘以,操作)->[]{
    []:->_re\"[*/]\"(_x,_x2)->_x2->+[code]([想],依次乘以)->+[.]([想],操作)->[想](乘式,_x2),
    ->[]
}...

->尾部(乘式,_ye)...
->[]{
    []:->[is](_x,1)->1,
    ->[is](_x,0)->0->+乘以0(_ys,_x)->+的(操作,+乘以0),
    ->[is](_x,_re)->_re\"^-?[0-9]+\.?[0-9]*$\"...
        ->的(乘式,_re#0)->_re#0\"^-?[0-9]+\.?[0-9]*$\"...
        ->+数字乘以(_re#0,_re)->+的(操作,+数字乘以),
    ->[is](_x,_re#2)->_re#2\"\\?[0-9a-zA-Z_]+\"...
        ->的(乘式,_y)->_y->[eq](_x,_y)->+变量乘以(_y,_x)->+的(操作,+变量乘以),
    ->+新变量(_ye,_x)->+的(操作,+新变量)
}


"(,)
的#59""(描述结构#56,乘式#60)
乘式#60"\"\"\"


\"\"\"
+乘式(乘式#0,_x)->乘式(,)...

->[]{
    []:->_re\"[*/]\"(_x,_x2)->_x2->+[code]([想],乘式)->[想](乘式#0,_x2),
    ->+尾部(乘式#0,_x)
}...

->+的(乘式#0,_x)


"(,)
的#61""(乘法运算#0,召唤规则#62)
召唤规则#62"\"\"\"

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,乘以)->乘以(_乘数1,_乘数2)->_乘数1->_乘数2(,)...
        ->+乘数1(+式子,_乘数1)->+乘数2(+式子,_乘数2)->[]{
            []:->项(乘以,_乘数1)->+项(+乘数1,),
            ->[]
        }
}...

->乘数1(+式子,_乘数1)->乘数2(+式子,_乘数2)...
->[]{
    []:->项(乘数1,)->+乘法2(_乘数1,_乘数2)->+的(操作,+乘法2),
    ->_re\"[+\-]\"(_乘数1,_y)->_y->+乘法1(_乘数1,_乘数2)->+的(操作,+乘法1),
    ->+乘法2(_乘数1,_乘数2)->+的(操作,+乘法2)
}




"(,)

## end
#435, 453:
"""

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,乘以)->乘以(_乘数1,_乘数2)->_乘数1->_乘数2(,)...
        ->+乘数1(+式子,_乘数1)->+乘数2(+式子,_乘数2)->[]{
            []:->项(乘以,_乘数1)->+项(+乘数1,),
            ->[]
        }
}...

->乘数1(+式子,_乘数1)->乘数2(+式子,_乘数2)...
->[]{
    []:->项(乘数1,)->+乘法2(_乘数1,_乘数2)->+的(操作,+乘法2),
    ->_re"[+\-]"(_乘数1,_y)->_y->+乘法1(_乘数1,_乘数2)->+的(操作,+乘法1),
    ->+乘法2(_乘数1,_乘数2)->+的(操作,+乘法2)
}





## end
#437, 11352:
加法运算#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
将'召唤规则'的\"乘法\"替换为\"加法\"

"(,)
的#1""(加法运算#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,加上)->加上(_和数1,_和数2)->_和数1->_和数2(,)...
        ->+和数1(+式子,_和数1)->+和数2(+式子,_和数2)
}...

->和数1(+式子,_和数1)->和数2(+式子,_和数2)...

->+整理和式(_和数1,_和数1)->+的(操作,+整理和式)...
->[]{
    []:->_re\"[+\-]\"(_和数1,_y)->_y->+加法1(_和数1,_和数2)->+的(操作,+加法1),
    ->+加法2(_和数1,_和数2)->+的(操作,+加法2)
}




"(,)
的#3""(加法运算#0,降临规则#4)
降临规则#4"

加法1:...
加法2:...
(加法2是第一个和数是单一数字时的加法)

+[修改标题]\"加法2\"(,乘法2)
将加法1的\"乘数\"替换为\"和数\"
+[新建阅读窗口](,加法2)

整理和式:...
+[新建阅读窗口](,整理和式)


"(,)
的#5""(降临规则#4,加法2#6)
加法2#6"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)
+[新建阅读窗口](,库)
将'描述结构'的\"乘以\"替换为\"加上\"

\"\"\"

+加法2(_和数1,_和数2)->+[del](,+加法2)...
->的(加法2,描述结构)->的(加法2,库)...

->+[code]([想],描述结构)->[想](_和数1,_和数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}



"(,)
的#7""(加法2#6,描述结构#8)
描述结构#8"\"\"\"
和式:...
加上:...
+[新建阅读窗口](,和式)
将'加上'的\"乘以\"替换为\"加上\"

\"\"\"

+描述结构(_和数1,_和数2)->+操作(+描述结构,)...
->的(描述结构,和式)->的(描述结构,加上)...

->+和式(_和数1,)...
->+[code]([想],和式)->[想](+和式,_和数1)...

->+[code]([想]#2,加上)->+[.]([想]#2,+操作)->[想]#2(+和式,_和数2)

"(,)
的#9""(描述结构#8,和式#10)
和式#10"\"\"\"
...
->[]{
    []:->[is](_x,_re#0)->_re#0\"-?[0-9]+\.?[0-9]*\"...
        ->_re\"[*/]\"(_x,_re#2)->_re#2\"\\?[a-zA-Z0-9_]\"->+首变量(+的,_re#2),
    ->[is](_x,_re#1)->_re#1\"\\?[a-zA-Z0-9_]\"->+首变量(+的,_x),
    ->[]
}

\"\"\"
+和式(和式#0,_x)->和式(,)...

->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],和式)->[想](和式#0,_x2),
    ->+尾部(和式#0,_x)
}...

->+的(和式#0,_x)




"(,)
的#11""(描述结构#8,加上#12)
加上#12"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

版本1:...
(连续相加的版本)
保存:...

->+[code]([想],首变量)->[想](_x,)...

\"\"\"
+加上(和式,_x)->加上(,)...
->的(加上,首变量)->的(加上,数字项)...

->和式(_ys,)->.(+加上,操作)...
->尾部(和式,_ye)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_y,)...
        ->+数字相加(_y,_x)->+的(操作,+数字相加)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#13""(加上#12,首变量#14)
首变量#14"\"\"\"


\"\"\"
+首变量(_x,)...
->[]{
    []:->[is](_x,_re#0)->_re#0\"^-?[0-9]+\.?[0-9]*\"...
        ->_re\"[*/]\"(_x,_re#2)->_re#2\"\\?[a-zA-Z0-9_]|括号\"->+是(+首变量,_re#2),
    ->[is](_x,_re#1)->_re#1\"\\?[a-zA-Z0-9_]|括号\"->+是(+首变量,_x)
}


"(,)
的#15""(加上#12,数字项#16)
数字项#16"\"\"\"


\"\"\"

+数字项(_x,)->[is](_x,_re)->_re\"^-?[0-9]+\.?[0-9]*\"...
=>_re\"[*/\^]\"(_x,)


"(,)
的#17""(加上#12,版本1#18)
版本1#18"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

\"\"\"
+加上(和式,_x)->加上(,)...
->的(加上,首变量)->的(加上,数字项)...

->和式(_ys,)->.(+加上,操作)...
->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],加上)->+[.]([想],操作)->[想](和式,_x2),
    ->[]
}...
->尾部(和式,_ye)...
->+[code]([想],首变量)->[想](_x,)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_x,)...
        ->+数字相加(_y,_x)->+的(操作,+数字相加)
    },
    ->+[code]([想]#2,首变量)->[想]#2(_x,)->是([想]#2,_xa)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#3,首变量)->[想]#3(_y,)...
            ->是([想]#3,_ya)->[eq](_xa,_ya)...
            ->+系数相加(_y,_x)->+的(操作,+系数相加)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#19""(加上#12,保存#20)
保存#20"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

版本1:...
(连续相加的版本)
保存:...

\"\"\"
+加上(和式,_x)->加上(,)...
->的(加上,首变量)->的(加上,数字项)...

->和式(_ys,)->.(+加上,操作)...
->尾部(和式,_ye)...
->+[code]([想],首变量)->[想](_x,)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_y,)...
        ->+数字相加(_y,_x)->+的(操作,+数字相加)
    },
    ->+[code]([想]#2,首变量)->[想]#2(_x,)->是([想]#2,_xa)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#3,首变量)->[想]#3(_y,)...
            ->是([想]#3,_ya)->[eq](_xa,_ya)...
            ->+系数相加(_y,_x)->+的(操作,+系数相加)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#21""(加法2#6,库#22)
库#22"+[删除结构](,库)

数字相加:...
系数相加:...
新项:...
将'数字相加'的\"数字乘以\"替换为\"数字相加\"
将新项的\"乘数\"替换为\"和数\"
+[新建阅读窗口](,新项)


"(,)
的#23""(库#22,数字相加#24)
数字相加#24"\"\"\"
M代码:...

\"\"\"

+数字相加(_y,_x)->+[del](,+数字相加)...
->的(数字相加,M代码)...

->+[标题]#y(_y,)->+[标题]#x(_x,)...
->Matlab->[]{
    []:->[]{[]:->负号(_y,),->-(,_y)}->[]{[]:->负号(_x,),->-(,_x)},
    ->[]{[]:->负号(_y,),->-(,_y)}...
        ->+[matlab]\"ans=-x;\"(Matlab,+[标题]#x)->+[.]\"x\"(+[matlab],+[标题]#x),
    ->[]{[]:->负号(_x,),->-(,_x)}...
        ->+[matlab]\"ans=-x;\"(Matlab,+[标题]#x)->+[.]\"x\"(+[matlab],+[标题]#x),
    ->[]
}...

->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
->+[.]\"x\"(+[matlab],+[标题]#x)->+[.]\"y\"(+[matlab],+[标题]#y)...

->+[修改内容](+[临时文本],+[修改标题]#y)->+[修改标题]#y(,_y)...
->+[修改内容](+[临时文本],+[修改内容]#y)->+[修改内容]#y(,_y)



"(,)
的#25""(数字相加#24,M代码#26)
M代码#26"%{

%}

y=y+x;
if floor(y)==y
    ans=int64(y);
else
    ans=y;
end



"(,)
的#27""(库#22,系数相加#28)
系数相加#28"\"\"\"
保存:...

\"\"\"

+系数相加(_y,_x)->+[del](,+系数相加)...
->系数相加->的(库,系数相加)->的(库,数字相加)...

->的(表达式,_y)...
->+头部->[]{
    []:->[is](_y,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[.](+头部,_y),
    ->_re\"[*/]\"(_y2,_y)->_y2->+[.](+头部,_y2),
    ->+1\"1\"->+的(表达式,+1)->[]{
        []&:=>_re\"[*/]\"(_y,)=>+[左连](_re,+1)
    }->+*(_y,+1)->+的(表达式,+*)->+[.](+头部,+1)
}...

->.(+头部,_n)->[]{
    []:->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[做](_n,_x)->+[code](+[做],数字相加),
    ->+1->[]{
        []:->负号(_x,)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->-(,_x)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->+[做](_n,+1)->+[code](+[做],数字相加)
    }->+[del](,+1)
}





"(,)
的#29""(系数相加#28,保存#30)
保存#30"\"\"\"


\"\"\"

+系数相加(_y,_x)->+[del](,+系数相加)...
->系数相加->的(库,系数相加)->的(库,数字相加)...

->的(表达式,_y)...
->+头部->[]{
    []:->[is](_y,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[.](+头部,_y),
    ->_re\"[*/]\"(_y2,_y)->_y2->+[.](+头部,_y2),
    ->+1\"1\"->+*(+1,_y)->+的(表达式,+1)->+的(表达式,+*)->[]{
        []&:=>_re\"[+\-]|负号\"(_y,)=>+[左连](_re,+1),
        =>_re\"[+\-]\"(,_y)=>+[右连](_re,+1)
    }->+[.](+头部,+1)
}...

->.(+头部,_n)->[]{
    []:->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[做](_n,_x)->+[code](+[做],数字相加),
    ->+1->[]{
        []:->负号(_x,)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->-(,_x)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->+[做](_n,+1)->+[code](+[做],数字相加)
    }->+[del](,+1)
}





"(,)
的#31""(库#22,新项#32)
新项#32"\"\"\"
保存:...
操作:...
+[新建阅读窗口](,保存)

\"\"\"
+新项(_y,_x)->+[del](,+新项)...
->的(新项,操作)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->_re\"[+\-]\"(,_x)->+[修改标题](_re,+运算),
    ->+[修改标题]\"+\"(,+运算)
}...
->[]{
    []:->_re\"[+\-]\"(_y,)->+[左连](_re,+变量),
    ->[]
}...

->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...

->+[.](+[structure],+变量)->+[.](+[structure],表达式)...
->+[.](+[structure],+和数)->+和数(,_x)...
->+[del](,+变量)->+[del](,+和数)


"(,)
的#33""(新项#32,保存#34)
保存#34"\"\"\"
保存:...

\"\"\"
+新项(_y,_x)->+[del](,+新项)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->+[修改标题](_x,+变量)
}...
->[]{
    []:->_re\"[+\-]\"(,_x)->+[修改标题](_re,+运算),
    ->+[修改标题]\"+\"(,+运算)
}...

->[]{
    []:->_re\"[+\-]\"(_y,)->+[左连](_re,+变量),
    ->[]
}



"(,)
的#35""(新项#32,操作#36)
操作#36"\"\"\"


\"\"\"

+[修改内容]\"表达式\"(,记忆);
和数(,_x)->+[乘式](_x,+新变量)->+[表达式转结构](+新变量,+新变量);

的(新变量,起点)->起点(,_x)->变量&:
    =>_re#1\"[+\-]\"(变量,)=>+[左连](_re#1,_x),
    =>_re#2\"[+\-]\"(,变量)=>+[右连](_re#2,_x);

的(新变量,起点)->起点(,_起点)...
->+[del](,起点)->+[del](,新变量)...
=>的(新变量,_x)=>+的(表达式,_x);


"(,)
的#37""(降临规则#4,加法1#38)
加法1#38"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+加法1(_和数1,_和数2)->+[del](,+加法2)...
->的(加法1,描述结构)->的(加法1,库)...

->+[code]([想],描述结构)->[想](_和数1,_和数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}


"(,)
的#39""(加法1#38,描述结构#40)
描述结构#40"\"\"\"
依次加上:...
+[新建阅读窗口](,依次加上)
+[修改标题]\"依次加上\"(,依次乘以)
将'依次加上'的\"乘以\"替换为\"加上\"

\"\"\"

+描述结构(_和数1,_和数2)->+操作(+描述结构,)...
->的(描述结构,依次加上)...

->+[code]([想]#2,依次加上)->+[.]([想]#2,+操作)->[想]#2(_和数1,_和数2)

"(,)
的#41""(描述结构#40,依次加上#42)
依次加上#42"\"\"\"


\"\"\"
+依次加上(_y,_x)->依次加上(,)...

->.(+依次加上,操作)->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],依次加上)->+[.]([想],操作)->[想](_y,_x2),
    ->[]
}...

->+加上(_y,_x)->+的(操作,+加上)


"(,)
的#43""(加法1#38,库#44)
库#44"

加上:...
+[新建阅读窗口](,加上)
将'加上'的\"乘法\"替换为\"加法\"




"(,)
的#45""(库#44,加上#46)
加上#46"\"\"\"
整理负号:...

\"\"\"

+加上(_y,_x)->+[del](,+加上)...
->加上->的(库,加上)->的(加法1,库)->的(降临规则,加法1)->的(降临规则,加法2)...
->的(加上,整理负号)...

->+[做](_y,_x)->+[code](+[做],加法2)


"(,)
的#47""(加上#46,整理负号#48)
整理负号#48"\"\"\"


\"\"\"
+整理负号(,_y)->+[del](,+整理负号)...

->负号(_y,)->+[del](,负号):
    ->+(,_y)->+[修改标题]\"-\"(,+)->+[修改内容]\"-\"(,+),
    ->-(,_y)->+[修改标题]\"+\"(,-)->+[修改内容]\"+\"(,-)



"(,)
的#49""(降临规则#4,整理和式#50)
整理和式#50"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+整理和式(,_和数)->+[del](,+整理和式)...
->的(整理和式,描述结构)->的(整理和式,库)...

->+[code]([想],描述结构)->[想](,_和数)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_x)->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](,_x)->+[code](+[做],_条目)
}


"(,)
的#51""(整理和式#50,描述结构#52)
描述结构#52"\"\"\"
和式:...
+[新建阅读窗口](,和式)

\"\"\"

+描述结构(,_和数)->+操作(+描述结构,)...
->的(描述结构,和式)...

->+头部(+和式,_和数)...
->+[code]([想],和式)->+[.]([想],+操作)->[想](+和式,_和数)


"(,)
的#53""(描述结构#52,和式#54)
和式#54"\"\"\"


\"\"\"
+和式(和式#0,_x)->和式(,)...

->.(+和式,操作)...
->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],和式)->+[.]([想],操作)->[想](和式#0,_x2),
    ->+尾部(和式#0,_x)
}...

->[标题](_x,)->Python:
    ->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"...
    ->[]{
        []:->+[.]\"n\"([python],[标题])->[python]\"state=(n[0]==1)\"(Python,)...
            ->+去掉1(,_x)->+的(操作,+去掉1),
        ->+[.]\"n\"([python]#1,[标题])->[python]#1\"state=(n[0]==-1)\"(Python,)...
            ->+去掉1(,_x)->+的(操作,+去掉1)->+加负号(,_x)->+的(操作,+加负号),
        ->+[.]\"n\"([python]#2,[标题])->[python]#2\"state=(n[0]<0)\"(Python,)...
            ->+加负号(,_x)->+的(操作,+加负号),
        ->+[.]\"n\"([python]#2,[标题])->[python]#2\"state=(n[0]==0)\"(Python,)...
        ->[]{
            []:->头部(和式#0,_x)...
                ->+去掉0_头部(,_x)->+的(操作,+去掉0_头部),
            ->+去掉0(,_x)->+的(操作,+去掉0)
        },
        ->[]
    },
    ->[]



"(,)
的#55""(整理和式#50,库#56)
库#56"

去掉1:...
加负号:...
去掉0:...
去掉0_头部:...





"(,)
的#57""(库#56,去掉1#58)
去掉1#58"\"\"\"


\"\"\"

+去掉1(,_y)->+[del](,+去掉1)...

->*(_y,_y1)->[]{
    []&:=>_re#1\"[+\-]|起点\"(,_y)=>+[右连](_re#1,_y1),
    =>的(括号,_y)->括号=>+[右连](的,_y1),
    =>_re#2\"[+\-]|负号\"(_y,)=>+[左连](_re#2,_y1)
}...

->+[del](,_y)->+[del](,*)
"(,)
的#59""(库#56,加负号#60)
加负号#60"\"\"\"
M代码:...

\"\"\"

+加负号(,_x)->+[del](,+加负号)...
->的(加负号,M代码)...

->+[标题]#x(_x,)...
->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
->+[.]\"n\"(+[matlab],+[标题]#x)...
->+[修改内容](+[临时文本],+[修改标题])->+[修改标题](,_x)...
->+[修改内容](+[临时文本],_x)...

->[]{
    []:->负号(_x,)->+[del](,负号),
    ->-(,_x)->+[修改标题]\"+\"(,-)->+[修改内容]\"+\"(,-),
    ->+(,_x)->+[修改标题]\"-\"(,+)->+[修改内容]\"-\"(,+),
    ->[]
}




"(,)
的#61""(加负号#60,M代码#62)
M代码#62"%{

%}

y=-y;
if floor(y)==y
    ans=int64(y);
else
    ans=y;
end



"(,)
的#63""(库#56,去掉0#64)
去掉0#64"\"\"\"


\"\"\"

+去掉0(,_y)->+[del](,+去掉0)...

->_re\"[+\-]\"(_y0,_y)->[]{
    []=>_re#2\"[+\-]\"(_y,)=>+[左连](_re#2,_y0)
}...

->+[del](,_y)->+[del](,_re)


"(,)
的#65""(库#56,去掉0_头部#66)
去掉0_头部#66"\"\"\"


\"\"\"

+去掉0_头部(,_y)->+[del](,+去掉0_头部)...

->[]{
    []=>_re\"[*/]|负号\"(_y,)=>+[del](,_re)
}


"(,)

## end
#439, 374:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,加上)->加上(_和数1,_和数2)->_和数1->_和数2(,)...
        ->+和数1(+式子,_和数1)->+和数2(+式子,_和数2)
}...

->和数1(+式子,_和数1)->和数2(+式子,_和数2)...

->+整理和式(_和数1,_和数1)->+的(操作,+整理和式)...
->[]{
    []:->_re"[+\-]"(_和数1,_y)->_y->+加法1(_和数1,_和数2)->+的(操作,+加法1),
    ->+加法2(_和数1,_和数2)->+的(操作,+加法2)
}





## end
#441, 3:
445
## end
#443, 4277:
能谱仪原型#0"+[显示三维场景]\"2\"(,能谱仪原型)

有GasCell, 磁铁, fiducial1, fiducial2, IP1

GasCell是立方体(2,2,6)
磁铁是立方体(5,5,6)
fiducial1是物体\"fiducial1\"
fiducial2是物体\"fiducial2\"
IP1是立方体(40,20,0.5)

磁铁在(0,0,-3)
GasCell距离磁铁为(-9.5,0,3)
fiducial1距离磁铁为(121.3,0,3)
fiducial2距离fiducial1为(50.8,0,0)
IP1距离磁铁为(273.3,0,3)

GasCell背向IP1
IP1朝向GasCell

磁铁有磁感应强度和磁场尺寸
磁铁的磁感应强度是\"1.4820\"
磁铁的磁场尺寸是(5,5)


Nini, 打开天书(文件)
+[显示三维场景]\"2\"(,能谱仪原型)"(,)
的#1""(能谱仪原型#0,GasCell#2)
GasCell#2""(,)
在#3""(GasCell#2,空间点#4)
空间点#4"-9.5, 0.0, 0.0"(,)
朝向#5""(GasCell#2,方向#6)
方向#6"-90.0, 90.0, 0.0"(,)
的#7""(GasCell#2,类型#8)
类型#8"立方体"(,)
的#9""(GasCell#2,长度#10)
长度#10"2.0"(,)
的#11""(GasCell#2,宽度#12)
宽度#12"2.0"(,)
的#13""(GasCell#2,高度#14)
高度#14"6.0"(,)
的#15""(GasCell#2,X#16)
X#16"-1.0, -1.0;
1.0, 1.0;
1.0, 1.0;
-1.0, -1.0;
-1.0, -1.0"(,)
的#17""(GasCell#2,Y#18)
Y#18"-1.0, -1.0;
-1.0, -1.0;
1.0, 1.0;
1.0, 1.0;
-1.0, -1.0"(,)
的#19""(GasCell#2,Z#20)
Z#20"0.0, 6.0;
0.0, 6.0;
0.0, 6.0;
0.0, 6.0;
0.0, 6.0"(,)
的#21""(能谱仪原型#0,磁铁#22)
磁铁#22""(,)
在#23""(磁铁#22,空间点#24)
空间点#24"0,0,-3"(,)
的#25""(磁铁#22,类型#26)
类型#26"立方体"(,)
的#27""(磁铁#22,长度#28)
长度#28"5.0"(,)
的#29""(磁铁#22,宽度#30)
宽度#30"5.0"(,)
的#31""(磁铁#22,高度#32)
高度#32"6.0"(,)
的#33""(磁铁#22,X#34)
X#34"-2.5, -2.5;
2.5, 2.5;
2.5, 2.5;
-2.5, -2.5;
-2.5, -2.5"(,)
的#35""(磁铁#22,Y#36)
Y#36"-2.5, -2.5;
-2.5, -2.5;
2.5, 2.5;
2.5, 2.5;
-2.5, -2.5"(,)
的#37""(磁铁#22,Z#38)
Z#38"0.0, 6.0;
0.0, 6.0;
0.0, 6.0;
0.0, 6.0;
0.0, 6.0"(,)
的#39""(磁铁#22,磁感应强度#40)
磁感应强度#40"1.4820"(,)
的#41""(磁铁#22,磁场尺寸#42)
磁场尺寸#42"5,5"(,)
的#43""(能谱仪原型#0,fiducial1#44)
fiducial1#44""(,)
在#45""(fiducial1#44,空间点#46)
空间点#46"121.3, 0.0, 0.0"(,)
朝向#47""(fiducial1#44,方向#48)
方向#48"90.0, 90.0, 0.0"(,)
样式#49"曲线"(fiducial1#44,)
的#50""(fiducial1#44,Z#51)
Z#51"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0"(,)
的#52""(fiducial1#44,Y#53)
Y#53"10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0;
-10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0"(,)
的#54""(fiducial1#44,X#55)
X#55"-6.588760000000001, -4.754880000000002, -3.444240000000002, -2.4384, -1.6014700000000013, -0.8432800000000019, 0.0, 0.7848599999999981;
-6.588760000000001, -4.754880000000002, -3.444240000000002, -2.4384, -1.6014700000000013, -0.8432800000000019, 0.0, 0.7848599999999981"(,)
的#56""(fiducial1#44,线位置#57)
线位置#57"-6.588760000000001, -4.754880000000002, -3.444240000000002, -2.4384, -1.6014700000000013, -0.8432800000000019, 0.0, 0.7848599999999981"(,)
的#58""(能谱仪原型#0,fiducial2#59)
fiducial2#59""(,)
在#60""(fiducial2#59,空间点#61)
空间点#61"172.1, 0.0, 0.0"(,)
朝向#62""(fiducial2#59,方向#63)
方向#63"90.0, 90.0, 0.0"(,)
样式#64"曲线"(fiducial2#59,)
的#65""(fiducial2#59,Z#66)
Z#66"0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0;
0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0"(,)
的#67""(fiducial2#59,Y#68)
Y#68"10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0;
-10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0"(,)
的#69""(fiducial2#59,X#70)
X#70"-8.361680000000002, -5.971540000000001, -4.2291, -2.89433, -1.772920000000001, -0.7620000000000018, 0.0, 0.767079999999999;
-8.361680000000002, -5.971540000000001, -4.2291, -2.89433, -1.772920000000001, -0.7620000000000018, 0.0, 0.767079999999999"(,)
的#71""(fiducial2#59,线位置#72)
线位置#72"-8.361680000000002, -5.971540000000001, -4.2291, -2.89433, -1.772920000000001, -0.7620000000000018, 0.0, 0.767079999999999"(,)
的#73""(能谱仪原型#0,IP1#74)
IP1#74""(,)
在#75""(IP1#74,空间点#76)
空间点#76"273.3, 0.0, 0.0"(,)
朝向#77""(IP1#74,方向#78)
方向#78"-90.0, 90.0, 0.0"(,)
的#79""(IP1#74,类型#80)
类型#80"立方体"(,)
的#81""(IP1#74,长度#82)
长度#82"20.0"(,)
的#83""(IP1#74,宽度#84)
宽度#84"40.0"(,)
的#85""(IP1#74,高度#86)
高度#86"0.5"(,)
的#87""(IP1#74,X#88)
X#88"-20.0, -20.0;
20.0, 20.0;
20.0, 20.0;
-20.0, -20.0;
-20.0, -20.0"(,)
的#89""(IP1#74,Y#90)
Y#90"-10.0, -10.0;
-10.0, -10.0;
10.0, 10.0;
10.0, 10.0;
-10.0, -10.0"(,)
的#91""(IP1#74,Z#92)
Z#92"0.0, 0.5;
0.0, 0.5;
0.0, 0.5;
0.0, 0.5;
0.0, 0.5"(,)
的#93""(能谱仪原型#0,新窗口#94)
新窗口#94""(天书,)
的#95""(新窗口#94,m_compiler#96)
m_compiler#96""(,compiler)
的#97""(新窗口#94,m_port#98)
m_port#98""(,端口)
的#99""(新窗口#94,m_event#100)
m_event#100""(,event)
的#101""(新窗口#94,m_readPtr#102)
m_readPtr#102""(,记录星辰)
的#103""(新窗口#94,m_cursor#104)
m_cursor#104"0,0"(,)
的#105""(新窗口#94,m_x#106)
m_x#106"1"(,)
的#107""(新窗口#94,m_y#108)
m_y#108"553"(,)
的#109""(新窗口#94,m_height#110)
m_height#110"476"(,)
的#111""(新窗口#94,m_width#112)
m_width#112"956"(,)

## end
#445, 3:
451
## end
#447, 27224:
投影规则#0"

召唤规则:...
降临规则:...




"(,)
的#1""(投影规则#0,降临规则#2)
降临规则#2"+[复制结构](,整理结构)

设置相机:...
投影:...
极投影:...
将条目\"投影\"复制为条目\"极投影\"
+[新建阅读窗口](,极投影)

整理结构:...
在选择区域中, 将'整理结构'的\"视角\"替换为\"降临规则\"

"(,)
的#3""(降临规则#2,极投影#4)
极投影#4"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"
+极投影(_三维,_二维)->+[del](,+极投影)...
->的(极投影,描述结构)->的(极投影,库)...

->的(_二维,视角)->的(视角,位置)->的(视角,方向)...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_相机,_物体)->_相机->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_二维,_物体)->+[code](+[做],_条目)...
        ->+[.]\"方向\"(+[做],方向)->+[.]\"位置\"(+[做],位置)
}




"(,)
的#5""(极投影#4,描述结构#6)
描述结构#6"\"\"\"


\"\"\"

+描述结构(,_三维)->+操作(+描述结构,)...
->[]{
    []:->的(_三维,相机)->相机,->+的(_三维,+相机)->+[o](+描述结构,+相机)
}...
->的(_三维,相机)->[]{
    []=>的(_三维,_物体)->_物体(,)...
        =>[]:
        ->的(_物体,类型)->类型{
            []:->[==]\"立方体\"(,类型)->+立方投影(相机,_物体)->+的(+操作,+立方投影),
            ->[==]\"圆柱体\"(,类型)->+圆柱投影(相机,_物体)->+的(+操作,+圆柱投影)
        },
        ->的(_物体,X)->+单个投影(相机,_物体)->+的(+操作,+单个投影),
        ->[]
}

"(,)
的#7""(极投影#4,库#8)
库#8"
立方投影:...
圆柱投影:...
将条目\"立方投影\"复制为条目\"圆柱投影\"

单个投影:...
将'单个投影'的\"_平面\"替换为\"_相机\"




"(,)
的#9""(库#8,圆柱投影#10)
圆柱投影#10"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+圆柱投影(_二维场景,_物体)->+[del](,+圆柱投影)...
->的(圆柱投影,M代码)...

->.\"方向\"(+圆柱投影,_方向)->.\"位置\"(+圆柱投影,_位置)...
->的(_物体,半径)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(_二维场景,+面1)->+的(_二维场景,+面2)...
->+的(+像,+面1)->+的(+像,+面2)...
    ->+的(+面1,+x#1)->+的(+面1,+y#1)->+样式\"多边形\"(+面1,)->+的(+面1,+样式)...
    ->+的(+面2,+x#2)->+的(+面2,+y#2)->+样式\"多边形\"(+面2,)->+的(+面2,+样式)...
    ->+颜色\"255,255,255\"->+的(+面1,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面2,+颜色)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"R\"(+[matlab],半径)->+[.]\"H\"(+[matlab],高度)...
    ->+[o]\"x1\"(+[matlab],+x#1)->+[o]\"y1\"(+[matlab],+y#1)...
    ->+[o]\"x2\"(+[matlab],+x#2)->+[o]\"y2\"(+[matlab],+y#2)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#11""(圆柱投影#10,M代码#12)
M代码#12"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...
+[新建阅读窗口](,测试)

保存:...
%}

addpath(\"Matlab/space\");
addpath(\"Matlab/draw\");

N=50;
theta=linspace(0,360,N);
X=R*cosd(theta);
Y=R*sind(theta);
Z=zeros(size(X));
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;


[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

cv_x1=x(1:N);
cv_y1=y(1:N);
cv_z1=tz(1:N);
cv_x2=x(N+1:end);
cv_y2=y(N+1:end);
cv_z2=tz(N+1:end);


N0=10;
[i1,i2,j1,j2]=tangent_curve_curve(cv_x1,cv_y1,cv_x2,cv_y2,N0);
n=1:N;
lines_1=array_split_n_parts(1:N,[i1,i2]);
lines_2=array_split_n_parts(1:N,[j1,j2]);

i1_m=zeros(1,2);
z1_max=find(cv_z1==max(cv_z1));
i1_m(1)=z1_max(1);
z1_min=find(cv_z1==min(cv_z1));
i1_m(2)=z1_min(1);

i2_m=zeros(1,2);
z2_max=find(cv_z2==max(cv_z2));
i2_m(1)=z2_max(1);
z2_min=find(cv_z2==min(cv_z2));
i2_m(2)=z2_min(1);

ri1=sqrt((cv_x1(i1_m(1))-cv_x2(i2_m)).^2+(cv_y1(i1_m(1))-cv_y2(i2_m)).^2);
ri2=sqrt((cv_x2(i2_m(1))-cv_x1(i1_m)).^2+(cv_y2(i2_m(1))-cv_y1(i1_m)).^2);
i1_0=i1_m(ri2==min(ri2));
i2_0=i2_m(ri1==min(ri1));


if cv_z1(i1_0)<cv_z2(i2_0)
    x1=cv_x1;
    y1=cv_y1;
    if ismember(i1_0,lines_1{2})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{1})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end


if cv_z1(i1_0)>cv_z2(i2_0)
    x1=cv_x2;
    y1=cv_y2;
    if ismember(i1_0,lines_1{1})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{2})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end


%{
+[M函数](,M代码)
%}"(,)
的#13""(M代码#12,测试#14)
测试#14"%{
+[M函数](,测试)

保存:...
%}

addpath(\"Matlab/space\");
addpath(\"Matlab/draw\");

R=0.3;
H=2;
N=50;
theta=linspace(0,360,N);
X=R*cosd(theta);
Y=R*sind(theta);
Z=zeros(size(X));
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;


[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

cv_x1=x(1:N);
cv_y1=y(1:N);
cv_z1=tz(1:N);
cv_x2=x(N+1:end);
cv_y2=y(N+1:end);
cv_z2=tz(N+1:end);


N0=10;
[i1,i2,j1,j2]=tangent_curve_curve(cv_x1,cv_y1,cv_x2,cv_y2,N0);
n=1:N;
lines_1=array_split_n_parts(1:N,[i1,i2]);
lines_2=array_split_n_parts(1:N,[j1,j2]);

i1_m=zeros(1,2);
z1_max=find(cv_z1==max(cv_z1));
i1_m(1)=z1_max(1);
z1_min=find(cv_z1==min(cv_z1));
i1_m(2)=z1_min(1);

i2_m=zeros(1,2);
z2_max=find(cv_z2==max(cv_z2));
i2_m(1)=z2_max(1);
z2_min=find(cv_z2==min(cv_z2));
i2_m(2)=z2_min(1);

ri1=sqrt((cv_x1(i1_m(1))-cv_x2(i2_m)).^2+(cv_y1(i1_m(1))-cv_y2(i2_m)).^2);
ri2=sqrt((cv_x2(i2_m(1))-cv_x1(i1_m)).^2+(cv_y2(i2_m(1))-cv_y1(i1_m)).^2);
i1_0=i1_m(ri2==min(ri2));
i2_0=i2_m(ri1==min(ri1));


if cv_z1(i1_0)<cv_z2(i2_0)
    x1=cv_x1;
    y1=cv_y1;
    if ismember(i1_0,lines_1{2})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{1})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end


if cv_z1(i1_0)>cv_z2(i2_0)
    x1=cv_x2;
    y1=cv_y2;
    if ismember(i1_0,lines_1{1})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{2})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end



clf
hold on
plot(cv_x1,cv_y1,cv_x2,cv_y2,...
    [cv_x1(i1),cv_x2(j1)],[cv_y1(i1),cv_y2(j1)],...
    [cv_x1(i2),cv_x2(j2)],[cv_y1(i2),cv_y2(j2)])
axis equal

plot(cv_x1(i1_m),cv_y1(i1_m),'o',...
    cv_x2(i2_m),cv_y2(i2_m),'o')
plot(cv_x1(i1_0),cv_y1(i1_0),'r*',...
    cv_x2(i2_0),cv_y2(i2_0),'r*')

patch(x1,y1,[1,1,1],'lineWidth',2)
patch(x2,y2,[1,1,1],'lineWidth',2)


%{
+[M函数](,测试)
%}"(,)
的#15""(测试#14,画图#16)
画图#16"%{
+[M函数](,测试)

画图:...
%}

addpath(\"Matlab/space\");

W=1;
L=1;
H=1;
siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));


figure
plot(x,y)
for i=1:length(x)
    text(x(i),y(i),sprintf(\"%d\",i))
end

figure
for i=1:length(faces)
    is=faces{i};
    patch(pt_x(is),pt_y(is),pt_z(is),[0.2,0.2,0.2])
end


%{
+[M函数](,测试)
%}"(,)
的#17""(测试#14,保存#18)
保存#18"%{
+[M函数](,测试)
%}

addpath(\"Matlab/space\");
addpath(\"Matlab/draw\");

R=0.3;
H=2;
N=50;
theta=linspace(0,360,N);
X=R*cosd(theta);
Y=R*sind(theta);
Z=zeros(size(X));
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;


[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

cv_x1=x(1:N);
cv_y1=y(1:N);
cv_x2=x(N+1:end);
cv_y2=y(N+1:end);


N0=10;
[i1,i2,j1,j2]=tangent_curve_curve(cv_x1,cv_y1,cv_x2,cv_y2,N0);

%{
figure;
plot(1:N,Dt,'o-')
+[M函数](,测试)
%}

plot(cv_x1,cv_y1,cv_x2,cv_y2,...
    [cv_x1(i1),cv_x2(j1)],[cv_y1(i1),cv_y2(j1)],...
    [cv_x1(i2),cv_x2(j2)],[cv_y1(i2),cv_y2(j2)])
axis equal




z1_max=find(cv_z1==max(cv_z1));
i1_max=z1_max(1);
z1_min=find(cv_z1==min(cv_z1));
i1_min=z1_min(1);

z2_max=find(cv_z2==max(cv_z2));
i2_max=z2_max(1);
z2_min=find(cv_z2==min(cv_z2));
i2_min=z2_min(1);

plot

%{
+[M函数](,测试)
%}"(,)
的#19""(M代码#12,保存#20)
保存#20"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...

保存:...
%}

addpath(\"Matlab/space\");

siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));



"(,)
的#21""(圆柱投影#10,保存#22)
保存#22"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+立方投影(_二维场景,_物体)->+[del](,+立方投影)...
->的(立方投影,M代码)...

->.\"方向\"(+立方投影,_方向)->.\"位置\"(+立方投影,_位置)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...
    ->+的(+像,+样式)->+样式\"多边形\"(+像,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"W\"(+[matlab],宽度)->+[.]\"L\"(+[matlab],长度)->+[.]\"H\"(+[matlab],高度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#23""(库#8,单个投影#24)
单个投影#24"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)

\"\"\"
+单个投影(_二维场景,_物体)->+[del](,+单个投影)...
->的(单个投影,M代码)...

->.\"方向\"(+单个投影,_方向)->.\"位置\"(+单个投影,_位置)...
->的(_物体,X)->的(_物体,Y)->的(_物体,Z)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...
    ->+的(+像,+样式)->+样式\"多边形\"(+像,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#25""(单个投影#24,M代码#26)
M代码#26"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
%}

addpath(\"Matlab\space\");

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

"(,)
的#27""(库#8,立方投影#28)
立方投影#28"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+立方投影(_二维场景,_物体)->+[del](,+立方投影)...
->的(立方投影,M代码)...

->.\"方向\"(+立方投影,_方向)->.\"位置\"(+立方投影,_位置)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(_二维场景,+面1)->+的(_二维场景,+面2)->+的(_二维场景,+面3)...
->+的(+像,+面1)->+的(+像,+面2)->+的(+像,+面3)...
    ->+的(+面1,+x#1)->+的(+面1,+y#1)->+样式\"多边形\"(+面1,)->+的(+面1,+样式)...
    ->+的(+面2,+x#2)->+的(+面2,+y#2)->+样式\"多边形\"(+面2,)->+的(+面2,+样式)...
    ->+的(+面3,+x#3)->+的(+面3,+y#3)->+样式\"多边形\"(+面3,)->+的(+面3,+样式)...
    ->+颜色\"255,255,255\"->+的(+面1,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面2,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面3,+颜色)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"W\"(+[matlab],宽度)->+[.]\"L\"(+[matlab],长度)->+[.]\"H\"(+[matlab],高度)...
    ->+[o]\"x1\"(+[matlab],+x#1)->+[o]\"y1\"(+[matlab],+y#1)...
    ->+[o]\"x2\"(+[matlab],+x#2)->+[o]\"y2\"(+[matlab],+y#2)...
    ->+[o]\"x3\"(+[matlab],+x#3)->+[o]\"y3\"(+[matlab],+y#3)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#29""(立方投影#28,保存#30)
保存#30"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+立方投影(_二维场景,_物体)->+[del](,+立方投影)...
->的(立方投影,M代码)...

->.\"方向\"(+立方投影,_方向)->.\"位置\"(+立方投影,_位置)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...
    ->+的(+像,+样式)->+样式\"多边形\"(+像,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"W\"(+[matlab],宽度)->+[.]\"L\"(+[matlab],长度)->+[.]\"H\"(+[matlab],高度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#31""(立方投影#28,M代码#32)
M代码#32"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...
+[新建阅读窗口](,测试)

保存:...
%}

addpath(\"Matlab/space\");

siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

i0=find(tz==min(tz));
fi=[];
for i=1:length(faces)
    is=faces{i};
    if sum(is==i0(1))>0
        fi(end+1)=i;
    end
end

is=faces{fi(1)};
x1=x(is);
y1=y(is);
is=faces{fi(2)};
x2=x(is);
y2=y(is);
is=faces{fi(3)};
x3=x(is);
y3=y(is);

"(,)
的#33""(M代码#32,保存#34)
保存#34"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...

保存:...
%}

addpath(\"Matlab/space\");

siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));



"(,)
的#35""(M代码#32,测试#36)
测试#36"%{
+[M函数](,测试)
%}

addpath(\"Matlab/space\");

W=1;
L=1;
H=1;
siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

i0=find(tz==min(tz));
fi=[];
for i=1:length(faces)
    is=faces{i};
    if sum(is==i0(1))>0
        fi(end+1)=i;
    end
end

figure
plot(x,y)
for i=1:length(x)
    text(x(i),y(i),sprintf(\"%d\",i))
end
for i=1:length(fi)
    is=faces{fi(i)};
    patch(x(is),y(is),[0.8,0.2,0.2])
end
axis equal

figure
for i=1:length(faces)
    is=faces{i};
    patch(pt_x(is),pt_y(is),pt_z(is),[0.2,0.2,0.2])
end
axis equal

%{
+[M函数](,测试)
%}"(,)
的#37""(测试#36,画图#38)
画图#38"%{
+[M函数](,测试)

画图:...
%}

addpath(\"Matlab/space\");

W=1;
L=1;
H=1;
siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));


figure
plot(x,y)
for i=1:length(x)
    text(x(i),y(i),sprintf(\"%d\",i))
end

figure
for i=1:length(faces)
    is=faces{i};
    patch(pt_x(is),pt_y(is),pt_z(is),[0.2,0.2,0.2])
end


%{
+[M函数](,测试)
%}"(,)
的#39""(极投影#4,保存#40)
保存#40"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+极投影(_三维,_二维)->+[del](,+极投影)...
->的(极投影,描述结构)->的(极投影,库)...

->的(_二维,视角)->的(视角,位置)->的(视角,方向)...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_相机,_物体)->_相机->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作):
        ->o([想],_相机)...
            ->+[做](+相机,_物体)->+[code](+[做],_条目)->+[.](+[做],_二维),
        ->+[做](_相机,_物体)->+[code](+[做],_条目)->+[.](+[做],_二维)
}...




"(,)
的#41""(保存#40,描述结构#42)
描述结构#42""(,)
的#43""(降临规则#2,投影#44)
投影#44"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

保存:...

\"\"\"
+投影(_三维,_二维)->+[del](,+投影)...
->的(投影,描述结构)->的(投影,库)...

->的(_二维,视角)->的(视角,位置)->的(视角,方向)...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_平面,_物体)->_平面->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_二维,_物体)->+[code](+[做],_条目)...
        ->+[.]\"方向\"(+[做],方向)->+[.]\"位置\"(+[做],位置)
}

"(,)
的#45""(投影#44,库#46)
库#46"
单个投影:...

将条目\"立方投影\"复制为条目\"圆柱投影\"
立方投影:...
圆柱投影:...

"(,)
的#47""(库#46,圆柱投影#48)
圆柱投影#48"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+圆柱投影(_二维场景,_物体)->+[del](,+圆柱投影)...
->的(圆柱投影,M代码)...

->.\"方向\"(+圆柱投影,_方向)->.\"位置\"(+圆柱投影,_位置)...
->的(_物体,半径)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(_二维场景,+面1)->+的(_二维场景,+面2)...
->+的(+像,+面1)->+的(+像,+面2)...
    ->+的(+面1,+x#1)->+的(+面1,+y#1)->+样式\"多边形\"(+面1,)->+的(+面1,+样式)...
    ->+的(+面2,+x#2)->+的(+面2,+y#2)->+样式\"多边形\"(+面2,)->+的(+面2,+样式)...
    ->+颜色\"255,255,255\"->+的(+面1,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面2,+颜色)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"R\"(+[matlab],半径)->+[.]\"H\"(+[matlab],高度)...
    ->+[o]\"x1\"(+[matlab],+x#1)->+[o]\"y1\"(+[matlab],+y#1)...
    ->+[o]\"x2\"(+[matlab],+x#2)->+[o]\"y2\"(+[matlab],+y#2)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#49""(圆柱投影#48,M代码#50)
M代码#50"%{
记住\"Matlab\"
+[M函数](,M代码)
%}

addpath(\"Matlab/space\");
addpath(\"Matlab/draw\");

N=50;
theta=linspace(0,360,N);
X=R*cosd(theta);
Y=R*sind(theta);
Z=zeros(size(X));
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;


[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx;
y=ty;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

cv_x1=x(1:N);
cv_y1=y(1:N);
cv_z1=tz(1:N);
cv_x2=x(N+1:end);
cv_y2=y(N+1:end);
cv_z2=tz(N+1:end);


N0=10;
[i1,i2,j1,j2]=tangent_curve_curve(cv_x1,cv_y1,cv_x2,cv_y2,N0);
n=1:N;
lines_1=array_split_n_parts(1:N,[i1,i2]);
lines_2=array_split_n_parts(1:N,[j1,j2]);

i1_m=zeros(1,2);
z1_max=find(cv_z1==max(cv_z1));
i1_m(1)=z1_max(1);
z1_min=find(cv_z1==min(cv_z1));
i1_m(2)=z1_min(1);

i2_m=zeros(1,2);
z2_max=find(cv_z2==max(cv_z2));
i2_m(1)=z2_max(1);
z2_min=find(cv_z2==min(cv_z2));
i2_m(2)=z2_min(1);

ri1=sqrt((cv_x1(i1_m(1))-cv_x2(i2_m)).^2+(cv_y1(i1_m(1))-cv_y2(i2_m)).^2);
ri2=sqrt((cv_x2(i2_m(1))-cv_x1(i1_m)).^2+(cv_y2(i2_m(1))-cv_y1(i1_m)).^2);
i1_0=i1_m(ri2==min(ri2));
i2_0=i2_m(ri1==min(ri1));


if cv_z1(i1_0)<cv_z2(i2_0)
    x1=cv_x1;
    y1=cv_y1;
    if ismember(i1_0,lines_1{2})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{1})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end


if cv_z1(i1_0)>cv_z2(i2_0)
    x1=cv_x2;
    y1=cv_y2;
    if ismember(i1_0,lines_1{1})
        x21=cv_x1(lines_1{2});
        y21=cv_y1(lines_1{2});
    else
        x21=cv_x1(lines_1{1});
        y21=cv_y1(lines_1{1});
    end

    if ismember(i2_0,lines_2{2})
        x22=cv_x2(lines_2{2});
        y22=cv_y2(lines_2{2});
    else
        x22=cv_x2(lines_2{1});
        y22=cv_y2(lines_2{1});
    end
    x2=[x21,fliplr(x22),x21(1)];
    y2=[y21,fliplr(y22),y21(1)];
end


%{
+[M函数](,M代码)
%}"(,)
的#51""(库#46,单个投影#52)
单个投影#52"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)

\"\"\"
+单个投影(_二维场景,_物体)->+[del](,+单个投影)...
->的(单个投影,M代码)...

->.\"位置\"(+单个投影,_位置)->.\"方向\"(+单个投影,_方向)...
->的(_物体,X)->的(_物体,Y)->的(_物体,Z)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...
    ->+的(+像,+样式)->+样式\"多边形\"(+像,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#53""(单个投影#52,M代码#54)
M代码#54"%{
记住\"Matlab\"
+[M函数](,M代码)
%}

addpath(\"Matlab\space\");

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx-tz/2*0;
y=ty-tz/2*0;

x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));"(,)
的#55""(库#46,立方投影#56)
立方投影#56"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+立方投影(_二维场景,_物体)->+[del](,+立方投影)...
->的(立方投影,M代码)...

->.\"方向\"(+立方投影,_方向)->.\"位置\"(+立方投影,_位置)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(_二维场景,+面1)->+的(_二维场景,+面2)->+的(_二维场景,+面3)...
->+的(+像,+面1)->+的(+像,+面2)->+的(+像,+面3)...
    ->+的(+面1,+x#1)->+的(+面1,+y#1)->+样式\"多边形\"(+面1,)->+的(+面1,+样式)...
    ->+的(+面2,+x#2)->+的(+面2,+y#2)->+样式\"多边形\"(+面2,)->+的(+面2,+样式)...
    ->+的(+面3,+x#3)->+的(+面3,+y#3)->+样式\"多边形\"(+面3,)->+的(+面3,+样式)...
    ->+颜色\"255,255,255\"->+的(+面1,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面2,+颜色)...
    ->+颜色\"255,255,255\"->+的(+面3,+颜色)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"W\"(+[matlab],宽度)->+[.]\"L\"(+[matlab],长度)->+[.]\"H\"(+[matlab],高度)...
    ->+[o]\"x1\"(+[matlab],+x#1)->+[o]\"y1\"(+[matlab],+y#1)...
    ->+[o]\"x2\"(+[matlab],+x#2)->+[o]\"y2\"(+[matlab],+y#2)...
    ->+[o]\"x3\"(+[matlab],+x#3)->+[o]\"y3\"(+[matlab],+y#3)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#57""(立方投影#56,M代码#58)
M代码#58"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...
+[新建阅读窗口](,测试)

保存:...
%}

addpath(\"Matlab/space\");

siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+H];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx;
y=ty;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

i0=find(tz==min(tz));
fi=[];
for i=1:length(faces)
    is=faces{i};
    if sum(is==i0(1))>0
        fi(end+1)=i;
    end
end

is=faces{fi(1)};
x1=x(is);
y1=y(is);
is=faces{fi(2)};
x2=x(is);
y2=y(is);
is=faces{fi(3)};
x3=x(is);
y3=y(is);

"(,)
的#59""(投影#44,描述结构#60)
描述结构#60"\"\"\"
保存:...

\"\"\"

+描述结构(,_三维)->+操作(+描述结构,)...
->[]{
    []:->的(_三维,投影平面)->投影平面,
    ->+的(_三维,+投影平面)->+[o](+描述结构,+投影平面)
}...
->的(_三维,投影平面)->[]{
    []=>的(_三维,_物体)->_物体(,)...
        =>[]:
        ->的(_物体,类型)->类型{
            []:->[==]\"立方体\"(,类型)->+立方投影(投影平面,_物体)->+的(+操作,+立方投影),
            ->[==]\"圆柱体\"(,类型)->+圆柱投影(投影平面,_物体)->+的(+操作,+圆柱投影)
        },
        ->的(_物体,X)->+单个投影(投影平面,_物体)->+的(+操作,+单个投影),
        ->[]
}

"(,)
的#61""(描述结构#60,保存#62)
保存#62"\"\"\"
保存:...

\"\"\"

+描述结构(,_三维)->+操作(+描述结构,)...
->[]{
    []:->的(_三维,投影平面)->投影平面,->+的(_三维,+投影平面)->+[o](+描述结构,+投影平面)
}...
->的(_三维,投影平面)->[]{
    []=>的(_三维,_物体)->_物体->的(_物体,X)...
    =>+单个投影(投影平面,_物体)->+的(+操作,+单个投影)
}

"(,)
的#63""(投影#44,保存#64)
保存#64"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

保存:...

\"\"\"
+投影(_三维,_二维)->+[del](,+投影)...
->的(投影,描述结构)->的(投影,库)...

->+在(+平面,+空间点)->+空间点\"0,0,0\"...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_平面,_物体)->_平面->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作):
        ->o([想],_平面)...
            ->+[做](+平面,_物体)->+[code](+[做],_条目)->+[.](+[做],_二维),
        ->+[做](_平面,_物体)->+[code](+[做],_条目)->+[.](+[做],_二维)
}...

->+[del](,+在)->+[del](,+平面)->+[del](,+空间点)

"(,)
的#65""(降临规则#2,设置相机#66)
设置相机#66"\"\"\"
M代码:...

\"\"\"
+设置相机(_媒介,_凭依)->+[del](,+设置相机)...
->的(设置相机,M代码)...

->+的(_凭依,+视角)->+的(+视角,+方向)->+的(+视角,+位置)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[o]\"eulers\"(+[matlab],+方向)->+[o]\"pt\"(+[matlab],+位置)


"(,)
的#67""(设置相机#66,M代码#68)
M代码#68"%{
运行指令\"nautilus Matlab/space\"
[alpha,beta]=view;
view(30,0)
pt0
%}

addpath('Matlab/space')
[alpha,beta]=view;

Z=[sind(alpha)*cosd(beta),-cosd(alpha)*cosd(beta),sind(beta)];

axis_=axis;
L=max(axis_)-min(axis_);
pt0=[mean(axis_(1:2)),mean(axis_(3:4)),mean(axis_(5:6))]

pt=Z*L+pt0;
eulers=camera_lookat(pt,pt0,0);


"(,)
的#69""(降临规则#2,整理结构#70)
整理结构#70"\"\"\"
模板:...

\"\"\"

+整理结构(_媒介,_凭依)->+[del](,+整理结构)...
->的(整理结构,模板)...

->+[标题](_凭依,)->+[模板文本](模板,_凭依)...
->+[.](+[模板文本],+[标题])...

->的(_凭依,视角)->+[删除结构](,视角)->+[del](,视角)...
->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

->+的(+H代码,+SVG)->+SVG(+H代码,)->+的(_凭依,+H代码)...
->+[显示PPT场景]\"2\"(,_凭依)->+[PPT场景转H代码](_凭依,+H代码)

"(,)
的#71""(整理结构#70,文本内容#72)
文本内容#72""(,)
的#73""(整理结构#70,模板#74)
模板#74"<!--
+[H函数](,%[标题])
-->

%H代码

<!--
H代码(SVG):...
+[PPT场景转H代码](%[标题],H代码)
-->"(,)
的#75""(投影规则#0,召唤规则#76)
召唤规则#76"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->[==]\"正投影\"(,召唤星辰)->+投影(_媒介,_凭依)->+的(操作,+投影),
    ->[==]\"极投影\"(,召唤星辰)->+极投影(_媒介,_凭依)->+的(操作,+极投影)
}...
->+设置相机(_媒介,_凭依)->+的(操作,+设置相机)

"(,)

## end
#449, 241:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->[==]"正投影"(,召唤星辰)->+投影(_媒介,_凭依)->+的(操作,+投影),
    ->[==]"极投影"(,召唤星辰)->+极投影(_媒介,_凭依)->+的(操作,+极投影)
}...
->+设置相机(_媒介,_凭依)->+的(操作,+设置相机)


## end
#451, 3:
453
## end
#453, 3:
455
## end
#455, 3:
457
## end
#457, 3:
463
## end
#459, 3959:
扫描参数代码#0"

召唤规则:...
降临规则:...




"(,)
的#1""(扫描参数代码#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开四则运算(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"扫描参数\"(,召唤星辰)...
->的(_媒介,能谱仪)->的(_媒介,当前电子)...

->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+能谱仪参数(能谱仪,_凭依)->+的(操作,+能谱仪参数)...
->+电子阴影(_媒介,_凭依)->+的(操作,+电子阴影)



"(,)
的#3""(扫描参数代码#0,降临规则#4)
降临规则#4"

能谱仪参数:...
电子阴影:...
整理代码:...
+[新建阅读窗口](,能谱仪参数)

"(,)
的#5""(降临规则#4,能谱仪参数#6)
能谱仪参数#6"\"\"\"


\"\"\"

+能谱仪参数(能谱仪,_代码)->+[del](,+能谱仪参数)...

->的(能谱仪,GasCell)->在(GasCell,空间点#cell)...
->的(能谱仪,磁铁)->在(磁铁,空间点#m)...
    ->的(磁铁,磁场尺寸)->的(磁铁,磁感应强度)...
->的(能谱仪,fiducial1)...
    ->在(fiducial1,空间点#f1)->的(fiducial1,线位置#1)...
->的(能谱仪,fiducial2)...
    ->在(fiducial2,空间点#f2)->的(fiducial2,线位置#2)...
->的(能谱仪,IP1)->在(IP1,空间点#IP)...

->+的(_代码,+Cell0)->+[修改内容](空间点#cell,+Cell0)...
->+的(_代码,+IP)->+[修改内容](空间点#IP,+IP)...
->+的(_代码,+size_m)->+[修改内容](磁场尺寸,+size_m)...
->+的(_代码,+pos_m)->+[修改内容](空间点#m,+pos_m)...
->+的(_代码,+B0)->+[修改内容](磁感应强度,+B0)...

->+的(_代码,+pos_f1)->+[修改内容](空间点#f1,+pos_f1)...
->+的(_代码,+f1)->+[修改内容](线位置#1,+f1)...
->+的(_代码,+pos_f2)->+[修改内容](空间点#f2,+pos_f2)...
->+的(_代码,+f2)->+[修改内容](线位置#2,+f2)



"(,)
的#7""(降临规则#4,电子阴影#8)
电子阴影#8"\"\"\"
M代码_6:...

\"\"\"

+电子阴影(_媒介,_代码)->+[del](,+电子阴影)...
->的(电子阴影,M代码_6)...

->的(_媒介,当前电子)->+的(_代码,+shadow0)...
->+的(_代码,+shot)->+[修改内容](当前电子,+shot)...

->+[matlab](Matlab,+shadow0)->+[code](+[matlab],M代码_6)...
->+[.]\"shot_no\"(+[matlab],当前电子)
"(,)
的#9""(电子阴影#8,M代码_6#10)
M代码_6#10"%{

%}

data_sh=readtable(\"D:\CXT\Laser\Launch Angle\data\LWFA 6.0\shadow_data_2.xlsx\");

shadows=data_sh{:,:};
shadows_no=shadows(shadows(:,1)==shot_no,:);
shadows_no=shadows(shadows(:,1)==shot_no,:);
shadows_X=shadows_no(1,2:end);
shadows_e=shadows_no(2,2:end);
shadows_X(shadows_X==0)=[];
shadows_e(shadows_e==0)=[];

ans=shadows_e;
"(,)
的#11""(降临规则#4,整理代码#12)
整理代码#12"\"\"\"
M模板:...
地址模板::Matlab\spectrometer\scan_spectrometer_%shot.m

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,地址模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)...
->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量=>+[.](+[模板文本],_变量)
}...

->的(_代码,shot)...
->+[模板文本](地址模板,+地址)->+[.](+[模板文本],+shot)...
->[m_text](shot,+shot)->+[del](,+shot)...

->+[删除结构](,_代码)...
->+[有](_代码,+地址)->+[保存M函数](,_代码)

"(,)
的#13""(整理代码#12,M模板#14)
M模板#14"%{
地址::Matlab\spectrometer\scan_spectrometer_%shot.m
+[保存M函数](,%[标题])
%}


function [a,Fn,e,theta,energy,E_p] = scan_spectrometer_%shot(dr_e,dr_m,dr_f1,dr_f2,dr_p,pt0,Dtheta)
addpath('Matlab\spectrometer');
physics_constant;

%pt0=[0,0];
%Dtheta=10;

shadow0=[%shadow0];
Cell0=[%Cell0];
IP=[%IP];
size_m=[%size_m];
pos_m=[%pos_m];
B0=%B0;
pos_f1=[%pos_f1];
pos_f2=[%pos_f2];
f1=[%f1];
f2=[%f2];

% shadow=4001-shadow0/2;
shadow=shadow0;
Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
IPx=IP(1)*1e-2;
IPy=IP(2)*1e-2;

Cell=Cell+dr_e;
Ma=Ma+dr_m(1);
Fx1=Fx1+dr_f1(1);
Fx2=Fx2+dr_f2(1);
Fy1=Fy1+dr_f1(2);
Fy2=Fy2+dr_f2(2);
IPx=IPx+dr_p(1);
IPy=IPy+dr_p(2);

shX=IPx*ones(size(shadow));
shY=(shadow-2000)*1e-4+IPy;

Fy=[f1*1e-2+Fy1;f2*1e-2+Fy2];
Fx=[Fx1*ones(size(f1));Fx2*ones(size(f2))];
% size(Fx);

% rotation
Fx=Fx-pt0(1);
Fy=Fy-pt0(2);
Fx=Fx*cosd(Dtheta)-Fy*sind(Dtheta);
Fy=Fy*cosd(Dtheta)+Fx*sind(Dtheta);
Fx=Fx+pt0(1);
Fy=Fy+pt0(2);

shX=shX-pt0(1);
shY=shY-pt0(2);
shX=shX*cosd(Dtheta)-shY*sind(Dtheta);
shY=shY*cosd(Dtheta)+shX*sind(Dtheta);
shX=shX+pt0(1);
shY=shY+pt0(2);


% [a,Fn,e,theta,energy]=LaunchAngles(shadow,Cell,dy,Ma,B0,Fx,Fy,IPx);
% [a,Fn,e,theta,energy]=DesignTool1(Cell,Ma,B0,Fx,Fy,shX,shY);
[a,Fn,e,theta,energy]=DesignTool2(Cell,Ma,B0,Fx,Fy,shX,shY);


% E=-B0*e*c*diff(Ma)*(z_i-mean(Ma))./(x_i-x_o-t_0*(z_i-z_o));
% shY=(shadow-2000)*1e-4+IPy;
E_p=@(pixel)-B0*e*c*diff(Ma)*(IPx-mean(Ma))./((pixel-2000)*1e-4+IPy-Cell(2)-mean(a)*(IPx-Cell(1)));

end



%{
+[保存M函数](,%[标题])
%}"(,)
的#15""(整理代码#12,地址模板#16)
地址模板#16"Matlab\spectrometer\scan_spectrometer_%shot.m"(,)

## end
#461, 233:
"""
Nini, 打开四则运算(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"扫描参数"(,召唤星辰)...
->的(_媒介,能谱仪)->的(_媒介,当前电子)...

->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+能谱仪参数(能谱仪,_凭依)->+的(操作,+能谱仪参数)...
->+电子阴影(_媒介,_凭依)->+的(操作,+电子阴影)




## end
#463, 3:
469
## end
#465, 15482:
解方程#0"

召唤规则:...
降临规则:...





"(,)
的#1""(解方程#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"解方程\"(,召唤星辰)...
->[is](_媒介,表达式)->的(表达式,起点)->起点(,_x)->=(_x,_a)...

->+记录结果(表达式,_凭依)->+的(操作,+记录结果)...
->+整体步骤(_x,_a)->+的(操作,+整体步骤)...

->[]{
    []:->记录问题(召唤星辰,)->+记录问题(_媒介,_凭依)->+的(操作,+记录问题),
    ->[]
}

"(,)
的#3""(解方程#0,降临规则#4)
降临规则#4"

整体步骤:...
记录结果:...
+[新建阅读窗口](,记录结果)

记录问题:...
"(,)
的#5""(降临规则#4,整体步骤#6)
整体步骤#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+整体步骤(_xe,_a)->+[del](,+整体步骤)...
->的(整体步骤,描述结构)->的(整体步骤,库)->的(库,合并系数#0)...
->的(库,乘以括号#0)...

->起点(,_xe)...
->+[code]([想],描述结构)->[想](_xe,_a)...
->操作([想],)->二次操作([想],)->特定操作([想],)->合并系数([想],)...

->[]{
    []=>的(特定操作,乘以括号)->乘以括号(_y,_x)->_y->_x(,)...
    =>+[做](_y,_x)->+[code](+[做],乘以括号#0)->+[.](+[做],起点)
}...

->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说]\"操作: \"(,_操作)->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}...

->[]{
    []=>的(二次操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}...

->+[做](,_xe)->+[code](+[做],合并系数#0)->[]{
    []=>的(合并系数,_变量)->_变量=>+[.](+[做],_变量)
}


"(,)
的#7""(整体步骤#6,描述结构#8)
描述结构#8"\"\"\"
针对操作:...

\"\"\"

+描述结构(_xe,_a)->+操作(+描述结构,)...
->的(描述结构,针对操作)...

->+合并系数(+描述结构,)->+二次操作(+描述结构,)->+特定操作(+描述结构,)...
->的(表达式,_xe)...
->[]{
    []=>的(表达式,x)->x=>+[.]([分析变量位置],x)->[分析变量位置](_xe,x)
}...
->[]{
    []=>到达(_xe,x)->x=>+[code]([想],针对操作)...
        ->+[.]([想],+合并系数)->+[.]([想],+二次操作)->+[.]([想],+特定操作)...
        ->+起点([想],_xe)->[想](+操作,x)
}


"(,)
的#9""(描述结构#8,针对操作#10)
针对操作#10"\"\"\"
保存:...

\"\"\"
+针对操作(操作,_x)...
->.(+针对操作,合并系数)->.(+针对操作,二次操作)->.(+针对操作,特定操作)...
->起点(+针对操作,_xe):

->[]{
    关联(_节点,_x)->_节点->[]{然后(关联,)}:

    ->然后(关联,关联#2)->关联#2(_节点2,)->_节点2->[]{
        []:->[is](_节点,=)->=(,_节点3)->[]{
            []:->_re\"[+\-]\"(,_节点2)->+左移x(=,_节点2)->+的(操作,+左移x),
            ->+左移x(=,_节点3)->+的(操作,+左移x)
        },
        ->[]{[]=>[is](_节点2,括号)->括号}->*(,_节点2)...
            ->+提取x(_节点,_节点2)->+的(操作,+提取x)
    },

    ->>[]{
        []:->[is](_节点,括号)->括号->内在(关联,)...
        ->[]{
            []{/(,括号)->的(括号,_y0)->_y0->_re\"[+\-]\"(_y0,)}:
            ->[]{
                []{[]:->然后(关联#3,关联)->关联#3(,=#3),
                    ->然后(关联#6,关联)->关联#6->然后(,关联#6)}:
                ->>然后(关联#3,关联)->关联#3(_乘式,)...
                    ->+乘以括号(_乘式,括号)->+的(特定操作,+乘以括号),
                ->>+乘以括号(_xe,括号)->+的(特定操作,+乘以括号)
            },
            ->>+拆括号(_xe,括号)->+的(二次操作,+拆括号)
        },
        ->[is](_节点,=)->=->+左移x(=,_x)->+的(操作,+左移x),
        ->[eq](_节点,_x)->[]{[]=>[is](_节点,_x)}...
            ->+合并x(_节点,_x)->+的(操作,+合并x),
        ->+提取x(_节点,_x)->+的(操作,+提取x)
    }
},
->+的(合并系数,_x)

"(,)
的#11""(针对操作#10,保存#12)
保存#12"\"\"\"
保存:...

\"\"\"
+针对操作(操作,_x)...
->.(+针对操作,合并系数)->.(+针对操作,二次操作)...
->起点(+针对操作,_xe)...

->[]:
    ->关联(_节点,_x)->[]{
        []:->[is](_节点,括号)->括号->内在(关联,)...
            ->+拆括号(_xe,括号)->+的(二次操作,+拆括号),
        ->[eq](_节点,_x)->[]{[]=>[is](_节点,_x)}...
            ->+合并x(_节点,_x)->+的(操作,+合并x),
        ->[is](_节点,=)->=->+左移x(=,_x)->+的(操作,+左移x),
        ->+提取x(_节点,_x)->+的(操作,+提取x)
    },
    ->+的(合并系数,_x)


"(,)
的#13""(整体步骤#6,库#14)
库#14"有什么

合并系数:...
拆括号:...
合并x:...
左移x:...
提取x:...

乘以括号:...


"(,)
的#15""(库#14,合并系数#16)
合并系数#16"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

保存:...

\"\"\"

+合并系数(,_起点)->+[del](,+合并系数)...
->的(合并系数,描述结构)...
->的(合并系数,库)->的(库,提取系数)...

->+[code]([想],描述结构)->[想](,+合并系数)->首变量([想],)...
->[]{
    []=>的(首变量,_x)->_x{合并系数_合并(_x,)}=>+[做](,_x)->+[code](+[做],提取系数)...
    =>合并系数_合并(_x,_x1)->_x1=>+[.](+[做],_x1)
}


"(,)
的#17""(合并系数#16,描述结构#18)
描述结构#18"\"\"\"
Nini, 打开公式分析器(文件)
Nini, 导入公式分析器的库

\"\"\"

+描述结构(,合并系数)...

->+首变量(+描述结构,)...
->[]{
    []:->.(合并系数,_x)->_x->起点(,_x)->+的(+首变量,_x),
    ->[]
}...
->[]{
    []=>.(合并系数,_x)->_x=>[]:
        ->的(+首变量,_x1)->_x1->+合并系数_合并(_x1,_x)...
            ->+[.]([公式结构匹配],+项)->+模板结构([公式结构匹配],_x)...
            ->[公式结构匹配](_x1,+输出),
        ->+的(+首变量,_x)
}


"(,)
的#19""(合并系数#16,库#20)
库#20"

提取系数:...




"(,)
的#21""(库#20,提取系数#22)
提取系数#22"\"\"\"
加上:...
减去:...
将条目\"加上\"复制为条目\"减去\"
负号判断:...
+[新建阅读窗口](,负号判断)
保存:...

Nini, 打开公式分析器(文件)

\"\"\"

+提取系数(,_x0)->+[del](,+提取系数)...
->的(提取系数,加上)->的(提取系数,减去)->的(提取系数,负号判断)...

->的(表达式,_x0)...
->[]{
    []:->*(_x0,括号)->括号{[]=>^(括号,)}->的(括号,_b)...
        ->+括号内容(_x0,_b),
    ->*(_x0,_a)->_a->+的#1(+括号#1,_a)->+[右连](*,+括号#1)...
        ->+的(表达式,+的#1)->+的(表达式,+括号#1)...
        ->+括号内容(_x0,_a),
    ->+*\"*\"(_x0,+括号#2)->+的#2(+括号#2,+1)...
        ->+的(表达式,+*)->+的(表达式,+1)->+的(表达式,+的#2)->+的(表达式,+括号#2)...
        ->+括号内容(_x0,+1)
}...
->括号内容(_x0,_b)->+[del](,括号内容)...

->[]{
    []=>.(+提取系数,_x)->_x=>+[做](_b,_x)...
    ->[]{+[code]([想],负号判断)->[想](_x0,_x)}:
        ->>+[code](+[做],加上),
        ->+[code](+[做],减去)
}


"(,)
的#23""(提取系数#22,减去#24)
减去#24"\"\"\"
保存:...

\"\"\"
+减去#0(_xe,_x)->+[del](,+减去#0)...

->的(表达式,_xe)...
->+目标->+定理->[]{
    []:->*(_x,_x1)->_x1->+[del](,*)->+减去(_xe,_x1)->+的(+目标,+减去),
    ->+减去(_xe,+1)->+的(+目标,+减去)->+del(+减去#0,+1)
}...

->_re\"[+\-]\"(_xh,_x)->+[del](,_re)->+[del](,_x)...
->[]{
    []=>_re\"[+\-]\"(_x,)=>+[左连](_re,_xh)
}...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理):
    ->del(+减去#0,1)->+[del](,1)->+[del](,del),
    ->[]


"(,)
的#25""(减去#24,保存#26)
保存#26"\"\"\"
保存:...

\"\"\"
+加上(_xe,_x)->+[del](,+加上)...

->的(表达式,_xe)->[]:
    ->*(_x,_x1)->+[左连](*,_xe)->+[修改标题]\"+\"(,*)->+[修改内容]\"+\"(,*),
    ->++\"+\"(_xe,+1)->+的(表达式,++)->+的(表达式,+1)
"(,)
的#27""(提取系数#22,保存#28)
保存#28"\"\"\"
加上:...
+[新建阅读窗口](,加上)
保存:...

\"\"\"

+提取系数(,_x0)->+[del](,+提取系数)...
->的(提取系数,加上)...

->的(表达式,_x0)->[]{
    []:->*(_x0,括号)->括号{[]=>^(括号,)}->的(括号,_b)...
        ->+括号内容(_x0,_b),
    ->*(_x0,_a)->_a->+的#1(+括号#1,_a)->+[右连](*,+括号#1)...
        ->+的(表达式,+的#1)->+的(表达式,+括号#1)...
        ->+括号内容(_x0,_a),
    ->+*\"*\"(_x0,+括号#2)->+的#2(+括号#2,+1)...
        ->+的(表达式,+*)->+的(表达式,+1)->+的(表达式,+的#2)->+的(表达式,+括号#2)...
        ->+括号内容(_x0,+1)
}...
->括号内容(_x0,_b)->+[del](,括号内容)...

->[]{
    []=>.(+提取系数,_x)->_x=>_re\"[+\-]\"(_xh,_x)...
    ->+[del](,_x)->+[del](,_re)->[]{
        []=>_re\"[+\-]\"(_x,)=>+[左连](_re,_xh)
    }->[]:
        ->[]{[]=>提取系数_头部(_x0,)}...
            ->+[做](_b,_x)->+[提取系数_头部](_x0,_x)->+[code](+[做],加上),
        ->+提取系数_头部(_x0,_xe)->+[del](,+提取系数_头部)...
            ->+[做](_xe,_x)->+[提取系数_头部](_x0,_x)->+[code](+[做],加上)
}


"(,)
的#29""(提取系数#22,负号判断#30)
负号判断#30"\"\"\"
负号:...

\"\"\"

+负号判断(_x0,_x)->的(负号判断,负号)...

->[]:
->[]{
    []&:->+[code]([想]#1,负号)->[想]#1(,_x0), =>+[code]([想]#2,负号)->[想]#2(,_x)
},
->[]{
    []&:->+[code]([想]#1,负号)->[想]#1(,_x), =>+[code]([想]#2,负号)->[想]#2(,_x0)
}

"(,)
的#31""(负号判断#30,负号#32)
负号#32"\"\"\"


\"\"\"

+负号#0(,_x)...

->[]{
[]:->负号(_x,),->-(,_x)
}


"(,)
的#33""(提取系数#22,加上#34)
加上#34"\"\"\"
保存:...

\"\"\"
+加上#0(_xe,_x)->+[del](,+加上#0)...

->的(表达式,_xe)...
->+目标->+定理->[]{
    []:->*(_x,_x1)->_x1->+[del](,*)->+加上(_xe,_x1)->+的(+目标,+加上),
    ->+加上(_xe,+1)->+的(+目标,+加上)->+del(+加上#0,+1)
}...

->_re\"[+\-]\"(_xh,_x)->+[del](,_re)->+[del](,_x)...
->[]{
    []=>_re\"[+\-]\"(_x,)=>+[左连](_re,_xh)
}...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理):
    ->del(+加上#0,1)->+[del](,1)->+[del](,del),
    ->[]


"(,)
的#35""(加上#34,保存#36)
保存#36"\"\"\"
保存:...

\"\"\"
+加上(_xe,_x)->+[del](,+加上)...

->的(表达式,_xe)->[]:
    ->*(_x,_x1)->+[左连](*,_xe)->+[修改标题]\"+\"(,*)->+[修改内容]\"+\"(,*),
    ->++\"+\"(_xe,+1)->+的(表达式,++)->+的(表达式,+1)
"(,)
的#37""(合并系数#16,保存#38)
保存#38"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+合并系数(,_起点)->+[del](,+合并系数)...
->的(合并系数,描述结构)...
->的(合并系数,库)->的(库,提取系数)...

->+[code]([想],描述结构)->[想](,+合并系数)->首变量([想],)...
->[]{
    []=>的(首变量,_x)->_x->合并系数_合并(_x,)=>+[做](,_x)->+[code](+[做],提取系数)...
    =>合并系数_合并(_x,_x1)->_x1=>+[.](+[做],_x1)
}

"(,)
的#39""(库#14,拆括号#40)
拆括号#40"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

[说](,_操作)...
        ->

\"\"\"

+拆括号(_xe,括号)->+[del](,+拆括号)...
->的(拆括号,描述结构)->的(拆括号,库)...

->+[code]([想],描述结构)->[想](_xe,括号)->操作([想],)...

->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}...

->的(库,整理括号)->+[做](,括号)->+[code](+[做],整理括号)


"(,)
的#41""(拆括号#40,描述结构#42)
描述结构#42"\"\"\"
乘式:...
(a+b)*b
b*(a+b)
(a*b)*b
b*(a*b)
(a*b)^2
(a+b)^2

\"\"\"

+描述结构(_xe,括号)->+操作(+描述结构,)...
->的(描述结构,乘式)...

->的(括号,_x)...

->[]{
    []:->_re\"[*/]\"(括号,)->+乘以1(括号,_re)->+的(+操作,+乘以1),
    ->[]
}...
->[]{
    []:->*(,括号)->+[code]([想],乘式)->[想](+头部,括号)->是(+头部,_头部)...
        ->+乘以2(括号,_头部)->+的(+操作,+乘以2),
    ->[]
}...

->[]{
    []:->^(括号,)->+乘方(括号,^)->+的(+操作,+乘方),
    ->[]
}



"(,)
的#43""(描述结构#42,乘式#44)
乘式#44"\"\"\"


\"\"\"
+乘式(头部,_x)->乘式(,)...

->[]{
    []:->_re\"[*/]\"(_x1,_x)->_x1->+[code]([想],乘式)->[想](头部,_x1),
    ->+是(头部,_x)
}



"(,)
的#45""(拆括号#40,库#46)
库#46"
乘以1:...
乘以2:...
乘方:...


整理括号:...
将'乘以2'的\"乘以1\"替换为\"乘以2\"




"(,)
的#47""(库#46,乘以1#48)
乘以1#48"\"\"\"


\"\"\"

+乘以1(括号,_乘号)->+[del](,+乘以1)...

->+目标->+定理->_乘号(,_x)->的(括号,_y)...
->+的(+目标,+乘以)->+乘以(_y,_x)...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)...
->+[del](,_乘号)


"(,)
的#49""(库#46,乘方#50)
乘方#50"\"\"\"


\"\"\"

+乘方(括号,^)->+[del](,+乘方)...

->+目标->+定理->^(,_x)->的(括号,_y)...
->+的(+目标,+乘方#1)->+乘方#1(_y,_x)...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)...
->+[del](,^)


"(,)
的#51""(库#46,乘以2#52)
乘以2#52"\"\"\"


\"\"\"

+乘以2(括号,_x)->+[del](,+乘以2)...

->+目标->+定理->*(,括号)->的(括号,_y)...
->+的(+目标,+乘以)->+乘以(_y,_x)...

->+[del](,*)...
->[]{
    []&:=>_re\"^[+\-=\^]|负号|分子|分母|起点\"(,_x)=>+[右连](_re,括号),
    =>_re#1\"^[+\-=]\"(_x,)=>+[左连](_re#1,括号),
    =>的(括号#2,_x)->括号#2=>+[右连](的,括号)
}...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)




"(,)
的#53""(库#46,整理括号#54)
整理括号#54"\"\"\"
和式:...
交换关联:...
+[新建阅读窗口](,和式)

保存:...

\"\"\"
+整理括号(,括号)->+[del](,+整理括号)...
->的(整理括号,交换关联)->的(整理括号,和式)...

->的(表达式,括号)->[]:->^(括号,),

->的(括号,_y)...
->+[code]([想],和式)->[想](+头部,_y)->是(+头部,_y0)->+[del](,+头部)...
->[]{
    []:->+(括号,_x1)->_x1->+[左连](+,_y0),
    ->-(括号,_x2)->_x2->+[左连](-,_y0),
    ->[]
}...

->+[做](,括号)->+[code](+[做],交换关联)...
->+[del](,括号)



"(,)
的#55""(整理括号#54,交换关联#56)
交换关联#56"\"\"\"


\"\"\"
+交换关联(,括号)->+[del](,+交换关联)...

->的(括号,_y)->[]{
    []&:=>_re\"^[+\-=\^]|负号|分子|分母|起点\"(,括号)=>+[右连](_re,_y),
    =>_re#1\"^[=\^]\"(括号,)=>+[左连](_re#1,_y),
    =>的(括号#2,括号)->括号#2=>+[右连](的,_y)
}

"(,)
的#57""(整理括号#54,和式#58)
和式#58"\"\"\"


\"\"\"

+和式(头部,_x)->和式(,)...

->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],和式)->[想](头部,_x2),
    ->+是(头部,_x)
}


"(,)
的#59""(整理括号#54,保存#60)
保存#60"\"\"\"
和式:...
交换关联:...
+[新建阅读窗口](,和式)

\"\"\"
+整理括号(,括号)->+[del](,+整理括号)...
->的(整理括号,交换关联)->的(整理括号,和式)...

->的(表达式,括号)->[]:->^(括号,),

->的(括号,_y)...
->+[code]([想],和式)->[想](+头部,_y)->是(+头部,_y0)->+[del](,+头部)...
->[]{
    []:->+(括号,_x1)->_x1->+[del](,+)->+加上(_y,_x1)->+的(+目标,+加上),
    ->-(括号,_x2)->_x2->+[del](,-)->+加上(_y,_x2)->+的(+目标,+加上),
    ->[]
}...

->+[做](,括号)->+[code](+[做],交换关联)...
->+[del](,括号)



"(,)
的#61""(库#14,合并x#62)
合并x#62"\"\"\"


\"\"\"

+合并x(_y,_x)->+[del](,+合并x)...

->+目标->+定理->+的(+目标,+乘以)->+乘以(_y,_x)->+项(+乘以,_y)...

->_re\"[*/]\"(_x2,_x)->+[del](,_re)->[]{
    []=>_re\"[*/]\"(_x,_x1)->_x1=>+[左连](_re,_x2)
}...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)


"(,)
的#63""(库#14,左移x#64)
左移x#64"\"\"\"


\"\"\"

+左移x(=,_x)->+[del](,+左移x)...

->+目标->+定理->=(_y,)...
->+的(+目标,+减去)->+减去(_y,_x)...

->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)...

->+[修改标题]\"0\"(,_x)->+[修改内容]\"0\"(,_x)->[]{
    []=>_re\"[*/]\"(_x,)=>+[del](,_re)
}



"(,)
的#65""(库#14,提取x#66)
提取x#66"\"\"\"


\"\"\"

+提取x(_节点,_x)->+[del](,+提取x)...

->*(_x0,_x)->+[左连](*,_x)->+[右连](*,_节点)...
->[]{
    []=>_re\"[*/]\"(_x,)=>+[左连](_re,_x0)
}...
->[]{
    []&:=>_re\"[+\-=]|负号\"(_节点,)=>+[左连](_re,_x),
    =>_re\"[+\-*]|起点\"(,_节点)=>+[右连](_re,_x)
}


"(,)
的#67""(库#14,乘以括号#68)
乘以括号#68"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+乘以括号(_乘式,_括号)->+[del](,+乘以括号)...
->的(乘以括号,描述结构)->的(乘以括号,库)...

->.(+乘以括号,起点)->起点(,_起点)...
->+[code]([想],描述结构)->+[.]([想],_起点)->[想](_乘式,_括号)...
->操作([想],)...

->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[](,)...
    ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}


"(,)
的#69""(乘以括号#68,描述结构#70)
描述结构#70"\"\"\"
和式:...
等式:...
+[修改标题]\"和式\"(,乘式)
+[新建阅读窗口](,和式)

\"\"\"

+描述结构(_乘式,_括号)->+操作(+描述结构,)...
->的(描述结构,和式)->的(描述结构,等式)...

->.(+描述结构,_起点)...

->+撤销项(_乘式,_括号)->+的(+操作,+撤销项)...
->+[code]([想]#1,和式)->+[.]([想]#1,+操作)->[想]#1(_括号,_起点)...
->+[code]([想]#2,等式)->+[.]([想]#2,+操作)->[想]#2(_括号,_起点)...
->+的(+操作,+撤销项)
"(,)
的#71""(描述结构#70,和式#72)
和式#72"\"\"\"


\"\"\"

+和式(_括号,_x)->和式->.(+和式,操作)...

->[]{
    []:->撤销项(_x,),
    ->+乘式乘以(_x,_括号)->+的(操作,+乘式乘以)
}...
->[]{
    []:->_re\"[+\-]\"(_x,_x1)->_x1->+[code]([想],和式)->+[.]([想],操作)->[想](_括号,_x1),
    ->[]
}


"(,)
的#73""(描述结构#70,等式#74)
等式#74"\"\"\"


\"\"\"

+等式(_括号,_x)->等式->.(+等式,操作)...

->[]{
    []:->乘式乘以(_x,), ->撤销项(_x,),
    ->+和式乘以(_x,_括号)->+的(操作,+和式乘以)
}...
->[]{
    []:->=(_x,_x1)->_x1->+[code]([想],等式)->+[.]([想],操作)->[想](_括号,_x1),
    ->[]
}


"(,)
的#75""(乘以括号#68,库#76)
库#76"

撤销项:...
乘式乘以:...
和式乘以:...




"(,)
的#77""(库#76,撤销项#78)
撤销项#78"\"\"\"


\"\"\"

+撤销项(_乘式,_括号)->+[del](,+撤销项)...

->/(_x0,_括号)->+[del](,/)...
=>_re\"[*/]\"(_括号,)=>+[左连](_re,_x0)



"(,)
的#79""(库#76,和式乘以#80)
和式乘以#80"\"\"\"


\"\"\"

+和式乘以(_和式,_括号)->+[del](,+和式乘以)...

->+目标->+定理->+乘以(_和式,_括号)->+的(+目标,+乘以)...
->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)



"(,)
的#81""(库#76,乘式乘以#82)
乘式乘以#82"\"\"\"
Nini, 打开

\"\"\"

+乘式乘以(_乘式,_括号)->+[del](,+乘式乘以)...

->+目标->+定理->+乘以(_乘式,_括号)->+项(+乘以,_乘式)->+的(+目标,+乘以)...
->+[召唤星辰](+目标,+定理)...
->+[删除结构](,+目标)->+[删除结构](,+定理)->+[del](,+目标)->+[del](,+定理)...
->+[del](,+项)


"(,)
的#83""(降临规则#4,记录结果#84)
记录结果#84"\"\"\"
Nini, 打开公式分析器(文件)
+[修改内容]\"[%s].\"(+[临时文本],+[消息窗口])->+[临时文本]\"0\"
下一步:...
+[新建阅读窗口](,下一步)

\"\"\"

+记录结果(表达式,_解题纸)->+[del](,+记录结果)...
->的(记录结果,下一步)...

->[]{
    []:->的(_解题纸,序号)->序号,->+的(_解题纸,+序号)->+序号\"1\"
}...
->[]{
    []:->的(_解题纸,内容)->内容,->+的(_解题纸,+内容)
}->的(_解题纸,内容)...

->+公式(+式子,)->+的(+式子,+表达式)...
->+[算式结构转换]\"LaTeX\"(表达式,+式子)->+[算式结构转换]\"表达式\"(表达式,+表达式)...

->+[做](+式子,_解题纸)->+[code](+[做],下一步)->+[.](+[做],表达式)...

->[]{
    []=>的(_解题纸,降临规则)->降临规则=>+[删除结构](,降临规则)->+[del](,降临规则)
}...
->[]{
    []=>的(_解题纸,召唤规则)->召唤规则=>+[删除结构](,召唤规则)->+[del](,召唤规则)
}...

->+[修改内容](内容,_解题纸)

"(,)
的#85""(记录结果#84,下一步#86)
下一步#86"\"\"\"
+[matlab]\"ans=int64(1)\"(Matlab,+[消息窗口])
state=mod(9,10)
+[修改标题]\"[%s].\"(+[临时文本],+节点)->+[临时文本]\"1\"->+[消息窗口](,+节点)->+[del](,+节点)
+[增加内容]\"%[%s].\"(+[临时文本],+[消息窗口])

\"\"\"

+下一步(式子,_解题纸)->+[del](,+下一步)...

->公式(式子,)->的(式子,表达式)...
->.(+下一步,_原式)->的(_解题纸,内容)...

->[]{
    []:->的(_解题纸,序号)->序号(,_式子)->_式子->[==](_式子,式子)...
        ->+[del](,公式)->+[del](,式子)->+[del](,表达式),
    ->的(_解题纸,序号#1)->序号#1(,)...
        ->+[修改内容]\"[%s].\"(序号#1,+[修改标题])->+[修改标题](,式子)...
        ->+的(_解题纸,式子)->+[右连](序号#1,式子)...
        ->+[增加内容]\"%\"(,内容)->+[增加内容]\"[%s].\"(序号#1,内容)...
        ->+[matlab]\"ans=int64(n+1);\"(Matlab,序号#1)->+[.]\"n\"(+[matlab],序号#1)...
        ->[]{
            []:->+[.]\"n\"([matlab],序号#1)->[matlab]\"state=mod(n,10)>0;\"(Matlab,)...
                ->+[召唤星辰]\"解方程\"(_原式,_解题纸),
            ->[]
        }
}


"(,)
的#87""(降临规则#4,记录问题#88)
记录问题#88"\"\"\"
题设::求解方程: \(%方程\). 问题: x=?<br>解:

\"\"\"

+记录问题(表达式,_解题纸)->+[del](,+记录问题)...
->的(记录问题,题设)...

->的(_式子,表达式)->公式(_式子,)...
->[]{
    []:->的(_解题纸,内容)->内容,->+的(_解题纸,+内容)
}->的(_解题纸,内容)...

->+[模板文本](题设,+[修改内容])->+[修改内容](,内容)...
->+[.]\"方程\"(+[模板文本],_式子)

"(,)
的#89""(记录问题#88,题设#90)
题设#90"求解方程: \(%方程\). 问题: x=?<br>解:"(,)

## end
#467, 269:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"解方程"(,召唤星辰)...
->[is](_媒介,表达式)->的(表达式,起点)->起点(,_x)->=(_x,_a)...

->+记录结果(表达式,_凭依)->+的(操作,+记录结果)...
->+整体步骤(_x,_a)->+的(操作,+整体步骤)...

->[]{
    []:->记录问题(召唤星辰,)->+记录问题(_媒介,_凭依)->+的(操作,+记录问题),
    ->[]
}


## end
#469, 3:
475
## end
#471, 306811:
生成GEANT4代码#0"

召唤规则:...
降临规则:...


"(,)
的#1""(生成GEANT4代码#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开LWFA数据分析(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"GEANT4代码\"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,磁场分布)->磁场分布->+磁场代码(_物体,_凭依)->+的(操作,+磁场代码),
        ->的(_物体,磁场强度)->磁场强度->+磁场代码(_物体,_凭依)->+的(操作,+磁场代码),
        ->的(_物体,输出地址)->输出地址->+探测器代码(_物体,_凭依)->+的(操作,+探测器代码),
        ->的(_物体,代码)->代码->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,能谱)->能谱->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->+物体代码(_物体,_凭依)->+的(操作,+物体代码)
}...
->+设置单位(_媒介,_凭依)->+的(操作,+设置单位)


"(,)
的#3""(生成GEANT4代码#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

设置单位:...
物体代码:...
组合体转换:...
+[新建阅读窗口](,物体代码)

电子代码:...
磁场代码:...
探测器代码:...
将'磁场代码'的\"电子\"替换为\"磁场\"
将条目\"探测器代码\"复制为条目\"电子代码\"
+[新建阅读窗口](,电子代码)

整理代码:...
"(,)
的#5""(降临规则#4,物体代码#6)
物体代码#6"\"\"\"
Nini, 打开四则运算(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+物体代码(_物体,_凭依)->+[del](,+物体代码)...
->的(物体代码,描述结构)->的(物体代码,库)...

->[]{
    []:->的(_凭依,物体)->物体,->+的(_凭依,+物体)
}->的(_凭依,物体)...

->+[code]([想],描述结构)->[想](,_物体)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_x)->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_x,物体)->+[code](+[做],_条目)
}



"(,)
的#7""(物体代码#6,描述结构#8)
描述结构#8"\"\"\"


\"\"\"

+描述结构(,_物体)->+操作(+描述结构,)...

->_物体(,_目标)...
->[]{
    []:->_目标->+组合体(,_物体)->+的(+操作,+组合体),
    ->的(_物体,类型)->类型->[==]\"多面体\"(,类型)...
        ->+多面体(,_物体)->+的(+操作,+多面体),
    ->的(_物体,宽度)->宽度->+立方体(,_物体)->+的(+操作,+立方体),
    ->的(_物体,半径)->半径->+圆柱体(,_物体)->+的(+操作,+圆柱体)
}


"(,)
的#9""(物体代码#6,库#10)
库#10"
立方体:...
圆柱体:...
多面体:...
组合体:...
将条目\"立方体\"复制为条目\"多面体\"
将立方体的\"探测器\"替换为\"物体\"
将圆柱体的\"探测器\"替换为\"物体\"
+[新建阅读窗口](,立方体)

在'选择区域'中, 将'多面体'的\"宽度\"替换为\"y\"

"(,)
的#11""(库#10,多面体#12)
多面体#12"\"\"\"
P代码(P函数):...
M代码:...

保存:...
+[新建阅读窗口](,保存)

\"\"\"

+多面体(_物体,_文件)->+[del](,+多面体)...
->的(多面体,P代码)->的(多面体,M代码)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,x)->的(_物体,y)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"x\"(+[matlab],x)->+[o]\"x_out\"(+[matlab],+x)...
    ->+[.]\"x\"(+[python],+x)->+[del](,+x)...
->+[.]\"y\"(+[matlab],y)->+[o]\"y_out\"(+[matlab],+y)...
    ->+[.]\"y\"(+[python],+y)->+[del](,+y)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}



"(,)
的#13""(多面体#12,P代码#14)
P代码#14"\"\"\"
+[P函数](,P代码)
记住\"python\"
测试:...

\"\"\"
verts=''
for i in range(len(x)):
    verts+='%f,%f;'%(x[i],y[i])
verts=verts[0:-1]

ans=\"\"\"
# {0}
extrusion {0} length={1} vertices='{2}' material={9} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{6},X{7},Z{8}

\"\"\".format(name,H[0],verts,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,m)
"(,)
的#15""(P代码#14,测试#16)
测试#16"
print(name)
x=[1,2,3,4]
y=[3,4,5,6]
output=''
for i in range(len(x)):
    output+='%f,%f;'%(x[i],y[i])
output=output[0:-1]
print(output)
"(,)
的#17""(多面体#12,M代码#18)
M代码#18"%{

if x(end)==x(1) && y(end)==y(1)
    x(end)=[];
    y(end)=[];
end

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
Eulers_out=Eulers;

if x(end)==x(1) && y(end)==y(1)
    xe=x(1:end-1);
    ye=y(1:end-1);
else
    xe=x(1:end);
    ye=y(1:end);
end

xe(end)=(xe(end)-xe(end-1))*0.99+xe(end-1);
ye(end)=(ye(end)-ye(end-1))*0.99+ye(end-1);

H_out=H*scale;
x_out=-xe*scale;
y_out=-ye*scale;
pt_out=pt_out*scale;


%{

intersection_line_lines

clf
plot(x,y)
axis equal
%}"(,)
的#19""(多面体#12,保存#20)
保存#20"\"\"\"
P代码(P函数):...
M代码:...

保存:...

\"\"\"

+多面体(_物体,_文件)->+[del](,+多面体)...
->的(多面体,P代码)->的(多面体,M代码)...

->+[标题](_物体,)...
->的(_物体,x)->的(_物体,y)->的(_物体,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"x\"(+[python],x)->+[.]\"y\"(+[python],y)->+[.]\"H\"(+[python],高度)...
->+[s]\"name\"(+[python],+[标题])...

->+[.]\"H\"(+[matlab],高度)...
->+pt0->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点),
    ->+[.]\"pt\"(+[matlab],+[临时文本])->+[临时文本]\"0,0,0\"
}...
->+[o](+[matlab],+pt0)->+[.]\"pt\"(+[python],+pt0)->+[del](,+pt0)...

->[]{
    []:->朝向(_物体,方向)->方向(,)...
        ->+[.]\"Eulers\"(+[python],方向)->+[.]\"Eulers\"(+[matlab],方向),
    ->+[.]\"Eulers\"(+[python],+[临时文本])->+[.]\"Eulers\"(+[matlab],+[临时文本])...
        ->+[临时文本]\"0,0,0\"
}...

->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#21""(库#10,圆柱体#22)
圆柱体#22"\"\"\"
P代码(P函数):...
M代码(M函数):...
+[新建阅读窗口](,M代码)

保存:...

\"\"\"

+圆柱体(_物体,_文件)->+[del](,+圆柱体)...
->的(圆柱体,P代码)->的(圆柱体,M代码)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,半径)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"R\"(+[matlab],半径)->+[o]\"R_out\"(+[matlab],+半径)...
    ->+[.]\"R\"(+[python],+半径)->+[del](,+半径)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])->[]{
    []:->的(_物体,内径)->+[.]\"R0\"(+[python],内径),
    ->+[临时文本]\"0\"->+[.]\"R0\"(+[python],+[临时文本])
}...

->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#23""(圆柱体#22,P代码#24)
P代码#24"\"\"\"
+[P函数](,P代码)
记住\"python\"

参考::file:///C:/Users/cheng/Desktop/paper/GEANT4/G4beamlineUsersGuide.pdf#page=114
+[打开网页](,参考)
print(name)

\"\"\"

# D=2*R[0]
# D0=2*R0[0]

ans=\"\"\"
# {0}
tubs {0} innerRadius={6} radius={1} length={2} material={10} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,R[0],H[0],pt[0],pt[1],pt[2],R0[0],Eulers[2],-Eulers[1],Eulers[0]+180,m)



"(,)
的#25""(圆柱体#22,M代码#26)
M代码#26"%{
+[M函数](,M代码)
%}

[~,~,v_z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
pt_out=pt+v_z*H/2;
Eulers_out=Eulers;

R_out=R*scale;
H_out=H*scale;
pt_out=pt_out*scale;


%{
+[M函数](,M代码)
%}"(,)
的#27""(圆柱体#22,保存#28)
保存#28"\"\"\"
P代码(P函数):...
M代码(M函数):...

\"\"\"

+圆柱体(_物体,_文件)->+[del](,+圆柱体)...
->的(圆柱体,P代码)->的(圆柱体,M代码)...

->+[标题](_物体,)...
->的(_物体,半径)->的(_物体,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"R\"(+[python],半径)->+[.]\"H\"(+[python],高度)...
->+[s]\"name\"(+[python],+[标题])->[]{
    []:->的(_物体,内径)->+[.]\"R0\"(+[python],内径),
    ->+[临时文本]\"0\"->+[.]\"R0\"(+[python],+[临时文本])
}...

->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt\"(+[python],空间点),
    ->+[.]\"pt\"(+[python],+[临时文本])->+[临时文本]\"0,0,0\"
}...

->[]{
    []:->朝向(_物体,方向)->+[.]\"Eulers\"(+[python],方向),
    ->+[临时文本]\"0,0,0\"->+[.]\"Eulers\"(+[python],+[临时文本])
}...

->[]{
    []:->的(_物体,材料)->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#29""(库#10,立方体#30)
立方体#30"\"\"\"
P代码(P函数):...
M代码:...

保存:...
+[新建阅读窗口](,保存)

\"\"\"

+立方体(_物体,_文件)->+[del](,+立方体)...
->的(立方体,P代码)->的(立方体,M代码)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"W\"(+[matlab],长度)->+[o]\"W_out\"(+[matlab],+长度)...
    ->+[.]\"W\"(+[python],+长度)->+[del](,+长度)...
->+[.]\"L\"(+[matlab],宽度)->+[o]\"L_out\"(+[matlab],+宽度)...
    ->+[.]\"L\"(+[python],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}





"(,)
的#31""(立方体#30,M代码#32)
M代码#32"%{

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
Eulers_out=Eulers;

H_out=H*scale;
W_out=W*scale;
L_out=L*scale;
pt_out=pt_out*scale;

"(,)
的#33""(立方体#30,P代码#34)
P代码#34"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}
box {0} width={1} height={2} length={3} material={10} color=1,1,1
place {0} x={4} y={5} z={6} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,L[0],W[0],H[0],pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,m)

"(,)
的#35""(立方体#30,保存#36)
保存#36"\"\"\"
P代码(P函数):...
M代码:...

保存:...

\"\"\"

+立方体(_物体,_文件)->+[del](,+立方体)...
->的(立方体,P代码)->的(立方体,M代码)...

->+[标题](_物体,)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"W\"(+[python],长度)->+[.]\"L\"(+[python],宽度)->+[.]\"H\"(+[python],高度)...
->+[s]\"name\"(+[python],+[标题])...

->+[.]\"H\"(+[matlab],高度)...
->+pt0->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点),
    ->+[.]\"pt\"(+[matlab],+[临时文本])->+[临时文本]\"0,0,0\"
}...
->+[o](+[matlab],+pt0)->+[.]\"pt\"(+[python],+pt0)->+[del](,+pt0)...

->[]{
    []:->朝向(_物体,方向)->方向(,)...
        ->+[.]\"Eulers\"(+[python],方向)->+[.]\"Eulers\"(+[matlab],方向),
    ->+[.]\"Eulers\"(+[python],+[临时文本])->+[.]\"Eulers\"(+[matlab],+[临时文本])...
        ->+[临时文本]\"0,0,0\"
}...

->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#37""(库#10,组合体#38)
组合体#38"\"\"\"
组合体转换:...

\"\"\"

+组合体(_物体,_文件)->+[del](,+组合体)...
->的(组合体,组合体转换)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->_物体(,_场景)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[做](_场景,+[增加内容])->+[code](+[做],组合体转换)...
    ->+[.]\"空间点\"(+[做],空间点)->+[.]\"方向\"(+[做],方向)...
->+[增加内容](,_文件)


"(,)
的#39""(组合体#38,组合体转换#40)
组合体转换#40"\"\"\"
结构转换:...
+[修改标题]\"结构转换\"(,结构转ThreeJS)
将'结构转换'的\"ThreeJS\"替换为\"换\"
+[复制结构](,组合体转换)

\"\"\"

+组合体转换(_结构体,_输出)->+[del](,+组合体转换)...
->的(组合体转换,结构转换)...

->+[临时文本]->[]{
    []=>的(_结构体,_结构)...
        ->[]{[]:->的(_结构,类型#1)->类型#1,->的(_结构,能谱)->能谱}...
    =>+[做](_结构,+[增加内容])->+[code](+[做],结构转换)...
    ->[]{
        []:->.\"空间点\"(+组合体转换,_空间点)->_空间点->+[.]\"空间点\"(+[做],_空间点)...
            ->.\"方向\"(+组合体转换,_方向)->_方向->+[.]\"方向\"(+[做],_方向),
        ->+[.]\"空间点\"(+[做],+[临时文本]#pt)->+[临时文本]#pt\"0,0,0\"...
            ->+[.]\"方向\"(+[做],+[临时文本]#an)->+[临时文本]#an\"0,0,0\"
    }->+[增加内容](,+[临时文本])
}...

->+[修改内容](+[临时文本],_输出)


"(,)
的#41""(组合体转换#40,结构转换#42)
结构转换#42"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

保存:...

\"\"\"

+结构转换(_结构,_代码)->+[del](,+结构转换)...
->的(结构转换,库)->的(结构转换,描述结构)...

->.\"空间点\"(+结构转换,_空间点)->.\"方向\"(+结构转换,_方向)...

->+[code]([想],描述结构)->[想](,_结构)->操作([想],)...
->的(操作,_类型)->_类型->的(库,_条目)->_条目->[eq](_类型,_条目)...

->+[做](_结构,_代码)->+[code](+[做],_条目)...
    ->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向)


"(,)
的#43""(结构转换#42,库#44)
库#44"

立方体:...
圆柱体:...
球体:...
多面体:...
多面体2:...
将条目\"多面体\"复制为条目\"多面体2\"
+[新建阅读窗口](,多面体)
+[新建阅读窗口](,圆柱体)

组合体:...
将'组合体'的\"ThreeJS\"替换为\"换\"
在'选择区域'中, 将多面体的\"宽度\"替换为\"y\"
+[新建阅读窗口](,立方体)

电子:...
磁场:...
将条目\"电子\"复制为条目\"磁场\"

"(,)
的#45""(库#44,球体#46)
球体#46"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...

保存:...

\"\"\"

+球体(_结构,_代码)->+[del](,+球体)...
->的(球体,P模板)->的(球体,M代码)...

->.\"空间点\"(+球体,_空间点)->.\"方向\"(+球体,_方向)...

->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向)...
->的(_结构,半径)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[模板文本](P模板,_代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.](+[模板文本],+方向)->+[del](,+方向)...
->+[.]\"R\"(+[matlab],半径)->+[o]\"R_out\"(+[matlab],+半径)...
    ->+[.](+[模板文本],+半径)->+[del](,+半径)

"(,)
的#47""(球体#46,P模板#48)
P模板#48"pos=[%空间点]
bpy.ops.mesh.primitive_uv_sphere_add(radius=%半径)
A=bpy.context.selected_objects[0]
A.location=(pos[0],pos[1],pos[2]+%高度/2)

"(,)
的#49""(球体#46,M代码#50)
M代码#50"%{

%}


R_out=scale*R;
pt_out=scale*pt;

[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

"(,)
的#51""(球体#46,保存#52)
保存#52"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...

\"\"\"

+球体(_结构,_代码)->+[del](,+球体)...
->的(球体,P模板)->的(球体,M代码)...

->.\"空间点\"(+球体,_空间点)->.\"方向\"(+球体,_方向)...

->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向):
->的(_结构,半径)...
    ->+[模板文本](P模板,_代码)...
    ->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
    ->+[.](+[模板文本],半径),

->的(_结构,X)->的(_结构,Y)->的(_结构,Z)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...
->+[模板文本](P模板,_代码)...
    ->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
    ->+[.]\"半径\"(+[模板文本],+[临时文本]#R)->+[o]\"R\"(+[matlab],+[临时文本]#R)



"(,)
的#53""(库#44,平面#54)
平面#54"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...

\"\"\"

+平面(_结构,_代码)->+[del](,+平面)...
->的(平面,P模板)->的(平面,M代码)...

->[]{
[]:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向):
->的(_结构,长度)->的(_结构,宽度)...
    ->+[模板文本](P模板,_代码)...
    ->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
    ->+[.](+[模板文本],长度)->+[.](+[模板文本],宽度),

->的(_结构,X)->的(_结构,Y)->的(_结构,Z)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...
->+[模板文本](P模板,_代码)...
    ->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
    ->+[.]\"长度\"(+[模板文本],+[临时文本]#L)->+[o]\"L\"(+[matlab],+[临时文本]#L)...
    ->+[.]\"宽度\"(+[模板文本],+[临时文本]#W)->+[o]\"W\"(+[matlab],+[临时文本]#W)



"(,)
的#55""(平面#54,M代码#56)
M代码#56"%{

%}

W=max(max(X))*2;
L=max(max(Y))*2;

"(,)
的#57""(平面#54,P模板#58)
P模板#58"pos=[%空间点]
eulers=np.deg2rad(np.array([%方向]))
bpy.ops.mesh.primitive_plane_add()
A=bpy.context.selected_objects[0]
A.location=(pos[0],pos[1],pos[2])
A.scale=(%宽度/2,%长度/2,1)
A.rotation_euler.rotate(mathutils.Euler([0,0,eulers[2]]))
A.rotation_euler.rotate(mathutils.Euler([eulers[1],0,0]))
A.rotation_euler.rotate(mathutils.Euler([0,0,eulers[0]]))

"(,)
的#59""(库#44,圆柱体#60)
圆柱体#60"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P代码:...
M代码:...
+[修改标题]\"P代码\"(,P模板)

\"\"\"

+圆柱体(_物体,_代码)->+[del](,+圆柱体)...
->的(圆柱体,P代码)->的(圆柱体,M代码)...

->.\"空间点\"(+圆柱体,_空间点)->.\"方向\"(+圆柱体,_方向)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,半径)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,_代码)->+[code](+[python],P代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"R\"(+[matlab],半径)->+[o]\"R_out\"(+[matlab],+半径)...
    ->+[.]\"R\"(+[python],+半径)->+[del](,+半径)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])->[]{
    []:->的(_物体,内径)->+[.]\"R0\"(+[python],内径),
    ->+[临时文本]\"0\"->+[.]\"R0\"(+[python],+[临时文本])
}...

->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#61""(圆柱体#60,M代码#62)
M代码#62"%{

%}


[~,~,v_z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
pt_out=pt+v_z*H/2;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

R_out=R*scale;
H_out=H*scale;
pt_out=pt_out*scale;
"(,)
的#63""(圆柱体#60,P代码#64)
P代码#64"\"\"\"
+[P函数](,P代码)
记住\"python\"

参考::file:///C:/Users/cheng/Desktop/paper/GEANT4/G4beamlineUsersGuide.pdf#page=114
+[打开网页](,参考)
print(name)

\"\"\"

# D=2*R[0]
# D0=2*R0[0]

ans=\"\"\"
# {0}
tubs {0} innerRadius={6} radius={1} length={2} material={10} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,R[0],H[0],pt[0],pt[1],pt[2],R0[0],Eulers[2],-Eulers[1],Eulers[0]+180,m)



"(,)
的#65""(库#44,多面体2#66)
多面体2#66"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P代码:...
M代码:...
+[修改标题]\"P代码\"(,P模板)

保存:...

\"\"\"


+多面体2(_物体,_文件)->+[del](,+多面体2)...
->的(多面体2,P代码)->的(多面体2,M代码)...

->.\"空间点\"(+多面体2,_空间点)->.\"方向\"(+多面体2,_方向)...
->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,x)->的(_物体,y)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
    ->+[.]\"x_es\"(+[matlab],x)->+[.]\"y_es\"(+[matlab],y)...
->+[python](Python,_文件)->+[code](+[python],P代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...
->+[o]\"R\"(+[matlab],+半径)->+[.]\"R\"(+[python],+半径)->+[del](,+半径)...
->+[o]\"R0\"(+[matlab],+内径)->+[.]\"R0\"(+[python],+内径)->+[del](,+内径)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}

"(,)
的#67""(多面体2#66,P代码#68)
P代码#68"\"\"\"
+[P函数](,P代码)
记住\"python\"

\"\"\"

ans=\"\"\"
# {0}
tubs {0} innerRadius={6} radius={1} length={2} material={10} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,R[0],H[0],pt[0],pt[1],pt[2],R0[0],Eulers[2],-Eulers[1],Eulers[0]+180,m)



"(,)
的#69""(多面体2#66,M代码#70)
M代码#70"%{

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

R=sqrt(x_es(99)^2+y_es(99)^2)*scale;
R0=sqrt(x_es(100)^2+y_es(100)^2)*scale;
H_out=H*scale;
pt_out=pt_out*scale;


"(,)
的#71""(多面体2#66,保存#72)
保存#72"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...
+[新建阅读窗口](,P模板)

保存:...

\"\"\"

+多面体(_结构,_代码)->+[del](,+多面体)...
->的(多面体,P模板)->的(多面体,M代码)...

->.\"空间点\"(+多面体,_空间点)->.\"方向\"(+多面体,_方向)...

->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向)...
->的(_结构,x)->的(_结构,y)->的(_结构,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[模板文本](P模板,_代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.](+[模板文本],+方向)->+[del](,+方向)...
->+[.]\"x\"(+[matlab],x)->+[o]\"x_out\"(+[matlab],+x)...
    ->+[.](+[模板文本],+x)->+[del](,+x)...
->+[.]\"y\"(+[matlab],y)->+[o]\"y_out\"(+[matlab],+y)...
    ->+[.](+[模板文本],+y)->+[del](,+y)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.](+[模板文本],+高度)->+[del](,+高度)



"(,)
的#73""(库#44,组合体#74)
组合体#74"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+组合体(_结构,_代码)->+[del](,+组合体)...
->的(组合体,M代码)...
->的(库,组合体)->的(结构转换,库)->的(组合体转换,结构转换)...

->.\"空间点\"(+组合体,_空间点)->.\"方向\"(+组合体,_方向)...
->[]{
    []:->在(_结构,空间点)->空间点,->+在(_结构,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->_结构(,_组合体)...
->在(_结构,空间点)->朝向(_结构,方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[做](_组合体,_代码)->+[code](+[做],组合体转换)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"空间点\"(+[做],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"方向\"(+[做],+方向)->+[del](,+方向)


"(,)
的#75""(组合体#74,M代码#76)
M代码#76"%{
Nini, 打开三维场景的transform_3D_frame(节点)
%}

pt_out=pt;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

"(,)
的#77""(库#44,立方体#78)
立方体#78"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P代码:...
M代码:...
+[新建阅读窗口](,M代码)

保存:...

\"\"\"

+立方体(_物体,_文件)->+[del](,+立方体)...
->的(立方体,P代码)->的(立方体,M代码)...

->.\"空间点\"(+立方体,_空间点)->.\"方向\"(+立方体,_方向)...
->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,_文件)->+[code](+[python],P代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"W\"(+[matlab],长度)->+[o]\"W_out\"(+[matlab],+长度)...
    ->+[.]\"W\"(+[python],+长度)->+[del](,+长度)...
->+[.]\"L\"(+[matlab],宽度)->+[o]\"L_out\"(+[matlab],+宽度)...
    ->+[.]\"L\"(+[python],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}


"(,)
的#79""(立方体#78,P代码#80)
P代码#80"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}
box {0} width={1} height={2} length={3} material={10} color=1,1,1
place {0} x={4} y={5} z={6} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,L[0],W[0],H[0],pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,m)

"(,)
的#81""(立方体#78,M代码#82)
M代码#82"%{
Nini, 打开三维场景的transform_3D_frame(节点)
%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

H_out=H*scale;
W_out=W*scale;
L_out=L*scale;
pt_out=pt_out*scale;





"(,)
的#83""(立方体#78,保存#84)
保存#84"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...
+[新建阅读窗口](,P模板)

保存:...

\"\"\"

+立方体(_结构,_代码)->+[del](,+立方体)...
->的(立方体,P模板)->的(立方体,M代码)...

->.\"空间点\"(+立方体,_空间点)->.\"方向\"(+立方体,_方向)...

->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向)...
->的(_结构,长度)->的(_结构,宽度)->的(_结构,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[模板文本](P模板,_代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.](+[模板文本],+方向)->+[del](,+方向)...
->+[.]\"L\"(+[matlab],长度)->+[o]\"L_out\"(+[matlab],+长度)...
    ->+[.](+[模板文本],+长度)->+[del](,+长度)...
->+[.]\"W\"(+[matlab],宽度)->+[o]\"W_out\"(+[matlab],+宽度)...
    ->+[.](+[模板文本],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.](+[模板文本],+高度)->+[del](,+高度)



"(,)
的#85""(库#44,多面体#86)
多面体#86"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P代码:...
M代码:...
+[修改标题]\"P代码\"(,P模板)

保存:...

\"\"\"


+多面体(_物体,_文件)->+[del](,+多面体)...
->的(多面体,P代码)->的(多面体,M代码)...

->.\"空间点\"(+多面体,_空间点)->.\"方向\"(+多面体,_方向)...
->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...

->的(_物体,x)->的(_物体,y)->的(_物体,高度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[标题](_物体,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,_文件)->+[code](+[python],P代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"x\"(+[matlab],x)->+[o]\"x_out\"(+[matlab],+x)...
    ->+[.]\"x\"(+[python],+x)->+[del](,+x)...
->+[.]\"y\"(+[matlab],y)->+[o]\"y_out\"(+[matlab],+y)...
    ->+[.]\"y\"(+[python],+y)->+[del](,+y)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->的(_物体,材料)->材料->+[.]\"m\"(+[python],材料),
    ->+材料\"Fe\"->+[.]\"m\"(+[python],+材料)->+[del](,+材料)
}

"(,)
的#87""(多面体#86,保存#88)
保存#88"\"\"\"
+[修改天使]
Nini, 打开词典的条目(节点)
P模板:...
M代码:...
+[新建阅读窗口](,P模板)

保存:...

\"\"\"

+多面体(_结构,_代码)->+[del](,+多面体)...
->的(多面体,P模板)->的(多面体,M代码)...

->.\"空间点\"(+多面体,_空间点)->.\"方向\"(+多面体,_方向)...

->[]{
    []:->朝向(_结构,方向)->方向,->+朝向(_结构,+方向)->+方向\"0,0,0\"
}...

->在(_结构,空间点)->朝向(_结构,方向)...
->的(_结构,x)->的(_结构,y)->的(_结构,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[模板文本](P模板,_代码)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.](+[模板文本],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.](+[模板文本],+方向)->+[del](,+方向)...
->+[.]\"x\"(+[matlab],x)->+[o]\"x_out\"(+[matlab],+x)...
    ->+[.](+[模板文本],+x)->+[del](,+x)...
->+[.]\"y\"(+[matlab],y)->+[o]\"y_out\"(+[matlab],+y)...
    ->+[.](+[模板文本],+y)->+[del](,+y)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.](+[模板文本],+高度)->+[del](,+高度)



"(,)
的#89""(多面体#86,M代码#90)
M代码#90"%{

if x(end)==x(1) && y(end)==y(1)
    x(end)=[];
    y(end)=[];
end

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

if x(end)==x(1) && y(end)==y(1)
    xe=x(1:end-1);
    ye=y(1:end-1);
else
    xe=x(1:end);
    ye=y(1:end);
end

xe(end)=(xe(end)-xe(end-1))*0.99+xe(end-1);
ye(end)=(ye(end)-ye(end-1))*0.99+ye(end-1);

H_out=H*scale;
x_out=-xe*scale;
y_out=-ye*scale;
pt_out=pt_out*scale;

"(,)
的#91""(多面体#86,P代码#92)
P代码#92"\"\"\"
+[P函数](,P代码)
记住\"python\"

保存:...

\"\"\"
verts=''
for i in range(len(x)):
    verts+='%f,%f;'%(x[i],y[i])
verts=verts[0:-1]

ans=\"\"\"
# {0}
extrusion {0} length={1} vertices='{2}' material={9} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{6},X{7},Z{8}

\"\"\".format(name,H[0],verts,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,m)

"(,)
的#93""(P代码#92,保存#94)
保存#94"\"\"\"
+[P函数](,P代码)
记住\"python\"

保存:...

\"\"\"
verts=''
for i in range(len(x)-2):
    verts+='%f,%f;'%(x[i],y[i])
verts=verts[0:-1]

ans=\"\"\"
# {0}
extrusion {0} length={1} vertices='{2}' material={9} color=1,1,1
place {0} x={3} y={4} z={5} rotation=Z{6},X{7},Z{8}

\"\"\".format(name,H[0],verts,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0],m)

"(,)
的#95""(库#44,磁场#96)
磁场#96"\"\"\"


\"\"\"
+磁场(_磁场,)->+[del](,+磁场)...
->的(磁场,引用)->引用(,降临规则)->的(降临规则,磁场代码)->的(_凭依,降临规则)...

->.\"空间点\"(+磁场,_空间点)->.\"方向\"(+磁场,_方向)...

->+[做](_磁场,_凭依)->+[code](+[做],磁场代码)...
->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向)



"(,)
的#97""(磁场#96,引用#98)
引用#98""(,降临规则#4)
的#99""(库#44,电子#100)
电子#100"\"\"\"
电子->的(库,电子)->的(结构转换,库)->的(组合体转换,结构转换)->的(降临规则,组合体转换)...
->的(降临规则,电子代码)...
->+的(电子,+引用)->+引用(,降临规则)

有什么
[]=>引用=>+[显示](,引用)

\"\"\"
+电子(_电子,)->+[del](,+电子)...
->的(电子,引用)->引用(,降临规则)->的(降临规则,电子代码)->的(_凭依,降临规则)...

->.\"空间点\"(+电子,_空间点)->.\"方向\"(+电子,_方向)...

->+[做](_电子,_凭依)->+[code](+[做],电子代码)...
->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向)



"(,)
的#101""(电子#100,引用#102)
引用#102""(,降临规则#4)
的#103""(电子#100,的#104)
的#104""(电子#100,引用#102)
的#105""(结构转换#42,描述结构#106)
描述结构#106"\"\"\"
记住\"Matlab\"
state=(1>0)
state

\"\"\"
+描述结构(,_结构)->+操作(+描述结构,)...

->_结构(,_目标):
->的(_结构,磁场强度)->+的(+操作,+磁场),
->的(_结构,磁场分布)->+的(+操作,+磁场),
->的(_结构,能谱)->+的(+操作,+电子),

->的(_结构,类型)...
->[]{
    []:->_目标->+的(+操作,+组合体),

    ->[==]\"立方体\"(,类型)->+的(+操作,+立方体),
    ->[==]\"圆柱体\"(,类型)->+的(+操作,+圆柱体),
    ->[==]\"球体\"(,类型)->+的(+操作,+球体),
    ->[==]\"多面体\"(,类型)->+的(+操作,+多面体)...
        ->的(_结构,x)->x(,)...
        ->+[.]([matlab],x)->[matlab]\"state=(length(x)<50);\"(Matlab,),
    ->+的(+操作,+多面体2)
}

"(,)
的#107""(结构转换#42,保存#108)
保存#108"\"\"\"
描述结构:...
库:...

\"\"\"

+结构转ThreeJS(_结构,_代码)->+[del](,+结构转ThreeJS)...
->的(结构转ThreeJS,库)->的(结构转ThreeJS,描述结构)...

->.\"空间点\"(+结构转ThreeJS,_空间点)->.\"方向\"(+结构转ThreeJS,_方向)...

->+[code]([想],描述结构)->[想](,_结构)

->+[matlab]\"scale=100;\"(Matlab,)->的(_结构,类型):
->[==]\"立方体\"(,类型)->的(库,立方体)->+[做](_结构,_代码)->+[code](+[做],立方体)...
    ->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向),
->[==]\"圆柱体\"(,类型)->的(库,圆柱体)->+[做](_结构,_代码)->+[code](+[做],圆柱体)...
    ->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向),
->[==]\"球体\"(,类型)->的(库,球体)->+[做](_结构,_代码)->+[code](+[做],球体)...
    ->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向),
->[==]\"多面体\"(,类型)->的(库,多面体)->+[做](_结构,_代码)->+[code](+[做],多面体)...
    ->+[.]\"空间点\"(+[做],_空间点)->+[.]\"方向\"(+[做],_方向)

"(,)
的#109""(降临规则#4,探测器代码#110)
探测器代码#110"\"\"\"
P代码(P函数):...
P代码2:...
M代码:...

保存:...

\"\"\"

+探测器代码(_探测器,_凭依)->+[del](,+探测器代码)...
->的(探测器代码,P代码)->的(探测器代码,P代码2)...
->的(探测器代码,M代码)...

->[]{
    []:->的(_凭依,探测器)->探测器,->+的(_凭依,+探测器)
}->的(_凭依,探测器)...

->[]{
    []:->在(_探测器,空间点)->空间点, ->+在(_探测器,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_探测器,方向)->方向, ->+朝向(_探测器,+方向)->+方向\"0,0,0\"
}...

->在(_探测器,空间点)->朝向(_探测器,方向)...
->的(_探测器,长度)->的(_探测器,宽度)->的(_探测器,高度)...
->的(_探测器,输出地址)...

->+[标题](_探测器,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])...
->+[增加内容](,探测器)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"W\"(+[matlab],长度)->+[o]\"W_out\"(+[matlab],+长度)...
    ->+[.]\"W\"(+[python],+长度)->+[del](,+长度)...
->+[.]\"L\"(+[matlab],宽度)->+[o]\"L_out\"(+[matlab],+宽度)...
    ->+[.]\"L\"(+[python],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->+[.]\"file_name\"(+[python],+[临时文本]#dir)...
    ->[路径补全](输出地址,+[临时文本]#dir)...

->[]{
    []:->的(_探测器,材料)->材料->[说](,材料)->+[s]\"m\"(+[python],材料)...
        ->+[code](+[python],P代码2),
    ->+[code](+[python],P代码)
}



"(,)
的#111""(探测器代码#110,P代码#112)
P代码#112"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}
virtualdetector {0} width={8} height={9} length={10} color=0.8,0.9,1 \  
format=ascii filename={1}
place {0} x={2} y={3} z={4} rotation=Z{5},X{6},Z{7}

\"\"\".format(name,file_name,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,L[0],W[0],H[0])

"(,)
的#113""(探测器代码#110,保存#114)
保存#114"\"\"\"
P代码(P函数):...

\"\"\"

+探测器代码(_探测器,_凭依)->+[del](,+探测器代码)...
->的(探测器代码,P代码)...

->[]{
    []:->的(_凭依,探测器)->探测器,->+的(_凭依,+探测器)
}->的(_凭依,探测器)...

->+[标题](_探测器,)...
->的(_探测器,长度)->的(_探测器,宽度)->的(_探测器,高度)...
->的(_探测器,输出地址)...

->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,探测器)...
->+[.]\"W\"(+[python],长度)->+[.]\"L\"(+[python],宽度)...
->+[.]\"file_name\"(+[python],输出地址)->+[s]\"name\"(+[python],+[标题])...

->[]{
    []:->在(_探测器,空间点)->空间点->+[.]\"pt\"(+[python],空间点),
    ->+[.]\"pt\"(+[python],+[临时文本])->+[临时文本]\"0,0,0\"
}...

->[]{
    []:->朝向(_探测器,方向)->方向->+[.]\"Eulers\"(+[python],方向),
    ->+[.]\"Eulers\"(+[python],+[临时文本])->+[临时文本]\"0,0,0\"
}...

->[]{
    []:->的(_探测器,高度)->高度->+[.]\"H\"(+[python],高度),
    ->+[.]\"H\"(+[python],+[临时文本])->+[临时文本]\"0.01\"
}

"(,)
的#115""(探测器代码#110,M代码#116)
M代码#116"%{
Nini, 打开三维场景的transform_3D_frame(节点)
%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
Eulers_out=Eulers;

H_out=H*scale;
W_out=W*scale;
L_out=L*scale;
pt_out=pt_out*scale;

"(,)
的#117""(探测器代码#110,P代码2#118)
P代码2#118"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}
detector {0} width={8} height={9} length={10} color=0.8,0.2,0 \  
format=ascii filename={1} material={11}
place {0} x={2} y={3} z={4} rotation=Z{5},X{6},Z{7}

\"\"\".format(name,file_name,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,L[0],W[0],H[0],m)


"(,)
的#119""(降临规则#4,电子代码#120)
电子代码#120"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->[]{
    []:->的(_凭依,电子)->电子,->+的(_凭依,+电子)
}->的(_凭依,电子)...

->+[code]([想],描述结构)->[想](,_电子)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_x)->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_x,电子)->+[code](+[做],_条目)...
        ->[]{
            []:->.\"空间点\"(+电子代码,_空间点)->_空间点->+[.]\"空间点\"(+[做],_空间点)...
                ->.\"方向\"(+电子代码,_方向)->_方向->+[.]\"方向\"(+[做],_方向),
            ->+[.]\"空间点\"(+[做],+[临时文本]#pt)->+[临时文本]#pt\"0,0,0\"...
                ->+[.]\"方向\"(+[做],+[临时文本]#an)->+[临时文本]#an\"0,0,0\"
        }
}


"(,)
的#121""(电子代码#120,描述结构#122)
描述结构#122"\"\"\"
->[]{
    []:->的(_电子,发散度)->发散度->+电子2(,_电子)->+的(+操作,+电子2),
    ->+电子3(,_电子)->+的(+操作,+电子3)
},

\"\"\"

+描述结构(,_电子)->+操作(+描述结构,)...

->[]{
    []:->的(_电子,能谱宽度)->能谱宽度->的(_电子,能量#0)...
        ->+电子2(,_电子)->+的(+操作,+电子2),

    ->+电子(,_电子)->+的(+操作,+电子)...
    ->[]{
        []:->的(_电子,代码)->代码(,_代码)->_代码(,)...
            ->+生成电子源3(,_电子)->+的(+操作,+生成电子源3),
        ->的(_电子,能量)->能量(,)...
            ->+生成电子源2(,_电子)->+的(+操作,+生成电子源2),
        ->的(_电子,能谱)->能谱(,)...
            ->+生成电子源(,_电子)->+的(+操作,+生成电子源),
        ->[]
    }
}

"(,)
的#123""(电子代码#120,库#124)
库#124"

生成电子源:...
(有能谱函数和角分布函数)
生成电子源2:...
生成电子源3:...
将条目\"生成电子源2\"复制为条目\"生成电子源3\"

电子:...
电子2:...
将条目\"电子\"复制为条目\"电子2\"
将'电子'的\"粒子\"替换为\"电子\"



"(,)
的#125""(库#124,生成电子源3#126)
生成电子源3#126"\"\"\"
M模板:...
M代码:...
+[新建阅读窗口](,M模板)
+[M函数](,M代码)
Nini, 打开动词(库)

\"\"\"

+生成电子源3(_电子,电子)->+[del](,+生成电子源3)...
->的(生成电子源3,M模板)->的(生成电子源3,M代码)...

->的(_电子,代码)->代码(,_代码)...
->+[模板文本](M模板,+[临时文本])->+[.]\"代码\"(+[模板文本],_代码)...
->+[matlab](Matlab,)->+[code](+[matlab],+[临时文本])...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"file_name\"(+[matlab],+[临时文本]#dir)...
->[]{
    []:->[==](,_电子)...
        ->[路径补全]\"output/spectrometer/GEANT4/G.txt\"(,+[临时文本]#dir),
    ->[路径补全](_电子,+[临时文本]#dir)
}...

->+的(电子,+设置电子源)->+[修改内容](M代码,+设置电子源)

"(,)
的#127""(生成电子源3#126,M模板#128)
M模板#128"%{
+[M函数](,设置电子源)
E_0

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('Matlab/random')
physics_constant;

N=1e5;
% MeV/c
P=1e3*ones(1,N);
Px=zeros(1,N);
Py=zeros(1,N);
Pz=sqrt(P.^2-Px.^2-Py.^2);

%代码


n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];



%{
+[M函数](,设置电子源)
%}"(,)
的#129""(M模板#128,保存#130)
保存#130"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:
%}

addpath('matlab\random')
physics_constant;

file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt\";

N=1000000;
%角分布
%能谱

theta_range=[%角度范围];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[%能量范围];

tx=random_func_1D(1,N,TX,GT);
ty=random_func_1D(1,N,TY,GT);
En=EN0*ones(1,N);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#131""(生成电子源3#126,M代码#132)
M代码#132"%{
+[M函数](,设置电子源)
%}

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#133""(库#124,电子2#134)
电子2#134"\"\"\"
P代码(P函数):...
M代码:...

保存:...

\"\"\"

+电子2(_电子2,_文件)->+[del](,+电子2)...
->的(电子2,P代码)->的(电子2,M代码)...

->.\"空间点\"(+电子2,_空间点)->.\"方向\"(+电子2,_方向)...
->[]{
    []:->在(_电子2,空间点)->空间点, ->+在(_电子2,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_电子2,方向)->方向, ->+朝向(_电子2,+方向)->+方向\"0,0,0\"
}...

->在(_电子2,空间点)->朝向(_电子2,方向)...
->的(_电子2,能量)->的(_电子2,能谱宽度)...

->+[标题](_电子2,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"E0\"(+[matlab],能量)->+[o]\"E0_out\"(+[matlab],+能量)...
    ->+[.]\"E0\"(+[python],+能量)->+[del](,+能量)...
->+[.]\"DE\"(+[matlab],能谱宽度)->+[o]\"DE_out\"(+[matlab],+能谱宽度)...
    ->+[.]\"DE\"(+[python],+能谱宽度)->+[del](,+能谱宽度)...

->+[s]\"name\"(+[python],+[标题])...

->[]{
    []:->的(_电子2,发散度)->发散度->+[.]\"ds\"(+[python],发散度),
    ->+[.]\"ds\"(+[python],+[临时文本])->+[临时文本]\"0\"
}...
->[]{
    []:->的(_电子2,数目)->数目->+[.]\"N\"(+[python],数目),
    ->+[.]\"N\"(+[python],+[临时文本])->+[临时文本]\"100000\"
}
"(,)
的#135""(电子2#134,P代码#136)
P代码#136"\"\"\"
+[P函数](,P代码)
记住\"python\"

# {0}
beam gaussian particle=e- nEvents=10000 beamZ=-500 \ 
sigmaX=0.001 sigmaY=0.001 sigmaXp=0.00010 sigmaYp=0.000100 \ 
meanMomentum=1100.0 sigmaP=1000.0 meanT=0.0 sigmaT=0.0 \ 
x={1} y={2} z={3} rotation=Z{4},X{5},Z{6}

\"\"\"

ans=\"\"\"
# {0}
beam gaussian particle=e- nEvents=%d \ 
meanMomentum=%f sigmaP=%f sigmaXp=%f sigmaYp=%f \
x={1} y={2} z={3} rotation=Z{4},X{5},Z{6}

\"\"\".format(name,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180)

ans=ans%(N[0],E0[0],DE[0],ds[0],ds[0])


"(,)
的#137""(电子2#134,M代码#138)
M代码#138"%{


%}

physics_constant;
addpath(\"Matlab/space\");
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt,Eulers);

pt_out=pt_out*scale;
E0_out=E0/1e6/e;
DE_out=DE/1e6/e;

"(,)
的#139""(库#124,生成电子源#140)
生成电子源#140"\"\"\"
M模板:...
M模板2:...
M代码:...

测试:...
+[新建阅读窗口](,M模板)
+[M函数](,M代码)

\"\"\"

+生成电子源(_电子,电子)->+[del](,+生成电子源)...
->的(生成电子源,M模板)->的(生成电子源,M模板2)...
->的(生成电子源,M代码)...

->的(_电子,能谱)->能谱(,_能谱)...
->的(_能谱,表达式#1)->+[算式结构转换]\"Matlab\"(表达式#1,+[临时文本]#S)...

->+[临时文本]#t->[]{
    []:->的(_电子,角分布)->角分布(,_角分布)->的(_角分布,表达式#2)...
        ->+[算式结构转换]\"Matlab\"(表达式#2,+[临时文本]#t),
    ->[]
}...

->+[模板文本](,M代码)...
->+[临时文本]#t->[]{
    []:->的(_电子,角分布)->角分布->+[.]\"角分布\"(+[模板文本],+[临时文本]#t)...
        ->+[code](+[模板文本],M模板),
    ->+[code](+[模板文本],M模板2)
}...
->+[.]\"能谱\"(+[模板文本],+[临时文本]#S)...
->[]{
    []:->的(_电子,能量范围)->能量范围->+[.](+[模板文本],能量范围),
    ->+[.]\"能量范围\"(+[模板文本],+[临时文本])->+[临时文本]\"10,1000\"
}...
->[]{
    []:->的(_电子,角度范围)->角度范围->+[.](+[模板文本],角度范围),
    ->+[.]\"角度范围\"(+[模板文本],+[临时文本])->+[临时文本]\"-10e-3,10e-3\"
}...
->[]{
    []:->的(_电子,数目)->数目->+[.](+[模板文本],数目),
    ->+[.]\"数目\"(+[模板文本],+[临时文本])->+[临时文本]\"100000\"
}...

->+[.]\"地址\"(+[模板文本],+[临时文本]#dir)...
->[]{
    []:->[==](,_电子)...
        ->[路径补全]\"output/spectrometer/GEANT4/G.txt\"(,+[临时文本]#dir),
    ->[路径补全](_电子,+[临时文本]#dir)
}...


->+[M函数](,M代码)->+[记住](+电子源代码,M代码)->+[del](,+电子源代码)...

->+的(电子,+设置电子源)->+[修改内容](M代码,+设置电子源)...
->[]{
    []:->的(_电子,设置电子)->设置电子->+[修改内容](M代码,设置电子),
    ->[]
}

"(,)
的#141""(生成电子源#140,M代码#142)
M代码#142"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('Matlab\random')
physics_constant;

% file_name=\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/paper/spectrometer/G.txt\";
file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt\";

N=10000;
Delta_t=10.^(-3);
g_x=@(theta_x)exp(-theta_x.^(2)./Delta_t.^(2));
g_y=@(theta_y)exp(-theta_y.^(2)./Delta_t.^(2));

Delta_E=50;
E_0=800;
f=@(E)exp(-(E-E_0).^(2)./Delta_E.^(2));


theta_range=[-10e-3,10e-3];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
GTX=g_x(TX);
GTY=g_y(TY);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[100,1000];
EN=linspace(energy_range(1),energy_range(2),100);
GEN=f(EN);

tx=random_func_1D(1,N,TX,GTX);
ty=random_func_1D(1,N,TY,GTY);
En=random_func_1D(1,N,EN,GEN);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#143""(生成电子源#140,M模板#144)
M模板#144"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('Matlab/random')
physics_constant;

% file_name=\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/paper/spectrometer/G.txt\";
file_name=\"%地址\";

N=%数目;
%角分布
%能谱

theta_range=[%角度范围];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
GTX=g_x(TX);
GTY=g_y(TY);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[%能量范围];
EN=linspace(energy_range(1),energy_range(2),100);
GEN=f(EN);

tx=random_func_1D(1,N,TX,GTX);
ty=random_func_1D(1,N,TY,GTY);
En=random_func_1D(1,N,EN,GEN);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

% figure
hist(En,100)
xlabel(\"Energy [MeV]\")
writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#145""(M模板#144,保存#146)
保存#146"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:
%}

addpath('matlab\random')
physics_constant;

file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt\";

N=1000000;
%角分布
%能谱

theta_range=[%角度范围];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[%能量范围];

tx=random_func_1D(1,N,TX,GT);
ty=random_func_1D(1,N,TY,GT);
En=EN0*ones(1,N);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#147""(生成电子源#140,M模板2#148)
M模板2#148"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('Matlab/random')
physics_constant;

% file_name=\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/paper/spectrometer/G.txt\";
file_name=\"%地址\";

N=%数目;
%能谱

% MeV
energy_range=[%能量范围];
EN=linspace(energy_range(1),energy_range(2),100);
GEN=f(EN);

tx=zeros(1,N);
ty=zeros(1,N);
En=random_func_1D(1,N,EN,GEN);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

% figure
hist(En,100)
xlabel(\"Energy [MeV]\")
writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#149""(生成电子源#140,测试#150)
测试#150""(,)
的#151""(库#124,电子#152)
电子#152"\"\"\"
P代码(P函数):...
M代码:...

保存:...

Nini, 打开动词(库)
Nini, 打开名词(库)
+[路径补全]\"12\"(,+[显示])
+[显示]->[路径补全]\"12\"(,+[显示])

\"\"\"

+电子(_电子,_文件)->+[del](,+电子)...
->的(电子,P代码)->的(电子,M代码)...

->.\"空间点\"(+电子,_空间点)->.\"方向\"(+电子,_方向)...
->[]{
    []:->在(_电子,空间点)->空间点, ->+在(_电子,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_电子,方向)->方向, ->+朝向(_电子,+方向)->+方向\"0,0,0\"
}...

->在(_电子,空间点)->朝向(_电子,方向)...

->+[标题](_电子,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...

->+[s]\"name\"(+[python],+[标题])->+[s]\"filename\"(+[python],+[临时文本])...
->[]{
    []:->[==](,_电子)...
        ->[路径补全]\"output/spectrometer/GEANT4/G.txt\"(,+[临时文本]),
    ->[路径补全](_电子,+[临时文本])
}

"(,)
的#153""(电子#152,M代码#154)
M代码#154"%{


%}

addpath(\"Matlab/space\");
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt,Eulers);

pt_out=pt_out*scale;

"(,)
的#155""(电子#152,保存#156)
保存#156"\"\"\"
P代码(P函数):...

保存:...

\"\"\"

+电子(_电子,_文件)->+[del](,+电子)...
->的(电子,P代码)...

->+[标题](_电子,)->在(_电子,空间点)->朝向(_电子,方向)...

->+[python](Python,+[增加内容])->+[增加内容](,_文件)...
->+[code](+[python],P代码)...
->+[.]\"pt\"(+[python],空间点)->+[.]\"Eulers\"(+[python],方向)...
->+[s]\"name\"(+[python],+[标题])...

->[]{
    []:->[==](,_电子)->+[s]\"filename\"(+[python],+[临时文本])...
        ->+[临时文本]\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\spectrometer\GEANT4\G.txt\",
    ->+[s]\"filename\"(+[python],_电子)
}

"(,)
的#157""(电子#152,P代码#158)
P代码#158"\"\"\"
+[P函数](,P代码)
记住\"python\"

# {0}
beam gaussian particle=e- nEvents=10000 beamZ=-500 \ 
sigmaX=0.001 sigmaY=0.001 sigmaXp=0.00010 sigmaYp=0.000100 \ 
meanMomentum=1100.0 sigmaP=1000.0 meanT=0.0 sigmaT=0.0 \ 
x={1} y={2} z={3} rotation=Z{4},X{5},Z{6}

\"\"\"

ans=\"\"\"
# {0}
beam ascii particle=e- filename={7} \ 
x={1} y={2} z={3} rotation=Z{4},X{5},Z{6}

\"\"\".format(name,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180,filename)

"(,)
的#159""(库#124,生成电子源2#160)
生成电子源2#160"\"\"\"
M代码:...
+[新建阅读窗口](,M模板)
+[M函数](,M代码)
Nini, 打开动词(库)

\"\"\"

+生成电子源2(_电子,电子)->+[del](,+生成电子源2)...
->的(生成电子源2,M模板)->的(生成电子源2,M代码)...

->的(_电子,能量)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"E_0\"(+[matlab],能量)...
->[]{
    []:->的(_电子,数目)->数目->+[.]\"N\"(+[matlab],数目),
    ->+[.]\"N\"(+[matlab],+[临时文本])->+[临时文本]\"100000\"
}...

->+[.]\"file_name\"(+[matlab],+[临时文本]#dir)...
->[]{
    []:->[==](,_电子)...
        ->[路径补全]\"output/spectrometer/GEANT4/G.txt\"(,+[临时文本]#dir),
    ->[路径补全](_电子,+[临时文本]#dir)
}...

->+的(电子,+设置电子源)->+[修改内容](M代码,+设置电子源)

"(,)
的#161""(生成电子源2#160,M代码#162)
M代码#162"%{
+[M函数](,设置电子源)
E_0

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('Matlab/random')
physics_constant;

% file_name=\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/paper/spectrometer/G.txt\";
% file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\spectrometer\GEANT4\G.txt\";

% N=100000;

% MeV

% MeV/c
P=E_0*ones(1,N);
Px=zeros(1,N);
Py=zeros(1,N);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#163""(生成电子源2#160,M模板#164)
M模板#164"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:...
%}

addpath('matlab\random')
physics_constant;

file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt\";

N=10000;
%角分布
%能谱

theta_range=[%角度范围];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
GTX=g_x(TX);
GTY=g_y(TY);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[%能量范围];
EN=linspace(energy_range(1),energy_range(2),100);
GEN=f(EN);

tx=random_func_1D(1,N,TX,GTX);
ty=random_func_1D(1,N,TY,GTY);
En=random_func_1D(1,N,EN,GEN);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#165""(M模板#164,保存#166)
保存#166"%{
+[M函数](,设置电子源)

#BLTrackFile VirtualDetector/IP
#x y z Px Py Pz t PDGid EventID TrackID ParentID Weight
#mm mm mm MeV/c MeV/c MeV/c ns - - - - -

保存:
%}

addpath('matlab\random')
physics_constant;

file_name=\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\paper\spectrometer\G.txt\";

N=1000000;
%角分布
%能谱

theta_range=[%角度范围];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
%GT=exp(-TX.^2/theta0^2);

% MeV
energy_range=[%能量范围];

tx=random_func_1D(1,N,TX,GT);
ty=random_func_1D(1,N,TY,GT);
En=EN0*ones(1,N);

% MeV/c
P=En;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);

n=1:N;
Data=[zeros(N,1),zeros(N,1),zeros(N,1),...
        Px',Py',Pz',zeros(N,1),...
        zeros(N,1)+11,n',...
        ones(N,1),zeros(N,1),ones(N,1)];
size(Data);

writematrix(Data,file_name,'Delimiter',' ')

%{
+[M函数](,设置电子源)
%}"(,)
的#167""(降临规则#4,磁场代码#168)
磁场代码#168"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
将'描述结构'的\"电子\"替换为\"磁场\"

\"\"\"

+磁场代码(_磁场,_凭依)->+[del](,+磁场代码)...
->的(磁场代码,描述结构)->的(磁场代码,库)...

->[]{
    []:->的(_凭依,磁场)->磁场,->+的(_凭依,+磁场)
}->的(_凭依,磁场)...

->+[code]([想],描述结构)->[想](,_磁场)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_x)->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_x,磁场)->+[code](+[做],_条目)...
        ->[]{
            []:->.\"空间点\"(+磁场代码,_空间点)->_空间点->+[.]\"空间点\"(+[做],_空间点)...
                ->.\"方向\"(+磁场代码,_方向)->_方向->+[.]\"方向\"(+[做],_方向),
            ->+[.]\"空间点\"(+[做],+[临时文本]#pt)->+[临时文本]#pt\"0,0,0\"...
                ->+[.]\"方向\"(+[做],+[临时文本]#an)->+[临时文本]#an\"0,0,0\"
        }
}


"(,)
的#169""(磁场代码#168,描述结构#170)
描述结构#170"\"\"\"


\"\"\"

+描述结构(,_磁场)->+操作(+描述结构,)...

->[]{
    []:->的(_磁场,磁场分布)->磁场分布(,)...
        ->+的(+操作,+磁场)->+磁场(,_磁场)...
        ->+生成磁场(,_磁场)->+的(+操作,+生成磁场),
    ->的(_磁场,磁场强度)->磁场强度(,)...
        ->+的(+操作,+磁场2)->+磁场2(,_磁场),
    ->[]
}


"(,)
的#171""(磁场代码#168,库#172)
库#172"
生成磁场:...
磁场:...
磁场2:...
将条目\"磁场\"复制为条目\"磁场2\"
将'磁场'的\"电子\"替换为\"磁场\"
+[新建阅读窗口](,磁场)


"(,)
的#173""(库#172,生成磁场#174)
生成磁场#174"\"\"\"
M模板:...
M代码:...
BL模板:...
BL文件:...
+[新建阅读窗口](,M代码)
+[M函数](,M代码)
创建\"文档\S应用\GEANT4\"

\"\"\"

+生成磁场(_磁场,磁场)->+[del](,+生成磁场)...
->的(生成磁场,BL模板)->的(生成磁场,BL文件)...
->的(生成磁场,M模板)->的(生成磁场,M代码)...

->的(_磁场,磁场分布)->磁场分布(,_磁场分布)...
->的(_磁场分布,表达式#1)->+[算式结构转换]\"Matlab\"(表达式#1,+[临时文本]#B)...
->的(_磁场,长度)->的(_磁场,宽度)->的(_磁场,高度)...

->+[模板文本](M模板,M代码)...
->+[.]\"磁场分布\"(+[模板文本],+[临时文本]#B)...
->+[.]\"L\"(+[模板文本],长度)->+[.]\"W\"(+[模板文本],宽度)...
->+[.]\"H\"(+[模板文本],高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[模板文本](BL模板,BL文件)...
->+[.](+[模板文本],+data)->+[o](+[matlab],+data)->+[del](,+data)...
->+[.](+[模板文本],+X0)->+[o](+[matlab],+X0)->+[del](,+X0)...
->+[.](+[模板文本],+Y0)->+[o](+[matlab],+Y0)->+[del](,+Y0)...
->+[.](+[模板文本],+Z0)->+[o](+[matlab],+Z0)->+[del](,+Z0)...

->+[.](+[模板文本],+dX)->+[o](+[matlab],+dX)->+[del](,+dX)...
->+[.](+[模板文本],+dY)->+[o](+[matlab],+dY)->+[del](,+dY)...
->+[.](+[模板文本],+dZ)->+[o](+[matlab],+dZ)->+[del](,+dZ)...

->+[.](+[模板文本],+nX)->+[o](+[matlab],+nX)->+[del](,+nX)...
->+[.](+[模板文本],+nY)->+[o](+[matlab],+nY)->+[del](,+nY)...
->+[.](+[模板文本],+nZ)->+[o](+[matlab],+nZ)->+[del](,+nZ)...

->+[保存文本]\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/spectrometer/GEANT4/B_field.txt\"(,BL文件)...

->[]{
    []:->的(_磁场,设置磁场)->设置磁场->+[修改内容](M代码,设置磁场)...
    ->[]{
        []:->的(设置磁场,BL文件#0)->BL文件#0->+[修改内容](BL文件,BL文件#0),
        ->+的(设置磁场,+BL文件)->+[修改内容](BL文件,+BL文件)
    },
    ->[]
}
"(,)
的#175""(生成磁场#174,M模板#176)
M模板#176"%{
+[M函数](,M代码)
%}

physics_constant;

L=%L*scale;
W=%W*scale;
H=%H*scale;

B_x=@(x,y,z)zeros(size(x));
B_y=@(x,y,z)zeros(size(x));
B_z=@(x,y,z)zeros(size(x));
%磁场分布

Nx=40;
Ny=40;
x=linspace(-W/2,W/2,Nx);
y=linspace(-L/2,L/2,Ny);
[X,Y]=meshgrid(x,y);

Bx1=B_x(X,Y,H/2);
Bx2=B_x(X,Y,-H/2);
By1=B_y(X,Y,H/2);
By2=B_y(X,Y,-H/2);
Bz1=B_z(X,Y,H/2);
Bz2=B_z(X,Y,-H/2);

Bx=[Bx1,Bx2];
By=[By1,By2];
Bz=[Bz1,Bz2];
Bx=reshape(Bx,numel(Bx),1);
By=reshape(By,numel(By),1);
Bz=reshape(Bz,numel(Bz),1);

x1=reshape([X,X],2*numel(X),1);
y1=reshape([Y,Y],2*numel(Y),1);
z1=reshape([zeros(size(Y))+H/2,zeros(size(Y))-H/2],2*numel(Y),1);

data=[x1,y1,z1,Bx,By,Bz];

X0=-W/2;
Y0=-L/2;
Z0=-H/2;
dX=W/(Nx-1);
dY=L/(Ny-1);
dZ=H;
nX=int64(Nx);
nY=int64(Ny);
nZ=int64(2);

figure
surf(X,Y,Bz1)
shading interp
view([0,90])
axis equal
colorbar

%{
Bz1
surf(X,Y,Bz1)
shading interp
view([0,90])
axis equal
%}

%{
+[M函数](,M代码)
%}"(,)
的#177""(生成磁场#174,M代码#178)
M代码#178"%{
+[M函数](,M代码)
%}

physics_constant;

L=1.2;
W=1.0;
H=0.8;

B_x=@(x,y,z)zeros(size(x));
B_y=@(x,y,z)zeros(size(x));
B_z=@(x,y,z)zeros(size(x));
R=10;
B_z=@(x,y,z)exp(-(x.^(2)+y.^(2))./(R.^(2)));


Nx=40;
Ny=40;
x=linspace(-W/2,W/2,Nx);
y=linspace(-L/2,L/2,Ny);
[X,Y]=meshgrid(x,y);

Bx1=B_x(X,Y,H/2);
Bx2=B_x(X,Y,-H/2);
By1=B_y(X,Y,H/2);
By2=B_y(X,Y,-H/2);
Bz1=B_z(X,Y,H/2);
Bz2=B_z(X,Y,-H/2);

Bx=[Bx1,Bx2];
By=[By1,By2];
Bz=[Bz1,Bz2];
Bx=reshape(Bx,numel(Bx),1);
By=reshape(By,numel(By),1);
Bz=reshape(Bz,numel(Bz),1);

x1=reshape([X,X],2*numel(X),1);
y1=reshape([Y,Y],2*numel(Y),1);
z1=reshape([zeros(size(Y))+H/2,zeros(size(Y))-H/2],2*numel(Y),1);

data=[x1,y1,z1,Bx,By,Bz];

X0=-W/2;
Y0=-L/2;
Z0=-H/2;
dX=W/(Nx-1);
dY=L/(Ny-1);
dZ=H;
nX=int64(Nx);
nY=int64(Ny);
nZ=int64(2);

surf(X,Y,Bz1)
shading interp
view([0,90])
axis equal

%{
+[M函数](,M代码)
%}"(,)
的#179""(生成磁场#174,BL模板#180)
BL模板#180"param normB=1.0 current=1.0
grid X0=%X0 nX=%nX dX=%dX Y0=%Y0 nY=%nY dY=%dY Z0=%Z0 nZ=%nZ dZ=%dZ

data
%data
"(,)
的#181""(生成磁场#174,BL文件#182)
BL文件#182"param normB=1.0 current=1.0
grid X0=-0.5 nX=40 dX=0.02564102564102564 Y0=-0.6 nY=40 dY=0.030769230769230767 Z0=-0.4 nZ=2 dZ=0.8

data
-0.5, -0.6, 0.4, 0.0, 0.0, 0.993918567227454;
-0.5, -0.5692307692307692, 0.4, 0.0, 0.0, 0.994276206993634;
-0.5, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9946151423208871;
-0.5, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9949353539956358;
-0.5, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9952368238616918;
-0.5, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9955195348219712;
-0.5, -0.41538461538461535, 0.4, 0.0, 0.0, 0.995783470840111;
-0.5, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9960286169419849;
-0.5, -0.35384615384615387, 0.4, 0.0, 0.0, 0.996254959217119;
-0.5, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9964624848200082;
-0.5, -0.29230769230769227, 0.4, 0.0, 0.0, 0.99665118197133;
-0.5, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9968210399590597;
-0.5, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9969720491394837;
-0.5, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9971042009381119;
-0.5, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9972174878504894;
-0.5, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9973119034429061;
-0.5, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9973874423530066;
-0.5, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9974441002902973;
-0.5, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9974818740365522;
-0.5, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9975007614461183;
-0.5, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9975007614461183;
-0.5, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9974818740365522;
-0.5, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9974441002902973;
-0.5, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9973874423530066;
-0.5, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9973119034429061;
-0.5, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9972174878504894;
-0.5, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9971042009381119;
-0.5, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9969720491394837;
-0.5, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9968210399590597;
-0.5, 0.29230769230769227, 0.4, 0.0, 0.0, 0.99665118197133;
-0.5, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9964624848200082;
-0.5, 0.35384615384615387, 0.4, 0.0, 0.0, 0.996254959217119;
-0.5, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9960286169419849;
-0.5, 0.41538461538461535, 0.4, 0.0, 0.0, 0.995783470840111;
-0.5, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9955195348219712;
-0.5, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9952368238616918;
-0.5, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9949353539956358;
-0.5, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9946151423208871;
-0.5, 0.5692307692307692, 0.4, 0.0, 0.0, 0.994276206993634;
-0.5, 0.6, 0.4, 0.0, 0.0, 0.993918567227454;
-0.47435897435897434, -0.6, 0.4, 0.0, 0.0, 0.9941669145250005;
-0.47435897435897434, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9945246436535008;
-0.47435897435897434, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9948636636694551;
-0.47435897435897434, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9951839553544851;
-0.47435897435897434, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9954855005478657;
-0.47435897435897434, -0.4461538461538462, 0.4, 0.0, 0.0, 0.995768282148241;
-0.47435897435897434, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9960322841152413;
-0.47435897435897434, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9962774914709983;
-0.47435897435897434, -0.35384615384615387, 0.4, 0.0, 0.0, 0.996503890301563;
-0.47435897435897434, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9967114677582198;
-0.47435897435897434, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9969002120587037;
-0.47435897435897434, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9970701124883131;
-0.47435897435897434, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9972211594009248;
-0.47435897435897434, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9973533442199062;
-0.47435897435897434, -0.1692307692307692, 0.4, 0.0, 0.0, 0.997466659438927;
-0.47435897435897434, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9975610986226701;
-0.47435897435897434, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9976366564074398;
-0.47435897435897434, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9976933285016705;
-0.47435897435897434, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9977311116863322;
-0.47435897435897434, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9977500038152358;
-0.47435897435897434, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9977500038152358;
-0.47435897435897434, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9977311116863322;
-0.47435897435897434, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9976933285016705;
-0.47435897435897434, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9976366564074398;
-0.47435897435897434, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9975610986226701;
-0.47435897435897434, 0.1692307692307692, 0.4, 0.0, 0.0, 0.997466659438927;
-0.47435897435897434, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9973533442199062;
-0.47435897435897434, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9972211594009248;
-0.47435897435897434, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9970701124883131;
-0.47435897435897434, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9969002120587037;
-0.47435897435897434, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9967114677582198;
-0.47435897435897434, 0.35384615384615387, 0.4, 0.0, 0.0, 0.996503890301563;
-0.47435897435897434, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9962774914709983;
-0.47435897435897434, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9960322841152413;
-0.47435897435897434, 0.4461538461538462, 0.4, 0.0, 0.0, 0.995768282148241;
-0.47435897435897434, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9954855005478657;
-0.47435897435897434, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9951839553544851;
-0.47435897435897434, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9948636636694551;
-0.47435897435897434, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9945246436535008;
-0.47435897435897434, 0.6, 0.4, 0.0, 0.0, 0.9941669145250005;
-0.44871794871794873, -0.6, 0.4, 0.0, 0.0, 0.9944022481526211;
-0.44871794871794873, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9947600619607585;
-0.44871794871794873, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9950991622276335;
-0.44871794871794873, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9954195297303184;
-0.44871794871794873, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9957211463037894;
-0.44871794871794873, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9960039948426426;
-0.44871794871794873, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9962680593027107;
-0.44871794871794873, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9965133247025806;
-0.44871794871794873, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9967397771250093;
-0.44871794871794873, -0.32307692307692304, 0.4, 0.0, 0.0, 0.99694740371824;
-0.44871794871794873, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9971361926972182;
-0.44871794871794873, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9973061333447063;
-0.44871794871794873, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9974572160122978;
-0.44871794871794873, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9975894321213296;
-0.44871794871794873, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9977027741636949;
-0.44871794871794873, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9977972357025529;
-0.44871794871794873, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9978728113729386;
-0.44871794871794873, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9979294968822702;
-0.44871794871794873, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9979672890107559;
-0.44871794871794873, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9979861856116986;
-0.44871794871794873, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9979861856116986;
-0.44871794871794873, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9979672890107559;
-0.44871794871794873, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9979294968822702;
-0.44871794871794873, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9978728113729386;
-0.44871794871794873, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9977972357025529;
-0.44871794871794873, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9977027741636949;
-0.44871794871794873, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9975894321213296;
-0.44871794871794873, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9974572160122978;
-0.44871794871794873, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9973061333447063;
-0.44871794871794873, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9971361926972182;
-0.44871794871794873, 0.32307692307692304, 0.4, 0.0, 0.0, 0.99694740371824;
-0.44871794871794873, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9967397771250093;
-0.44871794871794873, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9965133247025806;
-0.44871794871794873, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9962680593027107;
-0.44871794871794873, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9960039948426426;
-0.44871794871794873, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9957211463037894;
-0.44871794871794873, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9954195297303184;
-0.44871794871794873, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9950991622276335;
-0.44871794871794873, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9947600619607585;
-0.44871794871794873, 0.6, 0.4, 0.0, 0.0, 0.9944022481526211;
-0.4230769230769231, -0.6, 0.4, 0.0, 0.0, 0.9946245588401824;
-0.4230769230769231, -0.5692307692307692, 0.4, 0.0, 0.0, 0.994982452641938;
-0.4230769230769231, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9953216287187918;
-0.4230769230769231, -0.5076923076923077, 0.4, 0.0, 0.0, 0.995642067843519;
-0.4230769230769231, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9959437518470345;
-0.4230769230769231, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9962266636201103;
-0.4230769230769231, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9964907871149923;
-0.4230769230769231, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9967361073469182;
-0.4230769230769231, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9969626103955334;
-0.4230769230769231, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9971702834062081;
-0.4230769230769231, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9973591145912531;
-0.4230769230769231, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9975290932310349;
-0.4230769230769231, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9976802096749897;
-0.4230769230769231, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9978124553425369;
-0.4230769230769231, -0.1692307692307692, 0.4, 0.0, 0.0, 0.997925822723891;
-0.4230769230769231, -0.13846153846153847, 0.4, 0.0, 0.0, 0.998020305380772;
-0.4230769230769231, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9980958979470158;
-0.4230769230769231, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9981525961290808;
-0.4230769230769231, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9981903967064554;
-0.4230769230769231, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9982092975319624;
-0.4230769230769231, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9982092975319624;
-0.4230769230769231, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9981903967064554;
-0.4230769230769231, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9981525961290808;
-0.4230769230769231, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9980958979470158;
-0.4230769230769231, 0.13846153846153847, 0.4, 0.0, 0.0, 0.998020305380772;
-0.4230769230769231, 0.1692307692307692, 0.4, 0.0, 0.0, 0.997925822723891;
-0.4230769230769231, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9978124553425369;
-0.4230769230769231, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9976802096749897;
-0.4230769230769231, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9975290932310349;
-0.4230769230769231, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9973591145912531;
-0.4230769230769231, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9971702834062081;
-0.4230769230769231, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9969626103955334;
-0.4230769230769231, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9967361073469182;
-0.4230769230769231, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9964907871149923;
-0.4230769230769231, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9962266636201103;
-0.4230769230769231, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9959437518470345;
-0.4230769230769231, 0.5076923076923077, 0.4, 0.0, 0.0, 0.995642067843519;
-0.4230769230769231, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9953216287187918;
-0.4230769230769231, 0.5692307692307692, 0.4, 0.0, 0.0, 0.994982452641938;
-0.4230769230769231, 0.6, 0.4, 0.0, 0.0, 0.9946245588401824;
-0.3974358974358974, -0.6, 0.4, 0.0, 0.0, 0.9948338378291982;
-0.3974358974358974, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9951918069354013;
-0.3974358974358974, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9955310543783057;
-0.3974358974358974, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9958515609266406;
-0.3974358974358974, -0.4769230769230769, 0.4, 0.0, 0.0, 0.996153308407498;
-0.3974358974358974, -0.4461538461538462, 0.4, 0.0, 0.0, 0.99643627970805;
-0.3974358974358974, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9967004587771662;
-0.3974358974358974, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9969458306269308;
-0.3974358974358974, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9971723813340605;
-0.3974358974358974, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9973800980412209;
-0.3974358974358974, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9975689689582423;
-0.3974358974358974, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9977389833632357;
-0.3974358974358974, -0.23076923076923078, 0.4, 0.0, 0.0, 0.997890131603607;
-0.3974358974358974, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9980224050969698;
-0.3974358974358974, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9981357963319586;
-0.3974358974358974, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9982302988689389;
-0.3974358974358974, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9983059073406172;
-0.3974358974358974, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9983626174525487;
-0.3974358974358974, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9984004259835442;
-0.3974358974358974, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9984193307859746;
-0.3974358974358974, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9984193307859746;
-0.3974358974358974, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9984004259835442;
-0.3974358974358974, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9983626174525487;
-0.3974358974358974, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9983059073406172;
-0.3974358974358974, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9982302988689389;
-0.3974358974358974, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9981357963319586;
-0.3974358974358974, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9980224050969698;
-0.3974358974358974, 0.23076923076923078, 0.4, 0.0, 0.0, 0.997890131603607;
-0.3974358974358974, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9977389833632357;
-0.3974358974358974, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9975689689582423;
-0.3974358974358974, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9973800980412209;
-0.3974358974358974, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9971723813340605;
-0.3974358974358974, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9969458306269308;
-0.3974358974358974, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9967004587771662;
-0.3974358974358974, 0.4461538461538462, 0.4, 0.0, 0.0, 0.99643627970805;
-0.3974358974358974, 0.4769230769230769, 0.4, 0.0, 0.0, 0.996153308407498;
-0.3974358974358974, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9958515609266406;
-0.3974358974358974, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9955310543783057;
-0.3974358974358974, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9951918069354013;
-0.3974358974358974, 0.6, 0.4, 0.0, 0.0, 0.9948338378291982;
-0.3717948717948718, -0.6, 0.4, 0.0, 0.0, 0.9950300768734045;
-0.3717948717948718, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9953881165919175;
-0.3717948717948718, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9957274309541319;
-0.3717948717948718, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9960480007249832;
-0.3717948717948718, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9963498077279789;
-0.3717948717948718, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9966328348469153;
-0.3717948717948718, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9968970660274957;
-0.3717948717948718, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997142486278848;
-0.3717948717948718, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9973690816749424;
-0.3717948717948718, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9975768393559082;
-0.3717948717948718, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9977657475292501;
-0.3717948717948718, -0.26153846153846155, 0.4, 0.0, 0.0, 0.997935795470964;
-0.3717948717948718, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9980869735265516;
-0.3717948717948718, -0.19999999999999998, 0.4, 0.0, 0.0, 0.998219273111934;
-0.3717948717948718, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9983326867142637;
-0.3717948717948718, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9984272078926361;
-0.3717948717948718, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9985028312786987;
-0.3717948717948718, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9985595525771598;
-0.3717948717948718, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9985973685661946;
-0.3717948717948718, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9986162770977507;
-0.3717948717948718, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9986162770977507;
-0.3717948717948718, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9985973685661946;
-0.3717948717948718, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9985595525771598;
-0.3717948717948718, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9985028312786987;
-0.3717948717948718, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9984272078926361;
-0.3717948717948718, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9983326867142637;
-0.3717948717948718, 0.19999999999999998, 0.4, 0.0, 0.0, 0.998219273111934;
-0.3717948717948718, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9980869735265516;
-0.3717948717948718, 0.26153846153846155, 0.4, 0.0, 0.0, 0.997935795470964;
-0.3717948717948718, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9977657475292501;
-0.3717948717948718, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9975768393559082;
-0.3717948717948718, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9973690816749424;
-0.3717948717948718, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997142486278848;
-0.3717948717948718, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9968970660274957;
-0.3717948717948718, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9966328348469153;
-0.3717948717948718, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9963498077279789;
-0.3717948717948718, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9960480007249832;
-0.3717948717948718, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9957274309541319;
-0.3717948717948718, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9953881165919175;
-0.3717948717948718, 0.6, 0.4, 0.0, 0.0, 0.9950300768734045;
-0.34615384615384615, -0.6, 0.4, 0.0, 0.0, 0.9952132682393011;
-0.34615384615384615, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9955713738752037;
-0.34615384615384615, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9959107507073502;
-0.34615384615384615, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9962313794971354;
-0.34615384615384615, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9965332420647199;
-0.34615384615384615, -0.4461538461538462, 0.4, 0.0, 0.0, 0.996816321290749;
-0.34615384615384615, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9970806011179704;
-0.34615384615384615, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997326066552752;
-0.34615384615384615, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9975527036665001;
-0.34615384615384615, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9977604995969762;
-0.34615384615384615, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9979494425495143;
-0.34615384615384615, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9981195217981359;
-0.34615384615384615, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9982707276865651;
-0.34615384615384615, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9984030516291427;
-0.34615384615384615, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9985164861116379;
-0.34615384615384615, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9986110246919603;
-0.34615384615384615, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9986866620007694;
-0.34615384615384615, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9987433937419823;
-0.34615384615384615, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9987812166931813;
-0.34615384615384615, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9988001287059182;
-0.34615384615384615, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9988001287059182;
-0.34615384615384615, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9987812166931813;
-0.34615384615384615, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9987433937419823;
-0.34615384615384615, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9986866620007694;
-0.34615384615384615, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9986110246919603;
-0.34615384615384615, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9985164861116379;
-0.34615384615384615, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9984030516291427;
-0.34615384615384615, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9982707276865651;
-0.34615384615384615, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9981195217981359;
-0.34615384615384615, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9979494425495143;
-0.34615384615384615, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9977604995969762;
-0.34615384615384615, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9975527036665001;
-0.34615384615384615, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997326066552752;
-0.34615384615384615, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9970806011179704;
-0.34615384615384615, 0.4461538461538462, 0.4, 0.0, 0.0, 0.996816321290749;
-0.34615384615384615, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9965332420647199;
-0.34615384615384615, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9962313794971354;
-0.34615384615384615, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9959107507073502;
-0.34615384615384615, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9955713738752037;
-0.34615384615384615, 0.6, 0.4, 0.0, 0.0, 0.9952132682393011;
-0.32051282051282054, -0.6, 0.4, 0.0, 0.0, 0.9953834047066601;
-0.32051282051282054, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9957415715624335;
-0.32051282051282054, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9960810064126724;
-0.32051282051282054, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9964016900154824;
-0.32051282051282054, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9967036041879164;
-0.32051282051282054, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9969867318076929;
-0.32051282051282054, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9972510568148145;
-0.32051282051282054, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997496564213086;
-0.32051282051282054, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9977232400715325;
-0.32051282051282054, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9979310715257167;
-0.32051282051282054, -0.29230769230769227, 0.4, 0.0, 0.0, 0.998120046778956;
-0.32051282051282054, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9982901551034385;
-0.32051282051282054, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9984413868412374;
-0.32051282051282054, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9985737334052257;
-0.32051282051282054, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9986871872798881;
-0.32051282051282054, -0.13846153846153847, 0.4, 0.0, 0.0, 0.998781742022033;
-0.32051282051282054, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9988573922614017;
-0.32051282051282054, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9989141337011771;
-0.32051282051282054, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9989519631183904;
-0.32051282051282054, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9989708783642264;
-0.32051282051282054, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9989708783642264;
-0.32051282051282054, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9989519631183904;
-0.32051282051282054, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9989141337011771;
-0.32051282051282054, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9988573922614017;
-0.32051282051282054, 0.13846153846153847, 0.4, 0.0, 0.0, 0.998781742022033;
-0.32051282051282054, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9986871872798881;
-0.32051282051282054, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9985737334052257;
-0.32051282051282054, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9984413868412374;
-0.32051282051282054, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9982901551034385;
-0.32051282051282054, 0.29230769230769227, 0.4, 0.0, 0.0, 0.998120046778956;
-0.32051282051282054, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9979310715257167;
-0.32051282051282054, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9977232400715325;
-0.32051282051282054, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997496564213086;
-0.32051282051282054, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9972510568148145;
-0.32051282051282054, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9969867318076929;
-0.32051282051282054, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9967036041879164;
-0.32051282051282054, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9964016900154824;
-0.32051282051282054, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9960810064126724;
-0.32051282051282054, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9957415715624335;
-0.32051282051282054, 0.6, 0.4, 0.0, 0.0, 0.9953834047066601;
-0.2948717948717949, -0.6, 0.4, 0.0, 0.0, 0.9955404795689989;
-0.2948717948717949, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9958987029447116;
-0.2948717948717949, -0.5384615384615384, 0.4, 0.0, 0.0, 0.996238191358916;
-0.2948717948717949, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9965589255666814;
-0.2948717948717949, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9968608873821913;
-0.2948717948717949, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9971440596804622;
-0.2948717948717949, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9974084263989624;
-0.2948717948717949, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9976539725391304;
-0.2948717948717949, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9978806841677927;
-0.2948717948717949, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9980885484184822;
-0.2948717948717949, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9982775534926547;
-0.2948717948717949, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9984476886608051;
-0.2948717948717949, -0.23076923076923078, 0.4, 0.0, 0.0, 0.998598944263483;
-0.2948717948717949, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9987313117122059;
-0.2948717948717949, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9988447834902728;
-0.2948717948717949, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9989393531534753;
-0.2948717948717949, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9990150153307071;
-0.2948717948717949, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9990717657244733;
-0.2948717948717949, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9991096011112964;
-0.2948717948717949, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9991285193420221;
-0.2948717948717949, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9991285193420221;
-0.2948717948717949, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9991096011112964;
-0.2948717948717949, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9990717657244733;
-0.2948717948717949, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9990150153307071;
-0.2948717948717949, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9989393531534753;
-0.2948717948717949, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9988447834902728;
-0.2948717948717949, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9987313117122059;
-0.2948717948717949, 0.23076923076923078, 0.4, 0.0, 0.0, 0.998598944263483;
-0.2948717948717949, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9984476886608051;
-0.2948717948717949, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9982775534926547;
-0.2948717948717949, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9980885484184822;
-0.2948717948717949, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9978806841677927;
-0.2948717948717949, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9976539725391304;
-0.2948717948717949, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9974084263989624;
-0.2948717948717949, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9971440596804622;
-0.2948717948717949, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9968608873821913;
-0.2948717948717949, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9965589255666814;
-0.2948717948717949, 0.5384615384615384, 0.4, 0.0, 0.0, 0.996238191358916;
-0.2948717948717949, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9958987029447116;
-0.2948717948717949, 0.6, 0.4, 0.0, 0.0, 0.9955404795689989;
-0.2692307692307692, -0.6, 0.4, 0.0, 0.0, 0.9956844866340222;
-0.2692307692307692, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9960427618275143;
-0.2692307692307692, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9963822993494458;
-0.2692307692307692, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9967030799521021;
-0.2692307692307692, -0.4769230769230769, 0.4, 0.0, 0.0, 0.997005085447036;
-0.2692307692307692, -0.4461538461538462, 0.4, 0.0, 0.0, 0.997288298706787;
-0.2692307692307692, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9975527036665001;
-0.2692307692307692, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9977982853254437;
-0.2692307692307692, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9980250297484291;
-0.2692307692307692, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9982329240671282;
-0.2692307692307692, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9984219564812898;
-0.2692307692307692, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9985921162598572;
-0.2692307692307692, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9987433937419823;
-0.2692307692307692, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9988757803379406;
-0.2692307692307692, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9989892685299435;
-0.2692307692307692, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9990838518728504;
-0.2692307692307692, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9991595249947786;
-0.2692307692307692, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9992162835976108;
-0.2692307692307692, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9992541244574038;
-0.2692307692307692, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9992730454246921;
-0.2692307692307692, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9992730454246921;
-0.2692307692307692, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9992541244574038;
-0.2692307692307692, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9992162835976108;
-0.2692307692307692, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9991595249947786;
-0.2692307692307692, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9990838518728504;
-0.2692307692307692, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9989892685299435;
-0.2692307692307692, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9988757803379406;
-0.2692307692307692, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9987433937419823;
-0.2692307692307692, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9985921162598572;
-0.2692307692307692, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9984219564812898;
-0.2692307692307692, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9982329240671282;
-0.2692307692307692, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9980250297484291;
-0.2692307692307692, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9977982853254437;
-0.2692307692307692, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9975527036665001;
-0.2692307692307692, 0.4461538461538462, 0.4, 0.0, 0.0, 0.997288298706787;
-0.2692307692307692, 0.4769230769230769, 0.4, 0.0, 0.0, 0.997005085447036;
-0.2692307692307692, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9967030799521021;
-0.2692307692307692, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9963822993494458;
-0.2692307692307692, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9960427618275143;
-0.2692307692307692, 0.6, 0.4, 0.0, 0.0, 0.9956844866340222;
-0.24358974358974358, -0.6, 0.4, 0.0, 0.0, 0.995815420224028;
-0.24358974358974358, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9961737425310967;
-0.24358974358974358, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9965133247025806;
-0.24358974358974358, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9968341474882341;
-0.24358974358974358, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9971361926972182;
-0.24358974358974358, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9974194431998201;
-0.24358974358974358, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9976838829290721;
-0.24358974358974358, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9979294968822702;
-0.24358974358974358, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9981562711223932;
-0.24358974358974358, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9983641927794208;
-0.24358974358974358, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9985532500515499;
-0.24358974358974358, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9987234322063128;
-0.24358974358974358, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9988747295815907;
-0.24358974358974358, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9990071335865299;
-0.24358974358974358, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9991206367023533;
-0.24358974358974358, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9992152324830725;
-0.24358974358974358, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9992909155560982;
-0.24358974358974358, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9993476816227483;
-0.24358974358974358, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9993855274586554;
-0.24358974358974358, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9994044509140714;
-0.24358974358974358, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9994044509140714;
-0.24358974358974358, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9993855274586554;
-0.24358974358974358, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9993476816227483;
-0.24358974358974358, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9992909155560982;
-0.24358974358974358, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9992152324830725;
-0.24358974358974358, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9991206367023533;
-0.24358974358974358, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9990071335865299;
-0.24358974358974358, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9988747295815907;
-0.24358974358974358, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9987234322063128;
-0.24358974358974358, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9985532500515499;
-0.24358974358974358, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9983641927794208;
-0.24358974358974358, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9981562711223932;
-0.24358974358974358, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9979294968822702;
-0.24358974358974358, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9976838829290721;
-0.24358974358974358, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9974194431998201;
-0.24358974358974358, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9971361926972182;
-0.24358974358974358, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9968341474882341;
-0.24358974358974358, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9965133247025806;
-0.24358974358974358, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9961737425310967;
-0.24358974358974358, 0.6, 0.4, 0.0, 0.0, 0.995815420224028;
-0.21794871794871795, -0.6, 0.4, 0.0, 0.0, 0.995933275176281;
-0.21794871794871795, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9962916398908658;
-0.21794871794871795, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9966312622519669;
-0.21794871794871795, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9969521230070606;
-0.21794871794871795, -0.4769230769230769, 0.4, 0.0, 0.0, 0.997254203963155;
-0.21794871794871795, -0.4461538461538462, 0.4, 0.0, 0.0, 0.99753748798851;
-0.21794871794871795, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9978019590142564;
-0.21794871794871795, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9980476020359145;
-0.21794871794871795, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9982744031148139;
-0.21794871794871795, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9984823493794106;
-0.21794871794871795, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9986714290265054;
-0.21794871794871795, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9988416313223599;
-0.21794871794871795, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9989929466037123;
-0.21794871794871795, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9991253662786918;
-0.21794871794871795, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9992388828276313;
-0.21794871794871795, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9993334898037799;
-0.21794871794871795, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9994091818339121;
-0.21794871794871795, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9994659546188376;
-0.21794871794871795, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9995038049338069;
-0.21794871794871795, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9995227306288175;
-0.21794871794871795, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9995227306288175;
-0.21794871794871795, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9995038049338069;
-0.21794871794871795, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9994659546188376;
-0.21794871794871795, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9994091818339121;
-0.21794871794871795, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9993334898037799;
-0.21794871794871795, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9992388828276313;
-0.21794871794871795, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9991253662786918;
-0.21794871794871795, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9989929466037123;
-0.21794871794871795, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9988416313223599;
-0.21794871794871795, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9986714290265054;
-0.21794871794871795, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9984823493794106;
-0.21794871794871795, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9982744031148139;
-0.21794871794871795, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9980476020359145;
-0.21794871794871795, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9978019590142564;
-0.21794871794871795, 0.4461538461538462, 0.4, 0.0, 0.0, 0.99753748798851;
-0.21794871794871795, 0.4769230769230769, 0.4, 0.0, 0.0, 0.997254203963155;
-0.21794871794871795, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9969521230070606;
-0.21794871794871795, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9966312622519669;
-0.21794871794871795, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9962916398908658;
-0.21794871794871795, 0.6, 0.4, 0.0, 0.0, 0.995933275176281;
-0.19230769230769232, -0.6, 0.4, 0.0, 0.0, 0.9960380468433517;
-0.19230769230769232, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9963964492577196;
-0.19230769230769232, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9967361073469182;
-0.19230769230769232, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9970570018563978;
-0.19230769230769232, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9973591145912531;
-0.19230769230769232, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9976424284179416;
-0.19230769230769232, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9979069272659035;
-0.19230769230769232, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9981525961290808;
-0.19230769230769232, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9983794210673367;
-0.19230769230769232, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9985873892077732;
-0.19230769230769232, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9987764887459495;
-0.19230769230769232, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9989467089469978;
-0.19230769230769232, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9990980401466397;
-0.19230769230769232, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9992304737521007;
-0.19230769230769232, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9993440022429226;
-0.19230769230769232, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9994386191716763;
-0.19230769230769232, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9995143191645712;
-0.19230769230769232, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9995710979219643;
-0.19230769230769232, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9996089522187672;
-0.19230769230769232, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9996278799047512;
-0.19230769230769232, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9996278799047512;
-0.19230769230769232, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9996089522187672;
-0.19230769230769232, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9995710979219643;
-0.19230769230769232, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9995143191645712;
-0.19230769230769232, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9994386191716763;
-0.19230769230769232, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9993440022429226;
-0.19230769230769232, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9992304737521007;
-0.19230769230769232, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9990980401466397;
-0.19230769230769232, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9989467089469978;
-0.19230769230769232, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9987764887459495;
-0.19230769230769232, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9985873892077732;
-0.19230769230769232, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9983794210673367;
-0.19230769230769232, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9981525961290808;
-0.19230769230769232, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9979069272659035;
-0.19230769230769232, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9976424284179416;
-0.19230769230769232, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9973591145912531;
-0.19230769230769232, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9970570018563978;
-0.19230769230769232, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9967361073469182;
-0.19230769230769232, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9963964492577196;
-0.19230769230769232, 0.6, 0.4, 0.0, 0.0, 0.9960380468433517;
-0.16666666666666666, -0.6, 0.4, 0.0, 0.0, 0.9961297310934222;
-0.16666666666666666, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9964881664983538;
-0.16666666666666666, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9968278558527206;
-0.16666666666666666, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9971487799002009;
-0.16666666666666666, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9974509204442142;
-0.16666666666666666, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9977342603496412;
-0.16666666666666666, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9979987835444426;
-0.16666666666666666, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9982444750211793;
-0.16666666666666666, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9984713208384312;
-0.16666666666666666, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9986793081221154;
-0.16666666666666666, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9988684250667044;
-0.16666666666666666, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9990386609363423;
-0.16666666666666666, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9991900060658614;
-0.16666666666666666, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9993224518616958;
-0.16666666666666666, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9994359908026954;
-0.16666666666666666, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9995306164408375;
-0.16666666666666666, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9996063234018367;
-0.16666666666666666, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9996631073856544;
-0.16666666666666666, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9997009651669054;
-0.16666666666666666, -0.015384615384615384, 0.4, 0.0, 0.0, 0.999719894595163;
-0.16666666666666666, 0.015384615384615384, 0.4, 0.0, 0.0, 0.999719894595163;
-0.16666666666666666, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9997009651669054;
-0.16666666666666666, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9996631073856544;
-0.16666666666666666, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9996063234018367;
-0.16666666666666666, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9995306164408375;
-0.16666666666666666, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9994359908026954;
-0.16666666666666666, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9993224518616958;
-0.16666666666666666, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9991900060658614;
-0.16666666666666666, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9990386609363423;
-0.16666666666666666, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9988684250667044;
-0.16666666666666666, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9986793081221154;
-0.16666666666666666, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9984713208384312;
-0.16666666666666666, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9982444750211793;
-0.16666666666666666, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9979987835444426;
-0.16666666666666666, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9977342603496412;
-0.16666666666666666, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9974509204442142;
-0.16666666666666666, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9971487799002009;
-0.16666666666666666, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9968278558527206;
-0.16666666666666666, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9964881664983538;
-0.16666666666666666, 0.6, 0.4, 0.0, 0.0, 0.9961297310934222;
-0.14102564102564102, -0.6, 0.4, 0.0, 0.0, 0.9962083243105572;
-0.14102564102564102, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9965667879955317;
-0.14102564102564102, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9969065041509048;
-0.14102564102564102, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9972274535188353;
-0.14102564102564102, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9975296179013073;
-0.14102564102564102, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9978129801618493;
-0.14102564102564102, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9980775242271541;
-0.14102564102564102, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9983232350885984;
-0.14102564102564102, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9985500988036622;
-0.14102564102564102, -0.32307692307692304, 0.4, 0.0, 0.0, 0.998758102497247;
-0.14102564102564102, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9989472343628935;
-0.14102564102564102, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9991174836638991;
-0.14102564102564102, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9992688407343333;
-0.14102564102564102, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9994012969799524;
-0.14102564102564102, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9995148448790128;
-0.14102564102564102, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9996094779829829;
-0.14102564102564102, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9996851909171536;
-0.14102564102564102, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9997419793811468;
-0.14102564102564102, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9997798401493228;
-0.14102564102564102, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9997987710710852;
-0.14102564102564102, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9997987710710852;
-0.14102564102564102, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9997798401493228;
-0.14102564102564102, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9997419793811468;
-0.14102564102564102, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9996851909171536;
-0.14102564102564102, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9996094779829829;
-0.14102564102564102, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9995148448790128;
-0.14102564102564102, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9994012969799524;
-0.14102564102564102, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9992688407343333;
-0.14102564102564102, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9991174836638991;
-0.14102564102564102, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9989472343628935;
-0.14102564102564102, 0.32307692307692304, 0.4, 0.0, 0.0, 0.998758102497247;
-0.14102564102564102, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9985500988036622;
-0.14102564102564102, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9983232350885984;
-0.14102564102564102, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9980775242271541;
-0.14102564102564102, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9978129801618493;
-0.14102564102564102, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9975296179013073;
-0.14102564102564102, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9972274535188353;
-0.14102564102564102, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9969065041509048;
-0.14102564102564102, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9965667879955317;
-0.14102564102564102, 0.6, 0.4, 0.0, 0.0, 0.9962083243105572;
-0.11538461538461539, -0.6, 0.4, 0.0, 0.0, 0.996273823394942;
-0.11538461538461539, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9966323106483235;
-0.11538461538461539, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9969720491394837;
-0.11538461538461539, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9972930196093156;
-0.11538461538461539, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9975952038586066;
-0.11538461538461539, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9978785847497583;
-0.11538461538461539, -0.41538461538461535, 0.4, 0.0, 0.0, 0.998143146208407;
-0.11538461538461539, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9983888732249427;
-0.11538461538461539, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9986157518559284;
-0.11538461538461539, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9988237692254193;
-0.11538461538461539, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9990129135261797;
-0.11538461538461539, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9991831740208013;
-0.11538461538461539, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9993345410427178;
-0.11538461538461539, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9994670059971206;
-0.11538461538461539, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9995805613617715;
-0.11538461538461539, -0.13846153846153847, 0.4, 0.0, 0.0, 0.999675200687715;
-0.11538461538461539, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9997509185998885;
-0.11538461538461539, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998077107976313;
-0.11538461538461539, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9998455740550914;
-0.11538461538461539, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9998645062215313;
-0.11538461538461539, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9998645062215313;
-0.11538461538461539, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9998455740550914;
-0.11538461538461539, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998077107976313;
-0.11538461538461539, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9997509185998885;
-0.11538461538461539, 0.13846153846153847, 0.4, 0.0, 0.0, 0.999675200687715;
-0.11538461538461539, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9995805613617715;
-0.11538461538461539, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9994670059971206;
-0.11538461538461539, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9993345410427178;
-0.11538461538461539, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9991831740208013;
-0.11538461538461539, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9990129135261797;
-0.11538461538461539, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9988237692254193;
-0.11538461538461539, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9986157518559284;
-0.11538461538461539, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9983888732249427;
-0.11538461538461539, 0.41538461538461535, 0.4, 0.0, 0.0, 0.998143146208407;
-0.11538461538461539, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9978785847497583;
-0.11538461538461539, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9975952038586066;
-0.11538461538461539, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9972930196093156;
-0.11538461538461539, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9969720491394837;
-0.11538461538461539, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9966323106483235;
-0.11538461538461539, 0.6, 0.4, 0.0, 0.0, 0.996273823394942;
-0.08974358974358974, -0.6, 0.4, 0.0, 0.0, 0.9963262257630866;
-0.08974358974358974, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9966847318723093;
-0.08974358974358974, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9970244882331566;
-0.08974358974358974, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9973454755855086;
-0.08974358974358974, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9976476757291951;
-0.08974358974358974, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979310715257167;
-0.08974358974358974, -0.41538461538461535, 0.4, 0.0, 0.0, 0.998195646899864;
-0.08974358974358974, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9984413868412374;
-0.08974358974358974, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9986682774056669;
-0.08974358974358974, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9988763057165299;
-0.08974358974358974, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9990654599659702;
-0.08974358974358974, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9992357294160144;
-0.08974358974358974, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9993871043995878;
-0.08974358974358974, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995195763214298;
-0.08974358974358974, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996331376589066;
-0.08974358974358974, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997277819627233;
-0.08974358974358974, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998035038575347;
-0.08974358974358974, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998602990424539;
-0.08974358974358974, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9998981642914593;
-0.08974358974358974, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999170974537;
-0.08974358974358974, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999170974537;
-0.08974358974358974, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9998981642914593;
-0.08974358974358974, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998602990424539;
-0.08974358974358974, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998035038575347;
-0.08974358974358974, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997277819627233;
-0.08974358974358974, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996331376589066;
-0.08974358974358974, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995195763214298;
-0.08974358974358974, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9993871043995878;
-0.08974358974358974, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9992357294160144;
-0.08974358974358974, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9990654599659702;
-0.08974358974358974, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9988763057165299;
-0.08974358974358974, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9986682774056669;
-0.08974358974358974, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9984413868412374;
-0.08974358974358974, 0.41538461538461535, 0.4, 0.0, 0.0, 0.998195646899864;
-0.08974358974358974, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979310715257167;
-0.08974358974358974, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9976476757291951;
-0.08974358974358974, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9973454755855086;
-0.08974358974358974, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9970244882331566;
-0.08974358974358974, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9966847318723093;
-0.08974358974358974, 0.6, 0.4, 0.0, 0.0, 0.9963262257630866;
-0.0641025641025641, -0.6, 0.4, 0.0, 0.0, 0.9963655293479949;
-0.0641025641025641, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9967240495997494;
-0.0641025641025641, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9970638193634789;
-0.0641025641025641, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9973848193783035;
-0.0641025641025641, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9976870314433354;
-0.0641025641025641, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979704384193988;
-0.0641025641025641, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982350242306504;
-0.0641025641025641, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9984807738660983;
-0.0641025641025641, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987076733810224;
-0.0641025641025641, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9989157098982923;
-0.0641025641025641, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991048716095858;
-0.0641025641025641, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9992751477765061;
-0.0641025641025641, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994265287315971;
-0.0641025641025641, -0.19999999999999998, 0.4, 0.0, 0.0, 0.999559005879259;
-0.0641025641025641, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996725716965613;
-0.0641025641025641, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997672197339548;
-0.0641025641025641, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998429446158822;
-0.0641025641025641, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998997420412867;
-0.0641025641025641, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999376087840197;
-0.0641025641025641, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999565426931456;
-0.0641025641025641, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999565426931456;
-0.0641025641025641, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999376087840197;
-0.0641025641025641, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998997420412867;
-0.0641025641025641, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998429446158822;
-0.0641025641025641, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997672197339548;
-0.0641025641025641, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996725716965613;
-0.0641025641025641, 0.19999999999999998, 0.4, 0.0, 0.0, 0.999559005879259;
-0.0641025641025641, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994265287315971;
-0.0641025641025641, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9992751477765061;
-0.0641025641025641, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991048716095858;
-0.0641025641025641, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9989157098982923;
-0.0641025641025641, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987076733810224;
-0.0641025641025641, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9984807738660983;
-0.0641025641025641, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982350242306504;
-0.0641025641025641, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979704384193988;
-0.0641025641025641, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9976870314433354;
-0.0641025641025641, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9973848193783035;
-0.0641025641025641, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9970638193634789;
-0.0641025641025641, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9967240495997494;
-0.0641025641025641, 0.6, 0.4, 0.0, 0.0, 0.9963655293479949;
-0.038461538461538464, -0.6, 0.4, 0.0, 0.0, 0.9963917325993011;
-0.038461538461538464, -0.5692307692307692, 0.4, 0.0, 0.0, 0.99675026227972;
-0.038461538461538464, -0.5384615384615384, 0.4, 0.0, 0.0, 0.997090040978998;
-0.038461538461538464, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9974110494357485;
-0.038461538461538464, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9977132694486053;
-0.038461538461538464, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979966838779417;
-0.038461538461538464, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982612766474914;
-0.038461538461538464, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9985070327458682;
-0.038461538461538464, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987339382279848;
-0.038461538461538464, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9989419802163725;
-0.038461538461538464, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991311469023985;
-0.038461538461538464, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9993014275473833;
-0.038461538461538464, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994528124836168;
-0.038461538461538464, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995852931152732;
-0.038461538461538464, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996988619192241;
-0.038461538461538464, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997935124457505;
-0.038461538461538464, -0.10769230769230768, 0.4, 0.0, 0.0, 0.999869239319154;
-0.038461538461538464, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9999260382382645;
-0.038461538461538464, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999639059768487;
-0.038461538461538464, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999828403839143;
-0.038461538461538464, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999828403839143;
-0.038461538461538464, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999639059768487;
-0.038461538461538464, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9999260382382645;
-0.038461538461538464, 0.10769230769230768, 0.4, 0.0, 0.0, 0.999869239319154;
-0.038461538461538464, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997935124457505;
-0.038461538461538464, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996988619192241;
-0.038461538461538464, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995852931152732;
-0.038461538461538464, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994528124836168;
-0.038461538461538464, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9993014275473833;
-0.038461538461538464, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991311469023985;
-0.038461538461538464, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9989419802163725;
-0.038461538461538464, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987339382279848;
-0.038461538461538464, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9985070327458682;
-0.038461538461538464, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982612766474914;
-0.038461538461538464, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979966838779417;
-0.038461538461538464, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9977132694486053;
-0.038461538461538464, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9974110494357485;
-0.038461538461538464, 0.5384615384615384, 0.4, 0.0, 0.0, 0.997090040978998;
-0.038461538461538464, 0.5692307692307692, 0.4, 0.0, 0.0, 0.99675026227972;
-0.038461538461538464, 0.6, 0.4, 0.0, 0.0, 0.9963917325993011;
-0.01282051282051282, -0.6, 0.4, 0.0, 0.0, 0.9964048344833711;
-0.01282051282051282, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9967633688782153;
-0.01282051282051282, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9971031520453556;
-0.01282051282051282, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9974241647231524;
-0.01282051282051282, -0.4769230769230769, 0.4, 0.0, 0.0, 0.99772638871;
-0.01282051282051282, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9980098068660463;
-0.01282051282051282, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982744031148139;
-0.01282051282051282, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9985201624447188;
-0.01282051282051282, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987470709104905;
-0.01282051282051282, -0.32307692307692304, 0.4, 0.0, 0.0, 0.998955115634491;
-0.01282051282051282, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991442848079322;
-0.01282051282051282, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9993145676919934;
-0.01282051282051282, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994659546188376;
-0.01282051282051282, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995984369925256;
-0.01282051282051282, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9997120072898301;
-0.01282051282051282, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9998066590609476;
-0.01282051282051282, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998823869301087;
-0.01282051282051282, -0.07692307692307691, 0.4, 0.0, 0.0, 0.999939186596087;
-0.01282051282051282, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999770548326067;
-0.01282051282051282, -0.015384615384615384, 0.4, 0.0, 0.0, 0.999995989488647;
-0.01282051282051282, 0.015384615384615384, 0.4, 0.0, 0.0, 0.999995989488647;
-0.01282051282051282, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999770548326067;
-0.01282051282051282, 0.07692307692307691, 0.4, 0.0, 0.0, 0.999939186596087;
-0.01282051282051282, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998823869301087;
-0.01282051282051282, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9998066590609476;
-0.01282051282051282, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9997120072898301;
-0.01282051282051282, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995984369925256;
-0.01282051282051282, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994659546188376;
-0.01282051282051282, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9993145676919934;
-0.01282051282051282, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991442848079322;
-0.01282051282051282, 0.32307692307692304, 0.4, 0.0, 0.0, 0.998955115634491;
-0.01282051282051282, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987470709104905;
-0.01282051282051282, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9985201624447188;
-0.01282051282051282, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982744031148139;
-0.01282051282051282, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9980098068660463;
-0.01282051282051282, 0.4769230769230769, 0.4, 0.0, 0.0, 0.99772638871;
-0.01282051282051282, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9974241647231524;
-0.01282051282051282, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9971031520453556;
-0.01282051282051282, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9967633688782153;
-0.01282051282051282, 0.6, 0.4, 0.0, 0.0, 0.9964048344833711;
0.01282051282051282, -0.6, 0.4, 0.0, 0.0, 0.9964048344833711;
0.01282051282051282, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9967633688782153;
0.01282051282051282, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9971031520453556;
0.01282051282051282, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9974241647231524;
0.01282051282051282, -0.4769230769230769, 0.4, 0.0, 0.0, 0.99772638871;
0.01282051282051282, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9980098068660463;
0.01282051282051282, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982744031148139;
0.01282051282051282, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9985201624447188;
0.01282051282051282, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987470709104905;
0.01282051282051282, -0.32307692307692304, 0.4, 0.0, 0.0, 0.998955115634491;
0.01282051282051282, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991442848079322;
0.01282051282051282, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9993145676919934;
0.01282051282051282, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994659546188376;
0.01282051282051282, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995984369925256;
0.01282051282051282, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9997120072898301;
0.01282051282051282, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9998066590609476;
0.01282051282051282, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998823869301087;
0.01282051282051282, -0.07692307692307691, 0.4, 0.0, 0.0, 0.999939186596087;
0.01282051282051282, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999770548326067;
0.01282051282051282, -0.015384615384615384, 0.4, 0.0, 0.0, 0.999995989488647;
0.01282051282051282, 0.015384615384615384, 0.4, 0.0, 0.0, 0.999995989488647;
0.01282051282051282, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999770548326067;
0.01282051282051282, 0.07692307692307691, 0.4, 0.0, 0.0, 0.999939186596087;
0.01282051282051282, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998823869301087;
0.01282051282051282, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9998066590609476;
0.01282051282051282, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9997120072898301;
0.01282051282051282, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995984369925256;
0.01282051282051282, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994659546188376;
0.01282051282051282, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9993145676919934;
0.01282051282051282, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991442848079322;
0.01282051282051282, 0.32307692307692304, 0.4, 0.0, 0.0, 0.998955115634491;
0.01282051282051282, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987470709104905;
0.01282051282051282, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9985201624447188;
0.01282051282051282, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982744031148139;
0.01282051282051282, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9980098068660463;
0.01282051282051282, 0.4769230769230769, 0.4, 0.0, 0.0, 0.99772638871;
0.01282051282051282, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9974241647231524;
0.01282051282051282, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9971031520453556;
0.01282051282051282, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9967633688782153;
0.01282051282051282, 0.6, 0.4, 0.0, 0.0, 0.9964048344833711;
0.038461538461538464, -0.6, 0.4, 0.0, 0.0, 0.9963917325993011;
0.038461538461538464, -0.5692307692307692, 0.4, 0.0, 0.0, 0.99675026227972;
0.038461538461538464, -0.5384615384615384, 0.4, 0.0, 0.0, 0.997090040978998;
0.038461538461538464, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9974110494357485;
0.038461538461538464, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9977132694486053;
0.038461538461538464, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979966838779417;
0.038461538461538464, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982612766474914;
0.038461538461538464, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9985070327458682;
0.038461538461538464, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987339382279848;
0.038461538461538464, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9989419802163725;
0.038461538461538464, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991311469023985;
0.038461538461538464, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9993014275473833;
0.038461538461538464, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994528124836168;
0.038461538461538464, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995852931152732;
0.038461538461538464, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996988619192241;
0.038461538461538464, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997935124457505;
0.038461538461538464, -0.10769230769230768, 0.4, 0.0, 0.0, 0.999869239319154;
0.038461538461538464, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9999260382382645;
0.038461538461538464, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999639059768487;
0.038461538461538464, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999828403839143;
0.038461538461538464, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999828403839143;
0.038461538461538464, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999639059768487;
0.038461538461538464, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9999260382382645;
0.038461538461538464, 0.10769230769230768, 0.4, 0.0, 0.0, 0.999869239319154;
0.038461538461538464, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997935124457505;
0.038461538461538464, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996988619192241;
0.038461538461538464, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995852931152732;
0.038461538461538464, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994528124836168;
0.038461538461538464, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9993014275473833;
0.038461538461538464, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991311469023985;
0.038461538461538464, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9989419802163725;
0.038461538461538464, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987339382279848;
0.038461538461538464, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9985070327458682;
0.038461538461538464, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982612766474914;
0.038461538461538464, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979966838779417;
0.038461538461538464, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9977132694486053;
0.038461538461538464, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9974110494357485;
0.038461538461538464, 0.5384615384615384, 0.4, 0.0, 0.0, 0.997090040978998;
0.038461538461538464, 0.5692307692307692, 0.4, 0.0, 0.0, 0.99675026227972;
0.038461538461538464, 0.6, 0.4, 0.0, 0.0, 0.9963917325993011;
0.0641025641025641, -0.6, 0.4, 0.0, 0.0, 0.9963655293479949;
0.0641025641025641, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9967240495997494;
0.0641025641025641, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9970638193634789;
0.0641025641025641, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9973848193783035;
0.0641025641025641, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9976870314433354;
0.0641025641025641, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979704384193988;
0.0641025641025641, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9982350242306504;
0.0641025641025641, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9984807738660983;
0.0641025641025641, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9987076733810224;
0.0641025641025641, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9989157098982923;
0.0641025641025641, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9991048716095858;
0.0641025641025641, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9992751477765061;
0.0641025641025641, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9994265287315971;
0.0641025641025641, -0.19999999999999998, 0.4, 0.0, 0.0, 0.999559005879259;
0.0641025641025641, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996725716965613;
0.0641025641025641, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997672197339548;
0.0641025641025641, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998429446158822;
0.0641025641025641, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998997420412867;
0.0641025641025641, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9999376087840197;
0.0641025641025641, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999565426931456;
0.0641025641025641, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999565426931456;
0.0641025641025641, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9999376087840197;
0.0641025641025641, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998997420412867;
0.0641025641025641, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998429446158822;
0.0641025641025641, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997672197339548;
0.0641025641025641, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996725716965613;
0.0641025641025641, 0.19999999999999998, 0.4, 0.0, 0.0, 0.999559005879259;
0.0641025641025641, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9994265287315971;
0.0641025641025641, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9992751477765061;
0.0641025641025641, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9991048716095858;
0.0641025641025641, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9989157098982923;
0.0641025641025641, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9987076733810224;
0.0641025641025641, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9984807738660983;
0.0641025641025641, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9982350242306504;
0.0641025641025641, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979704384193988;
0.0641025641025641, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9976870314433354;
0.0641025641025641, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9973848193783035;
0.0641025641025641, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9970638193634789;
0.0641025641025641, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9967240495997494;
0.0641025641025641, 0.6, 0.4, 0.0, 0.0, 0.9963655293479949;
0.08974358974358974, -0.6, 0.4, 0.0, 0.0, 0.9963262257630866;
0.08974358974358974, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9966847318723093;
0.08974358974358974, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9970244882331566;
0.08974358974358974, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9973454755855086;
0.08974358974358974, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9976476757291951;
0.08974358974358974, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9979310715257167;
0.08974358974358974, -0.41538461538461535, 0.4, 0.0, 0.0, 0.998195646899864;
0.08974358974358974, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9984413868412374;
0.08974358974358974, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9986682774056669;
0.08974358974358974, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9988763057165299;
0.08974358974358974, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9990654599659702;
0.08974358974358974, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9992357294160144;
0.08974358974358974, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9993871043995878;
0.08974358974358974, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9995195763214298;
0.08974358974358974, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9996331376589066;
0.08974358974358974, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9997277819627233;
0.08974358974358974, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9998035038575347;
0.08974358974358974, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998602990424539;
0.08974358974358974, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9998981642914593;
0.08974358974358974, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9999170974537;
0.08974358974358974, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9999170974537;
0.08974358974358974, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9998981642914593;
0.08974358974358974, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998602990424539;
0.08974358974358974, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9998035038575347;
0.08974358974358974, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9997277819627233;
0.08974358974358974, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9996331376589066;
0.08974358974358974, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9995195763214298;
0.08974358974358974, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9993871043995878;
0.08974358974358974, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9992357294160144;
0.08974358974358974, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9990654599659702;
0.08974358974358974, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9988763057165299;
0.08974358974358974, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9986682774056669;
0.08974358974358974, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9984413868412374;
0.08974358974358974, 0.41538461538461535, 0.4, 0.0, 0.0, 0.998195646899864;
0.08974358974358974, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9979310715257167;
0.08974358974358974, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9976476757291951;
0.08974358974358974, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9973454755855086;
0.08974358974358974, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9970244882331566;
0.08974358974358974, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9966847318723093;
0.08974358974358974, 0.6, 0.4, 0.0, 0.0, 0.9963262257630866;
0.11538461538461539, -0.6, 0.4, 0.0, 0.0, 0.996273823394942;
0.11538461538461539, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9966323106483235;
0.11538461538461539, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9969720491394837;
0.11538461538461539, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9972930196093156;
0.11538461538461539, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9975952038586066;
0.11538461538461539, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9978785847497583;
0.11538461538461539, -0.41538461538461535, 0.4, 0.0, 0.0, 0.998143146208407;
0.11538461538461539, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9983888732249427;
0.11538461538461539, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9986157518559284;
0.11538461538461539, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9988237692254193;
0.11538461538461539, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9990129135261797;
0.11538461538461539, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9991831740208013;
0.11538461538461539, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9993345410427178;
0.11538461538461539, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9994670059971206;
0.11538461538461539, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9995805613617715;
0.11538461538461539, -0.13846153846153847, 0.4, 0.0, 0.0, 0.999675200687715;
0.11538461538461539, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9997509185998885;
0.11538461538461539, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9998077107976313;
0.11538461538461539, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9998455740550914;
0.11538461538461539, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9998645062215313;
0.11538461538461539, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9998645062215313;
0.11538461538461539, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9998455740550914;
0.11538461538461539, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9998077107976313;
0.11538461538461539, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9997509185998885;
0.11538461538461539, 0.13846153846153847, 0.4, 0.0, 0.0, 0.999675200687715;
0.11538461538461539, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9995805613617715;
0.11538461538461539, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9994670059971206;
0.11538461538461539, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9993345410427178;
0.11538461538461539, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9991831740208013;
0.11538461538461539, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9990129135261797;
0.11538461538461539, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9988237692254193;
0.11538461538461539, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9986157518559284;
0.11538461538461539, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9983888732249427;
0.11538461538461539, 0.41538461538461535, 0.4, 0.0, 0.0, 0.998143146208407;
0.11538461538461539, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9978785847497583;
0.11538461538461539, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9975952038586066;
0.11538461538461539, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9972930196093156;
0.11538461538461539, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9969720491394837;
0.11538461538461539, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9966323106483235;
0.11538461538461539, 0.6, 0.4, 0.0, 0.0, 0.996273823394942;
0.14102564102564102, -0.6, 0.4, 0.0, 0.0, 0.9962083243105572;
0.14102564102564102, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9965667879955317;
0.14102564102564102, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9969065041509048;
0.14102564102564102, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9972274535188353;
0.14102564102564102, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9975296179013073;
0.14102564102564102, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9978129801618493;
0.14102564102564102, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9980775242271541;
0.14102564102564102, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9983232350885984;
0.14102564102564102, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9985500988036622;
0.14102564102564102, -0.32307692307692304, 0.4, 0.0, 0.0, 0.998758102497247;
0.14102564102564102, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9989472343628935;
0.14102564102564102, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9991174836638991;
0.14102564102564102, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9992688407343333;
0.14102564102564102, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9994012969799524;
0.14102564102564102, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9995148448790128;
0.14102564102564102, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9996094779829829;
0.14102564102564102, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9996851909171536;
0.14102564102564102, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9997419793811468;
0.14102564102564102, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9997798401493228;
0.14102564102564102, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9997987710710852;
0.14102564102564102, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9997987710710852;
0.14102564102564102, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9997798401493228;
0.14102564102564102, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9997419793811468;
0.14102564102564102, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9996851909171536;
0.14102564102564102, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9996094779829829;
0.14102564102564102, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9995148448790128;
0.14102564102564102, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9994012969799524;
0.14102564102564102, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9992688407343333;
0.14102564102564102, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9991174836638991;
0.14102564102564102, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9989472343628935;
0.14102564102564102, 0.32307692307692304, 0.4, 0.0, 0.0, 0.998758102497247;
0.14102564102564102, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9985500988036622;
0.14102564102564102, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9983232350885984;
0.14102564102564102, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9980775242271541;
0.14102564102564102, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9978129801618493;
0.14102564102564102, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9975296179013073;
0.14102564102564102, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9972274535188353;
0.14102564102564102, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9969065041509048;
0.14102564102564102, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9965667879955317;
0.14102564102564102, 0.6, 0.4, 0.0, 0.0, 0.9962083243105572;
0.16666666666666666, -0.6, 0.4, 0.0, 0.0, 0.9961297310934222;
0.16666666666666666, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9964881664983538;
0.16666666666666666, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9968278558527206;
0.16666666666666666, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9971487799002009;
0.16666666666666666, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9974509204442142;
0.16666666666666666, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9977342603496412;
0.16666666666666666, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9979987835444426;
0.16666666666666666, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9982444750211793;
0.16666666666666666, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9984713208384312;
0.16666666666666666, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9986793081221154;
0.16666666666666666, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9988684250667044;
0.16666666666666666, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9990386609363423;
0.16666666666666666, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9991900060658614;
0.16666666666666666, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9993224518616958;
0.16666666666666666, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9994359908026954;
0.16666666666666666, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9995306164408375;
0.16666666666666666, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9996063234018367;
0.16666666666666666, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9996631073856544;
0.16666666666666666, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9997009651669054;
0.16666666666666666, -0.015384615384615384, 0.4, 0.0, 0.0, 0.999719894595163;
0.16666666666666666, 0.015384615384615384, 0.4, 0.0, 0.0, 0.999719894595163;
0.16666666666666666, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9997009651669054;
0.16666666666666666, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9996631073856544;
0.16666666666666666, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9996063234018367;
0.16666666666666666, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9995306164408375;
0.16666666666666666, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9994359908026954;
0.16666666666666666, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9993224518616958;
0.16666666666666666, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9991900060658614;
0.16666666666666666, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9990386609363423;
0.16666666666666666, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9988684250667044;
0.16666666666666666, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9986793081221154;
0.16666666666666666, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9984713208384312;
0.16666666666666666, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9982444750211793;
0.16666666666666666, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9979987835444426;
0.16666666666666666, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9977342603496412;
0.16666666666666666, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9974509204442142;
0.16666666666666666, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9971487799002009;
0.16666666666666666, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9968278558527206;
0.16666666666666666, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9964881664983538;
0.16666666666666666, 0.6, 0.4, 0.0, 0.0, 0.9961297310934222;
0.19230769230769232, -0.6, 0.4, 0.0, 0.0, 0.9960380468433517;
0.19230769230769232, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9963964492577196;
0.19230769230769232, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9967361073469182;
0.19230769230769232, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9970570018563978;
0.19230769230769232, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9973591145912531;
0.19230769230769232, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9976424284179416;
0.19230769230769232, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9979069272659035;
0.19230769230769232, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9981525961290808;
0.19230769230769232, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9983794210673367;
0.19230769230769232, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9985873892077732;
0.19230769230769232, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9987764887459495;
0.19230769230769232, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9989467089469978;
0.19230769230769232, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9990980401466397;
0.19230769230769232, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9992304737521007;
0.19230769230769232, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9993440022429226;
0.19230769230769232, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9994386191716763;
0.19230769230769232, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9995143191645712;
0.19230769230769232, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9995710979219643;
0.19230769230769232, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9996089522187672;
0.19230769230769232, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9996278799047512;
0.19230769230769232, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9996278799047512;
0.19230769230769232, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9996089522187672;
0.19230769230769232, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9995710979219643;
0.19230769230769232, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9995143191645712;
0.19230769230769232, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9994386191716763;
0.19230769230769232, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9993440022429226;
0.19230769230769232, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9992304737521007;
0.19230769230769232, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9990980401466397;
0.19230769230769232, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9989467089469978;
0.19230769230769232, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9987764887459495;
0.19230769230769232, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9985873892077732;
0.19230769230769232, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9983794210673367;
0.19230769230769232, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9981525961290808;
0.19230769230769232, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9979069272659035;
0.19230769230769232, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9976424284179416;
0.19230769230769232, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9973591145912531;
0.19230769230769232, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9970570018563978;
0.19230769230769232, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9967361073469182;
0.19230769230769232, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9963964492577196;
0.19230769230769232, 0.6, 0.4, 0.0, 0.0, 0.9960380468433517;
0.21794871794871795, -0.6, 0.4, 0.0, 0.0, 0.995933275176281;
0.21794871794871795, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9962916398908658;
0.21794871794871795, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9966312622519669;
0.21794871794871795, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9969521230070606;
0.21794871794871795, -0.4769230769230769, 0.4, 0.0, 0.0, 0.997254203963155;
0.21794871794871795, -0.4461538461538462, 0.4, 0.0, 0.0, 0.99753748798851;
0.21794871794871795, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9978019590142564;
0.21794871794871795, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9980476020359145;
0.21794871794871795, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9982744031148139;
0.21794871794871795, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9984823493794106;
0.21794871794871795, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9986714290265054;
0.21794871794871795, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9988416313223599;
0.21794871794871795, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9989929466037123;
0.21794871794871795, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9991253662786918;
0.21794871794871795, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9992388828276313;
0.21794871794871795, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9993334898037799;
0.21794871794871795, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9994091818339121;
0.21794871794871795, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9994659546188376;
0.21794871794871795, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9995038049338069;
0.21794871794871795, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9995227306288175;
0.21794871794871795, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9995227306288175;
0.21794871794871795, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9995038049338069;
0.21794871794871795, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9994659546188376;
0.21794871794871795, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9994091818339121;
0.21794871794871795, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9993334898037799;
0.21794871794871795, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9992388828276313;
0.21794871794871795, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9991253662786918;
0.21794871794871795, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9989929466037123;
0.21794871794871795, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9988416313223599;
0.21794871794871795, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9986714290265054;
0.21794871794871795, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9984823493794106;
0.21794871794871795, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9982744031148139;
0.21794871794871795, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9980476020359145;
0.21794871794871795, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9978019590142564;
0.21794871794871795, 0.4461538461538462, 0.4, 0.0, 0.0, 0.99753748798851;
0.21794871794871795, 0.4769230769230769, 0.4, 0.0, 0.0, 0.997254203963155;
0.21794871794871795, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9969521230070606;
0.21794871794871795, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9966312622519669;
0.21794871794871795, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9962916398908658;
0.21794871794871795, 0.6, 0.4, 0.0, 0.0, 0.995933275176281;
0.24358974358974358, -0.6, 0.4, 0.0, 0.0, 0.995815420224028;
0.24358974358974358, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9961737425310967;
0.24358974358974358, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9965133247025806;
0.24358974358974358, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9968341474882341;
0.24358974358974358, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9971361926972182;
0.24358974358974358, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9974194431998201;
0.24358974358974358, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9976838829290721;
0.24358974358974358, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9979294968822702;
0.24358974358974358, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9981562711223932;
0.24358974358974358, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9983641927794208;
0.24358974358974358, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9985532500515499;
0.24358974358974358, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9987234322063128;
0.24358974358974358, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9988747295815907;
0.24358974358974358, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9990071335865299;
0.24358974358974358, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9991206367023533;
0.24358974358974358, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9992152324830725;
0.24358974358974358, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9992909155560982;
0.24358974358974358, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9993476816227483;
0.24358974358974358, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9993855274586554;
0.24358974358974358, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9994044509140714;
0.24358974358974358, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9994044509140714;
0.24358974358974358, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9993855274586554;
0.24358974358974358, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9993476816227483;
0.24358974358974358, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9992909155560982;
0.24358974358974358, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9992152324830725;
0.24358974358974358, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9991206367023533;
0.24358974358974358, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9990071335865299;
0.24358974358974358, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9988747295815907;
0.24358974358974358, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9987234322063128;
0.24358974358974358, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9985532500515499;
0.24358974358974358, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9983641927794208;
0.24358974358974358, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9981562711223932;
0.24358974358974358, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9979294968822702;
0.24358974358974358, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9976838829290721;
0.24358974358974358, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9974194431998201;
0.24358974358974358, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9971361926972182;
0.24358974358974358, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9968341474882341;
0.24358974358974358, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9965133247025806;
0.24358974358974358, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9961737425310967;
0.24358974358974358, 0.6, 0.4, 0.0, 0.0, 0.995815420224028;
0.2692307692307692, -0.6, 0.4, 0.0, 0.0, 0.9956844866340222;
0.2692307692307692, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9960427618275143;
0.2692307692307692, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9963822993494458;
0.2692307692307692, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9967030799521021;
0.2692307692307692, -0.4769230769230769, 0.4, 0.0, 0.0, 0.997005085447036;
0.2692307692307692, -0.4461538461538462, 0.4, 0.0, 0.0, 0.997288298706787;
0.2692307692307692, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9975527036665001;
0.2692307692307692, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9977982853254437;
0.2692307692307692, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9980250297484291;
0.2692307692307692, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9982329240671282;
0.2692307692307692, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9984219564812898;
0.2692307692307692, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9985921162598572;
0.2692307692307692, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9987433937419823;
0.2692307692307692, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9988757803379406;
0.2692307692307692, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9989892685299435;
0.2692307692307692, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9990838518728504;
0.2692307692307692, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9991595249947786;
0.2692307692307692, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9992162835976108;
0.2692307692307692, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9992541244574038;
0.2692307692307692, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9992730454246921;
0.2692307692307692, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9992730454246921;
0.2692307692307692, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9992541244574038;
0.2692307692307692, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9992162835976108;
0.2692307692307692, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9991595249947786;
0.2692307692307692, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9990838518728504;
0.2692307692307692, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9989892685299435;
0.2692307692307692, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9988757803379406;
0.2692307692307692, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9987433937419823;
0.2692307692307692, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9985921162598572;
0.2692307692307692, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9984219564812898;
0.2692307692307692, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9982329240671282;
0.2692307692307692, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9980250297484291;
0.2692307692307692, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9977982853254437;
0.2692307692307692, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9975527036665001;
0.2692307692307692, 0.4461538461538462, 0.4, 0.0, 0.0, 0.997288298706787;
0.2692307692307692, 0.4769230769230769, 0.4, 0.0, 0.0, 0.997005085447036;
0.2692307692307692, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9967030799521021;
0.2692307692307692, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9963822993494458;
0.2692307692307692, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9960427618275143;
0.2692307692307692, 0.6, 0.4, 0.0, 0.0, 0.9956844866340222;
0.2948717948717949, -0.6, 0.4, 0.0, 0.0, 0.9955404795689989;
0.2948717948717949, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9958987029447116;
0.2948717948717949, -0.5384615384615384, 0.4, 0.0, 0.0, 0.996238191358916;
0.2948717948717949, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9965589255666814;
0.2948717948717949, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9968608873821913;
0.2948717948717949, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9971440596804622;
0.2948717948717949, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9974084263989624;
0.2948717948717949, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9976539725391304;
0.2948717948717949, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9978806841677927;
0.2948717948717949, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9980885484184822;
0.2948717948717949, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9982775534926547;
0.2948717948717949, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9984476886608051;
0.2948717948717949, -0.23076923076923078, 0.4, 0.0, 0.0, 0.998598944263483;
0.2948717948717949, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9987313117122059;
0.2948717948717949, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9988447834902728;
0.2948717948717949, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9989393531534753;
0.2948717948717949, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9990150153307071;
0.2948717948717949, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9990717657244733;
0.2948717948717949, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9991096011112964;
0.2948717948717949, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9991285193420221;
0.2948717948717949, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9991285193420221;
0.2948717948717949, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9991096011112964;
0.2948717948717949, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9990717657244733;
0.2948717948717949, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9990150153307071;
0.2948717948717949, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9989393531534753;
0.2948717948717949, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9988447834902728;
0.2948717948717949, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9987313117122059;
0.2948717948717949, 0.23076923076923078, 0.4, 0.0, 0.0, 0.998598944263483;
0.2948717948717949, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9984476886608051;
0.2948717948717949, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9982775534926547;
0.2948717948717949, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9980885484184822;
0.2948717948717949, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9978806841677927;
0.2948717948717949, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9976539725391304;
0.2948717948717949, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9974084263989624;
0.2948717948717949, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9971440596804622;
0.2948717948717949, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9968608873821913;
0.2948717948717949, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9965589255666814;
0.2948717948717949, 0.5384615384615384, 0.4, 0.0, 0.0, 0.996238191358916;
0.2948717948717949, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9958987029447116;
0.2948717948717949, 0.6, 0.4, 0.0, 0.0, 0.9955404795689989;
0.32051282051282054, -0.6, 0.4, 0.0, 0.0, 0.9953834047066601;
0.32051282051282054, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9957415715624335;
0.32051282051282054, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9960810064126724;
0.32051282051282054, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9964016900154824;
0.32051282051282054, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9967036041879164;
0.32051282051282054, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9969867318076929;
0.32051282051282054, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9972510568148145;
0.32051282051282054, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997496564213086;
0.32051282051282054, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9977232400715325;
0.32051282051282054, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9979310715257167;
0.32051282051282054, -0.29230769230769227, 0.4, 0.0, 0.0, 0.998120046778956;
0.32051282051282054, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9982901551034385;
0.32051282051282054, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9984413868412374;
0.32051282051282054, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9985737334052257;
0.32051282051282054, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9986871872798881;
0.32051282051282054, -0.13846153846153847, 0.4, 0.0, 0.0, 0.998781742022033;
0.32051282051282054, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9988573922614017;
0.32051282051282054, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9989141337011771;
0.32051282051282054, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9989519631183904;
0.32051282051282054, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9989708783642264;
0.32051282051282054, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9989708783642264;
0.32051282051282054, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9989519631183904;
0.32051282051282054, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9989141337011771;
0.32051282051282054, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9988573922614017;
0.32051282051282054, 0.13846153846153847, 0.4, 0.0, 0.0, 0.998781742022033;
0.32051282051282054, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9986871872798881;
0.32051282051282054, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9985737334052257;
0.32051282051282054, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9984413868412374;
0.32051282051282054, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9982901551034385;
0.32051282051282054, 0.29230769230769227, 0.4, 0.0, 0.0, 0.998120046778956;
0.32051282051282054, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9979310715257167;
0.32051282051282054, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9977232400715325;
0.32051282051282054, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997496564213086;
0.32051282051282054, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9972510568148145;
0.32051282051282054, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9969867318076929;
0.32051282051282054, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9967036041879164;
0.32051282051282054, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9964016900154824;
0.32051282051282054, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9960810064126724;
0.32051282051282054, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9957415715624335;
0.32051282051282054, 0.6, 0.4, 0.0, 0.0, 0.9953834047066601;
0.34615384615384615, -0.6, 0.4, 0.0, 0.0, 0.9952132682393011;
0.34615384615384615, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9955713738752037;
0.34615384615384615, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9959107507073502;
0.34615384615384615, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9962313794971354;
0.34615384615384615, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9965332420647199;
0.34615384615384615, -0.4461538461538462, 0.4, 0.0, 0.0, 0.996816321290749;
0.34615384615384615, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9970806011179704;
0.34615384615384615, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997326066552752;
0.34615384615384615, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9975527036665001;
0.34615384615384615, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9977604995969762;
0.34615384615384615, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9979494425495143;
0.34615384615384615, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9981195217981359;
0.34615384615384615, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9982707276865651;
0.34615384615384615, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9984030516291427;
0.34615384615384615, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9985164861116379;
0.34615384615384615, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9986110246919603;
0.34615384615384615, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9986866620007694;
0.34615384615384615, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9987433937419823;
0.34615384615384615, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9987812166931813;
0.34615384615384615, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9988001287059182;
0.34615384615384615, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9988001287059182;
0.34615384615384615, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9987812166931813;
0.34615384615384615, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9987433937419823;
0.34615384615384615, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9986866620007694;
0.34615384615384615, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9986110246919603;
0.34615384615384615, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9985164861116379;
0.34615384615384615, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9984030516291427;
0.34615384615384615, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9982707276865651;
0.34615384615384615, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9981195217981359;
0.34615384615384615, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9979494425495143;
0.34615384615384615, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9977604995969762;
0.34615384615384615, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9975527036665001;
0.34615384615384615, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997326066552752;
0.34615384615384615, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9970806011179704;
0.34615384615384615, 0.4461538461538462, 0.4, 0.0, 0.0, 0.996816321290749;
0.34615384615384615, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9965332420647199;
0.34615384615384615, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9962313794971354;
0.34615384615384615, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9959107507073502;
0.34615384615384615, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9955713738752037;
0.34615384615384615, 0.6, 0.4, 0.0, 0.0, 0.9952132682393011;
0.3717948717948718, -0.6, 0.4, 0.0, 0.0, 0.9950300768734045;
0.3717948717948718, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9953881165919175;
0.3717948717948718, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9957274309541319;
0.3717948717948718, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9960480007249832;
0.3717948717948718, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9963498077279789;
0.3717948717948718, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9966328348469153;
0.3717948717948718, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9968970660274957;
0.3717948717948718, -0.38461538461538464, 0.4, 0.0, 0.0, 0.997142486278848;
0.3717948717948718, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9973690816749424;
0.3717948717948718, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9975768393559082;
0.3717948717948718, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9977657475292501;
0.3717948717948718, -0.26153846153846155, 0.4, 0.0, 0.0, 0.997935795470964;
0.3717948717948718, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9980869735265516;
0.3717948717948718, -0.19999999999999998, 0.4, 0.0, 0.0, 0.998219273111934;
0.3717948717948718, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9983326867142637;
0.3717948717948718, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9984272078926361;
0.3717948717948718, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9985028312786987;
0.3717948717948718, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9985595525771598;
0.3717948717948718, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9985973685661946;
0.3717948717948718, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9986162770977507;
0.3717948717948718, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9986162770977507;
0.3717948717948718, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9985973685661946;
0.3717948717948718, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9985595525771598;
0.3717948717948718, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9985028312786987;
0.3717948717948718, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9984272078926361;
0.3717948717948718, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9983326867142637;
0.3717948717948718, 0.19999999999999998, 0.4, 0.0, 0.0, 0.998219273111934;
0.3717948717948718, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9980869735265516;
0.3717948717948718, 0.26153846153846155, 0.4, 0.0, 0.0, 0.997935795470964;
0.3717948717948718, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9977657475292501;
0.3717948717948718, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9975768393559082;
0.3717948717948718, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9973690816749424;
0.3717948717948718, 0.38461538461538464, 0.4, 0.0, 0.0, 0.997142486278848;
0.3717948717948718, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9968970660274957;
0.3717948717948718, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9966328348469153;
0.3717948717948718, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9963498077279789;
0.3717948717948718, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9960480007249832;
0.3717948717948718, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9957274309541319;
0.3717948717948718, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9953881165919175;
0.3717948717948718, 0.6, 0.4, 0.0, 0.0, 0.9950300768734045;
0.3974358974358974, -0.6, 0.4, 0.0, 0.0, 0.9948338378291982;
0.3974358974358974, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9951918069354013;
0.3974358974358974, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9955310543783057;
0.3974358974358974, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9958515609266406;
0.3974358974358974, -0.4769230769230769, 0.4, 0.0, 0.0, 0.996153308407498;
0.3974358974358974, -0.4461538461538462, 0.4, 0.0, 0.0, 0.99643627970805;
0.3974358974358974, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9967004587771662;
0.3974358974358974, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9969458306269308;
0.3974358974358974, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9971723813340605;
0.3974358974358974, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9973800980412209;
0.3974358974358974, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9975689689582423;
0.3974358974358974, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9977389833632357;
0.3974358974358974, -0.23076923076923078, 0.4, 0.0, 0.0, 0.997890131603607;
0.3974358974358974, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9980224050969698;
0.3974358974358974, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9981357963319586;
0.3974358974358974, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9982302988689389;
0.3974358974358974, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9983059073406172;
0.3974358974358974, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9983626174525487;
0.3974358974358974, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9984004259835442;
0.3974358974358974, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9984193307859746;
0.3974358974358974, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9984193307859746;
0.3974358974358974, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9984004259835442;
0.3974358974358974, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9983626174525487;
0.3974358974358974, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9983059073406172;
0.3974358974358974, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9982302988689389;
0.3974358974358974, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9981357963319586;
0.3974358974358974, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9980224050969698;
0.3974358974358974, 0.23076923076923078, 0.4, 0.0, 0.0, 0.997890131603607;
0.3974358974358974, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9977389833632357;
0.3974358974358974, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9975689689582423;
0.3974358974358974, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9973800980412209;
0.3974358974358974, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9971723813340605;
0.3974358974358974, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9969458306269308;
0.3974358974358974, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9967004587771662;
0.3974358974358974, 0.4461538461538462, 0.4, 0.0, 0.0, 0.99643627970805;
0.3974358974358974, 0.4769230769230769, 0.4, 0.0, 0.0, 0.996153308407498;
0.3974358974358974, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9958515609266406;
0.3974358974358974, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9955310543783057;
0.3974358974358974, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9951918069354013;
0.3974358974358974, 0.6, 0.4, 0.0, 0.0, 0.9948338378291982;
0.4230769230769231, -0.6, 0.4, 0.0, 0.0, 0.9946245588401824;
0.4230769230769231, -0.5692307692307692, 0.4, 0.0, 0.0, 0.994982452641938;
0.4230769230769231, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9953216287187918;
0.4230769230769231, -0.5076923076923077, 0.4, 0.0, 0.0, 0.995642067843519;
0.4230769230769231, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9959437518470345;
0.4230769230769231, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9962266636201103;
0.4230769230769231, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9964907871149923;
0.4230769230769231, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9967361073469182;
0.4230769230769231, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9969626103955334;
0.4230769230769231, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9971702834062081;
0.4230769230769231, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9973591145912531;
0.4230769230769231, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9975290932310349;
0.4230769230769231, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9976802096749897;
0.4230769230769231, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9978124553425369;
0.4230769230769231, -0.1692307692307692, 0.4, 0.0, 0.0, 0.997925822723891;
0.4230769230769231, -0.13846153846153847, 0.4, 0.0, 0.0, 0.998020305380772;
0.4230769230769231, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9980958979470158;
0.4230769230769231, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9981525961290808;
0.4230769230769231, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9981903967064554;
0.4230769230769231, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9982092975319624;
0.4230769230769231, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9982092975319624;
0.4230769230769231, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9981903967064554;
0.4230769230769231, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9981525961290808;
0.4230769230769231, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9980958979470158;
0.4230769230769231, 0.13846153846153847, 0.4, 0.0, 0.0, 0.998020305380772;
0.4230769230769231, 0.1692307692307692, 0.4, 0.0, 0.0, 0.997925822723891;
0.4230769230769231, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9978124553425369;
0.4230769230769231, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9976802096749897;
0.4230769230769231, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9975290932310349;
0.4230769230769231, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9973591145912531;
0.4230769230769231, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9971702834062081;
0.4230769230769231, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9969626103955334;
0.4230769230769231, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9967361073469182;
0.4230769230769231, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9964907871149923;
0.4230769230769231, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9962266636201103;
0.4230769230769231, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9959437518470345;
0.4230769230769231, 0.5076923076923077, 0.4, 0.0, 0.0, 0.995642067843519;
0.4230769230769231, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9953216287187918;
0.4230769230769231, 0.5692307692307692, 0.4, 0.0, 0.0, 0.994982452641938;
0.4230769230769231, 0.6, 0.4, 0.0, 0.0, 0.9946245588401824;
0.44871794871794873, -0.6, 0.4, 0.0, 0.0, 0.9944022481526211;
0.44871794871794873, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9947600619607585;
0.44871794871794873, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9950991622276335;
0.44871794871794873, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9954195297303184;
0.44871794871794873, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9957211463037894;
0.44871794871794873, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9960039948426426;
0.44871794871794873, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9962680593027107;
0.44871794871794873, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9965133247025806;
0.44871794871794873, -0.35384615384615387, 0.4, 0.0, 0.0, 0.9967397771250093;
0.44871794871794873, -0.32307692307692304, 0.4, 0.0, 0.0, 0.99694740371824;
0.44871794871794873, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9971361926972182;
0.44871794871794873, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9973061333447063;
0.44871794871794873, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9974572160122978;
0.44871794871794873, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9975894321213296;
0.44871794871794873, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9977027741636949;
0.44871794871794873, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9977972357025529;
0.44871794871794873, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9978728113729386;
0.44871794871794873, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9979294968822702;
0.44871794871794873, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9979672890107559;
0.44871794871794873, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9979861856116986;
0.44871794871794873, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9979861856116986;
0.44871794871794873, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9979672890107559;
0.44871794871794873, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9979294968822702;
0.44871794871794873, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9978728113729386;
0.44871794871794873, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9977972357025529;
0.44871794871794873, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9977027741636949;
0.44871794871794873, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9975894321213296;
0.44871794871794873, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9974572160122978;
0.44871794871794873, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9973061333447063;
0.44871794871794873, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9971361926972182;
0.44871794871794873, 0.32307692307692304, 0.4, 0.0, 0.0, 0.99694740371824;
0.44871794871794873, 0.35384615384615387, 0.4, 0.0, 0.0, 0.9967397771250093;
0.44871794871794873, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9965133247025806;
0.44871794871794873, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9962680593027107;
0.44871794871794873, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9960039948426426;
0.44871794871794873, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9957211463037894;
0.44871794871794873, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9954195297303184;
0.44871794871794873, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9950991622276335;
0.44871794871794873, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9947600619607585;
0.44871794871794873, 0.6, 0.4, 0.0, 0.0, 0.9944022481526211;
0.47435897435897434, -0.6, 0.4, 0.0, 0.0, 0.9941669145250005;
0.47435897435897434, -0.5692307692307692, 0.4, 0.0, 0.0, 0.9945246436535008;
0.47435897435897434, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9948636636694551;
0.47435897435897434, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9951839553544851;
0.47435897435897434, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9954855005478657;
0.47435897435897434, -0.4461538461538462, 0.4, 0.0, 0.0, 0.995768282148241;
0.47435897435897434, -0.41538461538461535, 0.4, 0.0, 0.0, 0.9960322841152413;
0.47435897435897434, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9962774914709983;
0.47435897435897434, -0.35384615384615387, 0.4, 0.0, 0.0, 0.996503890301563;
0.47435897435897434, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9967114677582198;
0.47435897435897434, -0.29230769230769227, 0.4, 0.0, 0.0, 0.9969002120587037;
0.47435897435897434, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9970701124883131;
0.47435897435897434, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9972211594009248;
0.47435897435897434, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9973533442199062;
0.47435897435897434, -0.1692307692307692, 0.4, 0.0, 0.0, 0.997466659438927;
0.47435897435897434, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9975610986226701;
0.47435897435897434, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9976366564074398;
0.47435897435897434, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9976933285016705;
0.47435897435897434, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9977311116863322;
0.47435897435897434, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9977500038152358;
0.47435897435897434, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9977500038152358;
0.47435897435897434, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9977311116863322;
0.47435897435897434, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9976933285016705;
0.47435897435897434, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9976366564074398;
0.47435897435897434, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9975610986226701;
0.47435897435897434, 0.1692307692307692, 0.4, 0.0, 0.0, 0.997466659438927;
0.47435897435897434, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9973533442199062;
0.47435897435897434, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9972211594009248;
0.47435897435897434, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9970701124883131;
0.47435897435897434, 0.29230769230769227, 0.4, 0.0, 0.0, 0.9969002120587037;
0.47435897435897434, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9967114677582198;
0.47435897435897434, 0.35384615384615387, 0.4, 0.0, 0.0, 0.996503890301563;
0.47435897435897434, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9962774914709983;
0.47435897435897434, 0.41538461538461535, 0.4, 0.0, 0.0, 0.9960322841152413;
0.47435897435897434, 0.4461538461538462, 0.4, 0.0, 0.0, 0.995768282148241;
0.47435897435897434, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9954855005478657;
0.47435897435897434, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9951839553544851;
0.47435897435897434, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9948636636694551;
0.47435897435897434, 0.5692307692307692, 0.4, 0.0, 0.0, 0.9945246436535008;
0.47435897435897434, 0.6, 0.4, 0.0, 0.0, 0.9941669145250005;
0.5, -0.6, 0.4, 0.0, 0.0, 0.993918567227454;
0.5, -0.5692307692307692, 0.4, 0.0, 0.0, 0.994276206993634;
0.5, -0.5384615384615384, 0.4, 0.0, 0.0, 0.9946151423208871;
0.5, -0.5076923076923077, 0.4, 0.0, 0.0, 0.9949353539956358;
0.5, -0.4769230769230769, 0.4, 0.0, 0.0, 0.9952368238616918;
0.5, -0.4461538461538462, 0.4, 0.0, 0.0, 0.9955195348219712;
0.5, -0.41538461538461535, 0.4, 0.0, 0.0, 0.995783470840111;
0.5, -0.38461538461538464, 0.4, 0.0, 0.0, 0.9960286169419849;
0.5, -0.35384615384615387, 0.4, 0.0, 0.0, 0.996254959217119;
0.5, -0.32307692307692304, 0.4, 0.0, 0.0, 0.9964624848200082;
0.5, -0.29230769230769227, 0.4, 0.0, 0.0, 0.99665118197133;
0.5, -0.26153846153846155, 0.4, 0.0, 0.0, 0.9968210399590597;
0.5, -0.23076923076923078, 0.4, 0.0, 0.0, 0.9969720491394837;
0.5, -0.19999999999999998, 0.4, 0.0, 0.0, 0.9971042009381119;
0.5, -0.1692307692307692, 0.4, 0.0, 0.0, 0.9972174878504894;
0.5, -0.13846153846153847, 0.4, 0.0, 0.0, 0.9973119034429061;
0.5, -0.10769230769230768, 0.4, 0.0, 0.0, 0.9973874423530066;
0.5, -0.07692307692307691, 0.4, 0.0, 0.0, 0.9974441002902973;
0.5, -0.046153846153846156, 0.4, 0.0, 0.0, 0.9974818740365522;
0.5, -0.015384615384615384, 0.4, 0.0, 0.0, 0.9975007614461183;
0.5, 0.015384615384615384, 0.4, 0.0, 0.0, 0.9975007614461183;
0.5, 0.046153846153846156, 0.4, 0.0, 0.0, 0.9974818740365522;
0.5, 0.07692307692307691, 0.4, 0.0, 0.0, 0.9974441002902973;
0.5, 0.10769230769230768, 0.4, 0.0, 0.0, 0.9973874423530066;
0.5, 0.13846153846153847, 0.4, 0.0, 0.0, 0.9973119034429061;
0.5, 0.1692307692307692, 0.4, 0.0, 0.0, 0.9972174878504894;
0.5, 0.19999999999999998, 0.4, 0.0, 0.0, 0.9971042009381119;
0.5, 0.23076923076923078, 0.4, 0.0, 0.0, 0.9969720491394837;
0.5, 0.26153846153846155, 0.4, 0.0, 0.0, 0.9968210399590597;
0.5, 0.29230769230769227, 0.4, 0.0, 0.0, 0.99665118197133;
0.5, 0.32307692307692304, 0.4, 0.0, 0.0, 0.9964624848200082;
0.5, 0.35384615384615387, 0.4, 0.0, 0.0, 0.996254959217119;
0.5, 0.38461538461538464, 0.4, 0.0, 0.0, 0.9960286169419849;
0.5, 0.41538461538461535, 0.4, 0.0, 0.0, 0.995783470840111;
0.5, 0.4461538461538462, 0.4, 0.0, 0.0, 0.9955195348219712;
0.5, 0.4769230769230769, 0.4, 0.0, 0.0, 0.9952368238616918;
0.5, 0.5076923076923077, 0.4, 0.0, 0.0, 0.9949353539956358;
0.5, 0.5384615384615384, 0.4, 0.0, 0.0, 0.9946151423208871;
0.5, 0.5692307692307692, 0.4, 0.0, 0.0, 0.994276206993634;
0.5, 0.6, 0.4, 0.0, 0.0, 0.993918567227454;
-0.5, -0.6, -0.4, 0.0, 0.0, 0.993918567227454;
-0.5, -0.5692307692307692, -0.4, 0.0, 0.0, 0.994276206993634;
-0.5, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9946151423208871;
-0.5, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9949353539956358;
-0.5, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9952368238616918;
-0.5, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9955195348219712;
-0.5, -0.41538461538461535, -0.4, 0.0, 0.0, 0.995783470840111;
-0.5, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9960286169419849;
-0.5, -0.35384615384615387, -0.4, 0.0, 0.0, 0.996254959217119;
-0.5, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9964624848200082;
-0.5, -0.29230769230769227, -0.4, 0.0, 0.0, 0.99665118197133;
-0.5, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9968210399590597;
-0.5, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9969720491394837;
-0.5, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9971042009381119;
-0.5, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9972174878504894;
-0.5, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9973119034429061;
-0.5, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9973874423530066;
-0.5, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9974441002902973;
-0.5, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9974818740365522;
-0.5, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9975007614461183;
-0.5, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9975007614461183;
-0.5, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9974818740365522;
-0.5, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9974441002902973;
-0.5, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9973874423530066;
-0.5, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9973119034429061;
-0.5, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9972174878504894;
-0.5, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9971042009381119;
-0.5, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9969720491394837;
-0.5, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9968210399590597;
-0.5, 0.29230769230769227, -0.4, 0.0, 0.0, 0.99665118197133;
-0.5, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9964624848200082;
-0.5, 0.35384615384615387, -0.4, 0.0, 0.0, 0.996254959217119;
-0.5, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9960286169419849;
-0.5, 0.41538461538461535, -0.4, 0.0, 0.0, 0.995783470840111;
-0.5, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9955195348219712;
-0.5, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9952368238616918;
-0.5, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9949353539956358;
-0.5, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9946151423208871;
-0.5, 0.5692307692307692, -0.4, 0.0, 0.0, 0.994276206993634;
-0.5, 0.6, -0.4, 0.0, 0.0, 0.993918567227454;
-0.47435897435897434, -0.6, -0.4, 0.0, 0.0, 0.9941669145250005;
-0.47435897435897434, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9945246436535008;
-0.47435897435897434, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9948636636694551;
-0.47435897435897434, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9951839553544851;
-0.47435897435897434, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9954855005478657;
-0.47435897435897434, -0.4461538461538462, -0.4, 0.0, 0.0, 0.995768282148241;
-0.47435897435897434, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9960322841152413;
-0.47435897435897434, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9962774914709983;
-0.47435897435897434, -0.35384615384615387, -0.4, 0.0, 0.0, 0.996503890301563;
-0.47435897435897434, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9967114677582198;
-0.47435897435897434, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9969002120587037;
-0.47435897435897434, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9970701124883131;
-0.47435897435897434, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9972211594009248;
-0.47435897435897434, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9973533442199062;
-0.47435897435897434, -0.1692307692307692, -0.4, 0.0, 0.0, 0.997466659438927;
-0.47435897435897434, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9975610986226701;
-0.47435897435897434, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9976366564074398;
-0.47435897435897434, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9976933285016705;
-0.47435897435897434, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9977311116863322;
-0.47435897435897434, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9977500038152358;
-0.47435897435897434, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9977500038152358;
-0.47435897435897434, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9977311116863322;
-0.47435897435897434, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9976933285016705;
-0.47435897435897434, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9976366564074398;
-0.47435897435897434, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9975610986226701;
-0.47435897435897434, 0.1692307692307692, -0.4, 0.0, 0.0, 0.997466659438927;
-0.47435897435897434, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9973533442199062;
-0.47435897435897434, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9972211594009248;
-0.47435897435897434, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9970701124883131;
-0.47435897435897434, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9969002120587037;
-0.47435897435897434, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9967114677582198;
-0.47435897435897434, 0.35384615384615387, -0.4, 0.0, 0.0, 0.996503890301563;
-0.47435897435897434, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9962774914709983;
-0.47435897435897434, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9960322841152413;
-0.47435897435897434, 0.4461538461538462, -0.4, 0.0, 0.0, 0.995768282148241;
-0.47435897435897434, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9954855005478657;
-0.47435897435897434, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9951839553544851;
-0.47435897435897434, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9948636636694551;
-0.47435897435897434, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9945246436535008;
-0.47435897435897434, 0.6, -0.4, 0.0, 0.0, 0.9941669145250005;
-0.44871794871794873, -0.6, -0.4, 0.0, 0.0, 0.9944022481526211;
-0.44871794871794873, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9947600619607585;
-0.44871794871794873, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9950991622276335;
-0.44871794871794873, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9954195297303184;
-0.44871794871794873, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9957211463037894;
-0.44871794871794873, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9960039948426426;
-0.44871794871794873, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9962680593027107;
-0.44871794871794873, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9965133247025806;
-0.44871794871794873, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9967397771250093;
-0.44871794871794873, -0.32307692307692304, -0.4, 0.0, 0.0, 0.99694740371824;
-0.44871794871794873, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9971361926972182;
-0.44871794871794873, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9973061333447063;
-0.44871794871794873, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9974572160122978;
-0.44871794871794873, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9975894321213296;
-0.44871794871794873, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9977027741636949;
-0.44871794871794873, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9977972357025529;
-0.44871794871794873, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9978728113729386;
-0.44871794871794873, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9979294968822702;
-0.44871794871794873, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9979672890107559;
-0.44871794871794873, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9979861856116986;
-0.44871794871794873, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9979861856116986;
-0.44871794871794873, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9979672890107559;
-0.44871794871794873, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9979294968822702;
-0.44871794871794873, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9978728113729386;
-0.44871794871794873, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9977972357025529;
-0.44871794871794873, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9977027741636949;
-0.44871794871794873, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9975894321213296;
-0.44871794871794873, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9974572160122978;
-0.44871794871794873, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9973061333447063;
-0.44871794871794873, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9971361926972182;
-0.44871794871794873, 0.32307692307692304, -0.4, 0.0, 0.0, 0.99694740371824;
-0.44871794871794873, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9967397771250093;
-0.44871794871794873, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9965133247025806;
-0.44871794871794873, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9962680593027107;
-0.44871794871794873, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9960039948426426;
-0.44871794871794873, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9957211463037894;
-0.44871794871794873, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9954195297303184;
-0.44871794871794873, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9950991622276335;
-0.44871794871794873, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9947600619607585;
-0.44871794871794873, 0.6, -0.4, 0.0, 0.0, 0.9944022481526211;
-0.4230769230769231, -0.6, -0.4, 0.0, 0.0, 0.9946245588401824;
-0.4230769230769231, -0.5692307692307692, -0.4, 0.0, 0.0, 0.994982452641938;
-0.4230769230769231, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9953216287187918;
-0.4230769230769231, -0.5076923076923077, -0.4, 0.0, 0.0, 0.995642067843519;
-0.4230769230769231, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9959437518470345;
-0.4230769230769231, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9962266636201103;
-0.4230769230769231, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9964907871149923;
-0.4230769230769231, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9967361073469182;
-0.4230769230769231, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9969626103955334;
-0.4230769230769231, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9971702834062081;
-0.4230769230769231, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9973591145912531;
-0.4230769230769231, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9975290932310349;
-0.4230769230769231, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9976802096749897;
-0.4230769230769231, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9978124553425369;
-0.4230769230769231, -0.1692307692307692, -0.4, 0.0, 0.0, 0.997925822723891;
-0.4230769230769231, -0.13846153846153847, -0.4, 0.0, 0.0, 0.998020305380772;
-0.4230769230769231, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9980958979470158;
-0.4230769230769231, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9981525961290808;
-0.4230769230769231, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9981903967064554;
-0.4230769230769231, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9982092975319624;
-0.4230769230769231, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9982092975319624;
-0.4230769230769231, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9981903967064554;
-0.4230769230769231, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9981525961290808;
-0.4230769230769231, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9980958979470158;
-0.4230769230769231, 0.13846153846153847, -0.4, 0.0, 0.0, 0.998020305380772;
-0.4230769230769231, 0.1692307692307692, -0.4, 0.0, 0.0, 0.997925822723891;
-0.4230769230769231, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9978124553425369;
-0.4230769230769231, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9976802096749897;
-0.4230769230769231, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9975290932310349;
-0.4230769230769231, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9973591145912531;
-0.4230769230769231, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9971702834062081;
-0.4230769230769231, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9969626103955334;
-0.4230769230769231, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9967361073469182;
-0.4230769230769231, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9964907871149923;
-0.4230769230769231, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9962266636201103;
-0.4230769230769231, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9959437518470345;
-0.4230769230769231, 0.5076923076923077, -0.4, 0.0, 0.0, 0.995642067843519;
-0.4230769230769231, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9953216287187918;
-0.4230769230769231, 0.5692307692307692, -0.4, 0.0, 0.0, 0.994982452641938;
-0.4230769230769231, 0.6, -0.4, 0.0, 0.0, 0.9946245588401824;
-0.3974358974358974, -0.6, -0.4, 0.0, 0.0, 0.9948338378291982;
-0.3974358974358974, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9951918069354013;
-0.3974358974358974, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9955310543783057;
-0.3974358974358974, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9958515609266406;
-0.3974358974358974, -0.4769230769230769, -0.4, 0.0, 0.0, 0.996153308407498;
-0.3974358974358974, -0.4461538461538462, -0.4, 0.0, 0.0, 0.99643627970805;
-0.3974358974358974, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9967004587771662;
-0.3974358974358974, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9969458306269308;
-0.3974358974358974, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9971723813340605;
-0.3974358974358974, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9973800980412209;
-0.3974358974358974, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9975689689582423;
-0.3974358974358974, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9977389833632357;
-0.3974358974358974, -0.23076923076923078, -0.4, 0.0, 0.0, 0.997890131603607;
-0.3974358974358974, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9980224050969698;
-0.3974358974358974, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9981357963319586;
-0.3974358974358974, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9982302988689389;
-0.3974358974358974, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9983059073406172;
-0.3974358974358974, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9983626174525487;
-0.3974358974358974, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9984004259835442;
-0.3974358974358974, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9984193307859746;
-0.3974358974358974, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9984193307859746;
-0.3974358974358974, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9984004259835442;
-0.3974358974358974, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9983626174525487;
-0.3974358974358974, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9983059073406172;
-0.3974358974358974, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9982302988689389;
-0.3974358974358974, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9981357963319586;
-0.3974358974358974, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9980224050969698;
-0.3974358974358974, 0.23076923076923078, -0.4, 0.0, 0.0, 0.997890131603607;
-0.3974358974358974, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9977389833632357;
-0.3974358974358974, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9975689689582423;
-0.3974358974358974, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9973800980412209;
-0.3974358974358974, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9971723813340605;
-0.3974358974358974, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9969458306269308;
-0.3974358974358974, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9967004587771662;
-0.3974358974358974, 0.4461538461538462, -0.4, 0.0, 0.0, 0.99643627970805;
-0.3974358974358974, 0.4769230769230769, -0.4, 0.0, 0.0, 0.996153308407498;
-0.3974358974358974, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9958515609266406;
-0.3974358974358974, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9955310543783057;
-0.3974358974358974, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9951918069354013;
-0.3974358974358974, 0.6, -0.4, 0.0, 0.0, 0.9948338378291982;
-0.3717948717948718, -0.6, -0.4, 0.0, 0.0, 0.9950300768734045;
-0.3717948717948718, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9953881165919175;
-0.3717948717948718, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9957274309541319;
-0.3717948717948718, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9960480007249832;
-0.3717948717948718, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9963498077279789;
-0.3717948717948718, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9966328348469153;
-0.3717948717948718, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9968970660274957;
-0.3717948717948718, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997142486278848;
-0.3717948717948718, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9973690816749424;
-0.3717948717948718, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9975768393559082;
-0.3717948717948718, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9977657475292501;
-0.3717948717948718, -0.26153846153846155, -0.4, 0.0, 0.0, 0.997935795470964;
-0.3717948717948718, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9980869735265516;
-0.3717948717948718, -0.19999999999999998, -0.4, 0.0, 0.0, 0.998219273111934;
-0.3717948717948718, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9983326867142637;
-0.3717948717948718, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9984272078926361;
-0.3717948717948718, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9985028312786987;
-0.3717948717948718, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9985595525771598;
-0.3717948717948718, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9985973685661946;
-0.3717948717948718, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9986162770977507;
-0.3717948717948718, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9986162770977507;
-0.3717948717948718, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9985973685661946;
-0.3717948717948718, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9985595525771598;
-0.3717948717948718, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9985028312786987;
-0.3717948717948718, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9984272078926361;
-0.3717948717948718, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9983326867142637;
-0.3717948717948718, 0.19999999999999998, -0.4, 0.0, 0.0, 0.998219273111934;
-0.3717948717948718, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9980869735265516;
-0.3717948717948718, 0.26153846153846155, -0.4, 0.0, 0.0, 0.997935795470964;
-0.3717948717948718, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9977657475292501;
-0.3717948717948718, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9975768393559082;
-0.3717948717948718, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9973690816749424;
-0.3717948717948718, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997142486278848;
-0.3717948717948718, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9968970660274957;
-0.3717948717948718, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9966328348469153;
-0.3717948717948718, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9963498077279789;
-0.3717948717948718, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9960480007249832;
-0.3717948717948718, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9957274309541319;
-0.3717948717948718, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9953881165919175;
-0.3717948717948718, 0.6, -0.4, 0.0, 0.0, 0.9950300768734045;
-0.34615384615384615, -0.6, -0.4, 0.0, 0.0, 0.9952132682393011;
-0.34615384615384615, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9955713738752037;
-0.34615384615384615, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9959107507073502;
-0.34615384615384615, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9962313794971354;
-0.34615384615384615, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9965332420647199;
-0.34615384615384615, -0.4461538461538462, -0.4, 0.0, 0.0, 0.996816321290749;
-0.34615384615384615, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9970806011179704;
-0.34615384615384615, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997326066552752;
-0.34615384615384615, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9975527036665001;
-0.34615384615384615, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9977604995969762;
-0.34615384615384615, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9979494425495143;
-0.34615384615384615, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9981195217981359;
-0.34615384615384615, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9982707276865651;
-0.34615384615384615, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9984030516291427;
-0.34615384615384615, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9985164861116379;
-0.34615384615384615, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9986110246919603;
-0.34615384615384615, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9986866620007694;
-0.34615384615384615, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9987433937419823;
-0.34615384615384615, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9987812166931813;
-0.34615384615384615, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9988001287059182;
-0.34615384615384615, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9988001287059182;
-0.34615384615384615, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9987812166931813;
-0.34615384615384615, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9987433937419823;
-0.34615384615384615, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9986866620007694;
-0.34615384615384615, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9986110246919603;
-0.34615384615384615, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9985164861116379;
-0.34615384615384615, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9984030516291427;
-0.34615384615384615, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9982707276865651;
-0.34615384615384615, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9981195217981359;
-0.34615384615384615, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9979494425495143;
-0.34615384615384615, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9977604995969762;
-0.34615384615384615, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9975527036665001;
-0.34615384615384615, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997326066552752;
-0.34615384615384615, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9970806011179704;
-0.34615384615384615, 0.4461538461538462, -0.4, 0.0, 0.0, 0.996816321290749;
-0.34615384615384615, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9965332420647199;
-0.34615384615384615, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9962313794971354;
-0.34615384615384615, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9959107507073502;
-0.34615384615384615, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9955713738752037;
-0.34615384615384615, 0.6, -0.4, 0.0, 0.0, 0.9952132682393011;
-0.32051282051282054, -0.6, -0.4, 0.0, 0.0, 0.9953834047066601;
-0.32051282051282054, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9957415715624335;
-0.32051282051282054, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9960810064126724;
-0.32051282051282054, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9964016900154824;
-0.32051282051282054, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9967036041879164;
-0.32051282051282054, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9969867318076929;
-0.32051282051282054, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9972510568148145;
-0.32051282051282054, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997496564213086;
-0.32051282051282054, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9977232400715325;
-0.32051282051282054, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9979310715257167;
-0.32051282051282054, -0.29230769230769227, -0.4, 0.0, 0.0, 0.998120046778956;
-0.32051282051282054, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9982901551034385;
-0.32051282051282054, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9984413868412374;
-0.32051282051282054, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9985737334052257;
-0.32051282051282054, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9986871872798881;
-0.32051282051282054, -0.13846153846153847, -0.4, 0.0, 0.0, 0.998781742022033;
-0.32051282051282054, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9988573922614017;
-0.32051282051282054, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9989141337011771;
-0.32051282051282054, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9989519631183904;
-0.32051282051282054, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9989708783642264;
-0.32051282051282054, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9989708783642264;
-0.32051282051282054, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9989519631183904;
-0.32051282051282054, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9989141337011771;
-0.32051282051282054, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9988573922614017;
-0.32051282051282054, 0.13846153846153847, -0.4, 0.0, 0.0, 0.998781742022033;
-0.32051282051282054, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9986871872798881;
-0.32051282051282054, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9985737334052257;
-0.32051282051282054, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9984413868412374;
-0.32051282051282054, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9982901551034385;
-0.32051282051282054, 0.29230769230769227, -0.4, 0.0, 0.0, 0.998120046778956;
-0.32051282051282054, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9979310715257167;
-0.32051282051282054, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9977232400715325;
-0.32051282051282054, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997496564213086;
-0.32051282051282054, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9972510568148145;
-0.32051282051282054, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9969867318076929;
-0.32051282051282054, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9967036041879164;
-0.32051282051282054, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9964016900154824;
-0.32051282051282054, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9960810064126724;
-0.32051282051282054, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9957415715624335;
-0.32051282051282054, 0.6, -0.4, 0.0, 0.0, 0.9953834047066601;
-0.2948717948717949, -0.6, -0.4, 0.0, 0.0, 0.9955404795689989;
-0.2948717948717949, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9958987029447116;
-0.2948717948717949, -0.5384615384615384, -0.4, 0.0, 0.0, 0.996238191358916;
-0.2948717948717949, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9965589255666814;
-0.2948717948717949, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9968608873821913;
-0.2948717948717949, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9971440596804622;
-0.2948717948717949, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9974084263989624;
-0.2948717948717949, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9976539725391304;
-0.2948717948717949, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9978806841677927;
-0.2948717948717949, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9980885484184822;
-0.2948717948717949, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9982775534926547;
-0.2948717948717949, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9984476886608051;
-0.2948717948717949, -0.23076923076923078, -0.4, 0.0, 0.0, 0.998598944263483;
-0.2948717948717949, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9987313117122059;
-0.2948717948717949, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9988447834902728;
-0.2948717948717949, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9989393531534753;
-0.2948717948717949, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9990150153307071;
-0.2948717948717949, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9990717657244733;
-0.2948717948717949, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9991096011112964;
-0.2948717948717949, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9991285193420221;
-0.2948717948717949, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9991285193420221;
-0.2948717948717949, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9991096011112964;
-0.2948717948717949, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9990717657244733;
-0.2948717948717949, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9990150153307071;
-0.2948717948717949, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9989393531534753;
-0.2948717948717949, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9988447834902728;
-0.2948717948717949, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9987313117122059;
-0.2948717948717949, 0.23076923076923078, -0.4, 0.0, 0.0, 0.998598944263483;
-0.2948717948717949, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9984476886608051;
-0.2948717948717949, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9982775534926547;
-0.2948717948717949, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9980885484184822;
-0.2948717948717949, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9978806841677927;
-0.2948717948717949, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9976539725391304;
-0.2948717948717949, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9974084263989624;
-0.2948717948717949, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9971440596804622;
-0.2948717948717949, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9968608873821913;
-0.2948717948717949, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9965589255666814;
-0.2948717948717949, 0.5384615384615384, -0.4, 0.0, 0.0, 0.996238191358916;
-0.2948717948717949, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9958987029447116;
-0.2948717948717949, 0.6, -0.4, 0.0, 0.0, 0.9955404795689989;
-0.2692307692307692, -0.6, -0.4, 0.0, 0.0, 0.9956844866340222;
-0.2692307692307692, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9960427618275143;
-0.2692307692307692, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9963822993494458;
-0.2692307692307692, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9967030799521021;
-0.2692307692307692, -0.4769230769230769, -0.4, 0.0, 0.0, 0.997005085447036;
-0.2692307692307692, -0.4461538461538462, -0.4, 0.0, 0.0, 0.997288298706787;
-0.2692307692307692, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9975527036665001;
-0.2692307692307692, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9977982853254437;
-0.2692307692307692, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9980250297484291;
-0.2692307692307692, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9982329240671282;
-0.2692307692307692, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9984219564812898;
-0.2692307692307692, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9985921162598572;
-0.2692307692307692, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9987433937419823;
-0.2692307692307692, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9988757803379406;
-0.2692307692307692, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9989892685299435;
-0.2692307692307692, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9990838518728504;
-0.2692307692307692, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9991595249947786;
-0.2692307692307692, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9992162835976108;
-0.2692307692307692, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9992541244574038;
-0.2692307692307692, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9992730454246921;
-0.2692307692307692, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9992730454246921;
-0.2692307692307692, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9992541244574038;
-0.2692307692307692, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9992162835976108;
-0.2692307692307692, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9991595249947786;
-0.2692307692307692, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9990838518728504;
-0.2692307692307692, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9989892685299435;
-0.2692307692307692, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9988757803379406;
-0.2692307692307692, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9987433937419823;
-0.2692307692307692, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9985921162598572;
-0.2692307692307692, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9984219564812898;
-0.2692307692307692, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9982329240671282;
-0.2692307692307692, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9980250297484291;
-0.2692307692307692, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9977982853254437;
-0.2692307692307692, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9975527036665001;
-0.2692307692307692, 0.4461538461538462, -0.4, 0.0, 0.0, 0.997288298706787;
-0.2692307692307692, 0.4769230769230769, -0.4, 0.0, 0.0, 0.997005085447036;
-0.2692307692307692, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9967030799521021;
-0.2692307692307692, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9963822993494458;
-0.2692307692307692, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9960427618275143;
-0.2692307692307692, 0.6, -0.4, 0.0, 0.0, 0.9956844866340222;
-0.24358974358974358, -0.6, -0.4, 0.0, 0.0, 0.995815420224028;
-0.24358974358974358, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9961737425310967;
-0.24358974358974358, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9965133247025806;
-0.24358974358974358, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9968341474882341;
-0.24358974358974358, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9971361926972182;
-0.24358974358974358, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9974194431998201;
-0.24358974358974358, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9976838829290721;
-0.24358974358974358, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9979294968822702;
-0.24358974358974358, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9981562711223932;
-0.24358974358974358, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9983641927794208;
-0.24358974358974358, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9985532500515499;
-0.24358974358974358, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9987234322063128;
-0.24358974358974358, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9988747295815907;
-0.24358974358974358, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9990071335865299;
-0.24358974358974358, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9991206367023533;
-0.24358974358974358, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9992152324830725;
-0.24358974358974358, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9992909155560982;
-0.24358974358974358, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9993476816227483;
-0.24358974358974358, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9993855274586554;
-0.24358974358974358, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9994044509140714;
-0.24358974358974358, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9994044509140714;
-0.24358974358974358, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9993855274586554;
-0.24358974358974358, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9993476816227483;
-0.24358974358974358, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9992909155560982;
-0.24358974358974358, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9992152324830725;
-0.24358974358974358, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9991206367023533;
-0.24358974358974358, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9990071335865299;
-0.24358974358974358, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9988747295815907;
-0.24358974358974358, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9987234322063128;
-0.24358974358974358, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9985532500515499;
-0.24358974358974358, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9983641927794208;
-0.24358974358974358, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9981562711223932;
-0.24358974358974358, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9979294968822702;
-0.24358974358974358, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9976838829290721;
-0.24358974358974358, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9974194431998201;
-0.24358974358974358, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9971361926972182;
-0.24358974358974358, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9968341474882341;
-0.24358974358974358, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9965133247025806;
-0.24358974358974358, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9961737425310967;
-0.24358974358974358, 0.6, -0.4, 0.0, 0.0, 0.995815420224028;
-0.21794871794871795, -0.6, -0.4, 0.0, 0.0, 0.995933275176281;
-0.21794871794871795, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9962916398908658;
-0.21794871794871795, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9966312622519669;
-0.21794871794871795, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9969521230070606;
-0.21794871794871795, -0.4769230769230769, -0.4, 0.0, 0.0, 0.997254203963155;
-0.21794871794871795, -0.4461538461538462, -0.4, 0.0, 0.0, 0.99753748798851;
-0.21794871794871795, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9978019590142564;
-0.21794871794871795, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9980476020359145;
-0.21794871794871795, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9982744031148139;
-0.21794871794871795, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9984823493794106;
-0.21794871794871795, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9986714290265054;
-0.21794871794871795, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9988416313223599;
-0.21794871794871795, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9989929466037123;
-0.21794871794871795, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9991253662786918;
-0.21794871794871795, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9992388828276313;
-0.21794871794871795, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9993334898037799;
-0.21794871794871795, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9994091818339121;
-0.21794871794871795, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9994659546188376;
-0.21794871794871795, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9995038049338069;
-0.21794871794871795, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9995227306288175;
-0.21794871794871795, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9995227306288175;
-0.21794871794871795, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9995038049338069;
-0.21794871794871795, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9994659546188376;
-0.21794871794871795, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9994091818339121;
-0.21794871794871795, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9993334898037799;
-0.21794871794871795, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9992388828276313;
-0.21794871794871795, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9991253662786918;
-0.21794871794871795, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9989929466037123;
-0.21794871794871795, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9988416313223599;
-0.21794871794871795, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9986714290265054;
-0.21794871794871795, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9984823493794106;
-0.21794871794871795, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9982744031148139;
-0.21794871794871795, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9980476020359145;
-0.21794871794871795, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9978019590142564;
-0.21794871794871795, 0.4461538461538462, -0.4, 0.0, 0.0, 0.99753748798851;
-0.21794871794871795, 0.4769230769230769, -0.4, 0.0, 0.0, 0.997254203963155;
-0.21794871794871795, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9969521230070606;
-0.21794871794871795, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9966312622519669;
-0.21794871794871795, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9962916398908658;
-0.21794871794871795, 0.6, -0.4, 0.0, 0.0, 0.995933275176281;
-0.19230769230769232, -0.6, -0.4, 0.0, 0.0, 0.9960380468433517;
-0.19230769230769232, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9963964492577196;
-0.19230769230769232, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9967361073469182;
-0.19230769230769232, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9970570018563978;
-0.19230769230769232, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9973591145912531;
-0.19230769230769232, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9976424284179416;
-0.19230769230769232, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9979069272659035;
-0.19230769230769232, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9981525961290808;
-0.19230769230769232, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9983794210673367;
-0.19230769230769232, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9985873892077732;
-0.19230769230769232, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9987764887459495;
-0.19230769230769232, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9989467089469978;
-0.19230769230769232, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9990980401466397;
-0.19230769230769232, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9992304737521007;
-0.19230769230769232, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9993440022429226;
-0.19230769230769232, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9994386191716763;
-0.19230769230769232, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9995143191645712;
-0.19230769230769232, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9995710979219643;
-0.19230769230769232, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9996089522187672;
-0.19230769230769232, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9996278799047512;
-0.19230769230769232, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9996278799047512;
-0.19230769230769232, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9996089522187672;
-0.19230769230769232, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9995710979219643;
-0.19230769230769232, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9995143191645712;
-0.19230769230769232, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9994386191716763;
-0.19230769230769232, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9993440022429226;
-0.19230769230769232, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9992304737521007;
-0.19230769230769232, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9990980401466397;
-0.19230769230769232, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9989467089469978;
-0.19230769230769232, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9987764887459495;
-0.19230769230769232, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9985873892077732;
-0.19230769230769232, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9983794210673367;
-0.19230769230769232, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9981525961290808;
-0.19230769230769232, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9979069272659035;
-0.19230769230769232, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9976424284179416;
-0.19230769230769232, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9973591145912531;
-0.19230769230769232, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9970570018563978;
-0.19230769230769232, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9967361073469182;
-0.19230769230769232, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9963964492577196;
-0.19230769230769232, 0.6, -0.4, 0.0, 0.0, 0.9960380468433517;
-0.16666666666666666, -0.6, -0.4, 0.0, 0.0, 0.9961297310934222;
-0.16666666666666666, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9964881664983538;
-0.16666666666666666, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9968278558527206;
-0.16666666666666666, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9971487799002009;
-0.16666666666666666, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9974509204442142;
-0.16666666666666666, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9977342603496412;
-0.16666666666666666, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9979987835444426;
-0.16666666666666666, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9982444750211793;
-0.16666666666666666, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9984713208384312;
-0.16666666666666666, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9986793081221154;
-0.16666666666666666, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9988684250667044;
-0.16666666666666666, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9990386609363423;
-0.16666666666666666, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9991900060658614;
-0.16666666666666666, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9993224518616958;
-0.16666666666666666, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9994359908026954;
-0.16666666666666666, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9995306164408375;
-0.16666666666666666, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9996063234018367;
-0.16666666666666666, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9996631073856544;
-0.16666666666666666, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9997009651669054;
-0.16666666666666666, -0.015384615384615384, -0.4, 0.0, 0.0, 0.999719894595163;
-0.16666666666666666, 0.015384615384615384, -0.4, 0.0, 0.0, 0.999719894595163;
-0.16666666666666666, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9997009651669054;
-0.16666666666666666, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9996631073856544;
-0.16666666666666666, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9996063234018367;
-0.16666666666666666, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9995306164408375;
-0.16666666666666666, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9994359908026954;
-0.16666666666666666, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9993224518616958;
-0.16666666666666666, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9991900060658614;
-0.16666666666666666, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9990386609363423;
-0.16666666666666666, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9988684250667044;
-0.16666666666666666, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9986793081221154;
-0.16666666666666666, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9984713208384312;
-0.16666666666666666, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9982444750211793;
-0.16666666666666666, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9979987835444426;
-0.16666666666666666, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9977342603496412;
-0.16666666666666666, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9974509204442142;
-0.16666666666666666, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9971487799002009;
-0.16666666666666666, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9968278558527206;
-0.16666666666666666, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9964881664983538;
-0.16666666666666666, 0.6, -0.4, 0.0, 0.0, 0.9961297310934222;
-0.14102564102564102, -0.6, -0.4, 0.0, 0.0, 0.9962083243105572;
-0.14102564102564102, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9965667879955317;
-0.14102564102564102, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9969065041509048;
-0.14102564102564102, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9972274535188353;
-0.14102564102564102, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9975296179013073;
-0.14102564102564102, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9978129801618493;
-0.14102564102564102, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9980775242271541;
-0.14102564102564102, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9983232350885984;
-0.14102564102564102, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9985500988036622;
-0.14102564102564102, -0.32307692307692304, -0.4, 0.0, 0.0, 0.998758102497247;
-0.14102564102564102, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9989472343628935;
-0.14102564102564102, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9991174836638991;
-0.14102564102564102, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9992688407343333;
-0.14102564102564102, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9994012969799524;
-0.14102564102564102, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9995148448790128;
-0.14102564102564102, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9996094779829829;
-0.14102564102564102, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9996851909171536;
-0.14102564102564102, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9997419793811468;
-0.14102564102564102, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9997798401493228;
-0.14102564102564102, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9997987710710852;
-0.14102564102564102, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9997987710710852;
-0.14102564102564102, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9997798401493228;
-0.14102564102564102, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9997419793811468;
-0.14102564102564102, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9996851909171536;
-0.14102564102564102, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9996094779829829;
-0.14102564102564102, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9995148448790128;
-0.14102564102564102, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9994012969799524;
-0.14102564102564102, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9992688407343333;
-0.14102564102564102, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9991174836638991;
-0.14102564102564102, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9989472343628935;
-0.14102564102564102, 0.32307692307692304, -0.4, 0.0, 0.0, 0.998758102497247;
-0.14102564102564102, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9985500988036622;
-0.14102564102564102, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9983232350885984;
-0.14102564102564102, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9980775242271541;
-0.14102564102564102, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9978129801618493;
-0.14102564102564102, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9975296179013073;
-0.14102564102564102, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9972274535188353;
-0.14102564102564102, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9969065041509048;
-0.14102564102564102, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9965667879955317;
-0.14102564102564102, 0.6, -0.4, 0.0, 0.0, 0.9962083243105572;
-0.11538461538461539, -0.6, -0.4, 0.0, 0.0, 0.996273823394942;
-0.11538461538461539, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9966323106483235;
-0.11538461538461539, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9969720491394837;
-0.11538461538461539, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9972930196093156;
-0.11538461538461539, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9975952038586066;
-0.11538461538461539, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9978785847497583;
-0.11538461538461539, -0.41538461538461535, -0.4, 0.0, 0.0, 0.998143146208407;
-0.11538461538461539, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9983888732249427;
-0.11538461538461539, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9986157518559284;
-0.11538461538461539, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9988237692254193;
-0.11538461538461539, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9990129135261797;
-0.11538461538461539, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9991831740208013;
-0.11538461538461539, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9993345410427178;
-0.11538461538461539, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9994670059971206;
-0.11538461538461539, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9995805613617715;
-0.11538461538461539, -0.13846153846153847, -0.4, 0.0, 0.0, 0.999675200687715;
-0.11538461538461539, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9997509185998885;
-0.11538461538461539, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998077107976313;
-0.11538461538461539, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9998455740550914;
-0.11538461538461539, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9998645062215313;
-0.11538461538461539, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9998645062215313;
-0.11538461538461539, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9998455740550914;
-0.11538461538461539, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998077107976313;
-0.11538461538461539, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9997509185998885;
-0.11538461538461539, 0.13846153846153847, -0.4, 0.0, 0.0, 0.999675200687715;
-0.11538461538461539, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9995805613617715;
-0.11538461538461539, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9994670059971206;
-0.11538461538461539, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9993345410427178;
-0.11538461538461539, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9991831740208013;
-0.11538461538461539, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9990129135261797;
-0.11538461538461539, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9988237692254193;
-0.11538461538461539, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9986157518559284;
-0.11538461538461539, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9983888732249427;
-0.11538461538461539, 0.41538461538461535, -0.4, 0.0, 0.0, 0.998143146208407;
-0.11538461538461539, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9978785847497583;
-0.11538461538461539, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9975952038586066;
-0.11538461538461539, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9972930196093156;
-0.11538461538461539, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9969720491394837;
-0.11538461538461539, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9966323106483235;
-0.11538461538461539, 0.6, -0.4, 0.0, 0.0, 0.996273823394942;
-0.08974358974358974, -0.6, -0.4, 0.0, 0.0, 0.9963262257630866;
-0.08974358974358974, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9966847318723093;
-0.08974358974358974, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9970244882331566;
-0.08974358974358974, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9973454755855086;
-0.08974358974358974, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9976476757291951;
-0.08974358974358974, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979310715257167;
-0.08974358974358974, -0.41538461538461535, -0.4, 0.0, 0.0, 0.998195646899864;
-0.08974358974358974, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9984413868412374;
-0.08974358974358974, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9986682774056669;
-0.08974358974358974, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9988763057165299;
-0.08974358974358974, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9990654599659702;
-0.08974358974358974, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9992357294160144;
-0.08974358974358974, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9993871043995878;
-0.08974358974358974, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995195763214298;
-0.08974358974358974, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996331376589066;
-0.08974358974358974, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997277819627233;
-0.08974358974358974, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998035038575347;
-0.08974358974358974, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998602990424539;
-0.08974358974358974, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9998981642914593;
-0.08974358974358974, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999170974537;
-0.08974358974358974, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999170974537;
-0.08974358974358974, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9998981642914593;
-0.08974358974358974, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998602990424539;
-0.08974358974358974, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998035038575347;
-0.08974358974358974, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997277819627233;
-0.08974358974358974, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996331376589066;
-0.08974358974358974, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995195763214298;
-0.08974358974358974, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9993871043995878;
-0.08974358974358974, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9992357294160144;
-0.08974358974358974, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9990654599659702;
-0.08974358974358974, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9988763057165299;
-0.08974358974358974, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9986682774056669;
-0.08974358974358974, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9984413868412374;
-0.08974358974358974, 0.41538461538461535, -0.4, 0.0, 0.0, 0.998195646899864;
-0.08974358974358974, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979310715257167;
-0.08974358974358974, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9976476757291951;
-0.08974358974358974, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9973454755855086;
-0.08974358974358974, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9970244882331566;
-0.08974358974358974, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9966847318723093;
-0.08974358974358974, 0.6, -0.4, 0.0, 0.0, 0.9963262257630866;
-0.0641025641025641, -0.6, -0.4, 0.0, 0.0, 0.9963655293479949;
-0.0641025641025641, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9967240495997494;
-0.0641025641025641, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9970638193634789;
-0.0641025641025641, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9973848193783035;
-0.0641025641025641, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9976870314433354;
-0.0641025641025641, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979704384193988;
-0.0641025641025641, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982350242306504;
-0.0641025641025641, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9984807738660983;
-0.0641025641025641, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987076733810224;
-0.0641025641025641, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9989157098982923;
-0.0641025641025641, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991048716095858;
-0.0641025641025641, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9992751477765061;
-0.0641025641025641, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994265287315971;
-0.0641025641025641, -0.19999999999999998, -0.4, 0.0, 0.0, 0.999559005879259;
-0.0641025641025641, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996725716965613;
-0.0641025641025641, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997672197339548;
-0.0641025641025641, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998429446158822;
-0.0641025641025641, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998997420412867;
-0.0641025641025641, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999376087840197;
-0.0641025641025641, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999565426931456;
-0.0641025641025641, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999565426931456;
-0.0641025641025641, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999376087840197;
-0.0641025641025641, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998997420412867;
-0.0641025641025641, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998429446158822;
-0.0641025641025641, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997672197339548;
-0.0641025641025641, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996725716965613;
-0.0641025641025641, 0.19999999999999998, -0.4, 0.0, 0.0, 0.999559005879259;
-0.0641025641025641, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994265287315971;
-0.0641025641025641, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9992751477765061;
-0.0641025641025641, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991048716095858;
-0.0641025641025641, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9989157098982923;
-0.0641025641025641, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987076733810224;
-0.0641025641025641, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9984807738660983;
-0.0641025641025641, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982350242306504;
-0.0641025641025641, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979704384193988;
-0.0641025641025641, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9976870314433354;
-0.0641025641025641, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9973848193783035;
-0.0641025641025641, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9970638193634789;
-0.0641025641025641, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9967240495997494;
-0.0641025641025641, 0.6, -0.4, 0.0, 0.0, 0.9963655293479949;
-0.038461538461538464, -0.6, -0.4, 0.0, 0.0, 0.9963917325993011;
-0.038461538461538464, -0.5692307692307692, -0.4, 0.0, 0.0, 0.99675026227972;
-0.038461538461538464, -0.5384615384615384, -0.4, 0.0, 0.0, 0.997090040978998;
-0.038461538461538464, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9974110494357485;
-0.038461538461538464, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9977132694486053;
-0.038461538461538464, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979966838779417;
-0.038461538461538464, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982612766474914;
-0.038461538461538464, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9985070327458682;
-0.038461538461538464, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987339382279848;
-0.038461538461538464, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9989419802163725;
-0.038461538461538464, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991311469023985;
-0.038461538461538464, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9993014275473833;
-0.038461538461538464, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994528124836168;
-0.038461538461538464, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995852931152732;
-0.038461538461538464, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996988619192241;
-0.038461538461538464, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997935124457505;
-0.038461538461538464, -0.10769230769230768, -0.4, 0.0, 0.0, 0.999869239319154;
-0.038461538461538464, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9999260382382645;
-0.038461538461538464, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999639059768487;
-0.038461538461538464, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999828403839143;
-0.038461538461538464, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999828403839143;
-0.038461538461538464, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999639059768487;
-0.038461538461538464, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9999260382382645;
-0.038461538461538464, 0.10769230769230768, -0.4, 0.0, 0.0, 0.999869239319154;
-0.038461538461538464, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997935124457505;
-0.038461538461538464, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996988619192241;
-0.038461538461538464, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995852931152732;
-0.038461538461538464, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994528124836168;
-0.038461538461538464, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9993014275473833;
-0.038461538461538464, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991311469023985;
-0.038461538461538464, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9989419802163725;
-0.038461538461538464, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987339382279848;
-0.038461538461538464, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9985070327458682;
-0.038461538461538464, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982612766474914;
-0.038461538461538464, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979966838779417;
-0.038461538461538464, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9977132694486053;
-0.038461538461538464, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9974110494357485;
-0.038461538461538464, 0.5384615384615384, -0.4, 0.0, 0.0, 0.997090040978998;
-0.038461538461538464, 0.5692307692307692, -0.4, 0.0, 0.0, 0.99675026227972;
-0.038461538461538464, 0.6, -0.4, 0.0, 0.0, 0.9963917325993011;
-0.01282051282051282, -0.6, -0.4, 0.0, 0.0, 0.9964048344833711;
-0.01282051282051282, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9967633688782153;
-0.01282051282051282, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9971031520453556;
-0.01282051282051282, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9974241647231524;
-0.01282051282051282, -0.4769230769230769, -0.4, 0.0, 0.0, 0.99772638871;
-0.01282051282051282, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9980098068660463;
-0.01282051282051282, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982744031148139;
-0.01282051282051282, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9985201624447188;
-0.01282051282051282, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987470709104905;
-0.01282051282051282, -0.32307692307692304, -0.4, 0.0, 0.0, 0.998955115634491;
-0.01282051282051282, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991442848079322;
-0.01282051282051282, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9993145676919934;
-0.01282051282051282, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994659546188376;
-0.01282051282051282, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995984369925256;
-0.01282051282051282, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9997120072898301;
-0.01282051282051282, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9998066590609476;
-0.01282051282051282, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998823869301087;
-0.01282051282051282, -0.07692307692307691, -0.4, 0.0, 0.0, 0.999939186596087;
-0.01282051282051282, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999770548326067;
-0.01282051282051282, -0.015384615384615384, -0.4, 0.0, 0.0, 0.999995989488647;
-0.01282051282051282, 0.015384615384615384, -0.4, 0.0, 0.0, 0.999995989488647;
-0.01282051282051282, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999770548326067;
-0.01282051282051282, 0.07692307692307691, -0.4, 0.0, 0.0, 0.999939186596087;
-0.01282051282051282, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998823869301087;
-0.01282051282051282, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9998066590609476;
-0.01282051282051282, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9997120072898301;
-0.01282051282051282, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995984369925256;
-0.01282051282051282, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994659546188376;
-0.01282051282051282, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9993145676919934;
-0.01282051282051282, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991442848079322;
-0.01282051282051282, 0.32307692307692304, -0.4, 0.0, 0.0, 0.998955115634491;
-0.01282051282051282, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987470709104905;
-0.01282051282051282, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9985201624447188;
-0.01282051282051282, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982744031148139;
-0.01282051282051282, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9980098068660463;
-0.01282051282051282, 0.4769230769230769, -0.4, 0.0, 0.0, 0.99772638871;
-0.01282051282051282, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9974241647231524;
-0.01282051282051282, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9971031520453556;
-0.01282051282051282, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9967633688782153;
-0.01282051282051282, 0.6, -0.4, 0.0, 0.0, 0.9964048344833711;
0.01282051282051282, -0.6, -0.4, 0.0, 0.0, 0.9964048344833711;
0.01282051282051282, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9967633688782153;
0.01282051282051282, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9971031520453556;
0.01282051282051282, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9974241647231524;
0.01282051282051282, -0.4769230769230769, -0.4, 0.0, 0.0, 0.99772638871;
0.01282051282051282, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9980098068660463;
0.01282051282051282, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982744031148139;
0.01282051282051282, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9985201624447188;
0.01282051282051282, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987470709104905;
0.01282051282051282, -0.32307692307692304, -0.4, 0.0, 0.0, 0.998955115634491;
0.01282051282051282, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991442848079322;
0.01282051282051282, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9993145676919934;
0.01282051282051282, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994659546188376;
0.01282051282051282, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995984369925256;
0.01282051282051282, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9997120072898301;
0.01282051282051282, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9998066590609476;
0.01282051282051282, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998823869301087;
0.01282051282051282, -0.07692307692307691, -0.4, 0.0, 0.0, 0.999939186596087;
0.01282051282051282, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999770548326067;
0.01282051282051282, -0.015384615384615384, -0.4, 0.0, 0.0, 0.999995989488647;
0.01282051282051282, 0.015384615384615384, -0.4, 0.0, 0.0, 0.999995989488647;
0.01282051282051282, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999770548326067;
0.01282051282051282, 0.07692307692307691, -0.4, 0.0, 0.0, 0.999939186596087;
0.01282051282051282, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998823869301087;
0.01282051282051282, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9998066590609476;
0.01282051282051282, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9997120072898301;
0.01282051282051282, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995984369925256;
0.01282051282051282, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994659546188376;
0.01282051282051282, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9993145676919934;
0.01282051282051282, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991442848079322;
0.01282051282051282, 0.32307692307692304, -0.4, 0.0, 0.0, 0.998955115634491;
0.01282051282051282, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987470709104905;
0.01282051282051282, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9985201624447188;
0.01282051282051282, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982744031148139;
0.01282051282051282, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9980098068660463;
0.01282051282051282, 0.4769230769230769, -0.4, 0.0, 0.0, 0.99772638871;
0.01282051282051282, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9974241647231524;
0.01282051282051282, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9971031520453556;
0.01282051282051282, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9967633688782153;
0.01282051282051282, 0.6, -0.4, 0.0, 0.0, 0.9964048344833711;
0.038461538461538464, -0.6, -0.4, 0.0, 0.0, 0.9963917325993011;
0.038461538461538464, -0.5692307692307692, -0.4, 0.0, 0.0, 0.99675026227972;
0.038461538461538464, -0.5384615384615384, -0.4, 0.0, 0.0, 0.997090040978998;
0.038461538461538464, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9974110494357485;
0.038461538461538464, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9977132694486053;
0.038461538461538464, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979966838779417;
0.038461538461538464, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982612766474914;
0.038461538461538464, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9985070327458682;
0.038461538461538464, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987339382279848;
0.038461538461538464, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9989419802163725;
0.038461538461538464, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991311469023985;
0.038461538461538464, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9993014275473833;
0.038461538461538464, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994528124836168;
0.038461538461538464, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995852931152732;
0.038461538461538464, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996988619192241;
0.038461538461538464, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997935124457505;
0.038461538461538464, -0.10769230769230768, -0.4, 0.0, 0.0, 0.999869239319154;
0.038461538461538464, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9999260382382645;
0.038461538461538464, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999639059768487;
0.038461538461538464, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999828403839143;
0.038461538461538464, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999828403839143;
0.038461538461538464, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999639059768487;
0.038461538461538464, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9999260382382645;
0.038461538461538464, 0.10769230769230768, -0.4, 0.0, 0.0, 0.999869239319154;
0.038461538461538464, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997935124457505;
0.038461538461538464, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996988619192241;
0.038461538461538464, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995852931152732;
0.038461538461538464, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994528124836168;
0.038461538461538464, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9993014275473833;
0.038461538461538464, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991311469023985;
0.038461538461538464, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9989419802163725;
0.038461538461538464, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987339382279848;
0.038461538461538464, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9985070327458682;
0.038461538461538464, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982612766474914;
0.038461538461538464, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979966838779417;
0.038461538461538464, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9977132694486053;
0.038461538461538464, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9974110494357485;
0.038461538461538464, 0.5384615384615384, -0.4, 0.0, 0.0, 0.997090040978998;
0.038461538461538464, 0.5692307692307692, -0.4, 0.0, 0.0, 0.99675026227972;
0.038461538461538464, 0.6, -0.4, 0.0, 0.0, 0.9963917325993011;
0.0641025641025641, -0.6, -0.4, 0.0, 0.0, 0.9963655293479949;
0.0641025641025641, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9967240495997494;
0.0641025641025641, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9970638193634789;
0.0641025641025641, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9973848193783035;
0.0641025641025641, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9976870314433354;
0.0641025641025641, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979704384193988;
0.0641025641025641, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9982350242306504;
0.0641025641025641, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9984807738660983;
0.0641025641025641, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9987076733810224;
0.0641025641025641, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9989157098982923;
0.0641025641025641, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9991048716095858;
0.0641025641025641, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9992751477765061;
0.0641025641025641, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9994265287315971;
0.0641025641025641, -0.19999999999999998, -0.4, 0.0, 0.0, 0.999559005879259;
0.0641025641025641, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996725716965613;
0.0641025641025641, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997672197339548;
0.0641025641025641, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998429446158822;
0.0641025641025641, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998997420412867;
0.0641025641025641, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9999376087840197;
0.0641025641025641, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999565426931456;
0.0641025641025641, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999565426931456;
0.0641025641025641, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9999376087840197;
0.0641025641025641, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998997420412867;
0.0641025641025641, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998429446158822;
0.0641025641025641, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997672197339548;
0.0641025641025641, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996725716965613;
0.0641025641025641, 0.19999999999999998, -0.4, 0.0, 0.0, 0.999559005879259;
0.0641025641025641, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9994265287315971;
0.0641025641025641, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9992751477765061;
0.0641025641025641, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9991048716095858;
0.0641025641025641, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9989157098982923;
0.0641025641025641, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9987076733810224;
0.0641025641025641, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9984807738660983;
0.0641025641025641, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9982350242306504;
0.0641025641025641, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979704384193988;
0.0641025641025641, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9976870314433354;
0.0641025641025641, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9973848193783035;
0.0641025641025641, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9970638193634789;
0.0641025641025641, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9967240495997494;
0.0641025641025641, 0.6, -0.4, 0.0, 0.0, 0.9963655293479949;
0.08974358974358974, -0.6, -0.4, 0.0, 0.0, 0.9963262257630866;
0.08974358974358974, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9966847318723093;
0.08974358974358974, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9970244882331566;
0.08974358974358974, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9973454755855086;
0.08974358974358974, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9976476757291951;
0.08974358974358974, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9979310715257167;
0.08974358974358974, -0.41538461538461535, -0.4, 0.0, 0.0, 0.998195646899864;
0.08974358974358974, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9984413868412374;
0.08974358974358974, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9986682774056669;
0.08974358974358974, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9988763057165299;
0.08974358974358974, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9990654599659702;
0.08974358974358974, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9992357294160144;
0.08974358974358974, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9993871043995878;
0.08974358974358974, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9995195763214298;
0.08974358974358974, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9996331376589066;
0.08974358974358974, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9997277819627233;
0.08974358974358974, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9998035038575347;
0.08974358974358974, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998602990424539;
0.08974358974358974, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9998981642914593;
0.08974358974358974, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9999170974537;
0.08974358974358974, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9999170974537;
0.08974358974358974, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9998981642914593;
0.08974358974358974, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998602990424539;
0.08974358974358974, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9998035038575347;
0.08974358974358974, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9997277819627233;
0.08974358974358974, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9996331376589066;
0.08974358974358974, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9995195763214298;
0.08974358974358974, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9993871043995878;
0.08974358974358974, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9992357294160144;
0.08974358974358974, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9990654599659702;
0.08974358974358974, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9988763057165299;
0.08974358974358974, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9986682774056669;
0.08974358974358974, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9984413868412374;
0.08974358974358974, 0.41538461538461535, -0.4, 0.0, 0.0, 0.998195646899864;
0.08974358974358974, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9979310715257167;
0.08974358974358974, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9976476757291951;
0.08974358974358974, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9973454755855086;
0.08974358974358974, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9970244882331566;
0.08974358974358974, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9966847318723093;
0.08974358974358974, 0.6, -0.4, 0.0, 0.0, 0.9963262257630866;
0.11538461538461539, -0.6, -0.4, 0.0, 0.0, 0.996273823394942;
0.11538461538461539, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9966323106483235;
0.11538461538461539, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9969720491394837;
0.11538461538461539, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9972930196093156;
0.11538461538461539, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9975952038586066;
0.11538461538461539, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9978785847497583;
0.11538461538461539, -0.41538461538461535, -0.4, 0.0, 0.0, 0.998143146208407;
0.11538461538461539, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9983888732249427;
0.11538461538461539, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9986157518559284;
0.11538461538461539, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9988237692254193;
0.11538461538461539, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9990129135261797;
0.11538461538461539, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9991831740208013;
0.11538461538461539, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9993345410427178;
0.11538461538461539, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9994670059971206;
0.11538461538461539, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9995805613617715;
0.11538461538461539, -0.13846153846153847, -0.4, 0.0, 0.0, 0.999675200687715;
0.11538461538461539, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9997509185998885;
0.11538461538461539, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9998077107976313;
0.11538461538461539, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9998455740550914;
0.11538461538461539, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9998645062215313;
0.11538461538461539, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9998645062215313;
0.11538461538461539, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9998455740550914;
0.11538461538461539, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9998077107976313;
0.11538461538461539, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9997509185998885;
0.11538461538461539, 0.13846153846153847, -0.4, 0.0, 0.0, 0.999675200687715;
0.11538461538461539, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9995805613617715;
0.11538461538461539, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9994670059971206;
0.11538461538461539, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9993345410427178;
0.11538461538461539, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9991831740208013;
0.11538461538461539, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9990129135261797;
0.11538461538461539, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9988237692254193;
0.11538461538461539, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9986157518559284;
0.11538461538461539, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9983888732249427;
0.11538461538461539, 0.41538461538461535, -0.4, 0.0, 0.0, 0.998143146208407;
0.11538461538461539, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9978785847497583;
0.11538461538461539, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9975952038586066;
0.11538461538461539, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9972930196093156;
0.11538461538461539, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9969720491394837;
0.11538461538461539, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9966323106483235;
0.11538461538461539, 0.6, -0.4, 0.0, 0.0, 0.996273823394942;
0.14102564102564102, -0.6, -0.4, 0.0, 0.0, 0.9962083243105572;
0.14102564102564102, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9965667879955317;
0.14102564102564102, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9969065041509048;
0.14102564102564102, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9972274535188353;
0.14102564102564102, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9975296179013073;
0.14102564102564102, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9978129801618493;
0.14102564102564102, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9980775242271541;
0.14102564102564102, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9983232350885984;
0.14102564102564102, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9985500988036622;
0.14102564102564102, -0.32307692307692304, -0.4, 0.0, 0.0, 0.998758102497247;
0.14102564102564102, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9989472343628935;
0.14102564102564102, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9991174836638991;
0.14102564102564102, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9992688407343333;
0.14102564102564102, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9994012969799524;
0.14102564102564102, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9995148448790128;
0.14102564102564102, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9996094779829829;
0.14102564102564102, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9996851909171536;
0.14102564102564102, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9997419793811468;
0.14102564102564102, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9997798401493228;
0.14102564102564102, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9997987710710852;
0.14102564102564102, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9997987710710852;
0.14102564102564102, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9997798401493228;
0.14102564102564102, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9997419793811468;
0.14102564102564102, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9996851909171536;
0.14102564102564102, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9996094779829829;
0.14102564102564102, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9995148448790128;
0.14102564102564102, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9994012969799524;
0.14102564102564102, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9992688407343333;
0.14102564102564102, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9991174836638991;
0.14102564102564102, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9989472343628935;
0.14102564102564102, 0.32307692307692304, -0.4, 0.0, 0.0, 0.998758102497247;
0.14102564102564102, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9985500988036622;
0.14102564102564102, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9983232350885984;
0.14102564102564102, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9980775242271541;
0.14102564102564102, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9978129801618493;
0.14102564102564102, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9975296179013073;
0.14102564102564102, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9972274535188353;
0.14102564102564102, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9969065041509048;
0.14102564102564102, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9965667879955317;
0.14102564102564102, 0.6, -0.4, 0.0, 0.0, 0.9962083243105572;
0.16666666666666666, -0.6, -0.4, 0.0, 0.0, 0.9961297310934222;
0.16666666666666666, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9964881664983538;
0.16666666666666666, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9968278558527206;
0.16666666666666666, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9971487799002009;
0.16666666666666666, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9974509204442142;
0.16666666666666666, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9977342603496412;
0.16666666666666666, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9979987835444426;
0.16666666666666666, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9982444750211793;
0.16666666666666666, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9984713208384312;
0.16666666666666666, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9986793081221154;
0.16666666666666666, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9988684250667044;
0.16666666666666666, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9990386609363423;
0.16666666666666666, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9991900060658614;
0.16666666666666666, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9993224518616958;
0.16666666666666666, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9994359908026954;
0.16666666666666666, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9995306164408375;
0.16666666666666666, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9996063234018367;
0.16666666666666666, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9996631073856544;
0.16666666666666666, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9997009651669054;
0.16666666666666666, -0.015384615384615384, -0.4, 0.0, 0.0, 0.999719894595163;
0.16666666666666666, 0.015384615384615384, -0.4, 0.0, 0.0, 0.999719894595163;
0.16666666666666666, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9997009651669054;
0.16666666666666666, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9996631073856544;
0.16666666666666666, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9996063234018367;
0.16666666666666666, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9995306164408375;
0.16666666666666666, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9994359908026954;
0.16666666666666666, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9993224518616958;
0.16666666666666666, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9991900060658614;
0.16666666666666666, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9990386609363423;
0.16666666666666666, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9988684250667044;
0.16666666666666666, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9986793081221154;
0.16666666666666666, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9984713208384312;
0.16666666666666666, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9982444750211793;
0.16666666666666666, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9979987835444426;
0.16666666666666666, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9977342603496412;
0.16666666666666666, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9974509204442142;
0.16666666666666666, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9971487799002009;
0.16666666666666666, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9968278558527206;
0.16666666666666666, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9964881664983538;
0.16666666666666666, 0.6, -0.4, 0.0, 0.0, 0.9961297310934222;
0.19230769230769232, -0.6, -0.4, 0.0, 0.0, 0.9960380468433517;
0.19230769230769232, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9963964492577196;
0.19230769230769232, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9967361073469182;
0.19230769230769232, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9970570018563978;
0.19230769230769232, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9973591145912531;
0.19230769230769232, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9976424284179416;
0.19230769230769232, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9979069272659035;
0.19230769230769232, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9981525961290808;
0.19230769230769232, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9983794210673367;
0.19230769230769232, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9985873892077732;
0.19230769230769232, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9987764887459495;
0.19230769230769232, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9989467089469978;
0.19230769230769232, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9990980401466397;
0.19230769230769232, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9992304737521007;
0.19230769230769232, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9993440022429226;
0.19230769230769232, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9994386191716763;
0.19230769230769232, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9995143191645712;
0.19230769230769232, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9995710979219643;
0.19230769230769232, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9996089522187672;
0.19230769230769232, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9996278799047512;
0.19230769230769232, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9996278799047512;
0.19230769230769232, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9996089522187672;
0.19230769230769232, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9995710979219643;
0.19230769230769232, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9995143191645712;
0.19230769230769232, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9994386191716763;
0.19230769230769232, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9993440022429226;
0.19230769230769232, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9992304737521007;
0.19230769230769232, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9990980401466397;
0.19230769230769232, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9989467089469978;
0.19230769230769232, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9987764887459495;
0.19230769230769232, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9985873892077732;
0.19230769230769232, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9983794210673367;
0.19230769230769232, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9981525961290808;
0.19230769230769232, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9979069272659035;
0.19230769230769232, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9976424284179416;
0.19230769230769232, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9973591145912531;
0.19230769230769232, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9970570018563978;
0.19230769230769232, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9967361073469182;
0.19230769230769232, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9963964492577196;
0.19230769230769232, 0.6, -0.4, 0.0, 0.0, 0.9960380468433517;
0.21794871794871795, -0.6, -0.4, 0.0, 0.0, 0.995933275176281;
0.21794871794871795, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9962916398908658;
0.21794871794871795, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9966312622519669;
0.21794871794871795, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9969521230070606;
0.21794871794871795, -0.4769230769230769, -0.4, 0.0, 0.0, 0.997254203963155;
0.21794871794871795, -0.4461538461538462, -0.4, 0.0, 0.0, 0.99753748798851;
0.21794871794871795, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9978019590142564;
0.21794871794871795, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9980476020359145;
0.21794871794871795, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9982744031148139;
0.21794871794871795, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9984823493794106;
0.21794871794871795, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9986714290265054;
0.21794871794871795, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9988416313223599;
0.21794871794871795, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9989929466037123;
0.21794871794871795, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9991253662786918;
0.21794871794871795, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9992388828276313;
0.21794871794871795, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9993334898037799;
0.21794871794871795, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9994091818339121;
0.21794871794871795, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9994659546188376;
0.21794871794871795, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9995038049338069;
0.21794871794871795, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9995227306288175;
0.21794871794871795, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9995227306288175;
0.21794871794871795, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9995038049338069;
0.21794871794871795, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9994659546188376;
0.21794871794871795, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9994091818339121;
0.21794871794871795, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9993334898037799;
0.21794871794871795, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9992388828276313;
0.21794871794871795, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9991253662786918;
0.21794871794871795, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9989929466037123;
0.21794871794871795, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9988416313223599;
0.21794871794871795, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9986714290265054;
0.21794871794871795, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9984823493794106;
0.21794871794871795, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9982744031148139;
0.21794871794871795, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9980476020359145;
0.21794871794871795, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9978019590142564;
0.21794871794871795, 0.4461538461538462, -0.4, 0.0, 0.0, 0.99753748798851;
0.21794871794871795, 0.4769230769230769, -0.4, 0.0, 0.0, 0.997254203963155;
0.21794871794871795, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9969521230070606;
0.21794871794871795, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9966312622519669;
0.21794871794871795, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9962916398908658;
0.21794871794871795, 0.6, -0.4, 0.0, 0.0, 0.995933275176281;
0.24358974358974358, -0.6, -0.4, 0.0, 0.0, 0.995815420224028;
0.24358974358974358, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9961737425310967;
0.24358974358974358, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9965133247025806;
0.24358974358974358, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9968341474882341;
0.24358974358974358, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9971361926972182;
0.24358974358974358, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9974194431998201;
0.24358974358974358, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9976838829290721;
0.24358974358974358, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9979294968822702;
0.24358974358974358, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9981562711223932;
0.24358974358974358, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9983641927794208;
0.24358974358974358, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9985532500515499;
0.24358974358974358, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9987234322063128;
0.24358974358974358, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9988747295815907;
0.24358974358974358, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9990071335865299;
0.24358974358974358, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9991206367023533;
0.24358974358974358, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9992152324830725;
0.24358974358974358, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9992909155560982;
0.24358974358974358, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9993476816227483;
0.24358974358974358, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9993855274586554;
0.24358974358974358, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9994044509140714;
0.24358974358974358, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9994044509140714;
0.24358974358974358, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9993855274586554;
0.24358974358974358, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9993476816227483;
0.24358974358974358, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9992909155560982;
0.24358974358974358, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9992152324830725;
0.24358974358974358, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9991206367023533;
0.24358974358974358, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9990071335865299;
0.24358974358974358, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9988747295815907;
0.24358974358974358, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9987234322063128;
0.24358974358974358, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9985532500515499;
0.24358974358974358, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9983641927794208;
0.24358974358974358, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9981562711223932;
0.24358974358974358, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9979294968822702;
0.24358974358974358, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9976838829290721;
0.24358974358974358, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9974194431998201;
0.24358974358974358, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9971361926972182;
0.24358974358974358, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9968341474882341;
0.24358974358974358, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9965133247025806;
0.24358974358974358, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9961737425310967;
0.24358974358974358, 0.6, -0.4, 0.0, 0.0, 0.995815420224028;
0.2692307692307692, -0.6, -0.4, 0.0, 0.0, 0.9956844866340222;
0.2692307692307692, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9960427618275143;
0.2692307692307692, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9963822993494458;
0.2692307692307692, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9967030799521021;
0.2692307692307692, -0.4769230769230769, -0.4, 0.0, 0.0, 0.997005085447036;
0.2692307692307692, -0.4461538461538462, -0.4, 0.0, 0.0, 0.997288298706787;
0.2692307692307692, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9975527036665001;
0.2692307692307692, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9977982853254437;
0.2692307692307692, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9980250297484291;
0.2692307692307692, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9982329240671282;
0.2692307692307692, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9984219564812898;
0.2692307692307692, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9985921162598572;
0.2692307692307692, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9987433937419823;
0.2692307692307692, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9988757803379406;
0.2692307692307692, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9989892685299435;
0.2692307692307692, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9990838518728504;
0.2692307692307692, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9991595249947786;
0.2692307692307692, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9992162835976108;
0.2692307692307692, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9992541244574038;
0.2692307692307692, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9992730454246921;
0.2692307692307692, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9992730454246921;
0.2692307692307692, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9992541244574038;
0.2692307692307692, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9992162835976108;
0.2692307692307692, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9991595249947786;
0.2692307692307692, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9990838518728504;
0.2692307692307692, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9989892685299435;
0.2692307692307692, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9988757803379406;
0.2692307692307692, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9987433937419823;
0.2692307692307692, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9985921162598572;
0.2692307692307692, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9984219564812898;
0.2692307692307692, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9982329240671282;
0.2692307692307692, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9980250297484291;
0.2692307692307692, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9977982853254437;
0.2692307692307692, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9975527036665001;
0.2692307692307692, 0.4461538461538462, -0.4, 0.0, 0.0, 0.997288298706787;
0.2692307692307692, 0.4769230769230769, -0.4, 0.0, 0.0, 0.997005085447036;
0.2692307692307692, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9967030799521021;
0.2692307692307692, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9963822993494458;
0.2692307692307692, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9960427618275143;
0.2692307692307692, 0.6, -0.4, 0.0, 0.0, 0.9956844866340222;
0.2948717948717949, -0.6, -0.4, 0.0, 0.0, 0.9955404795689989;
0.2948717948717949, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9958987029447116;
0.2948717948717949, -0.5384615384615384, -0.4, 0.0, 0.0, 0.996238191358916;
0.2948717948717949, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9965589255666814;
0.2948717948717949, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9968608873821913;
0.2948717948717949, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9971440596804622;
0.2948717948717949, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9974084263989624;
0.2948717948717949, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9976539725391304;
0.2948717948717949, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9978806841677927;
0.2948717948717949, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9980885484184822;
0.2948717948717949, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9982775534926547;
0.2948717948717949, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9984476886608051;
0.2948717948717949, -0.23076923076923078, -0.4, 0.0, 0.0, 0.998598944263483;
0.2948717948717949, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9987313117122059;
0.2948717948717949, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9988447834902728;
0.2948717948717949, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9989393531534753;
0.2948717948717949, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9990150153307071;
0.2948717948717949, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9990717657244733;
0.2948717948717949, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9991096011112964;
0.2948717948717949, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9991285193420221;
0.2948717948717949, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9991285193420221;
0.2948717948717949, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9991096011112964;
0.2948717948717949, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9990717657244733;
0.2948717948717949, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9990150153307071;
0.2948717948717949, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9989393531534753;
0.2948717948717949, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9988447834902728;
0.2948717948717949, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9987313117122059;
0.2948717948717949, 0.23076923076923078, -0.4, 0.0, 0.0, 0.998598944263483;
0.2948717948717949, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9984476886608051;
0.2948717948717949, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9982775534926547;
0.2948717948717949, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9980885484184822;
0.2948717948717949, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9978806841677927;
0.2948717948717949, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9976539725391304;
0.2948717948717949, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9974084263989624;
0.2948717948717949, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9971440596804622;
0.2948717948717949, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9968608873821913;
0.2948717948717949, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9965589255666814;
0.2948717948717949, 0.5384615384615384, -0.4, 0.0, 0.0, 0.996238191358916;
0.2948717948717949, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9958987029447116;
0.2948717948717949, 0.6, -0.4, 0.0, 0.0, 0.9955404795689989;
0.32051282051282054, -0.6, -0.4, 0.0, 0.0, 0.9953834047066601;
0.32051282051282054, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9957415715624335;
0.32051282051282054, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9960810064126724;
0.32051282051282054, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9964016900154824;
0.32051282051282054, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9967036041879164;
0.32051282051282054, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9969867318076929;
0.32051282051282054, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9972510568148145;
0.32051282051282054, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997496564213086;
0.32051282051282054, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9977232400715325;
0.32051282051282054, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9979310715257167;
0.32051282051282054, -0.29230769230769227, -0.4, 0.0, 0.0, 0.998120046778956;
0.32051282051282054, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9982901551034385;
0.32051282051282054, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9984413868412374;
0.32051282051282054, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9985737334052257;
0.32051282051282054, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9986871872798881;
0.32051282051282054, -0.13846153846153847, -0.4, 0.0, 0.0, 0.998781742022033;
0.32051282051282054, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9988573922614017;
0.32051282051282054, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9989141337011771;
0.32051282051282054, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9989519631183904;
0.32051282051282054, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9989708783642264;
0.32051282051282054, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9989708783642264;
0.32051282051282054, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9989519631183904;
0.32051282051282054, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9989141337011771;
0.32051282051282054, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9988573922614017;
0.32051282051282054, 0.13846153846153847, -0.4, 0.0, 0.0, 0.998781742022033;
0.32051282051282054, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9986871872798881;
0.32051282051282054, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9985737334052257;
0.32051282051282054, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9984413868412374;
0.32051282051282054, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9982901551034385;
0.32051282051282054, 0.29230769230769227, -0.4, 0.0, 0.0, 0.998120046778956;
0.32051282051282054, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9979310715257167;
0.32051282051282054, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9977232400715325;
0.32051282051282054, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997496564213086;
0.32051282051282054, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9972510568148145;
0.32051282051282054, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9969867318076929;
0.32051282051282054, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9967036041879164;
0.32051282051282054, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9964016900154824;
0.32051282051282054, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9960810064126724;
0.32051282051282054, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9957415715624335;
0.32051282051282054, 0.6, -0.4, 0.0, 0.0, 0.9953834047066601;
0.34615384615384615, -0.6, -0.4, 0.0, 0.0, 0.9952132682393011;
0.34615384615384615, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9955713738752037;
0.34615384615384615, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9959107507073502;
0.34615384615384615, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9962313794971354;
0.34615384615384615, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9965332420647199;
0.34615384615384615, -0.4461538461538462, -0.4, 0.0, 0.0, 0.996816321290749;
0.34615384615384615, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9970806011179704;
0.34615384615384615, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997326066552752;
0.34615384615384615, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9975527036665001;
0.34615384615384615, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9977604995969762;
0.34615384615384615, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9979494425495143;
0.34615384615384615, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9981195217981359;
0.34615384615384615, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9982707276865651;
0.34615384615384615, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9984030516291427;
0.34615384615384615, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9985164861116379;
0.34615384615384615, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9986110246919603;
0.34615384615384615, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9986866620007694;
0.34615384615384615, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9987433937419823;
0.34615384615384615, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9987812166931813;
0.34615384615384615, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9988001287059182;
0.34615384615384615, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9988001287059182;
0.34615384615384615, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9987812166931813;
0.34615384615384615, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9987433937419823;
0.34615384615384615, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9986866620007694;
0.34615384615384615, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9986110246919603;
0.34615384615384615, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9985164861116379;
0.34615384615384615, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9984030516291427;
0.34615384615384615, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9982707276865651;
0.34615384615384615, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9981195217981359;
0.34615384615384615, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9979494425495143;
0.34615384615384615, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9977604995969762;
0.34615384615384615, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9975527036665001;
0.34615384615384615, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997326066552752;
0.34615384615384615, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9970806011179704;
0.34615384615384615, 0.4461538461538462, -0.4, 0.0, 0.0, 0.996816321290749;
0.34615384615384615, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9965332420647199;
0.34615384615384615, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9962313794971354;
0.34615384615384615, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9959107507073502;
0.34615384615384615, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9955713738752037;
0.34615384615384615, 0.6, -0.4, 0.0, 0.0, 0.9952132682393011;
0.3717948717948718, -0.6, -0.4, 0.0, 0.0, 0.9950300768734045;
0.3717948717948718, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9953881165919175;
0.3717948717948718, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9957274309541319;
0.3717948717948718, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9960480007249832;
0.3717948717948718, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9963498077279789;
0.3717948717948718, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9966328348469153;
0.3717948717948718, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9968970660274957;
0.3717948717948718, -0.38461538461538464, -0.4, 0.0, 0.0, 0.997142486278848;
0.3717948717948718, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9973690816749424;
0.3717948717948718, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9975768393559082;
0.3717948717948718, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9977657475292501;
0.3717948717948718, -0.26153846153846155, -0.4, 0.0, 0.0, 0.997935795470964;
0.3717948717948718, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9980869735265516;
0.3717948717948718, -0.19999999999999998, -0.4, 0.0, 0.0, 0.998219273111934;
0.3717948717948718, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9983326867142637;
0.3717948717948718, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9984272078926361;
0.3717948717948718, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9985028312786987;
0.3717948717948718, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9985595525771598;
0.3717948717948718, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9985973685661946;
0.3717948717948718, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9986162770977507;
0.3717948717948718, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9986162770977507;
0.3717948717948718, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9985973685661946;
0.3717948717948718, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9985595525771598;
0.3717948717948718, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9985028312786987;
0.3717948717948718, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9984272078926361;
0.3717948717948718, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9983326867142637;
0.3717948717948718, 0.19999999999999998, -0.4, 0.0, 0.0, 0.998219273111934;
0.3717948717948718, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9980869735265516;
0.3717948717948718, 0.26153846153846155, -0.4, 0.0, 0.0, 0.997935795470964;
0.3717948717948718, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9977657475292501;
0.3717948717948718, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9975768393559082;
0.3717948717948718, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9973690816749424;
0.3717948717948718, 0.38461538461538464, -0.4, 0.0, 0.0, 0.997142486278848;
0.3717948717948718, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9968970660274957;
0.3717948717948718, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9966328348469153;
0.3717948717948718, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9963498077279789;
0.3717948717948718, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9960480007249832;
0.3717948717948718, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9957274309541319;
0.3717948717948718, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9953881165919175;
0.3717948717948718, 0.6, -0.4, 0.0, 0.0, 0.9950300768734045;
0.3974358974358974, -0.6, -0.4, 0.0, 0.0, 0.9948338378291982;
0.3974358974358974, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9951918069354013;
0.3974358974358974, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9955310543783057;
0.3974358974358974, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9958515609266406;
0.3974358974358974, -0.4769230769230769, -0.4, 0.0, 0.0, 0.996153308407498;
0.3974358974358974, -0.4461538461538462, -0.4, 0.0, 0.0, 0.99643627970805;
0.3974358974358974, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9967004587771662;
0.3974358974358974, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9969458306269308;
0.3974358974358974, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9971723813340605;
0.3974358974358974, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9973800980412209;
0.3974358974358974, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9975689689582423;
0.3974358974358974, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9977389833632357;
0.3974358974358974, -0.23076923076923078, -0.4, 0.0, 0.0, 0.997890131603607;
0.3974358974358974, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9980224050969698;
0.3974358974358974, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9981357963319586;
0.3974358974358974, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9982302988689389;
0.3974358974358974, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9983059073406172;
0.3974358974358974, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9983626174525487;
0.3974358974358974, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9984004259835442;
0.3974358974358974, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9984193307859746;
0.3974358974358974, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9984193307859746;
0.3974358974358974, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9984004259835442;
0.3974358974358974, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9983626174525487;
0.3974358974358974, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9983059073406172;
0.3974358974358974, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9982302988689389;
0.3974358974358974, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9981357963319586;
0.3974358974358974, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9980224050969698;
0.3974358974358974, 0.23076923076923078, -0.4, 0.0, 0.0, 0.997890131603607;
0.3974358974358974, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9977389833632357;
0.3974358974358974, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9975689689582423;
0.3974358974358974, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9973800980412209;
0.3974358974358974, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9971723813340605;
0.3974358974358974, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9969458306269308;
0.3974358974358974, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9967004587771662;
0.3974358974358974, 0.4461538461538462, -0.4, 0.0, 0.0, 0.99643627970805;
0.3974358974358974, 0.4769230769230769, -0.4, 0.0, 0.0, 0.996153308407498;
0.3974358974358974, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9958515609266406;
0.3974358974358974, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9955310543783057;
0.3974358974358974, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9951918069354013;
0.3974358974358974, 0.6, -0.4, 0.0, 0.0, 0.9948338378291982;
0.4230769230769231, -0.6, -0.4, 0.0, 0.0, 0.9946245588401824;
0.4230769230769231, -0.5692307692307692, -0.4, 0.0, 0.0, 0.994982452641938;
0.4230769230769231, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9953216287187918;
0.4230769230769231, -0.5076923076923077, -0.4, 0.0, 0.0, 0.995642067843519;
0.4230769230769231, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9959437518470345;
0.4230769230769231, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9962266636201103;
0.4230769230769231, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9964907871149923;
0.4230769230769231, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9967361073469182;
0.4230769230769231, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9969626103955334;
0.4230769230769231, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9971702834062081;
0.4230769230769231, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9973591145912531;
0.4230769230769231, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9975290932310349;
0.4230769230769231, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9976802096749897;
0.4230769230769231, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9978124553425369;
0.4230769230769231, -0.1692307692307692, -0.4, 0.0, 0.0, 0.997925822723891;
0.4230769230769231, -0.13846153846153847, -0.4, 0.0, 0.0, 0.998020305380772;
0.4230769230769231, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9980958979470158;
0.4230769230769231, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9981525961290808;
0.4230769230769231, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9981903967064554;
0.4230769230769231, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9982092975319624;
0.4230769230769231, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9982092975319624;
0.4230769230769231, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9981903967064554;
0.4230769230769231, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9981525961290808;
0.4230769230769231, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9980958979470158;
0.4230769230769231, 0.13846153846153847, -0.4, 0.0, 0.0, 0.998020305380772;
0.4230769230769231, 0.1692307692307692, -0.4, 0.0, 0.0, 0.997925822723891;
0.4230769230769231, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9978124553425369;
0.4230769230769231, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9976802096749897;
0.4230769230769231, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9975290932310349;
0.4230769230769231, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9973591145912531;
0.4230769230769231, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9971702834062081;
0.4230769230769231, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9969626103955334;
0.4230769230769231, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9967361073469182;
0.4230769230769231, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9964907871149923;
0.4230769230769231, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9962266636201103;
0.4230769230769231, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9959437518470345;
0.4230769230769231, 0.5076923076923077, -0.4, 0.0, 0.0, 0.995642067843519;
0.4230769230769231, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9953216287187918;
0.4230769230769231, 0.5692307692307692, -0.4, 0.0, 0.0, 0.994982452641938;
0.4230769230769231, 0.6, -0.4, 0.0, 0.0, 0.9946245588401824;
0.44871794871794873, -0.6, -0.4, 0.0, 0.0, 0.9944022481526211;
0.44871794871794873, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9947600619607585;
0.44871794871794873, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9950991622276335;
0.44871794871794873, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9954195297303184;
0.44871794871794873, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9957211463037894;
0.44871794871794873, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9960039948426426;
0.44871794871794873, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9962680593027107;
0.44871794871794873, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9965133247025806;
0.44871794871794873, -0.35384615384615387, -0.4, 0.0, 0.0, 0.9967397771250093;
0.44871794871794873, -0.32307692307692304, -0.4, 0.0, 0.0, 0.99694740371824;
0.44871794871794873, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9971361926972182;
0.44871794871794873, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9973061333447063;
0.44871794871794873, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9974572160122978;
0.44871794871794873, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9975894321213296;
0.44871794871794873, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9977027741636949;
0.44871794871794873, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9977972357025529;
0.44871794871794873, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9978728113729386;
0.44871794871794873, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9979294968822702;
0.44871794871794873, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9979672890107559;
0.44871794871794873, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9979861856116986;
0.44871794871794873, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9979861856116986;
0.44871794871794873, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9979672890107559;
0.44871794871794873, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9979294968822702;
0.44871794871794873, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9978728113729386;
0.44871794871794873, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9977972357025529;
0.44871794871794873, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9977027741636949;
0.44871794871794873, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9975894321213296;
0.44871794871794873, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9974572160122978;
0.44871794871794873, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9973061333447063;
0.44871794871794873, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9971361926972182;
0.44871794871794873, 0.32307692307692304, -0.4, 0.0, 0.0, 0.99694740371824;
0.44871794871794873, 0.35384615384615387, -0.4, 0.0, 0.0, 0.9967397771250093;
0.44871794871794873, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9965133247025806;
0.44871794871794873, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9962680593027107;
0.44871794871794873, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9960039948426426;
0.44871794871794873, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9957211463037894;
0.44871794871794873, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9954195297303184;
0.44871794871794873, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9950991622276335;
0.44871794871794873, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9947600619607585;
0.44871794871794873, 0.6, -0.4, 0.0, 0.0, 0.9944022481526211;
0.47435897435897434, -0.6, -0.4, 0.0, 0.0, 0.9941669145250005;
0.47435897435897434, -0.5692307692307692, -0.4, 0.0, 0.0, 0.9945246436535008;
0.47435897435897434, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9948636636694551;
0.47435897435897434, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9951839553544851;
0.47435897435897434, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9954855005478657;
0.47435897435897434, -0.4461538461538462, -0.4, 0.0, 0.0, 0.995768282148241;
0.47435897435897434, -0.41538461538461535, -0.4, 0.0, 0.0, 0.9960322841152413;
0.47435897435897434, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9962774914709983;
0.47435897435897434, -0.35384615384615387, -0.4, 0.0, 0.0, 0.996503890301563;
0.47435897435897434, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9967114677582198;
0.47435897435897434, -0.29230769230769227, -0.4, 0.0, 0.0, 0.9969002120587037;
0.47435897435897434, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9970701124883131;
0.47435897435897434, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9972211594009248;
0.47435897435897434, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9973533442199062;
0.47435897435897434, -0.1692307692307692, -0.4, 0.0, 0.0, 0.997466659438927;
0.47435897435897434, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9975610986226701;
0.47435897435897434, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9976366564074398;
0.47435897435897434, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9976933285016705;
0.47435897435897434, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9977311116863322;
0.47435897435897434, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9977500038152358;
0.47435897435897434, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9977500038152358;
0.47435897435897434, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9977311116863322;
0.47435897435897434, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9976933285016705;
0.47435897435897434, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9976366564074398;
0.47435897435897434, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9975610986226701;
0.47435897435897434, 0.1692307692307692, -0.4, 0.0, 0.0, 0.997466659438927;
0.47435897435897434, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9973533442199062;
0.47435897435897434, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9972211594009248;
0.47435897435897434, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9970701124883131;
0.47435897435897434, 0.29230769230769227, -0.4, 0.0, 0.0, 0.9969002120587037;
0.47435897435897434, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9967114677582198;
0.47435897435897434, 0.35384615384615387, -0.4, 0.0, 0.0, 0.996503890301563;
0.47435897435897434, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9962774914709983;
0.47435897435897434, 0.41538461538461535, -0.4, 0.0, 0.0, 0.9960322841152413;
0.47435897435897434, 0.4461538461538462, -0.4, 0.0, 0.0, 0.995768282148241;
0.47435897435897434, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9954855005478657;
0.47435897435897434, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9951839553544851;
0.47435897435897434, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9948636636694551;
0.47435897435897434, 0.5692307692307692, -0.4, 0.0, 0.0, 0.9945246436535008;
0.47435897435897434, 0.6, -0.4, 0.0, 0.0, 0.9941669145250005;
0.5, -0.6, -0.4, 0.0, 0.0, 0.993918567227454;
0.5, -0.5692307692307692, -0.4, 0.0, 0.0, 0.994276206993634;
0.5, -0.5384615384615384, -0.4, 0.0, 0.0, 0.9946151423208871;
0.5, -0.5076923076923077, -0.4, 0.0, 0.0, 0.9949353539956358;
0.5, -0.4769230769230769, -0.4, 0.0, 0.0, 0.9952368238616918;
0.5, -0.4461538461538462, -0.4, 0.0, 0.0, 0.9955195348219712;
0.5, -0.41538461538461535, -0.4, 0.0, 0.0, 0.995783470840111;
0.5, -0.38461538461538464, -0.4, 0.0, 0.0, 0.9960286169419849;
0.5, -0.35384615384615387, -0.4, 0.0, 0.0, 0.996254959217119;
0.5, -0.32307692307692304, -0.4, 0.0, 0.0, 0.9964624848200082;
0.5, -0.29230769230769227, -0.4, 0.0, 0.0, 0.99665118197133;
0.5, -0.26153846153846155, -0.4, 0.0, 0.0, 0.9968210399590597;
0.5, -0.23076923076923078, -0.4, 0.0, 0.0, 0.9969720491394837;
0.5, -0.19999999999999998, -0.4, 0.0, 0.0, 0.9971042009381119;
0.5, -0.1692307692307692, -0.4, 0.0, 0.0, 0.9972174878504894;
0.5, -0.13846153846153847, -0.4, 0.0, 0.0, 0.9973119034429061;
0.5, -0.10769230769230768, -0.4, 0.0, 0.0, 0.9973874423530066;
0.5, -0.07692307692307691, -0.4, 0.0, 0.0, 0.9974441002902973;
0.5, -0.046153846153846156, -0.4, 0.0, 0.0, 0.9974818740365522;
0.5, -0.015384615384615384, -0.4, 0.0, 0.0, 0.9975007614461183;
0.5, 0.015384615384615384, -0.4, 0.0, 0.0, 0.9975007614461183;
0.5, 0.046153846153846156, -0.4, 0.0, 0.0, 0.9974818740365522;
0.5, 0.07692307692307691, -0.4, 0.0, 0.0, 0.9974441002902973;
0.5, 0.10769230769230768, -0.4, 0.0, 0.0, 0.9973874423530066;
0.5, 0.13846153846153847, -0.4, 0.0, 0.0, 0.9973119034429061;
0.5, 0.1692307692307692, -0.4, 0.0, 0.0, 0.9972174878504894;
0.5, 0.19999999999999998, -0.4, 0.0, 0.0, 0.9971042009381119;
0.5, 0.23076923076923078, -0.4, 0.0, 0.0, 0.9969720491394837;
0.5, 0.26153846153846155, -0.4, 0.0, 0.0, 0.9968210399590597;
0.5, 0.29230769230769227, -0.4, 0.0, 0.0, 0.99665118197133;
0.5, 0.32307692307692304, -0.4, 0.0, 0.0, 0.9964624848200082;
0.5, 0.35384615384615387, -0.4, 0.0, 0.0, 0.996254959217119;
0.5, 0.38461538461538464, -0.4, 0.0, 0.0, 0.9960286169419849;
0.5, 0.41538461538461535, -0.4, 0.0, 0.0, 0.995783470840111;
0.5, 0.4461538461538462, -0.4, 0.0, 0.0, 0.9955195348219712;
0.5, 0.4769230769230769, -0.4, 0.0, 0.0, 0.9952368238616918;
0.5, 0.5076923076923077, -0.4, 0.0, 0.0, 0.9949353539956358;
0.5, 0.5384615384615384, -0.4, 0.0, 0.0, 0.9946151423208871;
0.5, 0.5692307692307692, -0.4, 0.0, 0.0, 0.994276206993634;
0.5, 0.6, -0.4, 0.0, 0.0, 0.993918567227454
"(,)
的#183""(库#172,磁场2#184)
磁场2#184"\"\"\"
P代码(P函数):...
M代码:...
保存:...

\"\"\"

+磁场2(_磁场2,_文件)->+[del](,+磁场2)...
->的(磁场2,P代码)->的(磁场2,M代码)...

->.\"空间点\"(+磁场2,_空间点)->.\"方向\"(+磁场2,_方向)...
->[]{
    []:->在(_磁场2,空间点)->空间点, ->+在(_磁场2,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_磁场2,方向)->方向, ->+朝向(_磁场2,+方向)->+方向\"0,0,0\"
}...

->的(_磁场2,长度)->的(_磁场2,宽度)->的(_磁场2,高度)...
    ->的(_磁场2,磁场强度)...
->在(_磁场2,空间点)->朝向(_磁场2,方向)...

->+[标题](_磁场2,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"W\"(+[matlab],长度)->+[o]\"W_out\"(+[matlab],+长度)...
    ->+[.]\"W\"(+[python],+长度)->+[del](,+长度)...
->+[.]\"L\"(+[matlab],宽度)->+[o]\"L_out\"(+[matlab],+宽度)...
    ->+[.]\"L\"(+[python],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])->+[.]\"Bz\"(+[python],磁场强度)




"(,)
的#185""(磁场2#184,P代码#186)
P代码#186"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}_M
fieldexpr {0}_M Bz={1} width={8} height={9} length={10}
place {0}_M x={2} y={3} z={4} rotation=Z{5},X{6},Z{7}

\"\"\".format(name,Bz[0],pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0],L[0],W[0],H[0])

ans+=\"\"\"
# {0}
box {0} width={1} height={2} length={3} material=Vacuum color=0.5,0.8,1
place {0} x={4} y={5} z={6} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,L[0],W[0],H[0],pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180)



"(,)
的#187""(磁场2#184,M代码#188)
M代码#188"%{

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

H_out=H*scale;
W_out=W*scale;
L_out=L*scale;
pt_out=pt_out*scale;


"(,)
的#189""(磁场2#184,保存#190)
保存#190"\"\"\"
P代码(P函数):...
M代码:...

\"\"\"

+磁场(_磁场,_文件)->+[del](,+磁场)...
->的(磁场,P代码)->的(磁场,M代码)...

->+[标题](_磁场,)->在(_磁场,空间点)...
->的(_磁场,长度)->的(_磁场,宽度)->的(_磁场,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[增加内容](,_文件)...
->+[code](+[python],P代码)...

->+[.]\"pt\"(+[python],空间点)...
->+[.]\"W\"(+[python],长度)->+[.]\"L\"(+[python],宽度)->+[.]\"H\"(+[python],高度)...
->+[s]\"name\"(+[python],+[标题])...

->+[.]\"H\"(+[matlab],高度)...
->+pt0->[]{
    []:->在(_磁场,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点),
    ->+[.]\"pt\"(+[matlab],+[临时文本])->+[临时文本]\"0,0,0\"
}...
->+[o](+[matlab],+pt0)->+[.]\"pt\"(+[python],+pt0)->+[del](,+pt0)...

->[]{
    []:->[==](,_磁场)->+[s]\"file_name\"(+[python],+[临时文本])...
        ->+[临时文本]\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\spectrometer\GEANT4\B_field.txt\",
    ->+[s]\"file_name\"(+[python],_磁场)
}...
->[]{
    []:->朝向(_磁场,方向)->方向->+[.]\"Eulers\"(+[python],方向),
    ->+[.]\"Eulers\"(+[python],+[临时文本])->+[临时文本]\"0,0,0\"
}


"(,)
的#191""(库#172,磁场#192)
磁场#192"\"\"\"
P代码(P函数):...
M代码:...
保存:...

\"\"\"

+磁场(_磁场,_文件)->+[del](,+磁场)...
->的(磁场,P代码)->的(磁场,M代码)...

->.\"空间点\"(+磁场,_空间点)->.\"方向\"(+磁场,_方向)...
->[]{
    []:->在(_磁场,空间点)->空间点, ->+在(_磁场,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_磁场,方向)->方向, ->+朝向(_磁场,+方向)->+方向\"0,0,0\"
}...

->的(_磁场,长度)->的(_磁场,宽度)->的(_磁场,高度)...
->在(_磁场,空间点)->朝向(_磁场,方向)...

->+[标题](_磁场,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
    ->+[.]\"pt0\"(+[matlab],_空间点)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[python](Python,+[增加内容])->+[code](+[python],P代码)...
->+[增加内容](,_文件)...

->+[.]\"pt\"(+[matlab],空间点)->+[o]\"pt_out\"(+[matlab],+空间点)...
    ->+[.]\"pt\"(+[python],+空间点)->+[del](,+空间点)...
->+[.]\"Eulers\"(+[matlab],方向)->+[o]\"Eulers_out\"(+[matlab],+方向)...
    ->+[.]\"Eulers\"(+[python],+方向)->+[del](,+方向)...
->+[.]\"W\"(+[matlab],长度)->+[o]\"W_out\"(+[matlab],+长度)...
    ->+[.]\"W\"(+[python],+长度)->+[del](,+长度)...
->+[.]\"L\"(+[matlab],宽度)->+[o]\"L_out\"(+[matlab],+宽度)...
    ->+[.]\"L\"(+[python],+宽度)->+[del](,+宽度)...
->+[.]\"H\"(+[matlab],高度)->+[o]\"H_out\"(+[matlab],+高度)...
    ->+[.]\"H\"(+[python],+高度)->+[del](,+高度)...

->+[s]\"name\"(+[python],+[标题])...
->[]{
    []:->[==](,_磁场)->+[s]\"file_name\"(+[python],+[临时文本])...
        ->+[临时文本]\"/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/spectrometer/GEANT4/B_field.txt\",
    ->+[s]\"file_name\"(+[python],_磁场)
}



"(,)
的#193""(磁场#192,保存#194)
保存#194"\"\"\"
P代码(P函数):...
M代码:...

\"\"\"

+磁场(_磁场,_文件)->+[del](,+磁场)...
->的(磁场,P代码)->的(磁场,M代码)...

->+[标题](_磁场,)->在(_磁场,空间点)...
->的(_磁场,长度)->的(_磁场,宽度)->的(_磁场,高度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,+[增加内容])->+[增加内容](,_文件)...
->+[code](+[python],P代码)...

->+[.]\"pt\"(+[python],空间点)...
->+[.]\"W\"(+[python],长度)->+[.]\"L\"(+[python],宽度)->+[.]\"H\"(+[python],高度)...
->+[s]\"name\"(+[python],+[标题])...

->+[.]\"H\"(+[matlab],高度)...
->+pt0->[]{
    []:->在(_磁场,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点),
    ->+[.]\"pt\"(+[matlab],+[临时文本])->+[临时文本]\"0,0,0\"
}...
->+[o](+[matlab],+pt0)->+[.]\"pt\"(+[python],+pt0)->+[del](,+pt0)...

->[]{
    []:->[==](,_磁场)->+[s]\"file_name\"(+[python],+[临时文本])...
        ->+[临时文本]\"C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\spectrometer\GEANT4\B_field.txt\",
    ->+[s]\"file_name\"(+[python],_磁场)
}...
->[]{
    []:->朝向(_磁场,方向)->方向->+[.]\"Eulers\"(+[python],方向),
    ->+[.]\"Eulers\"(+[python],+[临时文本])->+[临时文本]\"0,0,0\"
}


"(,)
的#195""(磁场#192,M代码#196)
M代码#196"%{

%}

addpath(\"Matlab\space\");
[~,~,Z]=Euler_frame(Eulers(1),Eulers(2),Eulers(3));
dr=H/2*Z;
pt_out=pt+dr;
[pt_out,Eulers_out]=transform_3D_frame(pt0,Eulers0(1),Eulers0(2),Eulers0(3),pt_out,Eulers);

H_out=H*scale;
W_out=W*scale;
L_out=L*scale;
pt_out=pt_out*scale;


"(,)
的#197""(磁场#192,P代码#198)
P代码#198"\"\"\"
+[P函数](,P代码)
记住\"python\"

print(name)

\"\"\"

ans=\"\"\"
# {0}_M
fieldmap {0}_M filename='{1}'
place {0}_M x={2} y={3} z={4} rotation=Z{5},X{6},Z{7}

\"\"\".format(name,file_name,pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0])

ans+=\"\"\"
# {0}
box {0} width={1} height={2} length={3} material=Vacuum color=0.5,0.8,1
place {0} x={4} y={5} z={6} rotation=Z{7},X{8},Z{9}

\"\"\".format(name,L[0],W[0],H[0],pt[0],pt[1],pt[2],Eulers[2],-Eulers[1],Eulers[0]+180)



"(,)
的#199""(降临规则#4,整理代码#200)
整理代码#200"\"\"\"
Nini, 打开LWFA数据分析(文件)
模板:...
电子默认设置:...
地址模板::C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\文档\S应用\GEANT4\test1.g4bl
地址模板::文档/S应用/GEANT4/test1.g4bl
+[复制内容](,地址模板)
+[打开]\"文档\S应用\GEANT4\"


->的(_代码,电子)->的(电子,设置电子源)->+[del](,的)...
->+[有](_代码,设置电子源)...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,模板)->的(整理代码,地址模板)...
->的(整理代码,电子默认设置)...

->+[标题](_代码,)...
->+[模板文本](模板,_代码)...
->+[.]\"磁场\"(+[模板文本],+[临时文本])...
->+[.]\"物体\"(+[模板文本],+[临时文本])->+[.]\"探测器\"(+[模板文本],+[临时文本])...
->+[.]\"电子\"(+[模板文本],电子默认设置)...

->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量=>+[.](+[模板文本],_变量)
}...

->[]{
    []:->的(_代码,地址)->地址,
    ->+的(_代码,+地址)->[m_text](地址模板,+地址)
}...

->的(_代码,地址)->+[del](,的)...
->+[删除结构](,_代码)...

->+[有](_代码,地址)->+[保存文本](+[临时文本]#dir,_代码)...
->+[记住](,+[临时文本]#dir)->[路径补全](地址,+[临时文本]#dir)





"(,)
的#201""(整理代码#200,模板#202)
模板#202"# unit: mm
# physics is required, even though it is not used. 
physics QGSP_BERT

# electron
reference particle=e- referenceMomentum=200

%探测器

%电子

%磁场

%物体

"(,)
的#203""(整理代码#200,地址模板#204)
地址模板#204"文档/S应用/GEANT4/test1.g4bl"(,)
的#205""(整理代码#200,电子默认设置#206)
电子默认设置#206"
# 电子源
beam ascii particle=e- filename=C:\Users\cheng\Dropbox\Struct\Structure1.2.1\Nini\output\spectrometer\GEANT4\G.txt \ 
x=0.0 y=0.0 z=0.0 rotation=Z0
"(,)
的#207""(降临规则#4,设置单位#208)
设置单位#208"\"\"\"


\"\"\"
+设置单位(_媒介,_凭依)->+[del](,+设置单位)...

->Matlab:
->[]{
    的(_媒介,单位)->单位:->[==]\"m\"(,单位)->+[matlab]\"scale=1000;\"(Matlab,),
    ->[==]\"mm\"(,单位)->+[matlab]\"scale=1;\"(Matlab,),
    ->[==]\"cm\"(,单位)->+[matlab]\"scale=10;\"(Matlab,),
    ->+[matlab]\"scale=1000;\"(Matlab,)
},
->+[matlab]\"scale=1000;\"(Matlab,)
"(,)

## end
#473, 606:
"""
Nini, 打开LWFA数据分析(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"GEANT4代码"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,磁场分布)->磁场分布->+磁场代码(_物体,_凭依)->+的(操作,+磁场代码),
        ->的(_物体,磁场强度)->磁场强度->+磁场代码(_物体,_凭依)->+的(操作,+磁场代码),
        ->的(_物体,输出地址)->输出地址->+探测器代码(_物体,_凭依)->+的(操作,+探测器代码),
        ->的(_物体,代码)->代码->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,能谱)->能谱->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->+物体代码(_物体,_凭依)->+的(操作,+物体代码)
}...
->+设置单位(_媒介,_凭依)->+的(操作,+设置单位)



## end
#475, 3:
477
## end
#477, 3:
495
## end
#479, 6873:
场景示意图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(场景示意图#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开LWFA数据分析(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"CBS示意图\"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}


"(,)
的#3""(场景示意图#0,降临规则#4)
降临规则#4"有什么

光束代码:...
电子代码:...
PM代码:...
+[新建阅读窗口](,电子代码)
将电子代码的\"PM\"替换为\"电子\"
将条目\"PM代码\"复制为条目\"电子代码\"

画电子:...
整理代码:...
将'画电子'的\"整理代码\"替换为\"画电子\"
+[新建阅读窗口](,整理代码)
"(,)
的#5""(降临规则#4,光束代码#6)
光束代码#6"\"\"\"


\"\"\"

+光束代码(_光束,_凭依)->+[del](,+光束代码)...

->[]{
    []:->的(_凭依,光束)->光束,->+的(_凭依,+光束)
}->的(_凭依,光束)...

->+的\"光束_位置\"(光束,+位置)->+的\"光束_方向\"(光束,+方向)...
->+的\"光束_波长\"(光束,+波长)->+的\"光束_腰宽\"(光束,+腰宽)...
->+的\"光束_展宽\"(光束,+展宽)...

->的(_光束,波长)->[m_text](波长,+波长)...
->的(_光束,腰宽)->[m_text](腰宽,+腰宽)...

->[]{
    []:->在(_光束,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"位置\"(,+位置)
}...
->[]{
    []:->朝向(_光束,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}...
->[]{
    []:->的(_光束,展宽)->展宽->[m_text](展宽,+展宽),
    ->[m_text]\"300e-15\"(,+展宽)
}

"(,)
的#7""(降临规则#4,整理代码#8)
整理代码#8"\"\"\"
Nini, 打开LWFA数据分析(文件)
M模板:...
M代码:...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)...

->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量->的(_变量,_性质)...
    =>+[.](+[模板文本],_性质)->[m_text](的,+[.])
}...

->+[删除结构](,_代码)->+[M函数](,_代码)


"(,)
的#9""(整理代码#8,M代码#10)
M代码#10"%{
+[M函数](,M代码)
%}

physics_constant;
addpath('Matlab\space');

lmbd=800e-9;
w_0=10e-6;
pt_1=[0.0, 0.0];
angle_1=0;
Dtau_1=600e-15;

pt_2=[-2e-05, 0.0];
angle_2=[0];
pt_es=[0.00098, 0.0];
pt_ee=[0.001, 0.0];
v_e=[1.0, 0.0];
t_s=3.3356409519815207e-12;
t_e=3.9356409519815206e-12;

pt_0=[0.001, 0.0];
angle_0=-160;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')

axis([pt_es(1)-0.3e-3,pt_es(1)+0.3e-3,pt_es(2)-0.1e-3,pt_es(2)+0.1e-3]);

t=linspace(t_s,t_e,100);
g_i=find(z<t(1)*c&z>t(1)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);

h_e=plot(pt_es(1),pt_es(2),\"b*\");
h_g=patch(x_gm,y_gm,[1,0,0],'faceAlpha',0.5);

for i=1:length(t)
h_e.XData=v_e(1)*t(i)*c+pt_2(1);
h_e.YData=v_e(2)*t(i)*c+pt_2(2);

g_i=find(z<t(i)*c&z>t(i)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);
h_g.XData=x_gm;
h_g.YData=y_gm;

pause(0.01)
end


%{
+[M函数](,%[标题])
%}"(,)
的#11""(整理代码#8,M模板#12)
M模板#12"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;
Dtau_1=%光束_展宽;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')


t=linspace(t_s,t_e,100);
g_i=find(z<t(1)*c&z>t(1)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);

h_e=plot(pt_es(1),pt_es(2),\"b*\");
h_g=patch(x_gm,y_gm,[1,0,0],'faceAlpha',0.5);



%{
+[M函数](,M代码)
%}"(,)
的#13""(M模板#12,保存#14)
保存#14"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')


%{
+[M函数](,M代码)
%}"(,)
的#15""(降临规则#4,电子代码#16)
电子代码#16"\"\"\"


\"\"\"

+电子代码(_电子,_凭依)->+[del](,+电子代码)...

->[]{
    []:->的(_凭依,电子)->电子,->+的(_凭依,+电子)
}->的(_凭依,电子)...

->+的\"电子_位置\"(电子,+位置)->+的\"电子_方向\"(电子,+方向)...

->[]{
    []:->在(_电子,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"0,0\"(,+位置)
}...
->[]{
    []:->朝向(_电子,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}

"(,)
的#17""(降临规则#4,PM代码#18)
PM代码#18"\"\"\"


\"\"\"

+PM代码(_PM,_凭依)->+[del](,+PM代码)...

->[]{
    []:->的(_凭依,PM)->PM,->+的(_凭依,+PM)
}->的(_凭依,PM)...

->+的\"PM_位置\"(PM,+位置)->+的\"PM_方向\"(PM,+方向)...

->[]{
    []:->在(_PM,空间点)->空间点->[m_text](空间点,+位置),
    ->[]
}...
->[]{
    []:->朝向(_PM,方向)->方向->[m_text](方向,+方向),
    ->[]
}

"(,)
的#19""(降临规则#4,画电子#20)
画电子#20"\"\"\"
Nini, 打开LWFA数据分析(文件)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画电子(,_代码)->+[del](,+画电子)...
->的(画电子,M代码)...

->的(_代码,电子)->的(电子,位置#1)->的(电子,方向#1)...
->的(_代码,光束)->的(光束,位置#2)->的(光束,方向#2)...
    ->的(光束,展宽#2)...
->的(_代码,PM)->的(PM,位置#3)->的(PM,方向#3)...

->+的\"起点\"(电子,+起点)->+的\"终点\"(电子,+终点)...
->+的\"起点时间\"(电子,+起点时间)->+的\"终点时间\"(电子,+终点时间)...
->+的\"速度方向\"(电子,+速度方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],位置#1)->+[.]\"an1\"(+[matlab],方向#1)...
->+[.]\"pt2\"(+[matlab],位置#2)->+[.]\"an2\"(+[matlab],方向#2)...
->+[.]\"Dtau2\"(+[matlab],展宽#2)...
->+[.]\"pt3\"(+[matlab],位置#3)->+[.]\"an3\"(+[matlab],方向#3)...

->+[o]\"t_s\"(+[matlab],+起点时间)->+[o]\"t_e\"(+[matlab],+终点时间)...
->+[o]\"pt_es\"(+[matlab],+起点)->+[o]\"pt_ee\"(+[matlab],+终点)...
->+[o]\"v_e\"(+[matlab],+速度方向)



"(,)
的#21""(画电子#20,M代码#22)
M代码#22"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
Nini, 打开直线交点的intersection_lines_dir_pt(节点)
%}

physics_constant;
addpath('Matlab\space')

theta1=an1/180*pi;
theta2=an2/180*pi;
theta3=(an3+90)/180*pi;
[x13,y13]=intersection_lines_dir_pt(pt1,theta1,pt3,theta3);
[x23,y23]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);

pt13=[x13,y13];
pt23=[x23,y23];

% [x23,y23,X1,Y1,X2,Y2]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);
% plot([x23,X1,X2],[y23,Y1,Y2],'r*')
% plot(pt2(1),pt2(2),'bo')
% plot(pt3(1),pt3(2),'ro')

Ls=sqrt((x23-pt2(1))^2+(y23-pt2(2))^2);
Le=sqrt((x13-pt1(1))^2+(y13-pt1(2))^2);

v_e=pt13-pt1;
v_e=v_e/norm(v_e);

pt_es=pt1+Ls*v_e;
pt_ee=[x13,y13];

t_s=Ls/c;
t_e=max(Le/c,t_s+Dtau2);


%{
+[M函数](,M代码)
%}"(,)

## end
#481, 384:
"""
Nini, 打开LWFA数据分析(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"CBS示意图"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}



## end
#483, 7322:
动画预览图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(动画预览图#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开LWFA数据分析(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"CBS动画\"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}


"(,)
的#3""(动画预览图#0,降临规则#4)
降临规则#4"有什么

光束代码:...
电子代码:...
PM代码:...
+[新建阅读窗口](,电子代码)
将电子代码的\"PM\"替换为\"电子\"
将条目\"PM代码\"复制为条目\"电子代码\"

画电子:...
整理代码:...
将'画电子'的\"整理代码\"替换为\"画电子\"
+[新建阅读窗口](,整理代码)
"(,)
的#5""(降临规则#4,光束代码#6)
光束代码#6"\"\"\"


\"\"\"

+光束代码(_光束,_凭依)->+[del](,+光束代码)...

->[]{
    []:->的(_凭依,光束)->光束,->+的(_凭依,+光束)
}->的(_凭依,光束)...

->+的\"光束_位置\"(光束,+位置)->+的\"光束_方向\"(光束,+方向)...
->+的\"光束_波长\"(光束,+波长)->+的\"光束_腰宽\"(光束,+腰宽)...
->+的\"光束_展宽\"(光束,+展宽)...

->的(_光束,波长)->[m_text](波长,+波长)...
->的(_光束,腰宽)->[m_text](腰宽,+腰宽)...

->[]{
    []:->在(_光束,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"位置\"(,+位置)
}...
->[]{
    []:->朝向(_光束,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}...
->[]{
    []:->的(_光束,展宽)->展宽->[m_text](展宽,+展宽),
    ->[m_text]\"300e-15\"(,+展宽)
}

"(,)
的#7""(降临规则#4,整理代码#8)
整理代码#8"\"\"\"
Nini, 打开LWFA数据分析(文件)
M模板:...
M代码:...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)...

->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量->的(_变量,_性质)...
    =>+[.](+[模板文本],_性质)->[m_text](的,+[.])
}...

->+[删除结构](,_代码)->+[M函数](,_代码)


"(,)
的#9""(整理代码#8,M代码#10)
M代码#10"%{
+[M函数](,M代码)
%}

physics_constant;
addpath('Matlab\space');

lmbd=800e-9;
w_0=10e-6;
pt_1=[0.0, 0.0];
angle_1=0;
Dtau_1=600e-15;

pt_2=[-2e-05, 0.0];
angle_2=[0];
pt_es=[0.00098, 0.0];
pt_ee=[0.001, 0.0];
v_e=[1.0, 0.0];
t_s=3.3356409519815207e-12;
t_e=3.9356409519815206e-12;

pt_0=[0.001, 0.0];
angle_0=-160;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')

axis([pt_es(1)-0.3e-3,pt_es(1)+0.3e-3,pt_es(2)-0.1e-3,pt_es(2)+0.1e-3]);

t=linspace(t_s,t_e,100);
g_i=find(z<t(1)*c&z>t(1)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);

h_e=plot(pt_es(1),pt_es(2),\"b*\");
h_g=patch(x_gm,y_gm,[1,0,0],'faceAlpha',0.5);

for i=1:length(t)
h_e.XData=v_e(1)*t(i)*c+pt_2(1);
h_e.YData=v_e(2)*t(i)*c+pt_2(2);

g_i=find(z<t(i)*c&z>t(i)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);
h_g.XData=x_gm;
h_g.YData=y_gm;

pause(0.01)
end


%{
+[M函数](,%[标题])
%}"(,)
的#11""(整理代码#8,M模板#12)
M模板#12"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;
Dtau_1=%光束_展宽;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);


clf
hold on
patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')
plot([pt_0(1)-cosd(angle_0+90),pt_0(1)+cosd(angle_0+90)],[pt_0(2)-sind(angle_0+90),pt_0(2)+sind(angle_0+90)],'k')

axis equal
axis([pt_es(1)-0.3e-3,pt_es(1)+0.3e-3,pt_es(2)-0.1e-3,pt_es(2)+0.1e-3]);


t=linspace(t_s,t_e,100);
g_i=find(z<t(1)*c&z>t(1)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);

h_e=plot(pt_es(1),pt_es(2),\"b*\");
h_g=patch(x_gm,y_gm,[1,0,0],'faceAlpha',0.5);

for i=1:length(t)
h_e.XData=v_e(1)*t(i)*c+pt_2(1);
h_e.YData=v_e(2)*t(i)*c+pt_2(2);

g_i=find(z<t(i)*c&z>t(i)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);
h_g.XData=x_gm;
h_g.YData=y_gm;

pause(0.01)
end


%{
+[M函数](,M代码)
%}"(,)
的#13""(M模板#12,保存#14)
保存#14"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')


%{
+[M函数](,M代码)
%}"(,)
的#15""(降临规则#4,电子代码#16)
电子代码#16"\"\"\"


\"\"\"

+电子代码(_电子,_凭依)->+[del](,+电子代码)...

->[]{
    []:->的(_凭依,电子)->电子,->+的(_凭依,+电子)
}->的(_凭依,电子)...

->+的\"电子_位置\"(电子,+位置)->+的\"电子_方向\"(电子,+方向)...

->[]{
    []:->在(_电子,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"0,0\"(,+位置)
}...
->[]{
    []:->朝向(_电子,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}

"(,)
的#17""(降临规则#4,PM代码#18)
PM代码#18"\"\"\"


\"\"\"

+PM代码(_PM,_凭依)->+[del](,+PM代码)...

->[]{
    []:->的(_凭依,PM)->PM,->+的(_凭依,+PM)
}->的(_凭依,PM)...

->+的\"PM_位置\"(PM,+位置)->+的\"PM_方向\"(PM,+方向)...

->[]{
    []:->在(_PM,空间点)->空间点->[m_text](空间点,+位置),
    ->[]
}...
->[]{
    []:->朝向(_PM,方向)->方向->[m_text](方向,+方向),
    ->[]
}

"(,)
的#19""(降临规则#4,画电子#20)
画电子#20"\"\"\"
Nini, 打开LWFA数据分析(文件)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画电子(,_代码)->+[del](,+画电子)...
->的(画电子,M代码)...

->的(_代码,电子)->的(电子,位置#1)->的(电子,方向#1)...
->的(_代码,光束)->的(光束,位置#2)->的(光束,方向#2)...
    ->的(光束,展宽#2)...
->的(_代码,PM)->的(PM,位置#3)->的(PM,方向#3)...

->+的\"起点\"(电子,+起点)->+的\"终点\"(电子,+终点)...
->+的\"起点时间\"(电子,+起点时间)->+的\"终点时间\"(电子,+终点时间)...
->+的\"速度方向\"(电子,+速度方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],位置#1)->+[.]\"an1\"(+[matlab],方向#1)...
->+[.]\"pt2\"(+[matlab],位置#2)->+[.]\"an2\"(+[matlab],方向#2)...
->+[.]\"Dtau2\"(+[matlab],展宽#2)...
->+[.]\"pt3\"(+[matlab],位置#3)->+[.]\"an3\"(+[matlab],方向#3)...

->+[o]\"t_s\"(+[matlab],+起点时间)->+[o]\"t_e\"(+[matlab],+终点时间)...
->+[o]\"pt_es\"(+[matlab],+起点)->+[o]\"pt_ee\"(+[matlab],+终点)...
->+[o]\"v_e\"(+[matlab],+速度方向)



"(,)
的#21""(画电子#20,M代码#22)
M代码#22"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
Nini, 打开直线交点的intersection_lines_dir_pt(节点)
%}

physics_constant;
addpath('Matlab\space')

theta1=an1/180*pi;
theta2=an2/180*pi;
theta3=(an3+90)/180*pi;
[x13,y13]=intersection_lines_dir_pt(pt1,theta1,pt3,theta3);
[x23,y23]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);

pt13=[x13,y13];
pt23=[x23,y23];

% [x23,y23,X1,Y1,X2,Y2]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);
% plot([x23,X1,X2],[y23,Y1,Y2],'r*')
% plot(pt2(1),pt2(2),'bo')
% plot(pt3(1),pt3(2),'ro')

Ls=sqrt((x23-pt2(1))^2+(y23-pt2(2))^2);
Le=sqrt((x13-pt1(1))^2+(y13-pt1(2))^2);

v_e=pt13-pt1;
v_e=v_e/norm(v_e);

pt_es=pt1+Ls*v_e;
pt_ee=[x13,y13];

t_s=Ls/c;
t_e=max(Le/c,t_s+Dtau2);


%{
+[M函数](,M代码)
%}"(,)

## end
#485, 383:
"""
Nini, 打开LWFA数据分析(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"CBS动画"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}



## end
#487, 7710:
蒙卡模拟代码#0"

召唤规则:...
降临规则:...



"(,)
的#1""(蒙卡模拟代码#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开LWFA数据分析(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"CBS蒙卡模拟\"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}


"(,)
的#3""(蒙卡模拟代码#0,降临规则#4)
降临规则#4"有什么

光束代码:...
电子代码:...
PM代码:...
+[新建阅读窗口](,电子代码)
将电子代码的\"PM\"替换为\"电子\"
将条目\"PM代码\"复制为条目\"电子代码\"

画电子:...
整理代码:...
将'画电子'的\"整理代码\"替换为\"画电子\"
+[新建阅读窗口](,整理代码)
"(,)
的#5""(降临规则#4,光束代码#6)
光束代码#6"\"\"\"


\"\"\"

+光束代码(_光束,_凭依)->+[del](,+光束代码)...

->[]{
    []:->的(_凭依,光束)->光束,->+的(_凭依,+光束)
}->的(_凭依,光束)...

->+的\"光束_位置\"(光束,+位置)->+的\"光束_方向\"(光束,+方向)...
->+的\"光束_波长\"(光束,+波长)->+的\"光束_腰宽\"(光束,+腰宽)...
->+的\"光束_展宽\"(光束,+展宽)...

->的(_光束,波长)->[m_text](波长,+波长)...
->的(_光束,腰宽)->[m_text](腰宽,+腰宽)...

->[]{
    []:->在(_光束,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"位置\"(,+位置)
}...
->[]{
    []:->朝向(_光束,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}...
->[]{
    []:->的(_光束,展宽)->展宽->[m_text](展宽,+展宽),
    ->[m_text]\"300e-15\"(,+展宽)
}

"(,)
的#7""(降临规则#4,整理代码#8)
整理代码#8"\"\"\"
Nini, 打开LWFA数据分析(文件)
M模板:...
M代码:...
+[新建阅读窗口](,M模板)

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)...

->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量->的(_变量,_性质)...
    =>+[.](+[模板文本],_性质)->[m_text](的,+[.])
}...

->+[删除结构](,_代码)


"(,)
的#9""(整理代码#8,M代码#10)
M代码#10"%{
+[M函数](,M代码)
%}

physics_constant;
addpath('Matlab\space');

lmbd=800e-9;
w_0=10e-6;
pt_1=[0.0, 0.0];
angle_1=0;
Dtau_1=600e-15;

pt_2=[-2e-05, 0.0];
angle_2=[0];
pt_es=[0.00098, 0.0];
pt_ee=[0.001, 0.0];
v_e=[1.0, 0.0];
t_s=3.3356409519815207e-12;
t_e=3.9356409519815206e-12;

pt_0=[0.001, 0.0];
angle_0=-160;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')

axis([pt_es(1)-0.3e-3,pt_es(1)+0.3e-3,pt_es(2)-0.1e-3,pt_es(2)+0.1e-3]);

t=linspace(t_s,t_e,100);
g_i=find(z<t(1)*c&z>t(1)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);

h_e=plot(pt_es(1),pt_es(2),\"b*\");
h_g=patch(x_gm,y_gm,[1,0,0],'faceAlpha',0.5);

for i=1:length(t)
h_e.XData=v_e(1)*t(i)*c+pt_2(1);
h_e.YData=v_e(2)*t(i)*c+pt_2(2);

g_i=find(z<t(i)*c&z>t(i)*c-Dtau_1*c);
x_gm=x_2([g_i,end-fliplr(g_i)]);
y_gm=y_2([g_i,end-fliplr(g_i)]);
h_g.XData=x_gm;
h_g.YData=y_gm;

pause(0.01)
end


%{
+[M函数](,%[标题])
%}"(,)
的#11""(整理代码#8,M模板#12)
M模板#12"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\CBS');
addpath('Matlab\random');

N=100;

E_e=1000e6;
pt_e=[%电子_位置];
angle_e=%电子_方向;

%{
+[M函数](,%[标题])
%}

E_pulse=20;
pt_p=[%光束_位置];
angle_p=%光束_方向;
w_0=%光束_腰宽;
Dtau=%光束_展宽;
dt=25e-15/4;
lmbd_1=%光束_波长;

pt_0=[%PM_位置];
angle_0=%PM_方向;

omega_1=2*pi*c/lmbd_1;
k_1r=[cosd(angle_p),sind(angle_p)];
[k_x1,k_y1]=transform_2D_reflection(k_1r(1),k_1r(2),angle_0,0,0);
K_1=[1,k_x1,k_y1,0]*omega_1/c;


E_1=E_e*e+m_e*c^2;
gamma=E_1/m_e/c^2;
beta0=sqrt(1-1/gamma^2);
p_1r=[cosd(angle_e),sind(angle_e)];
beta=p_1r*beta0;
P_1=[E_1/c,p_1r*beta0*c*gamma*m_e,0];

%{
Xs=[];
Ys=[];
E_es=[];
E_gamma=[];
+[M函数](,%[标题])
%}

t_s=%起点时间;
t_e=%终点时间;
t=t_s:dt:t_e;

v_0=beta*c;
for j=1:N
    pt=pt_e+t(1)*v_0;
    xs=[pt(1)];
    ys=[pt(2)];
    P=P_1;
    for i=1:length(t)
        % [x_1,y_1,x_2,y_2]=transform_2D_reflection_inv(pt(1),pt(2),angle,x_0,y_0);
        % In=I(y_2,x_2,t_i);
        [~,~,In]=Gaussian_mirror_field(pt(1),pt(2),t(i),...
            E_pulse,lmbd_1,w_0,Dtau,pt_p,angle_p,pt_0,angle_0);
        n_p=In/omega_1/hbar/c;

        [P_2,K_2,rate]=CBS_event(P,K_1,n_p,dt);
        E_gamma(end+1)=K_2(1)*c*hbar;
        P=P_2;
        E=P_2(1)*c;
        gamma=E/m_e/c^2;
        beta=P_2(2:3)/gamma/m_e/c;
    
        pt=pt+beta*dt*c;
        
        xs(end+1)=pt(1);
        ys(end+1)=pt(2);
    end

    Xs(end+1,:)=xs;
    Ys(end+1,:)=ys;
    E_es(end+1)=E;
end

E_gamma(E_gamma==0)=[];
theta_out=(Ys(:,end)-Ys(:,end-1))./(Xs(:,end)-Xs(:,end-1));

subplot(2,2,1)
plot(Xs'/c/1e-15,Ys')
xlabel('t [fs]')

subplot(2,2,2)
hist(theta_out/1e-3)
xlabel('\theta [mrad]')

subplot(2,2,3)
hist(E_gamma/e/1e6,80)
xlabel('E_\gamma [MeV]')

subplot(2,2,4)
hist(E_es/e/1e6)
xlabel('E_e [MeV]')



%{
+[M函数](,%[标题])
%}"(,)
的#13""(M模板#12,保存#14)
保存#14"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')


%{
+[M函数](,M代码)
%}"(,)
的#15""(降临规则#4,电子代码#16)
电子代码#16"\"\"\"


\"\"\"

+电子代码(_电子,_凭依)->+[del](,+电子代码)...

->[]{
    []:->的(_凭依,电子)->电子,->+的(_凭依,+电子)
}->的(_凭依,电子)...

->+的\"电子_位置\"(电子,+位置)->+的\"电子_方向\"(电子,+方向)...

->[]{
    []:->在(_电子,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"0,0\"(,+位置)
}...
->[]{
    []:->朝向(_电子,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}

"(,)
的#17""(降临规则#4,PM代码#18)
PM代码#18"\"\"\"


\"\"\"

+PM代码(_PM,_凭依)->+[del](,+PM代码)...

->[]{
    []:->的(_凭依,PM)->PM,->+的(_凭依,+PM)
}->的(_凭依,PM)...

->+的\"PM_位置\"(PM,+位置)->+的\"PM_方向\"(PM,+方向)...

->[]{
    []:->在(_PM,空间点)->空间点->[m_text](空间点,+位置),
    ->[]
}...
->[]{
    []:->朝向(_PM,方向)->方向->[m_text](方向,+方向),
    ->[]
}

"(,)
的#19""(降临规则#4,画电子#20)
画电子#20"\"\"\"
Nini, 打开LWFA数据分析(文件)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画电子(,_代码)->+[del](,+画电子)...
->的(画电子,M代码)...

->的(_代码,电子)->的(电子,位置#1)->的(电子,方向#1)...
->的(_代码,光束)->的(光束,位置#2)->的(光束,方向#2)...
    ->的(光束,展宽#2)...
->的(_代码,PM)->的(PM,位置#3)->的(PM,方向#3)...

->+的\"起点\"(电子,+起点)->+的\"终点\"(电子,+终点)...
->+的\"起点时间\"(电子,+起点时间)->+的\"终点时间\"(电子,+终点时间)...
->+的\"速度方向\"(电子,+速度方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],位置#1)->+[.]\"an1\"(+[matlab],方向#1)...
->+[.]\"pt2\"(+[matlab],位置#2)->+[.]\"an2\"(+[matlab],方向#2)...
->+[.]\"Dtau2\"(+[matlab],展宽#2)...
->+[.]\"pt3\"(+[matlab],位置#3)->+[.]\"an3\"(+[matlab],方向#3)...

->+[o]\"t_s\"(+[matlab],+起点时间)->+[o]\"t_e\"(+[matlab],+终点时间)...
->+[o]\"pt_es\"(+[matlab],+起点)->+[o]\"pt_ee\"(+[matlab],+终点)...
->+[o]\"v_e\"(+[matlab],+速度方向)



"(,)
的#21""(画电子#20,M代码#22)
M代码#22"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
Nini, 打开直线交点的intersection_lines_dir_pt(节点)
%}

physics_constant;
addpath('Matlab\space')

theta1=an1/180*pi;
theta2=an2/180*pi;
theta3=(an3+90)/180*pi;
[x13,y13]=intersection_lines_dir_pt(pt1,theta1,pt3,theta3);
[x23,y23]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);

pt13=[x13,y13];
pt23=[x23,y23];

% [x23,y23,X1,Y1,X2,Y2]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);
% plot([x23,X1,X2],[y23,Y1,Y2],'r*')
% plot(pt2(1),pt2(2),'bo')
% plot(pt3(1),pt3(2),'ro')

Ls=sqrt((x23-pt2(1))^2+(y23-pt2(2))^2);
Le=sqrt((x13-pt1(1))^2+(y13-pt1(2))^2);

v_e=pt13-pt1;
v_e=v_e/norm(v_e);

pt_es=pt1+Ls*v_e;
pt_ee=[x13,y13];

t_s=Ls/c-Dtau2/2*2;
t_e=max(Le/c,t_s+Dtau2*2);


%{
+[M函数](,M代码)
%}"(,)

## end
#489, 385:
"""
Nini, 打开LWFA数据分析(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"CBS蒙卡模拟"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}



## end
#491, 7863:
光场预览图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(光场预览图#0,降临规则#2)
降临规则#2"有什么

光束代码:...
电子代码:...
PM代码:...
+[新建阅读窗口](,电子代码)
将电子代码的\"PM\"替换为\"电子\"
将条目\"PM代码\"复制为条目\"电子代码\"

画电子:...
整理代码:...
将'画电子'的\"整理代码\"替换为\"画电子\"
+[新建阅读窗口](,整理代码)
"(,)
的#3""(降临规则#2,画电子#4)
画电子#4"\"\"\"
Nini, 打开LWFA数据分析(文件)
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画电子(,_代码)->+[del](,+画电子)...
->的(画电子,M代码)...

->的(_代码,电子)->的(电子,位置#1)->的(电子,方向#1)...
->的(_代码,光束)->的(光束,位置#2)->的(光束,方向#2)...
    ->的(光束,展宽#2)...
->的(_代码,PM)->的(PM,位置#3)->的(PM,方向#3)...

->+的\"起点\"(电子,+起点)->+的\"终点\"(电子,+终点)...
->+的\"起点时间\"(电子,+起点时间)->+的\"终点时间\"(电子,+终点时间)...
->+的\"速度方向\"(电子,+速度方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],位置#1)->+[.]\"an1\"(+[matlab],方向#1)...
->+[.]\"pt2\"(+[matlab],位置#2)->+[.]\"an2\"(+[matlab],方向#2)...
->+[.]\"Dtau2\"(+[matlab],展宽#2)...
->+[.]\"pt3\"(+[matlab],位置#3)->+[.]\"an3\"(+[matlab],方向#3)...

->+[o]\"t_s\"(+[matlab],+起点时间)->+[o]\"t_e\"(+[matlab],+终点时间)...
->+[o]\"pt_es\"(+[matlab],+起点)->+[o]\"pt_ee\"(+[matlab],+终点)...
->+[o]\"v_e\"(+[matlab],+速度方向)



"(,)
的#5""(画电子#4,M代码#6)
M代码#6"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
Nini, 打开直线交点的intersection_lines_dir_pt(节点)
pt13
%}

physics_constant;
addpath('Matlab\space')

theta1=an1/180*pi;
theta2=an2/180*pi;
theta3=(an3+90)/180*pi;
[x13,y13]=intersection_lines_dir_pt(pt1,theta1,pt3,theta3);
[x23,y23]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);

pt13=[x13,y13];
pt23=[x23,y23];

% [x23,y23,X1,Y1,X2,Y2]=intersection_lines_dir_pt(pt2,theta2,pt3,theta3);
% plot([x23,X1,X2],[y23,Y1,Y2],'r*')
% plot(pt2(1),pt2(2),'bo')
% plot(pt3(1),pt3(2),'ro')

Ls=sqrt((x23-pt2(1))^2+(y23-pt2(2))^2);
Le=sqrt((x13-pt1(1))^2+(y13-pt1(2))^2);

v_e=pt13-pt1;
v_e=v_e/norm(v_e);

pt_es=pt1+Ls*v_e;
pt_ee=[x13,y13];

t_s=Ls/c-Dtau2/2*2;
t_e=max(Le/c,t_s+Dtau2*2);


%{
+[M函数](,M代码)
%}"(,)
的#7""(M代码#6,新窗口#8)
新窗口#8""(,)
的#9""(新窗口#8,m_width#10)
m_width#10"958"(,)
的#11""(新窗口#8,m_height#12)
m_height#12"476"(,)
的#13""(新窗口#8,m_y#14)
m_y#14"38"(,)
的#15""(新窗口#8,m_x#16)
m_x#16"1"(,)
的#17""(新窗口#8,m_cursor#18)
m_cursor#18"0,0"(,)
的#19""(新窗口#8,m_readPtr#20)
m_readPtr#20""(,)
的#21""(新窗口#8,m_event#22)
m_event#22""(,)
的#23""(新窗口#8,m_port#24)
m_port#24""(,)
的#25""(新窗口#8,m_compiler#26)
m_compiler#26""(,)
的#27""(降临规则#2,PM代码#28)
PM代码#28"\"\"\"


\"\"\"

+PM代码(_PM,_凭依)->+[del](,+PM代码)...

->[]{
    []:->的(_凭依,PM)->PM,->+的(_凭依,+PM)
}->的(_凭依,PM)...

->+的\"PM_位置\"(PM,+位置)->+的\"PM_方向\"(PM,+方向)...

->[]{
    []:->在(_PM,空间点)->空间点->[m_text](空间点,+位置),
    ->[]
}...
->[]{
    []:->朝向(_PM,方向)->方向->[m_text](方向,+方向),
    ->[]
}

"(,)
的#29""(降临规则#2,电子代码#30)
电子代码#30"\"\"\"


\"\"\"

+电子代码(_电子,_凭依)->+[del](,+电子代码)...

->[]{
    []:->的(_凭依,电子)->电子,->+的(_凭依,+电子)
}->的(_凭依,电子)...

->+的\"电子_位置\"(电子,+位置)->+的\"电子_方向\"(电子,+方向)...

->[]{
    []:->在(_电子,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"0,0\"(,+位置)
}...
->[]{
    []:->朝向(_电子,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}

"(,)
的#31""(降临规则#2,整理代码#32)
整理代码#32"\"\"\"
Nini, 打开LWFA数据分析(文件)
M模板:...
M代码:...
+[新建阅读窗口](,M模板)

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)...

->+[.](+[模板文本],+[标题])->[]{
    []=>的(_代码,_变量)->_变量->的(_变量,_性质)...
    =>+[.](+[模板文本],_性质)->[m_text](的,+[.])
}...

->+[删除结构](,_代码)->+[M函数](,_代码)


"(,)
的#33""(整理代码#32,M模板#34)
M模板#34"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\CBS');
addpath('Matlab\random');

E_e=1000e6;
pt_e=[%电子_位置];
angle_e=%电子_方向;

%{
+[M函数](,%[标题])
%}

E_pulse=10;
pt_p=[%光束_位置];
angle_p=%光束_方向;
w_0=%光束_腰宽;
Dtau=%光束_展宽;
lmbd_1=%光束_波长;

pt_0=[%PM_位置];
angle_0=%PM_方向;


% Gaussian beam
z_R=w_0.^(2).*pi./lmbd_1;
I_0=(2.*E_pulse)./(sqrt(pi).*pi.*w_0.^(2).*Dtau);
w=@(z)w_0.*sqrt(1+(z./z_R).^(2));
I=@(r,z,t)I_0.*(w_0.^(2))./(w(z).^(2)).*exp(-(2.*r.^(2))./(w(z).^(2))).*exp(-((t-z./c).^(2))./(Dtau.^(2)));

omega_1=2*pi*c/lmbd_1;
k_1r=[cosd(angle_p),sind(angle_p)];
K_1=[1,k_1r,0]*omega_1/c;

E_1=E_e*e+m_e*c^2;
gamma=E_1/m_e/c^2;
beta0=sqrt(1-1/gamma^2);
p_1r=[cosd(angle_e),sind(angle_e)];
beta=p_1r*beta0;
P_1=[E_1/c,p_1r*beta0*c*gamma*m_e,0];

%{
+[M函数](,%[标题])
%}

t=linspace(%起点时间,%终点时间,10);
x=linspace(0,1.5,300)*1e-3;
y=linspace(-1,1,300)*0.1e-3;
[X,Y]=meshgrid(x,y);
In=Gaussian_mirror_field(X,Y,t(1),E_pulse,lmbd_1,w_0,Dtau,pt_p,angle_p,pt_0,angle_0);
pt=pt_e+t(1)*beta*c;
clf
hold on
[~,h_c]=contourf(X,Y,In/I_0*1e-3);
h_e=plot([pt_e(1),pt(1)],[pt_e(2),pt(2)],'r*-','LineWidth',2);
axis equal

for i=1:length(t)
In=Gaussian_mirror_field(X,Y,t(i),E_pulse,lmbd_1,w_0,Dtau,pt_p,angle_p,pt_0,angle_0);
% In=I(Y_12,X_12,t(i))+I(Y_22,X_22,t(i));
pt=pt_e+t(i)*beta*c;

h_e.XData=[pt_e(1),pt(1)];
h_e.YData=[pt_e(2),pt(2)];
h_c.ZData=In;
pause(0.01)
end


%{
+[M函数](,%[标题])
%}"(,)
的#35""(M模板#34,保存#36)
保存#36"%{
+[M函数](,%[标题])

保存:...
%}

physics_constant;
addpath('Matlab\space');

lmbd=%光束_波长;
w_0=%光束_腰宽;
pt_1=[%光束_位置];
angle_1=%光束_方向;

pt_2=[%电子_位置];
angle_2=[%电子_方向];
pt_es=[%起点];
pt_ee=[%终点];
v_e=[%速度方向];
t_s=%起点时间;
t_e=%终点时间;

pt_0=[%PM_位置];
angle_0=%PM_方向;
x_0=pt_0(1);
y_0=pt_0(2);

z=linspace(0,1,10000)*3e-3;
z_R=w_0.^(2).*pi./lmbd;
w=w_0.*sqrt(1+(z./z_R).^(2));

x=[z,fliplr(z)];
y=[w,-fliplr(w)];
x_1=x*cosd(angle_1)-y*sind(angle_1)+pt_1(1);
y_1=y*cosd(angle_1)+x*sind(angle_1)+pt_1(2);
[x_2,y_2]=transform_2D_reflection(x_1,y_1,angle_0,x_0,y_0);

patch(x_1,y_1,[1,0,0],'faceAlpha',0.05)
patch(x_2,y_2,[1,0,0],'faceAlpha',0.2)
plot([pt_2(1),pt_es(1),pt_ee(1)],[pt_2(2),pt_es(2),pt_ee(2)],'bo-')


%{
+[M函数](,M代码)
%}"(,)
的#37""(整理代码#32,M代码#38)
M代码#38"%{
+[M函数](,M代码)
%}

physics_constant;
addpath('Matlab\CBS');
addpath('Matlab\random');

E_e=1000e6;
pt_e=[-2e-05, 0.0];
angle_e=0;

%{
+[M函数](,示意图代码)
%}

E_pulse=10;
pt_p=[0.0, 0.0];
angle_p=0;
w_0=10e-6;
Dtau=600e-15;
lmbd_1=800e-9;

pt_0=[0.001, 0.0];
angle_0=-174;


% Gaussian beam
z_R=w_0.^(2).*pi./lmbd_1;
I_0=(2.*E_pulse)./(sqrt(pi).*pi.*w_0.^(2).*Dtau);
w=@(z)w_0.*sqrt(1+(z./z_R).^(2));
I=@(r,z,t)I_0.*(w_0.^(2))./(w(z).^(2)).*exp(-(2.*r.^(2))./(w(z).^(2))).*exp(-((t-z./c).^(2))./(Dtau.^(2)));

omega_1=2*pi*c/lmbd_1;
k_1r=[cosd(angle_p),sind(angle_p)];
K_1=[1,k_1r,0]*omega_1/c;

E_1=E_e*e+m_e*c^2;
gamma=E_1/m_e/c^2;
beta0=sqrt(1-1/gamma^2);
p_1r=[cosd(angle_e),sind(angle_e)];
beta=p_1r*beta0;
P_1=[E_1/c,p_1r*beta0*c*gamma*m_e,0];

%{
+[M函数](,示意图代码)
%}

t=linspace(3.0356409519815208e-12,3.6356409519815206e-12,10);
x=linspace(0,0.35,1000)*1e-3;
y=linspace(-1,1,1000)*0.1e-3;
[X,Y]=meshgrid(x,y);
In=Gaussian_mirror_field(X,Y,t(1),E_pulse,lmbd_1,w_0,Dtau,pt_p,angle_p,pt_0,angle_0);
pt=pt_e+t(1)*beta*c;
clf
hold on
[~,h_c]=contourf(X,Y,In/I_0*1e-3);
h_e=plot([pt_e(1),pt(1)],[pt_e(2),pt(2)],'r*-','LineWidth',2);
axis equal

for i=1:length(t)
In=Gaussian_mirror_field(X,Y,t(i),E_pulse,lmbd_1,w_0,Dtau,pt_p,angle_p,pt_0,angle_0);
% In=I(Y_12,X_12,t(i))+I(Y_22,X_22,t(i));
pt=pt_e+t(i)*beta*c;

h_e.XData=[pt_e(1),pt(1)];
h_e.YData=[pt_e(2),pt(2)];
h_c.ZData=In;
pause(0.01)
end


%{
+[M函数](,%[标题])
%}"(,)
的#39""(降临规则#2,光束代码#40)
光束代码#40"\"\"\"


\"\"\"

+光束代码(_光束,_凭依)->+[del](,+光束代码)...

->[]{
    []:->的(_凭依,光束)->光束,->+的(_凭依,+光束)
}->的(_凭依,光束)...

->+的\"光束_位置\"(光束,+位置)->+的\"光束_方向\"(光束,+方向)...
->+的\"光束_波长\"(光束,+波长)->+的\"光束_腰宽\"(光束,+腰宽)...
->+的\"光束_展宽\"(光束,+展宽)...

->的(_光束,波长)->[m_text](波长,+波长)...
->的(_光束,腰宽)->[m_text](腰宽,+腰宽)...

->[]{
    []:->在(_光束,空间点)->空间点->[m_text](空间点,+位置),
    ->[m_text]\"位置\"(,+位置)
}...
->[]{
    []:->朝向(_光束,方向)->方向->[m_text](方向,+方向),
    ->[m_text]\"0\"(,+方向)
}...
->[]{
    []:->的(_光束,展宽)->展宽->[m_text](展宽,+展宽),
    ->[m_text]\"300e-15\"(,+展宽)
}

"(,)
的#41""(光场预览图#0,召唤规则#42)
召唤规则#42"\"\"\"
Nini, 打开LWFA数据分析(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"CBS光场\"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}


"(,)

## end
#493, 383:
"""
Nini, 打开LWFA数据分析(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"CBS光场"(,召唤星辰)...
->+整理代码(_凭依,_凭依)->+的(操作,+整理代码)...
->+画电子(_凭依,_凭依)->+的(操作,+画电子)...

->[]{
    []=>的(_媒介,_物体)->_物体->在(_物体,)=>[]:
        ->的(_物体,波长)->波长->+光束代码(_物体,_凭依)->+的(操作,+光束代码),
        ->的(_物体,能量)->能量->+电子代码(_物体,_凭依)->+的(操作,+电子代码),
        ->的(_物体,宽度)->宽度->+PM代码(_物体,_凭依)->+的(操作,+PM代码)
}



## end
#495, 3:
497
## end
#497, 3:
499
## end
#499, 3:
501
## end
#501, 3:
503
## end
#503, 11147:
减法运算#0"
召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
将'召唤规则'的\"加上\"替换为\"减去\"

"(,)
的#1""(减法运算#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,减去)->减去(_和数1,_和数2)->_和数1->_和数2(,)...
        ->+和数1(+式子,_和数1)->+和数2(+式子,_和数2)
}...

->和数1(+式子,_和数1)->和数2(+式子,_和数2)...

->+整理和式(_和数1,_和数1)->+的(操作,+整理和式)...
->[]{
    []:->_re\"[+\-]\"(_和数1,_y)->_y->+减法1(_和数1,_和数2)->+的(操作,+减法1),
    ->+减法2(_和数1,_和数2)->+的(操作,+减法2)
}




"(,)
的#3""(减法运算#0,降临规则#4)
降临规则#4"

减法1:...
减法2:...
(减法2是第一个和数是单一数字时的减法)
将减法2的\"加法\"替换为\"减法\"
+[新建阅读窗口](,减法2)

整理和式:...
+[新建阅读窗口](,整理和式)


"(,)
的#5""(降临规则#4,减法2#6)
减法2#6"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
+[新建阅读窗口](,描述结构)
+[新建阅读窗口](,库)
将'描述结构'的\"加上\"替换为\"减去\"

\"\"\"

+减法2(_和数1,_和数2)->+[del](,+减法2)...
->的(减法2,描述结构)->的(减法2,库)...

->+[code]([想],描述结构)->[想](_和数1,_和数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}



"(,)
的#7""(减法2#6,描述结构#8)
描述结构#8"\"\"\"
和式:...
减去:...
+[新建阅读窗口](,和式)
将'减去'的\"加上\"替换为\"减去\"

\"\"\"

+描述结构(_和数1,_和数2)->+操作(+描述结构,)...
->的(描述结构,和式)->的(描述结构,减去)...

->+和式(_和数1,)...
->+[code]([想],和式)->[想](+和式,_和数1)...

->+[code]([想]#2,减去)->+[.]([想]#2,+操作)->[想]#2(+和式,_和数2)

"(,)
的#9""(描述结构#8,和式#10)
和式#10"\"\"\"


\"\"\"
+和式(和式#0,_x)->和式(,)...

->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],和式)->[想](和式#0,_x2),
    ->+尾部(和式#0,_x)
}...

->+的(和式#0,_x)




"(,)
的#11""(描述结构#8,减去#12)
减去#12"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

版本1:...
(连续相加的版本)
保存:...

\"\"\"
+减去(和式,_x)->减去(,)...
->的(减去,首变量)->的(减去,数字项)...

->和式(_ys,)->.(+减去,操作)...
->尾部(和式,_ye)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_y,)...
        ->+数字相减(_y,_x)->+的(操作,+数字相减)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#13""(减去#12,首变量#14)
首变量#14"\"\"\"


\"\"\"
+首变量(_x,)...
->[]{
    []:->[is](_x,_re#0)->_re#0\"^-?[0-9]+\.?[0-9]*\"...
        ->_re\"[*/]\"(_x,_re#2)->_re#2\"\\?[a-zA-Z0-9_]|括号\"->+是(+首变量,_re#2),
    ->[is](_x,_re#1)->_re#1\"\\?[a-zA-Z0-9_]|括号\"->+是(+首变量,_x)
}


"(,)
的#15""(减去#12,数字项#16)
数字项#16"\"\"\"


\"\"\"

+数字项(_x,)->[is](_x,_re)->_re\"^-?[0-9]+\.?[0-9]*\"...
=>_re\"[*/\^]\"(_x,)


"(,)
的#17""(减去#12,版本1#18)
版本1#18"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

\"\"\"
+加上(和式,_x)->加上(,)...
->的(加上,首变量)->的(加上,数字项)...

->和式(_ys,)->.(+加上,操作)...
->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],加上)->+[.]([想],操作)->[想](和式,_x2),
    ->[]
}...
->尾部(和式,_ye)...
->+[code]([想],首变量)->[想](_x,)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_x,)...
        ->+数字相加(_y,_x)->+的(操作,+数字相加)
    },
    ->+[code]([想]#2,首变量)->[想]#2(_x,)->是([想]#2,_xa)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#3,首变量)->[想]#3(_y,)...
            ->是([想]#3,_ya)->[eq](_xa,_ya)...
            ->+系数相加(_y,_x)->+的(操作,+系数相加)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#19""(减去#12,保存#20)
保存#20"\"\"\"
首变量:...
数字项:...
+[新建阅读窗口](,数字项)

版本1:...
(连续相加的版本)
保存:...

\"\"\"
+加上(和式,_x)->加上(,)...
->的(加上,首变量)->的(加上,数字项)...

->和式(_ys,)->.(+加上,操作)...
->尾部(和式,_ye)...
->+[code]([想],首变量)->[想](_x,)...

->[]{
    []:->+[code]([想]#1,数字项)->[想]#1(_x,)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#2,数字项)->[想]#2(_y,)...
        ->+数字相加(_y,_x)->+的(操作,+数字相加)
    },
    ->+[code]([想]#2,首变量)->[想]#2(_x,)->是([想]#2,_xa)->[]{
        []:->的(和式,_y)->_y->+[code]([想]#3,首变量)->[想]#3(_y,)...
            ->是([想]#3,_ya)->[eq](_xa,_ya)...
            ->+系数相加(_y,_x)->+的(操作,+系数相加)
    },
    ->+新项(_ye,_x)->+的(操作,+新项)
}



"(,)
的#21""(减法2#6,库#22)
库#22"+[删除结构](,库)

数字相减:...
系数相减:...
(暂时没用上)
新项:...
将'数字相减'的\"数字相加\"替换为\"数字相减\"
将新项的\"乘数\"替换为\"和数\"
+[新建阅读窗口](,新项)
+[修改标题]\"系数相减\"(,系数相加)


"(,)
的#23""(库#22,数字相减#24)
数字相减#24"\"\"\"
M代码:...

\"\"\"

+数字相减(_y,_x)->+[del](,+数字相减)...
->的(数字相减,M代码)...

->+[标题]#y(_y,)->+[标题]#x(_x,)...
->Matlab->[]{
    []:->[]{[]:->负号(_y,),->-(,_y)}->[]{[]:->负号(_x,),->-(,_x)},
    ->[]{[]:->负号(_y,),->-(,_y)}...
        ->+[matlab]\"ans=-x;\"(Matlab,+[标题]#x)->+[.]\"x\"(+[matlab],+[标题]#x),
    ->[]{[]:->负号(_x,),->-(,_x)}...
        ->+[matlab]\"ans=-x;\"(Matlab,+[标题]#x)->+[.]\"x\"(+[matlab],+[标题]#x),
    ->[]
}...

->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
->+[.]\"x\"(+[matlab],+[标题]#x)->+[.]\"y\"(+[matlab],+[标题]#y)...

->+[修改内容](+[临时文本],+[修改标题]#y)->+[修改标题]#y(,_y)...
->+[修改内容](+[临时文本],+[修改内容]#y)->+[修改内容]#y(,_y)



"(,)
的#25""(数字相减#24,M代码#26)
M代码#26"%{

%}

y=y-x;
if floor(y)==y
    ans=int64(y);
else
    ans=y;
end



"(,)
的#27""(库#22,系数相减#28)
系数相减#28"\"\"\"
保存:...

\"\"\"

+系数相加(_y,_x)->+[del](,+系数相加)...
->系数相加->的(库,系数相加)->的(库,数字相加)...

->的(表达式,_y)...
->+头部->[]{
    []:->[is](_y,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[.](+头部,_y),
    ->_re\"[*/]\"(_y2,_y)->_y2->+[.](+头部,_y2),
    ->+1\"1\"->+的(表达式,+1)->[]{
        []&:=>_re\"[*/]\"(_y,)=>+[左连](_re,+1)
    }->+*(_y,+1)->+的(表达式,+*)->+[.](+头部,+1)
}...

->.(+头部,_n)->[]{
    []:->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[做](_n,_x)->+[code](+[做],数字相加),
    ->+1->[]{
        []:->负号(_x,)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->-(,_x)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->+[做](_n,+1)->+[code](+[做],数字相加)
    }->+[del](,+1)
}





"(,)
的#29""(系数相减#28,保存#30)
保存#30"\"\"\"


\"\"\"

+系数相加(_y,_x)->+[del](,+系数相加)...
->系数相加->的(库,系数相加)->的(库,数字相加)...

->的(表达式,_y)...
->+头部->[]{
    []:->[is](_y,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[.](+头部,_y),
    ->_re\"[*/]\"(_y2,_y)->_y2->+[.](+头部,_y2),
    ->+1\"1\"->+*(+1,_y)->+的(表达式,+1)->+的(表达式,+*)->[]{
        []&:=>_re\"[+\-]|负号\"(_y,)=>+[左连](_re,+1),
        =>_re\"[+\-]\"(,_y)=>+[右连](_re,+1)
    }->+[.](+头部,+1)
}...

->.(+头部,_n)->[]{
    []:->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"->+[做](_n,_x)->+[code](+[做],数字相加),
    ->+1->[]{
        []:->负号(_x,)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->-(,_x)->+负号(+1,)...
            ->+[做](_n,+1)->+[code](+[做],数字相加)->+[del](,+负号),
        ->+[做](_n,+1)->+[code](+[做],数字相加)
    }->+[del](,+1)
}





"(,)
的#31""(库#22,新项#32)
新项#32"\"\"\"
保存:...
操作:...
+[新建阅读窗口](,操作)

\"\"\"
+新项(_y,_x)->+[del](,+新项)...
->的(新项,操作)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->+(,_x)->+[修改标题]\"-\"(,+运算),
    ->-(,_x)->+[修改标题]\"+\"(,+运算),
    ->+[修改标题]\"-\"(,+运算)
}...
->[]{
    []:->_re\"[+\-]\"(_y,)->+[左连](_re,+变量),
    ->[]
}...

->+[structure](compiler,+场景)->+[del](,+场景)...
->+[code](+[structure],操作)...

->+[.](+[structure],+变量)->+[.](+[structure],表达式)...
->+[.](+[structure],+和数)->+和数(,_x)...
->+[del](,+变量)->+[del](,+和数)


"(,)
的#33""(新项#32,保存#34)
保存#34"\"\"\"
保存:...

\"\"\"
+新项(_y,_x)->+[del](,+新项)...

->的(表达式,_y)...
->+的(表达式,+变量)->+的(表达式,+运算)->+运算(_y,+变量)...
->[]{
    []:->+[修改标题](_x,+变量)
}...
->[]{
    []:->_re\"[+\-]\"(,_x)->+[修改标题](_re,+运算),
    ->+[修改标题]\"+\"(,+运算)
}...

->[]{
    []:->_re\"[+\-]\"(_y,)->+[左连](_re,+变量),
    ->[]
}



"(,)
的#35""(新项#32,操作#36)
操作#36"\"\"\"


\"\"\"

+[修改内容]\"表达式\"(,记忆);
和数(,_x)->+[乘式](_x,+新变量)->+[表达式转结构](+新变量,+新变量);

的(新变量,起点)->起点(,_x)->变量&:
    =>_re#1\"[+\-]\"(变量,)=>+[左连](_re#1,_x),
    =>_re#2\"[+\-]\"(,变量)=>+[右连](_re#2,_x);

的(新变量,起点)->起点(,_起点)...
->+[del](,起点)->+[del](,新变量)...
=>的(新变量,_x)=>+的(表达式,_x);


"(,)
的#37""(降临规则#4,减法1#38)
减法1#38"\"\"\"
Nini, 打开公式分析器(文件)
描述结构:...
库:...
将'描述结构'的\"加上\"替换为\"减去\"
+[新建阅读窗口](,描述结构)

\"\"\"

+减法1(_和数1,_和数2)->+[del](,+减法2)...
->的(减法1,描述结构)->的(减法1,库)...

->+[code]([想],描述结构)->[想](_和数1,_和数2)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_y,_x)->_y->_x(,)...
    =>的(库,_条目)->[eq](_操作,_条目)->+[做](_y,_x)->+[code](+[做],_条目)
}


"(,)
的#39""(减法1#38,描述结构#40)
描述结构#40"\"\"\"
依次减去:...
+[新建阅读窗口](,依次减去)
+[修改标题]\"依次减去\"(,依次减去)
将'依次减去'的\"减去\"替换为\"减去\"

\"\"\"

+描述结构(_和数1,_和数2)->+操作(+描述结构,)...
->的(描述结构,依次减去)...

->+[code]([想]#2,依次减去)->+[.]([想]#2,+操作)->[想]#2(_和数1,_和数2)

"(,)
的#41""(描述结构#40,依次减去#42)
依次减去#42"\"\"\"


\"\"\"
+依次减去(_y,_x)->依次减去(,)...

->.(+依次减去,操作)->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],依次减去)->+[.]([想],操作)->[想](_y,_x2),
    ->[]
}...

->+减去(_y,_x)->+的(操作,+减去)


"(,)
的#43""(减法1#38,库#44)
库#44"

减去:...
+[修改标题]\"减去\"(,加上)
将'减去'的\"加上\"替换为\"减去\"




"(,)
的#45""(库#44,减去#46)
减去#46"\"\"\"
整理负号:...

\"\"\"

+减去(_y,_x)->+[del](,+减去)...
->减去->的(库,减去)->的(减法1,库)->的(降临规则,减法1)->的(降临规则,减法2)...
->的(减去,整理负号)...

->+[做](_y,_x)->+[code](+[做],减法2)


"(,)
的#47""(减去#46,整理负号#48)
整理负号#48"\"\"\"


\"\"\"
+整理负号(,_y)->+[del](,+整理负号)...

->负号(_y,)->+[del](,负号):
    ->+(,_y)->+[修改标题]\"-\"(,+)->+[修改内容]\"-\"(,+),
    ->-(,_y)->+[修改标题]\"+\"(,-)->+[修改内容]\"+\"(,-)



"(,)
的#49""(降临规则#4,整理和式#50)
整理和式#50"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+整理和式(,_和数)->+[del](,+整理和式)...
->的(整理和式,描述结构)->的(整理和式,库)...

->+[code]([想],描述结构)->[想](,_和数)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_x)->_x(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->[eq](_操作,_条目)->+[做](,_x)->+[code](+[做],_条目)
}


"(,)
的#51""(整理和式#50,描述结构#52)
描述结构#52"\"\"\"
和式:...
+[新建阅读窗口](,和式)

\"\"\"

+描述结构(,_和数)->+操作(+描述结构,)...
->的(描述结构,和式)...

->+头部(+和式,_和数)...
->+[code]([想],和式)->+[.]([想],+操作)->[想](+和式,_和数)


"(,)
的#53""(描述结构#52,和式#54)
和式#54"\"\"\"


\"\"\"
+和式(和式#0,_x)->和式(,)...

->.(+和式,操作)...
->[]{
    []:->_re\"[+\-]\"(_x,_x2)->_x2->+[code]([想],和式)->+[.]([想],操作)->[想](和式#0,_x2),
    ->+尾部(和式#0,_x)
}...

->[标题](_x,)->Python:
    ->[is](_x,_re)->_re\"-?[0-9]+\.?[0-9]*\"...
    ->[]{
        []:->+[.]\"n\"([python],[标题])->[python]\"state=(n[0]==1)\"(Python,)...
            ->+去掉1(,_x)->+的(操作,+去掉1),
        ->+[.]\"n\"([python]#1,[标题])->[python]#1\"state=(n[0]==-1)\"(Python,)...
            ->+去掉1(,_x)->+的(操作,+去掉1)->+加负号(,_x)->+的(操作,+加负号),
        ->+[.]\"n\"([python]#2,[标题])->[python]#2\"state=(n[0]<0)\"(Python,)...
            ->+加负号(,_x)->+的(操作,+加负号),
        ->+[.]\"n\"([python]#2,[标题])->[python]#2\"state=(n[0]==0)\"(Python,)...
        ->[]{
            []:->头部(和式#0,_x)...
                ->+去掉0_头部(,_x)->+的(操作,+去掉0_头部),
            ->+去掉0(,_x)->+的(操作,+去掉0)
        },
        ->[]
    },
    ->[]



"(,)
的#55""(整理和式#50,库#56)
库#56"

去掉1:...
加负号:...
去掉0:...
去掉0_头部:...





"(,)
的#57""(库#56,去掉1#58)
去掉1#58"\"\"\"


\"\"\"

+去掉1(,_y)->+[del](,+去掉1)...

->*(_y,_y1)->[]{
    []&:=>_re#1\"[+\-]|起点\"(,_y)=>+[右连](_re#1,_y1),
    =>的(括号,_y)->括号=>+[右连](的,_y1),
    =>_re#2\"[+\-]|负号\"(_y,)=>+[左连](_re#2,_y1)
}...

->+[del](,_y)->+[del](,*)
"(,)
的#59""(库#56,加负号#60)
加负号#60"\"\"\"
M代码:...

\"\"\"

+加负号(,_x)->+[del](,+加负号)...
->的(加负号,M代码)...

->+[标题]#x(_x,)...
->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
->+[.]\"n\"(+[matlab],+[标题]#x)...
->+[修改内容](+[临时文本],+[修改标题])->+[修改标题](,_x)...
->+[修改内容](+[临时文本],_x)...

->[]{
    []:->负号(_x,)->+[del](,负号),
    ->-(,_x)->+[修改标题]\"+\"(,-)->+[修改内容]\"+\"(,-),
    ->+(,_x)->+[修改标题]\"-\"(,+)->+[修改内容]\"-\"(,+),
    ->[]
}




"(,)
的#61""(加负号#60,M代码#62)
M代码#62"%{

%}

y=-y;
if floor(y)==y
    ans=int64(y);
else
    ans=y;
end



"(,)
的#63""(库#56,去掉0#64)
去掉0#64"\"\"\"


\"\"\"

+去掉0(,_y)->+[del](,+去掉0)...

->_re\"[+\-]\"(_y0,_y)->[]{
    []=>_re#2\"[+\-]\"(_y,)=>+[左连](_re#2,_y0)
}...

->+[del](,_y)->+[del](,_re)


"(,)
的#65""(库#56,去掉0_头部#66)
去掉0_头部#66"\"\"\"


\"\"\"

+去掉0_头部(,_y)->+[del](,+去掉0_头部)...

->[]{
    []=>_re\"[*/]|负号\"(_y,)=>+[del](,_re)
}


"(,)

## end
#505, 374:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->+式子->[]{
    [is](_媒介,目标)->目标:
        ->的(目标,减去)->减去(_和数1,_和数2)->_和数1->_和数2(,)...
        ->+和数1(+式子,_和数1)->+和数2(+式子,_和数2)
}...

->和数1(+式子,_和数1)->和数2(+式子,_和数2)...

->+整理和式(_和数1,_和数1)->+的(操作,+整理和式)...
->[]{
    []:->_re"[+\-]"(_和数1,_y)->_y->+减法1(_和数1,_和数2)->+的(操作,+减法1),
    ->+减法2(_和数1,_和数2)->+的(操作,+减法2)
}





## end
#507, 30166:
文本转换#0"

召唤规则:...
降临规则:...




"(,)
的#1""(文本转换#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"结构文本转LaTeX\"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理公式引用(_媒介,_凭依)->+的(操作,+整理公式引用)...
    ->+整理表格引用(_媒介,_凭依)->+的(操作,+整理表格引用)...
    ->+整理图片引用(_媒介,_凭依)->+的(操作,+整理图片引用)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}
"(,)
的#3""(文本转换#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

引用文章:...
章节内容:...
整理引用:...
整理图片引用:...
整理表格引用:...
整理公式引用:...
将条目\"整理图片引用\"复制为条目\"整理表格引用\"
(Eq.~(\ref{eq:[4].}))


整理内容:...
整理图片:...
+[新建阅读窗口](,章节内容)
将'引用文章'的\"作者\"替换为\"文章\"


"(,)
的#5""(降临规则#4,整理引用#6)
整理引用#6"\"\"\"
P代码:...
print(list_lk)
print(paper_text)

\"\"\"

+整理引用(_媒介,_文本)->+[del](,+整理引用)...
->的(整理引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->引用(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)




"(,)
的#7""(整理引用#6,P代码#8)
P代码#8"\"\"\"
记住\"Python\"
测试:...

\"\"\"

import re

link_pat='\[([a-zA-Z_]+[_\d]*)(, ?[a-zA-Z_]+[_\d]*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#9""(P代码#8,测试#10)
测试#10"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#11""(降临规则#4,章节内容#12)
章节内容#12"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+章节内容(_章节结构,_文本)->+[del](,+章节内容)...
->的(章节内容,描述结构)->的(章节内容,库)...

->+[code]([想],描述结构)->[想](_章节结构,_文本)...
->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)->+[做](_主语,_宾语)->+[code](+[做],_条目)
}




"(,)
的#13""(章节内容#12,描述结构#14)
描述结构#14"\"\"\"


\"\"\"
+描述结构(_章节结构,_文本)->+操作(+描述结构,)...

->[]{
    []:->[is](_章节结构,一级标题)->一级标题(,)...
        ->+生成标题(一级标题,_文本)->+的(+操作,+生成标题),
    ->[is](_章节结构,文本)->文本(,)...
        ->+生成作者(文本,_文本)->+的(+操作,+生成作者),
    ->[is](_章节结构,_章节)->_章节->的(_章节,题目)->[==]\"Abstract\"(,题目)...
        ->+生成概述(_章节,_文本)->+的(+操作,+生成概述),
    ->[is](_章节结构,_附录)->_附录->的(_附录,题目#2)->[==]\"Appendix\"(,题目#2)...
        ->+生成附录(_附录,_文本)->+的(+操作,+生成附录),
    ->[is](_章节结构,二级标题)->二级标题(,)...
        ->+生成章节(二级标题,_文本)->+的(+操作,+生成章节)
}


"(,)
的#15""(章节内容#12,库#16)
库#16"

生成标题:...
生成作者:...
生成概述:...
生成章节:...
生成附录:...
+[新建阅读窗口](,生成附录)
将条目\"生成章节\"复制为条目\"生成附录\"
将'生成作者'的\"章节\"替换为\"作者\"


"(,)
的#17""(库#16,生成章节#18)
生成章节#18"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成章节(_章节,_文本)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,L模板)...
->的(生成章节,库)...


->+的(_文本,+章节)...
->+[code]([想],描述结构)->[想](_章节,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)

"(,)
的#19""(生成章节#18,L模板#20)
L模板#20"
\section{%题目}
%内容

"(,)
的#21""(生成章节#18,库#22)
库#22"

文本结构:...
公式结构:...
图片结构:...
表格结构:...
将条目\"图片结构\"复制为条目\"表格结构\"



"(,)
的#23""(库#22,表格结构#24)
表格结构#24"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+表格结构(_节点,_内容)->+[del](,+表格结构)...
->的(表格结构,L模板)->的(表格结构,L模板2)->的(表格结构,P代码)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)...
->的(_节点,内容)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"txt_in\"(+[python],内容)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置)...
->+[.]\"内容\"(+[模板文本],+[临时文本])...
->+[o]\"type_out\"(+[python],+格式)->+[.](+[模板文本],+格式)->+[del](,+格式)...
->[]:

->[==]\"normal\"(,类型)->+[code](+[模板文本],L模板),
->+[code](+[模板文本],L模板2)
"(,)
的#25""(表格结构#24,L模板2#26)
L模板2#26"
\begin{figure*}
\includegraphics[width=0.9 \textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure*}
"(,)
的#27""(表格结构#24,P代码#28)
P代码#28"\"\"\"
记住\"Python\"
print(np.max([1,2]))
+[P函数](,P代码)
txt_out[-1]
print(txt_out)
text=txt_in

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        for txt_ele in list_ele:
            txt_out+=\"\n\\textrm{%s}&\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n\\colrule'
    else:
        for txt_ele in list_ele:
            txt_out+=\" %s &\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#29""(表格结构#24,L模板#30)
L模板#30"
\begin{table}[%位置]
\caption{\label{tab:%名字}%图例}
\begin{ruledtabular}
\begin{tabular}{%格式}
%内容
\end{tabular}
\end{ruledtabular}
\end{table}



"(,)
的#31""(库#22,公式结构#32)
公式结构#32"\"\"\"
P代码:...
L模板:短公式...
L模板2:长公式...
L模板3:多行...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)->的(公式结构,L模板3)...
->的(公式结构,P代码)...

->的(_节点,名字)->的(_节点,LaTeX)...
->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.]\"LaTeX\"(+[模板文本],+[临时文本]#t)...

->+[.]\"LaTeX_text0\"([python],LaTeX)...
->+[o]\"LaTeX_text\"([python],+[临时文本]#t)...
->+[code]([python],P代码)->[python](Python,+[临时文本]):
    ->[==]\"1\"(,+[临时文本])->+[code](+[模板文本],L模板),
    ->[==]\"2\"(,+[临时文本])->+[code](+[模板文本],L模板2),
    ->+[code](+[模板文本],L模板3)


"(,)
的#33""(公式结构#32,L模板3#34)
L模板3#34"
\begin{multline}
%LaTeX
\label{eq:%名字}
\end{multline}

"(,)
的#35""(公式结构#32,L模板#36)
L模板#36"
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}

"(,)
的#37""(公式结构#32,P代码#38)
P代码#38"\"\"\"
记住\"Python\"
测试:...
保存:...
print(LaTeX_text0)
print(re.sub('\n+$','',LaTeX_text0))
LaTeX_text

txt=r'I_{scatter}=\frac{1}{L_{2}}\ \int_{}^{}{d\theta\ }{S(E_{f}(\theta))\ f(\theta)\ \frac{\partial E_{f}}{\partial \theta}\ exp(-\frac{\alpha^{2}}{\sigma_{s}(E_{f}(\theta))^{2}})}'
print(txt.replace('\ ','\\\\ \n',1))


\"\"\"

state=True
ans=1
if len(LaTeX_text0)<150 or 'cases' in LaTeX_text0:
    LaTeX_text=LaTeX_text0
    ans=1
elif len(LaTeX_text0)<200:
    LaTeX_text=LaTeX_text0.replace('\ ','\\\\ \n',1)
    ans=3
else:
    LaTeX_text=LaTeX_text0
    ans=2

LaTeX_text=re.sub('\n+$','',LaTeX_text)
print(LaTeX_text,ans)

"(,)
的#39""(P代码#38,保存#40)
保存#40"\"\"\"
记住\"Python\"
测试:...
print(LaTeX_text0)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#41""(P代码#38,测试#42)
测试#42"LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)
"(,)
的#43""(公式结构#32,L模板2#44)
L模板2#44"
\begin{widetext}
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}
\end{widetext}

"(,)
的#45""(库#22,文本结构#46)
文本结构#46"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#47""(文本结构#46,P代码#48)
P代码#48"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='\\subsection{%s}\n\n'%(text_context[4:-5])
else:
    ans=text_context+'\n\n'


"(,)
的#49""(库#22,图片结构#50)
图片结构#50"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,L模板2)->的(图片结构,P代码)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...
->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置):

->[==]\"normal\"(,类型)->+[code](+[模板文本],L模板),
->+[code](+[模板文本],L模板2)
"(,)
的#51""(图片结构#50,L模板#52)
L模板#52"
\begin{figure}[%位置]
\includegraphics[width=0.45\textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure}


"(,)
的#53""(图片结构#50,P代码#54)
P代码#54"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]
ans='./res/'+fig_name+'.'+fig_type


"(,)
的#55""(图片结构#50,L模板2#56)
L模板2#56"
\begin{figure*}
\includegraphics[width=0.9 \textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure*}
"(,)
的#57""(生成章节#18,描述结构#58)
描述结构#58"\"\"\"


\"\"\"

+描述结构(_章节,)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[is](_节点,表格)->表格->+表格结构(_节点,)->+的(+操作,+表格结构),
        ->[]
}

"(,)
的#59""(库#16,生成标题#60)
生成标题#60"\"\"\"
L模板:...

\"\"\"

+生成标题(一级标题,_文本)->+[del](,+生成标题)...
->的(生成标题,L模板)...

->+的(_文本,+标题)...

->的(一级标题,题目)...
->+[模板文本](L模板,+标题)->+[.](+[模板文本],题目)


"(,)
的#61""(生成标题#60,L模板#62)
L模板#62"\title{%题目}
"(,)
的#63""(库#16,生成概述#64)
生成概述#64"\"\"\"
L模板:...

\"\"\"

+生成概述(二级标题,_文本)->+[del](,+生成概述)...
->的(生成概述,L模板)...

->+的(_文本,+概述)...

->+[临时文本]->[]{
    []=>的(二级标题,文本)->文本=>+[增加内容2](文本,+[临时文本])
}...

->+[模板文本](L模板,+概述)->+[.](+[模板文本],+[临时文本])


"(,)
的#65""(生成概述#64,L模板#66)
L模板#66"\begin{abstract}
%[临时文本]
\end{abstract}
"(,)
的#67""(库#16,生成附录#68)
生成附录#68"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

保存_库:...
+[修改标题]\"保存_库\"(,库)
库

\"\"\"

+生成附录(_章节,_文本)->+[del](,+生成附录)...
->的(生成附录,描述结构)->的(生成附录,L模板)...
->的(生成附录,保存_库)...
->的(库#0,生成附录)->的(库#0,生成章节)->的(生成章节,库)...

->+的(_文本,+章节)...
->+[code]([想],描述结构)->[想](_章节,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容):
        ->[is](_条目,文本结构)->的(保存_库,文本结构#0)->+[code](+[做],文本结构#0),
        ->+[code](+[做],_条目)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)

"(,)
的#69""(生成附录#68,描述结构#70)
描述结构#70"\"\"\"


\"\"\"

+描述结构(_章节,)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[is](_节点,表格)->表格->+表格结构(_节点,)->+的(+操作,+表格结构),
        ->[]
}

"(,)
的#71""(生成附录#68,保存_库#72)
保存_库#72"

文本结构:...
公式结构:...
图片结构:...




"(,)
的#73""(保存_库#72,文本结构#74)
文本结构#74"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#75""(文本结构#74,P代码#76)
P代码#76"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='\\section{%s}\n\n'%(text_context[4:-5])
else:
    ans=text_context+'\n\n'


"(,)
的#77""(保存_库#72,公式结构#78)
公式结构#78"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)...
->的(公式结构,P代码)...

->的(_节点,名字)->的(_节点,LaTeX)...
->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],LaTeX)...

->[]{+[.]\"LaTeX_text0\"([python],LaTeX)->+[code]([python],P代码)->[python](Python,)}:
    ->+[code](+[模板文本],L模板2),
    ->>+[code](+[模板文本],L模板)


"(,)
的#79""(公式结构#78,L模板2#80)
L模板2#80"
\begin{widetext}
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}
\end{widetext}

"(,)
的#81""(公式结构#78,P代码#82)
P代码#82"\"\"\"
记住\"Python\"
LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#83""(公式结构#78,L模板#84)
L模板#84"
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}

"(,)
的#85""(保存_库#72,图片结构#86)
图片结构#86"\"\"\"
P代码:...
L模板:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,P代码)...

->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...
->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)

"(,)
的#87""(图片结构#86,L模板#88)
L模板#88"
\begin{figure}[b]
\includegraphics[width=0.45\textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure}


"(,)
的#89""(图片结构#86,P代码#90)
P代码#90"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]
ans='\\'+fig_name+'.'+fig_type


"(,)
的#91""(生成附录#68,L模板#92)
L模板#92"
\appendix
%内容

"(,)
的#93""(库#16,生成作者#94)
生成作者#94"\"\"\"
描述结构:...
库:...

\"\"\"

+生成作者(_作者,_文本)->+[del](,+生成作者)...
->的(生成作者,描述结构)->的(生成作者,库)...
->的(库,通讯作者)->的(库,普通作者)...

->+的(_文本,+作者)...
->+[code]([想],描述结构)->[想](_作者,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,作者)->作者(类型,)->类型(,)...
    =>+[获取作者信息](,+作者A)->[m_text](作者,+[获取作者信息])...
    ->+[做](+作者A,+作者)...
    ->+[删除结构](,+作者A)->+[del](,+作者A)->[]:
        ->[==]\"通讯\"(,类型)->+[code](+[做],通讯作者),
        ->+[code](+[做],普通作者)
}


"(,)
的#95""(生成作者#94,库#96)
库#96"

通讯作者:...
普通作者:...
将'普通作者'的\"通讯\"替换为\"普通\"
"(,)
的#97""(库#96,通讯作者#98)
通讯作者#98"\"\"\"
L模板:...

\"\"\"
+通讯作者(_A,_输出)->+[del](,+通讯作者)...
->的(通讯作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)->+[.](+[模板文本],邮箱)

"(,)
的#99""(通讯作者#98,L模板#100)
L模板#100"
\author{%名 %姓}
\email{%邮箱}
\affiliation{%单位}
"(,)
的#101""(库#96,普通作者#102)
普通作者#102"\"\"\"
L模板:...

\"\"\"
+普通作者(_A,_输出)->+[del](,+普通作者)...
->的(普通作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)

"(,)
的#103""(普通作者#102,L模板#104)
L模板#104"
\author{%名 %姓}
\affiliation{%单位}
"(,)
的#105""(生成作者#94,描述结构#106)
描述结构#106"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_作者,)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码2)...

->+[.]\"text_au\"([python],_作者)...
->+[code]([python],P代码)->[python](Python,)...
->+[code]([python]#2,P代码2)...

->+不终止=>[python]\"state=(list_i<len(list_au))\"(Python,+不终止)...
=>+的(+操作,+作者)->+作者(+类型,)...
->+[o]\"type_name\"([python]#2,+类型)->[python]#2(Python,+作者)


"(,)
的#107""(描述结构#106,P代码#108)
P代码#108"\"\"\"
记住\"Python\"

\"\"\"

state=True
list_au=text_au.split(', ')
list_i=0

"(,)
的#109""(描述结构#106,P代码2#110)
P代码2#110"\"\"\"


\"\"\"

name=list_au[list_i]
list_i+=1
if name[-1]=='*':
    name=name[0:-1]
    type_name='通讯'
else:
    type_name=\"普通\"
ans=name

"(,)
的#111""(降临规则#4,整理内容#112)
整理内容#112"\"\"\"
P代码:...
L模板:...

保存:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]#章节->[]{
    []=>的(_内容,章节)->章节=>+[增加内容](章节,+[临时文本]#章节)
}...
->+[python](Python,+[临时文本]#章节)->+[code](+[python],P代码)...
->+[s]\"file_text\"(+[python],+[临时文本]#章节)...

->+[模板文本](L模板,_内容)...
->+[.]\"章节\"(+[模板文本],+[临时文本]#章节)...
->[]{
    []:->的(_内容,标题)->标题->+[.](+[模板文本],标题),->[]
}...
->[]{
    []:->的(_内容,作者)->作者->+[.](+[模板文本],作者),->[]
}...
->[]{
    []:->的(_内容,概述)->概述->+[.](+[模板文本],概述),->[]
}...
->[]{
    []:->的(_内容,引用)->引用->+[.](+[模板文本],引用),->[]
}


"(,)
的#113""(整理内容#112,L模板#114)
L模板#114"\documentclass[%
 reprint,
%superscriptaddress,
%groupedaddress,
%unsortedaddress,
%runinaddress,
%frontmatterverbose, 
%preprint,
%preprintnumbers,
%nofootinbib,
%nobibnotes,
%bibnotes,
 amsmath,amssymb,
 aps,
%pra,
%prb,
%rmp,
%prstab,
%prstper,
%floatfix,
]{revtex4-2}

\usepackage{siunitx}
\usepackage{graphicx}% Include figure files
\usepackage{dcolumn}% Align table columns on decimal point
\usepackage{bm}% bold math
%\usepackage{hyperref}% add hypertext capabilities
%\usepackage[mathlines]{lineno}% Enable numbering of text and display math
%\linenumbers\relax % Commence numbering lines

%\usepackage[showframe,%Uncomment any one of the following lines to test 
%%scale=0.7, marginratio={1:1, 2:3}, ignoreall,% default settings
%%text={7in,10in},centering,
%%margin=1.5in,
%%total={6.5in,8.75in}, top=1.2in, left=0.9in, includefoot,
%%height=10in,a5paper,hmargin={3cm,0.8in},
%]{geometry}

\begin{document}

\preprint{APS/123-QED}

%标题
%作者
\date{\today}

%概述

\maketitle

%章节



\nocite{*}

\bibliography{apssamp1}

\begin{filecontents}{apssamp1.bib}
%引用
\end{filecontents}

\end{document}
%
% ****** End of file apssamp.tex ******






"(,)
的#115""(整理内容#112,P代码#116)
P代码#116"\"\"\"
print(\"112%13%1\".replace('%','\\%'))

\"\"\"

ans=file_text.replace('%','\\%')


"(,)
的#117""(整理内容#112,保存#118)
保存#118"\"\"\"
P代码:...
L模板:...

保存:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]#章节->[]{
    []=>的(_内容,章节)->章节=>+[增加内容](章节,+[临时文本]#章节)
}...
->+[python](Python,+[临时文本]#章节)->+[code](+[python],P代码)...
->+[s]\"file_text\"(+[python],+[临时文本]#章节)...

->+[模板文本](L模板,_内容)...
->+[.]\"章节\"(+[模板文本],+[临时文本]#章节)...
->[]{
    []:->的(_内容,标题)->标题->+[.](+[模板文本],标题),->[]
}...
->[]{
    []:->的(_内容,作者)->作者->+[.](+[模板文本],作者),->[]
}...
->[]{
    []:->的(_内容,概述)->概述->+[.](+[模板文本],概述),->[]
}...
->[]{
    []:->的(_内容,引用)->引用->+[.](+[模板文本],引用),->[]
}


"(,)
的#119""(降临规则#4,引用文章#120)
引用文章#120"\"\"\"
描述结构:...
设置引用:...
+[新建阅读窗口](,描述结构)

\"\"\"

+引用文章(_文章,_文本)->+[del](,+引用文章)...
->的(引用文章,描述结构)->的(引用文章,设置引用)...

->+的(_文本,+引用)...
->+[code]([想],描述结构)->[想](_文章,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,文章)->文章(_节点,)->_节点(,)...
    =>+[获取论文信息](+[临时文本],+文章A)->[m_text](文章,+[临时文本])...
        ->[标题](_节点,)->[m_text]([标题],+文章A)...
        ->+[做](+文章A,+引用)->+[code](+[做],设置引用)...
        ->+[删除结构](,+文章A)->+[del](,+文章A)
}


"(,)
的#121""(引用文章#120,描述结构#122)
描述结构#122"\"\"\"
P代码:...

\"\"\"

+描述结构(_文章,)->+操作(+描述结构,)...
->的(描述结构,P代码)...

=>的(_文章,_节点)->引用(_节点,)...
=>+的(+操作,+文章)->+文章(_节点,)...
->+[.]\"paper_link\"([python],_节点)->+[code]([python],P代码)...
->[python](Python,+文章)



"(,)
的#123""(描述结构#122,P代码#124)
P代码#124"\"\"\"
记住\"Python\"

\"\"\"

ans=paper_link.split('#')[0]
state=True
"(,)
的#125""(引用文章#120,设置引用#126)
设置引用#126"\"\"\"
P代码:...
模板库:...

\"\"\"

+设置引用(文章A,引用)->+[del](,+设置引用)...
->的(设置引用,模板库)->的(设置引用,P代码)...

->的(文章A,类型)->的(文章A,作者)...
->+[python](Python,作者)->+[code](+[python],P代码)...
->+[s]\"text_aus\"(+[python],作者)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,引用)...
->[]{
    []:->[==]\"ARTICLE\"(,类型)->的(模板库,文章#0)->+[code](+[模板文本],文章#0),
    ->[==]\"PROCEEDINGS\"(,类型)->的(模板库,会议#0)->+[code](+[模板文本],会议#0),
    ->[==]\"ArXiv\"(,类型)->的(模板库,预印本#0)->+[code](+[模板文本],预印本#0),
    ->的(模板库,文章#1)->+[code](+[模板文本],文章#1)
}...

->+[.]\"引用名\"(+[模板文本],文章A)...
->[]{
    []=>的(文章A,_性质)->_性质=>+[.](+[模板文本],_性质)
}



"(,)
的#127""(设置引用#126,模板库#128)
模板库#128"

文章:...
会议:...
预印本:...

"(,)
的#129""(模板库#128,预印本#130)
预印本#130"
@ARTICLE{%引用名, 
   author        = \"%作者\", 
   title         = \"%标题\", 
   journal = {ArXiv e-prints},
   archivePrefix = \"arXiv\",
   eprint        = {%eprint},
   primaryClass  = \"%类别\",
   year          = \"%日期\",
}



"(,)
的#131""(模板库#128,文章#132)
文章#132"
@ARTICLE{%引用名,
   author       = \"%作者\",
   title        = \"%标题\",
   journal      = \"%期刊\",
   volume       = \"%编号\", 
   pages        = \"%页数\",
   year         = \"%年份\",
}
"(,)
的#133""(模板库#128,会议#134)
会议#134"
@PROCEEDINGS{%引用名,
   title = \"%标题\",
   number = \"%编号\",
   editor = \"\", 

   series = \"All ACM Conferences\",
   month = \"\",
   year = \"%年份\",
   address = \"%城市地址\",
   organization = \"%组织\",
   publisher = \"%会议\",
}
"(,)
的#135""(设置引用#126,P代码#136)
P代码#136"\"\"\"
记住\"Python\"

print(text_aus)
print(list_aus)

\"\"\"

# print(text_aus)
# print(text_aus.split(', '))
# print(' and '.join(text_aus.split(', ')))

list_aus0=text_aus.split(', ')
if len(list_aus0)>3:
    list_aus=list_aus0[0:3]+['others']
else:
    list_aus=list_aus0
ans=' and '.join(list_aus)


"(,)
的#137""(降临规则#4,整理图片#138)
整理图片#138"\"\"\"
P代码:...
P代码2:...

\"\"\"

+整理图片(_媒介,_凭依)->+[del](,+整理图片)...
->的(整理图片,P代码)->的(整理图片,P代码2)...

->的#0(_凭依,地址)->+[标题](_凭依,)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"file_name\"(+[python],+[标题])->+[.]\"folder_dir\"(+[python],地址)...
->+[保存文本](+[临时文本],_凭依)...

->[]{
    []=>的(_媒介,二级标题)->二级标题->的(二级标题,图片)->[]{的(图片,源地址)}...
    =>的(图片,源地址)->的(图片,目标地址)...
        ->+[python](Python,)->+[code](+[python],P代码2)...
        ->+[.]\"src_dir\"(+[python],源地址)->+[.]\"tar_dir\"(+[python],目标地址)...
        ->+[.]\"folder_dir\"(+[python],地址)
}...

->+[del](,的#0)...
->+[删除结构](,_凭依)...
->+[有](_凭依,地址)




"(,)
的#139""(整理图片#138,P代码#140)
P代码#140"\"\"\"
print(folder_dir)

\"\"\"


ans=\"%s\\text.tex\"%(folder_dir)

"(,)
的#141""(整理图片#138,P代码2#142)
P代码2#142"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))
print(tar_dir)

\"\"\"

# import shutil
import os

os.system(\"mkdir %s/res/\"%(folder_dir))
os.system(\"cp %s %s/%s\"%(src_dir,folder_dir,tar_dir))

# shutil.copy(src_dir,\"%s\\%s\"%(folder_dir,tar_dir))

"(,)
的#143""(降临规则#4,整理表格引用#144)
整理表格引用#144"\"\"\"
P代码:...
print(list_lk)
print(paper_text)
(表格没有缩写)

\"\"\"

+整理表格引用(_媒介,_文本)->+[del](,+整理表格引用)...
->的(整理表格引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->表格(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)


"(,)
的#145""(整理表格引用#144,P代码#146)
P代码#146"\"\"\"
记住\"Python\"
测试:...
测试2:...
print(new_text)
print(i)
print(paper_text)

\"\"\"

import re

link_pat='([tT])ab.\[([a-zA-Z0-9_\.]+)\]'
link_pat2='Table \[([a-zA-Z0-9_\.]+)\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='Table~\\ref{tab:%s}'%(a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Table~\\ref{tab:%s}'%(a2.group(1))
        di0=a2.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#147""(P代码#146,测试2#148)
测试2#148"\"\"\"
+[P函数](,测试2)
print(list_lk)

\"\"\"

import re

paper_text=\"\"\"
The algorithm of recovering complete electron trajectories from source to detector is schematically shown in Fig.[_setup1]. In Fig.[_setup1], 

\"\"\"

link_pat='([fF])ig.\[([a-zA-Z0-9_\.]+)\]'
link_pat2='Figure \[([a-zA-Z0-9_\.]+)\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='%sig.~\\ref{fig:%s}'%(a.group(1),a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Figure ~\\ref{fig:%s}'%(a2.group(1))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text

print(paper_text)
print(out_text)
"(,)
的#149""(P代码#146,测试#150)
测试#150"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#151""(降临规则#4,整理公式引用#152)
整理公式引用#152"\"\"\"
P代码:...
+[P函数](,P代码)
print(list_lk)
print(paper_text)

\"\"\"

+整理公式引用(_媒介,_文本)->+[del](,+整理公式引用)...
->的(整理公式引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->公式(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)


"(,)
的#153""(整理公式引用#152,P代码#154)
P代码#154"\"\"\"
记住\"Python\"
测试:...
测试2:...

\"\"\"

import re

link_pat='([eE])qn?\.(\[[a-zA-Z0-9_\.]+\]\.)'
link_pat2='Equation (\[[a-zA-Z0-9_\.]+\]\.)'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='%sq.~\\ref{eq:%s}'%(a.group(1),a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Equation~\\ref{eq:%s}'%(a2.group(1))
        di0=a2.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#155""(P代码#154,测试2#156)
测试2#156"\"\"\"
+[P函数](,测试2)
print(list_lk)

\"\"\"

import re

link_pat='([eE])qn.(\[[a-zA-Z0-9_\.]+\]\.)'
link_pat2='Equation (\[[a-zA-Z0-9_\.]+\]\.)'
i=0
out_text=''
paper_text=\"\"\"
Eqn.[4].

\"\"\"

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='%sqn.~\\ref{eq:%s}'%(a.group(1),a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Equation ~\\ref{eq:%s}'%(a2.group(1))
        di0=a2.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text

print(paper_text)
print(out_text)

"(,)
的#157""(P代码#154,测试#158)
测试#158"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#159""(降临规则#4,整理图片引用#160)
整理图片引用#160"\"\"\"
P代码:...
print(list_lk)
print(paper_text)

\"\"\"

+整理图片引用(_媒介,_文本)->+[del](,+整理图片引用)...
->的(整理图片引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->图片(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)


"(,)
的#161""(整理图片引用#160,P代码#162)
P代码#162"\"\"\"
记住\"Python\"
测试:...
测试2:...
print(new_text)
print(i)
print(paper_text)

\"\"\"

import re

link_pat='([fF])ig.\[([a-zA-Z0-9_\.]+)\]'
link_pat2='Figure \[([a-zA-Z0-9_\.]+)\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='%sig.~\\ref{fig:%s}'%(a.group(1),a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Figure~\\ref{fig:%s}'%(a2.group(1))
        di0=a2.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#163""(P代码#162,测试#164)
测试#164"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#165""(P代码#162,测试2#166)
测试2#166"\"\"\"
+[P函数](,测试2)
print(list_lk)

\"\"\"

import re

paper_text=\"\"\"
The algorithm of recovering complete electron trajectories from source to detector is schematically shown in Fig.[_setup1]. In Fig.[_setup1], 

\"\"\"

link_pat='([fF])ig.\[([a-zA-Z0-9_\.]+)\]'
link_pat2='Figure \[([a-zA-Z0-9_\.]+)\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    a2=re.match(link_pat2,paper_text[i:])
    if a!=None and a.group(2) in list_lk:
        new_text='%sig.~\\ref{fig:%s}'%(a.group(1),a.group(2))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    elif a2!=None and a2.group(1) in list_lk:
        new_text='Figure ~\\ref{fig:%s}'%(a2.group(1))
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text

print(paper_text)
print(out_text)
"(,)

## end
#509, 521:
"""
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"结构文本转LaTeX"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理公式引用(_媒介,_凭依)->+的(操作,+整理公式引用)...
    ->+整理表格引用(_媒介,_凭依)->+的(操作,+整理表格引用)...
    ->+整理图片引用(_媒介,_凭依)->+的(操作,+整理图片引用)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}

## end
#511, 13211:
运动动画#0"

召唤规则:...
降临规则:...


"(,)
的#1""(运动动画#0,降临规则#2)
降临规则#2"Nini, 打开结构化文本(文件)

设置变量:...
单体代码:...
相互作用:...
整理代码:...
将条目\"设置变量\"复制为条目\"单体代码\"
+[新建阅读窗口](,相互作用)

"(,)
的#3""(降临规则#2,相互作用#4)
相互作用#4"\"\"\"
描述结构:...
库:...

\"\"\"

+相互作用(_场景,_代码)->+[del](,+相互作用)...
->的(相互作用,描述结构)->的(相互作用,库)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_物体1,_物体2)->_物体1->_物体2(,)...
    =>的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体1,_物体2)->+[code](+[做],_条目)->+[.](+[做],_代码)
}





"(,)
的#5""(相互作用#4,库#6)
库#6"

碰撞作用:...
刚体碰撞1:...
刚体碰撞2:...
将条目\"碰撞作用\"复制为条目\"刚体碰撞2\"

"(,)
的#7""(库#6,碰撞作用#8)
碰撞作用#8"\"\"\"
作用模板:...
将'作用模板'的\"bg_1\"替换为\"%变量2\"

\"\"\"
+碰撞作用(_物体1,_物体2)->+[del](,+碰撞作用)...
->的(碰撞作用,作用模板)...

->.(+碰撞作用,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#9""(碰撞作用#8,作用模板#10)
作用模板#10"
x1=h2_%变量1.XData(end-1:end);
y1=h2_%变量1.YData(end-1:end);
[x0,y0,x_i]=intersection_line_curve(x1,y1,xs_%变量2,ys_%变量2);
x_i(abs(x0-x1(1))<1e-12)=[];
y0(abs(x0-x1(1))<1e-12)=[];
x0(abs(x0-x1(1))<1e-12)=[];

if ~isempty(x0)
    plot(xs_%变量2(x_i:x_i+1),ys_%变量2(x_i:x_i+1));
    pt_%变量1=[x0(1),y0(1)];
    h1_%变量1.XData=x0(1);
    h1_%变量1.YData=y0(1);
    h2_%变量1.XData(end)=x0(1);
    h2_%变量1.YData(end)=y0(1);

    Dx=diff(xs_%变量2(x_i:x_i+1));
    Dy=diff(ys_%变量2(x_i:x_i+1));
    angle=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy)+90;
    [v_x,v_y]=transform_2D_reflection_2(v_%变量1(1),v_%变量1(2),angle,0,0);
    v_%变量1=[v_x,v_y];
end

"(,)
的#11""(库#6,刚体碰撞2#12)
刚体碰撞2#12"\"\"\"
作用模板:...
将'作用模板'的\"obj_2\"替换为\"%变量2\"

\"\"\"
+刚体碰撞2(_物体1,_物体2)->+[del](,+刚体碰撞2)...
->的(刚体碰撞2,作用模板)...

->.(+刚体碰撞2,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#13""(刚体碰撞2#12,作用模板#14)
作用模板#14"
[xs0,ys0]=intersection_curve_curve(xs_%变量1,ys_%变量1,xs_%变量2,ys_%变量2);
if ~isempty(xs0)
    [~,~,v_%变量1,omega_%变量1]...
    =rigid_bodies_collision_2([0,0],0,v_%变量1,omega_%变量1,1e5,xs_%变量2,ys_%变量2,1,xs_%变量1,ys_%变量1);
end

"(,)
的#15""(库#6,刚体碰撞1#16)
刚体碰撞1#16"\"\"\"
作用模板:...
将'作用模板'的\"bg_1\"替换为\"%变量2\"

\"\"\"
+刚体碰撞1(_物体1,_物体2)->+[del](,+刚体碰撞1)...
->的(刚体碰撞1,作用模板)...

->.(+刚体碰撞1,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#17""(刚体碰撞1#16,作用模板#18)
作用模板#18"
[xs0,ys0]=intersection_curve_curve(xs_%变量1,ys_%变量1,xs_%变量2,ys_%变量2);
if ~isempty(xs0)
    [v_%变量1,omega_%变量1,v_%变量2,omega_%变量2]...
    =rigid_bodies_collision_2(v_%变量1,omega_%变量1,v_%变量2,omega_%变量2,1,xs_%变量1,ys_%变量1,1,xs_%变量2,ys_%变量2);
end

"(,)
的#19""(相互作用#4,描述结构#20)
描述结构#20"\"\"\"


\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体1)->_物体1(,)...
        ->[]{的(_物体1,速度)->速度}...
    ->的(_场景,_物体2)->_物体2(,)...
        ->[]{[]&:=>[is](_物体1,_物体2), =>刚体碰撞1(_物体2,_物体1),
                ->的(_物体2,x)->x, ->变量(,_物体2)}...
    =>[]:
        ->[]{的(_物体1,x#1)->x#1->的(_物体2,速度)->速度}...
            ->+刚体碰撞1(_物体1,_物体2)->+的(+操作,+刚体碰撞1),
        ->[]{的(_物体1,x#1)->x#1->的(_物体2,角速度)->角速度}...
            ->+刚体碰撞1(_物体1,_物体2)->+的(+操作,+刚体碰撞1),
        ->[]{的(_物体1,x#1)->x#1}...
            ->+刚体碰撞2(_物体1,_物体2)->+的(+操作,+刚体碰撞2),
        ->+碰撞作用(_物体1,_物体2)->+的(+操作,+碰撞作用)
}


"(,)
的#21""(降临规则#2,整理代码#22)
整理代码#22"\"\"\"
Nini, 打开PPT(文件)
M代码:...
M模板:...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M代码)...

->的(_代码,代码结构)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...
->[]{
    []=>的(代码结构,_模块)->_模块=>+[.](+[模板文本],_模块)
}...
->+[o]\"axis_\"(+[matlab],+[临时文本])->+[.]\"axis_\"(+[模板文本],+[临时文本])...

->+[删除结构](,_代码)

"(,)
的#23""(整理代码#22,M代码#24)
M代码#24"%{

%}


pt_x=get(gca,'Xlim');
pt_y=get(gca,'Ylim');
axis_=[pt_x,pt_y];


"(,)
的#25""(整理代码#22,M模板#26)
M模板#26"%{
+[M函数](,%[标题])
%}

addpath('Matlab\space')
addpath('Matlab\draw')
dt=0.1;

%初始化代码

clf
hold on
axis equal
%画图代码
axis([%axis_]);


for i=1:50
%运动代码

%受力代码

%动画代码

%作用代码

pause(0.03)
end



%{
%}"(,)
的#27""(降临规则#2,设置变量#28)
设置变量#28"\"\"\"
描述结构:...
库:...

\"\"\"

+设置变量(_场景,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)->的(设置变量,库)...

->[]{
    []:->的(_代码,命名空间)->命名空间,->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#29""(设置变量#28,描述结构#30)
描述结构#30"\"\"\"
P代码:...
P代码1:...

\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码1)...

->[python]\"
is_var=[0,0]
state=True
\"(Python,)...
->[]{
    []=>的(_场景,_物体)->_物体->在(_物体,空间点)...
    =>+变量名(,_物体)->+的(+操作,+变量名)...
    ->[]{
        []:->[]{的(_物体,速度)->速度}...
            ->+[code]([python]#1,P代码1)->[python]#1(Python,+变量名),
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
    }
}


"(,)
的#31""(描述结构#30,P代码#32)
P代码#32"\"\"\"


\"\"\"
is_var[0]+=1
ans='bg_%d'%(is_var[0])
state=True

"(,)
的#33""(描述结构#30,P代码1#34)
P代码1#34"\"\"\"


\"\"\"

is_var[1]+=1
ans='obj_%d'%(is_var[1])
state=True

"(,)
的#35""(设置变量#28,库#36)
库#36""(,)
的#37""(降临规则#2,单体代码#38)
单体代码#38"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+单体代码(_场景,_代码)->+[del](,+单体代码)...
->的(单体代码,描述结构)->的(单体代码,库)...

->[]{
    []:->的(_代码,代码结构)->代码结构,
    ->+的(_代码,+代码结构)...
        ->+的(+代码结构,+初始化代码)->+的(+代码结构,+画图代码)...
        ->+的(+代码结构,+运动代码)->+的(+代码结构,+受力代码)->+的(+代码结构,+作用代码)...
        ->+的(+代码结构,+动画代码)
}...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体,_代码)->+[code](+[做],_条目)->+[.](+[做],_场景)
}


"(,)
的#39""(单体代码#38,库#40)
库#40"

运动物体:...
运动刚体:...
背景物体:...
电磁场:...
将条目\"背景物体\"复制为条目\"电磁场\"



"(,)
的#41""(库#40,运动物体#42)
运动物体#42"\"\"\"
M代码:...
初始化模板:...
画图模板:...
运动模板:...
受力模板:...
动画模板:...

测试代码:...
+[新建阅读窗口](,测试代码)

\"\"\"

+运动物体(_物体,_代码)->+[del](,+运动物体)...
->的(运动物体,M代码)...
->的(运动物体,初始化模板)->的(运动物体,画图模板)...
->的(运动物体,运动模板)->的(运动物体,受力模板)->的(运动物体,动画模板)...

->.(+运动物体,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)...
->的(代码结构,初始化代码)->的(代码结构,画图代码)...
->的(代码结构,运动代码)->的(代码结构,受力代码)->的(代码结构,动画代码)...

->在(_物体,空间点)->朝向(_物体,方向)->的(_物体,速度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...

->+[模板文本](初始化模板,+[增加内容2]#1)->+[增加内容2]#1(,初始化代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],速度)...

->+[模板文本](画图模板,+[增加内容2]#2)->+[增加内容2]#2(,画图代码)->+[.](+[模板文本],变量)...
->+[模板文本](运动模板,+[增加内容2]#3)->+[增加内容2]#3(,运动代码)->+[.](+[模板文本],变量)...
->+[模板文本](动画模板,+[增加内容2]#5)->+[增加内容2]#5(,动画代码)->+[.](+[模板文本],变量)...

->+[模板文本](受力模板,+[增加内容2]#4)->+[增加内容2]#4(,受力代码)->+[.](+[模板文本],变量)...
->[]{
    []:->的(_场景,重力)->重力->+[.](+[模板文本],重力),
    ->+[.]\"重力\"(+[模板文本],+[临时文本]#g1)->+[临时文本]#g1\"0,0\"
}


"(,)
的#43""(运动物体#42,M代码#44)
M代码#44"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#45""(运动物体#42,初始化模板#46)
初始化模板#46"pt_%变量=[%空间点];
an_%变量=%方向;
v0_%变量=%速度;
v_%变量=v0_%变量*[cosd(an_%变量),sind(an_%变量)];
"(,)
的#47""(运动物体#42,画图模板#48)
画图模板#48"h1_%变量=plot(pt_%变量(1),pt_%变量(2),'r*');
h2_%变量=plot(pt_%变量(1),pt_%变量(2),'r-');
"(,)
的#49""(运动物体#42,运动模板#50)
运动模板#50"pt_%变量=pt_%变量+v_%变量*dt;
"(,)
的#51""(运动物体#42,受力模板#52)
受力模板#52"v_%变量=v_%变量+[%重力]*dt;
"(,)
的#53""(运动物体#42,动画模板#54)
动画模板#54"h1_%变量.XData=pt_%变量(1);
h1_%变量.YData=pt_%变量(2);
h2_%变量.XData(end+1)=pt_%变量(1);
h2_%变量.YData(end+1)=pt_%变量(2);

"(,)
的#55""(运动物体#42,测试代码#56)
测试代码#56"%{
+[M函数](,测试代码)
%}

dt=0.1;

pt=[0,0];
an=10;
v0=10;
v=v0*[cosd(an),sind(an)];

h1=plot(pt(1),pt(2),'r*');
h2=plot(pt(1),pt(2),'r-');

for i=1:50
pt=pt+v*dt;

v=v+[0,-5]*dt;

h1.XData=pt(1);
h1.YData=pt(2);
h2.XData(end+1)=pt(1);
h2.YData(end+1)=pt(2);

pause(0.1)
end



%{
delete(h1)
delete(h2)
+[M函数](,测试代码)
%}"(,)
的#57""(库#40,电磁场#58)
电磁场#58"\"\"\"
M代码:...
M模板:...

\"\"\"

+电磁场(_物体,_代码)->+[del](,+电磁场)...
->的(电磁场,M模板)->的(电磁场,M代码)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)->的(代码结构,画图代码)...

->在(_物体,空间点)->朝向(_物体,方向)...
->的(_物体,x)->的(_物体,y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...

->+[模板文本](M模板,+[增加内容2])->+[增加内容2](,画图代码)...
->+[.](+[模板文本],变量)...
->+[.](+[模板文本],+xs)->+[o](+[matlab],+xs)->+[del](,+xs)...
->+[.](+[模板文本],+ys)->+[o](+[matlab],+ys)->+[del](,+ys)



"(,)
的#59""(电磁场#58,M模板#60)
M模板#60"xs_%变量=[%xs];
ys_%变量=[%ys];
patch([%xs],[%ys],[1,0,0],'FaceAlpha',0.2);
"(,)
的#61""(电磁场#58,M代码#62)
M代码#62"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#63""(库#40,运动刚体#64)
运动刚体#64"\"\"\"
M代码:...
初始化模板:...
画图模板:...
运动模板:...
受力模板:...
动画模板:...

测试代码:...
+[新建阅读窗口](,测试代码)

\"\"\"

+运动刚体(_物体,_代码)->+[del](,+运动刚体)...
->的(运动刚体,M代码)...
->的(运动刚体,初始化模板)->的(运动刚体,画图模板)...
->的(运动刚体,运动模板)->的(运动刚体,受力模板)->的(运动刚体,动画模板)...

->.(+运动刚体,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)...
->的(代码结构,初始化代码)->的(代码结构,画图代码)...
->的(代码结构,运动代码)->的(代码结构,受力代码)->的(代码结构,动画代码)...

->的(_物体,x)->的(_物体,y)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...

->+[模板文本](初始化模板,+[增加内容2]#1)->+[增加内容2]#1(,初始化代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],速度)->+[.](+[模板文本],角速度)...
->+[o](+[matlab],+xs)->+[.](+[模板文本],+xs)->+[del](,+xs)...
->+[o](+[matlab],+ys)->+[.](+[模板文本],+ys)->+[del](,+ys)...
->[]{
    []:->的(_物体,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...
->[]{
    []:->的(_物体,角速度)->角速度->+[.](+[模板文本],角速度),
    ->+[.]\"角速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}...


->+[模板文本](画图模板,+[增加内容2]#2)->+[增加内容2]#2(,画图代码)->+[.](+[模板文本],变量)...
->+[模板文本](运动模板,+[增加内容2]#3)->+[增加内容2]#3(,运动代码)->+[.](+[模板文本],变量)...
->+[模板文本](动画模板,+[增加内容2]#5)->+[增加内容2]#5(,动画代码)->+[.](+[模板文本],变量)...

->+[模板文本](受力模板,+[增加内容2]#4)->+[增加内容2]#4(,受力代码)->+[.](+[模板文本],变量)...
->[]{
    []:->的(_场景,重力)->重力->+[.]\"重力\"(+[模板文本],重力),
    ->+[.]\"重力\"(+[模板文本],+[临时文本]#g1)->+[临时文本]#g1\"0,0\"
}


"(,)
的#65""(运动刚体#64,测试代码#66)
测试代码#66"%{
+[M函数](,测试代码)
%}

dt=0.1;

pt=[0,0];
an=10;
v0=10;
v=v0*[cosd(an),sind(an)];

h1=plot(pt(1),pt(2),'r*');
h2=plot(pt(1),pt(2),'r-');

for i=1:50
pt=pt+v*dt;

v=v+[0,-5]*dt;

h1.XData=pt(1);
h1.YData=pt(2);
h2.XData(end+1)=pt(1);
h2.YData(end+1)=pt(2);

pause(0.1)
end



%{
delete(h1)
delete(h2)
+[M函数](,测试代码)
%}"(,)
的#67""(运动刚体#64,动画模板#68)
动画模板#68"h1_%变量.XData=xs_%变量;
h1_%变量.YData=ys_%变量;
h2_%变量.XData(end+1)=pt_c_%变量(1);
h2_%变量.YData(end+1)=pt_c_%变量(2);

"(,)
的#69""(运动刚体#64,受力模板#70)
受力模板#70"v_%变量=v_%变量+[%重力]*dt;
"(,)
的#71""(运动刚体#64,运动模板#72)
运动模板#72"pt_c_%变量=pt_c_%变量+v_%变量*dt;
an_%变量=an_%变量+omega_%变量*dt;
xs_%变量=xs_0_%变量*cos(an_%变量)-ys_0_%变量*sin(an_%变量)+pt_c_%变量(1);
ys_%变量=ys_0_%变量*cos(an_%变量)+xs_0_%变量*sin(an_%变量)+pt_c_%变量(2);

"(,)
的#73""(运动刚体#64,画图模板#74)
画图模板#74"h1_%变量=patch(xs_%变量,ys_%变量,[1,1,1]);
h2_%变量=plot(pt_c_%变量(1),pt_c_%变量(2),'r-');
"(,)
的#75""(运动刚体#64,初始化模板#76)
初始化模板#76"xs_%变量=[%xs];
ys_%变量=[%ys];
pt_%变量=[%空间点];
pt_c_%变量=[mean(xs_%变量),mean(ys_%变量)];
an_%变量=%方向;
v_%变量=[%速度];
omega_%变量=%角速度;
an_%变量=0;

xs_bd_%变量=[xs_%变量,xs_%变量(1)];
ys_bd_%变量=[ys_%变量,ys_%变量(1)];
xs_0_%变量=xs_%变量-pt_c_%变量(1);
ys_0_%变量=ys_%变量-pt_c_%变量(2);

"(,)
的#77""(运动刚体#64,M代码#78)
M代码#78"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#79""(库#40,背景物体#80)
背景物体#80"\"\"\"
M代码:...
M模板:...

\"\"\"

+背景物体(_物体,_代码)->+[del](,+背景物体)...
->的(背景物体,M模板)->的(背景物体,M代码)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)->的(代码结构,画图代码)...

->在(_物体,空间点)->朝向(_物体,方向)...
->的(_物体,x)->的(_物体,y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...

->+[模板文本](M模板,+[增加内容2])->+[增加内容2](,画图代码)...
->+[.](+[模板文本],变量)...
->+[.](+[模板文本],+xs)->+[o](+[matlab],+xs)->+[del](,+xs)...
->+[.](+[模板文本],+ys)->+[o](+[matlab],+ys)->+[del](,+ys)



"(,)
的#81""(背景物体#80,M代码#82)
M代码#82"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#83""(背景物体#80,M模板#84)
M模板#84"xs_%变量=[%xs];
ys_%变量=[%ys];
patch([%xs],[%ys],[1,1,1]);
"(,)
的#85""(单体代码#38,描述结构#86)
描述结构#86"\"\"\"


\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体->在(_物体,空间点)...
    =>[]:
        ->[]{的(_物体,x)->x->的(_物体,速度)->速度}...
            ->+运动刚体(,_物体)->+的(+操作,+运动刚体),
        ->[]{的(_物体,x)->x->的(_物体,角速度)->角速度}...
            ->+运动刚体(,_物体)->+的(+操作,+运动刚体),
        ->[]{的(_物体,速度)->速度}...
            ->+运动物体(,_物体)->+的(+操作,+运动物体),
        ->[]{的(_物体,磁场)->磁场}...
            ->+电磁场(,_物体)->+的(+操作,+电磁场),
        ->+背景物体(,_物体)->+的(+操作,+背景物体)
}


"(,)
的#87""(运动动画#0,召唤规则#88)
召唤规则#88"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成运动动画\"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+相互作用(_媒介,_凭依)->+的(操作,+相互作用)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)

## end
#513, 221:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成运动动画"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+相互作用(_媒介,_凭依)->+的(操作,+相互作用)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#515, 4227:
计算能谱仪误差#0"

召唤规则:...
降临规则:...



"(,)
的#1""(计算能谱仪误差#0,降临规则#2)
降临规则#2"

整理输入:...
计算输出:...
将'整理输入'的\"\[\.\]\"替换为\".\"

"(,)
的#3""(降临规则#2,计算输出#4)
计算输出#4"\"\"\"
M模板:...

\"\"\"

+计算输出(计算,_代码)->+[del](,+计算输出)...
->的(计算输出,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...

->+[matlab](Matlab,)->+[code](+[matlab],_代码)...

->[]{
    []=>.(计算,_节点)->_节点(,)...
        =>+[.](+[matlab],_节点)->[m_text](.,+[.])...
        ->+[.](+[模板文本],_节点)->[m_text](.,+[.])->+[del](,.)
}...
->[]{
    []=>o(计算,_节点)->_节点(,)...
        =>+[o](+[matlab],_节点)->[m_text](o,+[o])...
        ->+[.](+[模板文本],_节点)->[m_text](o,+[.])->+[del](,o)
}...
->[]{
    []=>的(计算,_节点)->_节点=>+[o](+[matlab],_节点)->[m_text](的,+[o])
}...

->+[删除结构](,_代码)

"(,)
的#5""(计算输出#4,M模板#6)
M模板#6"%{
+[M函数](,%[标题])
%}


physics_constant;
addpath('Matlab\spectrometer');
addpath('Matlab\funcs');

% Cell0=Cell00+[dCell_0,0];
% IP=IP0+[dIP_0,0];
X_shadows=[%X_shadows];
Cell0=[%Cell0];
pos_m=[%pos_m];
pos_f1=[%pos_f1];
pos_f2=[%pos_f2];
f_1=[%f_1];
f_2=[%f_2];
IP0=[%IP0];

shadow0=(4001-e_shadows)*2;
X_shadows0=(4001-X_shadows)*2;
shadow=4001-shadow0/2;


Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
% Fy2=pos_f2(2)*1e-2+0.000632;
IPx=IP0(1)*1e-2;
IPy=IP0(2)*1e-2;

shX=IPx*ones(size(shadow));
shY=(shadow-2000)*100e-6+IPy;

Fy=[f_1*1e-2+Fy1;f_2*1e-2+Fy2];
Fx=[Fx1*ones(size(f_1));Fx2*ones(size(f_2))];

% calibration
ys=(4000-X_shadows0)*50e-6+IPy;
xs=IPx*ones(size(ys));
xo=Cell(1);
yo=Cell(2);

[xo3,yo3,ys3,I,J,f1,f2,xf,yf]=calibrationIP(xo,yo,10e-3,10e-3,Fx,Fy,xs,ys,20);
dIPy=mean(ys3-ys);

d_Cell=[xo3-xo,yo3-yo];
d_IP=[0,dIPy];

Cell0=Cell0+[d_Cell,0]/1e-2;
IP0=IP0+[d_IP,0]/1e-2;

figure
x=xo-0.05*ones(1,length(I));
y=ys3(J)+(x-xs(J)).*(yf(I)-ys3(J))./(xf(I)-xs(J));
plot(xo,yo,'o',xo3,yo3,'o',xf,yf,'o',xs,ys3,'o'...
    ,[xs(J(f1));x(f1)],[ys3(J(f1));y(f1)],'r'...
    ,[xs(J(f2));x(f2)],[ys3(J(f2));y(f2)],'b')


"(,)
的#7""(降临规则#2,整理输入#8)
整理输入#8"\"\"\"
获取影子:...


->+o\"Cell_out\"(计算,空间点#s)->+o\"IP_out\"(计算,空间点#p)...

\"\"\"

+整理输入(计算,_凭依)->+[del](,+整理输入)...
->的(整理输入,获取影子)...

->计算(,误差)->误差->的(能谱仪,误差)...
->根据(计算,X影子)->的(电子,X影子)...

->+[做](电子,计算)->+[code](+[做],获取影子)...

->的(能谱仪,GasCell)->在(GasCell,空间点#s)...
    ->+o\"Cell0\"(计算,空间点#s)...
->的(能谱仪,磁铁)->在(磁铁,空间点#m)->的(磁铁,磁感应强度)->的(磁铁,磁场尺寸)...
    ->+.\"pos_m\"(计算,空间点#m)->+.\"B\"(计算,磁感应强度)->+.\"size_m\"(计算,磁场尺寸)...
->的(能谱仪,fiducial1)->在(fiducial1,空间点#1)->的(fiducial1,线位置#1)...
    ->+.\"pos_f1\"(计算,空间点#1)->+.\"f_1\"(计算,线位置#1)...
->的(能谱仪,fiducial2)->在(fiducial2,空间点#2)->的(fiducial2,线位置#2)...
    ->+.\"pos_f2\"(计算,空间点#2)->+.\"f_2\"(计算,线位置#2)...
->的(能谱仪,IP1)->在(IP1,空间点#p)...
    ->+o\"IP0\"(计算,空间点#p)...

->[]{
    []:->的(计算,Cell误差)->Cell误差->+[修改内容]\"d_Cell\"(,的),
    ->+的\"d_Cell\"(计算,+Cell误差)
}...
->[]{
    []:->的(计算,IP误差)->IP误差->+[修改内容]\"d_IP\"(,的),
    ->+的\"d_IP\"(计算,+IP误差)
}


"(,)
的#9""(整理输入#8,获取影子#10)
获取影子#10"\"\"\"
M代码:...

\"\"\"

+获取影子(电子,计算)->+[del](,+获取影子)...
->的(获取影子,M代码)...

->的(电子,X影子)...

->+[matlab](Matlab,X影子)->+[code](+[matlab],M代码)...
->+[.]\"shot_no\"(+[matlab],电子)...

->+.\"X_shadows\"(计算,X影子)

"(,)
的#11""(获取影子#10,M代码#12)
M代码#12"%{
+[M函数](,M代码)
+[命令行]\"start D:\CXT\Laser\Launch Angle\data\LWFA 6.0\shadow_data_2.xlsx\"
shot_no=13975
shadows_no
%}

if shot_no<13975
    data_sh=readtable(\"D:\CXT\Laser\Launch Angle\data\LWFA 6.0\shadow_data_2.xlsx\");
    shadows=data_sh{:,:};
    shadows_no=shadows(shadows(:,1)==shot_no,:);
    shadows_X=shadows_no(1,2:end);
    shadows_e=shadows_no(2,2:end);
else
    data_sh=readtable(\"D:\LWFA\LWFA_11_0\shadow_data.xlsx\");
    shadows=data_sh{:,:};
    shadows_no=shadows(shadows(:,1)==shot_no,:);
    shadows_X=sort(8001-shadows_no(1,2:end))/2;
    shadows_e=sort(8001-shadows_no(2,2:end))/2;
    shadows_X(shadows_X==4000.5)=[];
    shadows_e(shadows_e==4000.5)=[];
end


shadows_X(shadows_X==0)=[];
shadows_e(shadows_e==0)=[];

X_shadows=shadows_X;
e_shadows=shadows_e;

ans=X_shadows;

"(,)
的#13""(计算能谱仪误差#0,召唤规则#14)
召唤规则#14"\"\"\"


\"\"\"

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,误差)->误差->的(能谱仪,误差)...
->根据(计算,X影子)->的(电子,X影子)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)






"(,)

## end
#517, 184:
"""


"""

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,误差)->误差->的(能谱仪,误差)...
->根据(计算,X影子)->的(电子,X影子)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)







## end
#519, 3653:
计算发射角#0"

召唤规则:...
降临规则:...



"(,)
的#1""(计算发射角#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,发射角)->发射角->的(电子,发射角)...
->对应(_f,发射角)->的(能谱仪,_f)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)






"(,)
的#3""(计算发射角#0,降临规则#4)
降临规则#4"

整理输入:...
计算输出:...
将'整理输入'的\"\[\.\]\"替换为\".\"

"(,)
的#5""(降临规则#4,整理输入#6)
整理输入#6"\"\"\"
获取影子:...

\"\"\"

+整理输入(计算,_凭依)->+[del](,+整理输入)...
->的(整理输入,获取影子)...

->计算(,发射角)->发射角->的(电子,发射角)...
->对应(_f,发射角)->的(能谱仪,_f)...

->[]{
    []:->的(电子,e影子)->e影子,->+的(电子,+e影子)
}...
->+[做](电子,计算)->+[code](+[做],获取影子)...

->的(能谱仪,GasCell)->在(GasCell,空间点#s)...
    ->+.\"Cell0\"(计算,空间点#s)...
->的(能谱仪,磁铁)->在(磁铁,空间点#m)->的(磁铁,磁感应强度)->的(磁铁,磁场尺寸)...
    ->+.\"pos_m\"(计算,空间点#m)->+.\"B0\"(计算,磁感应强度)->+.\"size_m\"(计算,磁场尺寸)...
->的(能谱仪,fiducial1)->在(fiducial1,空间点#1)->的(fiducial1,线位置#1)...
    ->+.\"pos_f1\"(计算,空间点#1)->+.\"f_1\"(计算,线位置#1)...
->的(能谱仪,fiducial2)->在(fiducial2,空间点#2)->的(fiducial2,线位置#2)...
    ->+.\"pos_f2\"(计算,空间点#2)->+.\"f_2\"(计算,线位置#2)...
->的(能谱仪,IP1)->在(IP1,空间点#p)...
    ->+.\"IP0\"(计算,空间点#p)...

->+.\"f_n\"(计算,_f)...

->+o\"angle\"(计算,发射角)...
->[]{
    []:->对应(_f,能量)->能量->+o\"energy\"(计算,能量),->[]
}


"(,)
的#7""(整理输入#6,获取影子#8)
获取影子#8"\"\"\"
M代码:...

\"\"\"

+获取影子(电子,计算)->+[del](,+获取影子)...
->的(获取影子,M代码)...

->的(电子,e影子)...

->+[matlab](Matlab,e影子)->+[code](+[matlab],M代码)...
->+[.]\"shot_no\"(+[matlab],电子)...

->+.\"e_shadows\"(计算,e影子)

"(,)
的#9""(获取影子#8,M代码#10)
M代码#10"%{
+[M函数](,M代码)
%}


if shot_no<13975
    data_sh=readtable(\"D:\CXT\Laser\Launch Angle\data\LWFA 6.0\shadow_data_2.xlsx\");
    shadows=data_sh{:,:};
    shadows_no=shadows(shadows(:,1)==shot_no,:);
    shadows_X=shadows_no(1,2:end);
    shadows_e=shadows_no(2,2:end);
else
    data_sh=readtable(\"D:\LWFA\LWFA_11_0\shadow_data.xlsx\");
    shadows=data_sh{:,:};
    shadows_no=shadows(shadows(:,1)==shot_no,:);
    shadows_X=sort(8001-shadows_no(1,2:end))/2;
    shadows_e=sort(8001-shadows_no(2,2:end))/2;
end


shadows_X(shadows_X==0)=[];
shadows_e(shadows_e==0)=[];

X_shadows=shadows_X;
e_shadows=shadows_e;

ans=e_shadows;

"(,)
的#11""(降临规则#4,计算输出#12)
计算输出#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+计算输出(计算,_代码)->+[del](,+计算输出)...
->的(计算输出,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...

->+[matlab](Matlab,)->+[code](+[matlab],_代码)...
->[]{
    []=>.(计算,_节点)->_节点(,)...
        =>+[.](+[matlab],_节点)->[m_text](.,+[.])...
        ->+[.](+[模板文本],_节点)->[m_text](.,+[.])->+[del](,.)
}...
->[]{
    []=>o(计算,_节点)->_节点=>+[o](+[matlab],_节点)->[m_text](o,+[o])->+[del](,o)
}...
->[]{
    []=>的(计算,_节点)->_节点=>+[o](+[matlab],_节点)->[m_text](的,+[o])
}...

->+[删除结构](,_代码)

"(,)
的#13""(计算输出#12,M模板#14)
M模板#14"%{
+[M函数](,%[标题])
%}


physics_constant;
addpath('Matlab\spectrometer');
addpath('Matlab\funcs');

% Cell0=Cell00+[dCell_0,0];
% IP=IP0+[dIP_0,0];
e_shadows=[%e_shadows];
Cell0=[%Cell0];
pos_m=[%pos_m];
pos_f1=[%pos_f1];
pos_f2=[%pos_f2];
f_1=[%f_1];
f_2=[%f_2];
IP0=[%IP0];
f_n=%f_n;
B_0=%B0;
size_m=[%size_m];

shadow0=(4001-e_shadows)*2;
X_shadows0=(4001-X_shadows)*2;
shadow=4001-shadow0/2;


Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
IPx=IP0(1)*1e-2;
IPy=IP0(2)*1e-2;

shX=IPx*ones(size(shadow));
shY=(shadow-2000)*100e-6+IPy;

Fy=[f_1*1e-2+Fy1;f_2*1e-2+Fy2];
Fx=[Fx1*ones(size(f_1));Fx2*ones(size(f_2))];


[a,Fn,es,theta,energy]=DesignTool2(Cell,Ma,B0,Fx,Fy,shX,shY);
if isempty(f_n)
    angle=a;
    energy=es;
else
    angle=a(f_n);
    energy=es(f_n);
end

figure
plot(es,a,'o-',energy,angle,'r*')
xlabel('E [GeV]')
ylabel('Launch angle [mrad]')


"(,)

## end
#521, 186:
"""


"""

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,发射角)->发射角->的(电子,发射角)...
->对应(_f,发射角)->的(能谱仪,_f)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)







## end
#523, 3114:
计算电子IP图像#0"

召唤规则:...
降临规则:...



"(,)
的#1""(计算电子IP图像#0,降临规则#2)
降临规则#2"

整理输入:...
计算输出:...
将'整理输入'的\"\[\.\]\"替换为\".\"

"(,)
的#3""(降临规则#2,计算输出#4)
计算输出#4"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+计算输出(计算,_代码)->+[del](,+计算输出)...
->的(计算输出,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...

->+[matlab](Matlab,)->+[code](+[matlab],_代码)...
->[]{
    []=>.(计算,_节点)->_节点(,)...
        =>+[.](+[matlab],_节点)->[m_text](.,+[.])...
        ->+[.](+[模板文本],_节点)->[m_text](.,+[.])->+[del](,.)
}...
->[]{
    []=>o(计算,_节点)->_节点=>+[o](+[matlab],_节点)->[m_text](o,+[o])->+[del](,o)
}...
->[]{
    []=>的(计算,_节点)->_节点=>+[.](+[模板文本],_节点)->[m_text](的,+[.])
}...

->+[删除结构](,_代码)

"(,)
的#5""(计算输出#4,M模板#6)
M模板#6"%{
+[M函数](,%[标题])
%}


physics_constant;
addpath('Matlab\spectrometer');
addpath('Matlab\paper_spectrometer');
addpath('Matlab\funcs');

%能谱
%角分布

t=linspace(-4*Dt,4*Dt,100)+t_0;
f_t0=exp(-(t-t_0).^2/Dt^2);

Cell0=[%Cell0];
pos_m=[%pos_m];
pos_f1=[%pos_f1];
pos_f2=[%pos_f2];
f_1=[%f_1];
f_2=[%f_2];
IP0=[%IP0];
f_n=%f_n;
B_0=%B0;
size_m=[%size_m];

R=0.005*2.54e-2/2;


Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
z_m=pos_m(1)*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
IPx=IP0(1)*1e-2;
IPy=IP0(2)*1e-2;

Fy=[f_1*1e-2+Fy1;f_2*1e-2+Fy2];
Fx=[Fx1*ones(size(f_1));Fx2*ones(size(f_2))];

z_i=IPx;
x_i=linspace(0.2,-0.2,4000)+IPy;
y_i=linspace(-0.1,0.1,2000);

I_S=zeros(size(x_i));
for i=1:length(Fy)
% for i=f_n
[~,I_s,I_0,I0]=IP_ATM_arb(S,t,f_t0,Cell(2),Cell(1),-B,diff(Ma),z_m,R,Fy(i),Fx(i),x_i,z_i);
I_S=I_S+abs(I_0)-abs(I0)+abs(I_s);
end
I=abs(I0)+I_S;
I_im=ft(y_i'/(IPx-Cell(1)))*I;

figure
plot(x_i/1e-3,I)
xlabel('x [mm]')

figure
image(I_im/max(max(I_im))*255)
axis equal
axis([0,size(I_im,2),0,size(I_im,1)])
colormap('hot')

%{
diff(Ma)
+[M函数](,代码)
%}"(,)
的#7""(降临规则#2,整理输入#8)
整理输入#8"\"\"\"
获取分布:...
+[修改标题]\"获取分布\"(,获取标题)

\"\"\"

+整理输入(计算,_凭依)->+[del](,+整理输入)...
->的(整理输入,获取分布)...

->计算(,IP图像)->以(计算,_能谱)->能谱(以,)->以(计算,_角分布)->角分布(以,)...
->以(计算,_f)->遮挡(以,)->在(计算,能谱仪)...

->+的(计算,+角分布)->+[做](_角分布,+角分布)->+[code](+[做],获取分布)...
->+的(计算,+能谱)->+[做](_能谱,+能谱)->+[code](+[做],获取分布)...

->的(能谱仪,GasCell)->在(GasCell,空间点#s)...
    ->+.\"Cell0\"(计算,空间点#s)...
->的(能谱仪,磁铁)->在(磁铁,空间点#m)->的(磁铁,磁感应强度)->的(磁铁,磁场尺寸)...
    ->+.\"pos_m\"(计算,空间点#m)->+.\"B0\"(计算,磁感应强度)->+.\"size_m\"(计算,磁场尺寸)...
->的(能谱仪,fiducial1)->在(fiducial1,空间点#1)->的(fiducial1,线位置#1)...
    ->+.\"pos_f1\"(计算,空间点#1)->+.\"f_1\"(计算,线位置#1)...
->的(能谱仪,fiducial2)->在(fiducial2,空间点#2)->的(fiducial2,线位置#2)...
    ->+.\"pos_f2\"(计算,空间点#2)->+.\"f_2\"(计算,线位置#2)...
->的(能谱仪,IP1)->在(IP1,空间点#p)...
    ->+.\"IP0\"(计算,空间点#p)...

->+.\"f_n\"(计算,_f)...

->+o\"IP_image\"(计算,IP图像)


"(,)
的#9""(整理输入#8,获取分布#10)
获取分布#10"\"\"\"
Nini, 打开公式分析器(文件)

\"\"\"

+获取分布(_分布,_节点)->+[del](,+获取分布)...

->的(_分布,表达式)->+[算式结构转换]\"Matlab\"(表达式,_节点)


"(,)
的#11""(计算电子IP图像#0,召唤规则#12)
召唤规则#12"\"\"\"


\"\"\"

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,IP图像)->以(计算,_能谱)->能谱(以,)->以(计算,_角分布)->角分布(以,)...
->以(计算,_f)->遮挡(以,)->在(计算,能谱仪)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)






"(,)

## end
#525, 217:
"""


"""

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,IP图像)->以(计算,_能谱)->能谱(以,)->以(计算,_角分布)->角分布(以,)...
->以(计算,_f)->遮挡(以,)->在(计算,能谱仪)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)







## end
#527, 4342:
计算电子能谱#0"

召唤规则:...
降临规则:...



"(,)
的#1""(计算电子能谱#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,能谱)->能谱->的(电子,能谱)...
->在(计算,_区域)->在(能谱,_区域)->在(能谱,能谱仪)...
->根据(计算,发射角)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)






"(,)
的#3""(计算电子能谱#0,降临规则#4)
降临规则#4"

整理输入:...
计算输出:...
将'整理输入'的\"\[\.\]\"替换为\".\"

"(,)
的#5""(降临规则#4,整理输入#6)
整理输入#6"\"\"\"
获取数据:...

->计算(,能谱)->能谱->的(电子,能谱)...
->在(计算,_区域)->在(能谱,_区域)->在(能谱,能谱仪)...

\"\"\"

+整理输入(计算,_凭依)->+[del](,+整理输入)...
->的(整理输入,获取数据)...

->计算(,能谱)->能谱->的(电子,能谱)...
->在(能谱,能谱仪)->根据(计算,发射角)...

->+[做](电子,计算)->+[code](+[做],获取数据)...

->的(能谱仪,GasCell)->在(GasCell,空间点#s)...
    ->+.\"Cell0\"(计算,空间点#s)...
->的(能谱仪,磁铁)->在(磁铁,空间点#m)->的(磁铁,磁感应强度)->的(磁铁,磁场尺寸)...
    ->+.\"pos_m\"(计算,空间点#m)->+.\"B0\"(计算,磁感应强度)->+.\"size_m\"(计算,磁场尺寸)...
->的(能谱仪,fiducial1)->在(fiducial1,空间点#1)->的(fiducial1,线位置#1)...
    ->+.\"pos_f1\"(计算,空间点#1)->+.\"f_1\"(计算,线位置#1)...
->的(能谱仪,fiducial2)->在(fiducial2,空间点#2)->的(fiducial2,线位置#2)...
    ->+.\"pos_f2\"(计算,空间点#2)->+.\"f_2\"(计算,线位置#2)...
->的(能谱仪,IP1)->在(IP1,空间点#p)...
    ->+.\"IP0\"(计算,空间点#p)...

->+.\"angle\"(计算,发射角)...
->+o\"data_spectrum\"(计算,能谱)

"(,)
的#7""(整理输入#6,获取数据#8)
获取数据#8"\"\"\"
P代码:...
M代码:...

\"\"\"
+获取数据(电子,计算)->+[del](,+获取数据)...
->的(获取数据,P代码)->的(获取数据,M代码)...

->计算(,能谱)->能谱->在(计算,_区域)->在(能谱,_区域)...
->在(_区域,空间点)->的(_区域,x)->的(_区域,y)...

->+.\"file_name\"(计算,+数据地址)->+的(计算,+数据地址)...
->+.\"axis_\"(计算,+数据区域)->+的(计算,+数据区域)...
->+.\"Nx\"(计算,+像素数x)->+的(计算,+像素数x)...
->+.\"Ny\"(计算,+像素数y)->+的(计算,+像素数y)...

->+[python](Python,+数据地址)->+[code](+[python],P代码)...
->+[s]\"shot_no\"(+[python],电子)...
->+[o]\"Nx\"(+[python],+像素数x)->+[o]\"Ny\"(+[python],+像素数y)...

->+[matlab](Matlab,+数据区域)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.](+[matlab],x)->+[.](+[matlab],y)


"(,)
的#9""(获取数据#8,P代码#10)
P代码#10"\"\"\"
记住\"Python\"
print(LWFA_6_IP_table)

\"\"\"

if shot_no=='13975':
    name_pat=\"D:\\LWFA\\LWFA_11_0\\data\\%s.tiff\"
    ans=name_pat%(shot_no)
    Nx=8000
    Ny=4000
else:
    name_pat=\"D:\\CXT\\Laser\\Launch Angle\\data\\LWFA 6.0\\%s%s.tiff\"
    ans=name_pat%(shot_no,'e')
    Nx=4000
    Ny=2000



"(,)
的#11""(获取数据#8,M代码#12)
M代码#12"%{

%}


xs=x+pt(1);
ys=y+pt(2);

ans=[min(xs),max(xs),min(ys),max(ys)];

"(,)
的#13""(降临规则#4,计算输出#14)
计算输出#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+计算输出(计算,_代码)->+[del](,+计算输出)...
->的(计算输出,M模板)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...

->+[matlab](Matlab,)->+[code](+[matlab],_代码)...
->[]{
    []=>.(计算,_节点)->_节点(,)...
        =>+[.](+[matlab],_节点)->[m_text](.,+[.])...
        ->+[.](+[模板文本],_节点)->[m_text](.,+[.])->+[del](,.)
}...
->[]{
    []=>o(计算,_节点)->_节点=>+[o](+[matlab],_节点)->[m_text](o,+[o])->+[del](,o)
}...
->[]{
    []=>的(计算,_节点)->_节点{[]=>[==](,的)}=>+[o](+[matlab],_节点)->[m_text](的,+[o])
}...

->+[删除结构](,_代码)

"(,)
的#15""(计算输出#14,M模板#16)
M模板#16"%{
+[M函数](,%[标题])
%}


physics_constant;
addpath('Matlab\spectrometer');
addpath('Matlab\funcs');

axis_=[%axis_];
Cell0=[%Cell0];
pos_m=[%pos_m];
pos_f1=[%pos_f1];
pos_f2=[%pos_f2];
f_1=[%f_1];
f_2=[%f_2];
IP0=[%IP0];
B_0=%B0;
size_m=[%size_m];
file_name=\"%file_name\";

a0=mean([%angle]);

Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
IPx=IP0(1)*1e-2;
IPy=IP0(2)*1e-2;

Fy=[f_1*1e-2+Fy1;f_2*1e-2+Fy2];
Fx=[Fx1*ones(size(f_1));Fx2*ones(size(f_2))];

% image
data=imread(file_name);
data_im=double(data);

% spectrum
pos_m0=[mean(Ma),0];
siz_m0=diff(Ma);
% dx=100e-6;

z_i=IPx;
x_i0=linspace(-0.2,0.2,%Nx)+IPy;
y_i0=linspace(-0.1,0.1,%Ny);
E_0=linspace(0.02,1.5,20000)*1e9*e;

% sample
i_x=round(axis_(1)):round(axis_(2));
i_y=round(axis_(3)):round(axis_(4));
i_x=i_x(i_x>0);
i_y=i_y(i_y>0);

I0=trapz(data_im(i_y,i_x));
x_i=x_i0(i_x);
y_i=y_i0(i_y);
if isempty(I0)
    I0=trapz(data_im);
    x_i=x_i0;
    y_i=y_i0;
end


S_0=spectrum(I0,E_0,-a0,Cell(2),Cell(1),B0,siz_m0,pos_m0(1),x_i,z_i);
S=S_0(S_0~=0);
E=E_0(S_0~=0);
S_c=S/4.1e-3*e*e*1e9;

data_spectrum=S_c;


figure
image(data_im/max(max(data_im))*255)
axis equal
axis(axis_)

figure
subplot(1,2,1)
plot(x_i/1e-3,I0)
axis([min(x_i)/1e-3,max(x_i)/1e-3,0,max(I0)*1.2])
xlabel('x[mm]')
ylabel('PSL')

subplot(1,2,2)
plot(E/e/1e9,S_c)
xlabel('E [GeV]');
ylabel('Intensity [a.u.]')

%{
IPy
+[M函数](,代码)
%}"(,)

## end
#529, 209:
"""


"""

+召唤规则(计算,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->计算(,能谱)->能谱->的(电子,能谱)...
->在(计算,_区域)->在(能谱,_区域)->在(能谱,能谱仪)...
->根据(计算,发射角)...

->+计算输出(计算,_凭依)->+的(操作,+计算输出)...
->+整理输入(计算,_凭依)->+的(操作,+整理输入)







## end
#531, 10195:
二维光线场景#0"

召唤规则:...
降临规则:...



"(,)
的#1""(二维光线场景#0,降临规则#2)
降临规则#2"

设置变量:...
生成判断代码:...
生成路径结构:...
整理结构:...
+[复制结构](,设置变量)


"(,)
的#3""(降临规则#2,生成判断代码#4)
生成判断代码#4"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成判断代码(_场景,_代码)->+[del](,+生成判断代码)...
->的(生成判断代码,描述结构)->的(生成判断代码,库)...

->[]{
    []:->的(_代码,场景代码)->场景代码,
    ->+的(_代码,+场景代码)->+的(+场景代码,+内容代码)
}...

->+[code]([想],描述结构)->[想](_场景,_代码)...
->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}


"(,)
的#5""(生成判断代码#4,描述结构#6)
描述结构#6"\"\"\"


\"\"\"

+描述结构(_场景,_代码)->+操作(+描述结构,)...

->+生成代码(_代码,_代码)->+的(+操作,+生成代码)...
->[]{
    []=>的(_场景,_元件)->_元件->[]{
        []->的(_元件,长度)->长度->的(_元件,宽度)->宽度
    }=>+反射镜(_元件,_代码)->+的(+操作,+反射镜)
}


"(,)
的#7""(生成判断代码#4,库#8)
库#8"

反射镜:...
生成代码:...

"(,)
的#9""(库#8,反射镜#10)
反射镜#10"\"\"\"
M模板:...
M代码:...

保存代码:...

\"\"\"

+反射镜(_元件,_代码)->+[del](,+反射镜)...
->的(反射镜,M模板)->的(反射镜,M代码)...
->的(反射镜,保存代码)...

->的(_代码,场景代码)->的(场景代码,内容代码)...
->的(_代码,命名空间)->变量(,_元件)->的(命名空间,变量)...
->的(变量,序号)...

->的(_元件,x)->的(_元件,y)->+[标题](_元件,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[模板文本](M模板,+[增加内容2])->+[增加内容2](,内容代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],序号)->+[.](+[模板文本],+[标题])...
->+[.](+[matlab],x)->+[o](+[matlab],+xs)->+[.](+[模板文本],+xs)->+[del](,+xs)...
->+[.](+[matlab],y)->+[o](+[matlab],+ys)->+[.](+[模板文本],+ys)->+[del](,+ys)...

->[]{
    []:->在(_元件,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点)...
        ->+[.](+[模板文本],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt\"(+[matlab],+[临时文本])...
        ->+[.]\"空间点\"(+[模板文本],+[临时文本])
}...

->[]{
    []:->朝向(_元件,方向)->方向->+[.]\"an\"(+[matlab],方向)...
        ->+[.](+[模板文本],方向),
    ->+[临时文本]\"0\"->+[.]\"an\"(+[matlab],+[临时文本])...
        ->+[.]\"方向\"(+[模板文本],+[临时文本])
}


"(,)
的#11""(反射镜#10,M模板#12)
M模板#12"% %[标题]
xs_%变量=[%xs];
ys_%变量=[%ys];
[x2,y2,~,an2]=Reflection_curve_2D(x0,y0,an0,xs_%变量,ys_%变量);
xs(%序号)=x2;
ys(%序号)=y2;
an(%序号)=an2;

"(,)
的#13""(反射镜#10,M代码#14)
M代码#14"%{
+[M函数](,M代码)
%}

xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);


%{
+[M函数](,M代码)
%}"(,)
的#15""(反射镜#10,保存代码#16)
保存代码#16"%{
+[M函数](,保存代码)
Nini, 打开反射问题的transform_2D_reflection(节点)

Reflection_curve_2D(M函数):...
+[修改标题]\"Reflection_curve_2D\"(,reflection_pt_an)
%}

addpath('Matlab\draw');
addpath('Matlab\space');
addpath('Matlab\optics');

x1=[-10,0.5];
y1=[5,0.2];

Dx=diff(x1(1:2));
Dy=diff(y1(1:2));
an1=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy);

[x2,y2,an2]=Reflection_curve_2D(x1,y1,an1,xs,ys);

Dx2=cosd(an2);
Dy2=sind(an2);

plot([x1,x2,x2+Dx2],[y1,y2,y2+Dy2])



%{
+[M函数](,保存代码)
%}"(,)
的#17""(保存代码#16,raflection_pt_an#18)
raflection_pt_an#18""(,)
的#19""(保存代码#16,Reflection_curve_2D#20)
Reflection_curve_2D#20"%{
地址::Matlab\optics\Reflection_curve_2D.m
测试:...
+[保存M函数](,Reflection_curve_2D)
%}

function [x2,y2,an2,angle]=Reflection_curve_2D(x1,y1,an1,xs,ys)
addpath(\"Matlab\draw\");

% x1=[-10,0.5];
% y1=[5,0.2];
% Dx=diff(x1(1:2));
% Dy=diff(y1(1:2));
% an1=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy);

Dx1=cosd(an1);
Dy1=sind(an1);
xs1=[x1,x1+Dx1];
ys1=[y1,y1+Dy1];

[~,~,~,x0,y0,on_1,on_2]=intersection_line_curve(xs1,ys1,xs,ys);
DL=(x0-x1(1))*Dx1+(y0-y1(1))*Dy1;
DL_min=min(DL(on_2 & DL>1e-9));

if isempty(DL_min)
    an2=nan;
    x2=nan;
    y2=nan;
    angle=nan;
else
    i_p=find(DL==DL_min(1));
    
    Dx=diff(xs(i_p:i_p+1));
    Dy=diff(ys(i_p:i_p+1));
    angle=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy);
    
    an2=2*angle-an1;
    x2=x0(DL==DL_min(1));
    y2=y0(DL==DL_min(1));
end

end

%{
+[保存M函数](,Reflection_curve_2D)
%}"(,)
的#21""(Reflection_curve_2D#20,测试#22)
测试#22"%{
+[M函数](,测试)
%}

addpath('Matlab\draw');
addpath('Matlab\space');

% xs=[-1,1,1,-1];
% ys=[0,0,-1,-1];
xs=[-1,1,1,-1];
ys=[20,20,21,21];

x1=[-10,0.5];
y1=[5,0.2];


Dx1=diff(x1(1:2));
Dy1=diff(y1(1:2));
an1=acosd(Dx1/norm([Dx1,Dy1]))*sign_1(Dy1);

[~,~,~,x0,y0,on_1,on_2]=intersection_line_curve(x1,y1,xs,ys);
DL=(x0-x1(1))*Dx1+(x0-y1(1))*Dy1;
DL_min=min(DL(on_2 & DL>=0));
x_0=x0(DL==DL_min(1));
y_0=y0(DL==DL_min(1));
i_p=find(DL==DL_min(1));


Dx=diff(xs(i_p:i_p+1));
Dy=diff(ys(i_p:i_p+1));
angle=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy);

an2=2*angle-an1;
Dx2=cosd(an2);
Dy2=sind(an2);

plot([x1,x_0,x_0+Dx2],[y1,y_0,y_0+Dy2])



%{
+[M函数](,测试)
%}"(,)
的#23""(Reflection_curve_2D#20,地址#24)
地址#24"Matlab\optics\Reflection_curve_2D.m"(,)
的#25""(库#8,生成代码#26)
生成代码#26"\"\"\"
M模板:...

保存代码:...

\"\"\"

+生成代码(_代码,_代码)->+[del](,+生成代码)...
->的(生成代码,M模板)->的(生成代码,保存代码)...

->的(_代码,场景代码)->的(场景代码,内容代码)...
->+[模板文本](M模板,场景代码)->+[.](+[模板文本],内容代码)...
->+[消息窗口](,场景代码)


"(,)
的#27""(生成代码#26,M模板#28)
M模板#28"%{
+[M函数](,保存代码)

x0=-10;
y0=5;
an0=-24.5672;
%}

addpath(\"Matlab\optics\");

xs=[];
ys=[];
an=[];

x0=pt0(1);
y0=pt0(2);
v_x=cosd(an0);
v_y=sind(an0);

%内容代码

DL=(xs-x0)*v_x+(ys-y0)*v_y;
DL_min=min(DL(DL>1e-10));

if isempty(DL_min)
    state=false;
else
    i=find(DL==DL_min(1));
    i=int64(i(1));
    
    pt_out=[xs(i),ys(i)];
    an_out=an(i);
    state=true;
end

%{
+[M函数](,保存代码)
%}"(,)
的#29""(生成代码#26,保存代码#30)
保存代码#30"%{
+[M函数](,保存代码)

xs
ys
Nini, 打开光线传播的Reflection_curve_2D(节点)
%}

xs=[];
ys=[];
an=[];

x0=[-10];
y0=[5];
an0=-24.5672;

v_x=cosd(an0);
v_y=sind(an0);


% M1
xs_bg_1=[-1.0, 1.0, 1.0, -1.0];
ys_bg_1=[0.0, 0.0, -0.1, -0.1];
[x2,y2,~,an2]=Reflection_curve_2D(x0,y0,an0,xs_bg_1,ys_bg_1);
xs(1)=x2;
ys(1)=y2;
an(1)=an2;

% M2
xs_bg_2=[10.0, 10.0, 10.1, 10.1];
ys_bg_2=[9.0, 11.0, 11.0, 9.0];
[x2,y2,~,an2]=Reflection_curve_2D(x0,y0,an0,xs_bg_2,ys_bg_2);
xs(2)=x2;
ys(2)=y2;
an(2)=an2;

% M3
xs_bg_3=[0.984807753012208, -0.984807753012208, -0.967442935245515, 1.002172570778901];
ys_bg_3=[19.82635182233307, 20.17364817766693, 20.272128952968153, 19.92483259763429];
[x2,y2,~,an2]=Reflection_curve_2D(x0,y0,an0,xs_bg_3,ys_bg_3);
xs(3)=x2;
ys(3)=y2;
an(3)=an2;


DL=(xs-x0)*v_x+(ys-y0)*v_y;
DL_min=min(DL(DL>0));
i=find(DL==DL_min(1));
i=i(1);

xs_out=xs(i);
ys_out=ys(i);
an_out=an(i);


%{
+[M函数](,保存代码)
%}"(,)
的#31""(降临规则#2,设置变量#32)
设置变量#32"\"\"\"
描述结构:...
库:...

\"\"\"

+设置变量(_场景,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)->的(设置变量,库)...

->[]{
    []:->的(_代码,命名空间)->命名空间,->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->序号(_操作,)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)...
        ->+的(+变量,+序号)->[m_text](序号,+序号)
}


"(,)
的#33""(设置变量#32,描述结构#34)
描述结构#34"\"\"\"
P代码:...
P代码1:...

\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码1)...

->[python]\"
is_var=[0,0]
state=True
\"(Python,)...
->[]{
    []=>的(_场景,_物体)->_物体->[说](,_物体)->在(_物体,空间点)...
    =>[]{
        []:->[]{的(_物体,宽度)->宽度}...
            ->+变量名(,_物体)->+序号(+变量名,)->+的(+操作,+变量名)...
            ->+[o]\"n_out\"([python]#0,+序号)...
            ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名),
        ->[]
    }
}


"(,)
的#35""(描述结构#34,P代码#36)
P代码#36"\"\"\"


\"\"\"
is_var[0]+=1
ans='bg_%d'%(is_var[0])
n_out=int(is_var[0])
state=True

"(,)
的#37""(描述结构#34,P代码1#38)
P代码1#38"\"\"\"


\"\"\"

is_var[1]+=1
ans='obj_%d'%(is_var[1])
state=True

"(,)
的#39""(设置变量#32,库#40)
库#40""(,)
的#41""(降临规则#2,生成路径结构#42)
生成路径结构#42"\"\"\"
光线传播:...

\"\"\"

+生成路径结构(_场景,_代码)->+[del](,+生成路径结构)...
->的(生成路径结构,光线传播)...

->[]{
    []:->的(_代码,路径结构)->路径结构,
    ->+的(_代码,+路径结构)
}->的(_代码,路径结构)...

->的(_场景,光源)->在(光源,空间点)->朝向(光源,方向)...

->+的(路径结构,+节点)->+的(+节点,+位置)->[m_text](空间点,+位置)...
->+节点\"20\"->+的(+节点,+角度)->[m_text](方向,+角度)...
->+上(光源,+节点)->+的(路径结构,+上)...

->+[做](+节点,_代码)->+[code](+[做],光线传播)


"(,)
的#43""(生成路径结构#42,光线传播#44)
光线传播#44"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+光线传播(_起点,_代码)->+[del](,+光线传播)...
->的(光线传播,描述结构)->的(光线传播,库)...

->+[code]([想],描述结构)->[想](_起点,_代码)...
->操作([想],)...
->[]{
    []:->的(操作,_类型)->_类型(_物体,终点)->_物体->终点(,)...
        ->位置(终点,)->平面角度(终点,)...
        ->的(库,_条目)->_条目->[eq](_类型,_条目)...
        ->+[做](_起点,_物体)->+[code](+[做],_条目)...
        ->+[.]\"代码\"(+[做],_代码)...
        ->+[.](+[做],+位置)->[m_text](位置,+位置)...
        ->+[.](+[做],+平面角度)->[m_text](平面角度,+平面角度)->+[del](,+平面角度)...
        ->+[.](+[做],+步数)->[m_text](终点,+步数)->+[del](,+步数),
    ->[]
}

"(,)
的#45""(光线传播#44,描述结构#46)
描述结构#46"\"\"\"
碰撞检测:...
碰撞类型:...
+[新建阅读窗口](,碰撞检测)

\"\"\"

+描述结构(_起点,_代码)->+操作(+描述结构,)...
->的(描述结构,碰撞检测)->的(描述结构,碰撞类型)...

->的(_代码,场景代码)->的(_代码,命名空间)...
->[]{
    []:->[==]\"0\"(,_起点)->+的(+操作,+碰撞结束),
    ->+[.]([想],场景代码)->+[code]([想],碰撞检测)->[想](命名空间,_起点)...
        ->终点(_起点,)...
        ->+[code]([想]#1,碰撞类型)->[想]#1(+操作,终点),
    ->+的(+操作,+碰撞结束)
}


"(,)
的#47""(描述结构#46,碰撞检测#48)
碰撞检测#48"\"\"\"


\"\"\"
+碰撞检测(_空间,_起点)->.(+碰撞检测,_M代码)...

->的(_起点,位置)->的(_起点,角度)...
->+终点(_起点,)->+位置(+终点,)->+平面角度(+终点,)...
->+序号(+终点,)...

->+[.]\"pt0\"([matlab],位置)->+[.]\"an0\"([matlab],角度)...
->+[o]\"pt_out\"([matlab],+位置)->+[o]\"an_out\"([matlab],+平面角度)...
->+[o]\"i\"([matlab],+序号)...
->+[code]([matlab],_M代码)->[matlab](Matlab,)...

->的(_空间,变量)->的(变量,序号)->[==](序号,+序号)...

->+碰撞(+终点,变量)->+[.]\"n\"([python],_起点)->[python]\"
ans=int(n[0]-1)
\"(Python,+终点)


"(,)
的#49""(描述结构#46,碰撞类型#50)
碰撞类型#50"\"\"\"
->位置(终点,)->角度(终点,)->序号(终点,)

\"\"\"

+碰撞类型(操作,终点)...

->碰撞(终点,变量)->变量(,_物体)...
->+反射镜(_物体,终点)->+的(操作,+反射镜)

"(,)
的#51""(光线传播#44,库#52)
库#52"

反射镜:...



"(,)
的#53""(库#52,反射镜#54)
反射镜#54"\"\"\"
M代码:...

\"\"\"

+反射镜(_起点,_物体)->+[del](,+反射镜)...
->的(反射镜,M代码)...
->的(库,反射镜)->的(光线传播,库)...

->.\"代码\"(+反射镜,_代码)->的(_代码,路径结构)...
->.(+反射镜,位置)->.(+反射镜,步数)->.(+反射镜,平面角度)...

->的(_起点,角度#0)...

->+的(路径结构,+节点)->[m_text](步数,+节点)...
->+的(+节点,位置)->+的(+节点,+角度)...

->+上(_物体,+节点)->+的(路径结构,+上)...
->+然后(_起点,+节点)->+的(路径结构,+然后)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"an1\"(+[matlab],角度#0)->+[.]\"an0\"(+[matlab],平面角度)...
->+[o]\"an2\"(+[matlab],+角度)...

->+[做](+节点,_代码)->+[code](+[做],光线传播)

"(,)
的#55""(反射镜#54,M代码#56)
M代码#56"%{
+[M函数](,M代码)
%}


an2=an0*2-an1;
an0

"(,)
的#57""(降临规则#2,整理结构#58)
整理结构#58"\"\"\"


\"\"\"

+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,路径结构)->+[del](,的)->+[del](,路径结构)...
->+[删除结构](,_凭依)...
->[]{
    []=>的(路径结构,_节点)->_节点=>+[有](_凭依,_节点)->[说](,_节点)
}



"(,)
的#59""(二维光线场景#0,召唤规则#60)
召唤规则#60"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"二维场景光路结构\"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->+生成路径结构(_媒介,_凭依)->+的(操作,+生成路径结构)...
->+生成判断代码(_媒介,_凭依)->+的(操作,+生成判断代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)

## end
#533, 231:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"二维场景光路结构"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->+生成路径结构(_媒介,_凭依)->+的(操作,+生成路径结构)...
->+生成判断代码(_媒介,_凭依)->+的(操作,+生成判断代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#535, 6437:
光路结构转代码#0"

召唤规则:...
降临规则:...



"(,)
的#1""(光路结构转代码#0,召唤规则#2)
召唤规则#2"\"\"\"
的(记忆,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)
+[设置结构](,记忆)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"路径结构转路线代码\"(,召唤星辰)...

->+代码整理(_媒介,_凭依)->+的(操作,+代码整理)...
->[]{
    []=>的(_媒介,节点)->节点->[]{[]=>然后(,节点)}...
        =>+路线追踪(节点,_凭依)->+的(操作,+路线追踪)
}


"(,)
的#3""(光路结构转代码#0,降临规则#4)
降临规则#4"


路线追踪:...
代码整理:...




"(,)
的#5""(降临规则#4,路线追踪#6)
路线追踪#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+路线追踪(_节点,_代码)->+[del](,+路线追踪)...
->的(路线追踪,描述结构)...
->的(路线追踪,库)->的(库,结束操作)...

->[]{
    []:->的(_代码,过程代码)->过程代码,->+的(_代码,+过程代码)
}->的(_代码,过程代码)...
->[]{
    []:->的(_代码,命名空间)->命名空间,->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](_节点,_代码)...

->命名操作([想],)...
->[]{
    []:->的(命名操作,变量)->变量->序号(变量,)...
        ->+的(命名空间,+变量)->+变量(,_节点)->[m_text](变量,+变量)...
        ->+的(+变量,+序号)->[m_text](序号,+序号),
    ->[]
}...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
        ->+[.](+[做],过程代码)->+[.]\"代码\"(+[做],_代码)
}...

->结尾操作([想],)...
->[]{
    []:->的(结尾操作,下一步)->下一步(,_节点1)...
        ->+[做](_节点1,_代码)->+[code](+[做],路线追踪),
    ->+[做](_节点,_代码)->+[code](+[做],结束操作)->+[.](+[做],过程代码)
}

"(,)
的#7""(路线追踪#6,描述结构#8)
描述结构#8"\"\"\"
命名:...

\"\"\"

+描述结构(_节点,_代码)...
->的(描述结构,命名)...

->+操作(+描述结构,)->+结尾操作(+描述结构,)->+命名操作(+描述结构,)...

->的(_代码,命名空间)...
->[]{
    []:->变量(,_节点)->的(命名空间,变量),
    ->+[.]([想],+命名操作)->+[code]([想],命名)->[想](_代码,_节点)
}...

->上(_物体,_节点)->[]{
    []:->的(_物体,宽度)->宽度->然后(_节点0,_节点)->_节点0(,)...
        ->+反射镜(_物体,_节点0)->+的(+操作,+反射镜),
    ->+光源(_物体,_节点)->+的(+操作,+光源)
}...

->[]{
    []:->然后(_节点,_节点1)->_节点1->+下一步(,_节点1)->+的(+结尾操作,+下一步),
    ->[]
}


"(,)
的#9""(描述结构#8,命名#10)
命名#10"\"\"\"
P代码:...
P代码2:...

\"\"\"

+命名(_代码,_节点)->.(+命名,命名操作)...
->的(命名,P代码)->的(命名,P代码2)...

->的(_代码,命名空间)...

->+变量(,_节点)->+的(命名操作,+变量)->+序号(+变量,)...

->Python->[]{
    []:->然后(_节点0,_节点)->_节点0->变量(,_节点0)->的(命名空间,变量)->的(变量,序号)...
        ->+[.]\"n\"([python],序号)->+[o]\"var_out\"([python],+变量)...
        ->+[code]([python],P代码)->[python](Python,+序号),
    ->+[o]\"var_out\"([python]#2,+变量)...
        ->+[code]([python]#2,P代码2)->[python]#2(Python,+序号)
}


"(,)
的#11""(命名#10,P代码#12)
P代码#12"\"\"\"


\"\"\"

ans=int(n[0]+1)
try:
    var_n=var_n+1
except:
    var_n=1

var_out=int(var_n)
state=True

"(,)
的#13""(命名#10,P代码2#14)
P代码2#14"\"\"\"


\"\"\"

ans=int(1)
try:
    var_n=var_n+1
except:
    var_n=1

var_out=int(var_n)
state=True


"(,)
的#15""(路线追踪#6,库#16)
库#16"

反射镜:...
光源:...
将条目\"反射镜\"复制为条目\"结束操作\"
结束操作:...




"(,)
的#17""(库#16,光源#18)
光源#18"\"\"\"
M代码:...
M模板:...

\"\"\"
+光源(_元件,_节点)->+[del](,+光源)...
->的(光源,M模板)->的(光源,M代码)...

->.(+光源,过程代码)...
->.\"代码\"(+光源,_代码)->的(_代码,命名空间)...
->变量(,_节点)->的(变量,序号)->的(命名空间,变量)...

->的(_元件,x)->的(_元件,y)->+[标题](_元件,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[模板文本](M模板,+[增加内容])->+[增加内容](,过程代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],序号)->+[.](+[模板文本],+[标题])...
->+[.](+[matlab],x)->+[o](+[matlab],+xs)->+[.](+[模板文本],+xs)->+[del](,+xs)...
->+[.](+[matlab],y)->+[o](+[matlab],+ys)->+[.](+[模板文本],+ys)->+[del](,+ys)...

->[]{
    []:->在(_元件,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点)...
        ->+[.](+[模板文本],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt\"(+[matlab],+[临时文本])...
        ->+[.]\"空间点\"(+[模板文本],+[临时文本])
}...

->[]{
    []:->朝向(_元件,方向)->方向->+[.]\"an\"(+[matlab],方向)...
        ->+[.](+[模板文本],方向),
    ->+[临时文本]\"0\"->+[.]\"an\"(+[matlab],+[临时文本])...
        ->+[.]\"方向\"(+[模板文本],+[临时文本])
}
"(,)
的#19""(光源#18,M模板#20)
M模板#20"% %[标题]
xs(%序号)=%xs;
ys(%序号)=%ys;
an(%序号)=%方向;

"(,)
的#21""(光源#18,M代码#22)
M代码#22"%{
+[M函数](,M代码)
xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
%}

xs=pt(1);
ys=pt(2);

%{
+[M函数](,M代码)
%}"(,)
的#23""(库#16,结束操作#24)
结束操作#24"\"\"\"
M代码:...
M模板:...

\"\"\"
+结束操作(_节点,_代码)->+[del](,+结束操作)...
->的(结束操作,M模板)->的(结束操作,M代码)...

->.(+结束操作,过程代码)->的(_代码,命名空间)...
->变量(,_节点)->的(变量,序号)->的(命名空间,变量)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[模板文本](M模板,+[增加内容])->+[增加内容](,过程代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],序号)->+[.](+[模板文本],+[标题])...
->+[o](+[matlab],+L)->+[.](+[模板文本],+L)->+[del](,+L)
"(,)
的#25""(结束操作#24,M代码#26)
M代码#26"%{
+[M函数](,M代码)
%}

x_im=get(gca,'XLim');
y_im=get(gca,'YLim');

L=min([diff(x_im),diff(y_im)])/2;



%{
+[M函数](,M代码)
%}"(,)
的#27""(结束操作#24,M模板#28)
M模板#28"% end
xs(%序号+1)=xs(%序号)+%L*cosd(an(%序号));
ys(%序号+1)=ys(%序号)+%L*sind(an(%序号));
an(%序号+1)=an(%序号);

"(,)
的#29""(库#16,反射镜#30)
反射镜#30"\"\"\"
M代码:...
M模板:...

\"\"\"
+反射镜(_元件,_节点)->+[del](,+反射镜)...
->的(反射镜,M模板)->的(反射镜,M代码)...

->.(+反射镜,过程代码)...
->.\"代码\"(+反射镜,_代码)->的(_代码,命名空间)...
->变量(,_节点)->的(变量,序号)->的(命名空间,变量)...

->的(_元件,x)->的(_元件,y)->+[标题](_元件,)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[模板文本](M模板,+[增加内容])->+[增加内容](,过程代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],序号)->+[.](+[模板文本],+[标题])...
->+[.](+[matlab],x)->+[o](+[matlab],+xs)->+[.](+[模板文本],+xs)->+[del](,+xs)...
->+[.](+[matlab],y)->+[o](+[matlab],+ys)->+[.](+[模板文本],+ys)->+[del](,+ys)...

->[]{
    []:->在(_元件,空间点)->空间点->+[.]\"pt\"(+[matlab],空间点)...
        ->+[.](+[模板文本],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt\"(+[matlab],+[临时文本])...
        ->+[.]\"空间点\"(+[模板文本],+[临时文本])
}...

->[]{
    []:->朝向(_元件,方向)->方向->+[.]\"an\"(+[matlab],方向)...
        ->+[.](+[模板文本],方向),
    ->+[临时文本]\"0\"->+[.]\"an\"(+[matlab],+[临时文本])...
        ->+[.]\"方向\"(+[模板文本],+[临时文本])
}
"(,)
的#31""(反射镜#30,M模板#32)
M模板#32"% %[标题]
[x2,y2,an2]=Reflection_curve_2D(xs(%序号),ys(%序号),an(%序号),[%xs],[%ys]);
xs(%序号+1)=x2;
ys(%序号+1)=y2;
an(%序号+1)=an2;

"(,)
的#33""(反射镜#30,M代码#34)
M代码#34"%{
+[M函数](,M代码)
%}

xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);


%{
+[M函数](,M代码)
%}"(,)
的#35""(降临规则#4,代码整理#36)
代码整理#36"\"\"\"
M模板:...

测试代码:...

\"\"\"

+代码整理(,_代码)->+[del](,+代码整理)...
->的(代码整理,M模板)...

->+[标题](_代码,)->的(_代码,过程代码)...
->+[模板文本](M模板,_代码)->+[M函数](,_代码)...
->+[.](+[模板文本],过程代码)->+[.](+[模板文本],+[标题])...

->+[删除结构](,_代码)

"(,)
的#37""(代码整理#36,M模板#38)
M模板#38"%{
+[M函数](,%[标题])
%}


xs=[];
ys=[];
an=[];

%过程代码

plot(xs,ys)


"(,)
的#39""(代码整理#36,测试代码#40)
测试代码#40"%{
+[M函数](,测试代码)
xs
ys
an
plot(xs,ys)
%}


xs=[];
ys=[];
an=[];

% 光源
xs(1)=-10.0;
ys(1)=5.0;
an(1)=-26.565051177077994;

% M1
[x2,y2,an2]=Reflection_curve_2D(xs(1),ys(1),an(1),[-1.0, 1.0, 1.0, -1.0],[0.0, 0.0, -0.1, -0.1]);
xs(1+1)=x2;
ys(1+1)=y2;
an(1+1)=an2;

% end
xs(2+1)=xs(2)+10.186064476484077*cosd(an(2));
ys(2+1)=ys(2)+10.186064476484077*sind(an(2));
an(2+1)=an(2);


"(,)

## end
#537, 267:
"""
的(记忆,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)
+[设置结构](,记忆)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"路径结构转路线代码"(,召唤星辰)...

->+代码整理(_媒介,_凭依)->+的(操作,+代码整理)...
->[]{
    []=>的(_媒介,节点)->节点->[]{[]=>然后(,节点)}...
        =>+路线追踪(节点,_凭依)->+的(操作,+路线追踪)
}



## end
#539, 13722:
文本结构化#0"

召唤规则:...
降临规则:...



"(,)
的#1""(文本结构化#0,降临规则#2)
降临规则#2"

简化内容:...
分析段落:...
整理结构:...

"(,)
的#3""(降临规则#2,简化内容#4)
简化内容#4"\"\"\"
P代码:...

\"\"\"
+简化内容(_媒介,_凭依)->+[del](,+简化内容)...
->的(简化内容,P代码)...

->+[python](Python,_凭依)->+[code](+[python],P代码)...
->+[s]\"text\"(+[python],_媒介)



"(,)
的#5""(简化内容#4,P代码#6)
P代码#6"\"\"\"
记住\"Python\"
print(re.sub(r'[\s]','','t e s t'))

\"\"\"

import re

i=0
j=0
ans=''
while True:
    if i+4<len(text) and text[i:i+4]=='<!--':
        i=i+4
        while True:
            if i+3<len(text) and text[i:i+3]=='-->':
                i+=3
                break
            elif i>=len(text):
                break
            else:
                i+=1
    else:
        ans+=text[i]

    if i<len(text)-1:
        i+=1
    else:
        break

ans=re.sub(r'<br>','\n',ans)
ans=re.sub(r'<i>','',ans)
ans=re.sub(r'</i>','',ans)
ans=re.sub(r'\n\s*\n','\n',ans)


\"\"\"
Nini, 打开词典(文件)
Nini, 打开公式分析器(文件)
记住\"Python\"

\"\"\""(,)
的#7""(降临规则#2,分析段落#8)
分析段落#8"\"\"\"
描述结构:...
库:...
Nini, 打开人体模型(文件)
+[新建阅读窗口](,描述结构)

\"\"\"
+分析段落(_媒介,_凭依)->+[del](,+分析段落)...
->的(分析段落,描述结构)->的(分析段落,库)...
->的(库,生成章节#0)...

->+[code]([想],描述结构)->[想](,_凭依)...
->结构([想],)...
->[]{
    []=>的(结构,章节)->章节->类型(章节,)...
    =>+的(_凭依,+章节)->[m_text](章节,+章节)->+是(章节,+章节)->+[del](,+是)...
        ->+[修改标题](,+章节)->[m_text](类型,+[修改标题])
}...

->操作([想],)...
->[]{
    []=>的(操作,生成章节)->生成章节(,章节)->章节->是(章节,_章节)...
    =>+[做](_媒介,_章节)->+[code](+[做],生成章节#0)
}


"(,)
的#9""(分析段落#8,库#10)
库#10"

生成章节:...





"(,)
的#11""(库#10,生成章节#12)
生成章节#12"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

保存:...
测试:...
+[新建阅读窗口](,测试)

\"\"\"

+生成章节(_媒介,_章节)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,库)...

->+[code]([想],描述结构)->[想](,_章节)...
->结构([想],)...
->[]{
    []=>的(结构,章节)->章节->类型(章节,)...
    =>+的(_章节,+章节)->[m_text](章节,+章节)->+是(章节,+章节)->+[del](,+是)...
    ->+[修改标题](,+章节)->[m_text](类型,+[修改标题])...
    ->+[下一个](结构,+章节)->+下一个(结构,章节#0)->章节#0->+[del](,+下一个):
        ->头部(结构,)->+然后(章节#0,+章节)->+的(_章节,+然后),
        ->+头部(结构,)->+[del](,+头部)
}...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)->是(_宾语,_节点)...
        ->+[做](_主语,_节点)->+[code](+[做],_条目)->+[.](+[做],_媒介)
}



"(,)
的#13""(生成章节#12,描述结构#14)
描述结构#14"\"\"\"
P代码:...
P代码2:...
段落:...

\"\"\"

+描述结构(,_凭依)->+[del](,+描述结构)...
->的(描述结构,P代码)->的(描述结构,P代码2)->的(描述结构,段落)...
->+操作(+描述结构,)->+结构(+描述结构,)...

->+[.]\"text_paper\"([python],_凭依)...
->+[code]([python],P代码)->[python](Python,)...

->+[.]([想],+操作)->+[.]([想],+结构)->+[code]([想],段落)...
->+不终止->+[code]([python]#2,P代码2)...

=>[python]#2(Python,+不终止)->[想](,_凭依)->章节([想],)->类型([想],)...
=>+的(+结构,+章节)->[m_text](章节,+章节)...
->+类型(+章节,)->[m_text](类型,+类型)...

->[]{
    []:->[==]\"图片\"(,类型)->+图片结构(_凭依,+章节)->+的(+操作,+图片结构),
    ->[==]\"公式\"(,类型)->+公式结构(_凭依,+章节)->+的(+操作,+公式结构),
    ->[]
}


"(,)
的#15""(描述结构#14,段落#16)
段落#16"\"\"\"
P代码:...
+[新建阅读窗口](,P代码)

\"\"\"

+段落(,_凭依)->.(+段落,操作)->.(+段落,结构)...
->的(段落,P代码)...

->+章节(+段落,)->+类型(+段落,)...
->+[o]\"text_sec\"([python],+章节)->+[o]\"type_sec\"([python],+类型)...
->+[code]([python],P代码)->[python](Python,)

"(,)
的#17""(段落#16,P代码#18)
P代码#18"\"\"\"


\"\"\"

state=True
while True:
    if list_i>=len(list_sec):
        type_sec='结束'
        break
    text_sec=list_sec[list_i]
    list_i+=1
    if text_sec!='':
        break

if type_sec=='结束':
    state=False
elif list_i==1:
    type_sec='题目'
elif len(text_sec)>4 and text_sec[0:4]=='%fig':
    type_sec='图片'
elif len(text_sec)>2 and text_sec[0:2]=='%[':
    type_sec='公式'
elif len(text_sec)>1 and text_sec[0:1]=='%':
    type_sec='图片'
else:
    type_sec='文本'


"(,)
的#19""(描述结构#14,P代码#20)
P代码#20"\"\"\"
记住\"Python\"

\"\"\"


list_sec=text_paper.split('\n')
list_i=0
state=True


"(,)
的#21""(描述结构#14,P代码2#22)
P代码2#22"\"\"\"


\"\"\"

state=(list_i<len(list_sec))

"(,)
的#23""(生成章节#12,库#24)
库#24"

图片结构:...
公式结构:...
将条目\"图片结构\"复制为条目\"公式结构\"
将公式结构的\"图片\"替换为\"公式\"

"(,)
的#25""(库#24,公式结构#26)
公式结构#26"\"\"\"
描述结构:...
+[新建阅读窗口](,描述结构)

\"\"\"

+公式结构(_凭依,_公式)->+[del](,+公式结构)...
->的(公式结构,描述结构)...

->.(+公式结构,_媒介)...
->+[code]([想],描述结构)->[想](_媒介,_公式)...
->操作([想],)...
->的(操作,名字)->+的(_公式,+名字)->[m_text](名字,+名字)...
->的(操作,LaTeX)->+的(_公式,+LaTeX)->[m_text](LaTeX,+LaTeX)




"(,)
的#27""(公式结构#26,描述结构#28)
描述结构#28"\"\"\"
P代码:...
+[修改标题]\"收集公式\"(,收集图例)
+[删除结构](,收集公式)->+[del](,收集公式)

\"\"\"
+描述结构(_媒介,_公式)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->+的(+操作,+名字)->+的(+操作,+LaTeX)...
->+[s]\"name_formula\"([python],_公式)->+[code]([python],P代码)...
->[python](Python,+名字)...

->的(_媒介,_表达式)->[标题](_表达式,)->[==](+名字,[标题])...
->[m_text](_表达式,+LaTeX)


"(,)
的#29""(描述结构#28,图例#30)
图例#30""(,)
的#31""(描述结构#28,P代码#32)
P代码#32"\"\"\"


\"\"\"

state=True
ans=name_formula[1:]




"(,)
的#33""(库#24,图片结构#34)
图片结构#34"\"\"\"
描述结构:...
库:...
P代码:...
+[新建阅读窗口](,描述结构)

\"\"\"

+图片结构(_凭依,_图片)->+[del](,+图片结构)...
->的(图片结构,描述结构)->的(图片结构,库)...

->.(+图片结构,_媒介)...
->+[code]([想],描述结构)->[想](,_图片)...
->操作([想],)...
    ->的(操作,名字)->+的(_图片,+名字)->[m_text](名字,+名字)...
    ->的(操作,图例)->+的(_图片,+图例)->[m_text](图例,+图例)...
    ->的(操作,类型)->+的(_图片,+类型)->[m_text](类型,+类型)...
    ->的(操作,位置)->+的(_图片,+位置)->[m_text](位置,+位置)...

->的(_媒介,_图片节点)->[标题](_图片节点,)->[==]([标题],名字)...
->[]{
    []:->图片(_图片节点,)...
        ->+的(_图片,+源地址)->[m_text](_图片节点,+源地址)...
        ->+的(_图片,+目标地址),

    ->表格(_图片节点,)->+[修改标题]\"表格\"(,_图片)...
        ->+的(_图片,+内容#1)->[m_text](_图片节点,+内容#1),
    ->程序(_图片节点,)->+[修改标题]\"程序\"(,_图片)...
        ->+的(_图片,+内容#1b)->[m_text](_图片节点,+内容#1b),

    ->3D(_图片节点,)->+的(_图片,+内容)->+的(_图片,+3D)->[]{
        []:->的(_图片节点,H代码)->H代码(,)...
            ->+[三维场景转ThreeJS_模块](_图片节点,H代码)...
            ->+[修改内容](H代码,+内容),
        ->+[修改内容](_图片节点,+内容)
    },
    ->SVG(_图片节点,)->+的(_图片,+内容#2)->+的(_图片,+SVG)->[]{
        []:->的(_图片节点,H代码)->H代码(,)...
            ->+[PPT场景转H代码](_图片节点,H代码)...
            ->+[修改内容](H代码,+内容#2),
        ->+[修改内容](_图片节点,+内容#2)
    },
    ->[]
}...

->[]{
    []:->的(操作,结尾)->结尾(,_结尾)->然后(,_结尾)->+[左连](然后,_图片),
    ->[]
}...
->[]{
    []=>的(操作,删除)->删除(,_删除)=>+[del](,_删除)
}


"(,)
的#35""(图片结构#34,库#36)
库#36""(,)
的#37""(图片结构#34,描述结构#38)
描述结构#38"\"\"\"
收集图例:...
收集信息:...
将条目\"收集图例\"复制为条目\"收集信息\"
print(text_fig)
+[新建阅读窗口](,收集信息)

\"\"\"
+描述结构(,_图片)->+操作(+描述结构,)...
->的(描述结构,收集图例)...

->+的(+操作,+名字)->+的(+操作,+图例)...
->+的(+操作,+类型)->+的(+操作,+位置)...

->+[.]\"name_fig\"([python],_图片)->[python]\"text_fig=''
state=True\"(Python,)...

->+[.]([想],+操作)->+[code]([想],收集信息)->[想](,_图片)...
->+[.]([想]#2,+操作)->+[code]([想]#2,收集图例)->[想]#2(,_图片)...

->+[o]\"name1\"([python]#2,+名字)->+[o]\"text_fig1\"([python]#2,+图例)...
->+[o]\"fig_type1\"([python]#2,+类型)->+[o]\"fig_pos1\"([python]#2,+位置)...
->[python]#2\"name1=name
text_fig1=text_fig
fig_pos1=fig_pos
fig_type1=fig_type
state=True\"(Python,)


"(,)
的#39""(描述结构#38,收集信息#40)
收集信息#40"\"\"\"
P代码:...

\"\"\"

+收集信息(,_图片)->.(+收集信息,操作)...
->的(收集信息,P代码)...

->+[code]([python],P代码)->[python](Python,)

"(,)
的#41""(收集信息#40,P代码#42)
P代码#42"\"\"\"
记住\"Python\"
测试:...
+[P函数](,P代码)
name='%fig.1_*[t]'
print(re.split('\*?\[[bt]\]',name),name)
fig_info=''
a=re.match('(\*?)(\[[bt]\])?',fig_info)
print(fig_info,a.group(1),a.group(2))
print(fig_info,fig_a,fig_type,fig_pos)

if fig_a.group(2)=='[t]':
    fig_pos='t'
elif fig_a.group(2)=='[b]':
    fig_pos='b'
else:
    fig_pos='b'


\"\"\"
import re

state=True
name0=name_fig[1:]
name=re.split('\*?\[[bt]\]',name0)[0]
if name[-1]==\"*\":
    name=name[0:-1]
fig_info=name0[len(name):]

fig_a=re.match('(\*?)(\[[bt]\])?',fig_info)
if fig_a==None:
    fig_type='normal'
    fig_pos='[b]'
else:
    if fig_a.group(1)=='*':
        fig_type='wide'
    else:
        fig_type='normal'
    
    if fig_a.group(2)=='[t]':
        fig_pos='t'
    elif fig_a.group(2)=='[b]':
        fig_pos='b'
    else:
        fig_pos='b'


"(,)
的#43""(P代码#42,测试#44)
测试#44"\"\"\"
记住\"Python\"
+[P函数](,测试)
text_fig=''
text_f='Fig.X test'

\"\"\"
import re

fig_pat='Fig.[a-zA-Z_\.]* '
a=re.match(fig_pat,text_f)

if text_f[0:4]=='Fig.':
    i=a.span()[1]
    text_fig=text_f[i:]
elif text_f[0]=='(':
    text_fig+='\n'+text_f
else:
    state=False

print(text_fig)

"(,)
的#45""(描述结构#38,图例#46)
图例#46""(,)
的#47""(描述结构#38,收集图例#48)
收集图例#48"\"\"\"
P代码:...

\"\"\"

+收集图例(,_图片)->.(+收集图例,操作)...
->的(收集图例,P代码)...

->[]{
    []:->然后(_图片,_图例)->_图例->+[.]\"text_f\"([python],_图例)...
        ->+[code]([python],P代码)->[python](Python,)...
        ->+[.]([想],操作)->+[code]([想],收集图例)->[想](,_图例)...
        ->+删除(操作,然后)->+的(操作,+删除)...
        ->+删除(操作,_图例)->+的(操作,+删除),
    ->然后(_图片,_图例1)->_图例1->+结尾(,_图例1)->+的(操作,+结尾),
    ->[]
}


"(,)
的#49""(收集图例#48,P代码#50)
P代码#50"\"\"\"
记住\"Python\"
测试:...
+[P函数](,P代码)
保存:...

\"\"\"
import re

state=True

fig_pat='Fig\.[a-zA-Z0-9_\.\]\[]* '
a=re.match(fig_pat,text_f)

if a!=None:
    i=a.span()[1]
    text_fig=text_f[i:]
elif text_f[0]=='(':
    text_fig+='\n'+text_f
else:
    state=False

"(,)
的#51""(P代码#50,测试#52)
测试#52"\"\"\"
记住\"Python\"
+[P函数](,测试)
text_fig=''
text_f='Fig.X test'

\"\"\"
import re

fig_pat='Fig.[a-zA-Z_\.]* '
a=re.match(fig_pat,text_f)

if text_f[0:4]=='Fig.':
    i=a.span()[1]
    text_fig=text_f[i:]
elif text_f[0]=='(':
    text_fig+='\n'+text_f
else:
    state=False

print(text_fig)

"(,)
的#53""(P代码#50,保存#54)
保存#54"
name0=name_fig[1:]
name=re.split('\*?\[[bt]\]',name0)[0]
fig_info=name0[len(name):]

fig_a=re.match('(\*?)(\[[bt]\])?',fig_info)
if fig_a==None:
    fig_type='normal'
    fig_pos='[b]'
else:
    if fig_a.group(1)=='*':
        fig_type='wide'
    else:
        fig_type='normal'
    
    if fig_a.group(2)=='[t]':
        fig_pos='t'
    elif fig_a.group(2)=='[b]':
        fig_pos='b'
    else:
        fig_pos='b'
"(,)
的#55""(图片结构#34,P代码#56)
P代码#56""(,)
的#57""(生成章节#12,保存#58)
保存#58"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)


\"\"\"

+生成章节(_媒介,_章节)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,库)...

->+[code]([想],描述结构)->[想](,_章节)...
->结构([想],)...
->[]{
    []=>的(结构,章节)->章节->类型(章节,)...
    =>+的(_章节,+章节)->[m_text](章节,+章节)->+是(章节,+章节)->+[del](,+是)...
    ->+[修改标题](,+章节)->[m_text](类型,+[修改标题])...
    ->[]{
        []:->上一个(结构,)->+上一个(结构,章节#0)->章节#0->+[del](,+上一个)...
            ->+[上一个](结构,+章节)->+然后(章节#0,+章节)->+的(_章节,+然后)...
            ->+[消息窗口]\"!!\"(,章节#0)->+[显示](,+然后),
        ->+[上一个](结构,+章节)
    }
}...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)->是(_宾语,_节点)...
        ->+[做](_主语,_节点)->+[code](+[做],_条目)
}



"(,)
的#59""(生成章节#12,测试#60)
测试#60"+[设置结构](,测试)

有A, B和C

测试->的(测试,_A)->+[下一个A](测试,_A)->+下一个A(测试,_B)->+[显示](,_B)
测试->的(测试,_A)->+[下一个A](测试,_A)->+下一个A(测试,_B)->+[显示](,_A)

测试=>的(测试,_A)=>+[下一个A](测试,_A)->+下一个A(测试,_B)->+[显示](,_B)->+[del](,+下一个A)

测试=>的(测试,_A)=>+下一个A(测试,_B)->+[下一个A](测试,_A)->+[显示](,_B)->+[del](,+下一个A)


测试=>的(测试,_A)=>[]{
[]:->下一个A(测试,)->+下一个A(测试,_B)->_B->+[显示](,下一个A),
->+[下一个A](测试,_A)->+[显示](,_A)}

测试->+[下一个A](测试,C)=>的(测试,_A)=>[]{
[]:->+[下一个A](测试,_A)->+下一个A(测试,_B)->_B->+[显示](,_B),
->+[显示](,_A)}

测试->+[下一个A](测试,C)=>的(测试,_A)=>[]:
->下一个A(测试,)->+[下一个A](测试,_A)->+下一个A(测试,_B)->_B->+[显示](,_B),
->+[下一个A](测试,_A)->+[显示](,_A)


测试=>的(测试,_A)=>+[下一个A](测试,_A)...
->+下一个A(测试,_B)->+[del](,+下一个A)->[]:
->头部(测试,)->+[显示](,_A)->+[显示](,_B),
->+头部(测试,_A)


Nini, 打开结构语言Debug(文件)
测试=>的(测试,下一个A)=>+[del](,下一个A)"(,)
的#61""(测试#60,A#62)
A#62""(,)
的#63""(测试#60,B#64)
B#64""(,)
的#65""(测试#60,C#66)
C#66""(,)
的#67""(测试#60,头部#68)
头部#68""(测试#60,A#62)
的#69""(分析段落#8,描述结构#70)
描述结构#70"\"\"\"
P代码:...
P代码2:...
段落:...

\"\"\"

+描述结构(,_凭依)->+[del](,+描述结构)...
->的(描述结构,P代码)->的(描述结构,P代码2)->的(描述结构,段落)...
->+操作(+描述结构,)->+结构(+描述结构,)...

->+[.]\"text_paper\"([python],_凭依)...
->+[code]([python],P代码)->[python](Python,)...

->+[.]([想],+操作)->+[.]([想],+结构)->+[code]([想],段落)...
->+不终止->+[code]([python]#2,P代码2)...

=>[python]#2(Python,+不终止)->[想](,_凭依)->章节([想],)->类型([想],)...
=>+的(+结构,+章节)->[m_text](章节,+章节)...
->+类型(+章节,)->[m_text](类型,+类型)...

->[]{
    []:->[==]\"一级标题\"(,类型)->+生成章节(,+章节)->+的(+操作,+生成章节),
    ->[==]\"二级标题\"(,类型)->+生成章节(,+章节)->+的(+操作,+生成章节),
    ->[]
}


"(,)
的#71""(描述结构#70,P代码#72)
P代码#72"\"\"\"
记住\"Python\"

\"\"\"


list_sec=text_paper.split('\n')
list_i=0
state=True


"(,)
的#73""(描述结构#70,段落#74)
段落#74"\"\"\"
P代码:...
+[新建阅读窗口](,P代码)

\"\"\"

+段落(,_凭依)->.(+段落,操作)->.(+段落,结构)...
->的(段落,P代码)...

->+章节(+段落,)->+类型(+段落,)...
->+[o]\"text_sec\"([python],+章节)->+[o]\"type_sec\"([python],+类型)...
->+[code]([python],P代码)->[python](Python,)



"(,)
的#75""(段落#74,P代码#76)
P代码#76"\"\"\"


\"\"\"

state=True
while True:
    if list_i>=len(list_sec):
        type_sec='结束'
        break
    text_sec=list_sec[list_i]
    list_i+=1
    if text_sec!='':
        break

if type_sec=='结束':
    state=False
elif len(text_sec)>4 and text_sec[0:4]=='<h2>':
    text_sec=text_sec[4:]
    text_sec=text_sec[0:-5]
    type_sec='二级标题'
    while True:
        if list_i>=len(list_sec):
            break
        elif len(text_sec)>3 and list_sec[list_i][0:3]=='<h1':
            break
        elif len(text_sec)>3 and list_sec[list_i][0:3]=='<h2':
            break
        text_sec+=\"\n\"+list_sec[list_i]
        list_i+=1

elif len(text_sec)>4 and text_sec[0:4]=='<h1>':
    text_sec=text_sec[4:]
    text_sec=text_sec[0:-5]
    type_sec='一级标题'
else:
    type_sec='文本'


"(,)
的#77""(描述结构#70,P代码2#78)
P代码2#78"\"\"\"


\"\"\"

state=(list_i<len(list_sec))



"(,)
的#79""(降临规则#2,整理结构#80)
整理结构#80"\"\"\"


\"\"\"
+整理结构(,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

=>的(_凭依,二级标题)->二级标题=>[]:
->上一个(+整理结构,)->+上一个(+整理结构,_章节)->_章节->+[del](,+上一个)...
    ->+[上一个](+整理结构,二级标题)->+然后(_章节,二级标题)->+的(_凭依,+然后),
->+[上一个](+整理结构,二级标题)
"(,)
的#81""(文本结构化#0,召唤规则#82)
召唤规则#82"\"\"\"
Nini, 打开天书(文件)
Nini, 打开人体模型(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"文本结构化\"(,召唤星辰)...
    ->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
    ->+分析段落(_媒介,_凭依)->+的(操作,+分析段落)...
    ->+简化内容(_媒介,_凭依)->+的(操作,+简化内容)



"(,)

## end
#541, 229:
"""
Nini, 打开天书(文件)
Nini, 打开人体模型(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"文本结构化"(,召唤星辰)...
    ->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
    ->+分析段落(_媒介,_凭依)->+的(操作,+分析段落)...
    ->+简化内容(_媒介,_凭依)->+的(操作,+简化内容)




## end
#543, 10814:
文本转换_docx#0"

召唤规则:...
降临规则:...




"(,)
的#1""(文本转换_docx#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"结构文本转docx\"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}
"(,)
的#3""(文本转换_docx#0,降临规则#4)
降临规则#4"有什么

引用文章:...
章节内容:...
整理内容:...
整理图片:...
+[新建阅读窗口](,章节内容)
将'引用文章'的\"作者\"替换为\"文章\"


"(,)
的#5""(降临规则#4,章节内容#6)
章节内容#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+章节内容(_章节结构,_文本)->+[del](,+章节内容)...
->的(章节内容,描述结构)->的(章节内容,库)...

->+[code]([想],描述结构)->[想](_章节结构,_文本)...
->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)->+[做](_主语,_宾语)->+[code](+[做],_条目)
}




"(,)
的#7""(章节内容#6,描述结构#8)
描述结构#8"\"\"\"


\"\"\"
+描述结构(_章节结构,_文本)->+操作(+描述结构,)...

->[]{
    []:->[is](_章节结构,一级标题)->一级标题(,)...
        ->+生成标题(一级标题,_文本)->+的(+操作,+生成标题),
    ->[is](_章节结构,文本)->文本(,)...
        ->+生成作者(文本,_文本)->+的(+操作,+生成作者),
    ->[is](_章节结构,_章节)->_章节->的(_章节,题目)->[==]\"Abstract\"(,题目)...
        ->+生成概述(_章节,_文本)->+的(+操作,+生成概述),
    ->[is](_章节结构,二级标题)->二级标题(,)...
        ->+生成章节(二级标题,_文本)->+的(+操作,+生成章节)
}


"(,)
的#9""(章节内容#6,库#10)
库#10"

生成标题:...
生成作者:...
生成概述:...
生成章节:...

将'生成作者'的\"章节\"替换为\"作者\"

"(,)
的#11""(库#10,生成标题#12)
生成标题#12"\"\"\"
L模板:...

\"\"\"

+生成标题(一级标题,_文本)->+[del](,+生成标题)...
->的(生成标题,L模板)...

->+的(_文本,+标题)...

->的(一级标题,题目)...
->+[模板文本](L模板,+标题)->+[.](+[模板文本],题目)


"(,)
的#13""(生成标题#12,L模板#14)
L模板#14"document.add_heading('%题目', 0)
"(,)
的#15""(库#10,生成概述#16)
生成概述#16"\"\"\"
L模板:...

\"\"\"

+生成概述(二级标题,_文本)->+[del](,+生成概述)...
->的(生成概述,L模板)...

->+的(_文本,+概述)...

->+[临时文本]->[]{
    []=>的(二级标题,文本)->文本=>+[增加内容2](文本,+[临时文本])
}...

->+[模板文本](L模板,+概述)->+[.](+[模板文本],+[临时文本])


"(,)
的#17""(生成概述#16,L模板#18)
L模板#18"p = document.add_paragraph('%[临时文本]\n')
"(,)
的#19""(库#10,生成章节#20)
生成章节#20"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成章节(_章节,_文本)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,库)...
->的(生成章节,L模板)...

->+的(_文本,+章节)...
->+[code]([想],描述结构)->[想](_章节,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)

"(,)
的#21""(生成章节#20,描述结构#22)
描述结构#22"\"\"\"


\"\"\"

+描述结构(_章节,)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[]
}

"(,)
的#23""(生成章节#20,库#24)
库#24"

文本结构:...
公式结构:...
图片结构:...




"(,)
的#25""(库#24,文本结构#26)
文本结构#26"\"\"\"
P代码:...
L模板:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,L模板)->的(文本结构,P代码)...

->+[python](Python,+[临时文本]#内容)->+[code](+[python],P代码)...
->+[.]\"text_pt\"(+[python],_节点)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)

"(,)
的#27""(文本结构#26,L模板#28)
L模板#28"p = document.add_paragraph(\"\"\"%内容\n\"\"\")
"(,)
的#29""(文本结构#26,P代码#30)
P代码#30"\"\"\"
text_0='\\a'
print(text_0.replace('\\','\\\\'))
print(text_0)

\"\"\"

ans=text_pt.replace('\\','\\\\')

"(,)
的#31""(库#24,公式结构#32)
公式结构#32"\"\"\"
P代码:...
L模板:...
保存L模板:...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,P代码)...

->的(_节点,名字)->的(_节点,LaTeX)...

->+[python](Python,+[临时文本]#LaTeX)->+[code](+[python],P代码)...
->+[.]\"text_pt\"(+[python],LaTeX)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.]\"LaTeX\"(+[模板文本],+[临时文本]#LaTeX)



"(,)
的#33""(公式结构#32,L模板#34)
L模板#34"p = document.add_paragraph(\"\"\"%LaTeX\n\"\"\")

"(,)
的#35""(公式结构#32,保存L模板#36)
保存L模板#36"
omml_xml = '<p xmlns:m=\"http://schemas.openxmlformats.org/officeDocument/2006/math\"><m:oMathPara><m:oMath><m:r><m:t>%LaTeX</m:t></m:r></m:oMath></m:oMathPara></p>'
omml_el = parse_xml(omml_xml)[0]
p._p.append(omml_el)
p = document.add_paragraph('\n')

"(,)
的#37""(公式结构#32,P代码#38)
P代码#38"\"\"\"
text_0='\\a'
print(text_0.replace('\\','\\\\'))
print(text_0)

\"\"\"

ans=text_pt.replace('\\','\\\\')

"(,)
的#39""(库#24,图片结构#40)
图片结构#40"\"\"\"
P代码:...
L模板:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,P代码)...

->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...
->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)...
->+[.](+[模板文本],目标地址)
"(,)
的#41""(图片结构#40,L模板#42)
L模板#42"document.add_picture('%目标地址', width=Inches(4.25))
p = document.add_paragraph(\"\"\"%图例\n\"\"\")
"(,)
的#43""(图片结构#40,P代码#44)
P代码#44"\"\"\"
记住\"Python\"
print(source_dir.replace('\\','\\\\'))

\"\"\"

fig_type=source_dir.split('.')[-1]
# ans='\\'+fig_name+'.'+fig_type
ans=source_dir.replace('\\','\\\\')

"(,)
的#45""(生成章节#20,L模板#46)
L模板#46"document.add_heading('%题目', level=1)
%内容

"(,)
的#47""(库#10,生成作者#48)
生成作者#48"\"\"\"
描述结构:...
库:...

\"\"\"

+生成作者(_作者,_文本)->+[del](,+生成作者)...
->的(生成作者,描述结构)->的(生成作者,库)...
->的(库,通讯作者)->的(库,普通作者)...

->+的(_文本,+作者)...
->+[code]([想],描述结构)->[想](_作者,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,作者)->作者(类型,)->类型(,)...
    =>+[获取作者信息](,+作者A)->[m_text](作者,+[获取作者信息])...
    ->+[做](+作者A,+作者)...
    ->+[删除结构](,+作者A)->+[del](,+作者A)->[]:
        ->[==]\"通讯\"(,类型)->+[code](+[做],通讯作者),
        ->+[code](+[做],普通作者)
}


"(,)
的#49""(生成作者#48,库#50)
库#50"

通讯作者:...
普通作者:...
将'普通作者'的\"通讯\"替换为\"普通\"
"(,)
的#51""(库#50,通讯作者#52)
通讯作者#52"\"\"\"
L模板:...

\"\"\"
+通讯作者(_A,_输出)->+[del](,+通讯作者)...
->的(通讯作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)->+[.](+[模板文本],邮箱)

"(,)
的#53""(通讯作者#52,L模板#54)
L模板#54"%名 %姓*, "(,)
的#55""(库#50,普通作者#56)
普通作者#56"\"\"\"
L模板:...

\"\"\"
+普通作者(_A,_输出)->+[del](,+普通作者)...
->的(普通作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)

"(,)
的#57""(普通作者#56,L模板#58)
L模板#58"%名 %姓, "(,)
的#59""(生成作者#48,描述结构#60)
描述结构#60"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_作者,)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码2)...

->+[.]\"text_au\"([python],_作者)...
->+[code]([python],P代码)->[python](Python,)...
->+[code]([python]#2,P代码2)...

->+不终止=>[python]\"state=(list_i<len(list_au))\"(Python,+不终止)...
=>+的(+操作,+作者)->+作者(+类型,)...
->+[o]\"type_name\"([python]#2,+类型)->[python]#2(Python,+作者)


"(,)
的#61""(描述结构#60,P代码#62)
P代码#62"\"\"\"
记住\"Python\"

\"\"\"

state=True
list_au=text_au.split(', ')
list_i=0

"(,)
的#63""(描述结构#60,P代码2#64)
P代码2#64"\"\"\"


\"\"\"

name=list_au[list_i]
list_i+=1
if name[-1]=='*':
    name=name[0:-1]
    type_name='通讯'
else:
    type_name=\"普通\"
ans=name

"(,)
的#65""(降临规则#4,整理内容#66)
整理内容#66"\"\"\"
P代码:...
L模板:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]#章节->[]{
    []=>的(_内容,章节)->章节=>+[增加内容](章节,+[临时文本]#章节)
}...
->+[python](Python,+[临时文本]#章节)->+[code](+[python],P代码)...
->+[s]\"file_text\"(+[python],+[临时文本]#章节)...

->+[模板文本](L模板,_内容)...
->+[.]\"章节\"(+[模板文本],+[临时文本]#章节)...
->[]{
    []:->的(_内容,标题)->标题->+[.](+[模板文本],标题),->[]
}...
->[]{
    []:->的(_内容,作者)->作者->+[.](+[模板文本],作者),->[]
}...
->[]{
    []:->的(_内容,概述)->概述->+[.](+[模板文本],概述),->[]
}...
->[]{
    []:->的(_内容,引用)->引用->+[.](+[模板文本],引用),->[]
}


"(,)
的#67""(整理内容#66,L模板#68)
L模板#68"
from docx import Document
from docx.shared import Inches
from docx.oxml import parse_xml

document = Document()

%标题
p = document.add_paragraph('%作者\n')

%概述
%章节


document.add_page_break()
document.save('%地址')




"(,)
的#69""(整理内容#66,P代码#70)
P代码#70"\"\"\"
print(\"112%13%1\".replace('%','\\%'))

\"\"\"

ans=file_text.replace('%','\\%')


"(,)
的#71""(降临规则#4,引用文章#72)
引用文章#72"\"\"\"
描述结构:...
设置引用:...
+[新建阅读窗口](,描述结构)

\"\"\"

+引用文章(_文章,_文本)->+[del](,+引用文章)...
->的(引用文章,描述结构)->的(引用文章,设置引用)...

->+的(_文本,+引用)...
->+[code]([想],描述结构)->[想](_文章,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,文章)->文章(_节点,)->_节点(,)...
    =>+[获取论文信息](+[临时文本],+文章A)->[m_text](文章,+[临时文本])...
        ->[标题](_节点,)->[m_text]([标题],+文章A)...
        ->+[做](+文章A,+引用)->+[code](+[做],设置引用)...
        ->+[删除结构](,+文章A)->+[del](,+文章A)
}


"(,)
的#73""(引用文章#72,描述结构#74)
描述结构#74"\"\"\"
P代码:...

\"\"\"

+描述结构(_文章,)->+操作(+描述结构,)...
->的(描述结构,P代码)...

=>的(_文章,_节点)->引用(_节点,)...
=>+的(+操作,+文章)->+文章(_节点,)...
->+[.]\"paper_link\"([python],_节点)->+[code]([python],P代码)...
->[python](Python,+文章)



"(,)
的#75""(描述结构#74,P代码#76)
P代码#76"\"\"\"
记住\"Python\"

\"\"\"

ans=paper_link.split('#')[0]
state=True
"(,)
的#77""(引用文章#72,设置引用#78)
设置引用#78"\"\"\"
P代码:...
模板库:...

\"\"\"

+设置引用(文章A,引用)->+[del](,+设置引用)...
->的(设置引用,模板库)->的(设置引用,P代码)...

->的(文章A,类型)->的(文章A,作者)...
->+[python](Python,作者)->+[code](+[python],P代码)...
->+[s]\"text_aus\"(+[python],作者)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,引用)...
->[]{
    []:->[==]\"ARTICLE\"(,类型)->的(模板库,文章#0)->+[code](+[模板文本],文章#0),
    ->[==]\"PROCEEDING\"(,类型)->的(模板库,会议#0)->+[code](+[模板文本],会议#0),
    ->的(模板库,文章#1)->+[code](+[模板文本],文章#1)
}...

->+[.]\"引用名\"(+[模板文本],文章A)...
->[]{
    []=>的(文章A,_性质)->_性质=>+[.](+[模板文本],_性质)
}



"(,)
的#79""(设置引用#78,模板库#80)
模板库#80"

文章:...
会议:...


"(,)
的#81""(模板库#80,文章#82)
文章#82"
@ARTICLE{%引用名,
   author       = \"%作者\",
   title        = \"%标题\",
   journal      = \"%期刊\",
   volume       = \"%编号\", 
   pages        = \"%页数\",
   year         = \"%年份\",
}
"(,)
的#83""(模板库#80,会议#84)
会议#84"
@PROCEEDINGS{%引用名,
   title = \"%标题\",
   number = \"%编号\",
   editor = \"\", 

   series = \"All ACM Conferences\",
   month = \"\",
   year = \"%年份\",
   address = \"%地址\",
   organization = \"%组织\",
   publisher = \"%会议\",
}
"(,)
的#85""(设置引用#78,P代码#86)
P代码#86"\"\"\"
记住\"Python\"

\"\"\"

# print(text_aus)
# print(text_aus.split(', '))
# print(' and '.join(text_aus.split(', ')))
ans=' and '.join(text_aus.split(', '))


"(,)
的#87""(降临规则#4,整理图片#88)
整理图片#88"\"\"\"
P代码:...
P代码2:...

\"\"\"

+整理图片(_媒介,_凭依)->+[del](,+整理图片)...
->的(整理图片,P代码)->的(整理图片,P代码2)...

->的#0(_凭依,地址)->+[标题](_凭依,)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"file_name\"(+[python],+[标题])->+[.]\"folder_dir\"(+[python],地址)...

->+[模板文本](_凭依,_凭依)->+[.]\"地址\"(+[模板文本],+[临时文本])...
->+[P函数](,_凭依)...

->+[del](,的#0)...
->+[删除结构](,_凭依)...
->+[有](_凭依,地址)




"(,)
的#89""(整理图片#88,P代码#90)
P代码#90"\"\"\"


\"\"\"


output_dir=\"%s\\text.docx\"%(folder_dir)
ans=output_dir.replace('\\','\\\\')
"(,)
的#91""(整理图片#88,P代码2#92)
P代码2#92"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))

\"\"\"

import shutil
# print(src_dir,tar_dir)
# ans=\"%s\%s.tex\"%(folder_dir,file_name)
shutil.copy(src_dir,\"%s\\%s\"%(folder_dir,tar_dir))

"(,)

## end
#545, 356:
"""
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"结构文本转docx"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}

## end
#547, 20798:
液体运动#0"

召唤规则:...
降临规则:...


"(,)
的#1""(液体运动#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成液体动画\"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+相互作用(_媒介,_凭依)->+的(操作,+相互作用)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)
的#3""(液体运动#0,降临规则#4)
降临规则#4"Nini, 打开结构化文本(文件)

设置变量:...
单体代码:...
相互作用:...
整理代码:...
将条目\"设置变量\"复制为条目\"单体代码\"
+[新建阅读窗口](,相互作用)

"(,)
的#5""(降临规则#4,单体代码#6)
单体代码#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+单体代码(_场景,_代码)->+[del](,+单体代码)...
->的(单体代码,描述结构)->的(单体代码,库)...

->[]{
    []:->的(_代码,代码结构)->代码结构,
    ->+的(_代码,+代码结构)...
        ->+的(+代码结构,+初始化代码)->+的(+代码结构,+画图代码)...
        ->+的(+代码结构,+运动代码)->+的(+代码结构,+受力代码)->+的(+代码结构,+作用代码)...
        ->+的(+代码结构,+动画代码)
}...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体,_代码)->+[code](+[做],_条目)->+[.](+[做],_场景)
}


"(,)
的#7""(单体代码#6,描述结构#8)
描述结构#8"\"\"\"


\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体->在(_物体,空间点)...
        ->[]{的(_物体,宽度)->宽度}...
    =>[]:
        ->[]{[==]\"液体\"(,_物体)}...
            ->+运动液体(,_物体)->+的(+操作,+运动液体),
        ->+背景物体(,_物体)->+的(+操作,+背景物体)
}


"(,)
的#9""(单体代码#6,库#10)
库#10"

运动物体:...
运动刚体:...
运动液体:...
背景物体:...
将条目\"运动物体\"复制为条目\"运动液体\"
+[新建阅读窗口](,运动液体)


"(,)
的#11""(库#10,运动刚体#12)
运动刚体#12"\"\"\"
M代码:...
初始化模板:...
画图模板:...
运动模板:...
受力模板:...
动画模板:...

测试代码:...
+[新建阅读窗口](,测试代码)

\"\"\"

+运动刚体(_物体,_代码)->+[del](,+运动刚体)...
->的(运动刚体,M代码)...
->的(运动刚体,初始化模板)->的(运动刚体,画图模板)...
->的(运动刚体,运动模板)->的(运动刚体,受力模板)->的(运动刚体,动画模板)...

->.(+运动刚体,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)...
->的(代码结构,初始化代码)->的(代码结构,画图代码)...
->的(代码结构,运动代码)->的(代码结构,受力代码)->的(代码结构,动画代码)...

->的(_物体,x)->的(_物体,y)...
->在(_物体,空间点)->朝向(_物体,方向)...
->的(_物体,速度)->的(_物体,角速度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...

->+[模板文本](初始化模板,+[增加内容2]#1)->+[增加内容2]#1(,初始化代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],速度)->+[.](+[模板文本],角速度)...
->+[o](+[matlab],+xs)->+[.](+[模板文本],+xs)->+[del](,+xs)...
->+[o](+[matlab],+ys)->+[.](+[模板文本],+ys)->+[del](,+ys)...

->+[模板文本](画图模板,+[增加内容2]#2)->+[增加内容2]#2(,画图代码)->+[.](+[模板文本],变量)...
->+[模板文本](运动模板,+[增加内容2]#3)->+[增加内容2]#3(,运动代码)->+[.](+[模板文本],变量)...
->+[模板文本](动画模板,+[增加内容2]#5)->+[增加内容2]#5(,动画代码)->+[.](+[模板文本],变量)...

->+[模板文本](受力模板,+[增加内容2]#4)->+[增加内容2]#4(,受力代码)->+[.](+[模板文本],变量)...
->[]{
    []:->的(_场景,重力)->重力->+[.]\"重力\"(+[模板文本],重力),
    ->+[.]\"重力\"(+[模板文本],+[临时文本]#g1)->+[临时文本]#g1\"0,0\"
}


"(,)
的#13""(运动刚体#12,M代码#14)
M代码#14"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#15""(运动刚体#12,初始化模板#16)
初始化模板#16"xs_%变量=[%xs];
ys_%变量=[%ys];
pt_%变量=[%空间点];
pt_c_%变量=[mean(xs_%变量),mean(ys_%变量)];
an_%变量=%方向;
v_%变量=[%速度];
omega_%变量=%角速度;
an_%变量=0;

xs_bd_%变量=[xs_%变量,xs_%变量(1)];
ys_bd_%变量=[ys_%变量,ys_%变量(1)];
xs_0_%变量=xs_%变量-pt_c_%变量(1);
ys_0_%变量=ys_%变量-pt_c_%变量(2);

"(,)
的#17""(运动刚体#12,画图模板#18)
画图模板#18"h1_%变量=patch(xs_%变量,ys_%变量,[1,1,1]);
h2_%变量=plot(pt_c_%变量(1),pt_c_%变量(2),'r-');
"(,)
的#19""(运动刚体#12,运动模板#20)
运动模板#20"pt_c_%变量=pt_c_%变量+v_%变量*dt;
an_%变量=an_%变量+omega_%变量*dt;
xs_%变量=xs_0_%变量*cos(an_%变量)-ys_0_%变量*sin(an_%变量)+pt_c_%变量(1);
ys_%变量=ys_0_%变量*cos(an_%变量)+xs_0_%变量*sin(an_%变量)+pt_c_%变量(2);

"(,)
的#21""(运动刚体#12,受力模板#22)
受力模板#22"v_%变量=v_%变量+[%重力]*dt;
"(,)
的#23""(运动刚体#12,动画模板#24)
动画模板#24"h1_%变量.XData=xs_%变量;
h1_%变量.YData=ys_%变量;
h2_%变量.XData(end+1)=pt_c_%变量(1);
h2_%变量.YData(end+1)=pt_c_%变量(2);

"(,)
的#25""(运动刚体#12,测试代码#26)
测试代码#26"%{
+[M函数](,测试代码)
%}

dt=0.1;

pt=[0,0];
an=10;
v0=10;
v=v0*[cosd(an),sind(an)];

h1=plot(pt(1),pt(2),'r*');
h2=plot(pt(1),pt(2),'r-');

for i=1:50
pt=pt+v*dt;

v=v+[0,-5]*dt;

h1.XData=pt(1);
h1.YData=pt(2);
h2.XData(end+1)=pt(1);
h2.YData(end+1)=pt(2);

pause(0.1)
end



%{
delete(h1)
delete(h2)
+[M函数](,测试代码)
%}"(,)
的#27""(库#10,背景物体#28)
背景物体#28"\"\"\"
M代码:...
M模板:...
受力模板:...
+[新建阅读窗口](,受力模板)

测试代码:...

\"\"\"

+背景物体(_物体,_代码)->+[del](,+背景物体)...
->的(背景物体,M模板)->的(背景物体,M代码)...
->的(背景物体,受力模板)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)->的(代码结构,画图代码)->的(代码结构,受力代码)...

->在(_物体,空间点)->朝向(_物体,方向)...
->的(_物体,长度)->的(_物体,宽度)...
->的(_物体,x)->的(_物体,y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...
->+[.](+[matlab],x)->+[.](+[matlab],y)...

->+[模板文本](M模板,+[增加内容2])->+[增加内容2](,画图代码)...
->+[.](+[模板文本],变量)...
->+[.](+[模板文本],+xs)->+[o](+[matlab],+xs)->+[del](,+xs)...
->+[.](+[模板文本],+ys)->+[o](+[matlab],+ys)->+[del](,+ys)...

->+[模板文本](受力模板,+[增加内容2]#4)->+[增加内容2]#4(,受力代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],宽度)->+[.](+[模板文本],长度)



"(,)
的#29""(背景物体#28,M代码#30)
M代码#30"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#31""(背景物体#28,M模板#32)
M模板#32"xs_%变量=[%xs];
ys_%变量=[%ys];
patch([%xs],[%ys],[1,1,1]);
"(,)
的#33""(背景物体#28,作用模板#34)
作用模板#34""(,)
的#35""(背景物体#28,受力模板#36)
受力模板#36"
an_0=%方向;
pt_0=[%空间点];
L=%长度;
W=%宽度;

f_x=[cosd(an_0),sind(an_0)];
f_y=[cosd(an_0+90),sind(an_0+90)];

x_f=(x-pt_0(1))*f_x(1)+(y-pt_0(2))*f_x(2);
y_f=(x-pt_0(1))*f_y(1)+(y-pt_0(2))*f_y(2);
v_xf=v_x*f_x(1)+v_y*f_x(2);
v_yf=v_x*f_y(1)+v_y*f_y(2);

v_xf(x_f>0 & y_f>-L/2 & y_f<L/2 & v_xf>0)=-0.1*v_xf(x_f>0 & y_f>-L/2 & y_f<L/2 & v_xf>0);
x_f(x_f>0 & y_f>-L/2 & y_f<L/2)=0;

x=x_f*f_x(1)+y_f*f_y(1)+pt_0(1);
y=x_f*f_x(2)+y_f*f_y(2)+pt_0(2);
v_x=v_xf*f_x(1)+v_yf*f_y(1);
v_y=v_xf*f_x(2)+v_yf*f_y(2);

"(,)
的#37""(背景物体#28,测试代码#38)
测试代码#38"%{
+[M函数](,测试代码)
%}

dt=0.3;

h=0.4;
k=0.1;
k_n=1;
rho_0=8;

x=[];
y=[];
v_x=[];
v_y=[];

x_0_bg_1=rand(1,30)*1.0;
y_0_bg_1=(rand(1,30)-1/2)*1.0;

pt_bg_1=[-1,1];
x_bg_1=cosd(90)*x_0_bg_1-sind(90)*y_0_bg_1+pt_bg_1(1);
y_bg_1=cosd(90)*y_0_bg_1+sind(90)*x_0_bg_1+pt_bg_1(2);

v0_bg_1=[0,0];
v_x_bg_1=v0_bg_1(1)*ones(1,30);
v_y_bg_1=v0_bg_1(2)*ones(1,30);

x=[x,x_bg_1];
y=[y,y_bg_1];
v_x=[v_x,v_x_bg_1];
v_y=[v_y,v_y_bg_1];

x_0_bg_2=rand(1,30)*1.0;
y_0_bg_2=(rand(1,30)-1/2)*1.0;

pt_bg_2=[1,1];
x_bg_2=cosd(90)*x_0_bg_2-sind(90)*y_0_bg_2+pt_bg_2(1);
y_bg_2=cosd(90)*y_0_bg_2+sind(90)*x_0_bg_2+pt_bg_2(2);

v0_bg_2=[0,0];
v_x_bg_2=v0_bg_2(1)*ones(1,30);
v_y_bg_2=v0_bg_2(2)*ones(1,30);

x=[x,x_bg_2];
y=[y,y_bg_2];
v_x=[v_x,v_x_bg_2];
v_y=[v_y,v_y_bg_2];





N=numel(x);

rho=zeros(1,N);
rho_n=zeros(1,N);
D=zeros(1,N);

% map
axis_=[-4.999238475781956, 5.004474197713142, -1.9502541503500233, 2.563037809616689, 0.09026583919933424];
x_grid=axis_(1):axis_(5):axis_(2);
y_grid=axis_(3):axis_(5):axis_(4);
[X,Y]=meshgrid(x_grid,y_grid);
In_0=zeros(size(X));

clf
hold on
h_gph=plot(x,y,'r.');
h_map=image(x_grid,y_grid,In_0);
axis equal
axis(axis_(1:4))
rectangle(\"Position\",[axis_(1),axis_(2),diff(axis_(1:2)),diff(axis_(3:4))])

xs_bg_3=[-4.999238475781956, 4.999238475781956, 5.004474197713141, -4.994002753850771];
ys_bg_3=[-1.0872620321864175, -0.9127379678135824, -1.2126922763604997, -1.3872163407333349];
patch([-4.999238475781956, 4.999238475781956, 5.004474197713141, -4.994002753850771],[-1.0872620321864175, -0.9127379678135824, -1.2126922763604997, -1.3872163407333349],[1,1,1]);


for i=1:1000
In=In_0;
x=x+v_x*dt;
y=y+v_y*dt;

for j=1:length(x)
% for j=1
r=sqrt((x-x(j)).^2+(y-y(j)).^2);
q=r/h;
rho=(1-q).^2;
rho_n=(1-q).^3;

P=k*(sum(rho(q<1))-rho_0);
P_n=k_n*sum(rho_n(q<1));

D_x=dt^2*(P*(1-q)+P_n*(1-q).^2).*(x-x(j))./r;
D_y=dt^2*(P*(1-q)+P_n*(1-q).^2).*(y-y(j))./r;
D_x(isnan(D_x))=0;
D_y(isnan(D_y))=0;

x(q<1)=x(q<1)+D_x(q<1)/2;
y(q<1)=y(q<1)+D_y(q<1)/2;
x(j)=x(j)-sum(D_x(q<1)/2);
y(j)=y(j)-sum(D_y(q<1)/2);

In=In+exp(-((X-x(j)).^2+(Y-y(j)).^2)./2/h^2);
% In=In+(1-sqrt((X-x(j)).^2+(Y-y(j)).^2)/h);

end

v_y=v_y-0.01*dt;


an_0=-89;
pt_0=[0,-1];

f_x=[cosd(an_0),sind(an_0)];
f_y=[cosd(an_0+90),sind(an_0+90)];

x_f=(x-pt_0(1))*f_x(1)+(y-pt_0(2))*f_x(2);
y_f=(x-pt_0(1))*f_y(1)+(y-pt_0(2))*f_y(2);
v_xf=v_x*f_x(1)+v_y*f_x(2);
v_yf=v_x*f_y(1)+v_y*f_y(2);

v_xf(x_f>0 & v_xf>0)=-0.1*v_xf(x_f>0 & v_xf>0);
x_f(x_f>0)=0;

x=x_f*f_x(1)+y_f*f_y(1)+pt_0(1);
y=x_f*f_x(2)+y_f*f_y(2)+pt_0(2);
v_x=v_xf*f_x(1)+v_yf*f_y(1);
v_y=v_xf*f_x(2)+v_yf*f_y(2);


h_gph.XData=x;
h_gph.YData=y;

In=In/(max(max(In)))*255;
In_s=In>200;
h_map.CData=In_s*255;
% h_map.CData=In;
pause(0.01)
end


%{
+[M函数](,代码)
%}"(,)
的#39""(库#10,运动液体#40)
运动液体#40"\"\"\"
M代码:...
初始化模板:...
画图模板:...
运动模板:...
受力模板:...
动画模板:...

测试代码:...
+[新建阅读窗口](,初始化模板)

->+[模板文本](画图模板,+[增加内容2]#2)->+[增加内容2]#2(,画图代码)->+[.](+[模板文本],变量)...


\"\"\"

+运动液体(_物体,_代码)->+[del](,+运动液体)...
->的(运动液体,M代码)...
->的(运动液体,初始化模板)->的(运动液体,画图模板)...
->的(运动液体,运动模板)->的(运动液体,受力模板)->的(运动液体,动画模板)...

->.(+运动液体,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)...
->的(代码结构,初始化代码)->的(代码结构,画图代码)...
->的(代码结构,运动代码)->的(代码结构,受力代码)->的(代码结构,动画代码)...

->的(_物体,宽度)->的(_物体,长度)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...

->+[模板文本](初始化模板,+[增加内容2]#1)->+[增加内容2]#1(,初始化代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],长度)->+[.](+[模板文本],宽度)...
->[]{
    []:->的(_物体,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...

->+[模板文本](运动模板,+[增加内容2]#3)->+[增加内容2]#3(,运动代码)->+[.](+[模板文本],变量)...
->+[模板文本](动画模板,+[增加内容2]#5)->+[增加内容2]#5(,动画代码)->+[.](+[模板文本],变量)


"(,)
的#41""(运动液体#40,测试代码#42)
测试代码#42"%{
+[M函数](,测试代码)
%}

dt=0.1;

pt=[0,0];
an=10;
v0=10;
v=v0*[cosd(an),sind(an)];

h1=plot(pt(1),pt(2),'r*');
h2=plot(pt(1),pt(2),'r-');

for i=1:50
pt=pt+v*dt;

v=v+[0,-5]*dt;

h1.XData=pt(1);
h1.YData=pt(2);
h2.XData(end+1)=pt(1);
h2.YData(end+1)=pt(2);

pause(0.1)
end



%{
delete(h1)
delete(h2)
+[M函数](,测试代码)
%}"(,)
的#43""(运动液体#40,动画模板#44)
动画模板#44"h1_%变量.XData=pt_%变量(1);
h1_%变量.YData=pt_%变量(2);
h2_%变量.XData(end+1)=pt_%变量(1);
h2_%变量.YData(end+1)=pt_%变量(2);

"(,)
的#45""(运动液体#40,受力模板#46)
受力模板#46""(,)
的#47""(运动液体#40,运动模板#48)
运动模板#48"pt_%变量=pt_%变量+v_%变量*dt;
"(,)
的#49""(运动液体#40,画图模板#50)
画图模板#50"h1_%变量=plot(pt_%变量(1),pt_%变量(2),'r*');
h2_%变量=plot(pt_%变量(1),pt_%变量(2),'r-');
"(,)
的#51""(运动液体#40,初始化模板#52)
初始化模板#52"x_0_%变量=rand(1,30)*%长度;
y_0_%变量=(rand(1,30)-1/2)*%宽度;

pt_%变量=[%空间点];
x_%变量=cosd(%方向)*x_0_%变量-sind(%方向)*y_0_%变量+pt_%变量(1);
y_%变量=cosd(%方向)*y_0_%变量+sind(%方向)*x_0_%变量+pt_%变量(2);

v0_%变量=[%速度];
v_x_%变量=v0_%变量(1)*ones(1,30);
v_y_%变量=v0_%变量(2)*ones(1,30);

x=[x,x_%变量];
y=[y,y_%变量];
v_x=[v_x,v_x_%变量];
v_y=[v_y,v_y_%变量];

"(,)
的#53""(运动液体#40,M代码#54)
M代码#54"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#55""(库#10,运动物体#56)
运动物体#56"\"\"\"
M代码:...
初始化模板:...
画图模板:...
运动模板:...
受力模板:...
动画模板:...

测试代码:...
+[新建阅读窗口](,测试代码)

\"\"\"

+运动物体(_物体,_代码)->+[del](,+运动物体)...
->的(运动物体,M代码)...
->的(运动物体,初始化模板)->的(运动物体,画图模板)...
->的(运动物体,运动模板)->的(运动物体,受力模板)->的(运动物体,动画模板)...

->.(+运动刚体,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)...
->的(代码结构,初始化代码)->的(代码结构,画图代码)...
->的(代码结构,运动代码)->的(代码结构,受力代码)->的(代码结构,动画代码)...

->在(_物体,空间点)->朝向(_物体,方向)->的(_物体,速度)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt\"(+[matlab],空间点)->+[.]\"an\"(+[matlab],方向)...

->+[模板文本](初始化模板,+[增加内容2]#1)->+[增加内容2]#1(,初始化代码)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],速度)...

->+[模板文本](画图模板,+[增加内容2]#2)->+[增加内容2]#2(,画图代码)->+[.](+[模板文本],变量)...
->+[模板文本](运动模板,+[增加内容2]#3)->+[增加内容2]#3(,运动代码)->+[.](+[模板文本],变量)...
->+[模板文本](动画模板,+[增加内容2]#5)->+[增加内容2]#5(,动画代码)->+[.](+[模板文本],变量)...

->+[模板文本](受力模板,+[增加内容2]#4)->+[增加内容2]#4(,受力代码)->+[.](+[模板文本],变量)...
->[]{
    []:->的(_场景,重力)->重力->+[.](+[模板文本],重力),
    ->+[.]\"重力\"(+[模板文本],+[临时文本]#g1)->+[临时文本]#g1\"0,0\"
}


"(,)
的#57""(运动物体#56,M代码#58)
M代码#58"%{

%}


xs=x*cosd(an)-y*sind(an)+pt(1);
ys=y*cosd(an)+x*sind(an)+pt(2);
% patch(xs,ys,[1,1,1])


"(,)
的#59""(运动物体#56,初始化模板#60)
初始化模板#60"pt_%变量=[%空间点];
an_%变量=%方向;
v0_%变量=%速度;
v_%变量=v0_%变量*[cosd(an_%变量),sind(an_%变量)];
"(,)
的#61""(运动物体#56,画图模板#62)
画图模板#62"h1_%变量=plot(pt_%变量(1),pt_%变量(2),'r*');
h2_%变量=plot(pt_%变量(1),pt_%变量(2),'r-');
"(,)
的#63""(运动物体#56,运动模板#64)
运动模板#64"pt_%变量=pt_%变量+v_%变量*dt;
"(,)
的#65""(运动物体#56,受力模板#66)
受力模板#66"v_%变量=v_%变量+[%重力]*dt;
"(,)
的#67""(运动物体#56,动画模板#68)
动画模板#68"h1_%变量.XData=pt_%变量(1);
h1_%变量.YData=pt_%变量(2);
h2_%变量.XData(end+1)=pt_%变量(1);
h2_%变量.YData(end+1)=pt_%变量(2);

"(,)
的#69""(运动物体#56,测试代码#70)
测试代码#70"%{
+[M函数](,测试代码)
%}

dt=0.1;

pt=[0,0];
an=10;
v0=10;
v=v0*[cosd(an),sind(an)];

h1=plot(pt(1),pt(2),'r*');
h2=plot(pt(1),pt(2),'r-');

for i=1:50
pt=pt+v*dt;

v=v+[0,-5]*dt;

h1.XData=pt(1);
h1.YData=pt(2);
h2.XData(end+1)=pt(1);
h2.YData(end+1)=pt(2);

pause(0.1)
end



%{
delete(h1)
delete(h2)
+[M函数](,测试代码)
%}"(,)
的#71""(降临规则#4,设置变量#72)
设置变量#72"\"\"\"
描述结构:...
库:...

\"\"\"

+设置变量(_场景,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)->的(设置变量,库)...

->[]{
    []:->的(_代码,命名空间)->命名空间,->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#73""(设置变量#72,库#74)
库#74""(,)
的#75""(设置变量#72,描述结构#76)
描述结构#76"\"\"\"
P代码:...
P代码1:...

\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码1)...

->[python]\"
is_var=[0,0]
state=True
\"(Python,)...
->[]{
    []=>的(_场景,_物体)->_物体->在(_物体,空间点)...
    =>+变量名(,_物体)->+的(+操作,+变量名)...
    ->[]{
        []:->[]{的(_物体,速度)->速度}...
            ->+[code]([python]#1,P代码1)->[python]#1(Python,+变量名),
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
    }
}


"(,)
的#77""(描述结构#76,P代码1#78)
P代码1#78"\"\"\"


\"\"\"

is_var[1]+=1
ans='obj_%d'%(is_var[1])
state=True

"(,)
的#79""(描述结构#76,P代码#80)
P代码#80"\"\"\"


\"\"\"
is_var[0]+=1
ans='bg_%d'%(is_var[0])
state=True

"(,)
的#81""(降临规则#4,整理代码#82)
整理代码#82"\"\"\"
Nini, 打开PPT(文件)
M代码:...
M模板:...

测试代码:...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M代码)...

->的(_代码,代码结构)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...
->[]{
    []=>的(代码结构,_模块)->_模块=>+[.](+[模板文本],_模块)
}...
->+[o]\"axis_\"(+[matlab],+[临时文本])->+[.]\"axis_\"(+[模板文本],+[临时文本])...

->+[删除结构](,_代码)

"(,)
的#83""(整理代码#82,M模板#84)
M模板#84"%{
+[M函数](,%[标题])
%}

dt=0.1;

h=0.4;
k=0.1;
k_n=1;
rho_0=8;

x=[];
y=[];
v_x=[];
v_y=[];

%初始化代码



N=numel(x);

rho=zeros(1,N);
rho_n=zeros(1,N);
D=zeros(1,N);

% map
axis_=[%axis_];
x_grid=axis_(1):axis_(5):axis_(2);
y_grid=axis_(3):axis_(5):axis_(4);
[X,Y]=meshgrid(x_grid,y_grid);
In_0=zeros(size(X));

clf
hold on
h_gph=plot(x,y,'r.');
h_map=image(x_grid,y_grid,In_0);
axis equal
axis(axis_(1:4))
rectangle(\"Position\",[axis_(1),axis_(2),diff(axis_(1:2)),diff(axis_(3:4))])

%画图代码

for i=1:1000
In=In_0;
x=x+v_x*dt;
y=y+v_y*dt;

for j=1:length(x)
% for j=1
r=sqrt((x-x(j)).^2+(y-y(j)).^2);
q=r/h;
rho=(1-q).^2;
rho_n=(1-q).^3;

P=k*(sum(rho(q<1))-rho_0);
P_n=k_n*sum(rho_n(q<1));

D_x=dt^2*(P*(1-q)+P_n*(1-q).^2).*(x-x(j))./r;
D_y=dt^2*(P*(1-q)+P_n*(1-q).^2).*(y-y(j))./r;
D_x(isnan(D_x))=0;
D_y(isnan(D_y))=0;

x(q<1)=x(q<1)+D_x(q<1)/2;
y(q<1)=y(q<1)+D_y(q<1)/2;
x(j)=x(j)-sum(D_x(q<1)/2);
y(j)=y(j)-sum(D_y(q<1)/2);

In=In+exp(-((X-x(j)).^2+(Y-y(j)).^2)./2/h^2);
% In=In+(1-sqrt((X-x(j)).^2+(Y-y(j)).^2)/h);

end

v_y=v_y-0.01*dt;


%受力代码


h_gph.XData=x;
h_gph.YData=y;

In=In/(max(max(In)))*255;
In_s=In>200;
h_map.CData=In_s*255;
% h_map.CData=In;
pause(0.01)
end


%{
%}"(,)
的#85""(整理代码#82,M代码#86)
M代码#86"%{

%}


pt_x=get(gca,'Xlim');
pt_y=get(gca,'Ylim');
d=min(diff(pt_x)/50,diff(pt_y)/50);
axis_=[pt_x,pt_y,d];


"(,)
的#87""(整理代码#82,新窗口#88)
新窗口#88""(PPT,)
的#89""(新窗口#88,m_compiler#90)
m_compiler#90""(,compiler)
的#91""(新窗口#88,m_port#92)
m_port#92""(,端口)
的#93""(新窗口#88,m_event#94)
m_event#94""(,event)
的#95""(新窗口#88,m_readPtr#96)
m_readPtr#96""(,)
的#97""(新窗口#88,m_cursor#98)
m_cursor#98"1094,1094"(,)
的#99""(新窗口#88,m_x#100)
m_x#100"-150"(,)
的#101""(新窗口#88,m_y#102)
m_y#102"1045"(,)
的#103""(新窗口#88,m_height#104)
m_height#104"476"(,)
的#105""(新窗口#88,m_width#106)
m_width#106"958"(,)
的#107""(整理代码#82,测试代码#108)
测试代码#108"%{
+[M函数](,测试代码)
%}

N=100;
dt=0.1;

h=0.4;
k=0.1;
k_n=1;
rho_0=8;

x=rand(1,N);
y=rand(1,N)-0.5;
v_x=zeros(1,N);
v_y=zeros(1,N);

rho=zeros(1,N);
rho_n=zeros(1,N);
D=zeros(1,N);

% map
x_grid=linspace(-1,2,100);
y_grid=linspace(-1,2,100);
[X,Y]=meshgrid(x_grid,y_grid);
In_0=zeros(size(X));

clf
hold on
h_gph=plot(x,y,'r.');
h_map=image(x_grid,y_grid,In_0);
axis equal
axis([-1.5,2.5,-1.5,2.5])
rectangle(\"Position\",[-1,-1,3,3])



for i=1:1000
In=In_0;
x=x+v_x*dt;
y=y+v_y*dt;

for j=1:length(x)
% for j=1
r=sqrt((x-x(j)).^2+(y-y(j)).^2);
q=r/h;
rho=(1-q).^2;
rho_n=(1-q).^3;

P=k*(sum(rho(q<1))-rho_0);
P_n=k_n*sum(rho_n(q<1));

D_x=dt^2*(P*(1-q)+P_n*(1-q).^2).*(x-x(j))./r;
D_y=dt^2*(P*(1-q)+P_n*(1-q).^2).*(y-y(j))./r;
D_x(isnan(D_x))=0;
D_y(isnan(D_y))=0;

x(q<1)=x(q<1)+D_x(q<1)/2;
y(q<1)=y(q<1)+D_y(q<1)/2;
x(j)=x(j)-sum(D_x(q<1)/2);
y(j)=y(j)-sum(D_y(q<1)/2);

In=In+exp(-((X-x(j)).^2+(Y-y(j)).^2)./2/h^2);
% In=In+(1-sqrt((X-x(j)).^2+(Y-y(j)).^2)/h);

end

v_y=v_y-0.01*dt;

v_x(x<-1 & v_x<0)=-v_x(x<-1 & v_x<0);
v_x(x>2 & v_x>0)=-v_x(x>2 & v_x>0);
v_y(y<-1 & v_y<0)=-0.3*v_y(y<-1 & v_y<0);
v_y(y>2 & v_y>0)=-v_y(y>2 & v_y>0);

x(x<-1)=-1;
x(x>2)=2;
y(y<-1)=-1;
y(y>2)=2;

h_gph.XData=x;
h_gph.YData=y;

In=In/(max(max(In)))*255;
In_s=In>100;
h_map.CData=In_s*255;
% h_map.CData=In;
pause(0.01)
end


%{
plot(r)
plot(isnan(P))
plot(isnan(D_y))
sum(isnan(x))
sum(isnan(y))
+[M函数](,测试代码)
%}"(,)
的#109""(降临规则#4,相互作用#110)
相互作用#110"\"\"\"
描述结构:...
库:...

\"\"\"

+相互作用(_场景,_代码)->+[del](,+相互作用)...
->的(相互作用,描述结构)->的(相互作用,库)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_物体1,_物体2)->_物体1->_物体2(,)...
    =>的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体1,_物体2)->+[code](+[做],_条目)->+[.](+[做],_代码)
}





"(,)
的#111""(相互作用#110,描述结构#112)
描述结构#112"\"\"\"


\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体1)->_物体1(,)...
        ->[]{的(_物体1,速度)->速度}...
    ->的(_场景,_物体2)->_物体2(,)...
        ->[]{[]&:=>[is](_物体1,_物体2), =>刚体碰撞1(_物体2,_物体1),
                ->的(_物体2,x)->x, ->变量(,_物体2)}...
    =>[]:
        ->[]{的(_物体1,x#1)->x#1->的(_物体2,速度)->速度}...
            ->+刚体碰撞1(_物体1,_物体2)->+的(+操作,+刚体碰撞1),
        ->[]{的(_物体1,x#1)->x#1->的(_物体2,角速度)->角速度}...
            ->+刚体碰撞1(_物体1,_物体2)->+的(+操作,+刚体碰撞1),
        ->[]{的(_物体1,x#1)->x#1}...
            ->+刚体碰撞2(_物体1,_物体2)->+的(+操作,+刚体碰撞2),
        ->+碰撞作用(_物体1,_物体2)->+的(+操作,+碰撞作用)
}


"(,)
的#113""(相互作用#110,库#114)
库#114"

碰撞作用:...
刚体碰撞1:...
刚体碰撞2:...
将条目\"碰撞作用\"复制为条目\"刚体碰撞2\"

"(,)
的#115""(库#114,刚体碰撞1#116)
刚体碰撞1#116"\"\"\"
作用模板:...
将'作用模板'的\"bg_1\"替换为\"%变量2\"

\"\"\"
+刚体碰撞1(_物体1,_物体2)->+[del](,+刚体碰撞1)...
->的(刚体碰撞1,作用模板)...

->.(+刚体碰撞1,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#117""(刚体碰撞1#116,作用模板#118)
作用模板#118"
[xs0,ys0]=intersection_curve_curve(xs_%变量1,ys_%变量1,xs_%变量2,ys_%变量2);
if ~isempty(xs0)
    [v_%变量1,omega_%变量1,v_%变量2,omega_%变量2]...
    =rigid_bodies_collision_2(v_%变量1,omega_%变量1,v_%变量2,omega_%变量2,1,xs_%变量1,ys_%变量1,1,xs_%变量2,ys_%变量2);
end

"(,)
的#119""(库#114,刚体碰撞2#120)
刚体碰撞2#120"\"\"\"
作用模板:...
将'作用模板'的\"obj_2\"替换为\"%变量2\"

\"\"\"
+刚体碰撞2(_物体1,_物体2)->+[del](,+刚体碰撞2)...
->的(刚体碰撞2,作用模板)...

->.(+刚体碰撞2,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#121""(刚体碰撞2#120,作用模板#122)
作用模板#122"
[xs0,ys0]=intersection_curve_curve(xs_%变量1,ys_%变量1,xs_%变量2,ys_%变量2);
if ~isempty(xs0)
    [~,~,v_%变量1,omega_%变量1]...
    =rigid_bodies_collision_2([0,0],0,v_%变量1,omega_%变量1,1e5,xs_%变量2,ys_%变量2,1,xs_%变量1,ys_%变量1);
end

"(,)
的#123""(库#114,碰撞作用#124)
碰撞作用#124"\"\"\"
作用模板:...
将'作用模板'的\"bg_1\"替换为\"%变量2\"

\"\"\"
+碰撞作用(_物体1,_物体2)->+[del](,+碰撞作用)...
->的(碰撞作用,作用模板)...

->.(+碰撞作用,_代码)...
->的(_代码,命名空间)->变量#1(,_物体1)->的(命名空间,变量#1)...
->变量#2(,_物体2)->的(命名空间,变量#2)...

->的(_代码,代码结构)->的(代码结构,作用代码)...

->+[模板文本](作用模板,+[增加内容2]#1)->+[增加内容2]#1(,作用代码)...
->+[.]\"变量1\"(+[模板文本],变量#1)->+[.]\"变量2\"(+[模板文本],变量#2)

"(,)
的#125""(碰撞作用#124,作用模板#126)
作用模板#126"
x1=h2_%变量1.XData(end-1:end);
y1=h2_%变量1.YData(end-1:end);
[x0,y0,x_i]=intersection_line_curve(x1,y1,xs_%变量2,ys_%变量2);
x_i(abs(x0-x1(1))<1e-12)=[];
y0(abs(x0-x1(1))<1e-12)=[];
x0(abs(x0-x1(1))<1e-12)=[];

if ~isempty(x0)
    plot(xs_%变量2(x_i:x_i+1),ys_%变量2(x_i:x_i+1));
    pt_%变量1=[x0(1),y0(1)];
    h1_%变量1.XData=x0(1);
    h1_%变量1.YData=y0(1);
    h2_%变量1.XData(end)=x0(1);
    h2_%变量1.YData(end)=y0(1);

    Dx=diff(xs_%变量2(x_i:x_i+1));
    Dy=diff(ys_%变量2(x_i:x_i+1));
    angle=acosd(Dx/norm([Dx,Dy]))*sign_1(Dy)+90;
    [v_x,v_y]=transform_2D_reflection_2(v_%变量1(1),v_%变量1(2),angle,0,0);
    v_%变量1=[v_x,v_y];
end

"(,)

## end
#549, 221:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成液体动画"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+相互作用(_媒介,_凭依)->+的(操作,+相互作用)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#551, 11144:
电子轨迹公式#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
将'召唤规则'的\",_点[210][fs]\"替换为\",\"



"(,)
的#1""(电子轨迹公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,能谱仪轨迹)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"发射角\"(求解,)->o\"fiducial\"(求解,)...
        ->.\"中心能量\"(求解,)->.\"影子\"(求解,)...
        ->+逆向轨迹_Es(求解,_凭依)->+的(操作,+逆向轨迹_Es),

    ->o\"发射角\"(求解,)->.\"fiducial\"(求解,)...
        ->.\"中心能量\"(求解,)->o\"影子\"(求解,)...
        ->+逆向轨迹_Ef(求解,_凭依)->+的(操作,+逆向轨迹_Ef),

    ->o\"发射角\"(求解,)->.\"fiducial\"(求解,)...
        ->o\"中心能量\"(求解,)->.\"影子\"(求解,)...
        ->+逆向轨迹_fs(求解,_凭依)->+的(操作,+逆向轨迹_fs),

    ->.\"发射角\"(求解,)->o\"fiducial\"(求解,)...
        ->o\"中心能量\"(求解,)->.\"影子\"(求解,)...
        ->+逆向轨迹_ts(求解,_凭依)->+的(操作,+逆向轨迹_ts),

    ->.\"发射角\"(求解,)->.\"fiducial\"(求解,)...
        ->o\"中心能量\"(求解,)->o\"影子\"(求解,)...
        ->+逆向轨迹_ft(求解,_凭依)->+的(操作,+逆向轨迹_ft),

    ->.\"发射角\"(求解,)->.\"中心能量\"(求解,)...
    ->[]{
        []:->o\"轨迹\"(求解,_轨迹)->_轨迹->o\"形状\"(,_轨迹)...
            ->+正向轨迹_3(求解,_凭依)->+的(操作,+正向轨迹_3),
        ->.\"fiducial\"(求解,)->+正向轨迹(求解,_凭依)->+的(操作,+正向轨迹),
        ->o\"fiducial\"(求解,)->+正向轨迹_1(求解,_凭依)->+的(操作,+正向轨迹_1),
        ->+正向轨迹_2(求解,_凭依)->+的(操作,+正向轨迹_2)
    }
}


"(,)
的#3""(电子轨迹公式#0,降临规则#4)
降临规则#4"

整理代码:...

逆向轨迹_Es:...
逆向轨迹_Ef:...
逆向轨迹_fs:...
逆向轨迹_ts:...
逆向轨迹_ft:...

正向轨迹:...
正向轨迹_2:...
正向轨迹_1:...
正向轨迹_3:...
将条目\"正向轨迹_2\"复制为条目\"正向轨迹_3\"
+[新建阅读窗口](,逆向轨迹_Es)
将'正向轨迹'的\"\(\+\[\.\],\"替换为\"(\"

"(,)
的#5""(降临规则#4,逆向轨迹_Ef#6)
逆向轨迹_Ef#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+逆向轨迹_Ef(求解,_凭依)->+[del](,+逆向轨迹_Ef)...
->的(逆向轨迹_Ef,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->o#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->o#s\"影子\"(求解,_点s)->变量#s(,_点s)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...
->+的(变量#s,+类型#s)->+类型#s\"xy坐标\"->+的(+类型#s,+来源#s)->+来源#s(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](o#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](.#f,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])...
->+[.](+[模板文本],变量#s)->[m_text](o#s,+[.])



"(,)
的#7""(逆向轨迹_Ef#6,M模板#8)
M模板#8"[%发射角,%影子_y]=trajectory_Es(%能谱仪_xe,%能谱仪_ye,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,%fiducial_x,%fiducial_y,%影子_x);
"(,)
的#9""(降临规则#4,逆向轨迹_fs#10)
逆向轨迹_fs#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+逆向轨迹_fs(求解,_凭依)->+[del](,+逆向轨迹_fs)...
->的(逆向轨迹_fs,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->o#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->o#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->.#s\"影子\"(求解,_点s)->变量#s(,_点s)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...
->+的(变量#s,+类型#s)->+类型#s\"xy坐标\"->+的(+类型#s,+来源#s)->+来源#s(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](o#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](.#f,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](o#E,+[.])...
->+[.](+[模板文本],变量#s)->[m_text](.#s,+[.])



"(,)
的#11""(逆向轨迹_fs#10,M模板#12)
M模板#12"[%中心能量,%发射角]=trajectory_fs(%能谱仪_xe,%能谱仪_ye,%能谱仪_xm,%能谱仪_D,%能谱仪_B,%fiducial_x,%fiducial_y,%影子_x,%影子_y);
"(,)
的#13""(降临规则#4,逆向轨迹_ts#14)
逆向轨迹_ts#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+逆向轨迹_ts(求解,_凭依)->+[del](,+逆向轨迹_ts)...
->的(逆向轨迹_ts,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->o#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->.#f\"fiducial_x\"(求解,_x坐标)->变量#fx(,_x坐标)...
->o#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->.#s\"影子\"(求解,_点s)->变量#s(,_点s)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...
->+的(变量#s,+类型#s)->+类型#s\"xy坐标\"->+的(+类型#s,+来源#s)->+来源#s(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](o#f,+[.])...
->+[.]\"f_x\"(+[模板文本],变量#fx)...
->+[.](+[模板文本],变量#E)->[m_text](o#E,+[.])...
->+[.](+[模板文本],变量#s)->[m_text](.#s,+[.])



"(,)
的#15""(逆向轨迹_ts#14,M模板#16)
M模板#16"[%中心能量,%fiducial_y]=trajectory_ft(%能谱仪_xe,%能谱仪_ye,%发射角,%能谱仪_xm,%能谱仪_D,%能谱仪_B,%影子_x,%影子_y,%f_x);
%fiducial_x=%f_x;
"(,)
的#17""(降临规则#4,逆向轨迹_ft#18)
逆向轨迹_ft#18"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+逆向轨迹_ft(求解,_凭依)->+[del](,+逆向轨迹_ft)...
->的(逆向轨迹_ft,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->o#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->o#s\"影子\"(求解,_点s)->变量#s(,_点s)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...
->+的(变量#s,+类型#s)->+类型#s\"xy坐标\"->+的(+类型#s,+来源#s)->+来源#s(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](.#f,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](o#E,+[.])...
->+[.](+[模板文本],变量#s)->[m_text](o#s,+[.])



"(,)
的#19""(逆向轨迹_ft#18,M模板#20)
M模板#20"[%中心能量,%影子_y]=trajectory_ft(%能谱仪_xe,%能谱仪_ye,%发射角,%能谱仪_xm,%能谱仪_D,%能谱仪_B,%fiducial_x,%fiducial_y,%影子_x);
"(,)
的#21""(降临规则#4,正向轨迹_3#22)
正向轨迹_3#22"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+正向轨迹_3(求解,_凭依)->+[del](,+正向轨迹_3)...
->的(正向轨迹_3,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->o#tj\"轨迹\"(求解,_轨迹)->变量#tj(,_轨迹)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#tj,+类型#tj)->+类型#tj\"图形\"...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])...
->+[.](+[模板文本],变量#tj)->[m_text](o#tj,+[.])



"(,)
的#23""(正向轨迹_3#22,M模板#24)
M模板#24"[x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m]=trajectory_uniform(%能谱仪_xe,%能谱仪_ye,%发射角,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,[%能谱仪_xs,%能谱仪_ys],0);
[%轨迹_x,%轨迹_y]=trajectory_XY(%能谱仪_xe,%能谱仪_ye,%发射角,x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m);

"(,)
的#25""(降临规则#4,逆向轨迹_Es#26)
逆向轨迹_Es#26"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+逆向轨迹_Es(求解,_凭依)->+[del](,+逆向轨迹_Es)...
->的(逆向轨迹_Es,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->o#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->o#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->.#fx\"fiducial_x\"(求解,_x坐标)->变量#fx(,_x坐标)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...
->.#s\"影子\"(求解,_点s)->变量#s(,_点s)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...
->+的(变量#s,+类型#s)->+类型#s\"xy坐标\"->+的(+类型#s,+来源#s)->+来源#s(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](o#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](o#f,+[.])...
->+[.]\"f_x\"(+[模板文本],变量#fx)...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])...
->+[.](+[模板文本],变量#s)->[m_text](.#s,+[.])



"(,)
的#27""(逆向轨迹_Es#26,M模板#28)
M模板#28"[%发射角,%fiducial_y]=trajectory_Es(%能谱仪_xe,%能谱仪_ye,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,%影子_x,%影子_y,%f_x);
%fiducial_x=%f_x;
"(,)
的#29""(降临规则#4,整理代码#30)
整理代码#30"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#31""(降临规则#4,正向轨迹_1#32)
正向轨迹_1#32"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+正向轨迹_1(求解,_凭依)->+[del](,+正向轨迹_1)...
->的(正向轨迹_1,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#f\"fiducial_x\"(求解,_fx)->变量#fx(,_fx)...
->o#f\"fiducial\"(求解,_f)->变量#f(,_f)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](o#f,+[.])...
->+[.]\"fx\"(+[模板文本],变量#fx)...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])



"(,)
的#33""(正向轨迹_1#32,M模板#34)
M模板#34"[x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m]=trajectory_uniform(%能谱仪_xe,%能谱仪_ye,%发射角,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,[%能谱仪_xs,%能谱仪_ys],0);
%fiducial_x=%fx;
%fiducial_y=y_2m+(%fx-x_2m)*tan(beta);

"(,)
的#35""(降临规则#4,正向轨迹#36)
正向轨迹#36"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+正向轨迹(求解,_凭依)->+[del](,+正向轨迹)...
->的(正向轨迹,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#f\"fiducial\"(求解,_点f)->变量#f(,_点f)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...
->+的(变量#f,+类型#f)->+类型#f\"xy坐标\"->+的(+类型#f,+来源#f)->+来源#f(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#f)->[m_text](.#f,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])



"(,)
的#37""(正向轨迹#36,M模板#38)
M模板#38"[x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m]=trajectory_uniform(%能谱仪_xe,%能谱仪_ye,%发射角,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,[%能谱仪_xs,%能谱仪_ys],0);
[X,Y]=trajectory_XY(%能谱仪_xe,%能谱仪_ye,%发射角,x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m);

subplot(2,1,1)
hold on
plot(X,Y,%fiducial_x,%fiducial_y,'r*')
rectangle('Position',[%能谱仪_xm-%能谱仪_D/2,-%能谱仪_D/2,%能谱仪_D,%能谱仪_D])
axis equal
title(sprintf('E=%.2f GeV',%中心能量/e/1e9))

subplot(2,2,3)
hold on
plot(X,Y,'.-')
rectangle('Position',[%能谱仪_xm-%能谱仪_D/2,-%能谱仪_D/2,%能谱仪_D,%能谱仪_D])
axis equal
axis([%能谱仪_xm-%能谱仪_D*1.5,%能谱仪_xm+%能谱仪_D*1.5,-%能谱仪_D,%能谱仪_D])

subplot(2,2,4)
plot(X,Y,%fiducial_x,%fiducial_y,'r*')
axis([%fiducial_x-1e-6,%fiducial_x+1e-6,%fiducial_y-1e-6,%fiducial_y+1e-6])


"(,)
的#39""(降临规则#4,正向轨迹_2#40)
正向轨迹_2#40"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+正向轨迹_2(求解,_凭依)->+[del](,+正向轨迹_2)...
->的(正向轨迹_2,M模板)...

->.#S\"能谱仪\"(求解,_能谱仪)->变量#S(,_能谱仪)...
->.#t\"发射角\"(求解,_发射角)->变量#t(,_发射角)...
->.#E\"中心能量\"(求解,_能量)->变量#E(,_能量)...

->+的(变量#S,+类型#S)->+类型#S\"自定义\"(,+能谱仪参数)->+的(+类型#S,+能谱仪参数)...
    ->+的(+类型#S,+来源#S)->+来源#S(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#S)->[m_text](.#S,+[.])...
->+[.](+[模板文本],变量#t)->[m_text](.#t,+[.])...
->+[.](+[模板文本],变量#E)->[m_text](.#E,+[.])



"(,)
的#41""(正向轨迹_2#40,M模板#42)
M模板#42"[x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m]=trajectory_uniform(%能谱仪_xe,%能谱仪_ye,%发射角,%中心能量,%能谱仪_xm,%能谱仪_D,%能谱仪_B,[%能谱仪_xs,%能谱仪_ys],0);
[X,Y]=trajectory_XY(%能谱仪_xe,%能谱仪_ye,%发射角,x0,y0,r,beta,x_1m,y_1m,x_2m,y_2m);

subplot(2,1,1)
hold on
plot(X,Y)
rectangle('Position',[%能谱仪_xm-%能谱仪_D/2,-%能谱仪_D/2,%能谱仪_D,%能谱仪_D])
axis equal
title(sprintf('E=%.2f GeV',%中心能量/e/1e9))

subplot(2,2,3)
hold on
plot(X,Y,'.-')
rectangle('Position',[%能谱仪_xm-%能谱仪_D/2,-%能谱仪_D/2,%能谱仪_D,%能谱仪_D])
axis equal
axis([%能谱仪_xm-%能谱仪_D*1.5,%能谱仪_xm+%能谱仪_D*1.5,-%能谱仪_D,%能谱仪_D])



"(,)

## end
#553, 1071:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,能谱仪轨迹)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"发射角"(求解,)->o"fiducial"(求解,)...
        ->."中心能量"(求解,)->."影子"(求解,)...
        ->+逆向轨迹_Es(求解,_凭依)->+的(操作,+逆向轨迹_Es),

    ->o"发射角"(求解,)->."fiducial"(求解,)...
        ->."中心能量"(求解,)->o"影子"(求解,)...
        ->+逆向轨迹_Ef(求解,_凭依)->+的(操作,+逆向轨迹_Ef),

    ->o"发射角"(求解,)->."fiducial"(求解,)...
        ->o"中心能量"(求解,)->."影子"(求解,)...
        ->+逆向轨迹_fs(求解,_凭依)->+的(操作,+逆向轨迹_fs),

    ->."发射角"(求解,)->o"fiducial"(求解,)...
        ->o"中心能量"(求解,)->."影子"(求解,)...
        ->+逆向轨迹_ts(求解,_凭依)->+的(操作,+逆向轨迹_ts),

    ->."发射角"(求解,)->."fiducial"(求解,)...
        ->o"中心能量"(求解,)->o"影子"(求解,)...
        ->+逆向轨迹_ft(求解,_凭依)->+的(操作,+逆向轨迹_ft),

    ->."发射角"(求解,)->."中心能量"(求解,)...
    ->[]{
        []:->o"轨迹"(求解,_轨迹)->_轨迹->o"形状"(,_轨迹)...
            ->+正向轨迹_3(求解,_凭依)->+的(操作,+正向轨迹_3),
        ->."fiducial"(求解,)->+正向轨迹(求解,_凭依)->+的(操作,+正向轨迹),
        ->o"fiducial"(求解,)->+正向轨迹_1(求解,_凭依)->+的(操作,+正向轨迹_1),
        ->+正向轨迹_2(求解,_凭依)->+的(操作,+正向轨迹_2)
    }
}



## end
#555, 986:
高斯函数#0"

召唤规则:...
降临规则:...


"(,)
的#1""(高斯函数#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,高斯函数)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"函数\"(求解,)...
        ->.\"中心\"(求解,)->.\"FWHM\"(求解,)...
        ->+高斯函数_1(求解,_凭依)->+的(操作,+高斯函数_1)
}


"(,)
的#3""(高斯函数#0,降临规则#4)
降临规则#4"
整理代码:...

高斯函数_1:...
将'高斯函数_1'的\"逆向轨迹_Es\"替换为\"高斯函数_1\"
"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,高斯函数_1#8)
高斯函数_1#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+高斯函数_1(求解,_凭依)->+[del](,+高斯函数_1)...
->的(高斯函数_1,M模板)...

->o#1\"函数\"(求解,_函数)->变量#1(,_函数)...
->.#2\"FWHM\"(求解,_FWHM)->变量#2(,_FWHM)...
->.#3\"中心\"(求解,_中心)->变量#3(,_中心)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#9""(高斯函数_1#8,M模板#10)
M模板#10"%函数=@(x)exp(-(x-%中心).^2/%FWHM^2);
"(,)

## end
#557, 249:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,高斯函数)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"函数"(求解,)...
        ->."中心"(求解,)->."FWHM"(求解,)...
        ->+高斯函数_1(求解,_凭依)->+的(操作,+高斯函数_1)
}



## end
#559, 1758:
IP图像公式#0"

召唤规则:...
降临规则:...


"(,)
的#1""(IP图像公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,IP图像公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"IP图像\"(求解,)->.\"能谱仪\"(求解,)->.\"能谱\"(求解,)...
        ->.\"发射角\"(求解,)->.\"发散度\"(求解,)->.\"fiducial\"(求解,)...
        ->+内容_1(求解,_凭依)->+的(操作,+内容_1)
}


"(,)
的#3""(IP图像公式#0,降临规则#4)
降临规则#4"
整理代码:...

内容_1:...
将'内容_1'的\"高斯函数_1\"替换为\"内容_1\"

"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,内容_1#8)
内容_1#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+内容_1(求解,_凭依)->+[del](,+内容_1)...
->的(内容_1,M模板)...

->o#1\"IP图像\"(求解,_IP图像)->变量#1(,_IP图像)...
->.#2\"能谱\"(求解,_能谱)->变量#2(,_能谱)...
->.#3\"能谱仪\"(求解,_能谱仪)->变量#3(,_能谱仪)...
->.#4\"发射角\"(求解,_发射角)->变量#4(,_发射角)...
->.#5\"发散度\"(求解,_发散度)->变量#5(,_发散度)...
->.#6\"fiducial\"(求解,_fiducial)->变量#6(,_fiducial)...

->+的(变量#3,+类型#3)->+类型#3\"自定义\"(,+能谱仪参数)->+的(+类型#3,+能谱仪参数)...
    ->+的(+类型#3,+来源#3)->+来源#3(,求解)...
->+的(变量#6,+类型#6)->+类型#6\"xy坐标\"->+的(+类型#6,+来源#6)->+来源#6(,求解)...

->+函数库\"Matlab\spectrometer\"->+的(求解,+函数库)...
->+函数库\"Matlab\paper_spectrometer\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])...
->+[.](+[模板文本],变量#6)->[m_text](.#6,+[.])



"(,)
的#9""(内容_1#8,M模板#10)
M模板#10"
t=linspace(-4*%发散度,4*%发散度,100)+%发射角;
f_t0=exp(-(t-%发射角).^2/%发散度^2);
R=0.005*2.54e-2/2;

z_i=%能谱仪_xs;
x_i=linspace(0.2,-0.2,4000)+%能谱仪_ys;

%IP图像=IP_ATM_arb(%能谱,t,f_t0,%能谱仪_ye,%能谱仪_xe,%能谱仪_B,%能谱仪_D,%能谱仪_xm,R,%fiducial_y,%fiducial_x,x_i,z_i);

"(,)

## end
#561, 292:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,IP图像公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"IP图像"(求解,)->."能谱仪"(求解,)->."能谱"(求解,)...
        ->."发射角"(求解,)->."发散度"(求解,)->."fiducial"(求解,)...
        ->+内容_1(求解,_凭依)->+的(操作,+内容_1)
}



## end
#563, 2656:
能谱仪实验参数#0"

召唤规则:...
降临规则:...


"(,)
的#1""(能谱仪实验参数#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,赋值)->赋值(,变量)->变量(,_能谱仪)->的(变量,类型)->类型(,能谱仪参数)...
->+整理代码(赋值,_凭依)->+的(操作,+整理代码)...

->_能谱仪(,_场景)...
->[]{
    []:->_场景->+能谱仪结构(_能谱仪,_凭依)->+的(操作,+能谱仪结构),
    ->的(_能谱仪,磁场)->磁场(,)...
        ->+能谱仪结构(_能谱仪,_凭依)->+的(操作,+能谱仪结构),
    ->+实验编号(_能谱仪,_凭依)->+的(操作,+实验编号)
}


"(,)
的#3""(能谱仪实验参数#0,降临规则#4)
降临规则#4"
实验编号:...
能谱仪结构:...
+[新建阅读窗口](,能谱仪结构)

整理代码:...

"(,)
的#5""(降临规则#4,实验编号#6)
实验编号#6"\"\"\"
库:...

\"\"\"
+实验编号(_能谱仪,_代码)->+[del](,+实验编号)...
->的(实验编号,库)...

->变量(,_能谱仪)...
->+模板->[]{
    []:->的(库,_条目)->_条目->[标题](_条目,)->[==]([标题],_能谱仪)...
        ->[m_text](_条目,+模板),
    ->的(库,测试参数)->测试参数->[m_text](测试参数,+模板)
}...

->+[模板文本](+模板,_代码)->+[del](,+模板)...
->+[.]\"能谱仪\"(+[模板文本],变量)




"(,)
的#7""(实验编号#6,库#8)
库#8"

测试参数:...

"(,)
的#9""(库#8,测试参数#10)
测试参数#10"
%能谱仪_ye=0;
%能谱仪_xe=0;
%能谱仪_xm=20e-2;
%能谱仪_B=1.5;
%能谱仪_D=5e-2;
%能谱仪_ys=0;
%能谱仪_xs=2;

"(,)
的#11""(降临规则#4,能谱仪结构#12)
能谱仪结构#12"\"\"\"
模板:...
M代码:...

\"\"\"
+能谱仪结构(_能谱仪,_代码)->+[del](,+能谱仪结构)...
->的(能谱仪结构,模板)->的(能谱仪结构,M代码)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->的(_能谱仪,源)->源(,_源)...
->[]{
    []:->在(_源,空间点)->空间点->+[.]\"pt_e\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt_e\"(+[matlab],+[临时文本])
}...
->的(_能谱仪,磁场)->磁场(,_磁场)...
->[]{
    []:->的(_磁场,长度)->长度->+[.]\"D0\"(+[matlab],长度),
    ->+[临时文本]\"5e-2\"->+[.]\"D0\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(_磁场,磁场强度)->磁场强度->+[.]\"B0\"(+[matlab],磁场强度),
    ->+[临时文本]\"1.5\"->+[.]\"B0\"(+[matlab],+[临时文本])
}...
->[]{
    []:->在(_磁场,空间点)->空间点->+[.]\"pt_m\"(+[matlab],空间点),
    ->+[临时文本]\"0.2,0\"->+[.]\"pt_m\"(+[matlab],+[临时文本])
}...
->的(_能谱仪,IP)->IP(,_IP)...
->[]{
    []:->在(_IP,空间点)->空间点->+[.]\"pt_s\"(+[matlab],空间点),
    ->+[临时文本]\"2,0\"->+[.]\"pt_s\"(+[matlab],+[临时文本])
}...

->+[模板文本](模板,_代码)...
->+[.]\"能谱仪\"(+[模板文本],变量)->变量(,_能谱仪)...
->+[.](+[模板文本],+ye)->+[o](+[matlab],+ye)->+[del](,+ye)...
->+[.](+[模板文本],+xe)->+[o](+[matlab],+xe)->+[del](,+xe)...
->+[.](+[模板文本],+xm)->+[o](+[matlab],+xm)->+[del](,+xm)...
->+[.](+[模板文本],+B)->+[o](+[matlab],+B)->+[del](,+B)...
->+[.](+[模板文本],+D)->+[o](+[matlab],+D)->+[del](,+D)...
->+[.](+[模板文本],+ys)->+[o](+[matlab],+ys)->+[del](,+ys)...
->+[.](+[模板文本],+xs)->+[o](+[matlab],+xs)->+[del](,+xs)




"(,)
的#13""(能谱仪结构#12,模板#14)
模板#14"
%能谱仪_ye=%ye;
%能谱仪_xe=%xe;
%能谱仪_xm=%xm;
%能谱仪_B=%B;
%能谱仪_D=%D;
%能谱仪_ys=%ys;
%能谱仪_xs=%xs;

"(,)
的#15""(能谱仪结构#12,M代码#16)
M代码#16"%{

%}

xe=pt_e(1);
ye=pt_e(2);
xm=pt_m(1);
ym=pt_m(2);
B=B0;
D=D0;
xs=pt_s(1);
ys=pt_s(2);

"(,)
的#17""(降临规则#4,整理代码#18)
整理代码#18"\"\"\"


\"\"\"

+整理代码(赋值,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)

"(,)

## end
#565, 333:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,赋值)->赋值(,变量)->变量(,_能谱仪)->的(变量,类型)->类型(,能谱仪参数)...
->+整理代码(赋值,_凭依)->+的(操作,+整理代码)...

->_能谱仪(,_场景)...
->[]{
    []:->_场景->+能谱仪结构(_能谱仪,_凭依)->+的(操作,+能谱仪结构),
    ->的(_能谱仪,磁场)->磁场(,)...
        ->+能谱仪结构(_能谱仪,_凭依)->+的(操作,+能谱仪结构),
    ->+实验编号(_能谱仪,_凭依)->+的(操作,+实验编号)
}



## end
#567, 10928:
推导结构转代码#0"

召唤规则:...
降临规则:...



"(,)
的#1""(推导结构转代码#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"推导结构转代码\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)...
->+推导解题(_题目,_代码)->+的(操作,+推导解题)


"(,)
的#3""(推导结构转代码#0,降临规则#4)
降临规则#4"+[复制结构](,设置变量)

推导解题:...
设置变量:...
召唤代码:...
整理代码:...
+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"
M模板:...
M模板2:...
M模板3:...
M模板4:...

\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M模板2)...
->的(整理代码,M模板3)->的(整理代码,M模板4)...

->+[标题](_代码,)...
->的(_代码,初值)->的(_代码,顺序)...
->的(_代码,目标)->目标(,求解)->求解(,_变量)->变量(,_变量)...

->+[模板文本](,_代码)...
->+[.](+[模板文本],初值)->+[.](+[模板文本],顺序)->+[.]\"目标\"(+[模板文本],变量)...
->+[.](+[模板文本],+[标题])...

->[]{
    []:->[is](_变量,波包形状)->波包形状->+[code](+[模板文本],M模板2),
    ->[is](_变量,光谱)->光谱->+[code](+[模板文本],M模板3),
    ->[is](_变量,能谱)->能谱->+[code](+[模板文本],M模板4),
    ->+[code](+[模板文本],M模板)
}...

->[]:->保留结构(,_代码)...
    ->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
    ->的(_代码,降临规则)->的(降临规则,整理代码)...
        ->+[删除结构](,降临规则)->+[del](,降临规则)->+[消息窗口](,降临规则),
->+[删除结构](,_代码)

"(,)
的#7""(整理代码#6,M模板#8)
M模板#8"%{
+[M函数](,%[标题])
%}

%初值

%顺序

ans=%目标;
disp(sprintf('%目标: %.3e',ans));

%{
+[M函数](,%[标题])
%}"(,)
的#9""(整理代码#6,M模板2#10)
M模板2#10"%{
+[M函数](,%[标题])
%}

%初值

%顺序

f=%目标;
t=linspace(-1,1,10000)*200e-15;
plot(t/1e-15,f(t),t/1e-15,abs(f(t)));
xlabel('Delay time [fs]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#11""(整理代码#6,M模板3#12)
M模板3#12"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
lm=linspace(500,1000,2000)*1e-9;
plot(lm/1e-9,S(lm));
xlabel('Lambda [nm]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#13""(整理代码#6,M模板4#14)
M模板4#14"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
E=linspace(500,10000,2000)*1e6*e;
plot(E/1e9/e,S(E));
xlabel('Energy [GeV]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#15""(降临规则#4,设置变量#16)
设置变量#16"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->的(_代码,结构)...

->+[code]([想],描述结构)->[想](,结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#17""(设置变量#16,描述结构#18)
描述结构#18"\"\"\"
P代码:...

\"\"\"

+描述结构(,结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#19""(描述结构#18,P代码#20)
P代码#20"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距离\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#21""(降临规则#4,推导解题#22)
推导解题#22"\"\"\"
描述结构:...

保存:...

\"\"\"

+推导解题(_题目,_代码)->+[del](,+推导解题)...
->的(推导解题,描述结构)...

->[]{
    []:->的(_代码,结构)->结构=>的(结构,_节点)=>+[del](,_节点),
    ->+的(_代码,+结构)
}->的(_代码,结构#0)...

->的(_题目,求解)->[描述结构](_题目,求解)->[收集推导结构](_题目,求解)...
->[]{
    []:->的(_代码,目标)->目标->+[右连](目标,求解),
    ->+的(_代码,+目标)->+目标(,求解)
}...

->结构([收集推导结构],)...

->+匹配关系->+[del](,+匹配关系)...
->+的(结构#0,+求解)->+匹配(求解,+求解)->+的(+匹配关系,+匹配)->+[del](,+匹配)...
->[]{
    []=>的(结构,_节点)->_节点->[]{[]&:=>的(_题目,_节点),=>匹配(_节点,)}...
    =>+的(结构#0,+节点)->[m_text](_节点,+节点)->[m_name](_节点,+节点)...
        ->+匹配(_节点,+节点)->+的(+匹配关系,+匹配)->+[del](,+匹配)
}...
->[说]\"本体复制完成! \"...
->[]{
    []=>的(+匹配关系,匹配)->匹配(_关联,_关联0)->_关联0->_关联(,_宾语)->_宾语(,)...
    =>[]:
        ->匹配(_宾语,_宾语0)->的(+匹配关系,匹配)->+[右连](_关联0,_宾语0),
        ->+[右连](_关联0,_宾语)
}...
->[说]\"右关联完成! \"...
->[]{
    []=>的(+匹配关系,匹配)->匹配(_关联,_关联0)->_关联0->_关联(_主语,)->_主语(,)...
    =>[]:
        ->匹配(_主语,_主语0)->的(+匹配关系,匹配)->+[左连](_关联0,_主语0),
        ->+[左连](_关联0,_主语)
}...
->[说]\"左关联完成! \"



"(,)
的#23""(推导解题#22,描述结构#24)
描述结构#24"\"\"\"
整理流程:...

\"\"\"

+描述结构(结构,_求解)->+操作(+描述结构,)...
->的(描述结构,整理流程)...

->+[code]([想],整理流程)->+[.]([想],+操作)->[想](结构,_求解)


"(,)
的#25""(描述结构#24,整理流程#26)
整理流程#26"\"\"\"


\"\"\"
+整理流程(结构,_求解)->.(+整理流程,操作)...
->整理流程(,)...

->+的(操作,_求解)...
->[]{
    []=>然后(_求解1,_求解){的(结构,然后)}->_求解1(,)...
        =>+[code]([想],整理流程)->+[.]([想],操作)->[想](结构,_求解1)
}


"(,)
的#27""(推导解题#22,保存#28)
保存#28"\"\"\"
描述结构:...

保存:...

\"\"\"

+推导解题(_题目,_代码)->+[del](,+推导解题)...
->的(推导解题,描述结构)...

->[]{
    []:->的(_代码,结构)->结构=>的(结构,_节点)=>+[del](,_节点),
    ->+的(_代码,+结构)
}->的(_代码,结构#0)...

->的(_题目,求解)->[描述结构](_题目,求解)->[收集推导结构](_题目,求解)...
->结构([收集推导结构],)...

->+匹配关系->+[del](,+匹配关系)...
->+的(结构#0,+求解)->+匹配(求解,+求解)->+的(+匹配关系,+匹配)->+[del](,+匹配)...
->[]{
    []=>的(结构,_节点)->_节点->[]{[]&:=>的(_题目,_节点),=>匹配(_节点,)}...
    =>+的(结构#0,+节点)->[m_text](_节点,+节点)->[m_name](_节点,+节点)...
        ->+匹配(_节点,+节点)->+的(+匹配关系,+匹配)->+[del](,+匹配)
}...
->[说]\"本体复制完成! \"...
->[]{
    []=>的(+匹配关系,匹配)->匹配(_关联,_关联0)->_关联0->_关联(,_宾语)->_宾语(,)...
    =>[]:
        ->匹配(_宾语,_宾语0)->的(+匹配关系,匹配)->+[右连](_关联0,_宾语0),
        ->+[右连](_关联0,_宾语)
}...
->[说]\"右关联完成! \"...
->[]{
    []=>的(结构,_关联)->_关联(_主语,)->_主语{匹配(_关联,)}...
    =>匹配(_关联,_关联0)->的(+匹配关系,匹配):
        ->匹配(_主语,_主语0)->的(+匹配关系,匹配)->+[左连](_关联0,_主语0),
        ->+[左连](_关联0,_主语)
}...
->[说]\"左关联完成! \"



"(,)
的#29""(降临规则#4,召唤代码#30)
召唤代码#30"\"\"\"
有什么
描述结构:...
初值代码:...
生成代码:...
+[新建阅读窗口](,描述结构)

->的(顺序#0,后)->后(求解,)->求解{[]=>后#0(,求解)->的(顺序#0,后#0)}...

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)...
->的(召唤代码,初值代码)->的(召唤代码,生成代码)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)...
->+[做](初值#0,_代码)->+[code](+[做],初值代码)

"(,)
的#31""(召唤代码#30,描述结构#32)
描述结构#32"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->的(_代码,结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)

"(,)
的#33""(描述结构#32,收集顺序#34)
收集顺序#34"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#35""(收集顺序#34,保存#36)
保存#36"\"\"\"
保存:...

\"\"\"

+收集顺序(顺序,结构)...

->[]{
    []=>的(结构,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#37""(收集顺序#34,整理流程#38)
整理流程#38"\"\"\"


\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#39""(收集顺序#34,整理流程2#40)
整理流程2#40"\"\"\"
入口顺序:...

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...
->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)->_求解}...
->[]{
    []{[]=>然后(_求解2,_求解)->_求解2&:
        ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
    ->+[code]([想],入口顺序)->+[.]([想],顺序)->[想](_求解,计算节点)...
    ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
},
->[]



"(,)
的#41""(整理流程2#40,入口顺序#42)
入口顺序#42"\"\"\"


\"\"\"

+入口顺序(_求解,计算节点)->.(+入口顺序,顺序)...
->入口顺序(,)...

->+的(顺序,_求解):
->然后(_求解,_求解2)->[]{[]=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1)}...
    ->+[code]([想],入口顺序)->+[.]([想],顺序)->[想](_求解2,计算节点),
->[]

"(,)
的#43""(描述结构#32,收集初值#44)
收集初值#44"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#45""(召唤代码#30,初值代码#46)
初值代码#46"\"\"\"
描述结构:...

\"\"\"

+初值代码(初值,_代码)->+[del](,+初值代码)...
->的(初值代码,描述结构)...

->+[code]([想],描述结构)->[想](初值,_代码)...

->引用库([想],)->+[修改内容](,初值)->[m_text](引用库,+[修改内容])...
->[]{
    []=>的(初值,_初值)->_初值=>+[数据转换](_初值,+[增加内容])->+[增加内容](,初值)
}


"(,)
的#47""(初值代码#46,描述结构#48)
描述结构#48"\"\"\"
P代码:...

\"\"\"
+描述结构(初值,_代码)->+引用库(+描述结构,)...
->的(描述结构,P代码)...

->[python]#0\"state=True
list_lib=set()\"(Python,)...
->[]{
    的(_代码,结构)->结构=>的(结构,求解)->的(求解,函数库)...
    =>+[s]\"lib_dir\"([python],函数库)->[python]\"list_lib.update({lib_dir})\"(Python,)
}...

->+[code]([python],P代码)->[python](Python,+引用库)
"(,)
的#49""(描述结构#48,P代码#50)
P代码#50"\"\"\"
记住\"Python\"

print(list_lib)
a=['1','3','av']
print(a,'av' in a)

\"\"\"

if \"physics_constant\" in list_lib:
    lib_code='physics_constant;\n\n'
else:
    lib_code=''

for lib_name in list_lib:
    if lib_name!='physics_constant':
        lib_code+=\"addpath('%s');\n\"%(lib_name)

ans=lib_code+'\n'


"(,)
的#51""(召唤代码#30,生成代码#52)
生成代码#52"\"\"\"
赋值:...

\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->的(生成代码,赋值)...

->+代码->[]{
    []:->调用(求解,赋值#0)->+[做](求解,+代码)->+[code](+[做],赋值),
    ->+[召唤星辰](求解,+代码)
}->+[增加内容](+代码,_代码)->+[del](,+代码)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#53""(生成代码#52,保存#54)
保存#54"\"\"\"


\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->生成代码(,)...

->+[召唤星辰](求解,+代码)->+[增加内容](+代码,_代码)...
->+[del](,+代码):
    ->然后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#55""(生成代码#52,赋值#56)
赋值#56"\"\"\"


\"\"\"
+赋值(求解,_代码)->+[del](,+赋值)...

->o(求解,_a)->变量#a(,_a)...
->.(求解,_b)->变量#b(,_b)...

->+[模板文本]\"%a=%b;
\"(,_代码)...
->+[.]\"a\"(+[模板文本],变量#a)...
->+[.]\"b\"(+[模板文本],变量#b)

"(,)

## end
#569, 222:
"""


"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"推导结构转代码"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)...
->+推导解题(_题目,_代码)->+的(操作,+推导解题)



## end
#571, 2706:
直线方程#0"

召唤规则:...
降临规则:...



"(,)
的#1""(直线方程#0,降临规则#2)
降临规则#2"
整理代码:...

两点定直线:...
+[新建阅读窗口](,两点定直线)
将'两点定直线'的\"中心\"替换为\"终点\"


"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,两点定直线#6)
两点定直线#6"\"\"\"
M代码:...
JS代码:...
将条目\"M代码\"复制为条目\"JS代码\"

保存:...

\"\"\"

+两点定直线(求解,_凭依)->+[del](,+两点定直线)...
->的(两点定直线,M代码)->的(两点定直线,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)



"(,)
的#7""(两点定直线#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"起点\"(求解,_起点)->变量#2(,_起点)...
->.#3\"终点\"(求解,_终点)->变量#3(,_终点)...

->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"// Line direction
Dx=%终点_x-%起点_x;
Dy=%终点_y-%起点_y;
L=Math.sqrt(Dx**2+Dy**2);
Dx=Dx/L;
Dy=Dy/L;
%方向=Math.acos(Dx)*Math.sign(Dy);

"(,)
的#11""(两点定直线#6,保存#12)
保存#12"\"\"\"
M代码:...

\"\"\"

+两点定直线(求解,_凭依)->+[del](,+两点定直线)...
->的(两点定直线,M代码)->的(两点定直线,JS代码)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"起点\"(求解,_起点)->变量#2(,_起点)...
->.#3\"终点\"(求解,_终点)->变量#3(,_终点)...

->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#13""(两点定直线#6,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"起点\"(求解,_起点)->变量#2(,_起点)...
->.#3\"终点\"(求解,_终点)->变量#3(,_终点)...

->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#15""(M代码#14,M模板#16)
M模板#16"% Line direction
Dx=%终点_x-%起点_x;
Dy=%终点_y-%起点_y;
L=sqrt(Dx.^2+Dy.^2);
Dx=Dx./L;
Dy=Dy./L;
%方向=acosd(Dx).*sign_1(Dy);

"(,)
的#17""(直线方程#0,召唤规则#18)
召唤规则#18"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,直线方程)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"方向\"(求解,)...
        ->.\"起点\"(求解,)->.\"终点\"(求解,)...
        ->+两点定直线(求解,_凭依)->+的(操作,+两点定直线)
}


"(,)

## end
#573, 245:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,直线方程)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"方向"(求解,)...
        ->."起点"(求解,)->."终点"(求解,)...
        ->+两点定直线(求解,_凭依)->+的(操作,+两点定直线)
}



## end
#575, 2345:
坐标方程#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)


"(,)
的#1""(坐标方程#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,坐标方程)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"空间点\"(求解,)...
        ->.\"原点\"(求解,)->.\"距离\"(求解,)->.\"方向\"(求解,)...
        ->+点线定位置(求解,_凭依)->+的(操作,+点线定位置)
}


"(,)
的#3""(坐标方程#0,降临规则#4)
降临规则#4"
整理代码:...

点线定位置:...
+[新建阅读窗口](,点线定位置)
将'点线定位置'的\"终点\"替换为\"距离\"


"(,)
的#5""(降临规则#4,点线定位置#6)
点线定位置#6"\"\"\"
M代码:...
JS代码:...
将条目\"M代码\"复制为条目\"JS代码\"

\"\"\"

+点线定位置(求解,_凭依)->+[del](,+点线定位置)...
->的(点线定位置,M代码)->的(点线定位置,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)



"(,)
的#7""(点线定位置#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"原点\"(求解,_原点)->变量#2(,_原点)...
->.#3\"距离\"(求解,_距离)->变量#3(,_距离)...
->.#4\"方向\"(求解,_方向)->变量#4(,_方向)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"// Solving coordinates of %空间点
Dx=%距离*Math.cos(%方向);
Dy=%距离*Math.sin(%方向);
%空间点_x=%原点_x+Dx;
%空间点_y=%原点_y+Dy;

"(,)
的#11""(点线定位置#6,M代码#12)
M代码#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"原点\"(求解,_原点)->变量#2(,_原点)...
->.#3\"距离\"(求解,_距离)->变量#3(,_距离)...
->.#4\"方向\"(求解,_方向)->变量#4(,_方向)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])



"(,)
的#13""(M代码#12,M模板#14)
M模板#14"% Solving coordinates of %空间点
Dx=%距离.*cosd(%方向);
Dy=%距离.*sind(%方向);
%空间点_x=%原点_x+Dx;
%空间点_y=%原点_y+Dy;

"(,)
的#15""(降临规则#4,整理代码#16)
整理代码#16"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#577, 258:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,坐标方程)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"空间点"(求解,)...
        ->."原点"(求解,)->."距离"(求解,)->."方向"(求解,)...
        ->+点线定位置(求解,_凭依)->+的(操作,+点线定位置)
}



## end
#579, 2769:
铰链公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(铰链公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,铰链公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"空间点\"(求解,)...
        ->.\"A点\"(求解,)->.\"B点\"(求解,)...
        ->.\"距离A\"(求解,)->.\"距离B\"(求解,)...
        ->+两点定铰链(求解,_凭依)->+的(操作,+两点定铰链)
}


"(,)
的#3""(铰链公式#0,降临规则#4)
降临规则#4"
整理代码:...

两点定铰链:...
+[修改标题]\"两点定铰链\"(,两点定直线)
+[新建阅读窗口](,两点定铰链)
将'两点定铰链'的\"终点\"替换为\"B点\"


"(,)
的#5""(降临规则#4,两点定铰链#6)
两点定铰链#6"\"\"\"
M代码:...
JS代码:...
将条目\"M代码\"复制为条目\"JS代码\"

\"\"\"

+两点定铰链(求解,_凭依)->+[del](,+两点定铰链)...
->的(两点定铰链,M代码)->的(两点定铰链,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)


"(,)
的#7""(两点定铰链#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"A点\"(求解,_A点)->变量#2(,_A点)...
->.#3\"B点\"(求解,_B点)->变量#3(,_B点)...
->.#4\"距离A\"(求解,_距离A)->变量#4(,_距离A)...
->.#5\"距离B\"(求解,_距离B)->变量#5(,_距离B)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"
[pt1,pt2]=joint_two_arms([%A点_x,%A点_y],[%B点_x,%B点_y],%距离A,%距离B);
%空间点_x=pt2[0];
%空间点_y=pt2[1];
"(,)
的#11""(两点定铰链#6,M代码#12)
M代码#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"A点\"(求解,_A点)->变量#2(,_A点)...
->.#3\"B点\"(求解,_B点)->变量#3(,_B点)...
->.#4\"距离A\"(求解,_距离A)->变量#4(,_距离A)...
->.#5\"距离B\"(求解,_距离B)->变量#5(,_距离B)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+函数库\"Matlab/gears\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])



"(,)
的#13""(M代码#12,M模板#14)
M模板#14"
[pt,~]=joint_two_arms([%A点_x,%A点_y],[%B点_x,%B点_y],%距离A,%距离B);
%空间点_x=pt(1);
%空间点_y=pt(2);
"(,)
的#15""(降临规则#4,整理代码#16)
整理代码#16"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#581, 284:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,铰链公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"空间点"(求解,)...
        ->."A点"(求解,)->."B点"(求解,)...
        ->."距离A"(求解,)->."距离B"(求解,)...
        ->+两点定铰链(求解,_凭依)->+的(操作,+两点定铰链)
}



## end
#583, 2913:
直线交点#0"

召唤规则:...
降临规则:...



"(,)
的#1""(直线交点#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,直线交点)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"空间点\"(求解,)...
        ->.\"A点\"(求解,)->.\"B点\"(求解,)...
        ->.\"方向A\"(求解,)->.\"方向B\"(求解,)...
        ->+方向点定交点(求解,_凭依)->+的(操作,+方向点定交点)
}


"(,)
的#3""(直线交点#0,降临规则#4)
降临规则#4"
整理代码:...

方向点定交点:...
+[修改标题]\"方向点定交点\"(,两点定铰链)
+[新建阅读窗口](,方向点定交点)
将'方向点定交点'的\"两点定铰链\"替换为\"方向点定交点\"


"(,)
的#5""(降临规则#4,方向点定交点#6)
方向点定交点#6"\"\"\"
M代码:...
JS代码:...
将条目\"M代码\"复制为条目\"JS代码\"

\"\"\"

+方向点定交点(求解,_凭依)->+[del](,+方向点定交点)...
->的(方向点定交点,M代码)->的(方向点定交点,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)



"(,)
的#7""(方向点定交点#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"A点\"(求解,_A点)->变量#2(,_A点)...
->.#3\"B点\"(求解,_B点)->变量#3(,_B点)...
->.#4\"方向A\"(求解,_方向A)->变量#4(,_方向A)...
->.#5\"方向B\"(求解,_方向B)->变量#5(,_方向B)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+函数库\"Matlab/space\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"// Solving the intersection of line_%方向A and line_%方向B
pt1=[%A点_x,%A点_y];
pt2=[%B点_x,%B点_y];
[%空间点_x,%空间点_y]=intersection_lines_dir_pt(pt1,%方向A,pt2,%方向B);

"(,)
的#11""(方向点定交点#6,M代码#12)
M代码#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"空间点\"(求解,_空间点)->变量#1(,_空间点)...
->.#2\"A点\"(求解,_A点)->变量#2(,_A点)...
->.#3\"B点\"(求解,_B点)->变量#3(,_B点)...
->.#4\"方向A\"(求解,_方向A)->变量#4(,_方向A)...
->.#5\"方向B\"(求解,_方向B)->变量#5(,_方向B)...

->+的(变量#1,+类型#1)->+类型#1\"xy坐标\"->+的(+类型#1,+来源#1)->+来源#1(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...

->+函数库\"Matlab/space\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])



"(,)
的#13""(M代码#12,M模板#14)
M模板#14"% Solving the intersection of %方向A and %方向B
pt1=[%A点_x,%A点_y];
theta1=%方向A/180*pi;
pt2=[%B点_x,%B点_y];
theta2=%方向B/180*pi;
[%空间点_x,%空间点_y]=intersection_lines_dir_pt(pt1,theta1,pt2,theta2);

"(,)
的#15""(降临规则#4,整理代码#16)
整理代码#16"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#585, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,直线交点)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"空间点"(求解,)...
        ->."A点"(求解,)->."B点"(求解,)...
        ->."方向A"(求解,)->."方向B"(求解,)...
        ->+方向点定交点(求解,_凭依)->+的(操作,+方向点定交点)
}



## end
#587, 873:
垂直公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(垂直公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,垂直公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"方向\"(求解,)->.\"方向\"(求解,)...
        ->+垂线定方向(求解,_凭依)->+的(操作,+垂线定方向)
}


"(,)
的#3""(垂直公式#0,降临规则#4)
降临规则#4"
整理代码:...

垂线定方向:...
+[新建阅读窗口](,垂线定方向)
+[修改标题]\"垂线定方向\"(,两点定直线)
将'垂线定方向'的\"两点定直线\"替换为\"垂线定方向\"


"(,)
的#5""(降临规则#4,垂线定方向#6)
垂线定方向#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+垂线定方向(求解,_凭依)->+[del](,+垂线定方向)...
->的(垂线定方向,M模板)...

->o#1\"方向\"(求解,_方向0)->变量#1(,_方向0)...
->.#2\"方向\"(求解,_方向)->变量#2(,_方向)...

->+[模板文本](M模板,_凭依)...
->+[.]\"输出\"(+[模板文本],变量#1)...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])



"(,)
的#7""(垂线定方向#6,M模板#8)
M模板#8"%输出=%方向+90;

"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#589, 221:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,垂直公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"方向"(求解,)->."方向"(求解,)...
        ->+垂线定方向(求解,_凭依)->+的(操作,+垂线定方向)
}



## end
#591, 883:
平行公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(平行公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,平行公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"方向\"(求解,)->.\"方向\"(求解,)...
        ->+平行线定方向(求解,_凭依)->+的(操作,+平行线定方向)
}


"(,)
的#3""(平行公式#0,降临规则#4)
降临规则#4"
整理代码:...

平行线定方向:...
+[新建阅读窗口](,平行线定方向)
+[修改标题]\"平行线定方向\"(,垂线定方向)
将'平行线定方向'的\"垂线定方向\"替换为\"平行线定方向\"


"(,)
的#5""(降临规则#4,平行线定方向#6)
平行线定方向#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+平行线定方向(求解,_凭依)->+[del](,+平行线定方向)...
->的(平行线定方向,M模板)...

->o#1\"方向\"(求解,_方向0)->变量#1(,_方向0)...
->.#2\"方向\"(求解,_方向)->变量#2(,_方向)...

->+[模板文本](M模板,_凭依)...
->+[.]\"输出\"(+[模板文本],变量#1)...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])



"(,)
的#7""(平行线定方向#6,M模板#8)
M模板#8"%输出=%方向;

"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#593, 223:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,平行公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"方向"(求解,)->."方向"(求解,)...
        ->+平行线定方向(求解,_凭依)->+的(操作,+平行线定方向)
}



## end
#595, 1393:
光栅GDD公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(光栅GDD公式#0,降临规则#2)
降临规则#2"
整理代码:...

公式1:...
+[修改标题]\"公式1\"(,方向点定交点)
+[新建阅读窗口](,公式1)
将'公式1'的\"方向B\"替换为\"光栅常数\"


"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,公式1#6)
公式1#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)
将M模板的\"theta_0\"替换为\"%夹角\"


\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"GDD\"(求解,_GDD)->变量#1(,_GDD)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...
->.#3\"夹角\"(求解,_夹角)->变量#3(,_夹角)...
->.#4\"距离\"(求解,_距离)->变量#4(,_距离)...
->.#5\"光栅常数\"(求解,_光栅常数)->变量#5(,_光栅常数)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])



"(,)
的#7""(公式1#6,M模板#8)
M模板#8"d=1e-3./%光栅常数;
%GDD=-(%波长.^(3).*%距离)./(pi.*c.^(2).*d.^(2)).*(1-((%波长)./(d)-sind(%夹角)).^(2)).^((-(3)./(2)));

"(,)
的#9""(光栅GDD公式#0,召唤规则#10)
召唤规则#10"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光栅对GDD公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"GDD\"(求解,)...
        ->.\"波长\"(求解,)->.\"夹角\"(求解,)...
        ->.\"光栅常数\"(求解,)->.\"距离\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}


"(,)

## end
#597, 284:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光栅对GDD公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"GDD"(求解,)...
        ->."波长"(求解,)->."夹角"(求解,)...
        ->."光栅常数"(求解,)->."距离"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}



## end
#599, 1503:
光栅TOD公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(光栅TOD公式#0,降临规则#2)
降临规则#2"
整理代码:...

公式1:...
+[修改标题]\"公式1\"(,方向点定交点)
+[新建阅读窗口](,公式1)
将'公式1'的\"方向B\"替换为\"光栅常数\"


"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,公式1#6)
公式1#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"


\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"TOD\"(求解,_TOD)->变量#1(,_TOD)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...
->.#3\"夹角\"(求解,_夹角)->变量#3(,_夹角)...
->.#4\"距离\"(求解,_距离)->变量#4(,_距离)...
->.#5\"光栅常数\"(求解,_光栅常数)->变量#5(,_光栅常数)...
->.#6\"GDD\"(求解,_GDD)->变量#6(,_GDD)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])...
->+[.](+[模板文本],变量#6)->[m_text](.#6,+[.])



"(,)
的#7""(公式1#6,M模板#8)
M模板#8"d=1e-3./%光栅常数;
%TOD=-(3.*%波长)./(2.*pi.*c).*(1+(%波长)./(d).*sind(%夹角)-sind(%夹角).^(2))./(1-((%波长)./(d)-sind(%夹角)).^(2)).*%GDD;

"(,)
的#9""(光栅TOD公式#0,召唤规则#10)
召唤规则#10"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光栅对TOD公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"TOD\"(求解,)->.\"GDD\"(求解,)...
        ->.\"波长\"(求解,)->.\"夹角\"(求解,)...
        ->.\"光栅常数\"(求解,)->.\"距离\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}


"(,)

## end
#601, 297:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光栅对TOD公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"TOD"(求解,)->."GDD"(求解,)...
        ->."波长"(求解,)->."夹角"(求解,)...
        ->."光栅常数"(求解,)->."距离"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}



## end
#603, 953:
夹角公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(夹角公式#0,降临规则#2)
降临规则#2"
整理代码:...

公式1:...
+[新建阅读窗口](,公式1)
+[修改标题]\"公式1\"(,垂线定方向)
将'公式1'的\"垂线定方向\"替换为\"公式1\"


"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,公式1#6)
公式1#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"方向\"(求解,_方向0)->变量#1(,_方向0)...
->.#2\"方向\"(求解,_方向)->变量#2(,_方向)...
->.#3\"夹角\"(求解,_夹角)->变量#3(,_夹角)...

->+[模板文本](M模板,_凭依)...
->+[.]\"输出\"(+[模板文本],变量#1)...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#7""(公式1#6,M模板#8)
M模板#8"%输出=%方向+%夹角;

"(,)
的#9""(夹角公式#0,召唤规则#10)
召唤规则#10"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,夹角公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"方向\"(求解,)->.\"方向\"(求解,)...
        ->.\"夹角\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}


"(,)

## end
#605, 241:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,夹角公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"方向"(求解,)->."方向"(求解,)...
        ->."夹角"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}



## end
#607, 969:
反射公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(反射公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,反射公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"方向\"(求解,)...
        ->.\"入射方向\"(求解,)->.\"平面方向\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}


"(,)
的#3""(反射公式#0,降临规则#4)
降临规则#4"
整理代码:...

公式1:...
+[新建阅读窗口](,公式1)
+[修改标题]\"公式1\"(,垂线定方向)
将'公式1'的\"垂线定方向\"替换为\"公式1\"


"(,)
的#5""(降临规则#4,公式1#6)
公式1#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"方向\"(求解,_方向0)->变量#1(,_方向0)...
->.#2\"入射方向\"(求解,_方向)->变量#2(,_方向)...
->.#3\"平面方向\"(求解,_方向1)->变量#3(,_方向1)...

->+[模板文本](M模板,_凭依)...
->+[.]\"输出\"(+[模板文本],变量#1)...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])



"(,)
的#7""(公式1#6,M模板#8)
M模板#8"%输出=2*%平面方向-%入射方向;

"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#609, 245:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,反射公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"方向"(求解,)...
        ->."入射方向"(求解,)->."平面方向"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}



## end
#611, 8025:
电透镜场景转代码#0"

召唤规则:...
降临规则:...


"(,)
的#1""(电透镜场景转代码#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"电透镜场景转代码\"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)
的#3""(电透镜场景转代码#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

设置变量:...
单体代码:...
整理代码:...
"(,)
的#5""(降临规则#4,设置变量#6)
设置变量#6"\"\"\"
描述结构:...
库:...

\"\"\"

+设置变量(_场景,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)->的(设置变量,库)...

->[]{
    []:->的(_代码,命名空间)->命名空间,->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#7""(设置变量#6,库#8)
库#8""(,)
的#9""(设置变量#6,描述结构#10)
描述结构#10"\"\"\"
P代码:...
P代码1:...

\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码1)...

->[python]\"
is_var=[0,0]
state=True
\"(Python,)...
->[]{
    []=>的(_场景,_物体)->_物体->在(_物体,空间点)...
    =>+变量名(,_物体)->+的(+操作,+变量名)...
    ->[]{
        []:->[]{的(_物体,速度)->速度}...
            ->+[code]([python]#1,P代码1)->[python]#1(Python,+变量名),
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
    }
}


"(,)
的#11""(描述结构#10,P代码1#12)
P代码1#12"\"\"\"


\"\"\"

is_var[1]+=1
ans='obj_%d'%(is_var[1])
state=True

"(,)
的#13""(描述结构#10,P代码#14)
P代码#14"\"\"\"


\"\"\"
is_var[0]+=1
ans='bg_%d'%(is_var[0])
state=True

"(,)
的#15""(降临规则#4,整理代码#16)
整理代码#16"\"\"\"
Nini, 打开PPT(文件)
M代码:...
M模板:...

样本:...

\"\"\"

+整理代码(,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M代码)...

->的(_代码,代码结构)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...

->+[标题](_代码,)...
->+[模板文本](M模板,_代码)->+[.](+[模板文本],+[标题])...
->[]{
    []=>的(代码结构,_模块)->_模块=>+[.](+[模板文本],_模块)
}...
->+[o]\"axis_\"(+[matlab],+[临时文本])->+[.]\"axis_\"(+[模板文本],+[临时文本])...

->+[删除结构](,_代码)

"(,)
的#17""(整理代码#16,M模板#18)
M模板#18"%{
+[M函数](,%[标题])
%}

physics_constant;
addpath('Matlab/Physics');
addpath('Matlab/SEM');

N=100;
Ni=30;
q=1;
m=1;

%设置电子源

dt=0.0003;
t=0;

B_z=@(x,y)zeros(size(x));
U=@(x,y,z)zeros(size(x));

% Einzel_lens_phi_3D
%设置透镜


dx=1e-6;
E_x0=@(X,Z)(U(X+dx,0*X,Z)-U(X-dx,0*X,Z))/2/dx;
E_z0=@(X,Z)(U(X,0*X,Z+dx)-U(X,0*X,Z-dx))/2/dx;

x0=linspace(-0.3,0.3,300);
z0=linspace(-0.1,2,300);
[X0,Z0]=meshgrid(x0,z0);
Ex=E_x0(X0,Z0);
Ez=E_z0(X0,Z0);

E_x=@(x,z)interp2(X0,Z0,Ex,x,z);
E_z=@(x,z)interp2(X0,Z0,Ez,x,z);

xs=zeros(Ni,N);
zs=zeros(Ni,N);


xs(1,:)=x;
zs(1,:)=z;
pxs(1,:)=px;
pzs(1,:)=pz;

for i=2:Ni
[x,z,px,pz]=EM_re_motion_RK4(x,z,px,pz,dt,t,q,m,B_z,E_x,E_z);

xs(i,:)=x;
zs(i,:)=z;
pxs(i,:)=px;
pzs(i,:)=pz;
end



subplot(2,1,1)
plot(zs,xs,'-o')
%axis equal
%axis([0,8,-2,2])

subplot(2,1,2)
surf(X0,Z0,U(X0,0*Z0,Z0))
% surf(X0,Z0,Ex)
view([90,90])
shading interp
axis equal
axis([-0.3,0.3,0,2])


figure
subplot(1,2,1)
hist(px./pz/1e-3)
xlabel('[mrad]')
subplot(1,2,2)
hist(x/1e-3)
xlabel('[mm]')


%{
+[M函数](,%[标题])
%}"(,)
的#19""(整理代码#16,M代码#20)
M代码#20"%{

%}


pt_x=get(gca,'Xlim');
pt_y=get(gca,'Ylim');
axis_=[pt_x,pt_y];


"(,)
的#21""(整理代码#16,样本#22)
样本#22"%{
+[M函数](,样本)
%}

physics_constant;
addpath('Matlab/Physics');
addpath('Matlab/SEM');

N=100;
Ni=30;
q=1;
m=1;

y=(rand(1,N)-0.5)*0.01;
x=(rand(1,N)-0.5)*0.01;
z=rand(1,N)*0;
pz=rand(1,N)+200;
py=(rand(1,N)-0.5)*0;
px=(rand(1,N)-0.5)*0;

dt=0.0003;
t=0;

B_z=@(x,y)zeros(size(x));
U=@(x,y,z)zeros(size(x));

% Einzel_lens_phi_3D
u_bg_1=8000;
H_bg_1=0.1;
R_bg_1=0.3;
R0_bg_1=0.02;
pt_bg_1=[0.0, 0.0, 0.5];
Eulers_bg_1=[0,0,0];

U_bg_1=@(X,Y,Z)Einzel_lens_phi_3D(X,Y,Z,pt_bg_1,Eulers_bg_1,u_bg_1,H_bg_1,R0_bg_1,R_bg_1);
U=@(X,Y,Z)U(X,Y,Z)+U_bg_1(X,Y,Z);

u_bg_2=8000;
H_bg_2=1.1;
R_bg_2=0.3;
R0_bg_2=0.06;
pt_bg_2=[0.0, 0.0, 1.0];
Eulers_bg_2=[0,0,0];

U_bg_2=@(X,Y,Z)Einzel_lens_phi_3D(X,Y,Z,pt_bg_2,Eulers_bg_2,u_bg_2,H_bg_2,R0_bg_2,R_bg_2);
U=@(X,Y,Z)U(X,Y,Z)+U_bg_2(X,Y,Z);

u_bg_3=8000;
H_bg_3=0.1;
R_bg_3=0.3;
R0_bg_3=0.02;
pt_bg_3=[0.0, 0.0, 1.5];
Eulers_bg_3=[0,0,0];

U_bg_3=@(X,Y,Z)Einzel_lens_phi_3D(X,Y,Z,pt_bg_3,Eulers_bg_3,u_bg_3,H_bg_3,R0_bg_3,R_bg_3);
U=@(X,Y,Z)U(X,Y,Z)+U_bg_3(X,Y,Z);



dx=1e-6;
E_x0=@(X,Z)(U(X+dx,0*X,Z)-U(X-dx,0*X,Z))/2/dx;
E_z0=@(X,Z)(U(X,0*X,Z+dx)-U(X,0*X,Z-dx))/2/dx;

x0=linspace(-0.3,0.3,300);
z0=linspace(-0.1,2,300);
[X0,Z0]=meshgrid(x0,z0);
Ex=E_x0(X0,Z0);
Ez=E_z0(X0,Z0);

E_x=@(x,z)interp2(X0,Z0,Ex,x,z);
E_z=@(x,z)interp2(X0,Z0,Ez,x,z);

xs=zeros(Ni,N);
zs=zeros(Ni,N);


xs(1,:)=x;
zs(1,:)=z;
pxs(1,:)=px;
pzs(1,:)=pz;

for i=2:Ni
[x,z,px,pz]=EM_re_motion_RK4(x,z,px,pz,dt,t,q,m,B_z,E_x,E_z);

xs(i,:)=x;
zs(i,:)=z;
pxs(i,:)=px;
pzs(i,:)=pz;
end



subplot(2,1,1)
plot(zs,xs,'-o')
%axis equal
%axis([0,8,-2,2])

subplot(2,1,2)
surf(X0,Z0,U(X0,0*Z0,Z0))
% surf(X0,Z0,Ex)
view([90,90])
shading interp
axis equal
axis([-0.3,0.3,0,2])


figure
subplot(1,2,1)
hist(px./pz/1e-3)
xlabel('[mrad]')
subplot(1,2,2)
hist(x/1e-3)
xlabel('[mm]')


%{
clf
size(Y*0)
Einzel_lens_phi_3D(X,Y,X*0,pt0,Eulers0,U0,H,R0,R);
+[M函数](,样本)
%}"(,)
的#23""(降临规则#4,单体代码#24)
单体代码#24"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+单体代码(_场景,_代码)->+[del](,+单体代码)...
->的(单体代码,描述结构)->的(单体代码,库)...

->[]{
    []:->的(_代码,代码结构)->代码结构,
    ->+的(_代码,+代码结构)...
        ->+的(+代码结构,+设置电子源)->+的(+代码结构,+设置透镜)...
        ->+的(+代码结构,+设置观测平面)
}...

->+[code]([想],描述结构)->[想](,_场景)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_物体,_代码)->+[code](+[做],_条目)->+[.](+[做],_场景)
}


"(,)
的#25""(单体代码#24,库#26)
库#26"
+[del](,设置电子源)
设置电子源:...
设置透镜:...
设置观测平面:...
将条目\"设置透镜\"复制为条目\"设置电子源\"

将'设置透镜'的\"运动物体\"替换为\"设置透镜\"
在选择区域中, 将'设置透镜'的\"内径\"替换为\"电压\"
+[新建阅读窗口](,设置透镜)





"(,)
的#27""(库#26,设置电子源#28)
设置电子源#28"\"\"\"
M代码:...
M模板:...
+[新建阅读窗口](,测试代码)

\"\"\"

+设置电子源(_物体,_代码)->+[del](,+设置电子源)...
->的(设置电子源,M代码)->的(设置电子源,M模板)...

->.(+设置电子源,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)->的(代码结构,设置电子源#0)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...
->[]{
    []:->的(_物体,能量)->能量, ->+的(_物体,+能量)->+能量\"0\"
}...
->[]{
    []:->的(_物体,尺寸)->尺寸, ->+的(_物体,+尺寸)->+尺寸\"0\"
}...
->[]{
    []:->的(_物体,发散度)->发散度, ->+的(_物体,+发散度)->+发散度\"0\"
}...

->的(_物体,发散度)->的(_物体,能量)->的(_物体,尺寸)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[模板文本](M模板,+[增加内容2]#1)->+[增加内容2]#1(,设置电子源#0)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],能量)->+[.](+[模板文本],发散度)->+[.](+[模板文本],尺寸)


"(,)
的#29""(设置电子源#28,M模板#30)
M模板#30"pt_%变量=[%空间点];
y=(rand(1,N)-0.5)*%尺寸+pt_%变量(2);
x=(rand(1,N)-0.5)*%尺寸+pt_%变量(1);
z=rand(1,N)*0+pt_%变量(3);
pz=200*ones(1,N);
py=(rand(1,N)-0.5)*%发散度.*pz;
px=(rand(1,N)-0.5)*%发散度.*pz;

"(,)
的#31""(设置电子源#28,M代码#32)
M代码#32""(,)
的#33""(库#26,设置观测平面#34)
设置观测平面#34""(,)
的#35""(库#26,设置透镜#36)
设置透镜#36"\"\"\"
M代码:...
M模板:...
+[新建阅读窗口](,测试代码)

\"\"\"

+设置透镜(_物体,_代码)->+[del](,+设置透镜)...
->的(设置透镜,M代码)->的(设置透镜,M模板)...

->.(+设置透镜,_场景)...

->的(_代码,命名空间)->的(命名空间,变量)->变量(,_物体)...
->的(_代码,代码结构)->的(代码结构,设置透镜#0)...

->[]{
    []:->在(_物体,空间点)->空间点, ->+在(_物体,+空间点)->+空间点\"0,0,0\"
}...
->[]{
    []:->朝向(_物体,方向)->方向, ->+朝向(_物体,+方向)->+方向\"0,0,0\"
}...
->[]{
    []:->的(_物体,内径)->内径, ->+的(_物体,+内径)->+内径\"0\"
}...
->[]{
    []:->的(_物体,电压)->电压, ->+的(_物体,+电压)->+电压\"0\"
}...

->的(_物体,半径)->的(_物体,高度)->的(_物体,内径)->的(_物体,电压)...
->在(_物体,空间点)->朝向(_物体,方向)...

->+[模板文本](M模板,+[增加内容2]#1)->+[增加内容2]#1(,设置透镜#0)...
->+[.](+[模板文本],变量)->+[.](+[模板文本],空间点)->+[.](+[模板文本],方向)...
->+[.](+[模板文本],半径)->+[.](+[模板文本],高度)->+[.](+[模板文本],内径)...
->+[.](+[模板文本],电压)


"(,)
的#37""(设置透镜#36,M代码#38)
M代码#38""(,)
的#39""(设置透镜#36,M模板#40)
M模板#40"u_%变量=%电压;
H_%变量=%高度;
R_%变量=%半径;
R0_%变量=%内径;
pt_%变量=[%空间点];
Eulers_%变量=[%方向];

U_%变量=@(X,Y,Z)Einzel_lens_phi_3D(X,Y,Z,pt_%变量,Eulers_%变量,u_%变量,H_%变量,R0_%变量,R_%变量);
U=@(X,Y,Z)U(X,Y,Z)+U_%变量(X,Y,Z);

"(,)
的#41""(单体代码#24,描述结构#42)
描述结构#42"\"\"\"


\"\"\"

+描述结构(,_场景)->+操作(+描述结构,)...

->[]{
    []=>的(_场景,_物体)->_物体(,)...
    =>[]:
        ->[]{的(_物体,半径)->半径}...
            ->+设置透镜(,_物体)->+的(+操作,+设置透镜),
        ->[]{的(_物体,能量)->能量}...
            ->+设置电子源(,_物体)->+的(+操作,+设置电子源),
        ->[]{的(_物体,宽度)->宽度}...
            ->+设置观测平面(,_物体)->+的(+操作,+设置观测平面),
        ->[]
}


"(,)

## end
#613, 189:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"电透镜场景转代码"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+单体代码(_媒介,_凭依)->+的(操作,+单体代码)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#615, 8753:
光学基本量#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"光栅对TOD公式\"替换为\"光学基本量\"

"(,)
的#1""(光学基本量#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光学基本量)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"波长\"(求解,)->.\"波数\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"波长\"(求解,)->.\"角频率\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2),

    ->o\"角频率\"(求解,)->.\"波长\"(求解,)...
        ->+公式3(求解,_凭依)->+的(操作,+公式3),
    ->o\"角频率\"(求解,)->.\"波数\"(求解,)...
        ->+公式4(求解,_凭依)->+的(操作,+公式4),

    ->o\"波数\"(求解,)->.\"波长\"(求解,)...
        ->+公式5(求解,_凭依)->+的(操作,+公式5),
    ->o\"波数\"(求解,)->.\"角频率\"(求解,)...
        ->+公式6(求解,_凭依)->+的(操作,+公式6)
}


"(,)
的#3""(光学基本量#0,降临规则#4)
降临规则#4"
整理代码:...


的(降临规则,公式1)->+[有](+公式1,公式1)->+[del](,的)->+[修改标题]\"M代码\"(,公式1)
的(降临规则,公式2)->+[有](+公式2,公式2)->+[del](,的)->+[修改标题]\"M代码\"(,公式2)
公式1:...
公式2:...

的(降临规则,公式3)->+[有](+公式3,公式3)->+[del](,的)->+[修改标题]\"M代码\"(,公式3)
的(降临规则,公式4)->+[有](+公式4,公式4)->+[del](,的)->+[修改标题]\"M代码\"(,公式4)
公式3:...
公式4:...
+[新建阅读窗口](,公式3)
将公式4的\"公式2\"替换为\"公式4\"

的(降临规则,公式5)->+[有](+公式5,公式5)->+[del](,的)->+[修改标题]\"M代码\"(,公式5)
的(降临规则,公式6)->+[有](+公式6,公式6)->+[del](,的)->+[修改标题]\"M代码\"(,公式6)
公式5:...
公式6:...
将公式6的\"公式2\"替换为\"公式6\"


将条目\"公式5\"复制为条目\"公式6\"
在选择区域中, 将'公式1'的\"波长\"替换为\"波数\"
将'公式6'的\"波长\"替换为\"角频率\"
+[新建阅读窗口](,公式6)


"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式1#8)
公式1#8"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式1#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"波长\"(求解,_波长)->变量#1(,_波长)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%波长=2*\pi/%波数
"(,)
的#13""(公式1#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"波长\"(求解,_波长)->变量#1(,_波长)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"%波长=2*pi/%波数;
"(,)
的#17""(降临规则#4,公式2#18)
公式2#18"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式2#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"波长\"(求解,_波长)->变量#1(,_波长)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%波长=2*\pi*c/%角频率
"(,)
的#23""(公式2#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"波长\"(求解,_波长)->变量#1(,_波长)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"%波长=2*pi*c/%角频率;
"(,)
的#27""(降临规则#4,公式3#28)
公式3#28"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式3\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式3(求解,_凭依)->+[del](,+公式3)...
->的(公式3,M代码)->的(公式3,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#29""(公式3#28,表达式#30)
表达式#30"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#31""(表达式#30,M模板#32)
M模板#32"%角频率=2*\pi*c/%波长
"(,)
的#33""(公式3#28,M代码#34)
M代码#34"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#35""(M代码#34,M模板#36)
M模板#36"%角频率=2*pi*c/%波长;
"(,)
的#37""(降临规则#4,公式4#38)
公式4#38"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式4\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式4(求解,_凭依)->+[del](,+公式4)...
->的(公式4,M代码)->的(公式4,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#39""(公式4#38,表达式#40)
表达式#40"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#41""(表达式#40,M模板#42)
M模板#42"%角频率=%波数*c
"(,)
的#43""(公式4#38,M代码#44)
M代码#44"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"角频率\"(求解,_角频率)->变量#1(,_角频率)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#45""(M代码#44,M模板#46)
M模板#46"%角频率=%波数*c;
"(,)
的#47""(降临规则#4,公式5#48)
公式5#48"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式5\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式5(求解,_凭依)->+[del](,+公式5)...
->的(公式5,M代码)->的(公式5,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#49""(公式5#48,表达式#50)
表达式#50"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#51""(表达式#50,M模板#52)
M模板#52"%波数=2*\pi/%波长
"(,)
的#53""(公式5#48,M代码#54)
M代码#54"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"波长\"(求解,_波长)->变量#2(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#55""(M代码#54,M模板#56)
M模板#56"%波数=2*pi/%波长;
"(,)
的#57""(降临规则#4,公式6#58)
公式6#58"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式6\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式6(求解,_凭依)->+[del](,+公式6)...
->的(公式6,M代码)->的(公式6,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#59""(公式6#58,表达式#60)
表达式#60"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#61""(表达式#60,M模板#62)
M模板#62"%波数=%角频率/c
"(,)
的#63""(公式6#58,M代码#64)
M代码#64"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开LWFA数据分析(文件)
将M模板的\"GDD\"替换为\"%GDD\"

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"角频率\"(求解,_角频率)->变量#2(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#65""(M代码#64,M模板#66)
M模板#66"%波数=%角频率/c;
"(,)

## end
#617, 569:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光学基本量)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"波长"(求解,)->."波数"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"波长"(求解,)->."角频率"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2),

    ->o"角频率"(求解,)->."波长"(求解,)...
        ->+公式3(求解,_凭依)->+的(操作,+公式3),
    ->o"角频率"(求解,)->."波数"(求解,)...
        ->+公式4(求解,_凭依)->+的(操作,+公式4),

    ->o"波数"(求解,)->."波长"(求解,)...
        ->+公式5(求解,_凭依)->+的(操作,+公式5),
    ->o"波数"(求解,)->."角频率"(求解,)...
        ->+公式6(求解,_凭依)->+的(操作,+公式6)
}



## end
#619, 3886:
光强定义#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"密度\"替换为\"能量\"

"(,)
的#1""(光强定义#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光强定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"光强\"(求解,)->.\"能量\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"能量\"(求解,)->.\"光强\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(光强定义#0,降临规则#4)
降临规则#4"
整理代码:...

的(降临规则,公式1)->+[有](+公式1,公式1)->+[del](,的)->+[修改标题]\"M代码\"(,公式1)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"能量\"替换为\"光强\"
将'公式1'的\"密度\"替换为\"能量\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式2#8)
公式2#8"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式2#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"能量\"(求解,_能量)->变量#1(,_能量)...
->.#2\"光强\"(求解,_光强)->变量#2(,_光强)...
->.#3\"腰宽\"(求解,_腰宽)->变量#3(,_腰宽)...
->.#4\"展宽\"(求解,_展宽)->变量#4(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%能量=\frac{\sqrt{\pi}*\pi}{2}*%光强*%腰宽^2*%展宽
"(,)
的#13""(公式2#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"能量\"(求解,_能量)->变量#1(,_能量)...
->.#2\"光强\"(求解,_光强)->变量#2(,_光强)...
->.#3\"腰宽\"(求解,_腰宽)->变量#3(,_腰宽)...
->.#4\"展宽\"(求解,_展宽)->变量#4(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"% I=@(r,t)%光强.*exp(-2.*r.^(2)./%腰宽.^(2)).*exp(-t.^(2)./%展宽.^(2))
%能量=%光强.*(sqrt(pi).*pi.*%腰宽.^(2).*%展宽)/2;
"(,)
的#17""(降临规则#4,公式1#18)
公式1#18"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式1#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"光强\"(求解,_光强)->变量#1(,_光强)...
->.#2\"能量\"(求解,_能量)->变量#2(,_能量)...
->.#3\"腰宽\"(求解,_腰宽)->变量#3(,_腰宽)...
->.#4\"展宽\"(求解,_展宽)->变量#4(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%光强=\frac{2*%能量}{\sqrt{\pi}*\pi*%腰宽^2*%展宽}
"(,)
的#23""(公式1#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"光强\"(求解,_光强)->变量#1(,_光强)...
->.#2\"能量\"(求解,_能量)->变量#2(,_能量)...
->.#3\"腰宽\"(求解,_腰宽)->变量#3(,_腰宽)...
->.#4\"展宽\"(求解,_展宽)->变量#4(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"% I=@(r,t)%光强.*exp(-2.*r.^(2)./%腰宽.^(2)).*exp(-t.^(2)./%展宽.^(2))
%光强=(2.*%能量)./(sqrt(pi).*pi.*%腰宽.^(2).*%展宽);
"(,)

## end
#621, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光强定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"光强"(求解,)->."能量"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"能量"(求解,)->."光强"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#623, 3452:
功率定义#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"光强\"替换为\"功率\"

"(,)
的#1""(功率定义#0,降临规则#2)
降临规则#2"
整理代码:...

有什么
的(降临规则,公式2)->+[有](+公式2,公式2)->+[del](,的)->+[修改标题]\"M代码\"(,公式2)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式1'的\"光强\"替换为\"功率\"
将'公式2'的\"光强\"替换为\"功率\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,公式1#6)
公式1#6"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#7""(公式1#6,表达式#8)
表达式#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"功率\"(求解,_功率)->变量#1(,_功率)...
->.#2\"能量\"(求解,_能量)->变量#2(,_能量)...
->.#3\"展宽\"(求解,_展宽)->变量#3(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#9""(表达式#8,M模板#10)
M模板#10"%功率=\frac{%能量}{\sqrt{pi}*%展宽}
"(,)
的#11""(公式1#6,M代码#12)
M代码#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"功率\"(求解,_功率)->变量#1(,_功率)...
->.#2\"能量\"(求解,_能量)->变量#2(,_能量)...
->.#3\"展宽\"(求解,_展宽)->变量#3(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#13""(M代码#12,M模板#14)
M模板#14"% I=@(r,t)%功率.*exp(-t.^(2)./%展宽.^(2))
%功率=(%能量)./(sqrt(pi).*%展宽);
"(,)
的#15""(降临规则#2,公式2#16)
公式2#16"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#17""(公式2#16,表达式#18)
表达式#18"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"能量\"(求解,_能量)->变量#1(,_能量)...
->.#2\"功率\"(求解,_功率)->变量#2(,_功率)...
->.#3\"展宽\"(求解,_展宽)->变量#3(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#19""(表达式#18,M模板#20)
M模板#20"%能量=\sqrt{pi}*%功率*%展宽
"(,)
的#21""(公式2#16,M代码#22)
M代码#22"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"能量\"(求解,_能量)->变量#1(,_能量)...
->.#2\"功率\"(求解,_功率)->变量#2(,_功率)...
->.#3\"展宽\"(求解,_展宽)->变量#3(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#23""(M代码#22,M模板#24)
M模板#24"% I=@(r,t)%功率.*exp(-t.^(2)./%展宽.^(2))
%能量=%功率.*(sqrt(pi).*%展宽);
"(,)
的#25""(功率定义#0,召唤规则#26)
召唤规则#26"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,功率定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"功率\"(求解,)->.\"能量\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"能量\"(求解,)->.\"功率\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)

## end
#625, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,功率定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"功率"(求解,)->."能量"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"能量"(求解,)->."功率"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#627, 3469:
A0定义#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"光强\"

"(,)
的#1""(A0定义#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,A0定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"A0\"(求解,)->.\"光强\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"光强\"(求解,)->.\"A0\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(A0定义#0,降临规则#4)
降临规则#4"
整理代码:...

的(降临规则,公式1)->+[有](+公式1,公式1)->+[del](,的)->+[修改标题]\"M代码\"(,公式1)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式1'的\"腰宽\"替换为\"波长\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式2#8)
公式2#8"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式2#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"光强\"(求解,_光强)->变量#1(,_光强)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%光强=\frac{2*c}{\mu_0}*(\frac{%A0*\pi}{%波长})^2
"(,)
的#13""(公式2#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"光强\"(求解,_光强)->变量#1(,_光强)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"% In SI Units
%光强=(%A0.*pi./%波长).^2.*2.*c./mu_0;
"(,)
的#17""(降临规则#4,公式1#18)
公式1#18"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式1#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"光强\"(求解,_光强)->变量#2(,_光强)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%A0=\frac{%波长}{\pi}*\sqrt{\frac{%光强*\mu_0}{2*c}}
"(,)
的#23""(公式1#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"光强\"(求解,_光强)->变量#2(,_光强)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"% In SI Units
%A0=(%波长)./(pi).*sqrt((%光强.*mu_0)./(2.*c));
"(,)

## end
#629, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,A0定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"A0"(求解,)->."光强"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"光强"(求解,)->."A0"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#631, 3037:
a0定义#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"光强\"替换为\"A0\"

"(,)
的#1""(a0定义#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,a0定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"a0\"(求解,)->.\"A0\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"A0\"(求解,)->.\"a0\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(a0定义#0,降临规则#4)
降临规则#4"
整理代码:...

的(降临规则,公式1)->+[有](+公式1,公式1)->+[del](,的)->+[修改标题]\"M代码\"(,公式1)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式2'的\"光强\"替换为\"A0\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式2#8)
公式2#8"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式2#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"a0\"(求解,_a0)->变量#2(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%A0=%a0*m_e*c/e
"(,)
的#13""(公式2#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"a0\"(求解,_a0)->变量#2(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"%A0=%a0.*(m_e.*c)./e;
"(,)
的#17""(降临规则#4,公式1#18)
公式1#18"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式1#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"a0\"(求解,_a0)->变量#1(,_a0)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%a0=\frac{e*%A0}{m_e*c}
"(,)
的#23""(公式1#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"a0\"(求解,_a0)->变量#1(,_a0)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"%a0=(e.*%A0)./(m_e.*c);
"(,)

## end
#633, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,a0定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"a0"(求解,)->."A0"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"A0"(求解,)->."a0"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#635, 1653:
极限焦点#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"光强\"替换为\"N\"

"(,)
的#1""(极限焦点#0,降临规则#2)
降临规则#2"
整理代码:...

公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式2'的\"A0\"替换为\"腰宽\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#3""(降临规则#2,公式1#4)
公式1#4"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"腰宽\"(求解,_腰宽)->变量#1(,_腰宽)...
->.#2\"N\"(求解,_N)->变量#2(,_N)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#5""(公式1#4,M模板#6)
M模板#6"%腰宽=(2.*%N.*%波长)./(pi);
"(,)
的#7""(降临规则#2,整理代码#8)
整理代码#8"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#9""(降临规则#2,公式2#10)
公式2#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M模板)...

->o#1\"N\"(求解,_N)->变量#1(,_N)...
->.#2\"腰宽\"(求解,_腰宽)->变量#2(,_腰宽)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#11""(公式2#10,M模板#12)
M模板#12"%N=%腰宽*pi./%波长/2;
"(,)
的#13""(极限焦点#0,召唤规则#14)
召唤规则#14"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,极限焦点)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"腰宽\"(求解,)->.\"N\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"N\"(求解,)->.\"腰宽\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)

## end
#637, 284:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,极限焦点)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"腰宽"(求解,)->."N"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"N"(求解,)->."腰宽"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#639, 3265:
LWFA匹配条件#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"光强\"替换为\"波数\"

"(,)
的#1""(LWFA匹配条件#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,LWFA匹配条件)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"腰宽\"(求解,)->.\"波数\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"波数\"(求解,)->.\"腰宽\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(LWFA匹配条件#0,降临规则#4)
降临规则#4"
整理代码:...

的(降临规则,公式2)->+[有](+公式2,公式2)->+[del](,的)->+[修改标题]\"M代码\"(,公式2)
公式1:...
公式2:...
+[新建阅读窗口](,公式2)



"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,公式1#8)
公式1#8"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#9""(公式1#8,表达式#10)
表达式#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"腰宽\"(求解,_腰宽)->变量#1(,_腰宽)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...
->.#3\"a0\"(求解,_a0)->变量#3(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#11""(表达式#10,M模板#12)
M模板#12"%腰宽=2*\sqrt{%a0}/%波数"(,)
的#13""(公式1#8,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"腰宽\"(求解,_腰宽)->变量#1(,_腰宽)...
->.#2\"波数\"(求解,_波数)->变量#2(,_波数)...
->.#3\"a0\"(求解,_a0)->变量#3(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#15""(M代码#14,M模板#16)
M模板#16"%腰宽=2.*sqrt(%a0)./%波数;
"(,)
的#17""(降临规则#4,公式2#18)
公式2#18"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#19""(公式2#18,表达式#20)
表达式#20"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"腰宽\"(求解,_腰宽)->变量#2(,_腰宽)...
->.#3\"a0\"(求解,_a0)->变量#3(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#21""(表达式#20,M模板#22)
M模板#22"%波数=2*\sqrt{%a0}/%腰宽
"(,)
的#23""(公式2#18,M代码#24)
M代码#24"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"波数\"(求解,_波数)->变量#1(,_波数)...
->.#2\"腰宽\"(求解,_腰宽)->变量#2(,_腰宽)...
->.#3\"a0\"(求解,_a0)->变量#3(,_a0)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#25""(M代码#24,M模板#26)
M模板#26"%波数=2.*sqrt(%a0)./%腰宽;
"(,)

## end
#641, 290:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,LWFA匹配条件)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"腰宽"(求解,)->."波数"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"波数"(求解,)->."腰宽"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#643, 48429:
文本转换_博客#0"

召唤规则:...
降临规则:...




"(,)
的#1""(文本转换_博客#0,降临规则#2)
降临规则#2"+[粘贴](,降临规则)

引用文章:...
章节内容:...

整体架构:...

整理引用:...
整理内容:...
整理图片:...
+[新建阅读窗口](,章节内容)
将'引用文章'的\"作者\"替换为\"文章\"


"(,)
的#3""(降临规则#2,整理图片#4)
整理图片#4"\"\"\"
P代码:...
P代码2:...
+[新建阅读窗口](,P代码)

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

\"\"\"

+整理图片(_媒介,_凭依)->+[del](,+整理图片)...
->的(整理图片,P代码)->的(整理图片,P代码2)...

->的#0(_凭依,地址)->+[标题](_凭依,)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"file_name\"(+[python],+[标题])->+[.]\"folder_dir\"(+[python],地址)...
->+[保存文本](+[临时文本],_凭依)...

->[]{
    []=>的(_媒介,二级标题)->二级标题->的(二级标题,图片)...
    ->的(图片,源地址)->的(图片,目标地址)...
        =>+[python](Python,)->+[code](+[python],P代码2)...
        ->+[.]\"src_dir\"(+[python],源地址)->+[.]\"tar_dir\"(+[python],目标地址)...
        ->+[.]\"folder_dir\"(+[python],地址)
}...

->+[del](,的#0)...
->+[删除结构](,_凭依)...
->+[有](_凭依,地址)




"(,)
的#5""(整理图片#4,P代码2#6)
P代码2#6"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))
保存:...

\"\"\"

import os
os.system(\"cp %s %s/%s\"%(src_dir,folder_dir,tar_dir))

"(,)
的#7""(P代码2#6,保存#8)
保存#8"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))

\"\"\"

import shutil
# print(src_dir,tar_dir)
# ans=\"%s\%s.tex\"%(folder_dir,file_name)
shutil.copy(src_dir,\"%s\\%s\"%(folder_dir,tar_dir))

"(,)
的#9""(整理图片#4,P代码#10)
P代码#10"\"\"\"


\"\"\"


ans=\"%s\\text.tex\"%(folder_dir)

"(,)
的#11""(降临规则#2,引用文章#12)
引用文章#12"\"\"\"
描述结构:...
设置引用:...
+[新建阅读窗口](,描述结构)

\"\"\"

+引用文章(_文章,_文本)->+[del](,+引用文章)...
->的(引用文章,描述结构)->的(引用文章,设置引用)...

->+的(_文本,+引用)...
->+[code]([想],描述结构)->[想](_文章,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,文章)->文章(_节点,)->_节点(,)...
    =>+[获取论文信息](+[临时文本],+文章A)->[m_text](文章,+[临时文本])...
        ->[标题](_节点,)->[m_text]([标题],+文章A)...
        ->+[做](+文章A,+引用)->+[code](+[做],设置引用)...
        ->+[删除结构](,+文章A)->+[del](,+文章A)
}


"(,)
的#13""(引用文章#12,设置引用#14)
设置引用#14"\"\"\"
P代码:...
模板库:...

\"\"\"

+设置引用(文章A,引用)->+[del](,+设置引用)...
->的(设置引用,模板库)->的(设置引用,P代码)...

->的(文章A,类型)->的(文章A,作者)...
->+[python](Python,作者)->+[code](+[python],P代码)...
->+[s]\"text_aus\"(+[python],作者)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,引用)...
->[]{
    []:->[==]\"ARTICLE\"(,类型)->的(模板库,文章#0)->+[code](+[模板文本],文章#0),
    ->[==]\"PROCEEDINGS\"(,类型)->的(模板库,会议#0)->+[code](+[模板文本],会议#0),
    ->[==]\"ArXiv\"(,类型)->的(模板库,预印本#0)->+[code](+[模板文本],预印本#0),
    ->的(模板库,文章#1)->+[code](+[模板文本],文章#1)
}...

->+[.]\"引用名\"(+[模板文本],文章A)...
->[]{
    []=>的(文章A,_性质)->_性质=>+[.](+[模板文本],_性质)
}



"(,)
的#15""(设置引用#14,P代码#16)
P代码#16"\"\"\"
记住\"Python\"

print(text_aus)
print(list_aus)

\"\"\"

# print(text_aus)
# print(text_aus.split(', '))
# print(' and '.join(text_aus.split(', ')))

list_aus0=text_aus.split(', ')
if len(list_aus0)>3:
    list_aus=list_aus0[0:3]+['others']
else:
    list_aus=list_aus0
ans=' and '.join(list_aus)


"(,)
的#17""(设置引用#14,模板库#18)
模板库#18"

文章:...
会议:...
预印本:...

"(,)
的#19""(模板库#18,会议#20)
会议#20"
@PROCEEDINGS{%引用名,
   title = \"%标题\",
   number = \"%编号\",
   editor = \"\", 

   series = \"All ACM Conferences\",
   month = \"\",
   year = \"%年份\",
   address = \"%城市地址\",
   organization = \"%组织\",
   publisher = \"%会议\",
}
"(,)
的#21""(模板库#18,文章#22)
文章#22"
@ARTICLE{%引用名,
   author       = \"%作者\",
   title        = \"%标题\",
   journal      = \"%期刊\",
   volume       = \"%编号\", 
   pages        = \"%页数\",
   year         = \"%年份\",
}
"(,)
的#23""(模板库#18,预印本#24)
预印本#24"
@ARTICLE{%引用名, 
   author        = \"%作者\", 
   title         = \"%标题\", 
   journal = {ArXiv e-prints},
   archivePrefix = \"arXiv\",
   eprint        = {%eprint},
   primaryClass  = \"%类别\",
   year          = \"%日期\",
}



"(,)
的#25""(引用文章#12,描述结构#26)
描述结构#26"\"\"\"
P代码:...

\"\"\"

+描述结构(_文章,)->+操作(+描述结构,)...
->的(描述结构,P代码)...

=>的(_文章,_节点)->引用(_节点,)...
=>+的(+操作,+文章)->+文章(_节点,)...
->+[.]\"paper_link\"([python],_节点)->+[code]([python],P代码)...
->[python](Python,+文章)



"(,)
的#27""(描述结构#26,P代码#28)
P代码#28"\"\"\"
记住\"Python\"

\"\"\"

ans=paper_link.split('#')[0]
state=True
"(,)
的#29""(降临规则#2,整理内容#30)
整理内容#30"\"\"\"
P代码:...
L模板:...

保存:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]->的(_内容,地址#0)->[]{
    []=>的(_内容,_章节)->的(_章节,地址)=>+[增加内容2](地址#0,地址)...
        ->+[保存文本](,_章节)...
        ->+[标题](_章节,)->+[增加内容]\"%s:...
\"(+[标题],+[临时文本])
}...

->+[修改内容](+[临时文本],_内容)


"(,)
的#31""(整理内容#30,P代码#32)
P代码#32"\"\"\"
print(\"112%13%1\".replace('%','\\%'))

\"\"\"

ans=file_text.replace('%','\\%')


"(,)
的#33""(整理内容#30,L模板#34)
L模板#34"
%标题
%作者

%概述


%章节



"(,)
的#35""(整理内容#30,保存#36)
保存#36"\"\"\"
P代码:...
L模板:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]#章节->[]{
    []=>的(_内容,章节)->章节=>+[增加内容](章节,+[临时文本]#章节)
}...
->+[python](Python,+[临时文本]#章节)->+[code](+[python],P代码)...
->+[s]\"file_text\"(+[python],+[临时文本]#章节)...

->+[模板文本](L模板,_内容)...
->+[.]\"章节\"(+[模板文本],+[临时文本]#章节)...
->[]{
    []:->的(_内容,标题)->标题->+[.](+[模板文本],标题),->[]
}...
->[]{
    []:->的(_内容,作者)->作者->+[.](+[模板文本],作者),->[]
}...
->[]{
    []:->的(_内容,概述)->概述->+[.](+[模板文本],概述),->[]
}...
->[]{
    []:->的(_内容,引用)->引用->+[.](+[模板文本],引用),->[]
}


"(,)
的#37""(降临规则#2,章节内容#38)
章节内容#38"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+章节内容(_章节结构,_文本)->+[del](,+章节内容)...
->的(章节内容,描述结构)->的(章节内容,库)...

->+[code]([想],描述结构)->[想](_章节结构,_文本)...
->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)->+[做](_主语,_宾语)->+[code](+[做],_条目)
}




"(,)
的#39""(章节内容#38,库#40)
库#40"

生成标题:...
生成作者:...
生成概述:...
生成章节:...
生成附录:...
将条目\"生成章节\"复制为条目\"生成附录\"
将'生成作者'的\"章节\"替换为\"作者\"

"(,)
的#41""(库#40,生成作者#42)
生成作者#42"\"\"\"
描述结构:...
库:...

\"\"\"

+生成作者(_作者,_文本)->+[del](,+生成作者)...
->的(生成作者,描述结构)->的(生成作者,库)...
->的(库,通讯作者)->的(库,普通作者)...

->+的(_文本,+作者)...
->+[code]([想],描述结构)->[想](_作者,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,作者)->作者(类型,)->类型(,)...
    =>+[获取作者信息](,+作者A)->[m_text](作者,+[获取作者信息])...
    ->+[做](+作者A,+作者)...
    ->+[删除结构](,+作者A)->+[del](,+作者A)->[]:
        ->[==]\"通讯\"(,类型)->+[code](+[做],通讯作者),
        ->+[code](+[做],普通作者)
}


"(,)
的#43""(生成作者#42,描述结构#44)
描述结构#44"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_作者,)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码2)...

->+[.]\"text_au\"([python],_作者)...
->+[code]([python],P代码)->[python](Python,)...
->+[code]([python]#2,P代码2)...

->+不终止=>[python]\"state=(list_i<len(list_au))\"(Python,+不终止)...
=>+的(+操作,+作者)->+作者(+类型,)...
->+[o]\"type_name\"([python]#2,+类型)->[python]#2(Python,+作者)


"(,)
的#45""(描述结构#44,P代码2#46)
P代码2#46"\"\"\"


\"\"\"

name=list_au[list_i]
list_i+=1
if name[-1]=='*':
    name=name[0:-1]
    type_name='通讯'
else:
    type_name=\"普通\"
ans=name

"(,)
的#47""(描述结构#44,P代码#48)
P代码#48"\"\"\"
记住\"Python\"

\"\"\"

state=True
list_au=text_au.split(', ')
list_i=0

"(,)
的#49""(生成作者#42,库#50)
库#50"

通讯作者:...
普通作者:...
将'普通作者'的\"通讯\"替换为\"普通\"
"(,)
的#51""(库#50,普通作者#52)
普通作者#52"\"\"\"
L模板:...

\"\"\"
+普通作者(_A,_输出)->+[del](,+普通作者)...
->的(普通作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)

"(,)
的#53""(普通作者#52,L模板#54)
L模板#54"
\author{%名 %姓}
\affiliation{%单位}
"(,)
的#55""(库#50,通讯作者#56)
通讯作者#56"\"\"\"
L模板:...

\"\"\"
+通讯作者(_A,_输出)->+[del](,+通讯作者)...
->的(通讯作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)->+[.](+[模板文本],邮箱)

"(,)
的#57""(通讯作者#56,L模板#58)
L模板#58"
\author{%名 %姓}
\email{%邮箱}
\affiliation{%单位}
"(,)
的#59""(库#40,生成附录#60)
生成附录#60"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成附录(_章节,_文本)->+[del](,+生成附录)...
->的(生成附录,描述结构)->的(生成附录,库)...
->的(生成附录,L模板)...

->+的(_文本,+章节)...
->+[code]([想],描述结构)->[想](_章节,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)

"(,)
的#61""(生成附录#60,L模板#62)
L模板#62"
\appendix
%内容

"(,)
的#63""(生成附录#60,库#64)
库#64"

文本结构:...
公式结构:...
图片结构:...




"(,)
的#65""(库#64,图片结构#66)
图片结构#66"\"\"\"
P代码:...
L模板:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,P代码)...

->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...
->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)

"(,)
的#67""(图片结构#66,P代码#68)
P代码#68"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]
ans='\\'+fig_name+'.'+fig_type


"(,)
的#69""(图片结构#66,L模板#70)
L模板#70"
\begin{figure}[b]
\includegraphics[width=0.45\textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure}


"(,)
的#71""(库#64,公式结构#72)
公式结构#72"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)...
->的(公式结构,P代码)...

->的(_节点,名字)->的(_节点,LaTeX)...
->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],LaTeX)...

->[]{+[.]\"LaTeX_text0\"([python],LaTeX)->+[code]([python],P代码)->[python](Python,)}:
    ->+[code](+[模板文本],L模板2),
    ->>+[code](+[模板文本],L模板)


"(,)
的#73""(公式结构#72,L模板#74)
L模板#74"
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}

"(,)
的#75""(公式结构#72,P代码#76)
P代码#76"\"\"\"
记住\"Python\"
LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#77""(公式结构#72,L模板2#78)
L模板2#78"
\begin{widetext}
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}
\end{widetext}

"(,)
的#79""(库#64,文本结构#80)
文本结构#80"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#81""(文本结构#80,P代码#82)
P代码#82"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='\\section{%s}\n\n'%(text_context[4:-5])
else:
    ans=text_context+'\n\n'


"(,)
的#83""(生成附录#60,描述结构#84)
描述结构#84"\"\"\"


\"\"\"

+描述结构(_章节,)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[]
}

"(,)
的#85""(库#40,生成概述#86)
生成概述#86"\"\"\"
L模板:...

\"\"\"

+生成概述(二级标题,_文本)->+[del](,+生成概述)...
->的(生成概述,L模板)...

->+的(_文本,+概述)...

->+[临时文本]->[]{
    []=>的(二级标题,文本)->文本=>+[增加内容2](文本,+[临时文本])
}...

->+[模板文本](L模板,+概述)->+[.](+[模板文本],+[临时文本])


"(,)
的#87""(生成概述#86,L模板#88)
L模板#88"%[临时文本]
"(,)
的#89""(库#40,生成标题#90)
生成标题#90"\"\"\"
L模板:...

\"\"\"

+生成标题(一级标题,_文本)->+[del](,+生成标题)...
->的(生成标题,L模板)...

->+的(_文本,+标题)->+的(+标题,+地址)->+地址\"/pages/title.html\"...
    ->+的(+标题,+原型)->+原型(+标题,一级标题)...

->的(一级标题,题目)...
->+[模板文本](L模板,+标题)->+[.](+[模板文本],题目)


"(,)
的#91""(生成标题#90,L模板#92)
L模板#92"<!--
+[返回目录]

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head>
<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>
<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>


<script>
window.addEventListener(\"keydown\", function (event) {
  if (event.defaultPrevented) {
    return; // Do nothing if the event was already processed
  }
  switch (event.key) {
    case \"Left\": // IE/Edge specific value
    case \"ArrowLeft\":
      window.location=\"..%prev\";
      break;
    case \"Right\": // IE/Edge specific value
    case \"ArrowRight\":
      window.location=\"..%next\";
      break;
    default:
      return; // Quit when this doesn't handle the key event.
  }

  // Cancel the default action to avoid it being handled twice
  event.preventDefault();
}, true);
</script>



<meta charset=\"utf-8\">
<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
<link rel=\"stylesheet\" href=\"../css/styleSheet.css\">
  </head>


<body>
<div class=\"topnav\">
  <a href=\"..%prev\">Prev</a>
  <a href=\"..%home\">Home</a>
  <a href=\"..%next\">Next</a>
</div>


<div class=\"content\">
    <p><mathjax style=\\"font-size:1.5em\\">
<h1>%题目</h1>
    </mathjax></p>
</div>

<div class=\"footer\">
  <p>Footer</p>
</div>

</body>
</html>



"(,)
的#93""(库#40,生成章节#94)
生成章节#94"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成章节(_章节,_文本)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,库)...
->的(生成章节,L模板)->的(库,输出页面)...

->+的(_文本,+章节)->+的(+章节,+原型)->+原型(+章节,_章节)...
->+[code]([想],描述结构)->[想](_章节,+章节)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)->+[.]\"输出\"(+[做],_文本)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)...

->+[做](_章节,+章节)->+[code](+[做],输出页面)


"(,)
的#95""(生成章节#94,描述结构#96)
描述结构#96"\"\"\"


\"\"\"

+描述结构(_章节,_文本)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->的(_节点,3D)->3D->+3D结构(_节点,)->+的(+操作,+3D结构),
        ->的(_节点,SVG)->SVG->+SVG结构(_节点,)->+的(+操作,+SVG结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[is](_节点,表格)->表格->+表格结构(_节点,)->+的(+操作,+表格结构),
        ->[]
}

"(,)
的#97""(生成章节#94,库#98)
库#98"

文本结构:...
公式结构:...
图片结构:...
3D结构:...
SVG结构:...
将条目\"3D结构\"复制为条目\"SVG结构\"

表格结构:...
将条目\"图片结构\"复制为条目\"表格结构\"

输出页面:...



"(,)
的#99""(库#98,文本结构#100)
文本结构#100"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#101""(文本结构#100,P代码#102)
P代码#102"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='<h2>%s</h2>\n\n'%(text_context[4:-5])
else:
    ans=text_context+'<br>\n'


"(,)
的#103""(库#98,公式结构#104)
公式结构#104"\"\"\"
P代码:...
设置公式:...
L模板:短公式...
L模板2:长公式...
L模板3:多行...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)->的(公式结构,L模板3)...
->的(公式结构,P代码)->的(公式结构,设置公式)...

->的(_节点,名字)->的(_节点,LaTeX)...

->+[python](Python,+[临时文本]#名字)...
    ->+[code](+[python],设置公式)->+[.]\"name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.]\"名字\"(+[模板文本],+[临时文本]#名字)...
->+[.]\"LaTeX\"(+[模板文本],+[临时文本]#t)...

->+[.]\"LaTeX_text0\"([python],LaTeX)...
->+[o]\"LaTeX_text\"([python],+[临时文本]#t)...
->+[code]([python],P代码)->[python](Python,+[临时文本]):
    ->[==]\"1\"(,+[临时文本])->+[code](+[模板文本],L模板),
    ->[==]\"2\"(,+[临时文本])->+[code](+[模板文本],L模板2),
    ->+[code](+[模板文本],L模板3)


"(,)
的#105""(公式结构#104,L模板2#106)
L模板2#106"
$$
%LaTeX
\tag{%名字}
$$

"(,)
的#107""(公式结构#104,P代码#108)
P代码#108"\"\"\"
记住\"Python\"
测试:...
保存:...
print(LaTeX_text0)
print(re.sub('\n+$','',LaTeX_text0))
LaTeX_text

txt=r'I_{scatter}=\frac{1}{L_{2}}\ \int_{}^{}{d\theta\ }{S(E_{f}(\theta))\ f(\theta)\ \frac{\partial E_{f}}{\partial \theta}\ exp(-\frac{\alpha^{2}}{\sigma_{s}(E_{f}(\theta))^{2}})}'
print(txt.replace('\ ','\\\\ \n',1))


\"\"\"

state=True
ans=1
if len(LaTeX_text0)<150 or 'cases' in LaTeX_text0:
    LaTeX_text=LaTeX_text0
    ans=1
elif len(LaTeX_text0)<200:
    LaTeX_text=LaTeX_text0.replace('\ ','\\\\ \n',1)
    ans=3
else:
    LaTeX_text=LaTeX_text0
    ans=2

LaTeX_text=re.sub('\n+$','',LaTeX_text)
print(LaTeX_text,ans)

"(,)
的#109""(P代码#108,测试#110)
测试#110"LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)
"(,)
的#111""(P代码#108,保存#112)
保存#112"\"\"\"
记住\"Python\"
测试:...
print(LaTeX_text0)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#113""(公式结构#104,L模板#114)
L模板#114"
$$
%LaTeX
\tag{%名字}
$$

"(,)
的#115""(公式结构#104,L模板3#116)
L模板3#116"
$$
%LaTeX
\tag{%名字}
$$
"(,)
的#117""(公式结构#104,设置公式#118)
设置公式#118"\"\"\"
记住\"Python\"

\"\"\"

if len(name)>3 and name[0]=='[' and name[-2:]=='].':
    name=name[1:-2]
ans=name

"(,)
的#119""(库#98,SVG结构#120)
SVG结构#120"\"\"\"
P代码:...
L模板:...
模板2:...

\"\"\"

+SVG结构(_节点,_内容)->+[del](,+SVG结构)...
->的(SVG结构,L模板)->的(SVG结构,模板2)->的(SVG结构,P代码)...

->.\"输出\"(+SVG结构,_输出)->的(_输出,地址)...

->的(_节点,名字)->的(_节点,内容)...
->+的(_节点,+目标地址)...

->+[python](Python,+目标地址)->+[code](+[python],P代码)...
->+[.]\"fig_name\"(+[python],名字)->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[code](+[模板文本],L模板)...
->+[.](+[模板文本],+目标地址)->+[.](+[模板文本],名字)...

->+[模板文本](模板2,+[临时文本])->+[.](+[模板文本],内容)...
->+[增加内容](地址,+[保存文本])->+[增加内容](+目标地址,+[保存文本])...
    ->+[保存文本](,+[临时文本])
"(,)
的#121""(SVG结构#120,L模板#122)
L模板#122"<img src=\"..%目标地址\"></img>
"(,)
的#123""(SVG结构#120,P代码#124)
P代码#124"\"\"\"
记住\"Python\"

\"\"\"

ans=\"/res/%s.svg\"%(fig_name)

"(,)
的#125""(SVG结构#120,模板2#126)
模板2#126"%内容

"(,)
的#127""(库#98,输出页面#128)
输出页面#128"\"\"\"
描述结构:...
P代码:...
模板:...

\"\"\"
+输出页面(_节点,_章节)->+[del](,+输出页面)...
->的(输出页面,模板)->的(输出页面,P代码)...

->的(_节点,题目)->+的(_章节,+地址)...
->+[python](Python,+地址)->+[code](+[python],P代码)...
->+[.]\"name0\"(+[python],题目)...

->+[模板文本](模板,_章节)->+[.]\"内容\"(+[模板文本],_章节)

"(,)
的#129""(输出页面#128,模板#130)
模板#130"<!--
+[返回目录]

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head>
<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>
<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>
<script src=\"https://stemkoski.github.io/Three.js/js/Three.js\"></script>
<script src=\"../js/OrbitControls.js\"></script>
<script type=\"text/javascript\" src=\"../js/threeWorld.js\"></script>


<script>
window.addEventListener(\"keydown\", function (event) {
  if (event.defaultPrevented) {
    return; // Do nothing if the event was already processed
  }
  switch (event.key) {
    case \"Left\": // IE/Edge specific value
    case \"ArrowLeft\":
      window.location=\"..%prev\";
      break;
    case \"Right\": // IE/Edge specific value
    case \"ArrowRight\":
      window.location=\"..%next\";
      break;
    default:
      return; // Quit when this doesn't handle the key event.
  }

  // Cancel the default action to avoid it being handled twice
  event.preventDefault();
}, true);
</script>



<meta charset=\"utf-8\">
<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
<link rel=\"stylesheet\" href=\"../css/styleSheet.css\">
  </head>


<body>
<div class=\"topnav\">
  <a href=\"..%prev\">Prev</a>
  <a href=\"..%home\">Home</a>
  <a href=\"..%next\">Next</a>
</div>


<div class=\"content\">
    <p><mathjax style=\\"font-size:1.5em\\">
%内容
    </mathjax></p>
</div>

<div class=\"footer\">
  <p>Footer</p>
</div>

</body>
</html>
"(,)
的#131""(输出页面#128,P代码#132)
P代码#132"\"\"\"
记住\"Python\"
str0='1 1 1'
print(str0,str0.replace(' ','_'))

\"\"\"

name=name0.replace(' ','_')
ans='/pages/%s.html'%(name)
print(ans)

"(,)
的#133""(输出页面#128,描述结构#134)
描述结构#134""(,)
的#135""(库#98,表格结构#136)
表格结构#136"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+表格结构(_节点,_内容)->+[del](,+表格结构)...
->的(表格结构,L模板)->的(表格结构,L模板2)->的(表格结构,P代码)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)...
->的(_节点,内容)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"txt_in\"(+[python],内容)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置)...
->+[.]\"内容\"(+[模板文本],+[临时文本])...
->+[o]\"type_out\"(+[python],+格式)->+[.](+[模板文本],+格式)->+[del](,+格式)...
->[]:

->[==]\"normal\"(,类型)->+[code](+[模板文本],L模板),
->+[code](+[模板文本],L模板2)


"(,)
的#137""(表格结构#136,L模板2#138)
L模板2#138"<img src=\"..%目标地址\" width=\"95%\"><br>

"(,)
的#139""(表格结构#136,P代码#140)
P代码#140"\"\"\"
记住\"Python\"
+[P函数](,P代码)
保存:...

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        line='<tr><th>'+'</th><th>'.join(list_ele)+'</th></tr>'
        txt_out+=line+'\n'
    else:
        line='<tr><td>'+'</td><td>'.join(list_ele)+'</td></tr>'
        txt_out+=line+'\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#141""(P代码#140,保存#142)
保存#142"\"\"\"
记住\"Python\"
+[P函数](,P代码)

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        for txt_ele in list_ele:
            txt_out+=\"\n\\textrm{%s}&\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n\\colrule'
    else:
        for txt_ele in list_ele:
            txt_out+=\" %s &\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#143""(表格结构#136,L模板#144)
L模板#144"<style>
table, th, td{
    border: 1px solid black;
    text-align: left;
    font-size:20px;
    #color:red;
}
</style>

<table style=\"width:50%\">
%内容
</table>"(,)
的#145""(库#98,3D结构#146)
3D结构#146"\"\"\"
P代码:...
L模板:...
模板2:...

\"\"\"

+3D结构(_节点,_内容)->+[del](,+3D结构)...
->的(3D结构,L模板)->的(3D结构,模板2)->的(3D结构,P代码)...

->.\"输出\"(+3D结构,_输出)->的(_输出,地址)...

->的(_节点,名字)->的(_节点,内容)...
->+的(_节点,+目标地址)...

->+[python](Python,+目标地址)->+[code](+[python],P代码)...
->+[.]\"fig_name\"(+[python],名字)->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[code](+[模板文本],L模板)...
->+[.](+[模板文本],+目标地址)->+[.](+[模板文本],名字)...

->+[模板文本](模板2,+[临时文本])->+[.](+[模板文本],内容)...
->+[增加内容](地址,+[保存文本])->+[增加内容](+目标地址,+[保存文本])...
    ->+[保存文本](,+[临时文本])
"(,)
的#147""(3D结构#146,模板2#148)
模板2#148"var shape, pt, eulers;

%内容

animate_3D();
world_3D.update();
"(,)
的#149""(3D结构#146,P代码#150)
P代码#150"\"\"\"
记住\"Python\"

\"\"\"

ans=\"/res/%s.js\"%(fig_name)

"(,)
的#151""(3D结构#146,L模板#152)
L模板#152"
<div id=\"%名字\" class=\"w3D\"></div>
<script>
world_3D.init(\"%名字\");
</script>
<script type=\"text/javascript\" src=\"..%目标地址\"></script>
"(,)
的#153""(库#98,图片结构#154)
图片结构#154"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,L模板2)->的(图片结构,P代码)...

->.\"输出\"(+图片结构,_输出)->的(_输出,地址)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...

->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...
->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],目标地址)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置):

->[==]\"normal\"(,类型)->+[code](+[模板文本],L模板),
->+[code](+[模板文本],L模板2)

"(,)
的#155""(图片结构#154,L模板#156)
L模板#156"<img src=\"..%目标地址\" height=\"200\"><br>

"(,)
的#157""(图片结构#154,P代码#158)
P代码#158"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]
ans=\"/res/%s.%s\"%(fig_name,fig_type)

"(,)
的#159""(图片结构#154,L模板2#160)
L模板2#160"<img src=\"..%目标地址\" width=\"95%\"><br>

"(,)
的#161""(生成章节#94,L模板#162)
L模板#162"
<h1>%题目</h1>
%内容

"(,)
的#163""(章节内容#38,描述结构#164)
描述结构#164"\"\"\"


\"\"\"
+描述结构(_章节结构,_文本)->+操作(+描述结构,)...

->[]{
    []:->[is](_章节结构,一级标题)->一级标题(,)...
        ->+生成标题(一级标题,_文本)->+的(+操作,+生成标题),
    ->[is](_章节结构,文本)->文本(,)...
        ->+生成作者(文本,_文本)->+的(+操作,+生成作者),
    ->[is](_章节结构,_章节)->_章节->的(_章节,题目)->[==]\"Abstract\"(,题目)...
        ->+生成概述(_章节,_文本)->+的(+操作,+生成概述),
    ->[is](_章节结构,_附录)->_附录->的(_附录,题目#2)->[==]\"Appendix\"(,题目#2)...
        ->+生成附录(_附录,_文本)->+的(+操作,+生成附录),
    ->[is](_章节结构,二级标题)->二级标题(,)...
        ->+生成章节(二级标题,_文本)->+的(+操作,+生成章节)
}


"(,)
的#165""(降临规则#2,整理引用#166)
整理引用#166"\"\"\"
P代码:...
print(list_lk)
print(paper_text)

\"\"\"

+整理引用(_媒介,_文本)->+[del](,+整理引用)...
->的(整理引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->引用(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)




"(,)
的#167""(整理引用#166,P代码#168)
P代码#168"\"\"\"
记住\"Python\"
测试:...

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#169""(P代码#168,测试#170)
测试#170"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#171""(降临规则#2,整体架构#172)
整体架构#172"\"\"\"
P代码:...
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+整体架构(_媒介,_凭依)->+[del](,+整体架构)...
->的(整体架构,P代码)->的(整体架构,描述结构)->的(整体架构,库)...
->的(库,设置关联)...

->的(_凭依,地址)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[.]\"proj_address\"(+[python],地址)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_宾语)->_宾语(,)...
    =>的(库,_条目)->[eq](_操作,_条目)...
        ->+[做](,_宾语)->+[code](+[做],_条目)...
        =>.(_操作,_输入)=>+[.](+[做],_输入)
}...

->+[做](_媒介,_凭依)->+[code](+[做],设置关联)


"(,)
的#173""(整体架构#172,P代码#174)
P代码#174"\"\"\"
记住\"Python\"
运行指令\"nautilus tools\"
system

\"\"\"
import os
os.system('mkdir %s/css'%(proj_address))
os.system('mkdir %s/pages'%(proj_address))
os.system('mkdir %s/res'%(proj_address))
os.system('mkdir %s/js'%(proj_address))

"(,)
的#175""(整体架构#172,描述结构#176)
描述结构#176"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->的(_凭依,地址#0)...
->+设置index(,地址#0)->+的(+操作,+设置index)...
->[]{
    []=>的(_凭依,_章节)->的(_章节,地址)=>+[.](+设置index,_章节)
}...

->+设置js(,地址#0)->+的(+操作,+设置js)...
->+设置css(,地址#0)->+的(+操作,+设置css)


"(,)
的#177""(整体架构#172,库#178)
库#178"
设置index:...
设置js:...
设置css:...

设置关联:...

"(,)
的#179""(库#178,设置index#180)
设置index#180"\"\"\"
P代码:...
正文模板:...

\"\"\"
+设置index(,_地址)->+[del](,+设置index)...
->的(设置index,正文模板)->的(设置index,P代码)...

->+[python]\"list_ads=[]
list_names=[]\"(Python,)->[]{
    []=>.(+设置index,_章节)->_章节->的(_章节,地址#1)...
        ->的(_章节,原型)->原型(,_原型)->的(_原型,题目)...
    =>+[python]\"list_ads.append(address)
list_names.append(name)\"(Python,)...
        ->+[.]\"address\"(+[python],地址#1)->+[.]\"name\"(+[python],题目)
}...

->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
    ->+[.]\"address\"(+[python],_地址)...

->+[模板文本](正文模板,+[临时文本])->+[.]\"内容\"(+[模板文本],+[临时文本])...
->+[增加内容2](_地址,+[保存文本])->+[保存文本]\"/index.html\"(,+[临时文本])


"(,)
的#181""(设置index#180,正文模板#182)
正文模板#182"<!--
+[返回目录]

LaTeX数学记号::https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols
+[打开](,LaTeX数学记号)
-->

<html>
  <head>
<script src=\"https://cdn.plot.ly/plotly-latest.min.js\"></script>
<script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_HTMLorMML\"></script>

<meta charset=\"utf-8\">
<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
<link rel=\"stylesheet\" href=\"./css/styleSheet.css\">
  </head>


<body>
<div class=\"topnav\">
  <a href=\"#\">Link</a>
  <a href=\"#\">Link</a>
  <a href=\"#\">Link</a>
</div>

<div class=\"content\">
    <p><mathjax style=\\"font-size:1.5em\\">
%内容
    </mathjax></p>
</div>

<div class=\"footer\">
  <p>Footer</p>
</div>

</body>
</html>
"(,)
的#183""(设置index#180,P代码#184)
P代码#184"\"\"\"
记住\"Python\"
Nini, 打开网页画板(文件)
print(address.split('/')[-1])

\"\"\"

# pattern=\"<h2><a href=\\"/%s%s\\">%s</a></h2>\n\"
pattern1=\"<h2><a href=\\"./%s\\">%s</a></h2>\n\"
ans=''

proj_name=address.split('/')[-1]
for i in range(len(list_ads)):
#    ans+=pattern%(proj_name,list_ads[i],list_names[i])
    ans+=pattern1%(list_ads[i],list_names[i])


"(,)
的#185""(库#178,设置js#186)
设置js#186"\"\"\"
js1:...
js2:...
P代码:...

\"\"\"
+设置js(,_地址)->+[del](,+设置js)...
->的(设置js,js1)->的(设置js,js2)->的(设置js,P代码)...

->+[python](Python,+[保存文本])->+[code](+[python],P代码)...
    ->+[.]\"address\"(+[python],_地址)...
->+[o]\"js2\"(+[python],+[保存文本]#2)...

->+[保存文本](,js1)->+[保存文本]#2(,js2)


"(,)
的#187""(设置js#186,P代码#188)
P代码#188"\"\"\"


\"\"\"

ans=\"%s/js/threeWorld.js\"%(address)
js2=\"%s/js/OrbitControls.js\"%(address)

"(,)
的#189""(设置js#186,js1#190)
js1#190"/*

*/


// MAIN

// standard global variables
var container, scene, camera, renderer, controls, stats;
var cube;

class Scene3D {
    constructor(ID='') {
        this.m_ID=ID;
        this.m_container='';
        this.m_scene='';
        this.m_camera='';
        this.m_render='';
        this.m_control='';
    }

    init(ID='') {
        if(ID!==\"\") {
            this.m_ID=ID;
            this.m_container = document.getElementById(this.m_ID);
        }
        else {
            this.m_container=document.body;
        }
        if(this.m_container===null) {
            this.m_container=document.body;
        }

        // SCENE
        this.m_scene = new THREE.Scene();
    
        // CAMERA
        var SCREEN_WIDTH = this.m_container.offsetWidth; 
        var SCREEN_HEIGHT = this.m_container.offsetHeight;
        var VIEW_ANGLE = 45, ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT, NEAR = 0.1, FAR = 20000;
        this.m_camera = new THREE.PerspectiveCamera( VIEW_ANGLE, ASPECT, NEAR, FAR);
        this.m_scene.add(this.m_camera);
        this.m_camera.position.set(0,150,400);
        this.m_camera.lookAt(this.m_scene.position);
        //this.m_camera.lookAt(new THREE.Vector3(0,600,0));
        //this.m_camera.lookAt(0,600,0);
    
        //RENDER
        this.m_renderer = new THREE.WebGLRenderer( {antialias:true} );
        this.m_renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
        
        this.m_container.appendChild( this.m_renderer.domElement );
    
        // CONTROLS
        this.m_controls = new THREE.OrbitControls( this.m_camera, this.m_renderer.domElement );
        // LIGHT
        var light = new THREE.PointLight(0xffffff);
        light.position.set(0,150,100);
        this.m_scene.add(light);
    
        // FLOOR
        var floorTexture = new THREE.ImageUtils.loadTexture( 'https://stemkoski.github.io/Three.js/images/checkerboard.jpg' );
        floorTexture.wrapS = floorTexture.wrapT = THREE.RepeatWrapping; 
        floorTexture.repeat.set( 10, 10 );
        var floorMaterial = new THREE.MeshBasicMaterial( { map: floorTexture, side: THREE.DoubleSide } );
    
        var floorGeometry = new THREE.PlaneGeometry(1000, 1000, 10, 10);
        var floor = new THREE.Mesh(floorGeometry, floorMaterial);
        floor.position.y = -0.5;
        floor.rotation.x = Math.PI / 2;
        this.m_scene.add(floor);
    
        // SKYBOX/FOG
        var skyBoxGeometry = new THREE.CubeGeometry( 10000, 10000, 10000 );
        var skyBoxMaterial = new THREE.MeshBasicMaterial( { color: 0x9999ff, side: THREE.BackSide } );
        var skyBox = new THREE.Mesh( skyBoxGeometry, skyBoxMaterial );
        this.m_scene.add(skyBox);
    }

    update() {
        this.m_renderer.render( this.m_scene, this.m_camera );
        this.m_controls.update();
    }

    addBox(L,W,H,x,y,z) {
        var material = new THREE.MeshNormalMaterial();
        var cubeGeometry = new THREE.CubeGeometry( 1, 1, 1 );
        var cube = new THREE.Mesh( cubeGeometry, material );
        cube.position.set(x,y,z);
        cube.scale.x=L;
        cube.scale.y=W;
        cube.scale.z=H;
        this.m_scene.add( cube );
        return cube;
    }

    addCylinder(R,H,x,y,z) {
        var material = new THREE.MeshNormalMaterial();
        var geometry = new THREE.CylinderGeometry( 1,1,1,80,4 );
        var shape = new THREE.Mesh( geometry, material );
        shape.position.set(x, y, z);
        shape.scale.x=R;
        shape.scale.y=H;
        shape.scale.z=R;
        this.m_scene.add( shape );
        return shape;
    }

    addSphere(R,x,y,z) {
        var material = new THREE.MeshNormalMaterial();
        var geometry = new THREE.SphereGeometry( 1,32,16 );
        var shape = new THREE.Mesh( geometry, material );
        shape.scale.x=R;
        shape.scale.y=R;
        shape.scale.z=R;
        shape.position.set(x, y, z);
        this.m_scene.add( shape );
        return shape;
    }

    addExtrudePolygon(shx,shy,height,x,y,z) {
        const shape = new THREE.Shape();
        for (var i=0;i<shx.length;i++) {
            if(i==0) {
                shape.moveTo(shx[i],shy[i]);
            }
            else {
                shape.lineTo(shx[i],shy[i]);
            }
        }
        const extrudeSettings = {
        	steps: 2,
                amount: height,
        	bevelEnabled: false,
        };
        
        const geometry = new THREE.ExtrudeGeometry( shape, extrudeSettings );
        const material = new THREE.MeshNormalMaterial();
        const mesh = new THREE.Mesh( geometry, material ) ;
        mesh.position.set(x,y,z);
        this.m_scene.add(mesh);
        
        return mesh;
    }

    setRotationByEuler(shape,alpha,beta,gamma) {
        shape.setRotationFromEuler(new THREE.Euler(0,0,0,'XYZ'));
        shape.rotateZ(alpha/180*Math.PI);
        shape.rotateX(beta/180*Math.PI);
        shape.rotateZ(gamma/180*Math.PI);
        return shape;
    }

    rotateInWorld(shape,pt,angle,axis='Z') {
        var T=new THREE.Matrix4().identity();
        T=T.multiply(new THREE.Matrix4().makeTranslation(pt[0],pt[1],pt[2]));
        if(axis==='X') {
            T=T.multiply(new THREE.Matrix4().makeRotationX(angle/180*Math.PI));
        }
        else if(axis==='Y') {
            T=T.multiply(new THREE.Matrix4().makeRotationY(angle/180*Math.PI));
        }
        else if(axis==='Z') {
            T=T.multiply(new THREE.Matrix4().makeRotationZ(angle/180*Math.PI));
        }
        T=T.multiply(new THREE.Matrix4().makeTranslation(-pt[0],-pt[1],-pt[2]));
        
        shape.updateMatrix();
        shape.applyMatrix(T);
        return shape;
    }

    lookAt_pt(shape,pt) {
        shape.lookAt(new THREE.Vector3(pt[0],pt[1],pt[2]));
        return shape;
    }

    lookAt(shape,shape0) {
        shape.lookAt(shape0.position);
        return shape;
    }

    cameraLookAt_pt(pt) {
        this.lookAt_pt(this.m_camera,pt);
        this.m_controls.center.x=pt[0];
        this.m_controls.center.y=pt[1];
        this.m_controls.center.z=pt[2];
    }

    cameraLookAt(shape) {
        this.lookAt(this.m_camera,shape);
        this.m_controls.center.x=shape.position.x;
        this.m_controls.center.y=shape.position.y;
        this.m_controls.center.z=shape.position.z;
    }

}

var world_3D=new Scene3D();

function animate_3D() {
    requestAnimationFrame(animate_3D);
    world_3D.update();
}

function printMatrix(matrix) {
    var list_val=matrix.elements;
    var str_line='';
    for(var i=0;i<4;i++) {
        for(var j=0;j<4;j++) {
            str_line+=`${list_val[j+i*4]}, `;
        }
        //print(str_line);
        str_line='';
    }
    //print();
}


"(,)
的#191""(设置js#186,js2#192)
js2#192"/**
 * @author qiao / https://github.com/qiao
 * @author mrdoob / http://mrdoob.com
 * @author alteredq / http://alteredqualia.com/
 * @author WestLangley / http://github.com/WestLangley
 */

function print() {
    document.getElementById(\"cmd_window\").innerHTML+=\"<br>\";
    for (var i=0; i < arguments.length; i++) {
        text=arguments[i];
        document.getElementById(\"cmd_window\").innerHTML+=\" \"+text;
    }
}

THREE.OrbitControls = function ( object, domElement ) {

	this.object = object;
	this.domElement = ( domElement !== undefined ) ? domElement : document;

	// API

	this.enabled = true;

	this.center = new THREE.Vector3();

	this.userZoom = true;
	this.userZoomSpeed = 1.0;

	this.userRotate = true;
	this.userRotateSpeed = 1.0;

	this.userPan = true;
	this.userPanSpeed = 2.0;

	this.autoRotate = false;
	this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60

	this.minPolarAngle = 0; // radians
	this.maxPolarAngle = Math.PI; // radians

	this.minDistance = 0;
	this.maxDistance = Infinity;

	// 65 /*A*/, 83 /*S*/, 68 /*D*/
	this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, ROTATE: 65, ZOOM: 83, PAN: 68, A: 65, D: 68};

	// internals

	var scope = this;

	var EPS = 0.000001;
	var PIXELS_PER_ROUND = 1800;

	var rotateStart = new THREE.Vector2();
	var rotateEnd = new THREE.Vector2();
	var rotateDelta = new THREE.Vector2();

	var zoomStart = new THREE.Vector2();
	var zoomEnd = new THREE.Vector2();
	var zoomDelta = new THREE.Vector2();

	var phiDelta = 0;
	var thetaDelta = 0;
	var scale = 1;

	var lastPosition = new THREE.Vector3();

	var STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2 };
	var state = STATE.NONE;

	// events

	var changeEvent = { type: 'change' };


	this.rotateLeft = function ( angle ) {

		if ( angle === undefined ) {

			angle = getAutoRotationAngle();

		}

		thetaDelta -= angle;

	};

	this.rotateRight = function ( angle ) {

		if ( angle === undefined ) {

			angle = getAutoRotationAngle();

		}

		thetaDelta += angle;

	};

	this.rotateUp = function ( angle ) {

		if ( angle === undefined ) {

			angle = getAutoRotationAngle();

		}

		phiDelta -= angle;

	};

	this.rotateDown = function ( angle ) {

		if ( angle === undefined ) {

			angle = getAutoRotationAngle();

		}

		phiDelta += angle;

	};

	this.zoomIn = function ( zoomScale ) {

		if ( zoomScale === undefined ) {

			zoomScale = getZoomScale();

		}

		scale /= zoomScale;

	};

	this.zoomOut = function ( zoomScale ) {

		if ( zoomScale === undefined ) {

			zoomScale = getZoomScale();

		}

		scale *= zoomScale;

	};

	this.pan = function ( distance ) {

		distance.transformDirection( this.object.matrix );
		distance.multiplyScalar( scope.userPanSpeed );

		this.object.position.add( distance );
		this.center.add( distance );

	};

	this.update = function () {
	
		var position = this.object.position;
		var offset = position.clone().sub( this.center );

		// angle from z-axis around y-axis

		var theta = Math.atan2( offset.x, offset.z );

		// angle from y-axis

		var phi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );

		if ( this.autoRotate ) {

			this.rotateLeft( getAutoRotationAngle() );

		}

		theta += thetaDelta;
		phi += phiDelta;

		// restrict phi to be between desired limits
		phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );

		// restrict phi to be betwee EPS and PI-EPS
		phi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );

		var radius = offset.length() * scale;

		// restrict radius to be between desired limits
		radius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );

		offset.x = radius * Math.sin( phi ) * Math.sin( theta );
		offset.y = radius * Math.cos( phi );
		offset.z = radius * Math.sin( phi ) * Math.cos( theta );


		position.copy( this.center ).add( offset );

		this.object.lookAt( this.center );

		thetaDelta = 0;
		phiDelta = 0;
		scale = 1;

		if ( lastPosition.distanceTo( this.object.position ) > 0 ) {

			this.dispatchEvent( changeEvent );

			lastPosition.copy( this.object.position );

		}

	};


	function getAutoRotationAngle() {

		return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;

	}

	function getZoomScale() {

		return Math.pow( 0.95, scope.userZoomSpeed );

	}

	function onMouseDown( event ) {

		if ( scope.enabled === false ) return;
		if ( scope.userRotate === false ) return;

		event.preventDefault();
		
		if ( state === STATE.NONE )
		{
			if ( event.button === 0 )		
//print(\"左键1!!\");
				//state = STATE.ZOOM;
				state = STATE.ROTATE;
			if ( event.button === 1 )		
//print(\"滚动!!\",STATE.ZOOM,STATE.ROTATE);
				state = STATE.ZOOM;
			if ( event.button === 2 )
//print(\"右键\");
				state = STATE.PAN;
				//state = STATE.ROTATE;
		}
		
		
		if ( state === STATE.ROTATE ) {

			//state = STATE.ROTATE;

			rotateStart.set( event.clientX, event.clientY );

		} else if ( state === STATE.ZOOM ) {

			//state = STATE.ZOOM;

			zoomStart.set( event.clientX, event.clientY );

		} else if ( state === STATE.PAN ) {

			//state = STATE.PAN;

		}

		document.addEventListener( 'mousemove', onMouseMove, false );
		document.addEventListener( 'mouseup', onMouseUp, false );

	}

	function onMouseMove( event ) {

		if ( scope.enabled === false ) return;

		event.preventDefault();

		
		if ( state === STATE.ROTATE ) {
		//if ( state === 0 ) {
//print(event.clientX, event.clientY ,rotateEnd, rotateStart);
			rotateEnd.set( event.clientX, event.clientY );
			rotateDelta.subVectors( rotateEnd, rotateStart );

			scope.rotateLeft( 2 * Math.PI * rotateDelta.x / PIXELS_PER_ROUND * scope.userRotateSpeed );
			scope.rotateUp( 2 * Math.PI * rotateDelta.y / PIXELS_PER_ROUND * scope.userRotateSpeed );

			scope.update();
			rotateStart.copy( rotateEnd );

		} else if ( state === STATE.ZOOM ) {

			zoomEnd.set( event.clientX, event.clientY );
			zoomDelta.subVectors( zoomEnd, zoomStart );

			if ( zoomDelta.y > 0 ) {

				scope.zoomIn();

			} else {

				scope.zoomOut();

			}

			zoomStart.copy( zoomEnd );

		} else if ( state === STATE.PAN ) {

			var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;
			var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;

			scope.pan( new THREE.Vector3( - movementX, movementY, 0 ) );

		}

	}

	function onMouseUp( event ) {

		if ( scope.enabled === false ) return;
		if ( scope.userRotate === false ) return;

		document.removeEventListener( 'mousemove', onMouseMove, false );
		document.removeEventListener( 'mouseup', onMouseUp, false );

		state = STATE.NONE;

	}

	function onMouseWheel( event ) {

		if ( scope.enabled === false ) return;
		if ( scope.userZoom === false ) return;

		var delta = 0;

		if ( event.wheelDelta ) { // WebKit / Opera / Explorer 9

			delta = event.wheelDelta;

		} else if ( event.detail ) { // Firefox

			delta = - event.detail;

		}

		if ( delta > 0 ) {

			scope.zoomOut();

		} else {

			scope.zoomIn();

		}

	}

	function onKeyDown( event ) {

		if ( scope.enabled === false ) return;
		if ( scope.userPan === false ) return;

		switch ( event.keyCode ) {

			
			case scope.keys.A:
				scope.zoomIn(1.1);
				scope.update();
				break;
			case scope.keys.D:
				scope.zoomOut(1.1);
				scope.update();
				break;
			case scope.keys.UP:
				scope.pan( new THREE.Vector3( 0, 1, 0 ) );
				break;
			case scope.keys.BOTTOM:
				scope.pan( new THREE.Vector3( 0, - 1, 0 ) );
				break;
			case scope.keys.LEFT:
				scope.pan( new THREE.Vector3( - 1, 0, 0 ) );
				break;
			case scope.keys.RIGHT:
				scope.pan( new THREE.Vector3( 1, 0, 0 ) );
				break;
			
			case scope.keys.ROTATE:
				state = STATE.ROTATE;
				break;
			case scope.keys.ZOOM:
				state = STATE.ZOOM;
				break;
			case scope.keys.PAN:
				state = STATE.PAN;
				break;
				
		}

	}
	
	function onKeyUp( event ) {

		switch ( event.keyCode ) {

			case scope.keys.ROTATE:
			case scope.keys.ZOOM:
			case scope.keys.PAN:
				state = STATE.NONE;
				break;
		}

	}

	this.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );
	this.domElement.addEventListener( 'mousedown', onMouseDown, false );
	this.domElement.addEventListener( 'mousewheel', onMouseWheel, false );
	this.domElement.addEventListener( 'DOMMouseScroll', onMouseWheel, false ); // firefox
	window.addEventListener( 'keydown', onKeyDown, false );
	window.addEventListener( 'keyup', onKeyUp, false );

};

THREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );"(,)
的#193""(库#178,设置css#194)
设置css#194"\"\"\"
css1:...
P代码:...

\"\"\"
+设置css(,_地址)->+[del](,+设置css)...
->的(设置css,css1)->的(设置css,P代码)...

->+[python](Python,+[保存文本])->+[code](+[python],P代码)...
    ->+[.]\"address\"(+[python],_地址)...

->+[保存文本](,css1)

"(,)
的#195""(设置css#194,css1#196)
css1#196"* {
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
}

/* Style the top navigation bar */
.topnav {
  overflow: hidden;
  background-color: #333;
}

/* Style the topnav links */
.topnav a {
  float: left;
  display: block;
  color: #f2f2f2;
  text-align: center;
  padding: 14px 16px;
  text-decoration: none;
}

/* Change color on hover */
.topnav a:hover {
  background-color: #ddd;
  color: black;
}


/* Style the content */
.content {
  background-color: #fff;
  padding: 10px;
}

/* Style the footer */
.footer {
  background-color: #333;
  padding: 10px;
  margin-top: 20px
}

.footer p {
  color: #ddd
}

.w3D {
    background-color: #000;
    width: 95%;
    height: 400px;
    border: 2px solid black;
    position: float; /* fixed or static */
    left: 2.5%;
}
"(,)
的#197""(设置css#194,P代码#198)
P代码#198"\"\"\"


\"\"\"

ans=\"%s/css/styleSheet.css\"%(address)

"(,)
的#199""(库#178,设置关联#200)
设置关联#200"\"\"\"
描述结构:...

\"\"\"
+设置关联(_媒介,_凭依)->+[del](,+设置关联)...
->的(设置关联,描述结构)...

->+[临时文本]\"/index.html\"...
->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_章节)->_章节(,)...
        =>.\"next\"(_操作,_next)->的(_next,地址#n)...
        ->.\"prev\"(_操作,_prev)->的(_prev,地址#p)...
    ->+[模板文本](_章节,_章节)...
        ->+[.]\"next\"(+[模板文本],地址#n)->+[.]\"prev\"(+[模板文本],地址#p)...
        ->+[.]\"home\"(+[模板文本],+[临时文本])
}
"(,)
的#201""(设置关联#200,描述结构#202)
描述结构#202"\"\"\"


\"\"\"

+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->的(_媒介,一级标题)->原型(_章节0,一级标题)...
    ->+补充按键(,_章节0)->+的(+操作,+补充按键)...
->[]{
    []:->的(_媒介,二级标题#1)->二级标题#1{[]=>然后(,二级标题#1)}...
        ->原型(_章节1,二级标题#1)->+[.]\"next\"(+补充按键,_章节1)...
    ->的(_媒介,二级标题#2)->二级标题#2{[]=>然后(二级标题#2,)}...
        ->原型(_章节2,二级标题#2)->+[.]\"prev\"(+补充按键,_章节2),
    ->+[.]\"next\"(+补充按键,_章节0)->+[.]\"prev\"(+补充按键,_章节0)
}...

=>的(_凭依,_章节)->_章节->原型(_章节,二级标题)...
=>+补充按键(,_章节)->+的(+操作,+补充按键)...
->[]{
    []:->然后(二级标题,_next)->_next->原型(_章节1,_next)...
        ->+[.]\"next\"(+补充按键,_章节1),
    ->+[.]\"next\"(+补充按键,_章节0)
}...
->[]{
    []:->然后(_prev,二级标题)->_prev->原型(_章节1,_prev)...
        ->+[.]\"prev\"(+补充按键,_章节1),
    ->+[.]\"prev\"(+补充按键,_章节0)
}

"(,)
的#203""(设置关联#200,保存#204)
保存#204"\"\"\"
描述结构:...

\"\"\"
+设置关联(_媒介,_凭依)->+[del](,+设置关联)...
->的(设置关联,描述结构)...

->+[临时文本]\"/index.html\"...
->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_章节)->_章节(,)...
        =>.\"next\"(_操作,_next)->的(_next,地址#n)->[说](,地址#n)...
        ->.\"prev\"(_操作,_prev)->的(_prev,地址#p)->[说](,地址#p)...
    ->+[模板文本](_章节,_章节)...
        ->+[.]\"next\"(+[模板文本],地址#n)->+[.]\"prev\"(+[模板文本],地址#p)...
        ->+[.]\"home\"(+[模板文本],+[临时文本])
}
"(,)
的#205""(文本转换_博客#0,召唤规则#206)
召唤规则#206"\"\"\"
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"结构文本转博客\"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...

    ->+整体架构(_媒介,_凭依)->+的(操作,+整体架构)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}
"(,)

## end
#645, 431:
"""
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"结构文本转博客"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...

    ->+整体架构(_媒介,_凭依)->+的(操作,+整体架构)...

->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}

## end
#647, 48641:
绘画人体#0"
召唤规则:...
降临规则:...




"(,)
的#1""(绘画人体#0,召唤规则#2)
召唤规则#2"\"\"\"
Nini, 打开天书(文件)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"绘画人体\"(,召唤星辰)...
->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->+人体画线(_媒介,_凭依)->+的(操作,+人体画线)...
->+极投影(_媒介,_凭依)->+的(操作,+极投影)...
->+设置相机(_媒介,_凭依)->+的(操作,+设置相机)


"(,)
的#3""(绘画人体#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

设置相机:...
极投影:...
人体画线:...
将'人体画线'的\"极投影\"替换为\"人体画线\"

整理结构:...
"(,)
的#5""(降临规则#4,极投影#6)
极投影#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"
+极投影(_三维,_二维)->+[del](,+极投影)...
->的(极投影,描述结构)->的(极投影,库)...

->的(_二维,视角)->的(视角,位置)->的(视角,方向)...

->[]{
    []:->的(_二维,结构图)->结构图,->+的(_二维,+结构图)->+结构图
}->的(_二维,结构图)...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](结构图,_物体)->+[code](+[做],_条目)...
        ->+[.]\"方向\"(+[做],方向)->+[.]\"位置\"(+[做],位置)
}




"(,)
的#7""(极投影#6,库#8)
库#8"
单个投影:...

立方投影:...
头部投影:...
肢体投影:...
+[新建阅读窗口](,头部投影)
将条目\"头部投影\"复制为条目\"肢体投影\"
在选择区域中, 将'头部投影'的\"终点\"替换为\"横线\"




"(,)
的#9""(库#8,肢体投影#10)
肢体投影#10"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
在选择区域中, 将'M代码'的\"1\"替换为\"2\"

\"\"\"
+肢体投影(_二维场景,_物体)->+[del](,+肢体投影)...
->的(肢体投影,M代码)...

->.\"方向\"(+肢体投影,_方向)->.\"位置\"(+肢体投影,_位置)...
->的(_物体,X)->的(_物体,Y)->的(_物体,Z)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...

->+的(_二维场景,+起点)...
->+的(+像,+起点)->+的(+起点,+x#起点)->+的(+起点,+y#起点)...
    ->+的(+起点,+半径#起点)...
    ->+在(+起点,+空间点#起点)->+的(+起点,+在)->+的(+起点,+空间点#起点)...
    ->+的(+起点,+样式)->+样式\"多边形\"(+起点,)...

->+的(_二维场景,+终点)...
->+的(+像,+终点)->+的(+终点,+x#终点)->+的(+终点,+y#终点)...
    ->+的(+终点,+半径#终点)...
    ->+在(+终点,+空间点#终点)->+的(+终点,+在)->+的(+终点,+空间点#终点)...
    ->+的(+终点,+样式)->+样式\"多边形\"(+终点,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)...
->+[o]\"r_o\"(+[matlab],+半径)->+[o]\"pt_o\"(+[matlab],+空间点)...

->+[o]\"x1\"(+[matlab],+x#起点)->+[o]\"y1\"(+[matlab],+y#起点)...
->+[o]\"r_o1\"(+[matlab],+半径#起点)->+[o]\"pt_o1\"(+[matlab],+空间点#起点)...
->+[o]\"x2\"(+[matlab],+x#终点)->+[o]\"y2\"(+[matlab],+y#终点)...
->+[o]\"r_o2\"(+[matlab],+半径#终点)->+[o]\"pt_o2\"(+[matlab],+空间点#终点)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"pt2\"(+[matlab],空间点#2),
    ->+pt2\"0,0,0\"->+[.](+[matlab],+pt2)->+[del](,+pt2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#11""(肢体投影#10,M代码#12)
M代码#12"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
%}

addpath(\"Matlab\space\");

[X,Y,Z]=transform_3D(pt2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,pt0,Eulers0);
x=-tx./tz;
y=ty./tz;

t=linspace(0,360,100);
r0=2e-2;

r_o1=r0/tz(1);
pt_o1=[x(1),y(1)];
x1=r_o1*cosd(t);
y1=r_o1*sind(t);

r_o2=r0/tz(2);
pt_o2=[x(2),y(2)];
x2=r_o2*cosd(t);
y2=r_o2*sind(t);

"(,)
的#13""(库#8,单个投影#14)
单个投影#14"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)

\"\"\"
+单个投影(_二维场景,_物体)->+[del](,+单个投影)...
->的(单个投影,M代码)...

->.\"方向\"(+单个投影,_方向)->.\"位置\"(+单个投影,_位置)...
->的(_物体,X)->的(_物体,Y)->的(_物体,Z)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(+像,+x)->+的(+像,+y)...
    ->+的(+像,+样式)->+样式\"多边形\"(+像,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.](+[matlab],X)->+[.](+[matlab],Y)->+[.](+[matlab],Z)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#15""(单个投影#14,M代码#16)
M代码#16"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
%}

addpath(\"Matlab\space\");

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));"(,)
的#17""(库#8,头部投影#18)
头部投影#18"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
在选择区域中, 将'M代码'的\"1\"替换为\"2\"

\"\"\"
+头部投影(_二维场景,_物体)->+[del](,+头部投影)...
->的(头部投影,M代码)...

->.\"方向\"(+头部投影,_方向)->.\"位置\"(+头部投影,_位置)...
->的(_物体,半径)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...

->+的(+像,+x)->+的(+像,+y)->+的(+像,+半径)...
    ->+在(+像,+空间点)->+的(+像,+在)->+的(+像,+空间点)...
    ->+样式\"多边形\"(+像,)->+的(+像,+样式)...

->+的(_二维场景,+竖线)...
->+的(+像,+竖线)->+的(+竖线,+x#竖线)->+的(+竖线,+y#竖线)...
    ->+样式\"曲线\"(+竖线,)->+的(+竖线,+样式)...

->+的(_二维场景,+横线)...
->+的(+像,+横线)->+的(+横线,+x#横线)->+的(+横线,+y#横线)...
    ->+样式\"曲线\"(+横线,)->+的(+横线,+样式)...


->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"R\"(+[matlab],半径)...

->+[o](+[matlab],+x)->+[o](+[matlab],+y)...
->+[o]\"r_o\"(+[matlab],+半径)->+[o]\"pt_o\"(+[matlab],+空间点)...

->+[o]\"x1\"(+[matlab],+x#竖线)->+[o]\"y1\"(+[matlab],+y#竖线)...
->+[o]\"x2\"(+[matlab],+x#横线)->+[o]\"y2\"(+[matlab],+y#横线)...


->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"pt2\"(+[matlab],空间点#2),
    ->+pt2\"0,0,0\"->+[.](+[matlab],+pt2)->+[del](,+pt2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#19""(头部投影#18,M代码#20)
M代码#20"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
%}

addpath(\"Matlab\space\");

[X,Y,Z]=transform_3D(pt2,Eulers2(1),Eulers2(2),Eulers2(3),0,0,0);
[tx,ty,tz]=Local_coordinates(X,Y,Z,pt0,Eulers0);
r_o=R/tz;
pt_o=[-tx,ty]/tz;

t=linspace(0,360,100);
x=r_o*cosd(t);
y=r_o*sind(t);


theta=linspace(-50,50,100)+90;
phi=180*ones(size(theta));
X1=R*sind(theta).*cosd(phi);
Y1=R*sind(theta).*sind(phi);
Z1=R*cosd(theta);

[X,Y,Z]=transform_3D(pt2,Eulers2(1),Eulers2(2),Eulers2(3),X1,Y1,Z1);
[tx,ty,tz]=Local_coordinates(X,Y,Z,pt0,Eulers0);
x1=-tx./tz;
y1=ty./tz;


phi=linspace(-30,30,100)+180;
theta=90*ones(size(theta));
X2=R*sind(theta).*cosd(phi);
Y2=R*sind(theta).*sind(phi);
Z2=R*cosd(theta);

[X,Y,Z]=transform_3D(pt2,Eulers2(1),Eulers2(2),Eulers2(3),X2,Y2,Z2);
[tx,ty,tz]=Local_coordinates(X,Y,Z,pt0,Eulers0);
x2=-tx./tz;
y2=ty./tz;


"(,)
的#21""(库#8,立方投影#22)
立方投影#22"\"\"\"
M代码:...
Nini, 打开三维场景(文件)
Nini, 打开词典的条目(节点)
+[新建阅读窗口](,M代码)
保存:...

\"\"\"
+立方投影(_二维场景,_物体)->+[del](,+立方投影)...
->的(立方投影,M代码)...

->.\"方向\"(+立方投影,_方向)->.\"位置\"(+立方投影,_位置)...
->的(_物体,长度)->的(_物体,宽度)->的(_物体,高度)...

->+的(_二维场景,+像)->[m_name](_物体,+像)...
->+的(_二维场景,+面1)->+的(_二维场景,+面2)->+的(_二维场景,+面3)...
->+的(+像,+面1)->+的(+像,+面2)->+的(+像,+面3)...
    ->+的(+面1,+x#1)->+的(+面1,+y#1)->+样式\"多边形\"(+面1,)->+的(+面1,+样式)...
    ->+的(+面2,+x#2)->+的(+面2,+y#2)->+样式\"多边形\"(+面2,)->+的(+面2,+样式)...
    ->+的(+面3,+x#3)->+的(+面3,+y#3)->+样式\"多边形\"(+面3,)->+的(+面3,+样式)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"r0\"(+[matlab],_位置)->+[.]\"Eulers0\"(+[matlab],_方向)...
->+[.]\"W\"(+[matlab],宽度)->+[.]\"L\"(+[matlab],长度)->+[.]\"H\"(+[matlab],高度)...
    ->+[o]\"x1\"(+[matlab],+x#1)->+[o]\"y1\"(+[matlab],+y#1)...
    ->+[o]\"x2\"(+[matlab],+x#2)->+[o]\"y2\"(+[matlab],+y#2)...
    ->+[o]\"x3\"(+[matlab],+x#3)->+[o]\"y3\"(+[matlab],+y#3)...
->+[修改标题](,+面1)->+[o]\"text1\"(+[matlab],+[修改标题])...
->+[修改标题](,+面2)->+[o]\"text2\"(+[matlab],+[修改标题])...
->+[修改标题](,+面3)->+[o]\"text3\"(+[matlab],+[修改标题])...


->[]{
    []:->在(_物体,空间点#2)->空间点#2->+[.]\"r2\"(+[matlab],空间点#2),
    ->+r2\"0,0,0\"->+[.](+[matlab],+r2)->+[del](,+r2)
}...

->[]{
    []:->朝向(_物体,方向#2)->方向#2->+[.]\"Eulers2\"(+[matlab],方向#2),
    ->+Eulers2\"0,0,0\"->+[.](+[matlab],+Eulers2)->+[del](,+Eulers2)
}



"(,)
的#23""(立方投影#22,M代码#24)
M代码#24"%{
记住\"Matlab\"
+[M函数](,M代码)
Nini, 打开词典的条目(节点)
测试:...
+[新建阅读窗口](,测试)

保存:...
%}

addpath(\"Matlab/space\");

siz=[W,L,H];
X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+siz(3)];
% face_text={\"down\",\"up\",\"front\",\"right\",\"back\",\"left\"};
face_text={\"up\",\"down\",\"right\",\"back\",\"left\",\"front\"};

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

i0=find(tz==min(tz));
fi=[];
for i=1:length(faces)
    is=faces{i};
    if sum(is==i0(1))>0
        fi(end+1)=i;
    end
end

is=faces{fi(1)};
x1=x(is);
y1=y(is);
text1=face_text{fi(1)};

is=faces{fi(2)};
x2=x(is);
y2=y(is);
text2=face_text{fi(2)};

is=faces{fi(3)};
x3=x(is);
y3=y(is);
text3=face_text{fi(3)};



%{
text3
face_text
face_text={\"down\",\"up\",\"front\",\"right\",\"behind\",\"left\"};
+[M函数](,M代码)
%}"(,)
的#25""(M代码#24,测试#26)
测试#26"%{
+[M函数](,测试)
figure
plot3(tx,ty,tz)
axis equal
plot3(X,Y,Z)
r2
%}

addpath(\"Matlab/space\");

siz=[1,1,1];
r0=[0,0,10];
r2=[0,0,0];
Eulers0=[0,0,0];
Eulers2=[0,0,0];

X=[0,siz(1),siz(1),0]-siz(1)/2;
Y=[0,0,siz(2),siz(2)]-siz(2)/2;
Z=[0,0,0,0];
X=[X,X];
Y=[Y,Y];
Z=[Z,Z+siz(3)];

pt_x=X;
pt_y=Y;
pt_z=Z;

faces=cell(1,6);
faces{1}=1:4;
faces{2}=5:8;
faces{3}=[1,2,6,5];
faces{4}=[2,3,7,6];
faces{5}=[3,4,8,7];
faces{6}=[4,1,5,8];

[X,Y,Z]=transform_3D(r2,Eulers2(1),Eulers2(2),Eulers2(3),X,Y,Z);
[tx,ty,tz]=Local_coordinates(X,Y,Z,r0,Eulers0);
x=-tx./tz;
y=ty./tz;

x(isnan(x))=[];
y(isnan(y))=[];
x=reshape(x,1,numel(x));
y=reshape(y,1,numel(y));

i0=find(tz==min(tz));
fi=[];
for i=1:length(faces)
    is=faces{i};
    if sum(is==i0(1))>0
        fi(end+1)=i;
    end
end

is=faces{fi(1)};
x1=x(is);
y1=y(is);
is=faces{fi(2)};
x2=x(is);
y2=y(is);
is=faces{fi(3)};
x3=x(is);
y3=y(is);

figure
axis equal
face_text={\"下面\",\"上面\",\"前面\",\"右面\",\"后面\",\"左面\"};

for i=1:length(faces)
fi=faces{i};
patch(X(fi),Y(fi),Z(fi),[1,1,1],'FaceAlpha',0.1)
text(mean(X(fi)),mean(Y(fi)),mean(Z(fi)),face_text{i})
end
xlabel(\"X\")
ylabel(\"Y\")
zlabel(\"Z\")

%{
+[M函数](,测试)
%}"(,)
的#27""(极投影#6,描述结构#28)
描述结构#28"\"\"\"


\"\"\"

+描述结构(,_三维)->+操作(+描述结构,)...

->[]{
    []=>的(_三维,_物体)->_物体->的(_物体,X)...
    =>[]:
        ->[is](_物体,头)->头->+头部投影(,头)->+的(+操作,+头部投影),
        ->[is](_物体,_re)->_re\"[腿臂]\"->+肢体投影(,_re)->+的(+操作,+肢体投影),
        ->+立方投影(,_物体)->+的(+操作,+立方投影)
}

"(,)
的#29""(极投影#6,保存#30)
保存#30"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
Nini, 打开图形库(文件)

保存:...

\"\"\"
+极投影(_三维,_二维)->+[del](,+极投影)...
->的(极投影,描述结构)->的(极投影,库)...

->+在(+相机,+空间点)->+空间点\"40,3,20\"...
->+朝向(+相机,+方向)->+方向\"-78,108,0\"...

->[]{
    []:->的(_二维,结构图)->结构图,->+的(_二维,+结构图)->+结构图
}->的(_二维,结构图)...

->+[code]([想],描述结构)->[想](,_三维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_相机,_物体)->_相机->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作):
        ->o([想],_相机)...
            ->+[做](+相机,_物体)->+[code](+[做],_条目)->+[.](+[做],结构图),
        ->+[做](_相机,_物体)->+[code](+[做],_条目)->+[.](+[做],结构图)
}...

->+[del](,+相机)...
->+[del](,+在)->+[del](,+空间点)->+[del](,+朝向)->+[del](,+方向)



"(,)
的#31""(降临规则#4,人体画线#32)
人体画线#32"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+人体画线(_三维,_二维)->+[del](,+人体画线)...
->的(人体画线,描述结构)->的(人体画线,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#33""(人体画线#32,描述结构#34)
描述结构#34"\"\"\"
上一版本:...
保存:...

\"\"\"

+描述结构(_三维,_二维)->+[del](,+描述结构)...

->+操作(+描述结构,)...
->+的(+操作,+身体交点)->+身体交点(_三维,_二维)...

->+的(+操作,+画左臂)->+画左臂(_三维,_二维)...
->+的(+操作,+画身体)->+画身体(_三维,_二维)...
->+的(+操作,+画右脚)->+画右脚(_三维,_二维)...
->+的(+操作,+画左脚)->+画左脚(_三维,_二维)...
->+的(+操作,+画右手)->+画右手(_三维,_二维)...
->+的(+操作,+画左手)->+画左手(_三维,_二维)...
->+的(+操作,+画头部)->+画头部(_三维,_二维)...
->+的(+操作,+画右臂)->+画右臂(_三维,_二维)...
->+的(+操作,+画左腿)->+画左腿(_三维,_二维)...
->+的(+操作,+画右腿)->+画右腿(_三维,_二维)...

->+的(+操作,+画线初始化)->+画线初始化(_三维,_二维)
"(,)
的#35""(描述结构#34,保存#36)
保存#36"\"\"\"
保存:...

\"\"\"

+描述结构(_三维,_二维)->+[del](,+描述结构)...

->+操作(+描述结构,)...
->+的(+操作,+身体交点)->+身体交点(_三维,_二维)...

->+的(+操作,+画左臂)->+画左臂(_三维,_二维)...
->+的(+操作,+画身体)->+画身体(_三维,_二维)...
->+的(+操作,+画右脚)->+画右脚(_三维,_二维)...
->+的(+操作,+画左脚)->+画左脚(_三维,_二维)...
->+的(+操作,+画右手)->+画右手(_三维,_二维)...
->+的(+操作,+画左手)->+画左手(_三维,_二维)...
->+的(+操作,+画头部)->+画头部(_三维,_二维)...
->+的(+操作,+画右臂)->+画右臂(_三维,_二维)...
->+的(+操作,+画左腿)->+画左腿(_三维,_二维)...
->+的(+操作,+画右腿)->+画右腿(_三维,_二维)...

->+的(+操作,+画线初始化)->+画线初始化(_三维,_二维)
"(,)
的#37""(描述结构#34,上一版本#38)
上一版本#38"\"\"\"
上一版本:...
保存:...

\"\"\"

+描述结构(_三维,_二维)->+[del](,+描述结构)...

->+操作(+描述结构,)...

->+的(+操作,+画左臂)->+画左臂(_三维,_二维)
"(,)
的#39""(人体画线#32,库#40)
库#40"
画线初始化:...
+[新建阅读窗口](,画线初始化)
将'画线初始化'的\"_二维\"替换为\"线稿\"

画左腿:...
画右腿:...
画左臂:...
画右臂:...
将条目\"画右臂\"复制为条目\"画左臂\"
+[新建阅读窗口](,画右脚)

画左手:...
画右手:...
画左脚:...
画右脚:...
将条目\"画右手\"复制为条目\"画左手\"
+[新建阅读窗口](,画右手)

画身体:...
画头部:...
将条目\"画身体\"复制为条目\"画头部\"

身体交点:...
+[新建阅读窗口](,身体交点)
将条目\"画身体\"复制为条目\"身体交点\"



+[设置结构](,库)"(,)
的#41""(库#40,画头部#42)
画头部#42"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画头部(_三维,_二维)->+[del](,+画头部)...
->的(画头部,描述结构)->的(画头部,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#43""(画头部#42,库#44)
库#44"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"身体\"替换为\"头部\"



"(,)
的#45""(库#44,画法1#46)
画法1#46"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,头)->的(头,x#1)->的(头,y#1)->在(头,空间点#1)...
    ->的(结构图,脖子)->的(脖子,x#2)->的(脖子,y#2)...
    ->的(结构图,左肩)->的(左肩,x#3)->的(左肩,y#3)...
    ->的(结构图,右肩)->的(右肩,x#4)->的(右肩,y#4)...

->的(_二维,线稿)->的(线稿,头部)...
    ->的(头部,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(头部,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...
    ->+[.]\"pt1\"(+[matlab],空间点#1)...
->+[.]\"x2\"(+[matlab],x#2)->+[.]\"y2\"(+[matlab],y#2)...
->+[.]\"x3\"(+[matlab],x#3)->+[.]\"y3\"(+[matlab],y#3)...
->+[.]\"x4\"(+[matlab],x#4)->+[.]\"y4\"(+[matlab],y#4)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#47""(画法1#46,M代码#48)
M代码#48"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];

x1=x1+pt1(1);
y1=y1+pt1(2);

x_f1=[mean(x1(1:50)),mean(x1(end-50:end))];
y_f1=[mean(y1(1:50)),mean(y1(end-50:end))];

xs_01=[0,0.2,0.4,0.35,0];
ys_01=[0,0.05,0.2,0.75,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x_f1,y_f1);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];


xs_01=-[0,0.2,0.4,0.35,0];
ys_01=[0,0.05,0.2,0.75,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x_f1,y_f1);
xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];




xs_01=[0.5,0.5];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x2,y2);
plot(xs,ys,'k-')

xs_01=-[0.5,0.5];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x2,y2);
plot(xs,ys,'k-')

xs_01=[0.15,0];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x3,y3);
plot(xs,ys,'k-')

xs_01=-[0.15,0];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x4,y4);
plot(xs,ys,'k-')



axis equal


%{
plot(x1(1:102),y1(1:102))
figure
hold on
+[M函数](,M代码)
%}"(,)
的#49""(画头部#42,描述结构#50)
描述结构#50"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#51""(库#40,画线初始化#52)
画线初始化#52"\"\"\"
设置部件:...

\"\"\"

+画线初始化(,_二维)->+[del](,+画线初始化)...
->的(画线初始化,设置部件)...

->[]{
    []:->的(_二维,线稿)->线稿,->+的(_二维,+线稿)
}->的(_二维,线稿)...

->[]{
    []:->的(线稿,头部)->头部,
    ->+的(线稿,+头部)->+[做](,+头部)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,身体)->身体,
    ->+的(线稿,+身体)->+[做](,+身体)->+[code](+[做],设置部件)
}...

->[]{
    []:->的(线稿,左臂)->左臂,
    ->+的(线稿,+左臂)->+[做](,+左臂)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,右臂)->右臂,
    ->+的(线稿,+右臂)->+[做](,+右臂)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,左手)->左手,
    ->+的(线稿,+左手)->+[做](,+左手)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,右手)->右手,
    ->+的(线稿,+右手)->+[做](,+右手)->+[code](+[做],设置部件)
}...

->[]{
    []:->的(线稿,左腿)->左腿,
    ->+的(线稿,+左腿)->+[做](,+左腿)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,右腿)->右腿,
    ->+的(线稿,+右腿)->+[做](,+右腿)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,左脚)->左脚,
    ->+的(线稿,+左脚)->+[做](,+左脚)->+[code](+[做],设置部件)
}...
->[]{
    []:->的(线稿,右脚)->右脚,
    ->+的(线稿,+右脚)->+[做](,+右脚)->+[code](+[做],设置部件)
}


"(,)
的#53""(画线初始化#52,设置部件#54)
设置部件#54"\"\"\"


\"\"\"

+设置部件(,_脚)->+[del](,+设置部件)...

->+的(_脚,+边界)->+的(+边界,+x#1)->+的(+边界,+y#1)...
->+的(_脚,+线)->+的(+线,+x#2)->+的(+线,+y#2)
"(,)
的#55""(库#40,画左腿#56)
画左腿#56"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

M代码:...
+[新建阅读窗口](,M代码)
保存:...

\"\"\"

+画左腿(_三维,_二维)->+[del](,+画左腿)...
->的(画左腿,描述结构)->的(画左腿,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#57""(画左腿#56,描述结构#58)
描述结构#58"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#59""(画左腿#56,库#60)
库#60"

画法1:...
将'画法1'的\"臂\"替换为\"腿\"
+[新建阅读窗口](,画法1)


"(,)
的#61""(库#60,画法1#62)
画法1#62"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
->的(结构图,左大腿)->的(左大腿,起点#1)->的(左大腿,终点#1)...
    ->的(起点#1,半径#1a)->的(终点#1,半径#1b)...
    ->在(起点#1,空间点#1a)->在(终点#1,空间点#1b)...
->的(结构图,左小腿)->的(左小腿,起点#2)->的(左小腿,终点#2)...
    ->的(起点#2,半径#2a)->的(终点#2,半径#2b)...
    ->在(起点#2,空间点#2a)->在(终点#2,空间点#2b)...

->的(_二维,线稿)->的(线稿,左腿)...
    ->的(左腿,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(左腿,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt_1a\"(+[matlab],空间点#1a)->+[.]\"pt_1b\"(+[matlab],空间点#1b)...
->+[.]\"pt_2a\"(+[matlab],空间点#2a)->+[.]\"pt_2b\"(+[matlab],空间点#2b)...
->+[.]\"R1a\"(+[matlab],半径#1a)->+[.]\"R1b\"(+[matlab],半径#1b)...
->+[.]\"R2a\"(+[matlab],半径#2a)->+[.]\"R2b\"(+[matlab],半径#2b)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)








"(,)
的#63""(画法1#62,M代码#64)
M代码#64"%{
+[M函数](,M代码)

创建\"Matlab\draw\"
Local_frame_2D(M函数):...
画图测试:...
+[新建阅读窗口](,画图测试)
%}

R1a=R1a*2;
R1b=R1b*1.2;
R2b=R2b;

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_2_x=pt1b(1);
pt_2_y=pt1b(2);
pt_1_x=pt2b(1);
pt_1_y=pt2b(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_6_x=pt1b(1);
pt_6_y=pt1b(2);
pt_5_x=pt2b(1);
pt_5_y=pt2b(2);


[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_9_x=pt1a(1);
pt_9_y=pt1a(2);
pt_8_x=pt2a(1);
pt_8_y=pt2a(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_11_x=pt1a(1);
pt_11_y=pt1a(2);
pt_10_x=pt2a(1);
pt_10_y=pt2a(2);

xo1=[pt_2_x,pt_1_x,pt_11_x,pt_10_x,pt_5_x,pt_6_x,pt_8_x,pt_9_x];
yo1=[pt_2_y,pt_1_y,pt_11_y,pt_10_y,pt_5_y,pt_6_y,pt_8_y,pt_9_y];

xo2=xo1;
yo2=yo1;

plot(xo1,yo1)

%{
hold on
+[M函数](,M代码)
%}"(,)
的#65""(画左腿#56,保存#66)
保存#66"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画左腿(_三维,_二维)->+[del](,+画左腿)...
->的(画左腿,M代码)...

->的(_二维,结构图)...
->的(结构图,左大腿)...
    ->的(左大腿,x#1)->的(左大腿,y#1)...
->的(结构图,左小腿)...
    ->的(左小腿,x#2)->的(左小腿,y#2)...
->的(结构图,屁股)...
    ->的(屁股,x#3)->的(屁股,y#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...
->+[.]\"x2\"(+[matlab],x#2)->+[.]\"y2\"(+[matlab],y#2)...
->+[.]\"x3\"(+[matlab],x#3)->+[.]\"y3\"(+[matlab],y#3)...

->的(_二维,左腿边界)->+[o]\"Bdy\"(+[matlab],左腿边界)...
->[]{
    []:->的(_二维,左腿_线1)->左腿_线1,
    ->+的(_二维,+左腿_线1)->+样式\"曲线\"(+左腿_线1,)->+的(+左腿_线1,+样式)...
        ->+的(+左腿_线1,+x)->+的(+左腿_线1,+y)
}->的(_二维,左腿_线1)->的(左腿_线1,x#o1)->的(左腿_线1,y#o1)...
->+[o]\"x_o1\"(+[matlab],x#o1)->+[o]\"y_o1\"(+[matlab],y#o1)...

->[]{
    []:->的(_二维,左腿_线2)->左腿_线2,
    ->+的(_二维,+左腿_线2)->+样式\"曲线\"(+左腿_线2,)->+的(+左腿_线2,+样式)...
        ->+的(+左腿_线2,+x)->+的(+左腿_线2,+y)
}->的(_二维,左腿_线2)->的(左腿_线2,x#o2)->的(左腿_线2,y#o2)...
->+[o]\"x_o2\"(+[matlab],x#o2)->+[o]\"y_o2\"(+[matlab],y#o2)




"(,)
的#67""(画左腿#56,M代码#68)
M代码#68"%{
+[M函数](,M代码)

创建\"Matlab\draw\"
Local_frame_2D(M函数):...
画图测试:...
+[新建阅读窗口](,画图测试)
%}

addpath(\"Matlab\draw\");
xs_01=[0.13,0.14,0.1];
ys_01=[0,0.2,0.9];
[xs_1,ys_1]=Local_frame_2D(xs_01,ys_01,x1,y1);

xs_02=[0.1,0.12,0.08];
ys_02=[0,0.3,0.9];
[xs_2,ys_2]=Local_frame_2D(xs_02,ys_02,x2,y2);
x_o1=[xs_1,xs_2];
y_o1=[ys_1,ys_2];

xs_01=[-0.15,-0.16,-0.14,-0.13];
ys_01=[0.2,0.4,0.7,0.9];
[xs_3,ys_3]=Local_frame_2D(xs_01,ys_01,x1,y1);

xs_02=[-0.1,-0.11,-0.08];
ys_02=[0,0.2,0.9];
[xs_4,ys_4]=Local_frame_2D(xs_02,ys_02,x2,y2);
x_o2=[xs_3,xs_4];
y_o2=[ys_3,ys_4];

plot([xs_1,xs_2],[ys_1,ys_2],'k-',[xs_3,xs_4],[ys_3,ys_4],'k-')
axis equal

%{
hold on
+[M函数](,M代码)
%}"(,)
的#69""(M代码#68,大腿测试#70)
大腿测试#70""(,)
的#71""(M代码#68,画图测试#72)
画图测试#72"%{

figure
%}

x=[0.1,0.1];
y=[0,1];

plot(x,y,'o-')
axis equal


%{
+[M函数](,画图测试)
%}"(,)
的#73""(M代码#68,Local_frame_2D#74)
Local_frame_2D#74"%{
地址::Matlab\draw\Local_frame_2D.m
+[保存M函数](,Local_frame_2D)
%}

function [xs,ys]=Local_frame_2D(xs_0,ys_0,fm_x,fm_y)

v_y1=[diff(fm_x),diff(fm_y)];
L1=norm(v_y1);
% v_y1=v_y1/L1;
v_x1=[v_y1(2),-v_y1(1)];
pt_1=[fm_x(1),fm_y(1)];

xs=v_x1(1)*xs_0+v_y1(1)*ys_0+pt_1(1);
ys=v_x1(2)*xs_0+v_y1(2)*ys_0+pt_1(2);

end

"(,)
的#75""(Local_frame_2D#74,地址#76)
地址#76"Matlab\draw\Local_frame_2D.m"(,)
的#77""(库#40,画右腿#78)
画右腿#78"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画右腿(_三维,_二维)->+[del](,+画右腿)...
->的(画右腿,描述结构)->的(画右腿,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#79""(画右腿#78,描述结构#80)
描述结构#80"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#81""(画右腿#78,库#82)
库#82"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"左\"替换为\"右\"



"(,)
的#83""(库#82,画法1#84)
画法1#84"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
->的(结构图,右大腿)->的(右大腿,起点#1)->的(右大腿,终点#1)...
    ->的(起点#1,半径#1a)->的(终点#1,半径#1b)...
    ->在(起点#1,空间点#1a)->在(终点#1,空间点#1b)...
->的(结构图,右小腿)->的(右小腿,起点#2)->的(右小腿,终点#2)...
    ->的(起点#2,半径#2a)->的(终点#2,半径#2b)...
    ->在(起点#2,空间点#2a)->在(终点#2,空间点#2b)...

->的(_二维,线稿)->的(线稿,右腿)...
    ->的(右腿,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(右腿,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt_1a\"(+[matlab],空间点#1a)->+[.]\"pt_1b\"(+[matlab],空间点#1b)...
->+[.]\"pt_2a\"(+[matlab],空间点#2a)->+[.]\"pt_2b\"(+[matlab],空间点#2b)...
->+[.]\"R1a\"(+[matlab],半径#1a)->+[.]\"R1b\"(+[matlab],半径#1b)...
->+[.]\"R2a\"(+[matlab],半径#2a)->+[.]\"R2b\"(+[matlab],半径#2b)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)








"(,)
的#85""(画法1#84,M代码#86)
M代码#86"%{
+[M函数](,M代码)

画图测试:...
%}


R1a=R1a*2;
R1b=R1b*1.2;
R2b=R2b;

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_2_x=pt1b(1);
pt_2_y=pt1b(2);
pt_1_x=pt2b(1);
pt_1_y=pt2b(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_6_x=pt1b(1);
pt_6_y=pt1b(2);
pt_5_x=pt2b(1);
pt_5_y=pt2b(2);


[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_9_x=pt1a(1);
pt_9_y=pt1a(2);
pt_8_x=pt2a(1);
pt_8_y=pt2a(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_11_x=pt1a(1);
pt_11_y=pt1a(2);
pt_10_x=pt2a(1);
pt_10_y=pt2a(2);

xo1=[pt_2_x,pt_1_x,pt_11_x,pt_10_x,pt_5_x,pt_6_x,pt_8_x,pt_9_x];
yo1=[pt_2_y,pt_1_y,pt_11_y,pt_10_y,pt_5_y,pt_6_y,pt_8_y,pt_9_y];

xo2=xo1;
yo2=yo1;



%{
+[M函数](,M代码)
%}"(,)
的#87""(库#40,画右臂#88)
画右臂#88"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画右臂(_三维,_二维)->+[del](,+画右臂)...
->的(画右臂,描述结构)->的(画右臂,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#89""(画右臂#88,描述结构#90)
描述结构#90"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#91""(画右臂#88,库#92)
库#92"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"腿\"替换为\"臂\"



"(,)
的#93""(库#92,画法1#94)
画法1#94"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)
将'M代码'的\"varb_3\"替换为\"R2b\"
将'M代码'的\"pt_7_x\"替换为\"pt_2b(1)\"
将'M代码'的\"pt_7_y\"替换为\"pt_2b(2)\"

保存:...

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
->的(结构图,右大臂)->的(右大臂,起点#1)->的(右大臂,终点#1)...
    ->的(起点#1,半径#1a)->的(终点#1,半径#1b)...
    ->在(起点#1,空间点#1a)->在(终点#1,空间点#1b)...
->的(结构图,右小臂)->的(右小臂,起点#2)->的(右小臂,终点#2)...
    ->的(起点#2,半径#2a)->的(终点#2,半径#2b)...
    ->在(起点#2,空间点#2a)->在(终点#2,空间点#2b)...

->的(_二维,线稿)->的(线稿,右臂)...
    ->的(右臂,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(右臂,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt_1a\"(+[matlab],空间点#1a)->+[.]\"pt_1b\"(+[matlab],空间点#1b)...
->+[.]\"pt_2a\"(+[matlab],空间点#2a)->+[.]\"pt_2b\"(+[matlab],空间点#2b)...
->+[.]\"R1a\"(+[matlab],半径#1a)->+[.]\"R1b\"(+[matlab],半径#1b)...
->+[.]\"R2a\"(+[matlab],半径#2a)->+[.]\"R2b\"(+[matlab],半径#2b)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#95""(画法1#94,M代码#96)
M代码#96"%{
+[M函数](,M代码)

画图测试:...
版本1:...
保存:...
%}

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_2_x=pt1b(1);
pt_2_y=pt1b(2);
pt_1_x=pt2b(1);
pt_1_y=pt2b(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_6_x=pt1b(1);
pt_6_y=pt1b(2);
pt_5_x=pt2b(1);
pt_5_y=pt2b(2);


[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_9_x=pt1a(1);
pt_9_y=pt1a(2);
pt_8_x=pt2a(1);
pt_8_y=pt2a(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_11_x=pt1a(1);
pt_11_y=pt1a(2);
pt_10_x=pt2a(1);
pt_10_y=pt2a(2);

xo1=[pt_2_x,pt_1_x,pt_11_x,pt_10_x,pt_5_x,pt_6_x,pt_8_x,pt_9_x];
yo1=[pt_2_y,pt_1_y,pt_11_y,pt_10_y,pt_5_y,pt_6_y,pt_8_y,pt_9_y];

xo2=xo1;
yo2=yo1;

%{
+[M函数](,M代码)
%}"(,)
的#97""(M代码#96,保存#98)
保存#98"%{
+[M函数](,M代码)

画图测试:...
保存:...
%}

x1=real(x1);
y1=real(y1);
x2=real(x2);
y2=real(y2);

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=-[0.03,0.04,0.01];
ys_01=[0,0.2,0.9];
[xs_1,ys_1]=Local_frame_2D(xs_01,ys_01,x1,y1);

xs_02=-[0.01,0.02,0.008];
ys_02=[0,0.3,1];
[xs_2,ys_2]=Local_frame_2D(xs_02,ys_02,x2,y2);

xs=[xs_1,xs_2];
ys=[ys_1,ys_2];
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];


xs_01=-[-0.2,-0.21,-0.19,-0.18];
ys_01=[0.2,0.4,0.7,0.9];
[xs_3,ys_3]=Local_frame_2D(xs_01,ys_01,x1,y1);

xs_02=-[-0.15,-0.16,-0.13];
ys_02=[0,0.2,0.9];
[xs_4,ys_4]=Local_frame_2D(xs_02,ys_02,x2,y2);

xs=[xs_3,xs_4];
ys=[ys_3,ys_4];
xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];




%{
figure
hold on
+[M函数](,M代码)
%}"(,)
的#99""(M代码#96,版本1#100)
版本1#100"%{
+[M函数](,M代码)

画图测试:...
保存:...
%}

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_2_x=pt1b(1);
pt_2_y=pt1b(2);
pt_1_x=pt2b(1);
pt_1_y=pt2b(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_6_x=pt1b(1);
pt_6_y=pt1b(2);
pt_5_x=pt2b(1);
pt_5_y=pt2b(2);


[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_9_x=pt1a(1);
pt_9_y=pt1a(2);
pt_8_x=pt2a(1);
pt_8_y=pt2a(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_11_x=pt1a(1);
pt_11_y=pt1a(2);
pt_10_x=pt2a(1);
pt_10_y=pt2a(2);

xo1=[pt_2_x,pt_1_x,pt_11_x,pt_10_x,pt_5_x,pt_6_x,pt_8_x,pt_9_x];
yo1=[pt_2_y,pt_1_y,pt_11_y,pt_10_y,pt_5_y,pt_6_y,pt_8_y,pt_9_y];

xo2=xo1;
yo2=yo1;

%{
+[M函数](,M代码)
%}"(,)
的#101""(画法1#94,保存#102)
保存#102"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,右大臂)->的(右大臂,x#1)->的(右大臂,y#1)...
    ->的(结构图,右小臂)->的(右小臂,x#2)->的(右小臂,y#2)...

->的(_二维,线稿)->的(线稿,右臂)...
    ->的(右臂,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(右臂,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...
->+[.]\"x2\"(+[matlab],x#2)->+[.]\"y2\"(+[matlab],y#2)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#103""(库#40,画左臂#104)
画左臂#104"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画左臂(_三维,_二维)->+[del](,+画左臂)...
->的(画左臂,描述结构)->的(画左臂,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#105""(画左臂#104,描述结构#106)
描述结构#106"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#107""(画左臂#104,库#108)
库#108"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"右\"替换为\"左\"



"(,)
的#109""(库#108,画法1#110)
画法1#110"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
->的(结构图,左大臂)->的(左大臂,起点#1)->的(左大臂,终点#1)...
    ->的(起点#1,半径#1a)->的(终点#1,半径#1b)...
    ->在(起点#1,空间点#1a)->在(终点#1,空间点#1b)...
->的(结构图,左小臂)->的(左小臂,起点#2)->的(左小臂,终点#2)...
    ->的(起点#2,半径#2a)->的(终点#2,半径#2b)...
    ->在(起点#2,空间点#2a)->在(终点#2,空间点#2b)...

->的(_二维,线稿)->的(线稿,左臂)...
    ->的(左臂,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(左臂,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt_1a\"(+[matlab],空间点#1a)->+[.]\"pt_1b\"(+[matlab],空间点#1b)...
->+[.]\"pt_2a\"(+[matlab],空间点#2a)->+[.]\"pt_2b\"(+[matlab],空间点#2b)...
->+[.]\"R1a\"(+[matlab],半径#1a)->+[.]\"R1b\"(+[matlab],半径#1b)...
->+[.]\"R2a\"(+[matlab],半径#2a)->+[.]\"R2b\"(+[matlab],半径#2b)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#111""(画法1#110,M代码#112)
M代码#112"%{
+[M函数](,M代码)
Nini, 打开人体模型的Local_frame_2D(节点)
x3
画图测试:...
版本:...
%}

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_2_x=pt1b(1);
pt_2_y=pt1b(2);
pt_1_x=pt2b(1);
pt_1_y=pt2b(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_6_x=pt1b(1);
pt_6_y=pt1b(2);
pt_5_x=pt2b(1);
pt_5_y=pt2b(2);


[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1a(1),pt_1a(2),R1a,pt_1b(1),pt_1b(2),R1b);
pt_9_x=pt1a(1);
pt_9_y=pt1a(2);
pt_8_x=pt2a(1);
pt_8_y=pt2a(2);

[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(pt_1b(1),pt_1b(2),R1b,pt_2b(1),pt_2b(2),R2b);
pt_11_x=pt1a(1);
pt_11_y=pt1a(2);
pt_10_x=pt2a(1);
pt_10_y=pt2a(2);

xo1=[pt_2_x,pt_1_x,pt_11_x,pt_10_x,pt_5_x,pt_6_x,pt_8_x,pt_9_x];
yo1=[pt_2_y,pt_1_y,pt_11_y,pt_10_y,pt_5_y,pt_6_y,pt_8_y,pt_9_y];

xo2=xo1;
yo2=yo1;


%{
+[M函数](,M代码)
%}"(,)
的#113""(M代码#112,版本#114)
版本#114"%{
+[M函数](,M代码)
Nini, 打开人体模型的Local_frame_2D(节点)
x3
画图测试:...
%}

x1=real(x1);
y1=real(y1);
x2=real(x2);
y2=real(y2);
x3=real(x3);
y3=real(y3);

x_f3=[x3(1)+x3(4),x3(6)+x3(9)]/2;
y_f3=[y3(1)+y3(4),y3(6)+y3(9)]/2;

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0.03,0.04,0.01];
ys_01=[0,0.2,0.9];
[xs_1,ys_1]=Local_frame_2D_2(xs_01,ys_01,x1,y1);

xs_02=[0.01,0.02,0.008];
ys_02=[0,0.3,1];
[xs_2,ys_2]=Local_frame_2D_2(xs_02,ys_02,x2,y2);

xs=[xs_1,xs_2];
ys=[ys_1,ys_2];
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];


xs_01=[-0.2,-0.21,-0.19,-0.18];
ys_01=[0.2,0.4,0.7,0.9];
[xs_3,ys_3]=Local_frame_2D_2(xs_01,ys_01,x1,y1);

xs_02=[-0.15,-0.16,-0.13];
ys_02=[0,0.2,0.9];
[xs_4,ys_4]=Local_frame_2D_2(xs_02,ys_02,x2,y2);

xs=[xs_3,xs_4];
ys=[ys_3,ys_4];
xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];


xs_03=[0.47,0.48,0.45];
ys_03=[0.2,0.4,0.8];
[xs_3,ys_3]=Local_frame_2D(xs_03,ys_03,x_f3,y_f3);


plot(xo2,yo2,'o',xs_3,ys_3)


%{
+[M函数](,M代码)
%}"(,)
的#115""(库#40,画左脚#116)
画左脚#116"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画左脚(_三维,_二维)->+[del](,+画左脚)...
->的(画左脚,描述结构)->的(画左脚,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#117""(画左脚#116,描述结构#118)
描述结构#118"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#119""(画左脚#116,库#120)
库#120"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"臂\"替换为\"脚\"



"(,)
的#121""(库#120,画法1#122)
画法1#122"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,左脚#0)->的(左脚#0,x#1)->的(左脚#0,y#1)...

->的(_二维,线稿)->的(线稿,左脚)...
    ->的(左脚,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(左脚,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#123""(画法1#122,M代码#124)
M代码#124"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0,0];
ys_01=[0,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x1,y1);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];



%{
figure
hold on
+[M函数](,M代码)
%}"(,)
的#125""(库#40,画右脚#126)
画右脚#126"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画右脚(_三维,_二维)->+[del](,+画右脚)...
->的(画右脚,描述结构)->的(画右脚,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#127""(画右脚#126,描述结构#128)
描述结构#128"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#129""(画右脚#126,库#130)
库#130"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"左\"替换为\"右\"



"(,)
的#131""(库#130,画法1#132)
画法1#132"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,右脚#0)->的(右脚#0,x#1)->的(右脚#0,y#1)...

->的(_二维,线稿)->的(线稿,右脚)...
    ->的(右脚,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(右脚,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#133""(画法1#132,M代码#134)
M代码#134"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0,0];
ys_01=[0,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x1,y1);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];




%{
figure
hold on
+[M函数](,M代码)
%}"(,)
的#135""(库#40,画右手#136)
画右手#136"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画右手(_三维,_二维)->+[del](,+画右手)...
->的(画右手,描述结构)->的(画右手,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#137""(画右手#136,描述结构#138)
描述结构#138"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#139""(画右手#136,库#140)
库#140"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"脚\"替换为\"手\"



"(,)
的#141""(库#140,画法1#142)
画法1#142"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,右手#0)->的(右手#0,x#1)->的(右手#0,y#1)...

->的(_二维,线稿)->的(线稿,右手)...
    ->的(右手,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(右手,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#143""(画法1#142,M代码#144)
M代码#144"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0,0];
ys_01=[0,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x1,y1);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];


%{
figure
hold on
+[M函数](,M代码)
%}"(,)
的#145""(库#40,画左手#146)
画左手#146"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画左手(_三维,_二维)->+[del](,+画左手)...
->的(画左手,描述结构)->的(画左手,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#147""(画左手#146,描述结构#148)
描述结构#148"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#149""(画左手#146,库#150)
库#150"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"右\"替换为\"左\"



"(,)
的#151""(库#150,画法1#152)
画法1#152"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,左手#0)->的(左手#0,x#1)->的(左手#0,y#1)...

->的(_二维,线稿)->的(线稿,左手)...
    ->的(左手,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(左手,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#153""(画法1#152,M代码#154)
M代码#154"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0,0];
ys_01=[0,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x1,y1);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];




%{
figure
hold on
+[M函数](,M代码)
%}"(,)
的#155""(库#40,身体交点#156)
身体交点#156"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+身体交点(_三维,_二维)->+[del](,+身体交点)...
->的(身体交点,描述结构)->的(身体交点,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#157""(身体交点#156,描述结构#158)
描述结构#158"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+右臂连接)->+右臂连接(_三维,_二维)->+的(+操作,+右臂连接)...
->+的(+操作,+右腿连接)->+右腿连接(_三维,_二维)->+的(+操作,+右腿连接)...
->+的(+操作,+左腿连接)->+左腿连接(_三维,_二维)->+的(+操作,+左腿连接)


"(,)
的#159""(身体交点#156,库#160)
库#160"+[设置结构](,库)

左腿连接:...
右腿连接:...
右臂连接:...
左臂连接:...
将条目\"右臂连接\"复制为条目\"左臂连接\"
将'左臂连接'的\"右臂\"替换为\"左臂\"


+[del](,右腿连接)"(,)
的#161""(库#160,左臂连接#162)
左臂连接#162"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+左臂连接(_三维,_二维)->+[del](,+左臂连接)...
->的(左臂连接,M代码)...

->的(_二维,线稿)->的(线稿,身体)...
    ->的(身体,边界)->的(边界,x#b1)->的(边界,y#b1)...
    ->的(身体,线)->的(线,x#o1)->的(线,y#o1)...
->的(线稿,左臂)...
    ->的(左臂,边界#2)->的(边界#2,x#b2)->的(边界#2,y#b2)...
    ->的(左臂,线#2)->的(线#2,x#o2)->的(线#2,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"xb1\"(+[matlab],x#b1)->+[.]\"yb1\"(+[matlab],y#b1)...
->+[.]\"xo1\"(+[matlab],x#o1)->+[.]\"yo1\"(+[matlab],y#o1)...
->+[.]\"xb2\"(+[matlab],x#b2)->+[.]\"yb2\"(+[matlab],y#b2)...
->+[.]\"xo2\"(+[matlab],x#o2)->+[.]\"yo2\"(+[matlab],y#o2)...

->+[o]\"xo12\"(+[matlab],x#o1)->+[o]\"yo12\"(+[matlab],y#o1)...
->+[o]\"xo22\"(+[matlab],x#o2)->+[o]\"yo22\"(+[matlab],y#o2)




"(,)
的#163""(左臂连接#162,M代码#164)
M代码#164"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
%}

addpath(\"Matlab\draw\");

[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xo1,yo1,xo2,yo2);


if ~isempty(xs0)
    Ls_i=find(isnan(xo1));
    Ls_i2=find(isnan(xo2));
    %xo12=[xo1(1:L1_i),xs0,nan,xo1(Ls_i(1)+1:end)];
    %yo12=[yo1(1:L1_i),ys0,nan,yo1(Ls_i(1)+1:end)];
    %xo12=[xo1(1:L1_i),xs0,xo1(Ls_i(3):end)];
    %yo12=[yo1(1:L1_i),ys0,yo1(Ls_i(3):end)];
    xo22=[xo2(1:Ls_i2(1)),xs0,xo2(L2_i+1:end)];
    yo22=[yo2(1:Ls_i2(1)),ys0,yo2(L2_i+1:end)];
end

% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro')
% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro',xo12,yo12,'k--',xo22,yo22,'k--')
% axis equal


%{
clf
+[M函数](,M代码)
%}"(,)
的#165""(库#160,左腿连接#166)
左腿连接#166"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+左腿连接(_三维,_二维)->+[del](,+左腿连接)...
->的(左腿连接,M代码)...

->的(_二维,线稿)->的(线稿,身体)...
    ->的(身体,边界)->的(边界,x#b1)->的(边界,y#b1)...
    ->的(身体,线)->的(线,x#o1)->的(线,y#o1)...
->的(线稿,左腿)...
    ->的(左腿,边界#2)->的(边界#2,x#b2)->的(边界#2,y#b2)...
    ->的(左腿,线#2)->的(线#2,x#o2)->的(线#2,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"xb1\"(+[matlab],x#b1)->+[.]\"yb1\"(+[matlab],y#b1)...
->+[.]\"xo1\"(+[matlab],x#o1)->+[.]\"yo1\"(+[matlab],y#o1)...
->+[.]\"xb2\"(+[matlab],x#b2)->+[.]\"yb2\"(+[matlab],y#b2)...
->+[.]\"xo2\"(+[matlab],x#o2)->+[.]\"yo2\"(+[matlab],y#o2)...

->+[o]\"xo12\"(+[matlab],x#o1)->+[o]\"yo12\"(+[matlab],y#o1)...
->+[o]\"xo22\"(+[matlab],x#o2)->+[o]\"yo22\"(+[matlab],y#o2)




"(,)
的#167""(左腿连接#166,M代码#168)
M代码#168"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
%}

addpath(\"Matlab\draw\");

[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xo1,yo1,xo2,yo2);

if ~isempty(xs0)
    Ls_i=find(isnan(xo1));
    xo12=[xo1(1:L1_i),xs0,nan,xo1(Ls_i(1)+1:end)];
    yo12=[yo1(1:L1_i),ys0,nan,yo1(Ls_i(1)+1:end)];
    xo22=[xs0,xo2(L2_i+1:end)];
    yo22=[ys0,yo2(L2_i+1:end)];
end

% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro',xo12,yo12,'k--',xo22,yo22,'k--')
% axis equal


%{
clf
+[M函数](,M代码)
%}"(,)
的#169""(库#160,右腿连接#170)
右腿连接#170"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+右腿连接(_三维,_二维)->+[del](,+右腿连接)...
->的(右腿连接,M代码)...

->的(_二维,线稿)->的(线稿,身体)...
    ->的(身体,边界)->的(边界,x#b1)->的(边界,y#b1)...
    ->的(身体,线)->的(线,x#o1)->的(线,y#o1)...
->的(线稿,右腿)...
    ->的(右腿,边界#2)->的(边界#2,x#b2)->的(边界#2,y#b2)...
    ->的(右腿,线#2)->的(线#2,x#o2)->的(线#2,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"xb1\"(+[matlab],x#b1)->+[.]\"yb1\"(+[matlab],y#b1)...
->+[.]\"xo1\"(+[matlab],x#o1)->+[.]\"yo1\"(+[matlab],y#o1)...
->+[.]\"xb2\"(+[matlab],x#b2)->+[.]\"yb2\"(+[matlab],y#b2)...
->+[.]\"xo2\"(+[matlab],x#o2)->+[.]\"yo2\"(+[matlab],y#o2)...

->+[o]\"xo12\"(+[matlab],x#o1)->+[o]\"yo12\"(+[matlab],y#o1)...
->+[o]\"xo22\"(+[matlab],x#o2)->+[o]\"yo22\"(+[matlab],y#o2)




"(,)
的#171""(右腿连接#170,M代码#172)
M代码#172"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
%}

addpath(\"Matlab\draw\");

[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xo1,yo1,xo2,yo2);


if ~isempty(xs0)
    Ls_i=find(isnan(xo1));
    %xo12=[xo1(1:L1_i),xs0,nan,xo1(Ls_i(1)+1:end)];
    %yo12=[yo1(1:L1_i),ys0,nan,yo1(Ls_i(1)+1:end)];
    xo12=[xo1(1:L1_i),xs0,xo1(Ls_i(3):end)];
    yo12=[yo1(1:L1_i),ys0,yo1(Ls_i(3):end)];
    xo22=[xs0,xo2(L2_i+1:end)];
    yo22=[ys0,yo2(L2_i+1:end)];
end

% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro')
% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro',xo12,yo12,'k--',xo22,yo22,'k--')
% axis equal


%{
clf
+[M函数](,M代码)
%}"(,)
的#173""(库#160,右臂连接#174)
右臂连接#174"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+右臂连接(_三维,_二维)->+[del](,+右臂连接)...
->的(右臂连接,M代码)...

->的(_二维,线稿)->的(线稿,身体)...
    ->的(身体,边界)->的(边界,x#b1)->的(边界,y#b1)...
    ->的(身体,线)->的(线,x#o1)->的(线,y#o1)...
->的(线稿,右臂)...
    ->的(右臂,边界#2)->的(边界#2,x#b2)->的(边界#2,y#b2)...
    ->的(右臂,线#2)->的(线#2,x#o2)->的(线#2,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"xb1\"(+[matlab],x#b1)->+[.]\"yb1\"(+[matlab],y#b1)...
->+[.]\"xo1\"(+[matlab],x#o1)->+[.]\"yo1\"(+[matlab],y#o1)...
->+[.]\"xb2\"(+[matlab],x#b2)->+[.]\"yb2\"(+[matlab],y#b2)...
->+[.]\"xo2\"(+[matlab],x#o2)->+[.]\"yo2\"(+[matlab],y#o2)...

->+[o]\"xo12\"(+[matlab],x#o1)->+[o]\"yo12\"(+[matlab],y#o1)...
->+[o]\"xo22\"(+[matlab],x#o2)->+[o]\"yo22\"(+[matlab],y#o2)




"(,)
的#175""(右臂连接#174,M代码#176)
M代码#176"%{
+[M函数](,M代码)
Nini, 打开直线交点(文件)
%}

addpath(\"Matlab\draw\");

[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xo1,yo1,xo2,yo2);


if ~isempty(xs0)
    Ls_i=find(isnan(xo1));
    Ls_i2=find(isnan(xo2));
    %xo12=[xo1(1:L1_i),xs0,nan,xo1(Ls_i(1)+1:end)];
    %yo12=[yo1(1:L1_i),ys0,nan,yo1(Ls_i(1)+1:end)];
    %xo12=[xo1(1:L1_i),xs0,xo1(Ls_i(3):end)];
    %yo12=[yo1(1:L1_i),ys0,yo1(Ls_i(3):end)];
    xo22=[xo2(1:Ls_i2(1)),xs0,xo2(L2_i+1:end)];
    yo22=[yo2(1:Ls_i2(1)),ys0,yo2(L2_i+1:end)];
end

% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro')
% plot(xo1,yo1,xo2,yo2,xs0,ys0,'ro',xo12,yo12,'k--',xo22,yo22,'k--')
% axis equal


%{
clf
+[M函数](,M代码)
%}"(,)
的#177""(库#40,画身体#178)
画身体#178"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+画身体(_三维,_二维)->+[del](,+画身体)...
->的(画身体,描述结构)->的(画身体,库)...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
    ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}



"(,)
的#179""(画身体#178,库#180)
库#180"

画法1:...
+[新建阅读窗口](,画法1)
将'画法1'的\"左手\"替换为\"身体\"



"(,)
的#181""(库#180,画法1#182)
画法1#182"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"

+画法1(_三维,_二维)->+[del](,+画法1)...
->的(画法1,M代码)...

->的(_二维,结构图)...
    ->的(结构图,胸部)->的(胸部,x#1)->的(胸部,y#1)...
    ->的(结构图,腹部)->的(腹部,x#2)->的(腹部,y#2)...
    ->的(结构图,屁股)->的(屁股,x#3)->的(屁股,y#3)...
    ->的(结构图,左肩)->的(左肩,x#4)->的(左肩,y#4)...
    ->的(结构图,右肩)->的(右肩,x#5)->的(右肩,y#5)...
    ->的(结构图,脖子)->的(脖子,x#6)->的(脖子,y#6)...

->的(_二维,线稿)->的(线稿,身体)...
    ->的(身体,边界)->的(边界,x#o1)->的(边界,y#o1)...
    ->的(身体,线)->的(线,x#o2)->的(线,y#o2)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"x1\"(+[matlab],x#1)->+[.]\"y1\"(+[matlab],y#1)...
->+[.]\"x2\"(+[matlab],x#2)->+[.]\"y2\"(+[matlab],y#2)...
->+[.]\"x3\"(+[matlab],x#3)->+[.]\"y3\"(+[matlab],y#3)...
->+[.]\"x4\"(+[matlab],x#4)->+[.]\"y4\"(+[matlab],y#4)...
->+[.]\"x5\"(+[matlab],x#5)->+[.]\"y5\"(+[matlab],y#5)...
->+[.]\"x6\"(+[matlab],x#6)->+[.]\"y6\"(+[matlab],y#6)...

->+[o]\"xo1\"(+[matlab],x#o1)->+[o]\"yo1\"(+[matlab],y#o1)...
->+[o]\"xo2\"(+[matlab],x#o2)->+[o]\"yo2\"(+[matlab],y#o2)






"(,)
的#183""(画法1#182,M代码#184)
M代码#184"%{
+[M函数](,M代码)

画图测试:...
%}

addpath(\"Matlab\draw\");
x_f1=[x1(1)+x1(4),x1(6)+x1(9)]/2;
y_f1=[y1(1)+y1(4),y1(6)+y1(9)]/2;

x_f2=[x2(1)+x2(4),x2(6)+x2(9)]/2;
y_f2=[y2(1)+y2(4),y2(6)+y2(9)]/2;

x_f3=[x3(1)+x3(4),x3(6)+x3(9)]/2;
y_f3=[y3(1)+y3(4),y3(6)+y3(9)]/2;
xo1=[];
yo1=[];
xo2=[];
yo2=[];


xs_01=[0.47,0.48,0.45];
ys_01=[0.2,0.5,0.8];
[xs_1,ys_1]=Local_frame_2D(xs_01,ys_01,x_f1,y_f1);

xs_02=[1,1];
ys_02=[0.3,0.5];
[xs_2,ys_2]=Local_frame_2D(xs_02,ys_02,x_f2,y_f2);

xs_03=[1.1,1.135,1.15,1.14,1];
ys_03=[0,0.1,0.3,0.6,1];
[xs_3,ys_3]=Local_frame_2D(xs_03,ys_03,x_f3,y_f3);

xs=[xs_1,xs_2,xs_3];
ys=[ys_1,ys_2,ys_3];

xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,xs];
yo2=[yo2,ys];


% 底部
xs_02=[-0.4,-0.2,0,0.2,0.4];
ys_02=[0.75,0.83,0.85,0.83,0.75];
[xs,ys]=Local_frame_2D(xs_02,ys_02,x_f3,y_f3);

xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];



% 左边
xs_01=-[0.47,0.48,0.45];
ys_01=[0.2,0.4,0.8];
[xs_1,ys_1]=Local_frame_2D(xs_01,ys_01,x_f1,y_f1);

xs_02=-[1.0,1];
ys_02=[0.3,0.5];
[xs_2,ys_2]=Local_frame_2D(xs_02,ys_02,x_f2,y_f2);

xs_03=-[1.1,1.135,1.15,1.14,1];
ys_03=[0,0.1,0.3,0.6,1];
[xs_3,ys_3]=Local_frame_2D(xs_03,ys_03,x_f3,y_f3);

xs=[xs_1,xs_2,xs_3];
ys=[ys_1,ys_2,ys_3];

xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

% 肩膀

xs_01=-[0.15,0];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x5,y5);
xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

xs_01=[0.5,0.5];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x6,y6);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

xs_01=-[0.5,0.5];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x6,y6);
xo1=[xo1,fliplr(xs)];
yo1=[yo1,fliplr(ys)];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

xs_01=[0.15,0];
ys_01=[0.3,1];
[xs,ys]=Local_frame_2D(xs_01,ys_01,x4,y4);
xo1=[xo1,xs];
yo1=[yo1,ys];
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

xo1(end+1)=xo1(1);
yo1(end+1)=yo1(1);


% 内部

xs_02=[0,0];
ys_02=[0.2,0.5];
[xs,ys]=Local_frame_2D(xs_02,ys_02,x_f2,y_f2);
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];

xs_02=[0,0];
ys_02=[0.4,0.7];
[xs,ys]=Local_frame_2D(xs_02,ys_02,x_f1,y_f1);
xo2=[xo2,nan,xs];
yo2=[yo2,nan,ys];



%{
figure
hold on
i=1;
i=4;
i=6;
i=9;
plot(x1(i),y1(i),'ro')
+[M函数](,M代码)
%}"(,)
的#185""(画身体#178,描述结构#186)
描述结构#186"\"\"\"


\"\"\"

+描述结构(_三维,_二维)->+操作(+描述结构,)...

->+的(+操作,+画法1)->+画法1(_三维,_二维)->+的(+操作,+画法1)


"(,)
的#187""(降临规则#4,设置相机#188)
设置相机#188"\"\"\"
M代码:...

\"\"\"
+设置相机(_媒介,_凭依)->+[del](,+设置相机)...
->的(设置相机,M代码)...

->+的(_凭依,+视角)->+的(+视角,+方向)->+的(+视角,+位置)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[o]\"eulers\"(+[matlab],+方向)->+[o]\"pt\"(+[matlab],+位置)


"(,)
的#189""(设置相机#188,M代码#190)
M代码#190"%{
运行指令\"nautilus Matlab/space\"
[alpha,beta]=view;
view(30,0)
pt0
%}

addpath('Matlab/space')
[alpha,beta]=view;

Z=[sind(alpha)*cosd(beta),-cosd(alpha)*cosd(beta),sind(beta)];

axis_=axis;
L=max(axis_)-min(axis_);
pt0=[mean(axis_(1:2)),mean(axis_(3:4)),mean(axis_(5:6))]

pt=Z*L+pt0;
eulers=camera_lookat(pt,pt0,0);


"(,)
的#191""(降临规则#4,整理结构#192)
整理结构#192"\"\"\"
模板:...

\"\"\"

+整理结构(_媒介,_凭依)->+[del](,+整理结构)...
->的(整理结构,模板)...

->+[修改内容](模板,_凭依)...

->的(_凭依,视角)->+[删除结构](,视角)->+[del](,视角)...
->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)


"(,)
的#193""(整理结构#192,模板#194)
模板#194"<!--
+[H函数](,二维投影)
-->

%H代码

<!--
H代码(SVG):...
+[PPT场景转H代码](二维投影,H代码)
-->"(,)
的#195""(整理结构#192,文本内容#196)
文本内容#196""(,)

## end
#649, 230:
"""
Nini, 打开天书(文件)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"绘画人体"(,召唤星辰)...
->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->+人体画线(_媒介,_凭依)->+的(操作,+人体画线)...
->+极投影(_媒介,_凭依)->+的(操作,+极投影)...
->+设置相机(_媒介,_凭依)->+的(操作,+设置相机)



## end
#651, 12498:
预览动画#0"
召唤规则:...
降临规则:...


"(,)
的#1""(预览动画#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成PIC预览动画\"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)
的#3""(预览动画#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

设置变量:...
代码结构:...
整理代码:...

"(,)
的#5""(降临规则#4,设置变量#6)
设置变量#6"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_题目)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#7""(设置变量#6,描述结构#8)
描述结构#8"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_节点)->_节点{
            []:->的(_节点,波长)->波长,
            ->的(_节点,焦点位置)->焦点位置,
            ->的(_节点,数密度)->数密度
        }->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#9""(描述结构#8,P代码#10)
P代码#10"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"_varb\"
if \"探针\" in name:
    type=\"_probe\"
elif \"泵光\" in name or \"驱动光\" in name:
    type=\"_pump\"
elif \"光\" in name:
    type=\"_light\"
elif \"电子\" in name:
    type=\"_plasma\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#11""(降临规则#4,整理代码#12)
整理代码#12"\"\"\"


\"\"\"
+整理代码(_媒介,_凭依)->+[del](,+整理代码)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

->+[结构转文本](_凭依,_凭依)->+[删除结构](,_凭依)

"(,)
的#13""(降临规则#4,代码结构#14)
代码结构#14"\"\"\"
描述结构:...
库:...

\"\"\"
+代码结构(_媒介,_凭依)->+[del](,+代码结构)...
->的(代码结构,描述结构)->的(代码结构,库)...

->[]{
    []:->插入(_凭依,), ->+插入(_凭依,)->+的(_凭依,+插入)
}...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}


"(,)
的#15""(代码结构#14,描述结构#16)
描述结构#16"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->[]{
    []=>的(_媒介,_实体)->_实体=>[]:
        ->的(_实体,数密度)...
            ->+电子代码(_实体,_凭依)->+的(+操作,+电子代码),
        ->的(_实体,a0)->[]{[]=>[==]\"0\"(,a0)}...
            ->+光束代码(_实体,_凭依)->+的(+操作,+光束代码),
        ->[]
}...
->+框架代码(_媒介,_凭依)->+的(+操作,+框架代码)

"(,)
的#17""(代码结构#14,库#18)
库#18"
框架代码:...
电子代码:...
光束代码:...
将'光束代码'的\"电子\"替换为\"光束\"


"(,)
的#19""(库#18,框架代码#20)
框架代码#20"\"\"\"
框架:...
初始化:...
画图:...
动画:...

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,框架)->的(框架代码,初始化)->的(框架代码,画图)->的(框架代码,动画)...

->的(_媒介,模拟空间)...
->的(模拟空间,长度#0)->的(模拟空间,宽度#0)...
->的(_媒介,窗口)...
->的(窗口,长度#1)->的(窗口,宽度#1)...

->插入(_凭依,)->+[修改内容](框架,_凭依)...

->+的(插入,+标题)->[标题](_凭依,)->[m_text]([标题],+标题)...

->+的(插入,+初始化)->+顺序#1(+初始化,)...
    ->+的(+初始化,+顺序#1)->+的(+顺序#1,+节点#1)...
->+的(插入,+画图)->+顺序#2(+画图,)...
    ->+的(+画图,+顺序#2)->+的(+顺序#2,+节点#2)...
->+的(插入,+动画)->+顺序#3(+动画,)...
    ->+的(+动画,+顺序#3)->+的(+顺序#3,+节点#3)...

->+[修改内容](画图,+节点#2)->+[修改内容](动画,+节点#3)...
->+[模板文本](初始化,+节点#1)...
->+[.]\"长度0\"(+[模板文本],长度#0)->+[.]\"宽度0\"(+[模板文本],宽度#0)...
->+[.]\"长度1\"(+[模板文本],长度#1)->+[.]\"宽度1\"(+[模板文本],宽度#1)...

->[]{
    []:->在(模拟空间,空间点#0)->空间点#0->+[.]\"空间点0\"(+[模板文本],空间点#0),
    ->+[.]\"空间点0\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...
->[]{
    []:->在(窗口,空间点#1)->空间点#1->+[.]\"空间点1\"(+[模板文本],空间点#1),
    ->+[.]\"空间点1\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...
->[]{
    []:->的(窗口,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}...
->[]{
    []:->的(窗口,启动时间)->启动时间->+[.](+[模板文本],启动时间),
    ->+[.]\"启动时间\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}...
->[]{
    []:->的(窗口,停止时间)->停止时间->+[.](+[模板文本],停止时间),
    ->+[.]\"停止时间\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}


"(,)
的#21""(框架代码#20,框架#22)
框架#22"%{
+[M函数](,%标题)
%}


%初始化

clf
hold on
%画图
colorbar

for i=1:length(t)

%动画

percent_t=i/length(t)*100;
title(sprintf('T=%.2f fs, L=%.2f um, Progress=%.2f %%',t(i)/1e-15,t(i)/1e-6*c,percent_t))
pause(0.03)

end


%{
+[M函数](,%标题)
%}"(,)
的#23""(框架代码#20,初始化#24)
初始化#24"physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=%速度*c;
t0=%启动时间;
ts=%停止时间;
Nt=100;
pt0=[%空间点0];
pt1=[%空间点1];
L0=%长度0;
L1=%长度1;
W0=%宽度0;
W1=%宽度1;

DW=%宽度0-%宽度1;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

"(,)
的#25""(框架代码#20,画图#26)
画图#26"
rectangle('Position',[pt0(1),pt0(2)-L0/2,W0,L0],'FaceColor',[1,1,1,0.1]);
h1=rectangle('Position',[pt1(1),pt1(2)-L1/2,W1,L1],'FaceColor',[1,1,1,0.1]);
axis equal
axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])


"(,)
的#27""(框架代码#20,动画#28)
动画#28"if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end
h1.Position(1)=x1+pt1(1);

axis([pt0(1)+x1,pt0(1)+x1+W1,pt0(2)-L0/2,pt0(2)+L0/2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

"(,)
的#29""(库#18,光束代码#30)
光束代码#30"\"\"\"
描述结构:...
库:...

\"\"\"
+光束代码(_光束,_凭依)->+[del](,+光束代码)...
->的(光束代码,描述结构)->的(光束代码,库)...

->+[code]([想],描述结构)->[想](_光束,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}


"(,)
的#31""(光束代码#30,描述结构#32)
描述结构#32"\"\"\"


\"\"\"
+描述结构(_光束,_凭依)->+操作(+描述结构,)...

->[]{
    []:->的(_光束,入射边)->入射边{
        []:->[==]\"ymin\"(,入射边)->+操作1a(_光束,_凭依)->+的(+操作,+操作1a),
        ->[==]\"ymax\"(,入射边)->+操作1b(_光束,_凭依)->+的(+操作,+操作1b)
    },
    ->+操作0(_光束,_凭依)->+的(+操作,+操作0)
}

"(,)
的#33""(光束代码#30,库#34)
库#34"
操作1a:...
操作1b:...
将条目\"操作1a\"复制为条目\"操作1b\"
+[新建阅读窗口](,操作1a)

操作0:...
将'操作0'的\"电子\"替换为\"光束\"


"(,)
的#35""(库#34,操作1b#36)
操作1b#36"\"\"\"
初始化:...
画图:...
动画:...

\"\"\"
+操作1b(_光束,)->+[del](,+操作1b)...
->的(操作1b,初始化#0)->的(操作1b,画图#0)->的(操作1b,动画#0)...

->.\"凭依\"(+操作1b,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本](初始化#0,+节点#1)->+[.]\"n\"(+[模板文本],变量)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->+[.]\"焦点坐标\"(+[模板文本],空间点#A)...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)...
->+[模板文本](动画#0,+节点#3)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#37""(操作1b#36,画图#38)
画图#38"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.2)

h%n=rectangle('Position',[pt1(1)+focus%n(1)-w%n(1)/2,init%n-c*tau%n/sqrt(2)/2,w%n(1),c*tau%n/sqrt(2)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);

"(,)
的#39""(操作1b#36,初始化#40)
初始化#40"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=L0/2;
else
    init%n=focus%n(2)+%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z%n=linspace(pt0(2)-L0/2,pt0(2)+L0/2,100);
w%n=w_0%n.*sqrt(1+((z%n-focus%n(2))./(z_R%n)).^(2));

"(,)
的#41""(操作1b#36,动画#42)
动画#42"w_z%n=w_0%n.*sqrt(1+((-c*t(i)+init%n-focus%n(2))./(z_R%n)).^(2));

h%n.Position(1)=pt1(1)+focus%n(1)-w_z%n/2;
h%n.Position(2)=-c*t(i)+init%n-c*tau%n/sqrt(2)/2;
h%n.Position(3)=w_z%n;

"(,)
的#43""(库#34,操作0#44)
操作0#44"\"\"\"
初始化:...
画图:...
动画:...

初始化2:...
画图2:...
动画2:...

\"\"\"
+操作0(_光束,)->+[del](,+操作0)...
->的(操作0,初始化#0)->的(操作0,画图#0)->的(操作0,动画#0)...
->的(操作0,初始化2)->的(操作0,画图2)->的(操作0,动画2)...

->.\"凭依\"(+操作0,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)->的(_光束,波长)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本]#0(,+节点#1)->+[.]\"n\"(+[模板文本]#0,变量)...
->+[.](+[模板文本]#0,展宽)->+[.](+[模板文本]#0,腰宽)->+[.](+[模板文本]#0,波长)...
->+[.]\"焦点坐标\"(+[模板文本]#0,空间点#A)...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本]#0,起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本]#0,+[临时文本])
}...

->+[模板文本]#1(,+节点#2)->+[.]\"n\"(+[模板文本]#1,变量)...
->+[模板文本]#2(,+节点#3)->+[.]\"n\"(+[模板文本]#2,变量)...

->[]{
    []:->[==]\"inf\"(,展宽)...
        ->+[code](+[模板文本]#0,初始化2)->+[code](+[模板文本]#1,画图2)...
        ->+[code](+[模板文本]#2,动画2),

    ->+[code](+[模板文本]#0,初始化#0)->+[code](+[模板文本]#1,画图#0)...
        ->+[code](+[模板文本]#2,动画#0)
}



"(,)
的#45""(操作0#44,动画#46)
动画#46"w_z%n=w_0%n.*sqrt(1+((c*t(i)+init%n-focus%n(1))./(z_R%n)).^(2));

h%n.Position(1)=c*t(i)+init%n-c*tau%n/sqrt(2)/2;
h%n.Position(2)=focus%n(2)-w_z%n/2;
h%n.Position(4)=w_z%n;

"(,)
的#47""(操作0#44,初始化#48)
初始化#48"lm%n=%波长;
tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=-1.5*c*tau%n;
else
    init%n=focus%n(1)-%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm%n;
z=linspace(pt0(1),pt0(1)+W0,100);
w%n=w_0%n.*sqrt(1+((z-focus%n(1))./(z_R%n)).^(2));

"(,)
的#49""(操作0#44,画图#50)
画图#50"patch([z,fliplr(z)],focus%n(2)+[w%n/2,-fliplr(w%n)/2],[1,0,0],'FaceAlpha',0.2)
h%n=rectangle('Position',[init%n-c*tau%n/sqrt(2)/2,pt1(2)-w%n(1)/2,c*tau%n/sqrt(2),w%n(1)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);
"(,)
的#51""(操作0#44,初始化2#52)
初始化2#52"lm%n=%波长;
tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=focus%n(1);
else
    init%n=focus%n(1)-%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm%n;
z=linspace(pt0(1),pt0(1)+W0,100);
w%n=w_0%n.*sqrt(1+((z-focus%n(1))./(z_R%n)).^(2));

"(,)
的#53""(操作0#44,画图2#54)
画图2#54"patch([z,fliplr(z)],focus%n(2)+[w%n/2,-fliplr(w%n)/2],[1,0,0],'FaceAlpha',0.2)
h%n=patch([z(1),fliplr(z(1))],focus%n(2)+[w%n(1)/2,-fliplr(w%n(1))/2],[1,0,0],'FaceAlpha',0.2);
"(,)
的#55""(操作0#44,动画2#56)
动画2#56"z_t0_%n=c*t(i)+init%n-focus%n(1);
z_t%n=z(z<z_t0_%n);
w_t%n=w%n(z<z_t0_%n);
h%n.XData=[z_t%n,fliplr(z_t%n)];
h%n.YData=focus%n(2)+[w_t%n/2,-fliplr(w_t%n)/2];


"(,)
的#57""(库#34,操作1a#58)
操作1a#58"\"\"\"
初始化:...
画图:...
动画:...

\"\"\"
+操作1a(_光束,)->+[del](,+操作1a)...
->的(操作1a,初始化#0)->的(操作1a,画图#0)->的(操作1a,动画#0)...

->.\"凭依\"(+操作1a,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本](初始化#0,+节点#1)->+[.]\"n\"(+[模板文本],变量)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->+[.]\"焦点坐标\"(+[模板文本],空间点#A)...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)...
->+[模板文本](动画#0,+节点#3)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#59""(操作1a#58,动画#60)
动画#60"w_z%n=w_0%n.*sqrt(1+((c*t(i)+init%n-focus%n(2))./(z_R%n)).^(2));

h%n.Position(1)=pt1(1)+focus%n(1)-w_z%n/2;
h%n.Position(2)=c*t(i)+init%n-c*tau%n/sqrt(2)/2;
h%n.Position(3)=w_z%n;

"(,)
的#61""(操作1a#58,初始化#62)
初始化#62"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=-L0/2;
else
    init%n=focus%n(2)-%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z%n=linspace(pt0(2)-L0/2,pt0(2)+L0/2,100);
w%n=w_0%n.*sqrt(1+((z%n-focus%n(2))./(z_R%n)).^(2));

"(,)
的#63""(操作1a#58,画图#64)
画图#64"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.2)

h%n=rectangle('Position',[pt1(1)+focus%n(1)-w%n(1)/2,init%n-c*tau%n*1.2,w%n(1),c*tau%n/sqrt(2)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);

"(,)
的#65""(库#18,电子代码#66)
电子代码#66"\"\"\"
描述结构:...
库:...

\"\"\"
+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->+[code]([想],描述结构)->[想](_电子,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}


"(,)
的#67""(电子代码#66,库#68)
库#68"

操作0:...

"(,)
的#69""(库#68,操作0#70)
操作0#70"\"\"\"
初始化:...
画图:...

\"\"\"
+操作0(_电子,)->+[del](,+操作0)...
->的(操作0,初始化#0)->的(操作0,画图#0)...

->.\"凭依\"(+操作0,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...

->+[模板文本](初始化#0,+节点#1)...
    ->+[.]\"n\"(+[模板文本],变量)->+[.](+[模板文本],数密度)...
->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#71""(操作0#70,初始化#72)
初始化#72"%代码
n%n=%数密度*ones(size(x));

"(,)
的#73""(操作0#70,画图#74)
画图#74"contourf(x,y,n%n);
"(,)
的#75""(电子代码#66,描述结构#76)
描述结构#76"\"\"\"


\"\"\"
+描述结构(_电子,_凭依)->+操作(+描述结构,)...

->[]{
    []:->+操作0(_电子,_凭依)->+的(+操作,+操作0)
}

"(,)

## end
#653, 190:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成PIC预览动画"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#655, 57349:
结构转PIConGPU代码#0"
召唤规则:...
降临规则:...


"(,)
的#1""(结构转PIConGPU代码#0,召唤规则#2)
召唤规则#2"\"\"\"

->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成PIConGPU代码\"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->的(_媒介,状态)->状态->[==]\"上传\"(,状态)...
        ->+上传文件夹(_媒介,_凭依)->+的(操作,+上传文件夹),
    ->[]
}...
->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->[]{
    []:->.\"不构造\"(召唤星辰,),
    ->.\"1D\"(召唤星辰,)->+代码结构_1D(_媒介,_凭依)->+的(操作,+代码结构_1D),
    ->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)
}...

->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)
的#3""(结构转PIConGPU代码#0,降临规则#4)
降临规则#4"+[粘贴](,降临规则)

设置变量:...
代码结构:...
整理代码:...
上传文件夹:...
整理结构:...
将'上传文件夹'的\"_凭依\"替换为\"_媒介\"


"(,)
的#5""(降临规则#4,设置变量#6)
设置变量#6"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_题目)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#7""(设置变量#6,描述结构#8)
描述结构#8"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_节点)->_节点{
            []:->的(_节点,波长)->波长,
            ->的(_节点,焦点位置)->焦点位置,
            ->的(_节点,数密度)->数密度
        }->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#9""(描述结构#8,P代码#10)
P代码#10"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"_varb\"
if \"探针\" in name:
    type=\"_probe\"
elif \"泵光\" in name or \"驱动光\" in name:
    type=\"_pump\"
elif \"光\" in name:
    type=\"_light\"
elif \"电子\" in name:
    type=\"_plasma\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#11""(降临规则#4,整理代码#12)
整理代码#12"\"\"\"
内容:...


\"\"\"
+整理代码(_媒介,_凭依)->+[del](,+整理代码)...
->的(整理代码,内容)...

->+[修改内容](内容,_凭依)...
=>的(_凭依,_节点)->的(_节点,地址)=>+[结构转文本](_节点,_节点)...
    ->+[删除结构](,_节点)->+[有](_节点,+地址)->[m_text](地址,+地址)



"(,)
的#13""(整理代码#12,内容#14)
内容#14"
png:...
grid:...
incidentField:...
density:...
myscript:...

+[保存文本](,myscript)

"(,)
的#15""(降临规则#4,代码结构#16)
代码结构#16"\"\"\"
描述结构:...
库:...

\"\"\"
+代码结构(_媒介,_凭依)->+[del](,+代码结构)...
->的(代码结构,描述结构)->的(代码结构,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}


"(,)
的#17""(代码结构#16,描述结构#18)
描述结构#18"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->+整理光束(_凭依,_凭依)->+的(+操作,+整理光束)...

->[]{
    []=>的(_媒介,_实体)->_实体=>[]:
        ->的(_实体,数密度)...
            ->+电子代码(_实体,_凭依)->+的(+操作,+电子代码),
        ->的(_实体,探测间隔)...
            ->+探测代码(_实体,_凭依)->+的(+操作,+探测代码),
        ->的(_实体,a0)->[]{[]=>[==]\"0\"(,a0)}...
            ->+光束代码(_实体,_凭依)->+的(+操作,+光束代码),
        ->[]
}...

->[]{
    []:->的(_媒介,png代码)->png代码(,)...
        ->+png代码(png代码,_凭依)->+的(+操作,+png代码),
    ->[]
}...

->+框架代码(_媒介,_凭依)->+的(+操作,+框架代码)...
->+整体结构(_媒介,_凭依)->+的(+操作,+整体结构)

"(,)
的#19""(代码结构#16,库#20)
库#20"
整体结构:...
将'整体结构'的\"框架代码\"替换为\"整体结构\"
在选择区域中, 将'整体结构'的\"density\"替换为\"myscript\"
在选择区域中, 将'整体结构'的\"#d\"替换为\"#m\"
+[新建阅读窗口](,整体结构)

框架代码:...
探测代码:...
+[新建阅读窗口](,探测代码)

png代码:...
电子代码:...
光束代码:...
在选择区域中, 将'框架代码'的\"nt\"替换为\"dt\"
将'光束代码'的\"电子\"替换为\"光束\"

+[新建阅读窗口](,框架代码)

整理光束:...
将'整理光束'的\"_光束\"替换为\"注入方式\"

"(,)
的#21""(库#20,框架代码#22)
框架代码#22"\"\"\"
模板:...
单核模板:...
grid模板:...

默认输出:...
默认输出2:...
输出3:...

M代码:...
运行模板:...
窗口模板:...
窗口停止:...

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,模板)->的(框架代码,单核模板)->的(框架代码,grid模板)...
->的(框架代码,M代码)->的(框架代码,默认输出)...
->的(框架代码,运行模板)->的(框架代码,窗口模板)->的(框架代码,窗口停止)...

->的(_凭依,myscript)->插入(myscript,)->+[修改内容](模板,myscript)...
    ->+的(插入,+运行参数)->+的(插入,+移动窗口)->+的(插入,+输出)...
    ->+[修改内容](默认输出,+输出)...
->的(_凭依,grid)...

->的(_媒介,模拟空间)...
    ->的(模拟空间,宽度#0)->的(模拟空间,长度#0)...
->的(_媒介,窗口)...
    ->的(窗口,宽度#1)->的(窗口,长度#1)->的(窗口,启动时间)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"W0\"(+[matlab],宽度#0)->+[.]\"W1\"(+[matlab],宽度#1)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"Dt\"(+[matlab],启动时间)...

->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"Depth\"(+[matlab],深度),
    ->+[.]\"Depth\"(+[matlab],长度#1)
}...
->[]{
    []:->的(模拟空间,时间步长)->时间步长->+[.]\"dtt\"(+[matlab],时间步长),
    ->+[临时文本]\"1.39e-16\"->+[.]\"dtt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,格点尺寸)->格点尺寸->+[.]\"dsiz\"(+[matlab],格点尺寸),
    ->+[临时文本]\"4.43e-8,1.772e-7,1.772e-7\"->+[.]\"dsiz\"(+[matlab],+[临时文本])
}...

->+[模板文本](grid模板,grid)...
->+[.](+[模板文本],+dx)->+[o](+[matlab],+dx)->+[del](,+dx)...
->+[.](+[模板文本],+dy)->+[o](+[matlab],+dy)->+[del](,+dy)...
->+[.](+[模板文本],+dz)->+[o](+[matlab],+dz)->+[del](,+dz)...
->+[.](+[模板文本],+dt)->+[o](+[matlab],+dt)->+[del](,+dt)...

->+[模板文本](运行模板,+运行参数)...
->+[.](+[模板文本],+nx)->+[o](+[matlab],+nx)->+[del](,+nx)...
->+[.](+[模板文本],+ny)->+[o](+[matlab],+ny)->+[del](,+ny)...
->+[.](+[模板文本],+nz)->+[o](+[matlab],+nz)->+[del](,+nz)...
->+[.](+[模板文本],+nt)->+[o](+[matlab],+nt)->+[del](,+nt)...

->[]{
    []:->+[.]\"W0\"([matlab],宽度#0)->+[.]\"W1\"([matlab],宽度#1)...
        ->[matlab]\"state=(W0-W1==0);\"(Matlab,)...
        ->+[修改内容](单核模板,myscript),
    ->+顺序(+移动窗口,)->+[文本结构_插入尾部](+移动窗口,+节点)...
        ->+[模板文本](窗口模板,+节点)...
        ->+[.](+[模板文本],+启动时间)->+[o]\"start_point\"(+[matlab],+启动时间)...
        ->+[del](,+启动时间)
}...
->[]{
    []:->的(窗口,停止时间)->停止时间->顺序(+移动窗口,)...
        ->+[.]\"time_after\"(+[matlab],停止时间)...
        ->+[文本结构_插入尾部](+移动窗口,+节点)...
        ->+[模板文本](窗口停止,+节点)...
        ->+[.](+[模板文本],+停止时间)->+[o]\"stop_time\"(+[matlab],+停止时间)...
        ->+[del](,+停止时间),
    ->+[临时文本]\"0\"->+[.]\"time_after\"(+[matlab],+[临时文本])
}

"(,)
的#23""(框架代码#22,模板#24)
模板#24"#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     \"sbatch milan.serial.slurm\" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute \"module load launcher\" 
#       followed by \"module help launcher\".
#----------------------------------------------------

#SBATCH -J testPIConGPU           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p gpu-a100          # Queue (partition) name
#SBATCH -N 4               # Total # of nodes (must be 1 for serial)
#SBATCH -n 4               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 01:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module load cuda/11.3
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $PICSRC
echo $LD_LIBRARY_PATH


ibrun ./bin/picongpu  -d 1 4 1  %运行参数   --periodic 0 0 0    %移动窗口   %输出      --e_macroParticlesCount.period 100    --versionOnce | tee ./output




"(,)
的#25""(框架代码#22,M代码#26)
M代码#26"%{
t0
+[M函数](,M代码)
%}

physics_constant;

dt=dtt;
dx=dsiz(2);
dy=dsiz(1);
dz=dsiz(3);

% y is the laser propagation axis
nx=int32(L1/dx);
ny=int32(W1/dy);
nz=int32(Depth/dz);
% nz=int32(12);
% nz=int32(64);

t_tol=Dt+time_after+(W0-W1)/c;
nt=int32(t_tol/dt);

u0=c;
start_point=Dt*c/W1;
stop_time=int32((t_tol-time_after)/dt);

Lx=L1;
Ly=W1;





%{
+[M函数](,M代码)
%}"(,)
的#27""(框架代码#22,运行模板#28)
运行模板#28"-g %nx %ny %nz -s %nt"(,)
的#29""(框架代码#22,窗口模板#30)
窗口模板#30"-m --windowMovePoint %启动时间  "(,)
的#31""(框架代码#22,窗口停止#32)
窗口停止#32"--stopWindow %停止时间"(,)
的#33""(框架代码#22,默认输出#34)
默认输出#34"--e_png.period 100     --e_png.axis yx --e_png.slicePoint 0.5   --e_png.folder pngElectronsYX   --e_energyHistogram.period 100    --e_energyHistogram.binCount 1024    --e_energyHistogram.minEnergy 500 --e_energyHistogram.maxEnergy 500000      --e_energyHistogram.filter all"(,)
的#35""(框架代码#22,单核模板#36)
单核模板#36"#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     \"sbatch milan.serial.slurm\" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute \"module load launcher\" 
#       followed by \"module help launcher\".
#----------------------------------------------------

#SBATCH -J testPIConGPU           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p gpu-a100          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 01:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module load cuda/11.3
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $PICSRC
echo $LD_LIBRARY_PATH


./bin/picongpu  -d 1 1 1  %运行参数   --periodic 0 0 0   %输出      --e_macroParticlesCount.period 100  --versionOnce | tee ./output




"(,)
的#37""(框架代码#22,grid模板#38)
grid模板#38"/* 
地址::%地址
*/

#pragma once

namespace picongpu
{
    namespace SI
    {
        constexpr float_64 DELTA_T_SI = %dt;
        constexpr float_64 CELL_WIDTH_SI = %dx;
        constexpr float_64 CELL_HEIGHT_SI = %dy;
        constexpr float_64 CELL_DEPTH_SI = %dz;
    } // namespace SI
} // namespace picongpu"(,)
的#39""(框架代码#22,默认输出2#40)
默认输出2#40"--e_png.period 100     --e_png.axis yx --e_png.slicePoint 0.5   --e_png.folder pngElectronsYX   --e_energyHistogram.period 100    --e_energyHistogram.binCount 1024    --e_energyHistogram.minEnergy 500 --e_energyHistogram.maxEnergy 500000      --e_energyHistogram.filter all"(,)
的#41""(框架代码#22,输出3#42)
输出3#42"--e_png.period 50     --e_png.axis yz --e_png.slicePoint 0.9   --e_png.folder pngElectronsYX   --e_energyHistogram.period 100    --e_energyHistogram.binCount 1024    --e_energyHistogram.minEnergy 500 --e_energyHistogram.maxEnergy 500000      --e_energyHistogram.filter all"(,)
的#43""(库#20,光束代码#44)
光束代码#44"\"\"\"
描述结构:...
库:...

\"\"\"
+光束代码(_光束,_凭依)->+[del](,+光束代码)...
->的(光束代码,描述结构)->的(光束代码,库)...

->.(+光束代码,_媒介)...
->+[code]([想],描述结构)->[想](_光束,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)...
        ->+[.]\"媒介\"(+[做],_媒介)...
        ->+[.]\"偏振\"(+[做],+[临时文本])...
            ->偏振类型(操作,)->偏振方向(偏振类型,)->[m_text](偏振方向,+[临时文本])
}
"(,)
的#45""(光束代码#44,描述结构#46)
描述结构#46"\"\"\"
偏振特征:...

\"\"\"
+描述结构(_光束,_凭依)->+操作(+描述结构,)...

->+[code]([想],偏振特征)->+[.]\"操作\"([想],+操作)->[想](_光束,)...
->[]{
    []:->的(_光束,入射边)->入射边{
        []:->[==]\"ymin\"(,入射边)->+操作1a(_光束,_凭依)->+的(+操作,+操作1a),
        ->[==]\"ymax\"(,入射边)->+操作1b(_光束,_凭依)->+的(+操作,+操作1b)
    },
    ->+操作0(_光束,_凭依)->+的(+操作,+操作0)
}...

->的(_凭依,incidentField)...
->[]{
    []:->插入(incidentField,)->的(插入,基本参数),
    ->+光束结构(_凭依,_凭依)->+的(+操作,+光束结构)
}

"(,)
的#47""(描述结构#46,偏振特征#48)
偏振特征#48"\"\"\"
M代码:...

\"\"\"
+偏振特征(_光束,)->.\"操作\"(+偏振特征,操作)...
->+偏振类型(操作,)->+偏振方向(+偏振类型,)...

->+方向\"0,0\"{
    []:->的(_光束,偏振)->偏振->[m_text](偏振,+方向), ->[]
}...
->+入射边\"xmin\"{
    []:->的(_光束,入射边)->入射边->[m_text](入射边,+入射边), ->[]
}...

->+[code]([matlab],M代码)...
->+[s]\"in_bd\"([matlab],+入射边)->+[.]\"pol_dir\"([matlab],+方向)...
->[matlab](Matlab,+偏振方向)


"(,)
的#49""(偏振特征#48,M代码#50)
M代码#50"%{
+[M函数]
%}

state=1;

if strcmp(in_bd,'xmin')
    v_p=[0,1,0];
    v_q=[0,0,1];
elseif strcmp(in_bd,'ymin') || strcmp(in_bd,'ymax')
    v_p=[0,0,1];
    v_q=[1,0,0];
else
    v_p=[1,0,0];
    v_q=[0,1,0];
end

if norm(pol_dir)==0
        ans=v_p;
else

% global component
    p_n=pol_dir/norm(pol_dir);
    ans=p_n(1)*v_p+p_n(2)*v_q;

% initial phase
    init_phase=acos(real(p_n(1)))*sign_1(imag(p_n(1)));

% phase difference
    E_Dr=p_n(1)/p_n(2);
    E_Dr=E_Dr/abs(E_Dr);
    E_phase=acos(real(E_Dr))*sign_1(imag(E_Dr));
    if isnan(E_phase)
        E_phase=0;
    end

end


"(,)
的#51""(光束代码#44,库#52)
库#52"
光束结构:...
+[新建阅读窗口](,光束结构)
+[复制结构](,光束结构)

操作1a:...
操作1b:...
将条目\"操作0\"复制为条目\"操作1a\"
+[修改标题]\"操作1b_del\"(,操作1b)

操作1a_del:...
操作1b_del:...


操作0:...
将'操作0'的\"电子\"替换为\"光束\"
+[新建阅读窗口](,操作0)

"(,)
的#53""(库#52,操作1a_del#54)
操作1a_del#54"\"\"\"
基本参数:...
高斯参数:...
注入参数:...

\"\"\"
+操作1a(_光束,)->+[del](,+操作1a)...
->的(操作1a,基本参数#0)->的(操作1a,高斯参数#0)->的(操作1a,注入参数#0)...

->.\"凭依\"(+操作1a,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...
->的(_光束,波长)->的(_光束,a0)...

->的(_凭依,incidentField)->插入(incidentField,)...
->的(插入,基本参数)->的(插入,光束参数)...
->的(插入,注入方式)->插入#1(注入方式,)->的(插入#1,XMin)...

->+[文本结构_插入尾部](基本参数,+节点#1)...
->+[文本结构_插入尾部](光束参数,+节点#2)...
->+[文本结构_插入尾部](XMin,+节点#3)...

->+[模板文本](基本参数#0,+节点#1)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],波长)->+[.](+[模板文本],展宽)->+[.](+[模板文本],a0)...
->+[模板文本](高斯参数#0,+节点#2)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],腰宽)...
->+[模板文本](注入参数#0,+节点#3)->+[.](+[模板文本],变量)


"(,)
的#55""(操作1a_del#54,基本参数#56)
基本参数#56"            struct LwfaBaseParams%变量
            {
                static constexpr float_64 WAVE_LENGTH_SI = %波长;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI;
                static constexpr float_64 _A0 = %a0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = %展宽;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 0.0;
                static constexpr float_64 DIRECTION_Y = 1.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = 50*0.5e-3; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = 50*0.5e-3;
                static constexpr float_64 FOCUS_POSITION_Z_SI = 10*0.5e-3; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr float_64 POLARISATION_DIRECTION_X = 1.0;
                static constexpr float_64 POLARISATION_DIRECTION_Y = 0.0;
                static constexpr float_64 POLARISATION_DIRECTION_Z = 0.0;
            };

"(,)
的#57""(操作1a_del#54,高斯参数#58)
高斯参数#58"            namespace LwfaGaussianBeam%变量
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = 15.0;
                using LAGUERREMODES_t = LwfaGaussianBeam%变量::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeam%变量::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeam%变量::MODENUMBER;
            };

"(,)
的#59""(操作1a_del#54,注入参数#60)
注入参数#60"profiles::GaussianBeam<BeamParam%变量>"(,)
的#61""(库#52,光束结构#62)
光束结构#62"\"\"\"
模板:...
注入模板:...

\"\"\"
+光束结构(,_凭依)->+[del](,+光束结构)...
->的(光束结构,模板)->的(光束结构,注入模板)...

->的(_凭依,incidentField)->+[修改内容](模板,incidentField)...
->插入(incidentField,)->的(incidentField,插入)...

->+的(插入,+基本参数)->+顺序(+基本参数,)->+的(+基本参数,+顺序)...
->+的(插入,+光束参数)->+顺序(+光束参数,)->+的(+光束参数,+顺序)...
->+的(插入,+注入方式)->+插入(+注入方式,)->+的(+注入方式,+插入)...

->+[修改内容](注入模板,+注入方式)...
->+的(+插入,+XMin)->+的(+插入,+XMax)...
->+的(+插入,+YMin)->+的(+插入,+YMax)...
->+的(+插入,+ZMin)->+的(+插入,+ZMax)

"(,)
的#63""(光束结构#62,模板#64)
模板#64"/*. 
地址::%地址
*/


#pragma once

#include \"picongpu/fields/incidentField/profiles/profiles.def\"

namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
%基本参数

%光束参数

%注入方式

            constexpr int32_t POSITION[3][2] = {
                {16, -16}, // x direction [negative, positive]
                {16, -16}, // y direction [negative, positive]
                {8, -8} // z direction [negative, positive]
            };

        } // namespace incidentField
    } // namespace fields
} // namespace picongpu
"(,)
的#65""(光束结构#62,注入模板#66)
注入模板#66"            using XMin = %XMin;
            using XMax = %XMax;
            using YMin = %YMin;
            using YMax = %YMax;
            using ZMin = %ZMin;
            using ZMax = %ZMax;"(,)
的#67""(库#52,操作1b_del#68)
操作1b_del#68"\"\"\"
基本参数:...
高斯参数:...
注入参数:...

\"\"\"
+操作1b(_光束,)->+[del](,+操作1b)...
->的(操作1b,基本参数#0)->的(操作1b,高斯参数#0)->的(操作1b,注入参数#0)...

->.\"凭依\"(+操作1b,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...
->的(_光束,波长)->的(_光束,a0)...

->的(_凭依,incidentField)->插入(incidentField,)...
->的(插入,基本参数)->的(插入,光束参数)...
->的(插入,注入方式)->插入#1(注入方式,)->的(插入#1,XMax)...

->+[文本结构_插入尾部](基本参数,+节点#1)...
->+[文本结构_插入尾部](光束参数,+节点#2)...
->+[文本结构_插入尾部](XMax,+节点#3)...

->+[模板文本](基本参数#0,+节点#1)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],波长)->+[.](+[模板文本],展宽)->+[.](+[模板文本],a0)...
->+[模板文本](高斯参数#0,+节点#2)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],腰宽)...
->+[模板文本](注入参数#0,+节点#3)->+[.](+[模板文本],变量)


"(,)
的#69""(操作1b_del#68,注入参数#70)
注入参数#70"profiles::GaussianBeam<BeamParam%变量>"(,)
的#71""(操作1b_del#68,高斯参数#72)
高斯参数#72"            namespace LwfaGaussianBeam%变量
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = 15.0;
                using LAGUERREMODES_t = LwfaGaussianBeam%变量::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeam%变量::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeam%变量::MODENUMBER;
            };

"(,)
的#73""(操作1b_del#68,基本参数#74)
基本参数#74"            struct LwfaBaseParams%变量
            {
                static constexpr float_64 WAVE_LENGTH_SI = %波长;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI;
                static constexpr float_64 _A0 = %a0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = %展宽;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 0.0;
                static constexpr float_64 DIRECTION_Y = 1.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = 50*0.5e-3; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = 50*0.5e-3;
                static constexpr float_64 FOCUS_POSITION_Z_SI = 10*0.5e-3; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr float_64 POLARISATION_DIRECTION_X = -1.0;
                static constexpr float_64 POLARISATION_DIRECTION_Y = 0.0;
                static constexpr float_64 POLARISATION_DIRECTION_Z = 0.0;
            };

"(,)
的#75""(库#52,操作1b#76)
操作1b#76"\"\"\"
基本参数:...
高斯参数:...
注入参数:...
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"
+操作1b(_光束,)->+[del](,+操作1b)...
->的(操作1b,M代码)...
->的(操作1b,基本参数#0)->的(操作1b,高斯参数#0)->的(操作1b,注入参数#0)...

->.\"凭依\"(+操作1b,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->.\"媒介\"(+操作1b,_媒介)->的(_媒介,模拟空间)->的(模拟空间,长度)...
->.\"偏振\"(+操作0,_偏振)...

->变量(,_光束)...
->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...
->的(_光束,波长)->的(_光束,a0)...

->的(_凭依,incidentField)->插入(incidentField,)...
->的(插入,基本参数)->的(插入,光束参数)...
->的(插入,注入方式)->插入#1(注入方式,)->的(插入#1,XMax)...

->+[文本结构_插入尾部](基本参数,+节点#1)...
->+[文本结构_插入尾部](光束参数,+节点#2)...
->+[文本结构_插入尾部](XMax,+节点#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"lm_0\"(+[matlab],波长)->+[.]\"Dtau\"(+[matlab],展宽)...
->+[.]\"a_0\"(+[matlab],a0)->+[.]\"w_0\"(+[matlab],腰宽)...
->+[.]\"pt_0\"(+[matlab],空间点#A)->+[.]\"L0\"(+[matlab],长度)...
->+[.]\"E_n\"(+[matlab],_偏振)...
->[]{
    []:->的(_光束,起始位置)->+[.]\"DL0\"(+[matlab],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"DL0\"(+[matlab],+[临时文本])
}...

->+[模板文本](基本参数#0,+节点#1)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+波长)->+[o]\"lm_out\"(+[matlab],+波长)->+[del](,+波长)...
    ->+[.](+[模板文本],+展宽)->+[o]\"Dt_out\"(+[matlab],+展宽)->+[del](,+展宽)...
    ->+[.](+[模板文本],+a0)->+[o]\"a0_out\"(+[matlab],+a0)->+[del](,+a0)...

    ->+[.](+[模板文本],+x0)->+[o]\"x0\"(+[matlab],+x0)->+[del](,+x0)...
    ->+[.](+[模板文本],+y0)->+[o]\"y0\"(+[matlab],+y0)->+[del](,+y0)...
    ->+[.](+[模板文本],+z0)->+[o]\"z0\"(+[matlab],+z0)->+[del](,+z0)...

    ->+[.](+[模板文本],+Ex)->+[o]\"Ex\"(+[matlab],+Ex)->+[del](,+Ex)...
    ->+[.](+[模板文本],+Ey)->+[o]\"Ey\"(+[matlab],+Ey)->+[del](,+Ey)...
    ->+[.](+[模板文本],+Ez)->+[o]\"Ez\"(+[matlab],+Ez)->+[del](,+Ez)...

->+[模板文本](高斯参数#0,+节点#2)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+腰宽)->+[o]\"w0_out\"(+[matlab],+腰宽)->+[del](,+腰宽)...
    ->+[.](+[模板文本],+起始)->+[o]\"init\"(+[matlab],+起始)->+[del](,+起始)...
->+[模板文本](注入参数#0,+节点#3)->+[.](+[模板文本],变量)


"(,)
的#77""(操作1b#76,基本参数#78)
基本参数#78"            struct LwfaBaseParams%变量
            {
                static constexpr float_64 WAVE_LENGTH_SI = %波长;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI
                    * ::picongpu::SI::ELECTRON_MASS_SI * ::picongpu::SI::SPEED_OF_LIGHT_SI
                    * ::picongpu::SI::SPEED_OF_LIGHT_SI / ::picongpu::SI::ELECTRON_CHARGE_SI;
                static constexpr float_64 _A0 = %a0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = %展宽;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = -1.0;
                static constexpr float_64 DIRECTION_Y = 0.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = %x0; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = %y0;
                static constexpr float_64 FOCUS_POSITION_Z_SI = %z0; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Linear;
                static constexpr float_64 POLARISATION_DIRECTION_X = %Ex;
                static constexpr float_64 POLARISATION_DIRECTION_Y = %Ey;
                static constexpr float_64 POLARISATION_DIRECTION_Z = %Ez;
            };

"(,)
的#79""(操作1b#76,高斯参数#80)
高斯参数#80"            namespace LwfaGaussianBeam%变量
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = %起始;
                using LAGUERREMODES_t = LwfaGaussianBeam%变量::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeam%变量::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeam%变量::MODENUMBER;
            };

"(,)
的#81""(操作1b#76,注入参数#82)
注入参数#82"profiles::GaussianBeam<BeamParam%变量>"(,)
的#83""(操作1b#76,M代码#84)
M代码#84"%{
+[M函数](,M代码)
%}

lm_out=lm_0;
w_out=w_0;
a0_out=a_0;
x0=pt_0(2)+L0/2;
y0=pt_0(1);
z0=double(nz)*dz/2;
w0_out=w_0;
Dt_out=Dtau;

if isnan(DL0)
    init=4;
else
    x1=x0+DL0;
    init=(x1-L0)/c/Dtau*2;
end

Ey=E_n(1);
Ex=E_n(2);
Ez=E_n(3);


%{
+[M函数](,M代码)
%}"(,)
的#85""(库#52,操作1a#86)
操作1a#86"\"\"\"
基本参数:...
高斯参数:...
注入参数:...
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"
+操作1a(_光束,)->+[del](,+操作1a)...
->的(操作1a,M代码)...
->的(操作1a,基本参数#0)->的(操作1a,高斯参数#0)->的(操作1a,注入参数#0)...

->.\"凭依\"(+操作1a,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->.\"媒介\"(+操作1a,_媒介)->的(_媒介,模拟空间)->的(模拟空间,长度)...
->.\"偏振\"(+操作1a,_偏振)...

->变量(,_光束)...
->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...
->的(_光束,波长)->的(_光束,a0)...

->的(_凭依,incidentField)->插入(incidentField,)...
->的(插入,基本参数)->的(插入,光束参数)...
->的(插入,注入方式)->插入#1(注入方式,)->的(插入#1,XMin)...

->+[文本结构_插入尾部](基本参数,+节点#1)...
->+[文本结构_插入尾部](光束参数,+节点#2)...
->+[文本结构_插入尾部](XMin,+节点#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"lm_0\"(+[matlab],波长)->+[.]\"Dtau\"(+[matlab],展宽)...
->+[.]\"a_0\"(+[matlab],a0)->+[.]\"w_0\"(+[matlab],腰宽)...
->+[.]\"pt_0\"(+[matlab],空间点#A)->+[.]\"L0\"(+[matlab],长度)...
->+[.]\"E_n\"(+[matlab],_偏振)...
->[]{
    []:->的(_光束,起始位置)->+[.]\"DL0\"(+[matlab],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"DL0\"(+[matlab],+[临时文本])
}...

->+[模板文本](基本参数#0,+节点#1)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+波长)->+[o]\"lm_out\"(+[matlab],+波长)->+[del](,+波长)...
    ->+[.](+[模板文本],+展宽)->+[o]\"Dt_out\"(+[matlab],+展宽)->+[del](,+展宽)...
    ->+[.](+[模板文本],+a0)->+[o]\"a0_out\"(+[matlab],+a0)->+[del](,+a0)...

    ->+[.](+[模板文本],+x0)->+[o]\"x0\"(+[matlab],+x0)->+[del](,+x0)...
    ->+[.](+[模板文本],+y0)->+[o]\"y0\"(+[matlab],+y0)->+[del](,+y0)...
    ->+[.](+[模板文本],+z0)->+[o]\"z0\"(+[matlab],+z0)->+[del](,+z0)...

    ->+[.](+[模板文本],+Ex)->+[o]\"Ex\"(+[matlab],+Ex)->+[del](,+Ex)...
    ->+[.](+[模板文本],+Ey)->+[o]\"Ey\"(+[matlab],+Ey)->+[del](,+Ey)...
    ->+[.](+[模板文本],+Ez)->+[o]\"Ez\"(+[matlab],+Ez)->+[del](,+Ez)...

->+[模板文本](高斯参数#0,+节点#2)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+腰宽)->+[o]\"w0_out\"(+[matlab],+腰宽)->+[del](,+腰宽)...
    ->+[.](+[模板文本],+起始)->+[o]\"init\"(+[matlab],+起始)->+[del](,+起始)...
->+[模板文本](注入参数#0,+节点#3)->+[.](+[模板文本],变量)


"(,)
的#87""(操作1a#86,M代码#88)
M代码#88"%{
+[M函数](,M代码)
%}

lm_out=lm_0;
w_out=w_0;
a0_out=a_0;
x0=pt_0(2)+L0/2;
y0=pt_0(1);
z0=double(nz)*dz/2;
w0_out=w_0;
Dt_out=Dtau;

if isnan(DL0)
    init=4;
else
    x1=x0-DL0;
    init=-x1/c/Dtau*2;
end

Ey=E_n(1);
Ex=E_n(2);
Ez=E_n(3);



%{
+[M函数](,M代码)
%}"(,)
的#89""(操作1a#86,注入参数#90)
注入参数#90"profiles::GaussianBeam<BeamParam%变量>"(,)
的#91""(操作1a#86,高斯参数#92)
高斯参数#92"            namespace LwfaGaussianBeam%变量
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = %起始;
                using LAGUERREMODES_t = LwfaGaussianBeam%变量::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeam%变量::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeam%变量::MODENUMBER;
            };

"(,)
的#93""(操作1a#86,基本参数#94)
基本参数#94"            struct LwfaBaseParams%变量
            {
                static constexpr float_64 WAVE_LENGTH_SI = %波长;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI
                    * ::picongpu::SI::ELECTRON_MASS_SI * ::picongpu::SI::SPEED_OF_LIGHT_SI
                    * ::picongpu::SI::SPEED_OF_LIGHT_SI / ::picongpu::SI::ELECTRON_CHARGE_SI;
                static constexpr float_64 _A0 = %a0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = %展宽;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 1.0;
                static constexpr float_64 DIRECTION_Y = 0.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = %x0; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = %y0;
                static constexpr float_64 FOCUS_POSITION_Z_SI = %z0; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Linear;
                static constexpr float_64 POLARISATION_DIRECTION_X = %Ex;
                static constexpr float_64 POLARISATION_DIRECTION_Y = %Ey;
                static constexpr float_64 POLARISATION_DIRECTION_Z = %Ez;
            };

"(,)
的#95""(库#52,操作0#96)
操作0#96"\"\"\"
基本参数:...

高斯参数:...
chirp参数:...

注入参数:...
注入参数2:...

M代码:...
+[新建阅读窗口](,M代码)

\"\"\"
+操作0(_光束,)->+[del](,+操作0)...
->的(操作0,M代码)...
->的(操作0,基本参数#0)->的(操作0,高斯参数#0)->的(操作0,注入参数#0)...
->的(操作0,chirp参数#0)->的(操作0,注入参数2#0)...

->.\"凭依\"(+操作0,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->.\"媒介\"(+操作0,_媒介)->的(_媒介,模拟空间)->的(模拟空间,长度)...
->.\"偏振\"(+操作0,_偏振)...

->变量(,_光束)...
->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
->的(_光束,腰宽)->的(_光束,展宽)...
->的(_光束,波长)->的(_光束,a0)...

->的(_凭依,incidentField)->插入(incidentField,)...
->的(插入,基本参数)->的(插入,光束参数)...
->的(插入,注入方式)->插入#1(注入方式,)->的(插入#1,YMin)...

->+[文本结构_插入尾部](基本参数,+节点#1)...
->+[文本结构_插入尾部](光束参数,+节点#2)...
->+[文本结构_插入尾部](YMin,+节点#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"lm_0\"(+[matlab],波长)->+[.]\"Dtau\"(+[matlab],展宽)...
->+[.]\"a_0\"(+[matlab],a0)->+[.]\"w_0\"(+[matlab],腰宽)...
->+[.]\"pt_0\"(+[matlab],空间点#A)->+[.]\"L0\"(+[matlab],长度)...
->+[.]\"E_n\"(+[matlab],_偏振)...
->[]{
    []:->的(_光束,起始位置)->+[.]\"DL0\"(+[matlab],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"DL0\"(+[matlab],+[临时文本])
}...

->+[模板文本](基本参数#0,+节点#1)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+波长)->+[o]\"lm_out\"(+[matlab],+波长)->+[del](,+波长)...
    ->+[.](+[模板文本],+展宽)->+[o]\"Dt_out\"(+[matlab],+展宽)->+[del](,+展宽)...
    ->+[.](+[模板文本],+a0)->+[o]\"a0_out\"(+[matlab],+a0)->+[del](,+a0)...

    ->+[.](+[模板文本],+x0)->+[o]\"x0\"(+[matlab],+x0)->+[del](,+x0)...
    ->+[.](+[模板文本],+y0)->+[o]\"y0\"(+[matlab],+y0)->+[del](,+y0)...
    ->+[.](+[模板文本],+z0)->+[o]\"z0\"(+[matlab],+z0)->+[del](,+z0)...

    ->+[.](+[模板文本],+Ex)->+[o]\"Ex\"(+[matlab],+Ex)->+[del](,+Ex)...
    ->+[.](+[模板文本],+Ey)->+[o]\"Ey\"(+[matlab],+Ey)->+[del](,+Ey)...
    ->+[.](+[模板文本],+Ez)->+[o]\"Ez\"(+[matlab],+Ez)->+[del](,+Ez)...

->+[模板文本](,+节点#2)->+[.](+[模板文本],变量)...
    ->+[.](+[模板文本],+腰宽)->+[o]\"w0_out\"(+[matlab],+腰宽)->+[del](,+腰宽)...
    ->+[.](+[模板文本],+起始)->+[o]\"init\"(+[matlab],+起始)->+[del](,+起始)...
->[]{
    []:->[]{[]:->的(_光束,GDD)->GDD,->的(_光束,TOD)->TOD}...
        ->+[code](+[模板文本],chirp参数#0)...
        ->[]{
            []:->的(_光束,GDD)->GDD->+[.](+[模板文本],GDD),
            ->+[临时文本]\"0\"->+[.]\"GDD\"(+[模板文本],+[临时文本])
        }...
        ->[]{
            []:->的(_光束,TOD)->TOD->+[.](+[模板文本],TOD),
            ->+[临时文本]\"0\"->+[.]\"TOD\"(+[模板文本],+[临时文本])
        },
    ->+[code](+[模板文本],高斯参数#0)
}...

->+[模板文本](,+节点#3)->+[.](+[模板文本],变量)...
->[]{
    []:->[]{[]:->的(_光束,GDD)->GDD,->的(_光束,TOD)->TOD}...
        ->+[code](+[模板文本],注入参数2#0),
    ->+[code](+[模板文本],注入参数#0)
}

"(,)
的#97""(操作0#96,基本参数#98)
基本参数#98"            struct LwfaBaseParams%变量
            {
                static constexpr float_64 WAVE_LENGTH_SI = %波长;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI
                    * ::picongpu::SI::ELECTRON_MASS_SI * ::picongpu::SI::SPEED_OF_LIGHT_SI
                    * ::picongpu::SI::SPEED_OF_LIGHT_SI / ::picongpu::SI::ELECTRON_CHARGE_SI;
                static constexpr float_64 _A0 = %a0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = %展宽;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 0.0;
                static constexpr float_64 DIRECTION_Y = 1.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = %x0; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = %y0;
                static constexpr float_64 FOCUS_POSITION_Z_SI = %z0; // 96 cells
//                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr PolarisationType Polarisation = PolarisationType::Linear;
                static constexpr float_64 POLARISATION_DIRECTION_X = %Ex;
                static constexpr float_64 POLARISATION_DIRECTION_Y = %Ey;
                static constexpr float_64 POLARISATION_DIRECTION_Z = %Ez;
            };

"(,)
的#99""(操作0#96,高斯参数#100)
高斯参数#100"            namespace LwfaGaussianBeam%变量
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = %起始;
                using LAGUERREMODES_t = LwfaGaussianBeam%变量::LAGUERREMODES_t;
                using LAGUERREPHASES_t = LwfaGaussianBeam%变量::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = LwfaGaussianBeam%变量::MODENUMBER;
            };

"(,)
的#101""(操作0#96,注入参数#102)
注入参数#102"profiles::GaussianBeam<BeamParam%变量>"(,)
的#103""(操作0#96,M代码#104)
M代码#104"%{
+[M函数](,M代码)
%}

lm_out=lm_0;
w_out=w_0;
a0_out=a_0;
x0=pt_0(2)+L0/2;
y0=pt_0(1);
z0=double(nz)*dz/2;
w0_out=w_0;
Dt_out=Dtau;

if isnan(DL0)
    init=4;
else
    init=-(y0-DL0)/c/Dtau*2;
end

Ey=E_n(1);
Ex=E_n(2);
Ez=E_n(3);


%{
+[M函数](,M代码)
%}"(,)
的#105""(操作0#96,chirp参数#106)
chirp参数#106"
            struct BeamParam%变量 : public LwfaBaseParams%变量
            {
                static constexpr float_64 W0_SI = %腰宽 / 1.17741;
                static constexpr float_64 PULSE_INIT = %起始;
                static constexpr float_64 SD_SI = 0.0;
                static constexpr float_64 AD_SI = 0.0;
                static constexpr float_64 GDD_SI = %GDD;
                static constexpr float_64 TOD_SI = %TOD;
            };
"(,)
的#107""(操作0#96,注入参数2#108)
注入参数2#108"profiles::DispersiveLaser<BeamParam%变量>"(,)
的#109""(库#20,电子代码#110)
电子代码#110"\"\"\"
描述结构:...
库:...

\"\"\"
+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->.\"媒介\"(+电子代码,_媒介)...

->+[code]([想],描述结构)->[想](_电子,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}


"(,)
的#111""(电子代码#110,库#112)
库#112"

操作0:...

"(,)
的#113""(库#112,操作0#114)
操作0#114"\"\"\"
模板:...

\"\"\"
+操作0(_电子,_凭依)->+[del](,+操作0)...
->的(操作0,模板)...

->.\"媒介\"(+操作0,_媒介)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)->的(_电子,上升沿)...

->的(_凭依,density)...
->+[模板文本](模板,density)...
    ->+[.](+[模板文本],数密度)->+[.](+[模板文本],上升沿)->+[.](+[模板文本],宽度)




"(,)
的#115""(操作0#114,模板#116)
模板#116"/*
地址::%地址
+[保存文本](,density)
*/

#pragma once

#include \"picongpu/particles/densityProfiles/profiles.def\"
#include <pmacc/preprocessor/struct.hpp>

namespace picongpu
{
    namespace SI
    {
#ifndef PARAM_BASE_DENSITY_SI
#    define PARAM_BASE_DENSITY_SI %数密度
#endif
        constexpr float_64 BASE_DENSITY_SI = PARAM_BASE_DENSITY_SI;
    } // namespace SI

    namespace densityProfiles
    {
        PMACC_STRUCT(
            GaussianParameter,
            (PMACC_C_VALUE(float_X, gasFactor, -1.0))(PMACC_C_VALUE(float_X, gasPower, 4.0))
            (PMACC_C_VALUE(uint32_t, vacuumCellsY, 50))
            (PMACC_C_VALUE(float_64, gasCenterLeft_SI, %上升沿*2))(PMACC_C_VALUE(float_64, gasCenterRight_SI, %宽度-%上升沿*2))
            (PMACC_C_VALUE(float_64, gasSigmaLeft_SI, %上升沿))(
                PMACC_C_VALUE(float_64, gasSigmaRight_SI, %上升沿))); /* struct GaussianParam */

        using Gaussian = GaussianImpl<GaussianParameter>;
    } // namespace densityProfiles
} // namespace picongpu

"(,)
的#117""(电子代码#110,描述结构#118)
描述结构#118"\"\"\"


\"\"\"
+描述结构(_电子,_凭依)->+操作(+描述结构,)...

->[]{
    []:->+操作0(_电子,_凭依)->+的(+操作,+操作0)
}

"(,)
的#119""(库#20,整体结构#120)
整体结构#120"\"\"\"
density:...
grid:...
incidentField:...
png:...
myscript:...
+[移除注释]\"C\"(png,png)

\"\"\"
+整体结构(_媒介,_凭依)->+[del](,+整体结构)...
->的(整体结构,density)->的(整体结构,grid)->的(整体结构,png)...
->的(整体结构,incidentField)->的(整体结构,myscript)...

->的(_媒介,地址#0)...
    ->+[修改内容]\"%s/include/picongpu/param\"(地址#0,+[临时文本])...
->+的(_凭依,+density)->+的(+density,+地址#d)...
    ->+[修改内容]\"%s/density.param\"(+[临时文本],+地址#d)...
->+的(_凭依,+grid)->+的(+grid,+地址#g)...
    ->+[修改内容]\"%s/grid.param\"(+[临时文本],+地址#g)...
->+的(_凭依,+png)->+的(+png,+地址#p)...
    ->+[修改内容]\"%s/png.param\"(+[临时文本],+地址#p)...
->+的(_凭依,+incidentField)->+的(+incidentField,+地址#i)...
    ->+[修改内容]\"%s/incidentField.param\"(+[临时文本],+地址#i)...
->+的(_凭依,+myscript)->+的(+myscript,+地址#m)...
    ->+[修改内容]\"%s/myscript.txt\"(地址#0,+地址#m)...

->+的(_凭依,+info)->+的(+info,+地址#f)...
    ->+[修改内容]\"%s/info.txt\"(地址#0,+地址#f)->+[修改内容](_媒介,+info)...


->+插入(+density,)->+的(+density,+插入)->+的(+插入,+地址#d0)...
    ->+[修改内容](+地址#d,+地址#d0)->+[修改内容](density,+density)...
->+插入(+grid,)->+的(+grid,+插入)->+的(+插入,+地址#g0)...
    ->+[修改内容](+地址#g,+地址#g0)->+[修改内容](grid,+grid)...
->+插入(+png,)->+的(+png,+插入)->+的(+插入,+地址#p0)...
    ->+[修改内容](+地址#p,+地址#p0)->+[修改内容](png,+png)...
->+插入(+incidentField,)->+的(+incidentField,+插入)->+的(+插入,+地址#i0)...
    ->+[修改内容](+地址#i,+地址#i0)->+[修改内容](incidentField,+incidentField)...
->+插入(+myscript,)->+的(+myscript,+插入)->+的(+插入,+地址#m0)...
    ->+[修改内容](+地址#m,+地址#m0)->+[修改内容](myscript,+myscript)


"(,)
的#121""(整体结构#120,density#122)
density#122"/*
地址::%地址
+[保存文本](,density)
*/

#pragma once

#include \"picongpu/particles/densityProfiles/profiles.def\"
#include <pmacc/preprocessor/struct.hpp>

namespace picongpu
{
    namespace SI
    {
#ifndef PARAM_BASE_DENSITY_SI
#    define PARAM_BASE_DENSITY_SI 1e+25
#endif
        constexpr float_64 BASE_DENSITY_SI = PARAM_BASE_DENSITY_SI;
    } // namespace SI

    namespace densityProfiles
    {
        PMACC_STRUCT(
            GaussianParameter,
            (PMACC_C_VALUE(float_X, gasFactor, -1.0))(PMACC_C_VALUE(float_X, gasPower, 4.0))
            (PMACC_C_VALUE(uint32_t, vacuumCellsY, 50))
            (PMACC_C_VALUE(float_64, gasCenterLeft_SI, 10.0e-5))(PMACC_C_VALUE(float_64, gasCenterRight_SI, 0.001-10.0e-5))
            (PMACC_C_VALUE(float_64, gasSigmaLeft_SI, 8.0e-5))(
                PMACC_C_VALUE(float_64, gasSigmaRight_SI, 8.0e-5))); /* struct GaussianParam */

        using Gaussian = GaussianImpl<GaussianParameter>;
    } // namespace densityProfiles
} // namespace picongpu

"(,)
的#123""(整体结构#120,grid#124)
grid#124"/* 
地址::%地址
*/

#pragma once

namespace picongpu
{
    namespace SI
    {
        constexpr float_64 DELTA_T_SI = 1.39e-16;
        constexpr float_64 CELL_WIDTH_SI = 1.772e-07;
        constexpr float_64 CELL_HEIGHT_SI = 4.43e-08;
        constexpr float_64 CELL_DEPTH_SI = 1.772e-07;
    } // namespace SI
} // namespace picongpu"(,)
的#125""(整体结构#120,incidentField#126)
incidentField#126"/*. 
地址::%地址
*/


#pragma once

#include \"picongpu/fields/incidentField/profiles/profiles.def\"

#ifndef PARAM_A0
#    define PARAM_A0 8.0
#endif

#ifndef PARAM_WAVE_LENGTH_SI
#    define PARAM_WAVE_LENGTH_SI 0.8e-6
#endif

#ifndef PARAM_PULSE_LENGTH_SI
#    define PARAM_PULSE_LENGTH_SI 5.e-15
#endif

namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            struct LwfaGaussianBeamBaseParams
            {
                static constexpr float_64 WAVE_LENGTH_SI = 4*0.5e-3;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI;
                static constexpr float_64 _A0 = PARAM_A0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = 20*10e-13;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 0.0;
                static constexpr float_64 DIRECTION_Y = 1.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = 50*0.5e-3; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = 50*0.5e-3;
                static constexpr float_64 FOCUS_POSITION_Z_SI = 8*0.5e-3; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr float_64 POLARISATION_DIRECTION_X = 1.0;
                static constexpr float_64 POLARISATION_DIRECTION_Y = 0.0;
                static constexpr float_64 POLARISATION_DIRECTION_Z = 0.0;
            };

            struct LwfaGaussianBeamBaseParams2
            {
                static constexpr float_64 WAVE_LENGTH_SI = 4*0.5e-3;
                static constexpr float_64 UNITCONV_A0_to_Amplitude_SI = -2.0 * PI / WAVE_LENGTH_SI;
                static constexpr float_64 _A0 = PARAM_A0;
                static constexpr float_64 AMPLITUDE_SI = _A0 * UNITCONV_A0_to_Amplitude_SI;
                static constexpr float_64 PULSE_LENGTH_SI = 20*10e-13;
                static constexpr float_X LASER_PHASE = 0.0_X;
                static constexpr float_64 DIRECTION_X = 1.0;
                static constexpr float_64 DIRECTION_Y = 0.0;
                static constexpr float_64 DIRECTION_Z = 0.0;
                static constexpr float_64 FOCUS_POSITION_X_SI = 50*0.5e-3; // 96 cells
                static constexpr float_64 FOCUS_POSITION_Y_SI = 150*0.5e-3;
                static constexpr float_64 FOCUS_POSITION_Z_SI = 10*0.5e-3; // 96 cells
                static constexpr PolarisationType Polarisation = PolarisationType::Circular;
                static constexpr float_64 POLARISATION_DIRECTION_X = 0.0;
                static constexpr float_64 POLARISATION_DIRECTION_Y = 1.0;
                static constexpr float_64 POLARISATION_DIRECTION_Z = 0.0;
            };

            namespace lwfaGaussianBeam
            {
                static constexpr uint32_t MODENUMBER = 0;
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREMODES, 1.0);
                PMACC_CONST_VECTOR(float_X, MODENUMBER + 1, LAGUERREPHASES, 0.0);
            } // namespace lwfaGaussianBeam

            struct GaussianBeamParam : public LwfaGaussianBeamBaseParams
            {
                static constexpr float_64 W0_SI = 20*0.5e-3 / 1.17741;
                static constexpr float_64 PULSE_INIT = 30.0;
                static constexpr float_64 SD_SI = 0.0;
                static constexpr float_64 AD_SI = 0.0;
                static constexpr float_64 GDD_SI = 1e14;
                static constexpr float_64 TOD_SI = 0.0;
            };
/*
TOD_SI
+[保存文本](,基本测试)
*/
            struct GaussianBeamParam2 : public LwfaGaussianBeamBaseParams2
            {
                static constexpr float_64 W0_SI = 30*0.5e-3 / 1.17741;
  /** The laser pulse will be initialized PULSE_INIT times of the PULSE_LENGTH*/
                static constexpr float_64 PULSE_INIT = 700/20;
                using LAGUERREMODES_t = lwfaGaussianBeam::LAGUERREMODES_t;
                using LAGUERREPHASES_t = lwfaGaussianBeam::LAGUERREPHASES_t;
                static constexpr uint32_t MODENUMBER = lwfaGaussianBeam::MODENUMBER;
            };

            using pulse1=profiles::DispersiveLaser<GaussianBeamParam>;
            using pulse2=profiles::GaussianBeam<GaussianBeamParam2>;

            using XMin = pulse2;
            using XMax = profiles::None;
            using YMin = pulse1;
            using YMax = profiles::None;
            using ZMin = profiles::None;
            using ZMax = profiles::None;
            constexpr int32_t POSITION[3][2] = {
                {16, -16}, // x direction [negative, positive]
                {16, -16}, // y direction [negative, positive]
                {2, -2} // z direction [negative, positive]
            };

        } // namespace incidentField
    } // namespace fields
} // namespace picongpu"(,)
的#127""(整体结构#120,myscript#128)
myscript#128"#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     \"sbatch milan.serial.slurm\" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute \"module load launcher\" 
#       followed by \"module help launcher\".
#----------------------------------------------------

#SBATCH -J testPIConGPU           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p gpu-a100          # Queue (partition) name
#SBATCH -N 4               # Total # of nodes (must be 1 for serial)
#SBATCH -n 4               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 01:00:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module load cuda/11.3
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $PICSRC
echo $LD_LIBRARY_PATH


ibrun ./bin/picongpu  -d 1 4 1  -g 451 2257 12    -s 23997   --periodic 0 0 0    -m --windowMovePoint 0.8993773739999998   --e_png.period 100     --e_png.axis yx --e_png.slicePoint 0.5   --e_png.folder pngElectronsYX     --e_energyHistogram.period 100    --e_energyHistogram.binCount 1024    --e_energyHistogram.minEnergy 500 --e_energyHistogram.maxEnergy 500000      --e_energyHistogram.filter all      --e_macroParticlesCount.period 100   --versionOnce | tee ./output




"(,)
的#129""(整体结构#120,png#130)
png#130"/*
地址::%地址
*/


#pragma once

#include <cmath>


namespace picongpu
{
    constexpr float_64 scale_image = 1.0;
    constexpr bool scale_to_cellsize = true;

    constexpr bool white_box_per_GPU = false;

    namespace visPreview
    {
#define EM_FIELD_SCALE_CHANNEL1 7
#define EM_FIELD_SCALE_CHANNEL2 -1
#define EM_FIELD_SCALE_CHANNEL3 -1

        constexpr float_64 customNormalizationSI[3] = {5.0e12 / SI::SPEED_OF_LIGHT_SI, 5.0e12, 15.0};

        // multiply highest undisturbed particle density with factor
        constexpr float_X preParticleDens_opacity = 0.25;
        constexpr float_X preChannel1_opacity = 1.0;
        constexpr float_X preChannel2_opacity = 1.0;
        constexpr float_X preChannel3_opacity = 1.0;

        // specify color scales for each channel
        namespace preParticleDensCol = colorScales::grayInv;
        namespace preChannel1Col = colorScales::green;
        namespace preChannel2Col = colorScales::none;
        namespace preChannel3Col = colorScales::none;

        DINLINE float_X preChannel1(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return field_E.x() * field_E.x();
        }

        DINLINE float_X preChannel2(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return field_E.y();
        }

        DINLINE float_X preChannel3(const float3_X& field_B, const float3_X& field_E, const float3_X& field_Current)
        {
            return -1.0_X * field_E.y();
        }

        /** @} */
    } // namespace visPreview
} // namespace picongpu"(,)
的#131""(库#20,整理光束#132)
整理光束#132"\"\"\"
描述结构:...
库:...

\"\"\"
+整理光束(,_凭依)->+[del](,+整理光束)...
->的(整理光束,描述结构)->的(整理光束,库)...

->的(_凭依,incidentField)->的(incidentField,插入)...
    ->的(插入,注入方式)...

->+[code]([想],描述结构)->[想](注入方式,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}
"(,)
的#133""(整理光束#132,描述结构#134)
描述结构#134"\"\"\"


\"\"\"

+描述结构(注入方式,_凭依)->+操作(+描述结构,)...

->插入(注入方式,)...
->[]{
    []=>的(插入,_re)->_re\"[XYZ]M\"=>[]:
        ->顺序(_re,)->的(顺序,_节点)->_节点(,_节点1)...
            ->+操作2(_re,_凭依)->+的(+操作,+操作2),
        ->顺序(_re,)...
            ->+操作1(_re,_凭依)->+的(+操作,+操作1),
        ->+操作0(_re,_凭依)->+的(+操作,+操作0)
}
"(,)
的#135""(整理光束#132,库#136)
库#136"

操作2:...
操作1:...
操作0:...



"(,)
的#137""(库#136,操作0#138)
操作0#138"\"\"\"


\"\"\"
+操作0(_X,_凭依)->+[del](,+操作0)...

->+[修改内容]\"profiles::None\"(,_X)
"(,)
的#139""(库#136,操作1#140)
操作1#140"\"\"\"


\"\"\"
+操作1(_X,_凭依)->+[del](,+操作1)
"(,)
的#141""(库#136,操作2#142)
操作2#142"\"\"\"


\"\"\"
+操作2(_X,_凭依)->+[del](,+操作2)...

->顺序(_X,)->的(_X,顺序)->+[修改内容]\", \"(,顺序)...
    ->+[修改内容]\"MakeSeq_t<%内容>\"(,_X)...
->+插入(_X,)->+的(_X,+插入)->+的(+插入,+内容)...
->+[左连](顺序,+内容)->+[左连](的,+内容)


"(,)
的#143""(库#20,png代码#144)
png代码#144"\"\"\"


\"\"\"
+png代码(_代码,_凭依)->+[del](,+png代码)...

->的(_凭依,png)->+[修改内容](_代码,png)



"(,)
的#145""(库#20,探测代码#146)
探测代码#146"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+探测代码(_探测,_凭依)->+[del](,+探测代码)...
->的(探测代码,描述结构)->的(探测代码,库)...

->.\"媒介\"(+探测代码,_媒介)...
->的(_凭依,myscript)->插入(myscript,)->的(插入,输出)...
->+[修改内容]\" %s \"(,输出)...

->+[code]([想],描述结构)->[想](,_探测)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_探测,输出)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}



"(,)
的#147""(探测代码#146,描述结构#148)
描述结构#148"\"\"\"


\"\"\"
+描述结构(,_探测)->+操作(+描述结构,)...

->的(_探测,探测类型)...
->[]{
    []:->[==]\"png\"(,探测类型)->+输出png(,_探测)->+的(+操作,+输出png),
    ->[==]\"fields\"(,探测类型)->+输出场(,_探测)->+的(+操作,+输出场),
    ->[==]\"能谱\"(,探测类型)->+输出能谱(,_探测)->+的(+操作,+输出能谱)
}

"(,)
的#149""(探测代码#146,库#150)
库#150"
输出场:...
输出png:...
将条目\"输出场\"复制为条目\"输出png\"

输出能谱:...
将条目\"输出png\"复制为条目\"输出能谱\"

"(,)
的#151""(库#150,png输出#152)
png输出#152""(,)
的#153""(库#150,输出能谱#154)
输出能谱#154"\"\"\"
参考::https://picongpu.readthedocs.io/en/latest/usage/plugins/energyHistogram.html
(单位是keV)

模板:...
P代码:...

\"\"\"
+输出能谱(_探测,输出)->+[del](,+输出能谱)...
->的(输出能谱,模板)->的(输出能谱,P代码)...

->+[文本结构_插入尾部](输出,+节点#1)...
->+[模板文本](模板,+节点#1)...

->[]{
    []:->的(_探测,探测间隔)->探测间隔->+[.](+[模板文本],探测间隔),
    ->+[临时文本]\"100\"->+[.]\"探测间隔\"(+[模板文本],+[临时文本])
}...

->+[文本结构_插入尾部](输出,+节点#2)...
->[]{
    []:->的(_探测,范围)->范围(,)...
        ->+[python](Python,+节点#2)->+[code](+[python],P代码)...
        ->+[.]\"energy\"(+[python],范围),

    ->+[修改内容]\" --e_energyHistogram.binCount 1024  --e_energyHistogram.minEnergy 500  --e_energyHistogram.maxEnergy 500000 \"(,+节点#2)
}

"(,)
的#155""(输出能谱#154,模板#156)
模板#156" --e_energyHistogram.period %探测间隔  --e_energyHistogram.filter all "(,)
的#157""(输出能谱#154,P代码#158)
P代码#158"\"\"\"
记住\"Python\"
+[P函数](,P代码)
 --e_energyHistogram.binCount 1024  --e_energyHistogram.minEnergy 500  --e_energyHistogram.maxEnergy 500000 

\"\"\"

ans=\" --e_energyHistogram.binCount %d  --e_energyHistogram.minEnergy %d  --e_energyHistogram.maxEnergy %d \"%(energy[2],energy[0],energy[1])
"(,)
的#159""(输出能谱#154,参考#160)
参考#160"https://picongpu.readthedocs.io/en/latest/usage/plugins/energyHistogram.html"(,)
的#161""(库#150,输出场#162)
输出场#162"\"\"\"
模板:...
P代码:...

\"\"\"
+输出场(_探测,输出)->+[del](,+输出场)...
->的(输出场,模板)->的(输出场,P代码)...

->+[文本结构_插入尾部](输出,+节点#1)...
->+[模板文本](模板,+节点#1)...

->[]{
    []:->的(_探测,探测间隔)->探测间隔->+[.](+[模板文本],探测间隔),
    ->+[临时文本]\"100\"->+[.]\"探测间隔\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_探测,输出文件)->输出文件->+[.](+[模板文本],输出文件),
    ->+[临时文本]\"simData\"->+[.]\"输出文件\"(+[模板文本],+[临时文本])
}...

->.\"媒介\"(+输出场,_媒介)->的(_媒介,窗口)->的(_媒介,模拟空间)...
->+[python](Python,)...
->的(窗口,长度)->+[.]\"L1\"(+[python],长度)...
->的(窗口,宽度)->+[.]\"W1\"(+[python],宽度)...
->的(模拟空间,格点尺寸)->+[.]\"dsiz\"(+[python],格点尺寸)...
->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"D1\"(+[python],深度),
    ->+[.]\"D1\"(+[python],长度)
}...

->+[文本结构_插入尾部](输出,+节点#2)...
->[]{
    []:->的(_探测,平面)->平面->的(_探测,位置)->位置(,)...
        ->+[python](Python,+节点#2)->+[code](+[python],P代码)...
        ->+[.]\"plane\"(+[python],平面)->+[.]\"pos\"(+[python],位置),

    ->的(_探测,范围)->范围->+[修改内容]\" --openPMD.range %s \"(范围,+节点#2),

    ->[]
}

"(,)
的#163""(输出场#162,P代码#164)
P代码#164"\"\"\"
记住\"Python\"
+[P函数](,P代码)
print(D1,W1,L1,dsiz,plane,pos)

\"\"\"


g_text=\"\"
if 'z' not in plane and 'Z' not in plane:
    if pos[0]>1:
        g_text=\":,:,%d\"%(pos[0])
    elif pos[0]<1e-3:
        g_text=\":,:,%d\"%(pos[0]/dsiz[2])
    else:
        g_text=\":,:,%d\"%(pos[0]*D1[0]/dsiz[2])
elif 'y' not in plane and 'Y' not in plane:
    if pos[0]>1:
        g_text=\"%d,:,:\"%(pos[0])
    elif pos[0]<1e-3:
        g_text=\"%d,:,:\"%(pos[0]/dsiz[0])
    else:
        g_text=\"%d,:,:\"%(pos[0]*L1[0]/dsiz[0])
else:
    if pos[0]>1:
        g_text=\":,%d,:\"%(pos[0])
    elif pos[0]<1e-3:
        g_text=\":,%d,:\"%(pos[0]/dsiz[1])
    else:
        g_text=\":,%d,:\"%(pos[0]*W1[0]/dsiz[1])

ans=\" --openPMD.range %s \"%(g_text)
"(,)
的#165""(输出场#162,模板#166)
模板#166" --openPMD.source fields_all  --openPMD.ext h5  --openPMD.period %探测间隔  --openPMD.file %输出文件 "(,)
的#167""(库#150,输出png#168)
输出png#168"\"\"\"
模板:...
P代码:...

\"\"\"
+输出png(_探测,输出)->+[del](,+输出png)...
->的(输出png,模板)->的(输出png,P代码)...

->+[文本结构_插入尾部](输出,+节点#1)...
->+[模板文本](模板,+节点#1)...

->[]{
    []:->的(_探测,探测间隔)->探测间隔->+[.](+[模板文本],探测间隔),
    ->+[临时文本]\"100\"->+[.]\"探测间隔\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_探测,输出文件)->输出文件->+[.](+[模板文本],输出文件),
    ->+[临时文本]\"pngElectronsYX\"->+[.]\"输出文件\"(+[模板文本],+[临时文本])
}...

->.\"媒介\"(+输出png,_媒介)->的(_媒介,窗口)->的(_媒介,模拟空间)...
->+[python](Python,)...
->的(窗口,长度)->+[.]\"L1\"(+[python],长度)...
->的(窗口,宽度)->+[.]\"W1\"(+[python],宽度)...
->的(模拟空间,格点尺寸)->+[.]\"dsiz\"(+[python],格点尺寸)...
->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"D1\"(+[python],深度),
    ->+[.]\"D1\"(+[python],长度)
}...

->+[文本结构_插入尾部](输出,+节点#2)...
->[]{
    []:->的(_探测,平面)->平面->的(_探测,位置)->位置(,)...
        ->+[python](Python,+节点#2)->+[code](+[python],P代码)...
        ->+[.]\"plane\"(+[python],平面)->+[.]\"pos\"(+[python],位置),

    ->+[修改内容]\" --e_png.axis yx --e_png.slicePoint 0.5 \"(,+节点#2)
}

"(,)
的#169""(输出png#168,P代码#170)
P代码#170"\"\"\"
记住\"Python\"
+[P函数](,P代码)
print(D1,W1,L1,dsiz,plane,pos)
--e_png.axis yx --e_png.slicePoint 0.5

\"\"\"


p_text=\"\"
s_n=\"\"
if 'z' not in plane and 'Z' not in plane:
    p_text=\"yx\"
    if pos[0]>1:
        s_n=pos[0]/(D1[0]/dsiz[2])
    else:
        s_n=pos[0]
elif 'y' not in plane and 'Y' not in plane:
    p_text=\"yz\"
    if pos[0]>1:
        s_n=pos[0]/(L1[0]/dsiz[1])
    else:
        s_n=pos[0]
else:
    p_text=\"xz\"
    if pos[0]>1:
        s_n=pos[0]/(W1[0]/dsiz[0])
    else:
        s_n=pos[0]

ans=\" --e_png.axis %s --e_png.slicePoint %f \"%(p_text,s_n)
"(,)
的#171""(输出png#168,模板#172)
模板#172" --e_png.period %探测间隔  --e_png.folder %输出文件 "(,)
的#173""(降临规则#4,上传文件夹#174)
上传文件夹#174"\"\"\"
创建文件夹:...
P代码:...
+[修改天使]

\"\"\"


+上传文件夹(_媒介,_凭依)->+[del](,+上传文件夹)...
->的(上传文件夹,创建文件夹)->的(上传文件夹,P代码)...

->[]{
    []:->的(_媒介,地址)->地址,
    ->+的(_媒介,+地址)->+地址\"/home/xiantao/Documents/PIC/output\"
}->的(_媒介,地址#0)...

->+[模板文本](创建文件夹,+[命令行]#0)->+[命令行]#0->+[显示](,+[命令行]#0)...
    ->+[.](+[模板文本],地址#0)...

->[]{
    []=>的(_凭依,_文件)->_文件=>+[保存文本](,_文件)
}...

->+[python](Python,)->+[code](+[python],P代码)...
->+[.]\"address\"(+[python],地址#0)



"(,)
的#175""(上传文件夹#174,创建文件夹#176)
创建文件夹#176"rsync -a 文档/实验室问题/PIConGPU/LWFA/ %地址/"(,)
的#177""(上传文件夹#174,P代码#178)
P代码#178"\"\"\"
记住\"Python\"

scp -r %s xtcheng@ls6.tacc.utexas.edu:$WORK/test_folder

\"\"\"
import subprocess as sp
code=\"scp -r %s xtcheng@ls6.tacc.utexas.edu:$WORK/test_folder\"%(address)
t_code=code.split(' ')
p=sp.Popen(t_code)




"(,)
的#179""(降临规则#4,整理结构#180)
整理结构#180"\"\"\"

\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->的(_凭依,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)



"(,)

## end
#657, 457:
"""

->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成PIConGPU代码"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->的(_媒介,状态)->状态->[==]"上传"(,状态)...
        ->+上传文件夹(_媒介,_凭依)->+的(操作,+上传文件夹),
    ->[]
}...
->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->[]{
    []:->."不构造"(召唤星辰,),
    ->."1D"(召唤星辰,)->+代码结构_1D(_媒介,_凭依)->+的(操作,+代码结构_1D),
    ->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)
}...

->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#659, 4099:
描述相对坐标#0"
召唤规则:...
降临规则:...



"(,)
的#1""(描述相对坐标#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"描述相对坐标\"(,召唤星辰)...

->+整理描述(_题目,_代码)->+的(操作,+整理描述)...
->+召唤结构(_题目,_代码)->+的(操作,+召唤结构)


"(,)
的#3""(描述相对坐标#0,降临规则#4)
降临规则#4"
召唤结构:...
整理描述:...


"(,)
的#5""(降临规则#4,召唤结构#6)
召唤结构#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+召唤结构(_媒介,_凭依)->+[del](,+召唤结构)...
->的(召唤结构,描述结构)->的(召唤结构,库)...

->+顺序\"
\"(_凭依,)->+的(_凭依,+顺序)...
->+[matlab]\"n_name=1;\"(Matlab,)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
        ->+[.](+[做],+[临时文本])->[m_text](_操作,+[临时文本])
}

"(,)
的#7""(召唤结构#6,描述结构#8)
描述结构#8"\"\"\"
P代码:...

\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->.\"坐标序号\"(_媒介,_坐标)...
->+[.]\"list_n\"([python],_坐标)->[python]\"i=0
state=True\"(Python,)...
->+坐标->+不终止->[]{
    +[code]([python]#1,P代码)->+[o]\"n\"([python]#1,+坐标)...
        =>[python]#1(Python,+不终止)...
        =>+单句描述(_媒介,_凭依)->+的(+操作,+单句描述)->[m_text](+坐标,+单句描述)
}


"(,)
的#9""(描述结构#8,P代码#10)
P代码#10"\"\"\"


\"\"\"

state=(i<len(list_n))
if state==True:
    n=int(list_n[i])
i=i+1



"(,)
的#11""(召唤结构#6,库#12)
库#12"
单句描述:...
在选择区域中, 将'单句描述'的\"0\"替换为\"1\"


"(,)
的#13""(库#12,单句描述#14)
单句描述#14"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)
在选择区域中, 将'M代码'的\"0\"替换为\"1\"

\"\"\"
+单句描述(_媒介,_凭依)->+[del](,+单句描述)...
->的(单句描述,M代码)...

->.(+单句描述,_i)...
->.\"原点\"(_媒介,_原点)->.\"原点序号\"(_媒介,_i0)->.\"坐标\"(_媒介,_坐标)...

->+[文本结构_插入尾部](_凭依,+节点)...
    ->+节点\"%A距离%B为(%位移)\"...
->+[文本结构_插入](+节点,+A)->+[文本结构_插入](+节点,+B)...
->+[文本结构_插入](+节点,+位移)...

->+A\"坐标\"->+[增加内容](_i,+A)->+B\"坐标\"->+[增加内容](_i0,+B)...

->在(_原点,空间点#0)->朝向(_原点,方向#0)...
->的(_原点,X#0)->的(_原点,Y#0)->的(_原点,Z#0)...
->在(_坐标,空间点#1)->朝向(_坐标,方向#1)...
->的(_坐标,X#1)->的(_坐标,Y#1)->的(_坐标,Z#1)...

->+[matlab](Matlab,+位移)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],空间点#0)->+[.]\"an0\"(+[matlab],方向#0)...
->+[.]\"X0\"(+[matlab],X#0)->+[.]\"Y0\"(+[matlab],Y#0)->+[.]\"Z0\"(+[matlab],Z#0)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"an1\"(+[matlab],方向#1)...
->+[.]\"X1\"(+[matlab],X#1)->+[.]\"Y1\"(+[matlab],Y#1)->+[.]\"Z1\"(+[matlab],Z#1)...

->+[.]\"n0\"(+[matlab],_i0)->+[.]\"n\"(+[matlab],_i)...
->[]{
    []:->.\"角度\"(_媒介,_角度)->_角度->+[.]\"angle\"(+[matlab],_角度),
    ->+[临时文本]\"0\"->+[.]\"angle\"(+[matlab],+[临时文本])
}...
->[]{
    []:->.\"反射面\"(_媒介,_反射面)->_反射面->+[s]\"ref_ax\"(+[matlab],_反射面),
    ->+[临时文本]\"0\"->+[s]\"ref_ax\"(+[matlab],+[临时文本])
}...
->[]{
    []:->.\"单位\"(_媒介,_单位)->_单位->+[.]\"unit_name\"(+[matlab],_单位),
    ->+[临时文本]\"m\"->+[.]\"unit_name\"(+[matlab],+[临时文本])
}...
->[]{
    []:->.\"名字\"(_媒介,_名字)->_名字(,)...
        ->+[.]\"names\"(+[matlab],_名字)->+[o]\"name\"(+[matlab],+A),
    ->+[临时文本]->+[.]\"names\"(+[matlab],+[临时文本])
}...
->[]{
    []:->.\"原点名字\"(_媒介,_名字)->_名字->+[修改内容](_名字,+B),
    ->[]
}



"(,)
的#15""(单句描述#14,M代码#16)
M代码#16"%{
angle
%}

addpath('Matlab/space')

[x0,y0,z0]=transform_3D(pt0,an0(1),an0(2),an0(3),X0,Y0,Z0);
[x1,y1,z1]=transform_3D(pt1,an1(1),an1(2),an1(3),X1,Y1,Z1);

xs=x1(n)-x0(n0);
ys=y1(n)-y0(n0);

x=xs*cosd(angle)-ys*sind(angle);
y=ys*cosd(angle)+xs*sind(angle);

if strcmp(ref_ax,'zx') || strcmp(ref_ax,'ZX')
    y=-y;
elseif strcmp(ref_ax,'yz') || strcmp(ref_ax,'YZ')
    x=-x;
end

if ~isempty(names)
    list_name=split(names,', ');
    name=list_name{end+1-n_name};
    n_name=n_name+1;
end

if strcmp(unit_name,'cm')
    ans=sprintf('%.2f*cm,%.2f*cm',x/1e-2,y/1e-2);
elseif strcmp(unit_name,'inch')
    ans=sprintf('%.2f*inch,%.2f*inch',x/2.54e-2,y/2.54e-2);
elseif strcmp(unit_name,'mm')
    ans=sprintf('%.2f*mm,%.2f*mm',x/1e-3,y/1e-3);
elseif strcmp(unit_name,'um')
    ans=sprintf('%.2f*um,%.2f*um',x/1e-6,y/1e-6);
elseif strcmp(unit_name,'nm')
    ans=sprintf('%.2f*nm,%.2f*nm',x/1e-9,y/1e-9);
else
    ans=sprintf('%.2f,%.2f',x,y);
end


"(,)
的#17""(降临规则#4,整理描述#18)
整理描述#18"\"\"\"
+[修改内容](+[临时文本],记忆)
+[显示](,记忆)
记住\"Matlab\"

\"\"\"
+整理描述(_媒介,_凭依)->+[del](,+整理描述)...
->+[修改内容](+[临时文本],_凭依)...
->+[结构转文本](_凭依,_凭依)->+[记住](,_凭依)...
->+[删除结构](,_凭依)

"(,)

## end
#661, 153:
"""


"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"描述相对坐标"(,召唤星辰)...

->+整理描述(_题目,_代码)->+的(操作,+整理描述)...
->+召唤结构(_题目,_代码)->+的(操作,+召唤结构)



## end
#663, 3414:
场强定义#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"A0\"

"(,)
的#1""(场强定义#0,降临规则#2)
降临规则#2"
整理代码:...

的(降临规则,公式1)->+[有](+公式1,公式1)->+[del](,的)->+[修改标题]\"M代码\"(,公式1)
的(降临规则,公式2)->+[有](+公式2,公式2)->+[del](,的)->+[修改标题]\"M代码\"(,公式2)
公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"能量\"替换为\"光强\"
将'公式2'的\"能量\"替换为\"A0\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#3""(降临规则#2,整理代码#4)
整理代码#4"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#5""(降临规则#2,公式1#6)
公式1#6"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式1\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M代码)->的(公式1,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#7""(公式1#6,表达式#8)
表达式#8"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"场强\"(求解,_场强)->变量#1(,_场强)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#9""(表达式#8,M模板#10)
M模板#10"%场强=%A0*i*%角频率
"(,)
的#11""(公式1#6,M代码#12)
M代码#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"场强\"(求解,_场强)->变量#1(,_场强)...
->.#2\"A0\"(求解,_A0)->变量#2(,_A0)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#13""(M代码#12,M模板#14)
M模板#14"%场强=%A0*1i.*%角频率;
"(,)
的#15""(降临规则#2,公式2#16)
公式2#16"\"\"\"
M代码:...
表达式:...
将'M代码'的\"公式2\"替换为\"M代码\"
将条目\"M代码\"复制为条目\"表达式\"

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M代码)->的(公式2,表达式)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"表达式\"(,_类型)->+[code](+[做],表达式),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)






"(,)
的#17""(公式2#16,表达式#18)
表达式#18"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+表达式(求解,_凭依)->+[del](,+表达式)...
->的(表达式,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"场强\"(求解,_场强)->变量#2(,_场强)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#19""(表达式#18,M模板#20)
M模板#20"%A0=\frac{%场强}{i*%角频率}
"(,)
的#21""(公式2#16,M代码#22)
M代码#22"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"A0\"(求解,_A0)->变量#1(,_A0)...
->.#2\"场强\"(求解,_场强)->变量#2(,_场强)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#23""(M代码#22,M模板#24)
M模板#24"%A0=%场强/1i./%角频率;
"(,)
的#25""(场强定义#0,召唤规则#26)
召唤规则#26"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,场强定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"场强\"(求解,)->.\"A0\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"A0\"(求解,)->.\"场强\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)

## end
#665, 286:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,场强定义)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"场强"(求解,)->."A0"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"A0"(求解,)->."场强"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#667, 9405:
生成Parser代码#0"

召唤规则:...
降临规则:...


"(,)
的#1""(生成Parser代码#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成Parser代码\"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)



"(,)
的#3""(生成Parser代码#0,降临规则#4)
降临规则#4"

生成结构:...
结构变换:...
生成代码:...

"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"


\"\"\"
+生成结构(_媒介,_凭依)->+[del](,+生成结构)...

->+的(_凭依,+结构)...
->[解析Parser结构]\"文本\"(+[临时文本],_媒介)->[记录结构](+[临时文本],)...
->+[导入节点](,+结构)->[m_text]([记录结构],+[导入节点])


"(,)
的#7""(降临规则#4,结构变换#8)
结构变换#8"\"\"\"
描述结构:...
库:...

\"\"\"
+结构变换(_媒介,_凭依)->+[del](,+结构变换)...
->的(结构变换,描述结构)->的(结构变换,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}

"(,)
的#9""(结构变换#8,描述结构#10)
描述结构#10"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->的(_凭依,结构)...
->的(结构,入口)=>条目(入口,)...
=>+设置函数(条目,_凭依)->+的(+操作,+设置函数)
"(,)
的#11""(结构变换#8,库#12)
库#12"

设置函数:...

"(,)
的#13""(库#12,设置函数#14)
设置函数#14"\"\"\"
描述结构:...
库:...

\"\"\"

+设置函数(_条目,_凭依)->+[del](,+设置函数)...
->的(设置函数,描述结构)->的(设置函数,库)...

->+[文本结构_插入尾部](_凭依,+节点)->+[文本结构_插入](+节点,+序号)...
->+的(+节点,+序号)->+序号\"0\"...

->+[code]([想],描述结构)->[想](_条目,+节点)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目0)->_条目0->[eq](_条目0,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目0)
}


"(,)
的#15""(设置函数#14,描述结构#16)
描述结构#16"\"\"\"
情况0:...
单元0:...

\"\"\"
+描述结构(_条目,_节点)->+操作(+描述结构,)...

->情况(_条目,)->+[code]([想],情况0)...
    ->+[.]([想],+操作)->[想](情况,_节点)...

->+设置条目(_条目,_节点)->+的(+操作,+设置条目)


"(,)
的#17""(描述结构#16,情况0#18)
情况0#18"\"\"\"


\"\"\"
+情况0(情况,_节点)->.(+情况0,操作)...
->情况0->的(描述结构,情况0)->的(描述结构,单元0)...

->+[文本结构_插入尾部](_节点,+节点)...
->[投影](,+[文本结构_插入尾部])->[投影](,+节点)...

->的(_节点,序号)->+的(+节点,+序号)->+[文本结构_插入](+节点,+序号)...
->[投影](,+[文本结构_插入])->[投影](,+序号)...
->+[.]\"n\"([python],序号)->[python]\"
state=True
ans=int(n[0]-1)
\"(Python,+序号)...

->单元(情况,)->+[code]([想],单元0)...
    ->+[.]([想],操作)->[想](单元,+节点)...
->[]{
    []=>情况#1(情况,)=>+[code]([想]#1,情况0)...
        ->+[.]([想]#1,操作)->[想]#1(情况#1,_节点)
}...

->+设置情况(情况,+节点)->+的(操作,+设置情况)


"(,)
的#19""(描述结构#16,单元0#20)
单元0#20"\"\"\"


\"\"\"
+单元0(单元,_节点)->.(+单元0,操作)...
->单元0->的(描述结构,单元0)->的(描述结构,情况0)...

->+[文本结构_插入](_节点,+单元)...
->[投影](,+[文本结构_插入])->[投影](,+单元)...

->的(_节点,序号)->+的(+单元,+序号)->+[文本结构_插入](+单元,+序号)...
->[投影](,+[文本结构_插入])->[投影](,+序号)...
->+[.]\"n\"([python],序号)->[python]\"
state=True
ans=int(n[0]+1)
\"(Python,+序号)...

->[]{
    []:->节点(单元,)->内容(节点,)...
        ->+[文本结构_插入](+单元,+标题)->[m_text](内容,+标题)...
        ->[投影](,+[文本结构_插入])->[投影](,+标题),
    ->标点(单元,)->[m_text](序号,+序号),
    ->[]
}...

->[]{
    []=>模块(单元,情况)->情况=>+[code]([想]#1,情况0)...
        ->+[.]([想]#1,操作)->[想]#1(情况,+单元)
}...
->[]{
    []=>单元#1(单元,)=>+[code]([想],单元0)...
        ->+[.]([想],操作)->[想](单元#1,+单元)
}...

->+设置单元(单元,+单元)->+的(操作,+设置单元)




"(,)
的#21""(设置函数#14,库#22)
库#22"

设置单元:...
设置情况:...
设置条目:...
将条目\"设置单元\"复制为条目\"设置条目\"


"(,)
的#23""(库#22,设置条目#24)
设置条目#24"\"\"\"
条目模板:...

\"\"\"
+设置条目(_单元,_节点)->+[del](,+设置条目)...
->的(设置条目,条目模板)...

->内容(_单元,)...
->+[模板文本](条目模板,_节点)->+[.](+[模板文本],内容)...

->[]{
    []:->顺序(_节点,)->+缩进\"    \"(_节点,顺序)->+的(_节点,+缩进),
    ->[]
}
"(,)
的#25""(设置条目#24,条目模板#26)
条目模板#26"
def parser_token_%内容(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]
    list_new0=list_new

%s
    list_pt+=list_new

    if state==False:
        print(\"%内容:\",state)
        return [False,i0,None]
    else:
        print(\"%内容:\",state,pt%序号.info())
        return [True,i,pt%序号]
"(,)
的#27""(库#22,设置情况#28)
设置情况#28"\"\"\"
情况模板:...
情况模板2:...
P代码:...

保存:...

\"\"\"
+设置情况(_情况,_节点)->+[del](,+设置情况)...
->的(设置情况,情况模板)->的(设置情况,情况模板2)...
->的(设置情况,P代码)...

->_节点->[]{
    []:->节点(,_节点)->插入(_节点,)->的(插入,序号)...
        ->+[python](Python,_节点)->+[code](+[python],P代码)...
        ->+[.]\"n_pt\"(+[python],序号)...
        ->[]{
            []:->插入(_节点,)->的(插入,单元)...
                ->+缩进\"    \"(插入,单元)->+的(_节点,+缩进),
            ->[]
        },
    ->+[模板文本](,_节点)->+[code](+[模板文本],情况模板)
}


"(,)
的#29""(设置情况#28,情况模板#30)
情况模板#30"%单元
"(,)
的#31""(设置情况#28,情况模板2#32)
情况模板2#32"if state==False:
    i=i%序号
    list_new=[]
%单元
"(,)
的#33""(设置情况#28,P代码#34)
P代码#34"\"\"\"


\"\"\"

ans=\"\"\"if state==False:
    i=i%d
    list_new=list_new%d
%%单元
\"\"\"%(n_pt[0]+1,n_pt[0]+1)


"(,)
的#35""(设置情况#28,保存#36)
保存#36"\"\"\"
情况模板:...
情况模板2:...
P代码:...

\"\"\"
+设置情况(_情况,_节点)->+[del](,+设置情况)...
->的(设置情况,情况模板)->的(设置情况,情况模板2)...
->的(设置情况,P代码)...

->_节点->+[模板文本](,_节点)...
->[]{
    []:->节点(,_节点)->+[code](+[模板文本],情况模板2)...
        ->[]{
            []:->插入(_节点,)->的(插入,单元)...
                ->+缩进\"    \"(插入,单元)->+的(_节点,+缩进),
            ->[]
        },
    ->+[code](+[模板文本],情况模板)
}


"(,)
的#37""(库#22,设置单元#38)
设置单元#38"\"\"\"
本体:...
本体2:...
本体2a:...
本体3:...
新建1:...
新建2:...
P代码(Python):...
或许_开头:...
或许_结尾:...
或许_补充(Python):...
(我不记得这个有什么用了, 暂时注释掉)
(可能是用来传递代表节点)
单元模板:...
单元模板2:...
增加:...
增加2:...
节点
\"\"\"
+设置单元(_单元,_节点)->+[del](,+设置单元)...
->的(设置单元,本体)->的(设置单元,本体3)...
->的(设置单元,本体2)->的(设置单元,本体2a)...
->的(设置单元,或许_开头)->的(设置单元,或许_结尾)->的(设置单元,或许_补充)...
->的(设置单元,P代码)...
->的(设置单元,单元模板)->的(设置单元,单元模板2)...
->的(设置单元,增加)->的(设置单元,增加2)...
->的(设置单元,新建1)->的(设置单元,新建2)...

->+[临时文本]#本体->[]{
    []:->引用(_单元,)->内容(_单元,)...
        ->+[模板文本](本体,+[临时文本]#本体)->+[.](+[模板文本],内容),
    ->标点(_单元,)->内容(_单元,)...
        ->+[模板文本](本体3,+[临时文本]#本体)->+[.](+[模板文本],内容),
    ->模块(_单元,)->或许(_单元,)...
        ->+[模板文本](本体2a,+[临时文本]#本体),
    ->模块(_单元,)...
        ->+[模板文本](本体2,+[临时文本]#本体)
}...
->[]{
    []:->节点(_单元,)->[]{
        []:->标点(_单元,)->+[增加内容](新建2,+[临时文本]#本体),
        ->+[增加内容](新建1,+[临时文本]#本体)
    }, ->[]
}...

->插入(_节点,)->的(插入,序号)...

->+[临时文本]#或许1->+[临时文本]#或许2->+[临时文本]#或许3(,)...
->Python->[]{
    []:->或许#0(_单元,)->+[修改内容](或许_开头,+[临时文本]#或许1)...
        ->+[修改内容](或许_结尾,+[临时文本]#或许2)...
        ->[]{
            []:->节点(_单元,)...
                ->+[python](Python,+[临时文本]#或许3)...
                ->+[code](+[python],或许_补充)->+[.]\"n\"(+[python],序号),
            ->[]
        }, ->[]
}...
->[]{
    []:->模块(_单元,),
    ->[]{[]:->节点(_单元,),->引用(_单元,)}->+[python](Python,+[增加内容])...
        ->+[增加内容](,+[临时文本]#本体)...
        ->+[code](+[python],P代码)->+[.]\"n\"(+[python],序号),
    ->[]
}...

->+[增加内容2](+[临时文本]#或许1,+[临时文本]#本体)...
->+[增加内容](+[临时文本]#或许2,+[临时文本]#本体)...

->+[模板文本](,_节点)...
->+[.]\"本体\"(+[模板文本],+[临时文本]#本体)...
->[]{
    []:->的(插入,单元)->单元->+[code](+[模板文本],单元模板2)...
        ->+缩进\"    \"(插入,单元)->+的(单元,+缩进)...
        ->+[增加内容](+[临时文本]#或许3,_节点),
    ->+[code](+[模板文本],单元模板)
}...

->[]{
    []:->节点(_单元,)->[]{
        []:->或许#0(_单元,)->+[增加内容](增加2,_节点),
        ->+[增加内容](增加,_节点)
    },
    ->[]
}

"(,)
的#39""(设置单元#38,单元模板#40)
单元模板#40"%本体"(,)
的#41""(设置单元#38,单元模板2#42)
单元模板2#42"%本体
if state==True:
%单元"(,)
的#43""(设置单元#38,本体#44)
本体#44"[state,i,pt%序号]=parser_token_%内容(code,i,list_new)"(,)
的#45""(设置单元#38,本体2#46)
本体2#46"i%序号=i
list_new%序号=list_new[:]
%s"(,)
的#47""(设置单元#38,本体3#48)
本体3#48"[state,i,text]=word_pat_token(code,i,r'%内容')"(,)
的#49""(设置单元#38,或许_结尾#50)
或许_结尾#50"
if state==False:
    i=i%序号
    list_new=list_new%序号
    state=True
    state%序号=False
# else:
#     list_new=list_new%序号+list_new"(,)
的#51""(设置单元#38,P代码#52)
P代码#52"\"\"\"
print(\"%或许\")
print(n,type_or)

\"\"\"

ans=\"\"

if n[0]>0:
    ans+=\"\"\"
if state==True:
    pt%d.con(pt%d,0)
else:
    pt%d=pt%d\"\"\"%(n[0],n[0]-1,n[0],n[0]-1)


"(,)
的#53""(设置单元#38,增加#54)
增加#54"
if state==True:
    list_new.append(pt%序号)"(,)
的#55""(设置单元#38,新建1#56)
新建1#56"
if state==True:
    pt%序号=NetP(\"%标题\").con(0,pt%序号)"(,)
的#57""(设置单元#38,新建2#58)
新建2#58"
pt%序号=NetP(\"%标题\",text)"(,)
的#59""(设置单元#38,或许_开头#60)
或许_开头#60"i%序号=i
state%序号=True
list_new%序号=list_new[:]
# list_new=[]
"(,)
的#61""(设置单元#38,或许_补充#62)
或许_补充#62"\"\"\"
print(\"%或许\")
print(n,type_or)
保存:...

\"\"\"

ans=\"\"\"
#if state%%序号==False:
#    try:
#        pt%d=pt%d
#    except:
#        pt%d=None\"\"\"%(n[0],n[0]+1,n[0])



"(,)
的#63""(或许_补充#62,保存#64)
保存#64"\"\"\"
print(\"%或许\")
print(n,type_or)
保存:...

\"\"\"

ans=\"\"\"
if state%%序号==False:
    try:
        pt%d=pt%d
    else:
        pt%d=None\"\"\"%(n[0],n[0]+1)



"(,)
的#65""(设置单元#38,增加2#66)
增加2#66"
if state%序号==True:
    list_new.append(pt%序号)"(,)
的#67""(设置单元#38,本体2a#68)
本体2a#68"%s"(,)
的#69""(降临规则#4,生成代码#70)
生成代码#70"\"\"\"
模板:...

\"\"\"
+生成代码(_媒介,_凭依)->+[del](,+生成代码)...
->的(生成代码,模板)...

->+[标题](_凭依,)->的(_凭依,结构)->的(结构,入口)...
->条目(入口,)->内容(条目,)...
->+[模板文本](模板,_凭依)...
->+[.](+[模板文本],+[标题])->+[.]\"条目\"(+[模板文本],内容)...

->+[结构转文本](_凭依,_凭依)...
->+[删除结构](,_凭依)




"(,)
的#71""(生成代码#70,模板#72)
模板#72"\"\"\"
+[P函数](,%[标题])
print('2'.replace('2','333'))

\"\"\"

import re
from body.bone import NetP
from tools import tools_basic

def word_pat_token(code,i,pat):
    text=''

#    pat=pat.replace('\\','\\\\')
    a=re.match(pat,code[i:])
    if a==None:
        state=False
    else:
        di=a.span()[1]
        output_txt=code[i:i+di]
        i+=di
        state=True
        text=output_txt
    
    return [state,i,text]

%s

def parser_text2pts(code):
    list_pt0=[]
    [state,i,pt]=parser_token_%条目(code,0,list_pt0)
    list_pt=[]
    for pt in list_pt0:
        if pt!=None:
                list_pt.append(pt)
    if state==False:
        return ''
    text=tools_basic.writeStdCode([],list_pt)
    return text

#text=parser_text2pts('A:B')
#print(text)



\"\"\"
+[P函数](,%[标题])

\"\"\""(,)

## end
#669, 203:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成Parser代码"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)




## end
#671, 1498:
dw和dt公式#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"光强\"

"(,)
的#1""(dw和dt公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,dw和dt公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"展宽\"(求解,)->.\"dw\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"dw\"(求解,)->.\"展宽\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(dw和dt公式#0,降临规则#4)
降临规则#4"
整理代码:...

公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式1'的\"腰宽\"替换为\"波长\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,公式2#6)
公式2#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M模板)...

->o#1\"dw\"(求解,_dw)->变量#1(,_dw)...
->.#2\"展宽\"(求解,_展宽)->变量#2(,_展宽)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#7""(公式2#6,M模板#8)
M模板#8"%dw=2./%展宽;
"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#11""(降临规则#4,公式1#12)
公式1#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"展宽\"(求解,_展宽)->变量#1(,_展宽)...
->.#2\"dw\"(求解,_dw)->变量#2(,_dw)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])


"(,)
的#13""(公式1#12,M模板#14)
M模板#14"%展宽=2./%dw;
"(,)

## end
#673, 289:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,dw和dt公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"展宽"(求解,)->."dw"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"dw"(求解,)->."展宽"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#675, 1707:
dw和dlm公式#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"光强\"

"(,)
的#1""(dw和dlm公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,dw和dlm公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"光谱宽度\"(求解,)->.\"dw\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o\"dw\"(求解,)->.\"光谱宽度\"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)
的#3""(dw和dlm公式#0,降临规则#4)
降临规则#4"
整理代码:...

公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式1'的\"腰宽\"替换为\"波长\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,公式2#6)
公式2#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M模板)...

->o#1\"dw\"(求解,_dw)->变量#1(,_dw)...
->.#2\"光谱宽度\"(求解,_光谱宽度)->变量#2(,_光谱宽度)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#7""(公式2#6,M模板#8)
M模板#8"%dw=2*pi*c./%波长.^2.*%光谱宽度;
"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#11""(降临规则#4,公式1#12)
公式1#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"光谱宽度\"(求解,_光谱宽度)->变量#1(,_光谱宽度)...
->.#2\"dw\"(求解,_dw)->变量#2(,_dw)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#13""(公式1#12,M模板#14)
M模板#14"%光谱宽度=%波长.^2.*%dw/(2*pi*c);
"(,)

## end
#677, 294:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,dw和dlm公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"光谱宽度"(求解,)->."dw"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->o"dw"(求解,)->."光谱宽度"(求解,)...
        ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#679, 1625:
光谱公式#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"光强\"

"(,)
的#1""(光谱公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光谱公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o\"光谱\"(求解,)->.\"光谱宽度\"(求解,)->.\"波长\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}


"(,)
的#3""(光谱公式#0,降临规则#4)
降临规则#4"
整理代码:...

公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式1'的\"腰宽\"替换为\"波长\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#5""(降临规则#4,公式2#6)
公式2#6"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式2)...
->的(公式2,M模板)...

->o#1\"dw\"(求解,_dw)->变量#1(,_dw)...
->.#2\"光谱宽度\"(求解,_光谱宽度)->变量#2(,_光谱宽度)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#7""(公式2#6,M模板#8)
M模板#8"%dw=2./%光谱宽度;
"(,)
的#9""(降临规则#4,整理代码#10)
整理代码#10"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#11""(降临规则#4,公式1#12)
公式1#12"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"光谱\"(求解,_光谱)->变量#1(,_光谱)...
->.#2\"光谱宽度\"(求解,_光谱宽度)->变量#2(,_光谱宽度)...
->.#3\"波长\"(求解,_波长)->变量#3(,_波长)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#13""(公式1#12,M模板#14)
M模板#14"%光谱=@(lm)exp(-(lm-%波长).^2/%光谱宽度^2);
"(,)

## end
#681, 231:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,光谱公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->o"光谱"(求解,)->."光谱宽度"(求解,)->."波长"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1)
}



## end
#683, 2009:
波包形状公式#0"

召唤规则:...
降临规则:...
+[新建阅读窗口](,召唤规则)
+[新建阅读窗口](,降临规则)
将'召唤规则'的\"能量\"替换为\"光强\"

"(,)
的#1""(波包形状公式#0,降临规则#2)
降临规则#2"
整理代码:...

公式1:...
公式2:...
将条目\"公式1\"复制为条目\"公式2\"
在选择区域中, 将'公式2'的\"光强\"替换为\"A0\"
将'公式1'的\"腰宽\"替换为\"波长\"
+[新建阅读窗口](,公式2)
+[删除结构](,公式2)->+[del](,公式2)



"(,)
的#3""(降临规则#2,公式1#4)
公式1#4"\"\"\"
M模板:...
将'M模板'的\"d2k_dw\.\*D\"替换为\"%GDD\"
将'M模板'的\"w_0\"替换为\"%角频率\"
+[新建阅读窗口](,M模板)

\"\"\"

+公式1(求解,_凭依)->+[del](,+公式1)...
->的(公式1,M模板)...

->o#1\"波包形状\"(求解,_波包形状)->变量#1(,_波包形状)...
->.#2\"dw\"(求解,_dw)->变量#2(,_dw)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...
->.#4\"GDD\"(求解,_GDD)->变量#4(,_GDD)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])


"(,)
的#5""(公式1#4,M模板#6)
M模板#6"%波包形状=@(t)sqrt((2.*pi)./(1i.*(1)./(2).*%GDD-(1)./(%dw.^(2)))).*exp(-(1i.*(1)./(2).*%GDD+(1)./(%dw.^(2))).*(t.^(2))./(4.*(((1)./(2).*%GDD).^(2)+((1)./(%dw.^(2))).^(2)))).*exp(-1i.*%角频率.*t);
"(,)
的#7""(降临规则#2,整理代码#8)
整理代码#8"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#9""(降临规则#2,公式2#10)
公式2#10"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)

\"\"\"

+公式2(求解,_凭依)->+[del](,+公式1)...
->的(公式2,M模板)...

->o#1\"波包形状\"(求解,_波包形状)->变量#1(,_波包形状)...
->.#2\"展宽\"(求解,_展宽)->变量#2(,_展宽)...
->.#3\"角频率\"(求解,_角频率)->变量#3(,_角频率)...

->+函数库\"physics_constant\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])


"(,)
的#11""(公式2#10,M模板#12)
M模板#12"%波包形状=@(t)exp(-t.^2/%展宽^2).*sin(t*%角频率);
"(,)
的#13""(波包形状公式#0,召唤规则#14)
召唤规则#14"\"\"\"
->o\"波包形状\"(求解,)->.\"展宽\"(求解,)->.\"波长\"(求解,)

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,波包形状公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->.\"GDD\"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->+公式2(求解,_凭依)->+的(操作,+公式2)
}


"(,)

## end
#685, 279:
"""
->o"波包形状"(求解,)->."展宽"(求解,)->."波长"(求解,)

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,波包形状公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->."GDD"(求解,)...
        ->+公式1(求解,_凭依)->+的(操作,+公式1),
    ->+公式2(求解,_凭依)->+的(操作,+公式2)
}



## end
#687, 13749:
一维预览动画#0"
召唤规则:...
降临规则:...


"(,)
的#1""(一维预览动画#0,降临规则#2)
降临规则#2"+[粘贴](,降临规则)

设置变量:...
代码结构:...
整理代码:...

"(,)
的#3""(降临规则#2,代码结构#4)
代码结构#4"\"\"\"
描述结构:...
库:...

\"\"\"
+代码结构(_媒介,_凭依)->+[del](,+代码结构)...
->的(代码结构,描述结构)->的(代码结构,库)...

->[]{
    []:->插入(_凭依,), ->+插入(_凭依,)->+的(_凭依,+插入)
}...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}


"(,)
的#5""(代码结构#4,库#6)
库#6"
框架代码:...
电子代码:...
光束代码:...
将'光束代码'的\"电子\"替换为\"光束\"


"(,)
的#7""(库#6,电子代码#8)
电子代码#8"\"\"\"
描述结构:...
库:...

\"\"\"
+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->+[code]([想],描述结构)->[想](_电子,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}


"(,)
的#9""(电子代码#8,描述结构#10)
描述结构#10"\"\"\"


\"\"\"
+描述结构(_电子,_凭依)->+操作(+描述结构,)...

->[]{
    []:->+操作0(_电子,_凭依)->+的(+操作,+操作0)
}

"(,)
的#11""(电子代码#8,库#12)
库#12"

操作0:...

"(,)
的#13""(库#12,操作0#14)
操作0#14"\"\"\"
初始化:...
画图:...

\"\"\"
+操作0(_电子,)->+[del](,+操作0)...
->的(操作0,初始化#0)->的(操作0,画图#0)...

->.\"凭依\"(+操作0,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...

->+[模板文本](初始化#0,+节点#1)...
    ->+[.]\"n\"(+[模板文本],变量)->+[.](+[模板文本],数密度)...
->[]{
    []:->的(_电子,上升沿)->上升沿->+[.]\"上升沿\"(+[模板文本],上升沿),
    ->+[临时文本]\"0\"->+[.]\"上升沿\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#15""(操作0#14,画图#16)
画图#16"patch([x,x(1)],[n%n,n%n(1)],[0,0,1],'faceAlpha',0.1)
plot(x,n%n,'b','lineWidth',2)
"(,)
的#17""(操作0#14,初始化#18)
初始化#18"%代码
edge%n=%上升沿;
left_edge=edge%n*3;
right_edge=W0-edge%n*3;

n%n=ones(size(x));
z=x;
n%n(z<left_edge)=exp(-(z(z<left_edge)-left_edge).^2/edge%n^2);
n%n(z>right_edge)=exp(-(z(z>right_edge)-right_edge).^2/edge%n^2);

"(,)
的#19""(库#6,光束代码#20)
光束代码#20"\"\"\"
描述结构:...
库:...

\"\"\"
+光束代码(_光束,_凭依)->+[del](,+光束代码)...
->的(光束代码,描述结构)->的(光束代码,库)...

->+[code]([想],描述结构)->[想](_光束,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}


"(,)
的#21""(光束代码#20,库#22)
库#22"
操作1a:...
操作1b:...
将条目\"操作1a\"复制为条目\"操作1b\"
+[新建阅读窗口](,操作1a)

操作0:...
将'操作0'的\"电子\"替换为\"光束\"


"(,)
的#23""(库#22,操作1a#24)
操作1a#24"\"\"\"
初始化:...
画图:...
动画:...

\"\"\"
+操作1a(_光束,)->+[del](,+操作1a)...
->的(操作1a,初始化#0)->的(操作1a,画图#0)->的(操作1a,动画#0)...

->.\"凭依\"(+操作1a,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,腰宽)->的(_光束,展宽)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本](初始化#0,+节点#1)->+[.]\"n\"(+[模板文本],变量)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->[]{
    []:->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
        ->+[.]\"焦点坐标\"(+[模板文本],空间点#A),
    ->+[临时文本]\"0,0\"->+[.]\"焦点坐标\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)...
->+[模板文本](动画#0,+节点#3)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#25""(操作1a#24,画图#26)
画图#26"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.2)

h%n=rectangle('Position',[pt1(1)+focus%n(1)-w%n(1)/2,init%n-c*tau%n*1.2,w%n(1),c*tau%n/sqrt(2)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);

"(,)
的#27""(操作1a#24,初始化#28)
初始化#28"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=-L0/2;
else
    init%n=focus%n(2)-%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z%n=linspace(pt0(2)-L0/2,pt0(2)+L0/2,100);
w%n=w_0%n.*sqrt(1+((z%n-focus%n(2))./(z_R%n)).^(2));

"(,)
的#29""(操作1a#24,动画#30)
动画#30"w_z%n=w_0%n.*sqrt(1+((c*t(i)+init%n-focus%n(2))./(z_R%n)).^(2));

h%n.Position(1)=pt1(1)+focus%n(1)-w_z%n/2;
h%n.Position(2)=c*t(i)+init%n-c*tau%n/sqrt(2)/2;
h%n.Position(3)=w_z%n;

"(,)
的#31""(库#22,操作0#32)
操作0#32"\"\"\"
初始化:...
初始化_GDD:...
初始化_inf:...
将条目\"初始化\"复制为条目\"初始化_inf\"
画图:...
动画:...

\"\"\"
+操作0(_光束,)->+[del](,+操作0)...
->的(操作0,初始化#0)->的(操作0,初始化_GDD)->的(操作0,初始化_inf)...
->的(操作0,画图#0)->的(操作0,动画#0)...

->.\"凭依\"(+操作0,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,波长)->的(_光束,展宽)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本](,+节点#1)->+[.]\"n\"(+[模板文本],变量)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],波长)...
->[]{
    []:->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
        ->+[.]\"焦点坐标\"(+[模板文本],空间点#A),
    ->+[临时文本]\"0,0\"->+[.]\"焦点坐标\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_光束,GDD)->GDD->+[.](+[模板文本],GDD)...
        ->+[code](+[模板文本],初始化_GDD),
    ->[==]\"inf\"(,展宽)->+[code](+[模板文本],初始化_inf),
    ->+[code](+[模板文本],初始化#0)
}...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)...
->+[模板文本](动画#0,+节点#3)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#33""(操作0#32,画图#34)
画图#34"y=f%n((x-init%n)/c);
y=real(y)/max(abs(y))*0.4+0.6;
h%n=plot(x,y);
"(,)
的#35""(操作0#32,初始化_inf#36)
初始化_inf#36"omega%n=2*pi*c/%波长;
focus%n=[%焦点坐标];

if isnan(%起始位置)
    init%n=0;
else
    init%n=focus%n(1)-%起始位置;
end

% Continus beam
f%n=@(t)cos(t*omega%n).*(sign(-t)+1)/2;

"(,)
的#37""(操作0#32,动画#38)
动画#38"x_t=x-init%n-t(i)*c;
y=f%n(x_t/c);
y=real(y)/max(abs(y))*0.4+0.6;
h%n.YData=y;
"(,)
的#39""(操作0#32,初始化_GDD#40)
初始化_GDD#40"tau%n=%展宽*2;
omega%n=2*pi*c/%波长;
focus%n=[%焦点坐标];
dw%n=2./tau%n;
GDD%n=%GDD;

if isnan(%起始位置)
    init%n=0;
else
    init%n=focus%n(1)-%起始位置;
end


% Dispersive pulse
% f%n=@(t)sqrt((2.*pi)./(1i.*(1)./(2).*GDD%n-(1)./(dw%n.^(2)))).*exp(-(1i.*(1)./(2).*GDD%n+(1)./(dw%n.^(2))).*(t.^(2))./(4.*(((1)./(2).*GDD%n).^(2)+((1)./(dw%n.^(2))).^(2)))).*exp(-1i.*omega%n.*t);

f%n=@(t)exp(-(1i.*(1)./(2).*GDD%n+(1)./(dw%n.^(2))).*(t.^(2))./(4.*(((1)./(2).*GDD%n).^(2)+((1)./(dw%n.^(2))).^(2)))).*exp(-1i.*omega%n.*t);

"(,)
的#41""(操作0#32,初始化#42)
初始化#42"tau%n=%展宽*2;
omega%n=2*pi*c/%波长;
focus%n=[%焦点坐标];

if isnan(%起始位置)
    init%n=-1.5*c*tau%n;
else
    init%n=focus%n(1)-%起始位置;
end

% Gaussian beam
f%n=@(t)exp(-t.^2/tau%n^2).*exp(1i*t*omega%n);

"(,)
的#43""(库#22,操作1b#44)
操作1b#44"\"\"\"
初始化:...
画图:...
动画:...

\"\"\"
+操作1b(_光束,)->+[del](,+操作1b)...
->的(操作1b,初始化#0)->的(操作1b,画图#0)->的(操作1b,动画#0)...

->.\"凭依\"(+操作1b,_凭依)->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_光束)...

->的(_光束,腰宽)->的(_光束,展宽)...

->插入(_凭依,)->的(插入,初始化)->的(插入,画图)->的(插入,动画)...

->+[文本结构_插入尾部](初始化,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入尾部](动画,+节点#3)...

->+[模板文本](初始化#0,+节点#1)->+[.]\"n\"(+[模板文本],变量)...
->+[.](+[模板文本],展宽)->+[.](+[模板文本],腰宽)...
->[]{
    []:->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#A)...
        ->+[.]\"焦点坐标\"(+[模板文本],空间点#A),
    ->+[临时文本]\"0,0\"->+[.]\"焦点坐标\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_光束,起始位置)->起始位置->+[.](+[模板文本],起始位置),
    ->+[临时文本]\"nan\"->+[.]\"起始位置\"(+[模板文本],+[临时文本])
}...

->+[模板文本](画图#0,+节点#2)->+[.]\"n\"(+[模板文本],变量)...
->+[模板文本](动画#0,+节点#3)->+[.]\"n\"(+[模板文本],变量)




"(,)
的#45""(操作1b#44,动画#46)
动画#46"w_z%n=w_0%n.*sqrt(1+((-c*t(i)+init%n-focus%n(2))./(z_R%n)).^(2));

h%n.Position(1)=pt1(1)+focus%n(1)-w_z%n/2;
h%n.Position(2)=-c*t(i)+init%n-c*tau%n/sqrt(2)/2;
h%n.Position(3)=w_z%n;

"(,)
的#47""(操作1b#44,初始化#48)
初始化#48"tau%n=%展宽*2.5;
focus%n=[%焦点坐标];
w_0%n=%腰宽;

if isnan(%起始位置)
    init%n=L0/2;
else
    init%n=focus%n(2)+%起始位置;
end

% Gaussian beam
z_R%n=w_0%n^2*pi/lm_0;
z%n=linspace(pt0(2)-L0/2,pt0(2)+L0/2,100);
w%n=w_0%n.*sqrt(1+((z%n-focus%n(2))./(z_R%n)).^(2));

"(,)
的#49""(操作1b#44,画图#50)
画图#50"patch(focus%n(1)+[w%n/2,-fliplr(w%n)/2],[z%n,fliplr(z%n)],[1,0,0],'FaceAlpha',0.2)

h%n=rectangle('Position',[pt1(1)+focus%n(1)-w%n(1)/2,init%n-c*tau%n/sqrt(2)/2,w%n(1),c*tau%n/sqrt(2)],'Curvature',[1,1],'FaceColor',[1,1,1,0.1]);

"(,)
的#51""(光束代码#20,描述结构#52)
描述结构#52"\"\"\"


\"\"\"
+描述结构(_光束,_凭依)->+操作(+描述结构,)...

->[]{
    []:->的(_光束,入射边)->入射边{
        []:->[==]\"ymin\"(,入射边), ->[==]\"ymax\"(,入射边)
    },
    ->+操作0(_光束,_凭依)->+的(+操作,+操作0)
}

"(,)
的#53""(库#6,框架代码#54)
框架代码#54"\"\"\"
框架:...
初始化:...
画图:...
动画:...

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,框架)->的(框架代码,初始化)->的(框架代码,画图)->的(框架代码,动画)...

->的(_媒介,模拟空间)...
->的(模拟空间,长度#0)->的(模拟空间,宽度#0)...
->的(_媒介,窗口)...
->的(窗口,长度#1)->的(窗口,宽度#1)...

->插入(_凭依,)->+[修改内容](框架,_凭依)...

->+的(插入,+标题)->[标题](_凭依,)->[m_text]([标题],+标题)...

->+的(插入,+初始化)->+顺序#1(+初始化,)...
    ->+的(+初始化,+顺序#1)->+的(+顺序#1,+节点#1)...
->+的(插入,+画图)->+顺序#2(+画图,)...
    ->+的(+画图,+顺序#2)->+的(+顺序#2,+节点#2)...
->+的(插入,+动画)->+顺序#3(+动画,)...
    ->+的(+动画,+顺序#3)->+的(+顺序#3,+节点#3)...

->+[修改内容](画图,+节点#2)->+[修改内容](动画,+节点#3)...
->+[模板文本](初始化,+节点#1)...
->+[.]\"长度0\"(+[模板文本],长度#0)->+[.]\"宽度0\"(+[模板文本],宽度#0)...
->+[.]\"长度1\"(+[模板文本],长度#1)->+[.]\"宽度1\"(+[模板文本],宽度#1)...

->[]{
    []:->在(模拟空间,空间点#0)->空间点#0->+[.]\"空间点0\"(+[模板文本],空间点#0),
    ->+[.]\"空间点0\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...
->[]{
    []:->在(窗口,空间点#1)->空间点#1->+[.]\"空间点1\"(+[模板文本],空间点#1),
    ->+[.]\"空间点1\"(+[模板文本],+[临时文本])->+[临时文本]\"0,0\"
}...
->[]{
    []:->的(窗口,速度)->速度->+[.](+[模板文本],速度),
    ->+[.]\"速度\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}...
->[]{
    []:->的(窗口,启动时间)->启动时间->+[.](+[模板文本],启动时间),
    ->+[.]\"启动时间\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}...
->[]{
    []:->的(窗口,停止时间)->停止时间->+[.](+[模板文本],停止时间),
    ->+[.]\"停止时间\"(+[模板文本],+[临时文本])->+[临时文本]\"0\"
}


"(,)
的#55""(框架代码#54,动画#56)
动画#56"if t(i)>t0 && t(i)<t0+Dt
    x1=v*(t(i)-t0);
end

axis([pt0(1)+x1,pt0(1)+x1+W1,0,1.2])
% axis([pt0(1),pt0(1)+W0,pt0(2)-L0,pt0(2)+L0])

"(,)
的#57""(框架代码#54,画图#58)
画图#58"
axis([pt0(1),pt0(1)+W0,0,1.2])


"(,)
的#59""(框架代码#54,初始化#60)
初始化#60"physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=%速度*c;
t0=%启动时间;
ts=%停止时间;
Nt=100;
pt0=[%空间点0];
pt1=[%空间点1];
L0=%长度0;
L1=%长度1;
W0=%宽度0;
W1=%宽度1;

DW=%宽度0-%宽度1;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;
x=linspace(pt0(1),pt0(1)+W0,10000);

"(,)
的#61""(框架代码#54,框架#62)
框架#62"%{
+[M函数](,%标题)
%}


%初始化

clf
hold on
%画图

for i=1:length(t)

%动画

title(sprintf('T=%.2f fs, L=%.2f um',t(i)/1e-15,t(i)/1e-6*c))
pause(0.03)

end


%{
+[M函数](,%标题)
%}"(,)
的#63""(代码结构#4,描述结构#64)
描述结构#64"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->[]{
    []=>的(_媒介,_实体)->_实体=>[]:
        ->的(_实体,数密度)...
            ->+电子代码(_实体,_凭依)->+的(+操作,+电子代码),
        ->的(_实体,a0)->[]{[]=>[==]\"0\"(,a0)}...
            ->+光束代码(_实体,_凭依)->+的(+操作,+光束代码),
        ->[]
}...
->+框架代码(_媒介,_凭依)->+的(+操作,+框架代码)

"(,)
的#65""(降临规则#2,整理代码#66)
整理代码#66"\"\"\"
测试代码:...
+[新建阅读窗口](,测试代码)

\"\"\"
+整理代码(_媒介,_凭依)->+[del](,+整理代码)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

->+[结构转文本](_凭依,_凭依)->+[删除结构](,_凭依)

"(,)
的#67""(整理代码#66,测试代码#68)
测试代码#68"%{
+[M函数](,测试代码)
%}


physics_constant;
lm_0=800e-9;
lm_r=lm_0;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;

v=1*c;
t0=350e-15;
ts=0;
Nt=100;
pt0=[0.0, 0.0];
pt1=[0.0, 0.0];
L0=4.5e-05;
L1=4.5e-05;
W0=0.0006;
W1=0.0001;

DW=0.0006-0.0001;
Dt=DW/v;
if v==0
    Dt=W1/c;
end
t=linspace(0,t0+Dt+ts,Nt);
x1=0;

nx=4992;
ny=40;
xi=linspace(0,W0,nx)+pt0(1);
yi=linspace(0,L0,ny)-L0/2+pt0(2);
[x,y]=meshgrid(xi,yi);

tauprobe_1=10e-15*2.5;
focusprobe_1=[6e-05, 0.0];
w_0probe_1=10e-6;

if isnan(100e-6)
    initprobe_1=0;
else
    initprobe_1=focusprobe_1(1)-100e-6;
end

% Gaussian beam
z_Rprobe_1=w_0probe_1^2*pi/lm_0;
z=linspace(pt0(1),pt0(1)+W0,100);
wprobe_1=w_0probe_1.*sqrt(1+((z-focusprobe_1(1))./(z_Rprobe_1)).^(2));

taupump_1=10e-15*2.5;
focuspump_1=[6e-05, 0.0];
w_0pump_1=10e-6;

if isnan(80e-6)
    initpump_1=0;
else
    initpump_1=focuspump_1(1)-80e-6;
end

% Gaussian beam
z=linspace(pt0(1),pt0(1)+W0,10000);

%代码
nplasma_1=1.4e25;

edge=50e-6;
n=ones(size(z));
n(z<edge*3)=exp(-(z(z<edge*3)-edge*3).^2/edge^2);
n(z>W0-edge*3)=exp(-(z(z>W0-edge*3)-W0+edge*3).^2/edge^2);
% n=n*nplasma_1;

lm_1=832e-9;
Dtau_1=10e-15;
omega_1=2*pi*c/lm_1;
f_1=@(t)exp(-t.^2/Dtau_1^2).*exp(1i*t*omega_1);

clf
plot(z,n);
hold on
h1=plot(z,f_1(z/c));


for i=1:length(t)/2
h1.YData=real(f_1(z/c-t(i)))/2+0.5;

pause(0.03)
end


%{
+[M函数](,测试代码)
%}"(,)
的#69""(降临规则#2,设置变量#70)
设置变量#70"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_题目)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#71""(设置变量#70,描述结构#72)
描述结构#72"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_节点)->_节点{
            []:->的(_节点,波长)->波长,
            ->的(_节点,焦点位置)->焦点位置,
            ->的(_节点,数密度)->数密度
        }->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#73""(描述结构#72,P代码#74)
P代码#74"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"_varb\"
if \"探针\" in name:
    type=\"_probe\"
elif \"泵光\" in name or \"驱动光\" in name:
    type=\"_pump\"
elif \"光\" in name:
    type=\"_light\"
elif \"电子\" in name:
    type=\"_plasma\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#75""(一维预览动画#0,召唤规则#76)
召唤规则#76"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成PIC一维动画\"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)

## end
#689, 190:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成PIC一维动画"(,召唤星辰)...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)...
->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#691, 12374:
生成例句代码#0"

召唤规则:...
降临规则:...


"(,)
的#1""(生成例句代码#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成例句代码\"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+整理模板(_媒介,_凭依)->+的(操作,+整理模板)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)



"(,)
的#3""(生成例句代码#0,降临规则#4)
降临规则#4"

生成结构:...
设置变量:...
结构变换:...
整理模板:...
生成代码:...


"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"
P代码:...
P代码2:...

\"\"\"
+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,P代码)->的(生成结构,P代码2)...

->+的(_凭依,+结构)...
->+[python]#0(Python,)->+[code](+[python]#0,P代码)...
->+[python]#1(Python,+结构)->+[code](+[python]#1,P代码2)...
->+[.]\"code\"(+[python]#1,_媒介)...
->+[导入节点](+结构,+结构)

"(,)
的#7""(生成结构#6,P代码#8)
P代码#8"\"\"\"
+[P函数](,P代码)
print('2'.replace('2','333'))

\"\"\"

import re
from body.bone import NetP
from tools import tools_basic

def word_pat_token(code,i,pat):
    text=''

#    pat=pat.replace('\\','\\\\')
    a=re.match(pat,code[i:])
    if a==None:
        state=False
    else:
        di=a.span()[1]
        output_txt=code[i:i+di]
        i+=di
        state=True
        text=output_txt
    
    return [state,i,text]


def parser_token_标点(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,text]=word_pat_token(code,i,r'[\w\d, ]+')
    pt0=NetP(\"标点\",text)
    if state==True:
        list_new.append(pt0)
    
    list_pt+=list_new

    if state==False:
        print(\"标点:\",state)
        return [False,i0,None]
    else:
        print(\"标点:\",state,pt0.info())
        return [True,i,pt0]

def parser_token_单词(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,text]=word_pat_token(code,i,r'\[[\w\d]+\]')
    pt0=NetP(\"单词\",text)
    if state==True:
        list_new.append(pt0)
    
    list_pt+=list_new

    if state==False:
        print(\"单词:\",state)
        return [False,i0,None]
    else:
        print(\"单词:\",state,pt0.info())
        return [True,i,pt0]

def parser_token_单元(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,pt0]=parser_token_单词(code,i,list_new)
    if state==False:
        i=i0
        list_new=[]
        [state,i,pt0]=parser_token_标点(code,i,list_new)
    if state==False:
        i=i0
        list_new=[]
        [state,i,text]=word_pat_token(code,i,r'\(')
        if state==True:
            [state,i,pt0]=parser_token_句子(code,i,list_new)
            if state==True:
                pt0=NetP(\"句子\").con(0,pt0)
            if state==True:
                [state,i,text]=word_pat_token(code,i,r'\)')
            if state==True:
                list_new.append(pt0)
    
    if state==True:
        i1=i
        list_new1=list_new
        list_new=[]
        [state,i,text]=word_pat_token(code,i,r'\?')
        pt1=NetP(\"或许\",text)
        if state==True:
            pt1.con(pt0,0)
        if state==True:
            list_new.append(pt1)
        if state==False:
            i=i1
            list_new=list_new1
            state=True
        else:
            list_new=list_new1+list_new
    
    list_pt+=list_new

    if state==False:
        print(\"单元:\",state)
        return [False,i0,None]
    else:
        print(\"单元:\",state,pt0.info())
        return [True,i,pt0]

def parser_token_短语(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,pt0]=parser_token_单元(code,i,list_new)
    if state==True:
        i1=i
        list_new1=list_new
        list_new=[]
        [state,i,pt1]=parser_token_标点(code,i,list_new)
        if state==True:
            pt1=NetP(\"关联1\").con(0,pt1)
        if state==True:
            pt1.con(pt0,0)
        if state==True:
            [state,i,text]=word_pat_token(code,i,r'\.\.\.')
            if state==True:
                pt1.con(pt0,0)
            if state==True:
                [state,i,pt2]=parser_token_标点(code,i,list_new)
                if state==True:
                    pt2=NetP(\"关联2\").con(0,pt2)
                if state==True:
                    pt2.con(pt1,0)
                if state==True:
                    [state,i,pt3]=parser_token_单元(code,i,list_new)
                    if state==True:
                        pt3.con(pt2,0)
                if state==True:
                    list_new.append(pt2)
        if state==True:
            list_new.append(pt1)
        
        if state==False:
            i=i1
            list_new=list_new1
            state=True
        else:
            list_new=list_new1+list_new
    
    list_pt+=list_new

    if state==False:
        print(\"短语:\",state)
        return [False,i0,None]
    else:
        print(\"短语:\",state,pt0.info())
        return [True,i,pt0]

def parser_token_句子(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,pt0]=parser_token_短语(code,i,list_new)
    if state==True:
        i1=i
        list_new1=list_new
        list_new=[]
        [state,i,pt1]=parser_token_句子(code,i,list_new)
        if state==True:
            pt1.con(pt0,0)
        if state==False:
            i=i1
            list_new=list_new1
            state=True
        else:
            list_new=list_new1+list_new
    
    list_pt+=list_new

    if state==False:
        print(\"句子:\",state)
        return [False,i0,None]
    else:
        print(\"句子:\",state,pt0.info())
        return [True,i,pt0]

def parser_token_入口(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]

    [state,i,pt0]=parser_token_句子(code,i,list_new)
    if state==True:
        pt0=NetP(\"起点\").con(0,pt0)
    if state==True:
        list_new.append(pt0)
    
    list_pt+=list_new

    if state==False:
        print(\"入口:\",state)
        return [False,i0,None]
    else:
        print(\"入口:\",state,pt0.info())
        return [True,i,pt0]


def parser_text2pts(code):
    list_pt=[]
    [state,i,pt]=parser_token_入口(code,0,list_pt)
    if state==False:
        return ''
    text=tools_basic.writeStdCode([],list_pt)
    return text

text=parser_text2pts('A:B')
print(text)



\"\"\"
+[P函数](,代码)

\"\"\""(,)
的#9""(生成结构#6,P代码2#10)
P代码2#10"\"\"\"


\"\"\"

ans=parser_text2pts(code)

"(,)
的#11""(降临规则#4,结构变换#12)
结构变换#12"\"\"\"
描述结构:...
库:...
模板:...
+[新建阅读窗口](,库)

\"\"\"

+结构变换(_媒介,_凭依)->+[del](,+结构变换)...
->的(结构变换,模板)->的(结构变换,库)->的(库,句子模块)...

->的(_凭依,结构)->的(结构,起点)->起点(,_起点)->变量(,起点)...
->+的(_凭依,+模板库)...

->+[模板文本](模板,_凭依)->+[.]\"句子0\"(+[模板文本],变量)...

->+[文本结构_插入](_凭依,+句子模块)...
->+[做](_起点,+句子模块)->+[.]\"凭依\"(+[做],_凭依)->+[code](+[做],句子模块)



"(,)
的#13""(结构变换#12,描述结构#14)
描述结构#14"\"\"\"


\"\"\"
+描述结构(_凭依,起点)->+操作(+描述结构,)...

->起点(,_起点)

"(,)
的#15""(结构变换#12,库#16)
库#16"

句子模块:...
+[新建阅读窗口](,句子模块)

"(,)
的#17""(库#16,句子模块#18)
句子模块#18"\"\"\"
模块:...

生成模板:...
生成代码:...

->+[文本结构_插入](_根,+句子模块#0)...

\"\"\"
+句子模块(_起点,_根)->+[del](,+句子模块)...
->的(句子模块,生成模板)->的(句子模块,生成代码)...

->.\"凭依\"(+句子模块,_凭依)->_re\"句子|起点\"(,_起点)...

->的(_凭依,结构)->的(_凭依,模板库)...
->+的(模板库,+模板)->+模板(_re,)->+[做](_起点,+模板)...
    ->+[code](+[做],生成模板)->+[.]\"结构\"(+[做],结构)...
->+[做](_起点,_根)->+[code](+[做],生成代码)...
    ->+[.]\"凭依\"(+[做],_凭依)->+[.]\"句子\"(+[做],_re)




"(,)
的#19""(句子模块#18,模块#20)
模块#20"->.\"%变量\"(+例句,_%变量)->[m_text](_%变量,+%变量)...
->+[文本结构_插入](+%句子,+%变量)


"(,)
的#21""(句子模块#18,生成模板#22)
生成模板#22"\"\"\"


\"\"\"
+生成模板(_起点,模板)->+[del](,+生成模板)...

->.\"结构\"(+生成模板,结构)...
->[]{
    []:->[is](_起点,标点)->标点->+[增加内容](标点,模板),
    ->[is](_起点,单词)->单词->[]{
        []:->关联1(单词,)->+[增加内容]\"%枚举\"(,模板),
        ->+[增加内容]\"%\"(单词,模板)
    },
    ->[is](_起点,句子)->句子->+[增加内容]\"%句子\"(,模板),
    ->[]
}...
->[]{
    []:->关联1(_起点,),
    ->_re\"单词|句子|标点\"(_起点,)->的(结构,_re)...
        ->+[做](_re,模板)->+[code](+[做],生成模板)->+[.]\"结构\"(+[做],结构),
    ->[]
}

"(,)
的#23""(句子模块#18,生成代码#24)
生成代码#24"\"\"\"
枚举模块:...
单词模块:...
句子模块:...

\"\"\"
+生成代码(_起点,_根)->+[del](,+生成代码)...
->的(生成代码,句子模块)->的(生成代码,枚举模块)->的(生成代码,单词模块)...

->.\"句子\"(+生成代码,_句子)...
->.\"凭依\"(+生成代码,_凭依)->的(_凭依,结构)...
->[]{
    []:->[is](_起点,单词)->单词->[]{
        []:->关联1(单词,)...
            ->+[做](单词,_根)->+[code](+[做],枚举模块)->+[.]\"句子\"(+[做],_句子),
        ->+[做](单词,_根)->+[code](+[做],单词模块)->+[.]\"句子\"(+[做],_句子)
    },
    ->[is](_起点,句子)->+[做](句子,_根)...
        ->+[code](+[做],句子模块)->+[.]\"凭依\"(+[做],_凭依)->+[.]\"句子\"(+[做],_句子),
    ->[]
}...
->[]{
    []:->关联1(_起点,),
    ->_re\"单词|标点|句子\"(_起点,)->的(结构,_re)->+[做](_re,_根)...
        ->+[code](+[做],生成代码)->+[.]\"凭依\"(+[做],_凭依)->+[.]\"句子\"(+[做],_句子),
    ->[]
}

"(,)
的#25""(生成代码#24,枚举模块#26)
枚举模块#26"\"\"\"
模块:...

\"\"\"
+枚举模块(单词,_根)->+[del](,+枚举模块)...
->的(枚举模块,模块)...

->.\"句子\"(+枚举模块,_句子)->变量(,_句子)...
->关联1(单词,标点)...

->+[文本结构_插入尾部](_根,+节点)...
->+[模板文本](模块,+节点)...
->+[.]\"变量\"(+[模板文本],单词)->+[.]\"句子\"(+[模板文本],变量)...
->+[.]\"标点\"(+[模板文本],标点)

"(,)
的#27""(枚举模块#26,模块#28)
模块#28"->+[文本结构_插入](%句子,+枚举)->[]{
    []->.\"%变量\"(+例句,_%变量0)->_%变量0->[m_text](_%变量0,+节点)...
    ->+顺序\"%标点\"(+枚举,)->+的(+枚举,+顺序)->+[文本结构_插入尾部](+枚举,+节点)...
    =>.\"%变量\"(+例句,_%变量)->_%变量{[]=>[is](_%变量,_%变量0)}...
        =>+[文本结构_插入尾部](+枚举,+节点#1)->[m_text](_%变量,+节点#1)
}...
"(,)
的#29""(生成代码#24,单词模块#30)
单词模块#30"\"\"\"
模块:...

\"\"\"
+单词模块(单词,_根)->+[del](,+单词模块)...
->的(单词模块,模块)...

->.\"句子\"(+单词模块,_句子)->变量(,_句子)...

->+[文本结构_插入尾部](_根,+节点)...
->+[模板文本](模块,+节点)...
->+[.]\"变量\"(+[模板文本],单词)->+[.]\"句子\"(+[模板文本],变量)

"(,)
的#31""(单词模块#30,模块#32)
模块#32"->.\"%变量\"(+例句,_%变量)->[m_text](_%变量,+%变量)...
->+[文本结构_插入](+%句子,+%变量)...
"(,)
的#33""(生成代码#24,句子模块#34)
句子模块#34"\"\"\"
模块:...

\"\"\"
+句子模块(句子,_根)->+[del](,+句子模块)...
->的(句子模块,模块)->的(生成代码,句子模块)->的(句子模块#0,生成代码)...

->.\"句子\"(+句子模块,_句子0)->变量#0(,_句子0)...
->.\"凭依\"(+句子模块,_凭依)->句子(,_句子)->变量(,句子)...

->+[文本结构_插入尾部](_根,+节点)...
->+[模板文本](模块,+节点)...
->+[.]\"变量\"(+[模板文本],变量)->+[.]\"句子0\"(+[模板文本],变量#0)...

->+[文本结构_插入]\"    \"(+节点,+句子模板)->+句子模板\"[]\"...
->+[做](_句子,+句子模板)->+[code](+[做],句子模块#0)...
    ->+[.]\"凭依\"(+[做],_凭依)->+[.]\"句子\"(+[做],句子)


"(,)
的#35""(句子模块#34,模块#36)
模块#36"->+[文本结构_插入](+%句子0,+%变量)->+[修改内容](模板_%变量,+%变量)...
->[]{
%句子模板
    ->[]
}...
"(,)
的#37""(结构变换#12,模板#38)
模板#38"\"\"\"
%模板库

\"\"\"
+例句(,_输出)->+[del](,+例句)...
%引用模板...

->+[修改内容](模板_%句子0,+%句子0)...

%句子模块

->+[结构转文本](+%句子0,_输出)...
->+[删除结构](,+%句子0)->+[del](,+结构)

"(,)
的#39""(降临规则#4,生成代码#40)
生成代码#40"\"\"\"
模板:...
->的(生成代码,模板)...

\"\"\"
+生成代码(_媒介,_凭依)->+[del](,+生成代码)...

->+[结构转文本](_凭依,_凭依)...
->+[删除结构](,_凭依)




"(,)
的#41""(降临规则#4,设置变量#42)
设置变量#42"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->的(_代码,结构)...

->+[code]([想],描述结构)->[想](,结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#43""(设置变量#42,描述结构#44)
描述结构#44"\"\"\"
P代码:...

\"\"\"

+描述结构(,结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(结构,_re)->_re\"句子|起点\"=>+变量名(,_re)->+的(+操作,+变量名)...
        ->[标题](_re,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#45""(描述结构#44,P代码#46)
P代码#46"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"句子\" in name:
    type=\"句子\"
elif \"起点\" in name:
    type=\"结构\"

n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s%d\"%(type,n_v)
# ans=\"%d\"%(n_v)
"(,)
的#47""(降临规则#4,整理模板#48)
整理模板#48"\"\"\"
生成模板库:...
生成引用:...
将条目\"生成模板库\"复制为条目\"生成引用\"

\"\"\"
+整理模板(_媒介,_凭依)->+[del](,+整理模板)...
->的(整理模板,生成模板库)->的(整理模板,生成引用)...

->的(_凭依,模板库)...
->+[文本结构_插入](_凭依,+模板库)...
->+[做](模板库,+模板库)->+[code](+[做],生成模板库)...
->+[文本结构_插入](_凭依,+引用模板)...
->+[做](模板库,+引用模板)->+[code](+[做],生成引用)


"(,)
的#49""(整理模板#48,生成引用#50)
生成引用#50"\"\"\"
模板0:...

\"\"\"
+生成引用(_输入,_输出)->+[del](,+生成引用)...
->的(生成引用,模板0)...

->[]{
    []=>的(_输入,模板)->模板(_句子,)->_句子=>变量(,_句子)...
        ->+[模板文本](模板0,+[增加内容])->+[增加内容](,_输出)...
        ->+[.](+[模板文本],变量)
}



"(,)
的#51""(生成引用#50,模板0#52)
模板0#52"->的(例句,模板_%变量)"(,)
的#53""(整理模板#48,生成模板库#54)
生成模板库#54"\"\"\"
模板0:模板_%变量::%模板

\"\"\"
+生成模板库(_输入,_输出)->+[del](,+生成模板库)...
->的(生成模板库,模板0)...

->[]{
    []=>的(_输入,模板)->模板(_句子,)->_句子=>变量(,_句子)...
        ->+[模板文本](模板0,+[增加内容])->+[增加内容](,_输出)...
        ->+[.](+[模板文本],变量)->+[.](+[模板文本],模板)
}



"(,)
的#55""(生成模板库#54,模板0#56)
模板0#56"模板_%变量::%模板
"(,)

## end
#693, 275:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成例句代码"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+整理模板(_媒介,_凭依)->+的(操作,+整理模板)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)




## end
#695, 6861:
绘制约束示意图#0"

召唤规则:...
降临规则:...


"(,)
的#1""(绘制约束示意图#0,召唤规则#2)
召唤规则#2"\"\"\"
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"绘制约束示意图\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)


"(,)
的#3""(绘制约束示意图#0,降临规则#4)
降临规则#4"
生成结构:...
生成代码:...
整理结构:...

"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"


\"\"\"
+生成结构(_题目,_代码)->+[del](,+生成结构)...

->+的(_代码,+结构)->+的(_代码,+保留结构)->+保留结构(,+结构)...
->+[召唤星辰]\"推导结构转代码\"(_题目,+结构)



"(,)
的#7""(降临规则#4,整理结构#8)
整理结构#8"\"\"\"


\"\"\"
+整理结构(_题目,_代码)->+[del](,+整理结构)...

->的(_代码,代码结构)->+[结构转文本](代码结构,_代码)...
->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)



"(,)
的#9""(降临规则#4,生成代码#10)
生成代码#10"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+生成代码(_题目,_代码)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...

->[]{
    []:->的(_代码,代码结构)->代码结构->+[删除结构](,代码结构)->+[del](,代码结构),
    ->[]
}->+的(_代码,+代码结构)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.](+[做],+代码结构)
}


"(,)
的#11""(生成代码#10,描述结构#12)
描述结构#12"\"\"\"


\"\"\"
+描述结构(_题目,_代码)->+操作(+描述结构,)...

->的(_代码,结构)->的(结构,命名空间)...
->[]{
    []=>的(_题目,_物体)->_物体=>[]:
        ->经过(_物体,_点)->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
            ->+的(+操作,+连线)->+连线(结构,_物体),
        ->的(_物体,x)->+的(+操作,+图形)->+图形(结构,_物体),
        ->在(_物体,空间点)->+的(+操作,+点)->+点(结构,_物体),
        ->[]
}...
->+的(+操作,+整体结构)->+整体结构(结构,_代码)

"(,)
的#13""(生成代码#10,库#14)
库#14"
整体结构:...
图形:...
连线:...
将条目\"图形\"复制为条目\"连线\"
+[新建阅读窗口](,图形)
+[新建阅读窗口](,连线)

点:...
+[新建阅读窗口](,点)

"(,)
的#15""(库#14,图形#16)
图形#16"\"\"\"
Nini, 打开PPT(文件)
M代码:...
M代码2:...
M模板2:...
M模板3:...
画图模板:...
画图模板2:...
画图模板3:...
+[新建阅读窗口](,M代码)

\"\"\"
+图形(_结构,_物体)->+[del](,+图形)...
->的(图形,M代码2)->的(图形,M模板2)->的(图形,M模板3)...
->的(图形,画图模板)->的(图形,画图模板2)->的(图形,画图模板3)...

->.(+图形,代码结构)->的(代码结构,图形初值)->的(代码结构,画图)...
->+[文本结构_插入尾部](图形初值,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...

->的(_结构,命名空间)...
->的(_物体,x)->的(_物体,y)...

->+[模板文本]#M(,+[临时文本]#M)...
->+[matlab](Matlab,)->+[模板文本]#2(,+节点#2)...

->+[.](+[matlab],x)->+[o](+[matlab],+xo)->+[del](,+xo)...
->+[.](+[matlab],y)->+[o](+[matlab],+yo)->+[del](,+yo)...
    ->+[.](+[模板文本]#2,+xo)->+[.](+[模板文本]#2,+yo)...

->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt0\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt0\"(+[matlab],+[临时文本])
}...
->[]{
    []:->朝向(_物体,方向)->方向->+[.]\"an0\"(+[matlab],方向),
    ->+[临时文本]\"0\"->+[.]\"an0\"(+[matlab],+[临时文本])
}...
->+[o]\"an_out\"(+[matlab],+[临时文本]#a)...
->+[.]\"an0\"(+[模板文本]#2,+[临时文本]#a)...

->[]:
->的(_物体,方向)->方向->变量#a(,方向)->的(命名空间,变量#a)...
->+[code](+[matlab],+[临时文本]#M)...
->+[.]\"an1\"(+[模板文本]#M,变量#a)->+[.]\"an1\"(+[模板文本]#2,变量#a)...
    ->[]{
        []:->经过(_物体,_点)->_点->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
            ->+[.]\"pt1\"(+[matlab],_A)...
            ->+[code](+[模板文本]#M,M模板2)->+[code](+[模板文本]#2,画图模板2)...
            ->+[.]\"点\"(+[模板文本]#2,变量)->+[.]\"点\"(+[模板文本]#M,变量),

        ->+[临时文本]->+[.]\"pt1\"(+[matlab],+[临时文本])...
            ->+[code](+[模板文本]#M,M模板3)->+[code](+[模板文本]#2,画图模板3)
    },

->+[code](+[matlab],M代码2)->+[code](+[模板文本]#2,画图模板)

"(,)
的#17""(图形#16,M模板3#18)
M模板3#18"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;
xo= cosd(%an1)*x0+sind(%an1)*y0;
yo= -sind(%an1)*x0+cosd(%an1)*y0;


"(,)
的#19""(图形#16,M模板2#20)
M模板2#20"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;

x0=x0-%点_x;
y0=y0-%点_y;
xo= cosd(%an1)*x0+sind(%an1)*y0;
yo= -sind(%an1)*x0+cosd(%an1)*y0;


"(,)
的#21""(图形#16,画图模板3#22)
画图模板3#22"
x0=[%xo];
y0=[%yo];
x=cosd(%an1-%an0)*x0-sind(%an1-%an0)*y0;
y=sind(%an1-%an0)*x0+cosd(%an1-%an0)*y0;
patch(x,y,[1,1,1],'FaceAlpha',0.5);
"(,)
的#23""(图形#16,画图模板2#24)
画图模板2#24"
x0=[%xo];
y0=[%yo];
x=cosd(%an1-%an0)*x0-sind(%an1-%an0)*y0+%点_x;
y=sind(%an1-%an0)*x0+cosd(%an1-%an0)*y0+%点_y;
patch(x,y,[1,1,1],'FaceAlpha',0.5);
"(,)
的#25""(图形#16,画图模板#26)
画图模板#26"
patch([%xo],[%yo],[1,1,1],'FaceAlpha',0.5);
"(,)
的#27""(图形#16,M代码2#28)
M代码2#28"%{

%}

xo= cosd(an0)*x-sind(an0)*y+pt0(1);
yo= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;
"(,)
的#29""(图形#16,M代码#30)
M代码#30"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;

if isempty(pt1)
    xo=x0;
    yo=y0;
else
    xo=x0-pt1(1);
    yo=y0-pt1(2);
end


"(,)
的#31""(库#14,点#32)
点#32"\"\"\"
Nini, 打开PPT(文件)
M代码2:...
画图模板:...
画图模板2:...
+[新建阅读窗口](,M代码)

\"\"\"
+点(_结构,_物体)->+[del](,+点)...
->的(点,M代码2)...
->的(点,画图模板)->的(点,画图模板2)...

->.(+点,代码结构)->的(代码结构,画图)->+[文本结构_插入尾部](画图,+节点#2)...
->的(_结构,命名空间)->+[标题](_物体,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码2)...
->+[模板文本]#2(,+节点#2)...
->+[.](+[模板文本]#2,+xo)->+[o](+[matlab],+xo)->+[del](,+xo)...
->+[.](+[模板文本]#2,+yo)->+[o](+[matlab],+yo)->+[del](,+yo)...
->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt0\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt0\"(+[matlab],+[临时文本])
}...
->+[.]\"内容\"(+[模板文本]#2,+[标题])...

->[]:
->在(_物体,_点)->_点->变量#a(,_点)->的(命名空间,变量#a)...
    ->+[code](+[模板文本]#2,画图模板2)->+[.]\"点\"(+[模板文本]#2,变量#a),

->+[code](+[模板文本]#2,画图模板)

"(,)
的#33""(点#32,M代码#34)
M代码#34"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;

if isempty(pt1)
    xo=x0;
    yo=y0;
else
    xo=x0-pt1(1);
    yo=y0-pt1(2);
end


"(,)
的#35""(点#32,M代码2#36)
M代码2#36"%{

%}

xo=pt0(1);
yo=pt0(2);

"(,)
的#37""(点#32,画图模板3#38)
画图模板3#38"x0=[%xo];
y0=[%yo];
x=cosd(%an1-%an0)*x0-sind(%an1-%an0)*y0;
y=sind(%an1-%an0)*x0+cosd(%an1-%an0)*y0;
patch(x,y,[1,1,1],'FaceAlpha',0.5);
"(,)
的#39""(点#32,画图模板#40)
画图模板#40"
plot(%xo,%yo,'r*')
text(%xo,%yo,\"%内容(%xo)\");
"(,)
的#41""(点#32,画图模板2#42)
画图模板2#42"
plot(%点_x,%点_y,'ro')
text(%点_x,%点_y,\"%内容\");
"(,)
的#43""(库#14,整体结构#44)
整体结构#44"\"\"\"
模板:...

\"\"\"
+整体结构(_结构,_代码)->+[del](,+整体结构)...
->的(整体结构,模板)...

->的(_代码,代码结构)->+[标题](_代码,)...
    ->+[模板文本](模板,代码结构)->+[.](+[模板文本],+[标题])...
->的(_结构,顺序)->的(_结构,初值)...
->+[文本结构_插入](代码结构,+顺序)->[m_text](顺序,+顺序)...
->+[文本结构_插入](代码结构,+初值)->[m_text](初值,+初值)...
->+[文本结构_插入](代码结构,+图形初值)->+的(代码结构,+图形初值)...
->+[文本结构_插入](代码结构,+画图)->+的(代码结构,+画图)...

->+[M函数](,初值)->+[M函数](,顺序)
"(,)
的#45""(整体结构#44,模板#46)
模板#46"%{
+[M函数](,%[标题])
%}

%初值

%顺序

clf;
hold on
%画图
axis equal

%{
+[M函数](,%[标题])
%}"(,)
的#47""(库#14,连线#48)
连线#48"\"\"\"
模板:...

\"\"\"
+连线(_结构,_物体)->+[del](,+连线)...
->的(连线,模板)...

->.(+连线,代码结构)->的(代码结构,画图)...
->+[文本结构_插入尾部](画图,+节点#2)->[m_text](模板,+节点#2)...
->+[文本结构_插入](+节点#2,+xs)->+[文本结构_插入](+节点#2,+ys)...
->+顺序\", \"(+xs,)->+的(+xs,+顺序)...
->+顺序\", \"(+ys,)->+的(+ys,+顺序)...

->的(_结构,命名空间)...
->[]{
    []=>经过(_物体,_点)->_点->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
        =>+[文本结构_插入尾部](+xs,+节点#x)->+[修改内容]\"%s_x\"(变量,+节点#x)...
        ->+[文本结构_插入尾部](+ys,+节点#y)->+[修改内容]\"%s_y\"(变量,+节点#y)
}


"(,)
的#49""(连线#48,模板#50)
模板#50"
xs=[%xs];
ys=[%ys];
patch(xs,ys,[1,1,1],'FaceAlpha',0.5);
"(,)

## end
#697, 184:
"""
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"绘制约束示意图"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)



## end
#699, 3143:
更新约束关系#0"

召唤规则:...
降临规则:...


"(,)
的#1""(更新约束关系#0,召唤规则#2)
召唤规则#2"\"\"\"
...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"更新约束关系\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)


"(,)
的#3""(更新约束关系#0,降临规则#4)
降临规则#4"
生成结构:...

生成代码:...
整理结构:...

"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"


\"\"\"
+生成结构(_题目,_代码)->+[del](,+生成结构)...

->+的(_代码,+结构)->+的(_代码,+保留结构)->+保留结构(,+结构)...
->+[召唤星辰]\"推导结构转代码\"(_题目,+结构)



"(,)
的#7""(降临规则#4,整理结构#8)
整理结构#8"\"\"\"


\"\"\"
+整理结构(_题目,_代码)->+[del](,+整理结构)...

->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)



"(,)
的#9""(降临规则#4,生成代码#10)
生成代码#10"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+生成代码(_题目,_代码)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...


->+[code]([想],描述结构)->[想](_题目,_代码)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}


"(,)
的#11""(生成代码#10,描述结构#12)
描述结构#12"\"\"\"
        ->的(_物体,x)->+的(+操作,+图形)->+图形(结构,_物体),

\"\"\"
+描述结构(_题目,_代码)->+操作(+描述结构,)...

->的(_代码,结构)->的(结构,命名空间)...
->[]{
    []=>的(命名空间,变量)->变量(,_物理量)->_物理量{
        []&:=>[is](_物理量,空间点)->空间点,
        =>的(变量,类型)->类型\"图形\",
        ->o(求解,_物理量)->求解(,_物理量)
    }=>+的(+操作,+物理量)->+物理量(结构,_物理量)
}...
->[]{
    []=>的(_题目,_物体)->_物体=>[]:
        ->变量(,_物体)->的(命名空间,变量)->的(变量,类型)->类型\"图形\"...
            ->+的(+操作,+图形)->+图形(结构,_物体),
        ->在(_物体,空间点)->+的(+操作,+点)->+点(结构,_物体),
        ->[]
}...
->+的(+操作,+整体结构)->+整体结构(结构,_代码)

"(,)
的#13""(生成代码#10,库#14)
库#14"
整体结构:...
图形:...
点:...
物理量:...
将条目\"点\"复制为条目\"物理量\"
+[新建阅读窗口](,图形)
+[删除结构](,图形)

"(,)
的#15""(库#14,图形#16)
图形#16"\"\"\"
M模板:...

\"\"\"
+图形(_结构,_物体)->+[del](,+图形)...
->的(图形,M模板)...

->的(_结构,命名空间)...
->变量#a(,_物体)->的(命名空间,变量#a)...
->+[模板文本](M模板,+[临时文本])->+[.](+[模板文本],变量#a)...
->+[matlab](Matlab,)->+[code](+[matlab],+[临时文本])...
->[]{
    []:->的(_物体,x)->x->的(_物体,y)->y->+[o](+[matlab],x)->+[o](+[matlab],y),
    ->+的(_物体,+x)->+的(_物体,+y)->+[o](+[matlab],+x)->+[o](+[matlab],+y)
}


"(,)
的#17""(图形#16,M模板#18)
M模板#18"%{

%}


x=%变量_x;
y=%变量_y;

"(,)
的#19""(库#14,整体结构#20)
整体结构#20"\"\"\"
模板:...

\"\"\"
+整体结构(_结构,_代码)->+[del](,+整体结构)...
->的(整体结构,模板)...

->的(_结构,顺序)->的(_结构,初值)...
->+[M函数](,初值)->+[M函数](,顺序)
"(,)
的#21""(整体结构#20,模板#22)
模板#22"%{
+[M函数](,%[标题])
%}

%初值

%顺序

clf;
hold on
%画图
axis equal

"(,)
的#23""(库#14,物理量#24)
物理量#24"\"\"\"
M模板:...

\"\"\"
+物理量(_结构,_物体)->+[del](,+物理量)...
->的(物理量,M模板)...

->的(_结构,命名空间)...
->变量#a(,_物体)->的(命名空间,变量#a)...
->+[模板文本](M模板,+[临时文本])->+[.](+[模板文本],变量#a)...
->+[matlab](Matlab,_物体)->+[code](+[matlab],+[临时文本])


"(,)
的#25""(物理量#24,M模板#26)
M模板#26"%{

%}


ans=%变量;
"(,)
的#27""(库#14,点#28)
点#28"\"\"\"
M模板:...

\"\"\"
+点(_结构,_物体)->+[del](,+点)...
->的(点,M模板)...

->的(_结构,命名空间)...
->在(_物体,空间点)->空间点->变量#a(,空间点)->的(命名空间,变量#a)...
->+[模板文本](M模板,+[临时文本])->+[.](+[模板文本],变量#a)...
->+[matlab](Matlab,空间点)->+[code](+[matlab],+[临时文本])...
->[]{
    []:->在(_物体,空间点#2)->空间点#2->未知(,空间点#2)...
        ->+[o]\"pt_out\"(+[matlab],空间点#2),
    ->[]
}


"(,)
的#29""(点#28,M模板#30)
M模板#30"%{

%}


ans=[%变量_x,%变量_y];
pt_out=ans;
"(,)

## end
#701, 187:
"""
...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"更新约束关系"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)



## end
#703, 53555:
推导结构转描述文字#0"

召唤规则:...
降临规则:...



"(,)
的#1""(推导结构转描述文字#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"推导结构转描述文字\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->[]{
    []:->.\"方程联立\"(召唤星辰,)->+召唤代码2(_题目,_代码)->+的(操作,+召唤代码2),
    ->.\"求解方程\"(召唤星辰,)->+召唤代码3(_题目,_代码)->+的(操作,+召唤代码3),

    ->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)
}...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)
的#3""(推导结构转描述文字#0,降临规则#4)
降临规则#4"+[复制结构](,设置变量)

设置变量:...

召唤代码:...
召唤代码2:...
召唤代码3:...
将条目\"召唤代码2\"复制为条目\"召唤代码3\"
+[新建阅读窗口](,召唤代码3)

整理代码:...
+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#5""(降临规则#4,召唤代码2#6)
召唤代码2#6"\"\"\"
描述结构:...
生成代码:...
整体框架:...
+[新建阅读窗口](,整体框架)

\"\"\"
+召唤代码2(_题目,_代码)->+[del](,+召唤代码2)...
->的(召唤代码2,描述结构)->的(召唤代码2,生成代码)->的(召唤代码2,整体框架)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...
->[]{
    []:->的(_代码,入口)->入口=>的(入口,_节点)=>+[del](,的),
    ->+的(_代码,+入口)
}->的(_代码,入口#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)->入口([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...
->[]{
    []=>的(入口,_入口)->_入口=>+的(入口#0,_入口)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)->+[.](+[做],_代码)...
->+[做](求解,_代码)->+[code](+[做],整体框架)...
->+[.]\"题目\"(记忆,_题目)...
->+[del](,入口#0)


"(,)
的#7""(召唤代码2#6,整体框架#8)
整体框架#8"\"\"\"
P代码:...
P代码2:...

保存:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->的(_代码,入口)...
->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#9""(整体框架#8,P代码2#10)
P代码2#10"\"\"\"
记住\"Python\"
print(type_txt)
print(sent_n)

\"\"\"
n_list=['一','二','三','四','五','六','七','八','九','十']

if type_txt=='开头':
    sent_n+=1

if type_txt=='中间':
    ans='然后, '
elif type_txt=='结尾':
    if sent_type!=0:
        ans='\n最后, '
else:
    if sent_type==1:
        ans='首先, '
    elif sent_type==2:
        if sent_n==2:
            ans='一方面, '
        else:
            ans='\n另一方面, '
    elif sent_type==3:
        if sent_n==sent_type:
            ans='第一, '
        elif sent_n==sent_type-1:
            ans='\n第二, '
        else:
            ans='\n另外, '
    else:
        i=sent_type-sent_n
        if i>=10:
            ans='\n另外, '
        else:
            ans='\n第%s, '%n_list[i]



"(,)
的#11""(整体框架#8,P代码#12)
P代码#12"\"\"\"
记住\"Python\"

\"\"\"
if type_txt=='开头':
    sent_type+=1
"(,)
的#13""(整体框架#8,保存#14)
保存#14"\"\"\"
P代码:...
P代码2:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#15""(召唤代码2#6,生成代码#16)
生成代码#16"\"\"\"
描述结构:...
描述思考:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,描述思考)...
->的(生成代码,库)->的(库,节点模板)...

->.(+生成代码,_代码)->+[文本结构_插入尾部](_代码,+节点)...
    ->+节点\"%输入量(输入) %输出量(输出) %求解量(求解)\"...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)->[]{.(_操作,)}:
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)...
            =>.#0(_操作,_A)=>+[.]#0(+[做],_A)...
            =>.(.#0,_B)=>+[.](+[.]#0,_B),
        ->>[]
}...
->+[做](求解,+节点)->+[code](+[做],节点模板)...
    ->+匹配(+节点,求解)->+的(+节点,+匹配)...

->[]{
    []:->[==]\"完成\"(,求解),
    ->思考(求解,)->+[文本结构_插入尾部](_代码,+节点#2)...
        ->+[做](思考,+节点#2)->+[code](+[做],描述思考),
    ->[]
}...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.](+[做],_代码),
    ->[]


"(,)
的#17""(生成代码#16,库#18)
库#18"
求解量0:...
输入量0:...
将条目\"求解量0\"复制为条目\"输入量0\"

输出量0:...
将条目\"输入量0\"复制为条目\"输出量0\"
将'输出量0'的\"输入量\"替换为\"输出量\"

节点模板:...

"(,)
的#19""(库#18,节点模板#20)
节点模板#20"\"\"\"
模板::将%求解式调整为%求解量%输入量%输出量
模板2::根据%求解式计算%求解量%输出量
模板3::我们得到了%求解量

\"\"\"
+节点模板(_求解,_节点)->+[del](,+节点模板)...
->的(节点模板,模板)->的(节点模板,模板2)->的(节点模板,模板3)...

->插入(_节点,)->+[修改内容](模板,_节点)...
->[]{
    []:->的(插入,输入量)->输入量->+[修改内容]\"=f(%s)的形式\"(,输入量),
    ->+[文本结构_插入](_节点,+输入量)->+[修改内容](模板2,_节点)
}...
->[]{
    []:->的(插入,求解量)->求解量->+[修改内容]\"%s\"(求解量,求解量),
    ->+[文本结构_插入](_节点,+求解量)
}...
->[]{
    []:->的(插入,输出量)->输出量->+[修改内容]\", 并且代入到%s中\"(,输出量),
    ->+[文本结构_插入](_节点,+输出量)
}...

->[]{
    []:->的(插入,求解式)->求解式,
    ->+[修改内容](模板3,_节点)
}...

->[]{
    []:->[==]\"完成\"(,_求解)->+[增加内容]\"(已完成). \"(,_节点),
    ->+[增加内容]\". \"(,_节点)
}

"(,)
的#21""(节点模板#20,模板#22)
模板#22"将%求解式调整为%求解量%输入量%输出量"(,)
的#23""(节点模板#20,模板2#24)
模板2#24"根据%求解式计算%求解量%输出量"(,)
的#25""(节点模板#20,模板3#26)
模板3#26"我们得到了%求解量"(,)
的#27""(库#18,输入量0#28)
输入量0#28"\"\"\"
保存:...

\"\"\"

+输入量0(求解,节点)->+[del](,+输入量0)...

->+[文本结构_插入](节点,+输入量)...
    ->+顺序\", \"(+输入量,)->+的(+输入量,+顺序)...

=>.#0(+输入量0,_A)->_A=>+[标题](_A,)...
->+[文本结构_插入尾部](+输入量,+节点)->+[修改内容](+[标题],+节点)

"(,)
的#29""(输入量0#28,保存#30)
保存#30"\"\"\"
保存:...

\"\"\"

+输入量0(求解,节点)->+[del](,+输入量0)...

->+[文本结构_插入](节点,+输入量)...
    ->+顺序\", \"(+输入量,)->+的(+输入量,+顺序)...
->+主语0->+主语1->+主语2->[]{
    []=>.#0(+输入量0,_A)->_A=>[]:
        ->.#1(.#0,_B)->[]{.(.#0,)=>[is](.#1,.)}->[]{
            []:->.(+主语2,_A), ->+[.](+主语2,_A)},
        ->.#1(.#0,_B2)->[]{
            []:->.(+主语1,_B2), ->+[.](+主语1,_B2)},
        ->[]{[]:->.(+主语0,_A), ->+[.](+主语0,_A)}
}...

->[]{
    []=>.(+主语0,_A)->_A=>+[文本结构_插入尾部](+输入量,+节点)...
    ->+[标题](_A,)->+[修改内容](+[标题],+节点)
}...
->[]{
    []=>.(+主语1,_B)->_B=>+[文本结构_插入尾部](+输入量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_B,)->[m_text]([标题],+主体)...
        ->+顺序\"和\"(+性质,)->+的(+性质,+顺序)...

    =>.(.#0,_B)->.#0(+输入量0,_A)->_A->[]{[]=>.(+主语2,_A)}=>[标题](_A,)...
        ->+[文本结构_插入尾部](+性质,+节点#1)->[m_text]([标题],+节点#1)

}...
->[]{
    []=>.(+主语2,_A)->_A=>+[文本结构_插入尾部](+输入量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_A,)->[m_text]([标题],+性质)...
        ->+顺序\"和\"(+主体,)->+的(+性质,+顺序)...

    =>.#0(+输入量0,_A)->.(.#0,_B)=>[标题](_B,)...
        ->+[文本结构_插入尾部](+主体,+节点#1)->[m_text]([标题],+节点#1)

}...

->+[del](,+主语0)->+[del](,+主语1)->+[del](,+主语2)
"(,)
的#31""(库#18,输出量0#32)
输出量0#32"\"\"\"
P代码:...

\"\"\"

+输出量0(求解,节点)->+[del](,+输出量0)...
->的(输出量0,P代码)...

->+[文本结构_插入](节点,+输出量)...
    ->+顺序\", \"(+输出量,)->+的(+输出量,+顺序)...

=>.#0(+输出量0,)->.#1(.#0,_式子)=>+[文本结构_插入尾部](+输出量,+节点)...
    ->+[标题](_式子,)->+[python](Python,+节点)->+[code](+[python],P代码)...
    ->+[s]\"exp_txt\"(+[python],+[标题])

"(,)
的#33""(输出量0#32,P代码#34)
P代码#34"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#35""(库#18,求解量0#36)
求解量0#36"\"\"\"
P代码:...

\"\"\"

+求解量0(求解,节点)->+[del](,+求解量0)...
->的(求解量0,P代码)...

->+[文本结构_插入](节点,+求解量)...
->.#0(+求解量0,_A)->+[标题](_A,)->+[修改内容](+[标题],+求解量)...

->[]:
    ->.#1(.#0,_B)->+[文本结构_插入](节点,+求解式)...
        ->+[标题](_B,)->+[python](Python,+求解式)->+[code](+[python],P代码)...
        ->+[s]\"exp_txt\"(+[python],+[标题]),
    ->[]

"(,)
的#37""(求解量0#36,P代码#38)
P代码#38"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#39""(生成代码#16,描述结构#40)
描述结构#40"\"\"\"
保存:...
目标量:...
输入量:...
输出量:...
将条目\"输入量\"复制为条目\"输出量\"
+[新建阅读窗口](,输入量)

\"\"\"
+描述结构(求解,_节点)->+操作(+描述结构,)...

->+的(+操作,+求解量0)->求解(,_式0)...
    ->o(求解,_物理量)->+[code]([想],目标量)->+[.]([想],+求解量0)...
    ->[想](求解,_物理量)...

->+的(+操作,+输入量0)...
->[]{
    []=>.(求解,_式A)->_式A->求解#2(,_式A)->o(求解#2,_A)...
        =>+[code]([想]#1,输入量)->+[.]([想]#1,+输入量0)->[想]#1(求解,_A)
}...

->+的(+操作,+输出量0)...
->[]{
    []=>.(求解#2,_式0)->求解#2->o(求解#2,_B)->_B(,)...
        =>+[code]([想]#1,输出量)->+[.]([想]#1,+输出量0)->[想]#1(求解,_B)
}


"(,)
的#41""(描述结构#40,输入量#42)
输入量#42"\"\"\"
保存:...

\"\"\"
+输入量(求解,_物理量)->.(+输入量,输入量0)->的(操作,输入量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输入量0,_物理量)...
->[]{
    []:->的(表达式,_物理量)->表达式->的(_主体,表达式)->_主体->的(_题目,_主体)...
        ->[]{[]=>[is](_主体,_主体0)}->+[.](+[.]#0,_主体),

    ->[]
}


"(,)
的#43""(输入量#42,保存#44)
保存#44"\"\"\"

保存:...

\"\"\"
+输入量(求解,_物理量)->.(+输入量,输入量0)->的(操作,输入量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输入量0,_物理量)...
->_物理量(_A,_B)->[]{
    []:->_A->_B->+[.](+[.]#0,_A)->+[.](+[.]#0,_B),

    ->的(_主体,_物理量)->_主体{[]=>[is](_主体,_主体0)}->的(_题目,_主体)...
    ->[]{
        []{的(_主体1,_物理量)->_主体1->的(_题目,_主体1)=>[is](_主体1,_主体)}:
            =>的(_主体1,_物理量)->_主体1->的(_题目,_主体1)=>+[.](+[.]#0,_主体1),
            ->>+[.](+[.]#0,_主体)
        },

    ->在(_主体1,_物理量)->_主体1{[]=>[is](_主体1,_主体0)}->的(_题目,_主体1)...
        ->+[.](+[.]#0,_主体1),

    ->[]
}


"(,)
的#45""(描述结构#40,输出量#46)
输出量#46"\"\"\"
保存:...

\"\"\"
+输出量(求解,_物理量)->.(+输出量,输出量0)->的(操作,输出量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输出量0,_物理量)...
->[]{
    []:->的(表达式,_物理量)->表达式->的(_主体,表达式)->_主体->的(_题目,_主体)...
        ->[]{[]=>[is](_主体,_主体0)}->+[.](+[.]#0,_主体),

    ->[]
}


"(,)
的#47""(输出量#46,保存#48)
保存#48"\"\"\"
保存:...

\"\"\"
+输出量(求解,_物理量)->.(+输出量,输出量0)->的(操作,输出量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输出量0,_物理量)...
->[]{
    []:->的(表达式,_物理量)->表达式->的(_主体,表达式)->_主体->的(_题目,_主体)...
        ->[]{[]=>[is](_主体,_主体0)}->+[.](+[.]#0,_主体),

    ->[]
}


"(,)
的#49""(描述结构#40,目标量#50)
目标量#50"\"\"\"


\"\"\"
+目标量(求解,_物理量)->.(+目标量,求解量0)->的(操作,求解量0)...
->.\"题目\"(记忆,_题目)...

->+[.]#0(求解量0,_物理量)->[]{
    []:->的(表达式,_物理量)->表达式->的(_式子,表达式)->的(_题目,_式子)...
        ->+[.]\"主体\"(操作,_式子)->+[.](+[.]#0,_式子),
    ->[]
}


"(,)
的#51""(描述结构#40,保存#52)
保存#52"\"\"\"
保存:...
目标量:...
输入量:...
输出量:...
将条目\"输入量\"复制为条目\"输出量\"

\"\"\"
+描述结构(求解,_节点)->+操作(+描述结构,)...

->+的(+操作,+求解量0)...
    ->求解(,_物理量)->+[code]([想],目标量)->+[.]([想],+求解量0)...
    ->[想](求解,_物理量)...

->+的(+操作,+输入量0)...
->[]{
    []=>.(求解,_A)->_A=>+[code]([想]#1,输入量)->+[.]([想]#1,+输入量0)...
    ->[想]#1(求解,_A)
}...

->+的(+操作,+输出量0)...
->[]{
    []=>o(求解,_B)->_B->[]{[]=>[is](_B,_物理量)}...
        =>+[code]([想]#2,输出量)->+[.]([想]#2,+输出量0)->[想]#2(求解,_B)
}


"(,)
的#53""(生成代码#16,保存#54)
保存#54"\"\"\"
描述结构:...
库:...
...
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)
保存:

\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...

->+[文本结构_插入尾部](_代码,+节点)...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)...
        =>.#0(_操作,_A)=>[说](,.#0)=>.(.#0,)=>[说](,.)
}...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#55""(生成代码#16,描述思考#56)
描述思考#56"\"\"\"
模板:...

\"\"\"
+描述思考(思考,节点)->+[del](,+描述思考)...
->的(描述思考,模板)...

->思考(,_世界)->+[文本结构_插入]\"    \"(节点,+内容)...
    ->+[修改内容](模板,节点)...
->+[召唤星辰]\"推导结构转描述文字\"(_世界,+内容)...
    ->+[.]\"求解方程\"(+[召唤星辰],)->+[.]\"结构\"(+内容,思考)


"(,)
的#57""(描述思考#56,模板#58)
模板#58"
深入思考:
%内容
"(,)
的#59""(召唤代码2#6,描述结构#60)
描述结构#60"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#61""(描述结构#60,收集初值#62)
收集初值#62"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#63""(描述结构#60,收集顺序#64)
收集顺序#64"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#65""(收集顺序#64,整理流程2#66)
整理流程2#66"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#67""(整理流程2#66,入口顺序#68)
入口顺序#68"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]

"(,)
的#69""(收集顺序#64,整理流程#70)
整理流程#70"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#71""(收集顺序#64,保存#72)
保存#72"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#73""(描述结构#60,保存#74)
保存#74"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#75""(降临规则#4,召唤代码#76)
召唤代码#76"\"\"\"
描述结构:...
生成代码:...
整体框架:...
+[新建阅读窗口](,整体框架)

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)->的(召唤代码,生成代码)->的(召唤代码,整体框架)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...
->[]{
    []:->的(_代码,入口)->入口=>的(入口,_节点)=>+[del](,的),
    ->+的(_代码,+入口)
}->的(_代码,入口#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)->入口([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...
->[]{
    []=>的(入口,_入口)->_入口=>+的(入口#0,_入口)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)->+[.](+[做],_代码)...
->+[做](求解,_代码)->+[code](+[做],整体框架)...
->+[.]\"题目\"(记忆,_题目)...
->+[del](,入口#0)


"(,)
的#77""(召唤代码#76,整体框架#78)
整体框架#78"\"\"\"
P代码:...
P代码2:...

保存:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->的(_代码,入口)...
->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#79""(整体框架#78,P代码2#80)
P代码2#80"\"\"\"
记住\"Python\"
print(type_txt)
print(sent_n)

\"\"\"
n_list=['一','二','三','四','五','六','七','八','九','十']

if type_txt=='开头':
    sent_n+=1

if type_txt=='中间':
    ans='然后, '
elif type_txt=='结尾':
    if sent_type!=0:
        ans='\n最后, '
else:
    if sent_type==1:
        ans='首先, '
    elif sent_type==2:
        if sent_n==2:
            ans='一方面, '
        else:
            ans='\n另一方面, '
    elif sent_type==3:
        if sent_n==sent_type:
            ans='第一, '
        elif sent_n==sent_type-1:
            ans='\n第二, '
        else:
            ans='\n另外, '
    else:
        i=sent_type-sent_n
        if i>=10:
            ans='\n另外, '
        else:
            ans='\n第%s, '%n_list[i]



"(,)
的#81""(整体框架#78,P代码#82)
P代码#82"\"\"\"
记住\"Python\"

\"\"\"
if type_txt=='开头':
    sent_type+=1
"(,)
的#83""(整体框架#78,保存#84)
保存#84"\"\"\"
P代码:...
P代码2:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#85""(召唤代码#76,生成代码#86)
生成代码#86"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)->的(库,节点模板)...

->.(+生成代码,_代码)->+[文本结构_插入尾部](_代码,+节点)...
    ->+节点\"%输入量(输入) %输出量(输出) %求解量(求解)\"...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)->[]{.(_操作,)}:
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)...
            =>.#0(_操作,_A)=>+[.]#0(+[做],_A)...
            =>.(.#0,_B)=>+[.](+[.]#0,_B),
        ->>[]
}...
->+[做](求解,+节点)->+[code](+[做],节点模板)...
    ->+匹配(+节点,求解)->+的(+节点,+匹配)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.](+[做],_代码),
    ->[]


"(,)
的#87""(生成代码#86,库#88)
库#88"
求解量0:...
输入量0:...
将条目\"求解量0\"复制为条目\"输入量0\"

输出量0:...
将条目\"输入量0\"复制为条目\"输出量0\"
将'输出量0'的\"输入量\"替换为\"输出量\"

节点模板:...
"(,)
的#89""(库#88,节点模板#90)
节点模板#90"\"\"\"
模板::%输入量%求解量%输出量. 
+[临时文本]\"123\"->+[修改内容]\"12%s34\"(+[临时文本],+[消息窗口])

\"\"\"
+节点模板(_求解,_节点)->+[del](,+节点模板)...
->的(节点模板,模板)...

->插入(_节点,)->+[修改内容](模板,_节点)...
->[]{
    []:->的(插入,输入量)->输入量->+[修改内容]\"根据%s, \"(,输入量),
    ->+[文本结构_插入](_节点,+输入量)
}...
->[]{
    []:->的(插入,求解量)->求解量->+[修改内容]\"求解%s\"(求解量,求解量),
    ->+[文本结构_插入](_节点,+求解量)
}...
->[]{
    []:->的(插入,输出量)->输出量->+[修改内容]\", 同时, 也可以求得%s\"(,输出量),
    ->+[文本结构_插入](_节点,+输出量)
}



"(,)
的#91""(节点模板#90,模板#92)
模板#92"%输入量%求解量%输出量. "(,)
的#93""(库#88,输入量0#94)
输入量0#94"\"\"\"
模板1::%主体的%性质
模板2::%性质



\"\"\"

+输入量0(求解,节点)->+[del](,+输入量0)...
->的(输入量0,模板1)->的(输入量0,模板2)...

->+[文本结构_插入](节点,+输入量)...
    ->+顺序\", \"(+输入量,)->+的(+输入量,+顺序)...
->+主语0->+主语1->+主语2->[]{
    []=>.#0(+输入量0,_A)->_A=>[]:
        ->.#1(.#0,_B)->[]{.(.#0,)=>[is](.#1,.)}->[]{
            []:->.(+主语2,_A), ->+[.](+主语2,_A)},
        ->.#1(.#0,_B2)->[]{
            []:->.(+主语1,_B2), ->+[.](+主语1,_B2)},
        ->[]{[]:->.(+主语0,_A), ->+[.](+主语0,_A)}
}...

->[]{
    []=>.(+主语0,_A)->_A=>+[文本结构_插入尾部](+输入量,+节点)...
    ->+[标题](_A,)->+[修改内容](+[标题],+节点)
}...
->[]{
    []=>.(+主语1,_B)->_B=>+[文本结构_插入尾部](+输入量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_B,)->[m_text]([标题],+主体)...
        ->+顺序\"和\"(+性质,)->+的(+性质,+顺序)...

    =>.(.#0,_B)->.#0(+输入量0,_A)->_A->[]{[]=>.(+主语2,_A)}=>[标题](_A,)...
        ->+[文本结构_插入尾部](+性质,+节点#1)->[m_text]([标题],+节点#1)

}...
->[]{
    []=>.(+主语2,_A)->_A=>+[文本结构_插入尾部](+输入量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_A,)->[m_text]([标题],+性质)...
        ->+顺序\"和\"(+主体,)->+的(+性质,+顺序)...

    =>.#0(+输入量0,_A)->.(.#0,_B)=>[标题](_B,)...
        ->+[文本结构_插入尾部](+主体,+节点#1)->[m_text]([标题],+节点#1)

}...

->+[del](,+主语0)->+[del](,+主语1)->+[del](,+主语2)
"(,)
的#95""(输入量0#94,模板1#96)
模板1#96"%主体的%性质"(,)
的#97""(输入量0#94,模板2#98)
模板2#98"%性质"(,)
的#99""(库#88,输出量0#100)
输出量0#100"\"\"\"
模板1::%主体的%性质
模板2::%性质

\"\"\"

+输出量0(求解,节点)->+[del](,+输出量0)...
->的(输出量0,模板1)->的(输出量0,模板2)...

->+[文本结构_插入](节点,+输出量)...
    ->+顺序\", \"(+输出量,)->+的(+输出量,+顺序)...
->+主语0->+主语1->+主语2->[]{
    []=>.#0(+输出量0,_A)->_A=>[]:
        ->.#1(.#0,_B)->[]{.(.#0,)=>[is](.#1,.)}->[]{
            []:->.(+主语2,_A), ->+[.](+主语2,_A)},
        ->.#1(.#0,_B2)->[]{
            []:->.(+主语1,_B2), ->+[.](+主语1,_B2)},
        ->[]{[]:->.(+主语0,_A), ->+[.](+主语0,_A)}
}...

->[]{
    []=>.(+主语0,_A)->_A=>+[文本结构_插入尾部](+输出量,+节点)...
    ->+[标题](_A,)->+[修改内容](+[标题],+节点)
}...
->[]{
    []=>.(+主语1,_B)->_B=>+[文本结构_插入尾部](+输出量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_B,)->[m_text]([标题],+主体)...

    =>.(.#0,_B)->.#0(+输出量0,_A)->_A->[]{[]=>.(+主语2,_A)}=>[标题](_A,)...
        ->+[文本结构_插入尾部](+性质,+节点#1)->[m_text]([标题],+节点#1)

}...
->[]{
    []=>.(+主语2,_A)->_A=>+[文本结构_插入尾部](+输出量,+节点)...
        ->+节点\"%主体的%性质\"...
        ->+[文本结构_插入](+节点,+主体)->+[文本结构_插入](+节点,+性质)...
        ->[标题](_A,)->[m_text]([标题],+性质)...

    =>.#0(+输出量0,_A)->.(.#0,_B)=>[标题](_B,)...
        ->+[文本结构_插入尾部](+主体,+节点#1)->[m_text]([标题],+节点#1)

}...

->+[del](,+主语0)->+[del](,+主语1)->+[del](,+主语2)
"(,)
的#101""(输出量0#100,模板2#102)
模板2#102"%性质"(,)
的#103""(输出量0#100,模板1#104)
模板1#104"%主体的%性质"(,)
的#105""(库#88,求解量0#106)
求解量0#106"\"\"\"
模板1::%主体的%性质
模板2::%性质

\"\"\"

+求解量0(求解,节点)->+[del](,+求解量0)...
->的(求解量0,模板1)->的(求解量0,模板2)...

->+[文本结构_插入](节点,+求解量)->+[模板文本](,+求解量)...
->.#0(+求解量0,_A)...
->[标题](_A,)->+[.]\"性质\"(+[模板文本],+[临时文本]#1)...
    ->[m_text]([标题],+[临时文本]#1)...

->[]:
->.(.#0,_B)->[标题](_B,)->+[.]\"主体\"(+[模板文本],+[临时文本]#2)...
    ->[m_text]([标题],+[临时文本]#2)->+[code](+[模板文本],模板1),

->+[code](+[模板文本],模板2)

"(,)
的#107""(求解量0#106,模板2#108)
模板2#108"%性质"(,)
的#109""(求解量0#106,模板1#110)
模板1#110"%主体的%性质"(,)
的#111""(生成代码#86,描述结构#112)
描述结构#112"\"\"\"
保存:...
目标量:...
输入量:...
输出量:...
将条目\"输入量\"复制为条目\"输出量\"

\"\"\"
+描述结构(求解,_节点)->+操作(+描述结构,)...

->+的(+操作,+求解量0)...
    ->求解(,_物理量)->+[code]([想],目标量)->+[.]([想],+求解量0)...
    ->[想](求解,_物理量)...

->+的(+操作,+输入量0)...
->[]{
    []=>.(求解,_A)->_A=>+[code]([想]#1,输入量)->+[.]([想]#1,+输入量0)...
    ->[想]#1(求解,_A)
}...

->+的(+操作,+输出量0)...
->[]{
    []=>o(求解,_B)->_B->[]{[]=>[is](_B,_物理量)}...
        =>+[code]([想]#2,输出量)->+[.]([想]#2,+输出量0)->[想]#2(求解,_B)
}


"(,)
的#113""(描述结构#112,输入量#114)
输入量#114"\"\"\"

    ->的(_主体,_物理量)->_主体{[]=>[is](_主体,_主体0)}->的(_题目,_主体)...
        ->+[.](+[.]#0,_主体),

\"\"\"
+输入量(求解,_物理量)->.(+输入量,输入量0)->的(操作,输入量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输入量0,_物理量)...
->_物理量(_A,_B)->[]{
    []:->_A->_B->+[.](+[.]#0,_A)->+[.](+[.]#0,_B),
    ->的(_主体,_物理量)->_主体{[]=>[is](_主体,_主体0)}->的(_题目,_主体)...
    ->[]{
        []{的(_主体1,_物理量)->_主体1->的(_题目,_主体1)=>[is](_主体1,_主体)}:
            =>的(_主体1,_物理量)->_主体1->的(_题目,_主体1)=>+[.](+[.]#0,_主体1),
            ->>+[.](+[.]#0,_主体)
        },
    ->在(_主体1,_物理量)->_主体1{[]=>[is](_主体1,_主体0)}->的(_题目,_主体1)...
        ->+[.](+[.]#0,_主体1),
    ->[]
}


"(,)
的#115""(描述结构#112,输出量#116)
输出量#116"\"\"\"


\"\"\"
+输出量(求解,_物理量)->.(+输出量,输出量0)->的(操作,输出量0)...
->.\"题目\"(记忆,_题目)...

->.\"主体\"(操作,_主体0)->+[.]#0(输出量0,_物理量)...
->_物理量(_A,_B)->[]{
    []:->_A->_B->+[.](+[.]#0,_A)->+[.](+[.]#0,_B),
    ->的(_主体,_物理量)->_主体{[]=>[is](_主体,_主体0)}->的(_题目,_主体)...
        ->+[.](+[.]#0,_主体),
    ->在(_主体1,_物理量)->_主体1{[]=>[is](_主体1,_主体0)}->的(_题目,_主体1)...
        ->+[.](+[.]#0,_主体1),
    ->[]
}


"(,)
的#117""(描述结构#112,目标量#118)
目标量#118"\"\"\"


\"\"\"
+目标量(求解,_物理量)->.(+目标量,求解量0)->的(操作,求解量0)...
->.\"题目\"(记忆,_题目)...

->+[.]#0(求解量0,_物理量)->[]{
    []:->的(_主体,_物理量)->_主体->的(_题目,_主体)->+[.]\"主体\"(操作,_主体)...
        ->+[.](+[.]#0,_主体),
    ->在(_主体1,_物理量)->_主体1->的(_题目,_主体1)->+[.]\"主体\"(操作,_主体1)...
        ->+[.](+[.]#0,_主体1),
    ->[]
}


"(,)
的#119""(描述结构#112,保存#120)
保存#120"\"\"\"
保存:...

\"\"\"
+描述结构(求解,_节点)->+操作(+描述结构,)...

->[]{
    []:->[]{[]=>然后(求解,)}->+结尾(求解,_节点)->+的(+操作,+结尾),
    ->[]{[]=>然后(,求解)}->+开头(求解,_节点)->+的(+操作,+开头),
    ->+中间(求解,_节点)->+的(+操作,+中间)
}


"(,)
的#121""(生成代码#86,保存#122)
保存#122"\"\"\"
描述结构:...
库:...
...
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)
保存:

\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...

->+[文本结构_插入尾部](_代码,+节点)...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)...
        =>.#0(_操作,_A)=>[说](,.#0)=>.(.#0,)=>[说](,.)
}...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#123""(召唤代码#76,描述结构#124)
描述结构#124"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#125""(描述结构#124,收集初值#126)
收集初值#126"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#127""(描述结构#124,收集顺序#128)
收集顺序#128"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#129""(收集顺序#128,整理流程2#130)
整理流程2#130"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#131""(整理流程2#130,入口顺序#132)
入口顺序#132"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]

"(,)
的#133""(收集顺序#128,整理流程#134)
整理流程#134"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#135""(收集顺序#128,保存#136)
保存#136"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#137""(描述结构#124,保存#138)
保存#138"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#139""(降临规则#4,整理代码#140)
整理代码#140"\"\"\"
M模板:...
M模板2:...
M模板3:...
M模板4:...

\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->+[修改内容](+[临时文本],_代码)...
->+[结构转文本](_代码,_代码)->+[删除结构](,_代码)

"(,)
的#141""(整理代码#140,M模板#142)
M模板#142"%{
+[M函数](,%[标题])
%}

%初值

%顺序

ans=%目标;
disp(sprintf('%目标: %.3e',ans));

%{
+[M函数](,%[标题])
%}"(,)
的#143""(整理代码#140,M模板2#144)
M模板2#144"%{
+[M函数](,%[标题])
%}

%初值

%顺序

f=%目标;
t=linspace(-1,1,10000)*200e-15;
plot(t/1e-15,f(t),t/1e-15,abs(f(t)));
xlabel('Delay time [fs]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#145""(整理代码#140,M模板3#146)
M模板3#146"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
lm=linspace(500,1000,2000)*1e-9;
plot(lm/1e-9,S(lm));
xlabel('Lambda [nm]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#147""(整理代码#140,M模板4#148)
M模板4#148"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
E=linspace(500,10000,2000)*1e6*e;
plot(E/1e9/e,S(E));
xlabel('Energy [GeV]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#149""(降临规则#4,设置变量#150)
设置变量#150"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#151""(设置变量#150,描述结构#152)
描述结构#152"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#153""(描述结构#152,P代码#154)
P代码#154"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距离\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#155""(降临规则#4,召唤代码3#156)
召唤代码3#156"\"\"\"
描述结构:...
生成代码:...
整体框架:...
+[新建阅读窗口](,整体框架)

\"\"\"
+召唤代码3(_题目,_代码)->+[del](,+召唤代码3)...
->的(召唤代码3,描述结构)->的(召唤代码3,生成代码)->的(召唤代码3,整体框架)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...
->[]{
    []:->的(_代码,入口)->入口=>的(入口,_节点)=>+[del](,的),
    ->+的(_代码,+入口)
}->的(_代码,入口#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)->入口([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...
->[]{
    []=>的(入口,_入口)->_入口=>+的(入口#0,_入口)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)->+[.](+[做],_代码)...
->+[做](求解,_代码)->+[code](+[做],整体框架)...
->+[.]\"题目\"(记忆,_题目)...
->+[del](,入口#0)


"(,)
的#157""(召唤代码3#156,描述结构#158)
描述结构#158"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#159""(描述结构#158,保存#160)
保存#160"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#161""(描述结构#158,收集顺序#162)
收集顺序#162"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#163""(收集顺序#162,保存#164)
保存#164"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#165""(收集顺序#162,整理流程#166)
整理流程#166"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#167""(收集顺序#162,整理流程2#168)
整理流程2#168"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#169""(整理流程2#168,入口顺序#170)
入口顺序#170"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]

"(,)
的#171""(描述结构#158,收集初值#172)
收集初值#172"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#173""(召唤代码3#156,生成代码#174)
生成代码#174"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)->的(库,节点模板)...

->.(+生成代码,_代码)->+[文本结构_插入尾部](_代码,+节点)...
    ->+节点\"%输入量(输入) %输出量(输出) %求解量(求解)\"...

->[]{
    []:->调用(求解,)->的(库,_节点)->_节点->[标题](_节点,)->[==]([标题],调用)...
        ->+[做](求解,+节点)->+[code](+[做],_节点),
    ->[]
}...
->+[做](求解,+节点)->+[code](+[做],节点模板)...
    ->+匹配(+节点,求解)->+的(+节点,+匹配)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.](+[做],_代码),
    ->[]


"(,)
的#175""(生成代码#174,保存#176)
保存#176"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)->的(库,节点模板)...

->.(+生成代码,_代码)->+[文本结构_插入尾部](_代码,+节点)...
    ->+节点\"%输入量(输入) %输出量(输出) %求解量(求解)\"...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)->[]{.(_操作,)}:
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)...
            =>.#0(_操作,_A)=>+[.]#0(+[做],_A)...
            =>.(.#0,_B)=>+[.](+[.]#0,_B),
        ->>[]
}...
->+[做](求解,+节点)->+[code](+[做],节点模板)...
    ->+匹配(+节点,求解)->+的(+节点,+匹配)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.](+[做],_代码),
    ->[]


"(,)
的#177""(生成代码#174,描述结构#178)
描述结构#178"\"\"\"
保存:...

\"\"\"
+描述结构(求解,_节点)->+操作(+描述结构,)...

->调用(求解,)->[]{
[]:->[==]\"\"(,调用)
}


"(,)
的#179""(生成代码#174,库#180)
库#180"

消除分母:...
乘以分母:...
消除项:...
将条目\"消除分母\"复制为条目\"消除项\"

平方:...
拆括号:...
移动到:...
将条目\"平方\"复制为条目\"移动到\"

代入:...

除以:...
乘以:...
将条目\"乘以分母\"复制为条目\"乘以\"


代入定义:...
矩阵乘法:...
矩阵乘以系数:...
矩阵除以系数:...
矩阵加减:...
矩阵拆括号:...
矩阵求逆:...
将条目\"矩阵求逆\"复制为条目\"矢量平方\"

化简x项:...
拆括号:...
整理x系数:...
减去:...
将条目\"化简x项\"复制为条目\"通分收集分母\"

通分收集分母:...
通分:...
将条目\"通分收集分母\"复制为条目\"通分\"


解一元二次方程:...
解线性方程:...
将条目\"解一元二次方程\"复制为条目\"解线性方程\"


矢量平方:...
计算模:...
将条目\"矢量平方\"复制为条目\"计算模\"

解方程:...
思考下一步:...
将条目\"解方程\"复制为条目\"思考下一步\"

节点模板:...





"(,)
的#181""(库#180,代入#182)
代入#182"\"\"\"
模板::将 %式子1 代入到 %式子2 的位置. 

\"\"\"
+代入(求解,_节点)->+[del](,+代入)...
->的(代入,模板)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+式子2)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(分式,分子)->分式->分子(,_分子)...
->+[和式](_分子,+式子1)->+[分式](分式,+式子2)


"(,)
的#183""(代入#182,模板#184)
模板#184"将 %式子1 代入到 %式子2 的位置. "(,)
的#185""(库#180,平方#186)
平方#186"\"\"\"
模板::计算 %表达式 (平方运算). 

\"\"\"
+平方(求解,_节点)->+[del](,+平方)...
->的(平方,模板)...

->+[文本结构_插入](_节点,+表达式)->+[修改内容](模板,_节点)...

->求解(,_项)->_项(,)...
->+[修改内容]\"表达式\"(,记忆)->+[乘式2](_项,+表达式)
"(,)
的#187""(平方#186,模板#188)
模板#188"计算 %表达式 (平方运算). "(,)
的#189""(库#180,移动到#190)
移动到#190"\"\"\"
模板::将项 %式子1 移动到 %表达式 的左边. 

\"\"\"
+移动到(求解,_节点)->+[del](,+移动到)...
->的(移动到,模板)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+表达式)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(_项1,_项2)->_项1->_项2(,)...
->+[乘式](_项1,+式子1)->+[等式](_项2,+表达式)


"(,)
的#191""(移动到#190,模板#192)
模板#192"将项 %式子1 移动到 %表达式 的左边. "(,)
的#193""(库#180,消除项#194)
消除项#194"\"\"\"
模板::消除 %表达式 . 

\"\"\"
+消除项(求解,_节点)->+[del](,+消除项)...
->的(消除项,模板)...

->+[文本结构_插入](_节点,+表达式)->+[修改内容](模板,_节点)...

->求解(,_项)->_项(,)...
->+[修改内容]\"表达式\"(,记忆)->+[项](_项,+表达式)
"(,)
的#195""(消除项#194,模板#196)
模板#196"消除 %表达式 . "(,)
的#197""(库#180,乘以分母#198)
乘以分母#198"\"\"\"
模板::在%式子的两边乘以分母(%表达式). 
P代码:...

\"\"\"
+乘以分母(求解,_节点)->+[del](,+乘以分母)...
->的(乘以分母,模板)->的(乘以分母,P代码)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+表达式)->+[文本结构_插入](_节点,+式子)...

->求解(分母,_式子)->_式子->+[标题](_式子,)->分母(,_分母)...
->+[修改内容]\"表达式\"(,记忆)->+[和式](_分母,+表达式)...
->+[python](Python,+式子)->+[code](+[python],P代码)...
->+[s]\"exp_txt\"(+[python],+[标题])

"(,)
的#199""(乘以分母#198,模板#200)
模板#200"在%式子的两边乘以分母(%表达式). "(,)
的#201""(乘以分母#198,P代码#202)
P代码#202"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#203""(库#180,除以#204)
除以#204"\"\"\"
模板::将 %式子2 除以 %式子1 . 

\"\"\"
+除以(求解,_节点)->+[del](,+除以)...
->的(除以,模板)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+式子2)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(分子,分母)->分子(,_分子)->分母(,_分母)...
->+[和式](_分母,+式子1)->+[和式](_分子,+式子2)


"(,)
的#205""(除以#204,模板#206)
模板#206"将 %式子2 除以 %式子1 . "(,)
的#207""(库#180,消除分母#208)
消除分母#208"\"\"\"
模板::消除分式(%表达式)的分母. 

\"\"\"
+消除分母(求解,_节点)->+[del](,+消除分母)...
->的(消除分母,模板)...

->+[文本结构_插入](_节点,+表达式)->+[修改内容](模板,_节点)...

->求解(分式,分母)->分式->分母(,)...
->+[修改内容]\"表达式\"(,记忆)->+[分式](分式,+表达式)
"(,)
的#209""(消除分母#208,模板#210)
模板#210"消除分式(%表达式)的分母. "(,)
的#211""(库#180,乘以#212)
乘以#212"\"\"\"
模板::在%式子的两边乘以 %表达式 . 
P代码:...

\"\"\"
+乘以(求解,_节点)->+[del](,+乘以)...
->的(乘以,模板)->的(乘以,P代码)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+表达式)->+[文本结构_插入](_节点,+式子)...

->求解(_项,_式子)->_项->_式子->+[标题](_式子,)...
->+[修改内容]\"表达式\"(,记忆)->+[项](_项,+表达式)...
->+[python](Python,+式子)->+[code](+[python],P代码)...
->+[s]\"exp_txt\"(+[python],+[标题])

"(,)
的#213""(乘以#212,P代码#214)
P代码#214"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#215""(乘以#212,模板#216)
模板#216"在%式子的两边乘以 %表达式 . "(,)
的#217""(库#180,矩阵除以系数#218)
矩阵除以系数#218"\"\"\"
模板::%BB 除以 系数%A. 其中 %BB 是%式子

\"\"\"
+矩阵除以系数(求解,_节点)->+[del](,+矩阵除以系数)...
->的(矩阵除以系数,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+A)->+[文本结构_插入](_节点,+式子)...
    ->+[文本结构_插入](_节点,+乘法)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,/)->/(_A,_B)->_A->_B(,)...
->+[项](_A,+式子)->+[项](_B,+A)...

->+[.]\"B\"(+[模板文本],+[临时文本]#B)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#B),
    ->[m_text]\"矩阵\"(,+[临时文本]#B)
}

"(,)
的#219""(矩阵除以系数#218,模板#220)
模板#220"%BB 除以 系数%A. 其中 %BB 是%式子"(,)
的#221""(库#180,节点模板#222)
节点模板#222"\"\"\"


\"\"\"
+节点模板(_求解,_节点)->+[del](,+节点模板)

"(,)
的#223""(库#180,思考下一步#224)
思考下一步#224"\"\"\"
模板::将 %式子1 记作为 %式子2, 并思考下一步. 
模板2::将 %式子1 记作为 %式子2, 并思考下一步(%步骤). 
P代码:...

\"\"\"
+思考下一步(求解,_节点)->+[del](,+思考下一步)...
->的(思考下一步,模板)->的(思考下一步,模板2)->的(思考下一步,P代码)...

->+[模板文本](,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+式子2)...

->求解(,_式子)->_式子->+[标题](_式子,)...
->+[python](Python,+式子1)->+[code](+[python],P代码)...
->+[s]\"exp_txt\"(+[python],+[标题])->+[o]\"next_txt\"(+[python],+式子2)...

->[]{
    []:->o(求解,)->+[code](+[模板文本],模板2)->+[.]\"步骤\"(+[模板文本],o),
    ->+[code](+[模板文本],模板)
}

"(,)
的#225""(思考下一步#224,模板#226)
模板#226"将 %式子1 记作为 %式子2, 并思考下一步. "(,)
的#227""(思考下一步#224,P代码#228)
P代码#228"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    n=exp_txt[1:-2]
else:
    n=exp_txt
ans=\"式(%s)\"%(n)
next_txt=\"式(%s)\"%(int(n)+1)

"(,)
的#229""(思考下一步#224,模板2#230)
模板2#230"将 %式子1 记作为 %式子2, 并思考下一步(%步骤). "(,)
的#231""(库#180,解方程#232)
解方程#232"\"\"\"
模板::我们以%变量为变量求解了%式子. 
P代码:...

\"\"\"
+解方程(求解,_节点)->+[del](,+解方程)...
->的(解方程,模板)->的(解方程,P代码)...

->+[修改内容](模板,_节点)...
->+[文本结构_插入](_节点,+变量)->+[文本结构_插入](_节点,+式子)...

->求解(,_式子)->_式子->+[标题](_式子,)...
->+[修改内容](求解,+变量)...
->+[python](Python,+式子)->+[code](+[python],P代码)...
->+[s]\"exp_txt\"(+[python],+[标题])

"(,)
的#233""(解方程#232,P代码#234)
P代码#234"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#235""(解方程#232,模板#236)
模板#236"我们以%变量为变量求解了%式子. "(,)
的#237""(库#180,代入定义#238)
代入定义#238"\"\"\"
模板::将 %式子0 代入 %式子1. 
模板1::将 单位矩阵 代入 %式子1. 
模板2::询问用户 %式子1 的定义. 
P代码:...

\"\"\"
+代入定义(求解,_节点)->+[del](,+代入定义)...
->的(代入定义,模板)->的(代入定义,模板1)->的(代入定义,模板2)...
->的(代入定义,P代码)...

->+[模板文本](,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(_式子0,_矩阵)->_矩阵->+[项](_矩阵,+式子1)->[]:
    ->_式子0->+[标题](_式子0,)->+[文本结构_插入](_节点,+式子0)...
        ->+[python](Python,+式子0)->+[code](+[python],P代码)...
        ->+[s]\"exp_txt\"(+[python],+[标题])->+[code](+[模板文本],模板),

    ->[==]\"单位矩阵\"(,求解)->+[code](+[模板文本],模板1),
    ->+[code](+[模板文本],模板2)



"(,)
的#239""(代入定义#238,模板1#240)
模板1#240"将 单位矩阵 代入 %式子1. "(,)
的#241""(代入定义#238,模板2#242)
模板2#242"询问用户 %式子1 的定义. "(,)
的#243""(代入定义#238,P代码#244)
P代码#244"\"\"\"
记住\"Python\"

\"\"\"

if len(exp_txt)>2 and exp_txt[0]=='[' and exp_txt[-2:]=='].':
    ans=exp_txt[1:-2]
else:
    ans=exp_txt
ans=\"式(%s)\"%(ans)

"(,)
的#245""(代入定义#238,模板#246)
模板#246"将 %式子0 代入 %式子1. "(,)
的#247""(库#180,矩阵加减#248)
矩阵加减#248"\"\"\"
模板::%AA %加减 %BB. 其中 %AA 是%式子1, %BB 是 %式子2. 

\"\"\"
+矩阵加减(求解,_节点)->+[del](,+矩阵加减)...
->的(矩阵加减,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+式子2)...
    ->+[文本结构_插入](_节点,+加减)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,_加减)->_加减(_A,_B)->_A->_B(,)...
->+[项](_A,+式子1)->+[项](_B,+式子2)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}...
->+[.]\"B\"(+[模板文本],+[临时文本]#B)->[]{
    []:->[==]\"\vec{\"(,_B)->[m_text]\"矢量\"(,+[临时文本]#B),
    ->[m_text]\"矩阵\"(,+[临时文本]#B)
}...

->[]:
->[is](_加减,+)->+->+[修改内容]\"加上\"(,+加减),
->+[修改内容]\"减去\"(,+加减)


"(,)
的#249""(矩阵加减#248,模板#250)
模板#250"%AA %加减 %BB. 其中 %AA 是%式子1, %BB 是 %式子2. "(,)
的#251""(库#180,矩阵乘以系数#252)
矩阵乘以系数#252"\"\"\"
模板::系数%A 乘以 %BB. 其中 %BB 是%式子

\"\"\"
+矩阵乘以系数(求解,_节点)->+[del](,+矩阵乘以系数)...
->的(矩阵乘以系数,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+A)->+[文本结构_插入](_节点,+式子)...
    ->+[文本结构_插入](_节点,+乘法)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(_C,*)->_C->*(_A,_B)->_A->_B(,)...
->+A->+式子->[]{
    []:->[is](_A,_C)->+[项](_B,+式子)->+[项](_A,+A)->+[.]\"矩阵\"(+矩阵乘以系数,_B),
    ->+[项](_B,+A)->+[项](_A,+式子)->+[.]\"矩阵\"(+矩阵乘以系数,_A)
}...

->.\"矩阵\"(+矩阵乘以系数,_A1)...
->+[.]\"B\"(+[模板文本],+[临时文本]#B)->[]{
    []:->[==]\"\vec{\"(,_A1)->[m_text]\"矢量\"(,+[临时文本]#B),
    ->[m_text]\"矩阵\"(,+[临时文本]#B)
}

"(,)
的#253""(矩阵乘以系数#252,模板#254)
模板#254"系数%A 乘以 %BB. 其中 %BB 是%式子"(,)
的#255""(库#180,计算模#256)
计算模#256"\"\"\"
模板::计算 %AA 的模. 其中 %AA 是%式子1. 

\"\"\"
+计算模(求解,_节点)->+[del](,+计算模)...
->的(计算模,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,括号)->的(括号,_A)...
->+[项](_A,+式子1)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}


"(,)
的#257""(计算模#256,模板#258)
模板#258"计算 %AA 的模. 其中 %AA 是%式子1. "(,)
的#259""(库#180,矩阵乘法#260)
矩阵乘法#260"\"\"\"
模板::%AA %乘法 %BB. 其中 %AA 是%式子1, %BB 是 %式子2. 

\"\"\"
+矩阵乘法(求解,_节点)->+[del](,+矩阵乘法)...
->的(矩阵乘法,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+式子2)...
    ->+[文本结构_插入](_节点,+乘法)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,*)->*(_A,_B)->_A->_B(,)...
->+[项](_A,+式子1)->+[项](_B,+式子2)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}...
->+[.]\"B\"(+[模板文本],+[临时文本]#B)->[]{
    []:->[==]\"\vec{\"(,_B)->[m_text]\"矢量\"(,+[临时文本]#B),
    ->[m_text]\"矩阵\"(,+[临时文本]#B)
}...

->+乘法:
    ->[==]\"\cdot \"(,*)->+[修改内容]\"点乘\"(,+乘法),
    ->[==]\"\times \"(,*)->+[修改内容]\"叉乘\"(,+乘法),
    ->+[修改内容]\"乘以\"(,+乘法)


"(,)
的#261""(矩阵乘法#260,模板#262)
模板#262"%AA %乘法 %BB. 其中 %AA 是%式子1, %BB 是 %式子2. "(,)
的#263""(库#180,矩阵拆括号#264)
矩阵拆括号#264"\"\"\"
模板::拆掉 %AA 外面的括号. 其中 %AA 是%式子1. 

\"\"\"
+矩阵拆括号(求解,_节点)->+[del](,+矩阵拆括号)...
->的(矩阵拆括号,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,括号)->的(括号,_A)->_A(,)...
->+[项](_A,+式子1)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}


"(,)
的#265""(矩阵拆括号#264,模板#266)
模板#266"拆掉 %AA 外面的括号. 其中 %AA 是%式子1. "(,)
的#267""(库#180,拆括号#268)
拆括号#268"\"\"\"
模板::展开 %式子1 的括号: %括号. 
模板2::展开 %式子1 的括号(平方运算): %括号. 
->+[文本结构_插入尾部]\", \"(+括号,)

\"\"\"
+拆括号(求解,_节点)->+[del](,+拆括号)...
->的(拆括号,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+括号)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[乘式](_A,+式子1)...
->[]{
    []=>.(求解,_括号)->_括号=>+[乘式2](_括号,+节点)...
        ->+[文本结构_插入尾部]\", \"(+括号,+节点):
            ->^(_括号,2)->2->+[增加内容]\"(平方运算)\"(,+节点),
            ->[]
}


"(,)
的#269""(拆括号#268,模板#270)
模板#270"展开 %式子1 的括号: %括号. "(,)
的#271""(拆括号#268,模板2#272)
模板2#272"展开 %式子1 的括号(平方运算): %括号. "(,)
的#273""(库#180,矢量平方#274)
矢量平方#274"\"\"\"
模板::计算 %AA 的平方. 其中 %AA 是%式子1. 

\"\"\"
+矢量平方(求解,_节点)->+[del](,+矢量平方)...
->的(矢量平方,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,^)->^(_A,)->_A(,)...
->+[项](_A,+式子1)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}


"(,)
的#275""(矢量平方#274,模板#276)
模板#276"计算 %AA 的平方. 其中 %AA 是%式子1. "(,)
的#277""(库#180,矩阵求逆#278)
矩阵求逆#278"\"\"\"
模板::计算 %AA 的逆矩阵. 其中 %AA 是%式子1. 

\"\"\"
+矩阵求逆(求解,_节点)->+[del](,+矩阵求逆)...
->的(矩阵求逆,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[修改内容]\"表达式\"(,记忆)...

->求解(,^)->^(_A,)->_A(,)...
->+[项](_A,+式子1)...

->+[.]\"A\"(+[模板文本],+[临时文本]#A)->[]{
    []:->[==]\"\vec{\"(,_A)->[m_text]\"矢量\"(,+[临时文本]#A),
    ->[m_text]\"矩阵\"(,+[临时文本]#A)
}


"(,)
的#279""(矩阵求逆#278,模板#280)
模板#280"计算 %AA 的逆矩阵. 其中 %AA 是%式子1. "(,)
的#281""(库#180,整理x系数#282)
整理x系数#282"\"\"\"
模板::合并 %式子1 中所有 %变量 项的系数. 

\"\"\"
+整理x系数(求解,_节点)->+[del](,+整理x系数)...
->的(整理x系数,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[.]\"变量\"(+[模板文本],求解)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[和式](_A,+式子1)



"(,)
的#283""(整理x系数#282,模板#284)
模板#284"合并 %式子1 中所有 %变量 项的系数. "(,)
的#285""(库#180,解线性方程#286)
解线性方程#286"\"\"\"
模板::用公式 %变量=-\frac{b}{a} 求解线性方程. 

\"\"\"
+解线性方程(求解,_节点)->+[del](,+解线性方程)...
->的(解线性方程,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[.]\"变量\"(+[模板文本],求解)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[乘式](_A,+式子1)



"(,)
的#287""(解线性方程#286,模板#288)
模板#288"用公式 %变量=-\frac{b}{a} 求解线性方程. "(,)
的#289""(库#180,减去#290)
减去#290"\"\"\"
模板:将等式左边的 A 减去右边的 B...

\"\"\"
+减去(求解,_节点)->+[del](,+减去)...
->的(减去,模板)...

->+[模板文本](模板,_节点)...
    ->+[文本结构_插入](_节点,+式子2)->+[文本结构_插入](_节点,+式子1)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(_B,_A)->_B->_A->+[和式](_B,+式子2)->+[和式](_A,+式子1)



"(,)
的#291""(减去#290,模板#292)
模板#292"将等式左边的 B 减去右边的 A. 其中, 
A=%式子2
B=%式子1
"(,)
的#293""(库#180,解一元二次方程#294)
解一元二次方程#294"\"\"\"
模板::将乘式 %式子1 恒等变换为 A*%变量^n 的形式. 
模板::用求根公式 %变量=\frac{-b+-\sqrt{b^2-4*a*c}}{2*a} 求解一元二次方程. 

\"\"\"
+解一元二次方程(求解,_节点)->+[del](,+解一元二次方程)...
->的(解一元二次方程,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[.]\"变量\"(+[模板文本],求解)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[乘式](_A,+式子1)



"(,)
的#295""(解一元二次方程#294,模板#296)
模板#296"用求根公式 %变量=\frac{-b+-\sqrt{b^2-4*a*c}}{2*a} 求解一元二次方程. "(,)
的#297""(库#180,通分#298)
通分#298"\"\"\"
模板::用上述的分母对整个表达式做通分. 

\"\"\"
+通分(求解,_节点)->+[del](,+通分)...
->的(通分,模板)...

->+[模板文本](模板,_节点)


"(,)
的#299""(通分#298,模板#300)
模板#300"用上述的分母对整个表达式做通分. "(,)
的#301""(库#180,化简x项#302)
化简x项#302"\"\"\"
模板::将乘式 %式子1 恒等变换为 A*%变量^n 的形式. 

\"\"\"
+化简x项(求解,_节点)->+[del](,+化简x项)...
->的(化简x项,模板)...

->+[模板文本](模板,_节点)->+[文本结构_插入](_节点,+式子1)...
->+[.]\"变量\"(+[模板文本],求解)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[乘式](_A,+式子1)



"(,)
的#303""(化简x项#302,模板#304)
模板#304"将乘式 %式子1 恒等变换为 A*%变量^n 的形式. "(,)
的#305""(库#180,通分收集分母#306)
通分收集分母#306"\"\"\"
模板::收集乘式 %式子1 的分母: %分母. 

\"\"\"
+通分收集分母(求解,_节点)->+[del](,+通分收集分母)...
->的(通分收集分母,模板)...

->+[模板文本](模板,_节点)...
->+[文本结构_插入](_节点,+式子1)->+[文本结构_插入](_节点,+分母)...

->+[修改内容]\"表达式\"(,记忆)...
->求解(,_A)->+[乘式](_A,+式子1)...
    =>.(求解,_B)=>+[文本结构_插入尾部]\", \"(+分母,+节点)->+[乘式2](_B,+节点)


"(,)
的#307""(通分收集分母#306,模板#308)
模板#308"收集乘式 %式子1 的分母: %分母. "(,)
的#309""(召唤代码3#156,整体框架#310)
整体框架#310"\"\"\"
P代码:...
P代码2:...

保存:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->的(_代码,入口)...
->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{的(入口,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#311""(整体框架#310,保存#312)
保存#312"\"\"\"
P代码:...
P代码2:...

\"\"\"
+整体框架(求解,_代码)->+[del](,+整体框架)...
->的(整体框架,P代码)->的(整体框架,P代码2)...

->+[python]\"sent_type=0
sent_n=0\"(Python,)->顺序(_代码,)->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,)->+[code](+[python],P代码)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}->[]{
    []=>的(顺序,节点)->节点->匹配(节点,求解#1)...
        =>+[python](Python,+[增加内容2])->+[code](+[python],P代码2)...
            ->+[增加内容2](,节点)...
        ->+[s]\"type_txt\"(+[python],+[临时文本])->+[临时文本]:
            ->[]{[]=>然后(,求解#1)}->[m_text]\"开头\"(,+[临时文本]),
            ->[]{[]=>然后(求解#1,)}->[m_text]\"结尾\"(,+[临时文本]),
            ->[m_text]\"中间\"(,+[临时文本])
}

"(,)
的#313""(整体框架#310,P代码#314)
P代码#314"\"\"\"
记住\"Python\"

\"\"\"
if type_txt=='开头':
    sent_type+=1
"(,)
的#315""(整体框架#310,P代码2#316)
P代码2#316"\"\"\"
记住\"Python\"
print(type_txt)
print(sent_n)

\"\"\"
n_list=['一','二','三','四','五','六','七','八','九','十']

if type_txt=='开头':
    sent_n+=1

if type_txt=='中间':
    ans='然后, '
elif type_txt=='结尾':
    if sent_type!=0:
        ans='\n最后, '
else:
    if sent_type==1:
        ans='首先, '
    elif sent_type==2:
        if sent_n==2:
            ans='一方面, '
        else:
            ans='\n另一方面, '
    elif sent_type==3:
        if sent_n==sent_type:
            ans='第一, '
        elif sent_n==sent_type-1:
            ans='\n第二, '
        else:
            ans='\n另外, '
    else:
        i=sent_type-sent_n
        if i>=10:
            ans='\n另外, '
        else:
            ans='\n第%s, '%n_list[i]



"(,)

## end
#705, 313:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"推导结构转描述文字"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->[]{
    []:->."方程联立"(召唤星辰,)->+召唤代码2(_题目,_代码)->+的(操作,+召唤代码2),
    ->."求解方程"(召唤星辰,)->+召唤代码3(_题目,_代码)->+的(操作,+召唤代码3),

    ->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)
}...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#707, 11133:
推导结构转代码2#0"

召唤规则:...
降临规则:...



"(,)
的#1""(推导结构转代码2#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"推导结构转代码2\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)
的#3""(推导结构转代码2#0,降临规则#4)
降临规则#4"+[复制结构](,设置变量)

设置变量:...
召唤代码:...
整理代码:...
+[复制结构](,召唤代码)
+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"
M模板:...
M模板2:...
M模板3:...
M模板4:...

保存:...

\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M模板2)...
->的(整理代码,M模板3)->的(整理代码,M模板4)...

->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->的(降临规则,整理代码)...
    ->+[删除结构](,降临规则)->+[del](,降临规则)

"(,)
的#7""(整理代码#6,M模板#8)
M模板#8"%{
+[M函数](,%[标题])
%}

%初值

%顺序

ans=%目标;
disp(sprintf('%目标: %.3e',ans));

%{
+[M函数](,%[标题])
%}"(,)
的#9""(整理代码#6,M模板2#10)
M模板2#10"%{
+[M函数](,%[标题])
%}

%初值

%顺序

f=%目标;
t=linspace(-1,1,10000)*200e-15;
plot(t/1e-15,f(t),t/1e-15,abs(f(t)));
xlabel('Delay time [fs]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#11""(整理代码#6,M模板3#12)
M模板3#12"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
lm=linspace(500,1000,2000)*1e-9;
plot(lm/1e-9,S(lm));
xlabel('Lambda [nm]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#13""(整理代码#6,M模板4#14)
M模板4#14"%{
+[M函数](,%[标题])
%}

%初值

%顺序

S=%目标;
E=linspace(500,10000,2000)*1e6*e;
plot(E/1e9/e,S(E));
xlabel('Energy [GeV]')
ylabel('Intensity [a.u.]')


%{
+[M函数](,%[标题])
%}"(,)
的#15""(整理代码#6,保存#16)
保存#16"\"\"\"
M模板:...
M模板2:...
M模板3:...
M模板4:...
结构
\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,M模板2)...
->的(整理代码,M模板3)->的(整理代码,M模板4)...

->+[标题](_代码,)...
->的(_代码,初值)->的(_代码,顺序)...
->.\"结构\"(_代码,_结构)->的(_结构,求解)->求解(,_变量)->[]{[]=>然后(求解,)}
->变量(,_变量)...

->+[模板文本](,_代码)...
->+[.](+[模板文本],初值)->+[.](+[模板文本],顺序)->+[.]\"目标\"(+[模板文本],变量)...
->+[.](+[模板文本],+[标题])...

->[]{
    []:->[is](_变量,波包形状)->波包形状->+[code](+[模板文本],M模板2),
    ->[is](_变量,光谱)->光谱->+[code](+[模板文本],M模板3),
    ->[is](_变量,能谱)->能谱->+[code](+[模板文本],M模板4),
    ->+[code](+[模板文本],M模板)
}...

->[]:->保留结构(,_代码)...
    ->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
    ->的(_代码,降临规则)->的(降临规则,整理代码)...
        ->+[删除结构](,降临规则)->+[del](,降临规则),
->+[删除结构](,_代码)

"(,)
的#17""(降临规则#4,设置变量#18)
设置变量#18"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](_代码,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#19""(设置变量#18,描述结构#20)
描述结构#20"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_代码,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]#0\"var_num={}
state=True\"(Python,)...

->.\"代码类型\"(_代码,_类型)...
->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)->[标题](_节点,)...
    ->[]:
        ->[==]\"表达式\"(,_类型)...
            ->[]{+[s]\"name\"([python],[标题])->+[code]([python],P代码2)...
            ->[python](Python,+变量名)},
        ->[]{+[s]\"name\"([python],[标题])->+[code]([python],P代码)...
            ->[python](Python,+变量名)}
}


"(,)
的#21""(描述结构#20,P代码#22)
P代码#22"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)
距离
a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#23""(描述结构#20,P代码2#24)
P代码2#24"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)
距离
a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"\Delta E\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"\Delta \theta\"

elif \"角频率\" in name:
    type=\"\omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"\Delta \tau\"
elif \"腰宽\" in name:
    type=\"w_0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"\theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"\lambda\"
elif \"光谱宽度\" in name:
    type=\"\Delta \lambda\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#25""(降临规则#4,召唤代码#26)
召唤代码#26"\"\"\"
描述结构:...
初值代码:...
生成代码:...
+[新建阅读窗口](,描述结构)
+[删除](,生成代码)

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)->的(召唤代码,生成代码)->的(召唤代码,初值代码)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)...
->[]{
    []:->.\"代码类型\"(_代码,_类型)->_类型->+[.]\"代码类型\"(记忆,_类型),
    ->[]
}...
->+[做](初值#0,_代码)->+[code](+[做],初值代码)

"(,)
的#27""(召唤代码#26,描述结构#28)
描述结构#28"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#29""(描述结构#28,收集顺序#30)
收集顺序#30"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#31""(收集顺序#30,保存#32)
保存#32"\"\"\"
保存:...

\"\"\"

+收集顺序(顺序,结构)...

->[]{
    []=>的(结构,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#33""(收集顺序#30,整理流程#34)
整理流程#34"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#35""(收集顺序#30,整理流程2#36)
整理流程2#36"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)->_求解}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#37""(整理流程2#36,入口顺序#38)
入口顺序#38"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]


"(,)
的#39""(描述结构#28,收集初值#40)
收集初值#40"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#41""(召唤代码#26,初值代码#42)
初值代码#42"\"\"\"
描述结构:...

\"\"\"

+初值代码(初值,_代码)->+[del](,+初值代码)...
->的(初值代码,描述结构)...

->+[code]([想],描述结构)->[想](初值,_代码)...

->引用库([想],)->+[修改内容](,初值)->[m_text](引用库,+[修改内容])...
->[]{
    []=>的(初值,_初值)->_初值=>+[数据转换](_初值,+[增加内容])->+[增加内容](,初值)
}


"(,)
的#43""(初值代码#42,描述结构#44)
描述结构#44"\"\"\"
P代码:...

\"\"\"
+描述结构(初值,_代码)->+引用库(+描述结构,)...
->的(描述结构,P代码)...

->[python]#0\"state=True
list_lib=set()\"(Python,)...
->[]{
    .\"结构\"(_代码,_结构)->_结构=>的(_结构,求解)->的(求解,函数库)...
    =>+[s]\"lib_dir\"([python],函数库)->[python]\"list_lib.update({lib_dir})\"(Python,)
}...

->+[code]([python],P代码)->[python](Python,+引用库)
"(,)
的#45""(描述结构#44,P代码#46)
P代码#46"\"\"\"
记住\"Python\"

print(lib_name.replace('\\','/'))
a=['1','3','av']
print(a,'av' in a)

\"\"\"

if \"physics_constant\" in list_lib:
    lib_code='physics_constant;\n\n'
else:
    lib_code=''

for lib_name in list_lib:
    if lib_name!='physics_constant':
        lib_code+=\"addpath('%s');\n\"%(lib_name.replace('\\','/'))

ans=lib_code+'\n'


"(,)
的#47""(召唤代码#26,生成代码#48)
生成代码#48"\"\"\"
赋值:...

\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->的(生成代码,赋值)...

->记忆->+代码->[]{
    []:->调用(求解,赋值#0)->+[做](求解,+代码)->+[code](+[做],赋值),

    ->+[召唤星辰](求解,+代码)...
    ->[]{
        []:->.\"代码类型\"(记忆,_类型)->_类型->+[.]\"代码类型\"(+代码,_类型),
        ->[]
    }

}->+[增加内容](+代码,_代码)->+[del](,+代码)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#49""(生成代码#48,保存#50)
保存#50"\"\"\"


\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->生成代码(,)...

->+[召唤星辰](求解,+代码)->+[增加内容](+代码,_代码)...
->+[del](,+代码):
    ->然后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#51""(生成代码#48,赋值#52)
赋值#52"\"\"\"


\"\"\"
+赋值(求解,_代码)->+[del](,+赋值)...

->o(求解,_a)->变量#a(,_a)...
->.(求解,_b)->变量#b(,_b)...

->+[模板文本]\"%a=%b;
\"(,_代码)...
->+[.]\"a\"(+[模板文本],变量#a)...
->+[.]\"b\"(+[模板文本],变量#b)

"(,)

## end
#709, 188:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"推导结构转代码2"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#711, 29563:
生成互动网页#0"

召唤规则:...
降临规则:...


"(,)
的#1""(生成互动网页#0,降临规则#2)
降临规则#2"

设置变量:...
召唤代码:...
生成代码:...
整理结构:...
+[新建阅读窗口](,召唤代码)
"(,)
的#3""(降临规则#2,生成代码#4)
生成代码#4"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"
+生成代码(_题目,_代码)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...

->[]{
    []:->的(_代码,代码结构)->代码结构->+[删除结构](,代码结构)->+[del](,代码结构),
    ->[]
}->+的(_代码,+代码结构)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"结构\"(+[做],+代码结构)...
        ->+[.]\"题目\"(+[做],_题目)
}


"(,)
的#5""(生成代码#4,库#6)
库#6"
整体结构:...
其他初值:...

图形:...
连线:...
将条目\"图形\"复制为条目\"连线\"
+[新建阅读窗口](,图形)
+[新建阅读窗口](,连线)

点:...
圆形:...
将'圆形'的\"节圆形\"替换为\"节点\"
将条目\"点\"复制为条目\"圆形\"
+[新建阅读窗口](,点)

"(,)
的#7""(库#6,连线#8)
连线#8"\"\"\"
M代码:...
模板:...
模板2:...
模板3:...
模板4:...
+[新建阅读窗口](,模板)

保存:...

\"\"\"
+连线(_结构,_物体)->+[del](,+连线)...
->的(连线,M代码)->的(连线,模板)->的(连线,模板2)...
->的(连线,模板3)->的(连线,模板4)...

->的(_结构,JS代码)->插入(JS代码,)->的(插入,画图#1)...
    ->+[模板文本]#1(,+节点#1)->+[文本结构_插入尾部](画图#1,+节点#1)...
->的(_结构,JS代码)->插入(JS代码,)->的(插入,图形初值)...
    ->+[模板文本]#1a(,+节点#1a)->+[文本结构_插入尾部](图形初值,+节点#1a)...

->的(_结构,图1)->插入(图1,)->的(插入,画图)...
    ->+[模板文本]#2(,+节点#2)->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入](+节点#2,+pts)->+顺序\" \"(+pts,)->+的(+pts,+顺序)...
->+[文本结构_插入](+节点#1,+xs)->+顺序\", \"(+xs,)->+的(+xs,+顺序)...
->+[文本结构_插入](+节点#1,+ys)->+顺序\", \"(+ys,)->+的(+ys,+顺序)...

->+[文本结构_插入](+节点#2,+线)...
->+[文本结构_插入](+节点#1,+线)->+[文本结构_插入](+节点#1a,+线)...

->Matlab->的(_结构,命名空间)...
->[]{
    []=>经过(_物体,_点)->_点=>[]:

    ->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
        ->+[文本结构_插入尾部](+pts,+节点#p)...
            ->+[matlab](Matlab,+节点#p)->+[code](+[matlab],M代码)...
            ->+[.]\"pt0\"(+[matlab],_A)...
        ->+[文本结构_插入尾部](+xs,+节点#x)->+[修改内容]\"%s_x\"(变量,+节点#x)...
            ->+[文本结构_插入尾部](+ys,+节点#y)->+[修改内容]\"%s_y\"(变量,+节点#y),

    ->在(_点,_A1)->+[文本结构_插入尾部](+pts,+节点#p1)...
        ->+[matlab](Matlab,+节点#p1)->+[code](+[matlab],M代码)...
        ->+[.]\"pt0\"(+[matlab],_A1)
}...

->[]:
->的(_物体,方向)->方向->变量#a(,方向)->的(命名空间,变量#a)...
    ->+[code](+[模板文本]#2,模板2)->+[code](+[模板文本]#1a,模板4)...
    ->+[code](+[模板文本]#1,模板3)->+[修改内容](变量#a,+线),

->经过(_物体,_A)->在(_A,_点)->变量#b(,_点)->的(命名空间,变量#b)...
    ->经过(_物体,_B)->在(_B,_点B)->[]{[]=>[is](_A,_B)}...
        ->变量#bb(,_点B)->的(命名空间,变量#bb)...
    ->+[code](+[模板文本]#2,模板2)->+[code](+[模板文本]#1a,模板4)...
    ->+[code](+[模板文本]#1,模板3)...
        ->+[修改内容](变量#b,+线)->+[增加内容](变量#bb,+线),

->+[code](+[模板文本]#2,模板)


"(,)
的#9""(连线#8,模板#10)
模板#10"<polygon points=\"%pts\" style=\"fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#11""(连线#8,模板2#12)
模板2#12"<polygon id=\"line_%线\" points=\"%pts\" style=\"fill:rgb(0,0,0);stroke:black;stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#13""(连线#8,M代码#14)
M代码#14"%{
+[M函数](,M代码)
%}

if isempty(pt0)
    pt0=[0,0];
end
x0=pt0(1);
y0=pt0(2);

xo=x0-pt0_window(1);
yo=-y0+(pt0_window(2)+siz0_window(2));

xo=xo*ratio_window;
yo=yo*ratio_window;
ans=[xo,yo];
"(,)
的#15""(连线#8,模板3#16)
模板3#16"xs=[%xs];
ys=[%ys];
for(var i=0;i<line_%线.points.length;i++) {
    line_%线.points[i].x=xs[i]*RATIO;
    line_%线.points[i].y=ys[i]*RATIO;
}

"(,)
的#17""(连线#8,模板4#18)
模板4#18"var line_%线 = document.getElementById(\"line_%线\");
"(,)
的#19""(连线#8,保存#20)
保存#20"\"\"\"
M代码:...
模板:...
模板2:...
模板3:...
模板4:...
+[新建阅读窗口](,模板)

保存:...

\"\"\"
+连线(_结构,_物体)->+[del](,+连线)...
->的(连线,M代码)->的(连线,模板)->的(连线,模板2)...
->的(连线,模板3)->的(连线,模板4)...

->的(_结构,JS代码)->插入(JS代码,)->的(插入,画图#1)...
    ->+[模板文本]#1(,+节点#1)->+[文本结构_插入尾部](画图#1,+节点#1)...
->的(_结构,JS代码)->插入(JS代码,)->的(插入,图形初值)...
    ->+[模板文本]#1a(,+节点#1a)->+[文本结构_插入尾部](图形初值,+节点#1a)...

->的(_结构,图1)->插入(图1,)->的(插入,画图)...
    ->+[模板文本]#2(,+节点#2)->+[文本结构_插入尾部](画图,+节点#2)...
->+[文本结构_插入](+节点#2,+pts)->+顺序\" \"(+pts,)->+的(+pts,+顺序)...
->+[文本结构_插入](+节点#1,+xs)->+顺序\", \"(+xs,)->+的(+xs,+顺序)...
->+[文本结构_插入](+节点#1,+ys)->+顺序\", \"(+ys,)->+的(+ys,+顺序)...

->+[文本结构_插入](+节点#2,+线)...
->+[文本结构_插入](+节点#1,+线)->+[文本结构_插入](+节点#1a,+线)...

->Matlab->的(_结构,命名空间)...
->[]{
    []=>经过(_物体,_点)->_点=>[]:

    ->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
        ->+[文本结构_插入尾部](+pts,+节点#p)...
            ->+[matlab](Matlab,+节点#p)->+[code](+[matlab],M代码)...
            ->+[.]\"pt0\"(+[matlab],_A)...
        ->+[文本结构_插入尾部](+xs,+节点#x)->+[修改内容]\"%s_x\"(变量,+节点#x)...
            ->+[文本结构_插入尾部](+ys,+节点#y)->+[修改内容]\"%s_y\"(变量,+节点#y),

    ->在(_点,_A1)->+[文本结构_插入尾部](+pts,+节点#p1)...
        ->+[matlab](Matlab,+节点#p1)->+[code](+[matlab],M代码)...
        ->+[.]\"pt0\"(+[matlab],_A1)
}...

->[]:
->的(_物体,方向)->方向->变量#a(,方向)->的(命名空间,变量#a)...
    ->+[code](+[模板文本]#2,模板2)->+[.]\"线\"(+[模板文本]#2,变量#a)...
    ->+[code](+[模板文本]#1a,模板4)->+[.]\"线\"(+[模板文本]#1a,变量#a)...
    ->+[code](+[模板文本]#1,模板3)->+[.]\"线\"(+[模板文本]#1,变量#a),

->经过(_物体,_A)->在(_A,_点)->变量#b(,_点)->的(命名空间,变量#b)...
    ->经过(_物体,_B)->在(_B,_点B)->[]{[]=>[is](_A,_B)}...
        ->变量#bb(,_点B)->的(命名空间,变量#bb)...
    ->+[code](+[模板文本]#2,模板2)->+[.]\"线\"(+[模板文本]#2,变量#b)...
    ->+[code](+[模板文本]#1a,模板4)->+[.]\"线\"(+[模板文本]#1a,变量#b)...
    ->+[code](+[模板文本]#1,模板3)->+[.]\"线\"(+[模板文本]#1,变量#b),

->+[code](+[模板文本]#2,模板)


"(,)
的#21""(库#6,整体结构#22)
整体结构#22"\"\"\"
模板:...
保存:...
设置SVG:...
设置JS:...

\"\"\"
+整体结构(_结构,_代码)->+[del](,+整体结构)...
->的(整体结构,模板)->的(整体结构,设置SVG)->的(整体结构,设置JS)...

->.\"题目\"(+整体结构,_题目)...
->+的(_代码,+图1)->+SVG(+图1,)->+的(+图1,+SVG)...
->+的(_代码,+JS代码)->+JS函数(+JS代码,)->+的(+JS代码,+JS函数)...
->+[标题](_代码,)...
->+[模板文本](模板,_代码)->+[.](+[模板文本],+[标题])...

->+[做](_代码,+图1)->+[code](+[做],设置SVG)->+[.](+[做],_题目)...
->+[做](_代码,+JS代码)->+[code](+[做],设置JS)


"(,)
的#23""(整体结构#22,模板#24)
模板#24"<!--
+[H函数](,%[标题])
-->

%图1

<!--
图1(SVG):...
JS代码(JS函数):...
+[新建阅读窗口](,图1)
+[新建阅读窗口](,JS代码)

+[H函数](,%[标题])
-->"(,)
的#25""(整体结构#22,保存#26)
保存#26"\"\"\"
模板:...
保存:...

\"\"\"
+整体结构(_结构,_代码)->+[del](,+整体结构)...
->的(整体结构,模板)...

->的(_代码,代码结构)->+[标题](_代码,)...
    ->+[模板文本](模板,代码结构)->+[.](+[模板文本],+[标题])...
->的(_结构,顺序)->的(_结构,初值)...
->+[文本结构_插入](代码结构,+顺序)->[m_text](顺序,+顺序)...
->+[文本结构_插入](代码结构,+初值)->[m_text](初值,+初值)...
->+[文本结构_插入](代码结构,+图形初值)->+的(代码结构,+图形初值)...
->+[文本结构_插入](代码结构,+画图)->+的(代码结构,+画图)

"(,)
的#27""(整体结构#22,设置SVG#28)
设置SVG#28"\"\"\"
模板:...
P代码:...
M代码:...

\"\"\"
+设置SVG(_结构,_图)->+[del](,+设置SVG)...
->的(设置SVG,P代码)->的(设置SVG,M代码)->的(设置SVG,模板)...
->.(+设置SVG,_题目)...

->的(_结构,顺序)->的(_结构,初值)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[python](Python,_图)->+[code](+[python],P代码)...
->+[文本结构_插入](_图,+画图)->+的(_图,+画图)...

->+[o]\"pt0\"(+[matlab],+空间点)->+[.]\"pt0\"(+[python],+空间点)->+[del](,+空间点)...
->+[o]\"siz0\"(+[matlab],+尺寸)->+[.]\"siz0\"(+[python],+尺寸)->+[del](,+尺寸)



"(,)
的#29""(设置SVG#28,模板#30)
模板#30"<svg id=\"viewer\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 1000 375.0\" style=\"overflow: hidden;border: 2px solid #888888;\"> 

%画图

</svg>
"(,)
的#31""(设置SVG#28,P代码#32)
P代码#32"\"\"\"
Nini, 打开PPT(文件)
记住\"Python\"
print(ratio)
print(W)
print(siz0)

\"\"\"

W=1000
H=W/siz0[0]*siz0[1]

ratio=W/siz0[0]

code_pat=\"\"\"
<svg id=\"viewer\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 {0} {1}\" style=\"overflow: hidden;border: 2px solid #888888;\"> 

%画图

</svg>

\"\"\"

ans=code_pat.format(W,H)

viewbox=\"0 0 {0} {1}\".format(W,H)

"(,)
的#33""(设置SVG#28,M代码#34)
M代码#34"%{

%}

pt_x=get(gca,'Xlim');
pt_y=get(gca,'Ylim');
pt0=[pt_x(1),pt_y(1)];
siz0=[diff(pt_x),diff(pt_y)];

W0=1000;
H0=W0/siz0(1)*siz0(2);
ratio_window=W0/siz0(1);
pt0_window=pt0;
siz0_window=siz0;


"(,)
的#35""(整体结构#22,设置JS#36)
设置JS#36"\"\"\"
模板:...

\"\"\"
+设置JS(_结构,_JS代码)->+[del](,+设置JS)...
->的(设置JS,模板)...

->的(_结构,顺序)->的(_结构,初值)...
->+[标题](_JS代码,)...
->+[matlab]\"ans=ratio_window;\"(Matlab,+RATIO)...
->+[模板文本](模板,_JS代码)->+[.](+[模板文本],+[标题])...
->+[.](+[模板文本],+RATIO)->+[del](,+RATIO)...

->+插入(_JS代码,)->+的(+插入,+顺序)->+缩进\"    \"(+插入,+顺序)...
    ->+的(+插入,+画图)->+缩进\"    \"(+插入,+画图)...
    ->+的(+插入,初值)->+缩进\"    \"(+插入,初值)...
    ->+的(+插入,+图形初值)->+缩进\"    \"(+插入,+图形初值)...

->+[文本结构_插入](_JS代码,初值)...
->+[文本结构_插入](_JS代码,+顺序)->[m_text](顺序,+顺序)...
->+[文本结构_插入](_JS代码,+图形初值)->+的(_JS代码,+图形初值)...
->+[文本结构_插入](_JS代码,+画图)->+的(_JS代码,+画图)

"(,)
的#37""(设置JS#36,模板#38)
模板#38"/*
+[J函数](,%[标题])
*/


function intersection_lines_dir_pt(pt1,theta1,pt2,theta2) {
    X1=[pt1[0],pt1[0]+Math.cos(theta1)];
    Y1=[pt1[1],pt1[1]+Math.sin(theta1)];
    X2=[pt2[0],pt2[0]+Math.cos(theta2)];
    Y2=[pt2[1],pt2[1]+Math.sin(theta2)];

    D1=X1[0]*Y1[1]-X1[1]*Y1[0];
    D2=X2[0]*Y2[1]-X2[1]*Y2[0];
    DX1=X1[1]-X1[0];
    DX2=X2[1]-X2[0];
    DY1=Y1[1]-Y1[0];
    DY2=Y2[1]-Y2[0];
    x0=(D1*DX2-D2*DX1)/(DY1*DX2-DY2*DX1);
    y0=(D1*DY2-D2*DY1)/(DY1*DX2-DY2*DX1);
    return [x0,y0];
}


function joint_two_arms(pt_1,pt_2,L_1,L_2) {

    x_1=pt_1[0];
    y_1=pt_1[1];
    x_2=pt_2[0];
    y_2=pt_2[1];
    
    DX_1=x_1-x_2;
    DY_1=y_1-y_2;
    
    D=L_1**2-(y_1-y_2)**2-(x_1-x_2)**2-L_2**2;
    DX1=(-D*DX_1-Math.sqrt(4*L_2**2*DY_1**2*(DX_1**2+DY_1**2)-(D*DY_1)**2))/(2*(DX_1**2+DY_1**2));
    DX2=(-D*DX_1+Math.sqrt(4*L_2**2*DY_1**2*(DX_1**2+DY_1**2)-(D*DY_1)**2))/(2*(DX_1**2+DY_1**2));
    
    x1=DX1+x_2;
    x2=DX2+x_2;
    
    
    DY1=Math.sqrt(L_2**2-DX1**2);
    DY2=-Math.sqrt(L_2**2-DX2**2);
    
    y1=DY1+y_2;
    y2=DY2+y_2;
    
    if (Math.abs(Math.sqrt((x1-x_1)**2+(y1-y_1)**2)-L_1)>1e-6) {
        y1=-DY1+y_2;
    }
    
    if (Math.abs(Math.sqrt((x2-x_1)**2+(y2-y_1)**2)-L_1)>1e-6) {
        y2=-DY2+y_2;
    }
    
    X_1=x1-x_1;
    Y_1=y1-y_1;
    X_2=x1-x_2;
    Y_2=y1-y_2;
    // test=cross([x1-x_1,y1-y_1,0],[x1-x_2,y1-y_2,0]);
    test=X_1*Y_2-X_2*Y_1;
    
    if (x1===NaN) {
        x1=0;
    }
    if (y1===NaN) {
        y1=0;
    }
    
    if (x2===NaN) {
        x2=0;
    }
    if (y2===NaN) {
        y2=0;
    }

    if (test<0) {
        pt2=[x1,y1];
        pt1=[x2,y2];
    }
    else {
        pt1=[x1,y1];
        pt2=[x2,y2];
    }
    
    return [pt1,pt2]

}


function tangent_circle(x_0,y_0,R,x_1,y_1) {

    a=((y_1-y_0)**2-R**2);
    b_1=(-(x_1-x_0)*(y_1-y_0)+R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    b_2=(-(x_1-x_0)*(y_1-y_0)-R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+x_0;
    y_t=(b_1*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+y_0;
    pt_1=[x_t,y_t];
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+x_0;
    y_t=(b_2*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+y_0;
    pt_2=[x_t,y_t];

    return [angle_1,angle_2,pt_1,pt_2];
}


function tangent_two_circles(x_1,y_1,R_1,x_2,y_2,R_2) {

    x_3=(x_1*R_2-x_2*R_1)/(R_2-R_1);
    y_3=(y_1*R_2-y_2*R_1)/(R_2-R_1);
    pt_0=[x_3,y_3];
    
    a=((y_3-y_1)**2-R_1**2);
    b_1=(-(x_3-x_1)*(y_3-y_1)+R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    b_2=(-(x_3-x_1)*(y_3-y_1)-R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+x_1;
    y_t=(b_1*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+y_1;
    pt_1a=[x_t,y_t];
    pt_2a=[x_t,y_t];
    pt_2a[0]=pt_0[0]+(pt_1a[0]-pt_0[0])/R_1*R_2;
    pt_2a[1]=pt_0[1]+(pt_1a[1]-pt_0[1])/R_1*R_2;
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+x_1;
    y_t=(b_2*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+y_1;
    pt_1b=[x_t,y_t];
    pt_2b=[x_t,y_t];
    pt_2b[0]=pt_0[0]+(pt_1b[0]-pt_0[0])/R_1*R_2;
    pt_2b[1]=pt_0[1]+(pt_1b[1]-pt_0[1])/R_1*R_2;
    
    return [angle_1,angle_2,pt_1a,pt_1b,pt_2a,pt_2b];

}





var RATIO=%RATIO;
function draw_update() {
%图形初值
%初值

%顺序

%画图
}

var viewer = document.getElementById(\"viewer\");
var ratio_viewer=viewer.getBoundingClientRect().width/1000;

function dragEle(e,name) {
    var x=(e.clientX-viewer.getBoundingClientRect().left)/ratio_viewer;
    var y=(e.clientY-viewer.getBoundingClientRect().top)/ratio_viewer;

    var pt_1 = document.getElementById(name);
    pt_1.setAttribute(\"cx\", x);
    pt_1.setAttribute(\"cy\", y);

    draw_update();
}

let doAction=function (e) {};
function onmousedown_diy(e) {
    doAction(e);
}

document.body.addEventListener(\"mousemove\", onmousedown_diy);

document.body.addEventListener(\"mouseup\", function(e) {
    doAction=function(e) {};
});

function loadDragFunc(name) {
    doAction=function(e) {dragEle(e,name)};
}


/*
+[J函数](,%[标题])
*/"(,)
的#39""(库#6,圆形#40)
圆形#40"\"\"\"
Nini, 打开PPT(文件)
P代码:...
M代码2:...
画图模板:...
画图模板2:...
画图模板3:...
画图模板4:...
+[新建阅读窗口](,M代码2)

\"\"\"
+圆形(_结构,_物体)->+[del](,+圆形)...
->的(圆形,M代码2)->的(圆形,画图模板)->的(圆形,画图模板2)...
->的(圆形,P代码)->的(圆形,画图模板3)->的(圆形,画图模板4)...

->的(_结构,JS代码)->插入(JS代码,)->的(插入,画图#1)...
    ->+[文本结构_插入尾部](画图#1,+节点#1)...
->的(_结构,JS代码)->插入(JS代码,)->的(插入,图形初值)...
    ->+[文本结构_插入尾部](图形初值,+节点#1a)...

->的(_结构,图1)->插入(图1,)->的(插入,画图)...
    ->+[文本结构_插入尾部](画图,+节点#2)...
->的(_结构,命名空间)->+[标题](_物体,)...

->的(_物体,半径)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[matlab](Matlab,)->+[code](+[matlab],M代码2)...
->+[模板文本]#1(,+节点#1)->+[模板文本]#1a(,+节点#1a)...
->+[模板文本]#2(,+节点#2)...
->+[.](+[模板文本]#2,+xo)->+[o](+[matlab],+xo)->+[del](,+xo)...
->+[.](+[模板文本]#2,+yo)->+[o](+[matlab],+yo)->+[del](,+yo)...
->+[.](+[模板文本]#2,+color)->+[o](+[python],+color)->+[del](,+color)...

->+[.]\"R0\"(+[matlab],半径)...
->+[.](+[模板文本]#2,+R)->+[o](+[matlab],+R)->+[del](,+R)...
->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt0\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt0\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(_物体,颜色)->颜色->+[.]\"color0\"(+[python],颜色),
    ->+[临时文本]\"None\"->+[.]\"color0\"(+[python],+[临时文本])
}...
->+[.]\"内容\"(+[模板文本]#2,+[标题])...

->[]:
->在(_物体,_圆形)->_圆形->变量#a(,_圆形)->的(命名空间,变量#a)...
    ->+[code](+[模板文本]#1,画图模板3)->+[.]\"圆形\"(+[模板文本]#1,变量#a)...
    ->+[code](+[模板文本]#1a,画图模板4)->+[.]\"圆形\"(+[模板文本]#1a,变量#a)...
    ->+[code](+[模板文本]#2,画图模板2)->+[.]\"圆形\"(+[模板文本]#2,变量#a),

->+[code](+[模板文本]#2,画图模板)

"(,)
的#41""(圆形#40,M代码2#42)
M代码2#42"%{
+[M函数](,M代码2)
%}

x0=pt0(1);
y0=pt0(2);

xo=x0-pt0_window(1);
yo=-y0+(pt0_window(2)+siz0_window(2));

xo=xo*ratio_window;
yo=yo*ratio_window;
R=R0*ratio_window;


"(,)
的#43""(圆形#40,画图模板#44)
画图模板#44"<circle cx=\"%xo\" cy=\"%yo\" r=\"%R\" style=\"fill:%color;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#45""(圆形#40,画图模板2#46)
画图模板2#46"<circle id=\"%圆形\" onmousedown=\"loadDragFunc('%圆形')\" cx=\"%xo\" cy=\"%yo\" r=\"%R\" style=\"fill:%color;stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#47""(圆形#40,画图模板3#48)
画图模板3#48"%圆形.setAttribute(\"cx\",%圆形_x*RATIO);
%圆形.setAttribute(\"cy\",%圆形_y*RATIO);
"(,)
的#49""(圆形#40,画图模板4#50)
画图模板4#50"var %圆形 = document.getElementById(\"%圆形\");
var %圆形_x = +%圆形.getAttribute(\"cx\")/RATIO;
var %圆形_y = +%圆形.getAttribute(\"cy\")/RATIO;

"(,)
的#51""(圆形#40,P代码#52)
P代码#52"\"\"\"
记住\"Python\"
print(np.min([1,2,3]))
print(pat_txt,ans)

\"\"\"
import numpy as np

pat_txt=\"rgb(%d,%d,%d)\"
if len(color0)==3:
    if np.min(color0)>=1:
        color=pat_txt%(color0[0],color0[1],color0[2])
    elif np.min(color0)>=0:
        color=pat_txt%(color0[0]*255,color0[1]*255,color0[2]*255)
    else:
        color=\"None\"
else:
    color=\"None\"

"(,)
的#53""(库#6,图形#54)
图形#54"\"\"\"
Nini, 打开PPT(文件)
M代码:...
M代码2:...
M模板2:...
M模板3:...
画图模板:...
画图模板2:...
画图模板3:...
+[新建阅读窗口](,M代码)

\"\"\"
+图形(_结构,_物体)->+[del](,+图形)...
->的(图形,M代码2)->的(图形,M模板2)->的(图形,M模板3)...
->的(图形,画图模板)->的(图形,画图模板2)->的(图形,画图模板3)...

->.\"结构\"(+图形,代码结构)->的(代码结构,图形初值)->的(代码结构,画图)...
->+[文本结构_插入尾部](图形初值,+节点#1)...
->+[文本结构_插入尾部](画图,+节点#2)...

->的(_结构,命名空间)...
->的(_物体,x)->的(_物体,y)...

->+[模板文本]#M(,+[临时文本]#M)...
->+[matlab](Matlab,)->+[模板文本]#2(,+节点#2)...

->+[.](+[matlab],x)->+[o](+[matlab],+xo)->+[del](,+xo)...
->+[.](+[matlab],y)->+[o](+[matlab],+yo)->+[del](,+yo)...
    ->+[.](+[模板文本]#2,+xo)->+[.](+[模板文本]#2,+yo)...

->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt0\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt0\"(+[matlab],+[临时文本])
}...
->[]{
    []:->朝向(_物体,方向)->方向->+[.]\"an0\"(+[matlab],方向),
    ->+[临时文本]\"0\"->+[.]\"an0\"(+[matlab],+[临时文本])
}...
->+[o]\"an_out\"(+[matlab],+[临时文本]#a)...
->+[.]\"an0\"(+[模板文本]#2,+[临时文本]#a)...

->[]:
->的(_物体,方向)->方向->变量#a(,方向)->的(命名空间,变量#a)...
->+[code](+[matlab],+[临时文本]#M)...
->+[.]\"an1\"(+[模板文本]#M,变量#a)->+[.]\"an1\"(+[模板文本]#2,变量#a)...
    ->[]{
        []:->经过(_物体,_点)->_点->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
            ->+[.]\"pt1\"(+[matlab],_A)...
            ->+[code](+[模板文本]#M,M模板2)->+[code](+[模板文本]#2,画图模板2)...
            ->+[.]\"点\"(+[模板文本]#2,变量)->+[.]\"点\"(+[模板文本]#M,变量),

        ->+[临时文本]->+[.]\"pt1\"(+[matlab],+[临时文本])...
            ->+[code](+[模板文本]#M,M模板3)->+[code](+[模板文本]#2,画图模板3)
    },

->+[code](+[matlab],M代码2)->+[code](+[模板文本]#2,画图模板)

"(,)
的#55""(图形#54,M代码#56)
M代码#56"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;

if isempty(pt1)
    xo=x0;
    yo=y0;
else
    xo=x0-pt1(1);
    yo=y0-pt1(2);
end


"(,)
的#57""(图形#54,M代码2#58)
M代码2#58"%{

%}

xo= cosd(an0)*x-sind(an0)*y+pt0(1);
yo= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;
"(,)
的#59""(图形#54,画图模板#60)
画图模板#60"
patch([%xo],[%yo],[1,1,1],'FaceAlpha',0.5);
"(,)
的#61""(图形#54,画图模板2#62)
画图模板2#62"
x0=[%xo];
y0=[%yo];
x=cosd(%an1-%an0)*x0-sind(%an1-%an0)*y0+%点_x;
y=sind(%an1-%an0)*x0+cosd(%an1-%an0)*y0+%点_y;
patch(x,y,[1,1,1],'FaceAlpha',0.5);
"(,)
的#63""(图形#54,画图模板3#64)
画图模板3#64"
x0=[%xo];
y0=[%yo];
x=cosd(%an1-%an0)*x0-sind(%an1-%an0)*y0;
y=sind(%an1-%an0)*x0+cosd(%an1-%an0)*y0;
patch(x,y,[1,1,1],'FaceAlpha',0.5);
"(,)
的#65""(图形#54,M模板2#66)
M模板2#66"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;

x0=x0-%点_x;
y0=y0-%点_y;
xo= cosd(%an1)*x0+sind(%an1)*y0;
yo= -sind(%an1)*x0+cosd(%an1)*y0;


"(,)
的#67""(图形#54,M模板3#68)
M模板3#68"%{

%}

x0= cosd(an0)*x-sind(an0)*y+pt0(1);
y0= sind(an0)*x+cosd(an0)*y+pt0(2);
an_out=an0;
xo= cosd(%an1)*x0+sind(%an1)*y0;
yo= -sind(%an1)*x0+cosd(%an1)*y0;


"(,)
的#69""(库#6,其他初值#70)
其他初值#70"\"\"\"
特征:...
M代码:...
模板:var %变量 = %内容;
value

\"\"\"

+其他初值(_结构,_代码)->+[del](,+其他初值)...
->的(其他初值,模板)->的(其他初值,M代码)->的(其他初值,特征)...

->的(_结构,初值)->[]{
    +[code]([想],特征)=>的(初值,_初值)->_初值(,_A)->[想](,_A)...
    =>+[标题](_A,)...
        ->+[matlab](Matlab,+[临时文本])->+[code](+[matlab],M代码)...
        ->+[.]\"value\"(+[matlab],_A)->+[.]\"var_name\"(+[matlab],+[标题])...
        ->+[模板文本](,+[增加内容])->+[增加内容](,初值)...
            ->+[code](+[模板文本],模板)...
        ->+[.](+[模板文本],_初值)->+[.]\"内容\"(+[模板文本],+[临时文本])
}

"(,)
的#71""(其他初值#70,模板#72)
模板#72"var %变量 = %内容;
"(,)
的#73""(其他初值#70,M代码#74)
M代码#74"%{
*ratio_window
%}

if strcmp(var_name,'方向')
    ans=-value*pi/180;
else
    ans=value;
end"(,)
的#75""(其他初值#70,特征#76)
特征#76"\"\"\"


\"\"\"
+特征(,_A)=>[is](_A,空间点)


"(,)
的#77""(库#6,点#78)
点#78"\"\"\"
Nini, 打开PPT(文件)
M代码2:...
画图模板:...
画图模板2:...
画图模板3:...
画图模板4:...
+[新建阅读窗口](,M代码2)

\"\"\"
+点(_结构,_物体)->+[del](,+点)...
->的(点,M代码2)->的(点,画图模板)->的(点,画图模板2)...
->的(点,画图模板3)->的(点,画图模板4)...

->的(_结构,JS代码)->插入(JS代码,)->的(插入,画图#1)...
    ->+[文本结构_插入尾部](画图#1,+节点#1)...
->的(_结构,JS代码)->插入(JS代码,)->的(插入,图形初值)...
    ->+[文本结构_插入尾部](图形初值,+节点#1a)...

->的(_结构,图1)->插入(图1,)->的(插入,画图)...
    ->+[文本结构_插入尾部](画图,+节点#2)...
->的(_结构,命名空间)->+[标题](_物体,)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码2)...
->+[模板文本]#1(,+节点#1)->+[模板文本]#1a(,+节点#1a)...
->+[模板文本]#2(,+节点#2)...
->+[.](+[模板文本]#2,+xo)->+[o](+[matlab],+xo)->+[del](,+xo)...
->+[.](+[模板文本]#2,+yo)->+[o](+[matlab],+yo)->+[del](,+yo)...
->[]{
    []:->在(_物体,空间点)->空间点->+[.]\"pt0\"(+[matlab],空间点),
    ->+[临时文本]\"0,0\"->+[.]\"pt0\"(+[matlab],+[临时文本])
}...
->+[.]\"内容\"(+[模板文本]#2,+[标题])...

->[]:
->在(_物体,_点)->_点->变量#a(,_点)->的(命名空间,变量#a)...
    ->+[code](+[模板文本]#1,画图模板3)->+[.]\"点\"(+[模板文本]#1,变量#a)...
    ->+[code](+[模板文本]#1a,画图模板4)->+[.]\"点\"(+[模板文本]#1a,变量#a)...
    ->+[code](+[模板文本]#2,画图模板2)->+[.]\"点\"(+[模板文本]#2,变量#a),

->+[code](+[模板文本]#2,画图模板)

"(,)
的#79""(点#78,画图模板4#80)
画图模板4#80"var %点 = document.getElementById(\"%点\");
var %点_x = +%点.getAttribute(\"cx\")/RATIO;
var %点_y = +%点.getAttribute(\"cy\")/RATIO;

"(,)
的#81""(点#78,画图模板3#82)
画图模板3#82"%点.setAttribute(\"cx\",%点_x*RATIO);
%点.setAttribute(\"cy\",%点_y*RATIO);
"(,)
的#83""(点#78,画图模板2#84)
画图模板2#84"<circle id=\"%点\" onmousedown=\"loadDragFunc('%点')\" cx=\"%xo\" cy=\"%yo\" r=\"10\" style=\"fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#85""(点#78,画图模板#86)
画图模板#86"<circle cx=\"%xo\" cy=\"%yo\" r=\"10\" style=\"fill:rgb(0,0,0);stroke:rgb(0,0,0);stroke-width:5;fill-rule:evenodd;\" />
"(,)
的#87""(点#78,M代码2#88)
M代码2#88"%{
+[M函数](,M代码2)
%}

x0=pt0(1);
y0=pt0(2);

xo=x0-pt0_window(1);
yo=-y0+(pt0_window(2)+siz0_window(2));

xo=xo*ratio_window;
yo=yo*ratio_window;
"(,)
的#89""(生成代码#4,描述结构#90)
描述结构#90"\"\"\"
        ->的(_物体,x)->+的(+操作,+图形)->+图形(_代码,_物体),

\"\"\"
+描述结构(_题目,_代码)->+操作(+描述结构,)...

->的(_代码,命名空间)...
->+的(+操作,+其他初值)->+其他初值(_代码,_代码)...
->[]{
    []=>的(_题目,_物体)->_物体=>[]:
        ->的(_物体,半径)->+的(+操作,+圆形)->+圆形(_代码,_物体),

        ->经过(_物体,_点)->在(_点,_A)->变量(,_A)->的(命名空间,变量)...
            ->+的(+操作,+连线)->+连线(_代码,_物体),

        ->在(_物体,空间点)->+的(+操作,+点)->+点(_代码,_物体),
        ->[]
}...
->+的(+操作,+整体结构)->+整体结构(_代码,_代码)

"(,)
的#91""(降临规则#2,整理结构#92)
整理结构#92"\"\"\"


\"\"\"
+整理结构(_题目,_代码)->+[del](,+整理结构)...

->的(_代码,图1)->+[结构转文本](图1,图1)...
->的(_代码,JS代码)->+[结构转文本](JS代码,JS代码)...
->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)



"(,)
的#93""(降临规则#2,设置变量#94)
设置变量#94"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#95""(设置变量#94,描述结构#96)
描述结构#96"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#97""(描述结构#96,P代码#98)
P代码#98"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)
距离
a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#99""(降临规则#2,召唤代码#100)
召唤代码#100"\"\"\"
描述结构:...
初值代码:...
生成代码:...
+[新建阅读窗口](,描述结构)
+[删除](,生成代码)

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)->的(召唤代码,生成代码)->的(召唤代码,初值代码)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)...
->+[做](初值#0,_代码)->+[code](+[做],初值代码)

"(,)
的#101""(召唤代码#100,生成代码#102)
生成代码#102"\"\"\"
赋值:...

\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->的(生成代码,赋值)...

->+代码->[]{
    []:->调用(求解,赋值#0)->+[做](求解,+代码)->+[code](+[做],赋值),
    ->+[召唤星辰](求解,+代码)->+[.]\"代码类型\"(+代码,+[临时文本])->+[临时文本]\"JS\"
}->+[增加内容](+代码,_代码)->+[del](,+代码)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#103""(生成代码#102,赋值#104)
赋值#104"\"\"\"


\"\"\"
+赋值(求解,_代码)->+[del](,+赋值)...

->o(求解,_a)->变量#a(,_a)...
->.(求解,_b)->变量#b(,_b)...

->+[模板文本]\"%a=%b;
\"(,_代码)...
->+[.]\"a\"(+[模板文本],变量#a)...
->+[.]\"b\"(+[模板文本],变量#b)

"(,)
的#105""(生成代码#102,保存#106)
保存#106"\"\"\"


\"\"\"

+生成代码(求解,_代码)->+[del](,+生成代码)...
->生成代码(,)...

->+[召唤星辰](求解,+代码)->+[增加内容](+代码,_代码)...
->+[del](,+代码):
    ->然后(求解,求解#1)->求解#1->+[做](求解#1,_代码)->+[code](+[做],生成代码),
    ->[]


"(,)
的#107""(召唤代码#100,初值代码#108)
初值代码#108"\"\"\"
描述结构:...
模板:var %变量 = %内容;

...

->+[code]([想],描述结构)->[想](初值,_代码)...
->[]{
    []=>的(初值,_初值)->_初值(,_A)->_A{
        []&:=>[is](_A,空间点), =>[==](,_A)}...
    =>+[模板文本](,+[增加内容])->+[code](+[模板文本],模板)...
        ->+[增加内容](,初值)->+[.](+[模板文本],_初值)->+[.]\"内容\"(+[模板文本],_A)
}


\"\"\"

+初值代码(初值,_代码)->+[del](,+初值代码)...
->的(初值代码,描述结构)->的(初值代码,模板)
"(,)
的#109""(初值代码#108,描述结构#110)
描述结构#110"\"\"\"
P代码:...

\"\"\"
+描述结构(初值,_代码)->+引用库(+描述结构,)...
->的(描述结构,P代码)...

->[python]#0\"state=True
list_lib=set()\"(Python,)...
->[]{
    .\"结构\"(_代码,_结构)->_结构=>的(_结构,求解)->的(求解,函数库)...
    =>+[s]\"lib_dir\"([python],函数库)->[python]\"list_lib.update({lib_dir})\"(Python,)
}...

->+[code]([python],P代码)->[python](Python,+引用库)
"(,)
的#111""(描述结构#110,P代码#112)
P代码#112"\"\"\"
记住\"Python\"

print(list_lib)
a=['1','3','av']
print(a,'av' in a)

\"\"\"

if \"physics_constant\" in list_lib:
    lib_code='physics_constant;\n\n'
else:
    lib_code=''

for lib_name in list_lib:
    if lib_name!='physics_constant':
        lib_code+=\"addpath('%s');\n\"%(lib_name)

ans=lib_code+'\n'


"(,)
的#113""(初值代码#108,模板#114)
模板#114"var %变量 = %内容;
"(,)
的#115""(召唤代码#100,描述结构#116)
描述结构#116"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#117""(描述结构#116,收集初值#118)
收集初值#118"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#119""(描述结构#116,收集顺序#120)
收集顺序#120"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#121""(收集顺序#120,整理流程2#122)
整理流程2#122"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)->_求解}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#123""(整理流程2#122,入口顺序#124)
入口顺序#124"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]


"(,)
的#125""(收集顺序#120,整理流程#126)
整理流程#126"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#127""(收集顺序#120,保存#128)
保存#128"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#129""(描述结构#116,保存#130)
保存#130"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)

"(,)
的#131""(生成互动网页#0,召唤规则#132)
召唤规则#132"\"\"\"
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"生成互动网页\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)

## end
#713, 251:
"""
->+生成结构(_题目,_代码)->+的(操作,+生成结构)

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"生成互动网页"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成代码(_题目,_代码)->+的(操作,+生成代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#715, 57173:
结构转Smilei代码#0"
召唤规则:...
降临规则:...


"(,)
的#1""(结构转Smilei代码#0,降临规则#2)
降临规则#2"+[粘贴](,降临规则)

设置变量:...

代码结构:...
代码结构_1D:...
将条目\"代码结构\"复制为条目\"代码结构_1D\"
+[新建阅读窗口](,代码结构)
+[新建阅读窗口](,代码结构_1D)

整理代码:...

上传文件夹:...
本地模拟:...
将条目\"上传文件夹\"复制为条目\"本地模拟\"

整理结构:...
将'上传文件夹'的\"_凭依\"替换为\"_媒介\"
+[新建阅读窗口](,代码结构)

"(,)
的#3""(降临规则#2,整理结构#4)
整理结构#4"\"\"\"

\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->的(_凭依,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)



"(,)
的#5""(降临规则#2,本地模拟#6)
本地模拟#6"\"\"\"
创建文件夹:...
P代码:...
+[修改天使]

\"\"\"


+本地模拟(_媒介,_凭依)->+[del](,+本地模拟)...
->的(本地模拟,创建文件夹)->的(本地模拟,P代码)...

->[]{
    []:->的(_媒介,地址)->地址,
    ->+的(_媒介,+地址)->+地址\"/home/xiantao/Documents/PIC/output\"
}->的(_媒介,地址#0)...

->+[模板文本](创建文件夹,+[命令行]#0)->+[命令行]#0->+[显示](,+[命令行]#0)...
    ->+[.](+[模板文本],地址#0)...

->[]{
    []=>的(_凭依,_文件)->_文件=>+[保存文本](,_文件)
}...

->+[python](Python,)->+[code](+[python],P代码)...
->+[.]\"address\"(+[python],地址#0)



"(,)
的#7""(本地模拟#6,P代码#8)
P代码#8"\"\"\"
记住\"Python\"
保存:...

print(address,code_2)

\"\"\"
import subprocess as sp
import os

sim_folder=\"/home/xiantao/Documents/sim_output/sim_folder_smilei\"

code=\"nautilus %s\"%(sim_folder)
t_code=code.split(' ')
p=sp.Popen(t_code)

code_2=\"cd %s;~/Documents/PIC/Smilei/Smilei/smilei %s/run.py\"%(sim_folder,address)
os.system(code_2)


"(,)
的#9""(P代码#8,保存#10)
保存#10"\"\"\"
记住\"Python\"


\"\"\"
import subprocess as sp
code=\"nautilus %s\"%(address)
t_code=code.split(' ')
p=sp.Popen(t_code)




"(,)
的#11""(本地模拟#6,创建文件夹#12)
创建文件夹#12"mkdir %地址/"(,)
的#13""(降临规则#2,代码结构_1D#14)
代码结构_1D#14"\"\"\"
描述结构:...
库:...

\"\"\"
+代码结构_1D(_媒介,_凭依)->+[del](,+代码结构_1D)...
->的(代码结构_1D,描述结构)->的(代码结构_1D,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}


"(,)
的#15""(代码结构_1D#14,库#16)
库#16"

整体结构:...
+[新建阅读窗口](,整体结构)

框架代码:...
+[新建阅读窗口](,框架代码)
探测代码:...
+[新建阅读窗口](,探测代码)

电子代码:...
光束代码:...
外场代码:...
在选择区域中, 将'框架代码'的\"nt\"替换为\"dt\"
将'光束代码'的\"电子\"替换为\"光束\"
+[新建阅读窗口](,电子代码)

整理光束:...
将'整理光束'的\"_光束\"替换为\"注入方式\"

"(,)
的#17""(库#16,探测代码#18)
探测代码#18"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
输出

\"\"\"
+探测代码(_探测,_凭依)->+[del](,+探测代码)...
->的(探测代码,描述结构)->的(探测代码,库)...

->.\"媒介\"(+探测代码,_媒介)...

->+[code]([想],描述结构)->[想](,_探测)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_探测,_凭依)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}



"(,)
的#19""(探测代码#18,库#20)
库#20"+[删除结构](,库)

输出场:...
将'输出场'的\"输出场间隔\"替换为\"探测间隔\"
输出png:...
将条目\"输出场\"复制为条目\"输出png\"

输出能谱:...
将条目\"输出png\"复制为条目\"输出能谱\"

"(,)
的#21""(库#20,输出场#22)
输出场#22"\"\"\"
P代码:...
M代码:...
NS模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+输出场(_探测,_凭依)->+[del](,+输出场)...
->的(输出场,NS模板)->的(输出场,P代码)...

->的(_凭依,代码)->插入(代码,)->的(插入,探测)...
->+[文本结构_插入尾部](探测,+节点)...

->+[模板文本](NS模板,+节点)->+[.]\"探测类型\"(+[模板文本],+[临时文本])...
->Python->+[临时文本]\"Rho\"->[]{
    []:->的(_探测,探测类型)->探测类型(,)...
        ->+[code]([python],P代码)->+[.]\"type_txt\"([python],探测类型)...
        ->[python](Python,+[临时文本]),
    ->[]
}...
->[]{
    []:->的(_探测,探测间隔)->探测间隔->+[.](+[模板文本],探测间隔),
    ->+[.]\"探测间隔\"(+[模板文本],+[临时文本])->+[临时文本]\"200\"
}


"(,)
的#23""(输出场#22,NS模板#24)
NS模板#24"
DiagFields(
    fields = [%探测类型],
    every = %探测间隔,
)
"(,)
的#25""(输出场#22,P代码#26)
P代码#26"\"\"\"
记住\"Python\"
print('a,b'.split(','))
print(type_txt,list_txt)

\"\"\"

list_txt=type_txt.split(',')
for i in range(len(list_txt)):
    txt=list_txt[i]
    list_txt[i]=\" '%s'\"%(txt)
ans=','.join(list_txt)+\" \"

"(,)
的#27""(库#20,输出png#28)
输出png#28""(,)
的#29""(库#20,输出能谱#30)
输出能谱#30""(,)
的#31""(探测代码#18,描述结构#32)
描述结构#32"\"\"\"


\"\"\"
+描述结构(,_探测)->+操作(+描述结构,)...

->的(_探测,探测类型)...
->[]{
    []:->[==]\"png\"(,探测类型)->+输出png(,_探测)->+的(+操作,+输出png),
    ->[==]\"能谱\"(,探测类型)->+输出能谱(,_探测)->+的(+操作,+输出能谱),
    ->+输出场(,_探测)->+的(+操作,+输出场)
}

"(,)
的#33""(库#16,整理光束#34)
整理光束#34"\"\"\"
描述结构:...
库:...

\"\"\"
+整理光束(,_凭依)->+[del](,+整理光束)...
->的(整理光束,描述结构)->的(整理光束,库)...

->的(_凭依,incidentField)->的(incidentField,插入)...
    ->的(插入,注入方式)...

->+[code]([想],描述结构)->[想](注入方式,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}
"(,)
的#35""(整理光束#34,库#36)
库#36"

操作2:...
操作1:...
操作0:...



"(,)
的#37""(库#36,操作2#38)
操作2#38"\"\"\"


\"\"\"
+操作2(_X,_凭依)->+[del](,+操作2)...

->顺序(_X,)->的(_X,顺序)->+[修改内容]\", \"(,顺序)...
    ->+[修改内容]\"MakeSeq_t<%内容>\"(,_X)...
->+插入(_X,)->+的(_X,+插入)->+的(+插入,+内容)...
->+[左连](顺序,+内容)->+[左连](的,+内容)


"(,)
的#39""(库#36,操作1#40)
操作1#40"\"\"\"


\"\"\"
+操作1(_X,_凭依)->+[del](,+操作1)
"(,)
的#41""(库#36,操作0#42)
操作0#42"\"\"\"


\"\"\"
+操作0(_X,_凭依)->+[del](,+操作0)...

->+[修改内容]\"profiles::None\"(,_X)
"(,)
的#43""(整理光束#34,描述结构#44)
描述结构#44"\"\"\"


\"\"\"

+描述结构(注入方式,_凭依)->+操作(+描述结构,)...

->插入(注入方式,)...
->[]{
    []=>的(插入,_re)->_re\"[XYZ]M\"=>[]:
        ->顺序(_re,)->的(顺序,_节点)->_节点(,_节点1)...
            ->+操作2(_re,_凭依)->+的(+操作,+操作2),
        ->顺序(_re,)...
            ->+操作1(_re,_凭依)->+的(+操作,+操作1),
        ->+操作0(_re,_凭依)->+的(+操作,+操作0)
}
"(,)
的#45""(库#16,整体结构#46)
整体结构#46"\"\"\"
模板:...
myscript:...
M代码:...

\"\"\"
+整体结构(_媒介,_凭依)->+[del](,+整体结构)...
->的(整体结构,M代码)->的(整体结构,模板)->的(整体结构,myscript)...

->[]{
    []:->的(_媒介,地址)->地址,
    ->+的(_媒介,+地址)->+地址\"/home/xiantao/Documents/PIC/output\"
}->的(_媒介,地址#0)->+[修改内容](地址#0,+[临时文本])...

->+的(_凭依,+myscript)->+的(+myscript,+地址#m)...
    ->+[修改内容]\"%s/myscript.txt\"(地址#0,+地址#m)...
->+的(_凭依,+info)->+的(+info,+地址#f)...
    ->+[修改内容]\"%s/info.txt\"(地址#0,+地址#f)->+[修改内容](_媒介,+info)...
->+的(_凭依,+run)->+的(+run,+地址#r)...
    ->+[修改内容]\"%s/run.py\"(地址#0,+地址#r)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->[]{
    []:->的(_场景,参考波长)->参考波长->+[.]\"lm_r\"(+[matlab],参考波长),
    ->+[.]\"lm_r\"(+[matlab],+波长)->+波长\"800e-9\"->+[del](,+波长)
}...

->+[修改内容](myscript,+myscript)...
->+的(_凭依,+代码)->+[修改内容](模板,+代码)...
    ->+[文本结构_插入](+代码,+地址)->+[修改内容](+地址#r,+地址)...
    ->+[文本结构_插入](+代码,+空间)->+[文本结构_插入](+代码,+窗口)...
    ->+[文本结构_插入](+代码,+光束)->+[文本结构_插入](+代码,+粒子)...
    ->+[文本结构_插入](+代码,+外场)...
    ->+[文本结构_插入](+代码,+探测)->+[文本结构_插入](+代码,+追踪)



"(,)
的#47""(整体结构#46,myscript#48)
myscript#48"#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     \"sbatch milan.serial.slurm\" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute \"module load launcher\" 
#       followed by \"module help launcher\".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/smilei run.py


"(,)
的#49""(整体结构#46,模板#50)
模板#50"\"\"\"
地址::%地址
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

\"\"\"
import numpy as np

%空间
%窗口

LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)

%粒子
%光束
%外场
%探测
%追踪


DiagPerformances(
    every = 50,
)


"(,)
的#51""(整体结构#46,M代码#52)
M代码#52"%{
+[M函数](,M代码)
归一化单位::https://smileipic.github.io/Smilei/Understand/units.html
+[打开网页](,归一化单位)

单位定义(html):...
+[新建阅读窗口](,单位定义)
lm_r=800e-9
B_r
%}
pt0=[0,0];
physics_constant;
dx=0.125;
dt=0.99*dx;
ny=40;
npatch_x=128;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;
E_r=m_e.*c.*omega_r./e;
B_r=m_e.*omega_r./e;
N_r=epsilon_0.*m_e.*omega_r.^(2)./e.^(2);
J_r=c.*e.*N_r;

n_NS_0=0;
"(,)
的#53""(库#16,电子代码#54)
电子代码#54"\"\"\"
描述结构:...
库:...

\"\"\"
+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->.\"媒介\"(+电子代码,_媒介)...

->+[code]([想],描述结构)->[想](_电子,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}


"(,)
的#55""(电子代码#54,描述结构#56)
描述结构#56"\"\"\"
P代码:...

\"\"\"
+描述结构(_电子,_凭依)->+操作(+描述结构,)...

->+[临时文本]->Python->[]{
    []:->不注入(_电子,),
    ->的(_电子,速度方向)->速度方向->+[code]([python],P代码)...
        ->+[.]\"v\"([python],速度方向)->[python](Python,+[临时文本])...
        ->[]{
            []:->[==]\"xmin\"(,+[临时文本])->+操作1(_电子,_凭依)->+的(+操作,+操作1),
            ->[==]\"xmax\"(,+[临时文本])->+操作2(_电子,_凭依)->+的(+操作,+操作2),
            ->+操作0(_电子,_凭依)->+的(+操作,+操作0)
        },
    ->+操作0(_电子,_凭依)->+的(+操作,+操作0)
}


"(,)
的#57""(描述结构#56,P代码#58)
P代码#58"\"\"\"
记住\"Python\"
print(v)

\"\"\"
state=True

if v[0]>1e-7:
    ans=\"xmin\"
elif v[0]<-1e-7:
    ans=\"xmax\"
else:
    ans=\"none\"
"(,)
的#59""(电子代码#54,库#60)
库#60"

操作0:...
操作1:...
操作2:...
将条目\"操作0\"复制为条目\"操作2\"
"(,)
的#61""(库#60,操作1#62)
操作1#62"\"\"\"
模板:...
M代码:...
->+[.](+[模板文本],上升沿)->+[.](+[模板文本],宽度)
->的(_电子,上升沿)

\"\"\"
+操作1(_电子,_凭依)->+[del](,+操作1)...
->的(操作1,模板)->的(操作1,M代码)...

->.\"媒介\"(+操作1,_媒介)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->的(_凭依,代码)->插入(代码,)->的(插入,粒子)...
->+[文本结构_插入尾部](粒子,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"N0\"(+[matlab],数密度)...
->+[模板文本](模板,+节点)...
->+[.](+[模板文本],+N_e)->+[o](+[matlab],+N_e)->+[del](,+N_e)...
->[]{
    []:->[==](,_电子)->+[.](+[模板文本],变量),
    ->+[.]\"变量\"(+[模板文本],_电子)
}...
->[]{
    []:->的(_电子,电荷)->电荷->+[.]\"charge\"(+[模板文本],电荷),
    ->+[临时文本]\"-1.0\"->+[.]\"charge\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_电子,beta)->beta->的(_电子,速度方向)->速度方向(,)...
        ->+[.](+[matlab],beta)->+[.]\"v0\"(+[matlab],速度方向)...
        ->+[o](+[matlab],+v)->+[.](+[模板文本],+v)->+[del](,+v),

    ->+[临时文本]\"0.,0.,0.\"->+[.]\"v\"(+[模板文本],+[临时文本])...
        ->+[.]\"v0\"(+[matlab],+[临时文本])...
        ->+[临时文本]\"0.\"->+[.]\"beta\"(+[matlab],+[临时文本])
}



"(,)
的#63""(操作1#62,模板#64)
模板#64"
Species(
    name = \"%变量\",
    position_initialization = \"regular\",
    momentum_initialization = \"cold\",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = %charge,
    number_density = %N_e, 

    mean_velocity = [%v],
    temperature = [0.0],
    pusher = \"boris\",
    time_frozen = 0.0,
    boundary_conditions = [
        [\"remove\", \"remove\"],
#        [\"periodic\", \"periodic\"],
    ],
)

ParticleInjector(
    species   = \"%变量\",
    box_side  = \"xmin\",
    time_envelope = 1.,
    number_density = %N_e, 
)



"(,)
的#65""(操作1#62,M代码#66)
M代码#66"%{
N_r
%}

N_e=N0/N_r;
v=beta*v0/norm(v0);


"(,)
的#67""(库#60,操作2#68)
操作2#68"\"\"\"
模板:...
M代码:...
->+[.](+[模板文本],上升沿)->+[.](+[模板文本],宽度)
->的(_电子,上升沿)

\"\"\"
+操作2(_电子,_凭依)->+[del](,+操作2)...
->的(操作2,模板)->的(操作2,M代码)...

->.\"媒介\"(+操作2,_媒介)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->的(_凭依,代码)->插入(代码,)->的(插入,粒子)...
->+[文本结构_插入尾部](粒子,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"N0\"(+[matlab],数密度)...
->+[模板文本](模板,+节点)...
->+[.](+[模板文本],+N_e)->+[o](+[matlab],+N_e)->+[del](,+N_e)...
->[]{
    []:->[==](,_电子)->+[.](+[模板文本],变量),
    ->+[.]\"变量\"(+[模板文本],_电子)
}...
->[]{
    []:->的(_电子,电荷)->电荷->+[.]\"charge\"(+[模板文本],电荷),
    ->+[临时文本]\"-1.0\"->+[.]\"charge\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_电子,beta)->beta->的(_电子,速度方向)->速度方向(,)...
        ->+[.](+[matlab],beta)->+[.]\"v0\"(+[matlab],速度方向)...
        ->+[o](+[matlab],+v)->+[.](+[模板文本],+v)->+[del](,+v),

    ->+[临时文本]\"0.,0.,0.\"->+[.]\"v\"(+[模板文本],+[临时文本])...
        ->+[.]\"v0\"(+[matlab],+[临时文本])...
        ->+[临时文本]\"0.\"->+[.]\"beta\"(+[matlab],+[临时文本])
}



"(,)
的#69""(操作2#68,M代码#70)
M代码#70"%{
N_r
%}

N_e=N0/N_r;
v=beta*v0/norm(v0);


"(,)
的#71""(操作2#68,模板#72)
模板#72"
Species(
    name = \"%变量\",
    position_initialization = \"regular\",
    momentum_initialization = \"cold\",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = %charge,
    number_density = %N_e, 

    mean_velocity = [%v],
    temperature = [0.0],
    pusher = \"boris\",
    time_frozen = 0.0,
    boundary_conditions = [
        [\"remove\", \"remove\"],
#        [\"periodic\", \"periodic\"],
    ],
)


ParticleInjector(
    species   = \"%变量\",
    box_side  = \"xmax\",
    time_envelope = 1.,
    number_density = %N_e, 
)
"(,)
的#73""(库#60,操作0#74)
操作0#74"\"\"\"
模板:...
M代码:...
->+[.](+[模板文本],上升沿)->+[.](+[模板文本],宽度)
->的(_电子,上升沿)

\"\"\"
+操作0(_电子,_凭依)->+[del](,+操作0)...
->的(操作0,模板)->的(操作0,M代码)...

->.\"媒介\"(+操作0,_媒介)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->的(_凭依,代码)->插入(代码,)->的(插入,粒子)...
->+[文本结构_插入尾部](粒子,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"N0\"(+[matlab],数密度)...
->+[模板文本](模板,+节点)...
->+[.](+[模板文本],+N_e)->+[o](+[matlab],+N_e)->+[del](,+N_e)...
->[]{
    []:->[==](,_电子)->+[.](+[模板文本],变量),
    ->+[.]\"变量\"(+[模板文本],_电子)
}...
->[]{
    []:->的(_电子,电荷)->电荷->+[.]\"charge\"(+[模板文本],电荷),
    ->+[临时文本]\"-1.0\"->+[.]\"charge\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_电子,beta)->beta->的(_电子,速度方向)->速度方向(,)...
        ->+[.](+[matlab],beta)->+[.]\"v0\"(+[matlab],速度方向)...
        ->+[o](+[matlab],+v)->+[.](+[模板文本],+v)->+[del](,+v),

    ->的(_电子,速度)->速度->+[.]\"v\"(+[模板文本],速度)...
        ->+[临时文本]\"-1\"...
        ->+[.]\"beta\"(+[matlab],+[临时文本])->+[.]\"v0\"(+[matlab],速度),

    ->+[临时文本]\"0.,0.,0.\"->+[.]\"v\"(+[模板文本],+[临时文本])...
        ->+[.]\"v0\"(+[matlab],+[临时文本])...
        ->+[临时文本]\"0.\"->+[.]\"beta\"(+[matlab],+[临时文本])
}



"(,)
的#75""(操作0#74,模板#76)
模板#76"
Species(
    name = \"%变量\",
    position_initialization = \"regular\",
    momentum_initialization = \"cold\",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = %charge,
    number_density = %N_e, 

    mean_velocity = [%v],
    temperature = [0.0],
    pusher = \"boris\",
    time_frozen = 0.0,
    boundary_conditions = [
        [\"remove\", \"remove\"],
#        [\"periodic\", \"periodic\"],
    ],
)
"(,)
的#77""(操作0#74,M代码#78)
M代码#78"%{
N_r
%}

N_e=N0/N_r;
v=beta*v0/norm(v0);


"(,)
的#79""(库#16,光束代码#80)
光束代码#80"\"\"\"
描述结构:...
库:...

\"\"\"
+光束代码(_光束,_凭依)->+[del](,+光束代码)...
->的(光束代码,描述结构)->的(光束代码,库)...

->.(+光束代码,_媒介)...
->+[code]([想],描述结构)->[想](_光束,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)...
        ->+[.]\"媒介\"(+[做],_媒介)
}
"(,)
的#81""(光束代码#80,库#82)
库#82"
操作1:...
将条目\"操作0\"复制为条目\"操作1\"

操作0:...
将'操作0'的\"电子\"替换为\"光束\"
+[新建阅读窗口](,操作0)

"(,)
的#83""(库#82,操作1#84)
操作1#84"\"\"\"
M代码:...
模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+操作1(_光束,_凭依)->+[del](,+操作1)...
->的(操作1,M代码)->的(操作1,模板)...

->的(_凭依,代码)->插入(代码,)->的(插入,光束)...
->+[文本结构_插入尾部](光束,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->[]{
    []:->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#3)...
        ->+[.]\"pt3\"(+[matlab],空间点#3),
    ->+[临时文本]\"0,0\"->+[.]\"pt3\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(_光束,腰宽)->腰宽->+[.]\"w_0\"(+[matlab],腰宽),
    ->+[.]\"w_0\"(+[matlab],+[临时文本])->+[临时文本]\"20e-6\"
}...
->[]{
    []:->的(_光束,展宽)->展宽->+[.]\"Dtau\"(+[matlab],展宽),
    ->+[.]\"Dtau\"(+[matlab],+[临时文本])->+[临时文本]\"20e-15\"
}...
->[]{
    []:->的(_光束,偏振态)->偏振态->+[.]\"E_polar0\"(+[matlab],偏振态),
    ->+[.]\"E_polar0\"(+[matlab],+[临时文本])->+[临时文本]\"0,1\"
}...
->[]{
    []:->的(_光束,a0)->a0->+[.]\"A0\"(+[matlab],a0),
    ->+[.]\"A0\"(+[matlab],+[临时文本])->+[临时文本]\"1\"
}...
->[]{
    []:->的(_光束,波长)->波长->+[.]\"lm0\"(+[matlab],波长),
    ->+[.]\"lm0\"(+[matlab],+[临时文本])->+[临时文本]\"800e-9\"
}...

->+[模板文本](,+[增加内容])->+[增加内容](,+节点)...
->+[code](+[模板文本],模板)...
->+[.](+[模板文本],+waist)->+[o](+[matlab],+waist)->+[del](,+waist)...
->+[.](+[模板文本],+dtau)->+[o](+[matlab],+dtau)->+[del](,+dtau)...
->+[.](+[模板文本],+focus_x)->+[o](+[matlab],+focus_x)->+[del](,+focus_x)...
->+[.](+[模板文本],+focus_y)->+[o](+[matlab],+focus_y)->+[del](,+focus_y)...
->+[.](+[模板文本],+a0)->+[o](+[matlab],+a0)->+[del](,+a0)...
->+[.](+[模板文本],+omega)->+[o](+[matlab],+omega)->+[del](,+omega)...

->+[.](+[模板文本],+p_theta)->+[o](+[matlab],+p_theta)->+[del](,+p_theta)...
->+[.](+[模板文本],+E_phase)->+[o](+[matlab],+E_phase)->+[del](,+E_phase)...

->[]{
    []:->的(_光束,输入边)->输入边->+[.](+[模板文本],输入边),
    ->+[.]\"输入边\"(+[模板文本],+[临时文本])->+[临时文本]\"xmin\"
}

"(,)
的#85""(操作1#84,M代码#86)
M代码#86"%{
+[M函数](,M代码)
偏振态::https://smileipic.github.io/Smilei/Use/namelist.html#lasers
偏振态2::https://en.wikipedia.org/wiki/Elliptical_polarization
pt0=[0,0]
%}

waist=w_0/L_r;
dtau=Dtau/T_r;
focus_x=(pt3(1)-pt0(1))/L_r;
focus_y=(pt3(2)-pt0(2))/L_r+Ly/2;

E_polar=abs(E_polar0)/norm(E_polar0);
p_theta=acos(E_polar(1))*sign_1(E_polar(2));

E_Dr=E_polar0(1)/E_polar0(2);
E_Dr=E_Dr/abs(E_Dr);
E_phase=acos(real(E_Dr))*sign_1(imag(E_Dr))/pi*2;
if isnan(E_phase)
    E_phase=0;
end

omega=lm_r/lm0;

if isempty(A0)
    a0=1.;
else
    a0=A0;
end

%{
+[M函数](,M代码)
%}"(,)
的#87""(操作1#84,模板#88)
模板#88"LaserPlanar1D(
    box_side                = \"%输入边\",
    a0                            = %a0,
    omega                    = %omega,
    polarization_phi  = %p_theta,
    ellipticity               = %E_phase,
    time_envelope     = tgaussian(start=0.0, duration=%dtau*4., fwhm=%dtau, center=%dtau*2., order=2.0, )
)

"(,)
的#89""(库#82,操作0#90)
操作0#90"\"\"\"
M代码:...
模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+操作0(_光束,_凭依)->+[del](,+操作0)...
->的(操作0,M代码)->的(操作0,模板)...

->的(_凭依,代码)->插入(代码,)->的(插入,光束)...
->+[文本结构_插入尾部](光束,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->[]{
    []:->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#3)...
        ->+[.]\"pt3\"(+[matlab],空间点#3),
    ->+[临时文本]\"0,0\"->+[.]\"pt3\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(_光束,腰宽)->腰宽->+[.]\"w_0\"(+[matlab],腰宽),
    ->+[.]\"w_0\"(+[matlab],+[临时文本])->+[临时文本]\"20e-6\"
}...
->[]{
    []:->的(_光束,展宽)->展宽->+[.]\"Dtau\"(+[matlab],展宽),
    ->+[.]\"Dtau\"(+[matlab],+[临时文本])->+[临时文本]\"20e-15\"
}...
->[]{
    []:->的(_光束,偏振态)->偏振态->+[.]\"E_polar0\"(+[matlab],偏振态),
    ->+[.]\"E_polar0\"(+[matlab],+[临时文本])->+[临时文本]\"0,1\"
}...
->[]{
    []:->的(_光束,a0)->a0->+[.]\"A0\"(+[matlab],a0),
    ->+[.]\"A0\"(+[matlab],+[临时文本])->+[临时文本]\"1\"
}...
->[]{
    []:->的(_光束,波长)->波长->+[.]\"lm0\"(+[matlab],波长),
    ->+[.]\"lm0\"(+[matlab],+[临时文本])->+[临时文本]\"800e-9\"
}...

->+[模板文本](,+[增加内容])->+[增加内容](,+节点)...
->+[code](+[模板文本],模板)...
->+[.](+[模板文本],+waist)->+[o](+[matlab],+waist)->+[del](,+waist)...
->+[.](+[模板文本],+dtau)->+[o](+[matlab],+dtau)->+[del](,+dtau)...
->+[.](+[模板文本],+focus_x)->+[o](+[matlab],+focus_x)->+[del](,+focus_x)...
->+[.](+[模板文本],+focus_y)->+[o](+[matlab],+focus_y)->+[del](,+focus_y)...
->+[.](+[模板文本],+a0)->+[o](+[matlab],+a0)->+[del](,+a0)...
->+[.](+[模板文本],+omega)->+[o](+[matlab],+omega)->+[del](,+omega)...

->+[.](+[模板文本],+p_theta)->+[o](+[matlab],+p_theta)->+[del](,+p_theta)...
->+[.](+[模板文本],+E_phase)->+[o](+[matlab],+E_phase)->+[del](,+E_phase)...

->[]{
    []:->的(_光束,输入边)->输入边->+[.](+[模板文本],输入边),
    ->+[.]\"输入边\"(+[模板文本],+[临时文本])->+[临时文本]\"xmin\"
}

"(,)
的#91""(操作0#90,模板#92)
模板#92"LaserPlanar1D(
    box_side                = \"%输入边\",
    a0                            = %a0,
    omega                    = %omega,
    polarization_phi  = %p_theta,
    ellipticity               = %E_phase,
    time_envelope     = tconstant(),
)

"(,)
的#93""(操作0#90,M代码#94)
M代码#94"%{
+[M函数](,M代码)
偏振态::https://smileipic.github.io/Smilei/Use/namelist.html#lasers
偏振态2::https://en.wikipedia.org/wiki/Elliptical_polarization
pt3
%}

waist=w_0/L_r;
dtau=Dtau/T_r;
focus_x=(pt3(1)-pt0(1))/L_r;
focus_y=(pt3(2)-pt0(2))/L_r+Ly/2;

E_polar=abs(E_polar0)/norm(E_polar0);
p_theta=acos(E_polar(1))*sign_1(E_polar(2));

E_Dr=E_polar0(1)/E_polar0(2);
E_Dr=E_Dr/abs(E_Dr);
E_phase=acos(real(E_Dr))*sign_1(imag(E_Dr))/pi*2;
if isnan(E_phase)
    E_phase=0;
end

omega=lm_r/lm0;

if isempty(A0)
    a0=1.;
else
    a0=A0;
end

%{
+[M函数](,M代码)
%}"(,)
的#95""(光束代码#80,描述结构#96)
描述结构#96"\"\"\"

\"\"\"
+描述结构(_光束,_凭依)->+操作(+描述结构,)...

->_光束->[]{
    []:->的(_光束,展宽)->展宽->[]{
        []:->[==]\"inf\"(,展宽)->+操作0(_光束,_凭依)->+的(+操作,+操作0),
        ->[==]\"Inf\"(,展宽)->+操作0(_光束,_凭依)->+的(+操作,+操作0),
        ->+操作1(_光束,_凭依)->+的(+操作,+操作1)
    },
    ->+操作0(_光束,_凭依)->+的(+操作,+操作0)
}


"(,)
的#97""(库#16,框架代码#98)
框架代码#98"\"\"\"
模板:...
模板2:...
M代码:...
+[新建阅读窗口](,M代码)

保存:...
dtt

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,M代码)->的(框架代码,模板)->的(框架代码,模板2)...

->的(_凭依,代码)->插入(代码,)->的(插入,空间#0)->的(插入,窗口#0)...

->的(_媒介,模拟空间)...
    ->的(模拟空间,宽度#0)->的(模拟空间,长度#0)...
->的(_媒介,窗口)...
    ->的(窗口,宽度#1)->的(窗口,长度#1)->的(窗口,启动时间)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"W0\"(+[matlab],宽度#0)->+[.]\"W1\"(+[matlab],宽度#1)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"Dt\"(+[matlab],启动时间)...

->[]{
    []:->的(窗口,启动时间)->启动时间->+[.]\"Dt\"(+[matlab],启动时间),
    ->+[临时文本]\"-1\"->+[.]\"Dt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"Depth\"(+[matlab],深度),
    ->+[.]\"Depth\"(+[matlab],长度#1)
}...
->[]{
    []:->的(模拟空间,时间步长)->时间步长->+[.]\"dtt\"(+[matlab],时间步长),
    ->+[临时文本]\"1.39e-16\"->+[.]\"dtt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,格点尺寸)->格点尺寸->+[.]\"dsiz\"(+[matlab],格点尺寸),
    ->+[临时文本]\"4.43e-8,1.772e-7,1.772e-7\"->+[.]\"dsiz\"(+[matlab],+[临时文本])
}...

->+[模板文本](模板,空间#0)...
->+[.](+[模板文本],+dx)->+[o](+[matlab],+dx)->+[del](,+dx)...
->+[.](+[模板文本],+dy)->+[o](+[matlab],+dy)->+[del](,+dy)...
->+[.](+[模板文本],+dz)->+[o](+[matlab],+dz)->+[del](,+dz)...
->+[.](+[模板文本],+dt)->+[o](+[matlab],+dt)->+[del](,+dt)...
->+[.](+[模板文本],+nx)->+[o](+[matlab],+nx)->+[del](,+nx)...
->+[.](+[模板文本],+ny)->+[o](+[matlab],+ny)->+[del](,+ny)...
->+[.](+[模板文本],+nz)->+[o](+[matlab],+nz)->+[del](,+nz)...
->+[.](+[模板文本],+nt)->+[o](+[matlab],+nt)->+[del](,+nt)...
->+[.](+[模板文本],+npatch_x)->+[o](+[matlab],+npatch_x)->+[del](,+npatch_x)...
->+[.](+[模板文本],+Lx)->+[o](+[matlab],+Lx)->+[del](,+Lx)...
->+[.](+[模板文本],+Ly)->+[o](+[matlab],+Ly)->+[del](,+Ly)...

->[]{
    []:->+[.]\"W0\"([matlab],宽度#0)->+[.]\"W1\"([matlab],宽度#1)...
        ->[matlab]\"state=(W0-W1==0);\"(Matlab,),

    ->+[模板文本](模板2,窗口#0)...
        ->+[.](+[模板文本],+启动时间)->+[o]\"time_start\"(+[matlab],+启动时间)...
        ->+[del](,+启动时间)
}


"(,)
的#99""(框架代码#98,M代码#100)
M代码#100"%{
+[M函数](,M代码)
nt
%}

physics_constant;

dt=dtt/T_r;
dx=dsiz(1)/L_r;
dy=dsiz(2)/L_r;
dz=dsiz(3)/L_r;
if dt>dx
    dt=dx*0.99;
end

nx=W1/dx/L_r;
if nx>128
    npatch_x=128;
else
    npatch_x=4;
end
nx=round(nx/npatch_x)*npatch_x;
Lx=nx*dx;



Ly=L1/L_r;
ny=Ly/dy;

nx=int32(nx);
ny=int32(ny);
npatch_x=int32(npatch_x);

v0=1;
if Dt==-1
    Dt=W1/c;
end
t_tol=Dt+(W0-W1)/c;
nt=int32(t_tol/T_r/dt);
time_start=Dt/T_r;



%{
+[M函数](,M代码)
%}"(,)
的#101""(框架代码#98,模板#102)
模板#102"
dt = %dt
nx = %nx
Lx = %Lx
Ly = %Ly
npatch_x = %npatch_x

Main(
    geometry = \"1Dcartesian\",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = %nt*dt,

    cell_length  = [%dx],
    grid_length = [Lx],

    number_of_patches = [npatch_x],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        [\"silver-muller\",\"silver-muller\"],
#        [\"periodic\", \"periodic\"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)
"(,)
的#103""(框架代码#98,模板2#104)
模板2#104"
MovingWindow(
    time_start = %启动时间,
    velocity_x = 1.0
)
"(,)
的#105""(框架代码#98,保存#106)
保存#106"\"\"\"
模板:...
模板2:...
M代码:...

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,M代码)->的(框架代码,模板)->的(框架代码,模板2)...

->的(_凭依,myscript)->插入(myscript,)->+[修改内容](模板,myscript)...
    ->+的(插入,+运行参数)->+的(插入,+移动窗口)->+的(插入,+输出)...
    ->+[修改内容](默认输出,+输出)...
->的(_凭依,grid)...

->的(_媒介,模拟空间)...
    ->的(模拟空间,宽度#0)->的(模拟空间,长度#0)...
->的(_媒介,窗口)...
    ->的(窗口,宽度#1)->的(窗口,长度#1)->的(窗口,启动时间)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"W0\"(+[matlab],宽度#0)->+[.]\"W1\"(+[matlab],宽度#1)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"Dt\"(+[matlab],启动时间)...

->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"Depth\"(+[matlab],深度),
    ->+[.]\"Depth\"(+[matlab],长度#1)
}...
->[]{
    []:->的(模拟空间,时间步长)->时间步长->+[.]\"dtt\"(+[matlab],时间步长),
    ->+[临时文本]\"1.39e-16\"->+[.]\"dtt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,格点尺寸)->格点尺寸->+[.]\"dsiz\"(+[matlab],格点尺寸),
    ->+[临时文本]\"4.43e-8,1.772e-7,1.772e-7\"->+[.]\"dsiz\"(+[matlab],+[临时文本])
}...

->+[模板文本](grid模板,grid)...
->+[.](+[模板文本],+dx)->+[o](+[matlab],+dx)->+[del](,+dx)...
->+[.](+[模板文本],+dy)->+[o](+[matlab],+dy)->+[del](,+dy)...
->+[.](+[模板文本],+dz)->+[o](+[matlab],+dz)->+[del](,+dz)...
->+[.](+[模板文本],+dt)->+[o](+[matlab],+dt)->+[del](,+dt)...

->+[模板文本](运行模板,+运行参数)...
->+[.](+[模板文本],+nx)->+[o](+[matlab],+nx)->+[del](,+nx)...
->+[.](+[模板文本],+ny)->+[o](+[matlab],+ny)->+[del](,+ny)...
->+[.](+[模板文本],+nz)->+[o](+[matlab],+nz)->+[del](,+nz)...
->+[.](+[模板文本],+nt)->+[o](+[matlab],+nt)->+[del](,+nt)...

->[]{
    []:->+[.]\"W0\"([matlab],宽度#0)->+[.]\"W1\"([matlab],宽度#1)...
        ->[matlab]\"state=(W0-W1==0);\"(Matlab,)...
        ->+[修改内容](单核模板,myscript),
    ->+顺序(+移动窗口,)->+[文本结构_插入尾部](+移动窗口,+节点)...
        ->+[模板文本](窗口模板,+节点)...
        ->+[.](+[模板文本],+启动时间)->+[o]\"start_point\"(+[matlab],+启动时间)...
        ->+[del](,+启动时间)
}


"(,)
的#107""(库#16,外场代码#108)
外场代码#108"\"\"\"
描述结构:...
库:...

\"\"\"
+外场代码(_外场,_凭依)->+[del](,+外场代码)...
->的(外场代码,描述结构)->的(外场代码,库)...

->.\"媒介\"(+外场代码,_媒介)...

->+[code]([想],描述结构)->[想](_外场,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)...
        =>.(_操作,_参数)=>+[.](+[做],+[临时文本])...
            ->[m_text](.,+[.])->[m_text](_参数,+[临时文本])
}


"(,)
的#109""(外场代码#108,描述结构#110)
描述结构#110"\"\"\"


\"\"\"
+描述结构(_外场,_凭依)->+操作(+描述结构,)...

->的(_外场,类型)->[]{
    []:->[==]\"电场\"(,类型)->+操作1(_外场,_凭依)->+的(+操作,+操作1),
    ->+操作0(_外场,_凭依)->+的(+操作,+操作0)
}


"(,)
的#111""(外场代码#108,库#112)
库#112"

操作1:...
操作0:...
将'操作0'的\"电子\"替换为\"外场\"

"(,)
的#113""(库#112,操作0#114)
操作0#114"\"\"\"
模板:...
M代码:...

\"\"\"
+操作0(_外场,_凭依)->+[del](,+操作0)...
->的(操作0,模板)->的(操作0,M代码)...

->的(_外场,场强)...

->的(_凭依,代码)->插入(代码,)->的(插入,外场)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"intensity\"(+[matlab],场强)...

->+[.]\"field\"([python],场强)->[python]\"state=True\"(Python,)...
->[]{
    []:->[python]\"state=np.abs(field[0])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+Bx)->+[o](+[matlab],+Bx)->+[del](,+Bx)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"Bx\",
    ->[]
}...

->[]{
    []:->[python]\"state=np.abs(field[1])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+By)->+[o](+[matlab],+By)->+[del](,+By)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"By\",
    ->[]
}...

->[]{
    []:->[python]\"state=np.abs(field[2])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+Bz)->+[o](+[matlab],+Bz)->+[del](,+Bz)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"Bz\",
    ->[]
}




"(,)
的#115""(操作0#114,模板#116)
模板#116"ExternalField(
    field=\"%类型\",
    profile=%val
)
"(,)
的#117""(操作0#114,M代码#118)
M代码#118"%{
N_r
%}

B_field=intensity/B_r;
Bx=B_field(1);
By=B_field(2);
Bz=B_field(3);



"(,)
的#119""(代码结构_1D#14,描述结构#120)
描述结构#120"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->[]{
    []=>的(_媒介,_实体)->_实体=>[]:
        ->的(_实体,数密度)...
            ->+电子代码(_实体,_凭依)->+的(+操作,+电子代码),
        ->的(_实体,场强)...
            ->+外场代码(_实体,_凭依)->+的(+操作,+外场代码),
        ->的(_实体,探测间隔)...
            ->+探测代码(_实体,_凭依)->+的(+操作,+探测代码),
        ->的(_实体,a0)->[]{[]=>[==]\"0\"(,a0)}...
            ->+光束代码(_实体,_凭依)->+的(+操作,+光束代码),
        ->[]
}...

->+框架代码(_媒介,_凭依)->+的(+操作,+框架代码)...
->+整体结构(_媒介,_凭依)->+的(+操作,+整体结构)

"(,)
的#121""(降临规则#2,整理代码#122)
整理代码#122"\"\"\"
内容:...

\"\"\"
+整理代码(_媒介,_凭依)->+[del](,+整理代码)...
->的(整理代码,内容)...
->+[修改内容](内容,_凭依)...

->[]{
    []:->的(_凭依,run)->run->的(_凭依,代码)->代码->+[结构转文本](代码,run)...
        ->+[删除结构](,代码)->+[del](,代码),
    ->[]
}


"(,)
的#123""(整理代码#122,内容#124)
内容#124"
run:...
info:...
myscript:...

+[保存文本](,myscript)

"(,)
的#125""(降临规则#2,设置变量#126)
设置变量#126"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_题目)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#127""(设置变量#126,描述结构#128)
描述结构#128"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_节点)->_节点{
            []:->的(_节点,波长)->波长,
            ->的(_节点,焦点位置)->焦点位置,
            ->的(_节点,数密度)->数密度
        }->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#129""(描述结构#128,P代码#130)
P代码#130"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"_varb\"
if \"探针\" in name:
    type=\"_probe\"
elif \"泵光\" in name or \"驱动光\" in name:
    type=\"_pump\"
elif \"光\" in name:
    type=\"_light\"
elif \"电子\" in name:
    type=\"_plasma\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#131""(降临规则#2,代码结构#132)
代码结构#132"\"\"\"
描述结构:...
库:...

\"\"\"
+代码结构(_媒介,_凭依)->+[del](,+代码结构)...
->的(代码结构,描述结构)->的(代码结构,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}


"(,)
的#133""(代码结构#132,描述结构#134)
描述结构#134"\"\"\"


\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->[]{
    []=>的(_媒介,_实体)->_实体=>[]:
        ->的(_实体,数密度)...
            ->+电子代码(_实体,_凭依)->+的(+操作,+电子代码),
        ->的(_实体,场强)...
            ->+外场代码(_实体,_凭依)->+的(+操作,+外场代码),
        ->的(_实体,探测间隔)...
            ->+探测代码(_实体,_凭依)->+的(+操作,+探测代码),
        ->的(_实体,a0)->[]{[]=>[==]\"0\"(,a0)}...
            ->+光束代码(_实体,_凭依)->+的(+操作,+光束代码),
        ->[]
}...

->+框架代码(_媒介,_凭依)->+的(+操作,+框架代码)...
->+整体结构(_媒介,_凭依)->+的(+操作,+整体结构)

"(,)
的#135""(代码结构#132,库#136)
库#136"

整体结构:...
+[新建阅读窗口](,整体结构)

框架代码:...
探测代码:...
+[新建阅读窗口](,探测代码)
+[新建阅读窗口](,框架代码)

电子代码:...
光束代码:...
外场代码:...
在选择区域中, 将'框架代码'的\"nt\"替换为\"dt\"
将'外场代码'的\"电子\"替换为\"外场\"
+[新建阅读窗口](,电子代码)
+[新建阅读窗口](,外场代码)


整理光束:...
将'整理光束'的\"_光束\"替换为\"注入方式\"

"(,)
的#137""(库#136,框架代码#138)
框架代码#138"\"\"\"
模板:...
模板2:...
M代码:...
+[新建阅读窗口](,M代码)

保存:...
dtt

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,M代码)->的(框架代码,模板)->的(框架代码,模板2)...

->的(_凭依,代码)->插入(代码,)->的(插入,空间#0)->的(插入,窗口#0)...

->的(_媒介,模拟空间)...
    ->的(模拟空间,宽度#0)->的(模拟空间,长度#0)...
->的(_媒介,窗口)...
    ->的(窗口,宽度#1)->的(窗口,长度#1)->的(窗口,启动时间)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"W0\"(+[matlab],宽度#0)->+[.]\"W1\"(+[matlab],宽度#1)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"Dt\"(+[matlab],启动时间)...

->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"Depth\"(+[matlab],深度),
    ->+[.]\"Depth\"(+[matlab],长度#1)
}...
->[]{
    []:->的(模拟空间,时间步长)->时间步长->+[.]\"dtt\"(+[matlab],时间步长),
    ->+[临时文本]\"1.39e-16\"->+[.]\"dtt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,格点尺寸)->格点尺寸->+[.]\"dsiz\"(+[matlab],格点尺寸),
    ->+[临时文本]\"4.43e-8,1.772e-7,1.772e-7\"->+[.]\"dsiz\"(+[matlab],+[临时文本])
}...

->+[模板文本](模板,空间#0)...
->+[.](+[模板文本],+dx)->+[o](+[matlab],+dx)->+[del](,+dx)...
->+[.](+[模板文本],+dy)->+[o](+[matlab],+dy)->+[del](,+dy)...
->+[.](+[模板文本],+dz)->+[o](+[matlab],+dz)->+[del](,+dz)...
->+[.](+[模板文本],+dt)->+[o](+[matlab],+dt)->+[del](,+dt)...
->+[.](+[模板文本],+nx)->+[o](+[matlab],+nx)->+[del](,+nx)...
->+[.](+[模板文本],+ny)->+[o](+[matlab],+ny)->+[del](,+ny)...
->+[.](+[模板文本],+nz)->+[o](+[matlab],+nz)->+[del](,+nz)...
->+[.](+[模板文本],+nt)->+[o](+[matlab],+nt)->+[del](,+nt)...
->+[.](+[模板文本],+npatch_x)->+[o](+[matlab],+npatch_x)->+[del](,+npatch_x)...
->+[.](+[模板文本],+Lx)->+[o](+[matlab],+Lx)->+[del](,+Lx)...
->+[.](+[模板文本],+Ly)->+[o](+[matlab],+Ly)->+[del](,+Ly)...

->[]{
    []:->+[.]\"W0\"([matlab],宽度#0)->+[.]\"W1\"([matlab],宽度#1)...
        ->[matlab]\"state=(W0-W1==0);\"(Matlab,),

    ->+[模板文本](模板2,窗口#0)...
        ->+[.](+[模板文本],+启动时间)->+[o]\"time_start\"(+[matlab],+启动时间)...
        ->+[del](,+启动时间)
}


"(,)
的#139""(框架代码#138,保存#140)
保存#140"\"\"\"
模板:...
模板2:...
M代码:...

\"\"\"
+框架代码(_媒介,_凭依)->+[del](,+框架代码)...
->的(框架代码,M代码)->的(框架代码,模板)->的(框架代码,模板2)...

->的(_凭依,myscript)->插入(myscript,)->+[修改内容](模板,myscript)...
    ->+的(插入,+运行参数)->+的(插入,+移动窗口)->+的(插入,+输出)...
    ->+[修改内容](默认输出,+输出)...
->的(_凭依,grid)...

->的(_媒介,模拟空间)...
    ->的(模拟空间,宽度#0)->的(模拟空间,长度#0)...
->的(_媒介,窗口)...
    ->的(窗口,宽度#1)->的(窗口,长度#1)->的(窗口,启动时间)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"W0\"(+[matlab],宽度#0)->+[.]\"W1\"(+[matlab],宽度#1)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"Dt\"(+[matlab],启动时间)...

->[]{
    []:->的(模拟空间,深度)->深度->+[.]\"Depth\"(+[matlab],深度),
    ->+[.]\"Depth\"(+[matlab],长度#1)
}...
->[]{
    []:->的(模拟空间,时间步长)->时间步长->+[.]\"dtt\"(+[matlab],时间步长),
    ->+[临时文本]\"1.39e-16\"->+[.]\"dtt\"(+[matlab],+[临时文本])
}...
->[]{
    []:->的(模拟空间,格点尺寸)->格点尺寸->+[.]\"dsiz\"(+[matlab],格点尺寸),
    ->+[临时文本]\"4.43e-8,1.772e-7,1.772e-7\"->+[.]\"dsiz\"(+[matlab],+[临时文本])
}...

->+[模板文本](grid模板,grid)...
->+[.](+[模板文本],+dx)->+[o](+[matlab],+dx)->+[del](,+dx)...
->+[.](+[模板文本],+dy)->+[o](+[matlab],+dy)->+[del](,+dy)...
->+[.](+[模板文本],+dz)->+[o](+[matlab],+dz)->+[del](,+dz)...
->+[.](+[模板文本],+dt)->+[o](+[matlab],+dt)->+[del](,+dt)...

->+[模板文本](运行模板,+运行参数)...
->+[.](+[模板文本],+nx)->+[o](+[matlab],+nx)->+[del](,+nx)...
->+[.](+[模板文本],+ny)->+[o](+[matlab],+ny)->+[del](,+ny)...
->+[.](+[模板文本],+nz)->+[o](+[matlab],+nz)->+[del](,+nz)...
->+[.](+[模板文本],+nt)->+[o](+[matlab],+nt)->+[del](,+nt)...

->[]{
    []:->+[.]\"W0\"([matlab],宽度#0)->+[.]\"W1\"([matlab],宽度#1)...
        ->[matlab]\"state=(W0-W1==0);\"(Matlab,)...
        ->+[修改内容](单核模板,myscript),
    ->+顺序(+移动窗口,)->+[文本结构_插入尾部](+移动窗口,+节点)...
        ->+[模板文本](窗口模板,+节点)...
        ->+[.](+[模板文本],+启动时间)->+[o]\"start_point\"(+[matlab],+启动时间)...
        ->+[del](,+启动时间)
}


"(,)
的#141""(框架代码#138,模板2#142)
模板2#142"
MovingWindow(
    time_start = %启动时间,
    velocity_x = 1.0
)
"(,)
的#143""(框架代码#138,模板#144)
模板#144"
dt = %dt
nx = %nx
Lx = %Lx
Ly = %Ly
npatch_x = %npatch_x

Main(
    geometry = \"2Dcartesian\",
    
    interpolation_order = 2,

    timestep = dt,
    simulation_time = int(%nt)*dt,

    cell_length  = [%dx, %dy],
    grid_length = [Lx, Ly],

    number_of_patches = [npatch_x, 1],

    cluster_width = nx/npatch_x,
    
    EM_boundary_conditions = [
        [\"silver-muller\",\"silver-muller\"],
        [\"silver-muller\",\"silver-muller\"],
#        [\"periodic\", \"periodic\"],
    ],
    
    solve_poisson = False,
    print_every = 200,

    random_seed = smilei_mpi_rank
)
"(,)
的#145""(框架代码#138,M代码#146)
M代码#146"%{
+[M函数](,M代码)
u0
%}

physics_constant;

dt=dtt/T_r;
dx=dsiz(1)/L_r;
dy=dsiz(2)/L_r;
dz=dsiz(3)/L_r;

dx_t=dx*dy/(dx+dy);
if dt>dx_t
    dt=dx_t*0.99;
end


nx=W1/dx/L_r;
if nx>128
    npatch_x=128;
else
    npatch_x=4;
end
nx=round(nx/npatch_x)*npatch_x;
Lx=nx*dx;


Ly=L1/L_r;
ny=Ly/dy;

nx=int32(nx);
ny=int32(ny);
npatch_x=int32(npatch_x);

v0=1;
t_tol=Dt+(W0-W1)/c;
nt=int32(t_tol/T_r/dt);
time_start=Dt/T_r;



%{
+[M函数](,M代码)
%}"(,)
的#147""(库#136,光束代码#148)
光束代码#148"\"\"\"
描述结构:...
库:...

\"\"\"
+光束代码(_光束,_凭依)->+[del](,+光束代码)...
->的(光束代码,描述结构)->的(光束代码,库)...

->.(+光束代码,_媒介)...
->+[code]([想],描述结构)->[想](_光束,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)...
        ->+[.]\"媒介\"(+[做],_媒介)
}
"(,)
的#149""(光束代码#148,描述结构#150)
描述结构#150"\"\"\"

\"\"\"
+描述结构(_光束,_凭依)->+操作(+描述结构,)...

->_光束->[]{
    []:->的(_光束,展宽)->展宽->[]{
        []:->[==]\"inf\"(,展宽)->+操作0(_光束,_凭依)->+的(+操作,+操作0),
        ->[==]\"Inf\"(,展宽)->+操作0(_光束,_凭依)->+的(+操作,+操作0),
        ->+操作1(_光束,_凭依)->+的(+操作,+操作1)
    },
    ->+操作0(_光束,_凭依)->+的(+操作,+操作0)
}


"(,)
的#151""(光束代码#148,库#152)
库#152"
操作1:...
将条目\"操作0\"复制为条目\"操作1\"

操作0:...
将'操作0'的\"电子\"替换为\"光束\"
+[新建阅读窗口](,操作0)

"(,)
的#153""(库#152,操作0#154)
操作0#154"\"\"\"
M代码:...
模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+操作0(_光束,_凭依)->+[del](,+操作0)...
->的(操作0,M代码)->的(操作0,模板)...

->的(_凭依,代码)->插入(代码,)->的(插入,光束)...
->+[文本结构_插入尾部](光束,+节点)...
->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->[]{
    []:->的(_光束,腰宽)->腰宽->+[.]\"w_0\"(+[matlab],腰宽),
    ->+[.]\"w_0\"(+[matlab],+[临时文本])->+[临时文本]\"20e-6\"
}...
->[]{
    []:->的(_光束,展宽)->展宽->+[.]\"Dtau\"(+[matlab],展宽),
    ->+[.]\"Dtau\"(+[matlab],+[临时文本])->+[临时文本]\"20e-15\"
}...
->[]{
    []:->的(_光束,偏振态)->偏振态->+[.]\"E_polar0\"(+[matlab],偏振态),
    ->+[.]\"E_polar0\"(+[matlab],+[临时文本])->+[临时文本]\"0,1\"
}...
->[]{
    []:->的(_光束,a0)->a0->+[.]\"A0\"(+[matlab],a0),
    ->+[.]\"A0\"(+[matlab],+[临时文本])->+[临时文本]\"1\"
}...
->[]{
    []:->的(_光束,波长)->波长->+[.]\"lm0\"(+[matlab],波长),
    ->+[.]\"lm0\"(+[matlab],+[临时文本])->+[临时文本]\"800e-9\"
}...

->+[模板文本](,+[增加内容])->+[增加内容](,+节点)...
->+[code](+[模板文本],模板)...
->+[.](+[模板文本],+waist)->+[o](+[matlab],+waist)->+[del](,+waist)...
->+[.](+[模板文本],+dtau)->+[o](+[matlab],+dtau)->+[del](,+dtau)...
->+[.](+[模板文本],+focus_x)->+[o](+[matlab],+focus_x)->+[del](,+focus_x)...
->+[.](+[模板文本],+focus_y)->+[o](+[matlab],+focus_y)->+[del](,+focus_y)...
->+[.](+[模板文本],+a0)->+[o](+[matlab],+a0)->+[del](,+a0)...
->+[.](+[模板文本],+omega)->+[o](+[matlab],+omega)->+[del](,+omega)...

->+[.](+[模板文本],+p_theta)->+[o](+[matlab],+p_theta)->+[del](,+p_theta)...
->+[.](+[模板文本],+E_phase)->+[o](+[matlab],+E_phase)->+[del](,+E_phase)...

->[]{
    []:->的(_光束,输入边)->输入边->+[.](+[模板文本],输入边),
    ->+[.]\"输入边\"(+[模板文本],+[临时文本])->+[临时文本]\"xmin\"
}

"(,)
的#155""(操作0#154,M代码#156)
M代码#156"%{
+[M函数](,M代码)
偏振态::https://smileipic.github.io/Smilei/Use/namelist.html#lasers
偏振态2::https://en.wikipedia.org/wiki/Elliptical_polarization
%}

waist=w_0/L_r;
dtau=Dtau/T_r;
focus_x=(pt3(1)-pt0(1))/L_r;
focus_y=(pt3(2)-pt0(2))/L_r+Ly/2;

E_polar=abs(E_polar0)/norm(E_polar0);
p_theta=acos(E_polar(1))*sign_1(E_polar(2));

E_Dr=E_polar0(1)/E_polar0(2);
E_Dr=E_Dr/abs(E_Dr);
E_phase=acos(real(E_Dr))*sign_1(imag(E_Dr))/pi*2;
if isnan(E_phase)
    E_phase=0;
end

omega=lm_r/lm0;

if isempty(A0)
    a0=1.;
else
    a0=A0;
end

%{
+[M函数](,M代码)
%}"(,)
的#157""(操作0#154,模板#158)
模板#158"LaserGaussian2D(
    box_side                = \"%输入边\",
    a0                            = %a0,
    omega                    = %omega,
    focus                       = [%focus_x, %focus_y],
    waist                       = %waist,
    polarization_phi  = %p_theta,
    ellipticity               = %E_phase,
    time_envelope     = tconstant(),
)

"(,)
的#159""(库#152,操作1#160)
操作1#160"\"\"\"
M代码:...
模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+操作1(_光束,_凭依)->+[del](,+操作1)...
->的(操作1,M代码)->的(操作1,模板)...

->的(_凭依,代码)->插入(代码,)->的(插入,光束)...
->+[文本结构_插入尾部](光束,+节点)...
->的(_光束,焦点位置)->焦点位置(,_A)->在(_A,空间点#3)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt3\"(+[matlab],空间点#3)...
->[]{
    []:->的(_光束,腰宽)->腰宽->+[.]\"w_0\"(+[matlab],腰宽),
    ->+[.]\"w_0\"(+[matlab],+[临时文本])->+[临时文本]\"20e-6\"
}...
->[]{
    []:->的(_光束,展宽)->展宽->+[.]\"Dtau\"(+[matlab],展宽),
    ->+[.]\"Dtau\"(+[matlab],+[临时文本])->+[临时文本]\"20e-15\"
}...
->[]{
    []:->的(_光束,偏振态)->偏振态->+[.]\"E_polar0\"(+[matlab],偏振态),
    ->+[.]\"E_polar0\"(+[matlab],+[临时文本])->+[临时文本]\"0,1\"
}...
->[]{
    []:->的(_光束,a0)->a0->+[.]\"A0\"(+[matlab],a0),
    ->+[.]\"A0\"(+[matlab],+[临时文本])->+[临时文本]\"1\"
}...
->[]{
    []:->的(_光束,波长)->波长->+[.]\"lm0\"(+[matlab],波长),
    ->+[.]\"lm0\"(+[matlab],+[临时文本])->+[临时文本]\"800e-9\"
}...

->+[模板文本](,+[增加内容])->+[增加内容](,+节点)...
->+[code](+[模板文本],模板)...
->+[.](+[模板文本],+waist)->+[o](+[matlab],+waist)->+[del](,+waist)...
->+[.](+[模板文本],+dtau)->+[o](+[matlab],+dtau)->+[del](,+dtau)...
->+[.](+[模板文本],+focus_x)->+[o](+[matlab],+focus_x)->+[del](,+focus_x)...
->+[.](+[模板文本],+focus_y)->+[o](+[matlab],+focus_y)->+[del](,+focus_y)...
->+[.](+[模板文本],+a0)->+[o](+[matlab],+a0)->+[del](,+a0)...
->+[.](+[模板文本],+omega)->+[o](+[matlab],+omega)->+[del](,+omega)...

->+[.](+[模板文本],+p_theta)->+[o](+[matlab],+p_theta)->+[del](,+p_theta)...
->+[.](+[模板文本],+E_phase)->+[o](+[matlab],+E_phase)->+[del](,+E_phase)...

->[]{
    []:->的(_光束,输入边)->输入边->+[.](+[模板文本],输入边),
    ->+[.]\"输入边\"(+[模板文本],+[临时文本])->+[临时文本]\"xmin\"
}

"(,)
的#161""(操作1#160,模板#162)
模板#162"LaserGaussian2D(
    box_side                = \"%输入边\",
    a0                            = %a0,
    omega                    = %omega,
    focus                       = [%focus_x, %focus_y],
    waist                       = %waist,
    polarization_phi  = %p_theta,
    ellipticity               = %E_phase,
    time_envelope     = tgaussian(start=0.0, duration=%dtau*4., fwhm=%dtau, center=%dtau*2., order=2.0, )
)

"(,)
的#163""(操作1#160,M代码#164)
M代码#164"%{
+[M函数](,M代码)
偏振态::https://smileipic.github.io/Smilei/Use/namelist.html#lasers
偏振态2::https://en.wikipedia.org/wiki/Elliptical_polarization
pt0=[0,0]
%}

waist=w_0/L_r;
dtau=Dtau/T_r;
focus_x=(pt3(1)-pt0(1))/L_r;
focus_y=(pt3(2)-pt0(2))/L_r+Ly/2;

E_polar=abs(E_polar0)/norm(E_polar0);
p_theta=acos(E_polar(1))*sign_1(E_polar(2));

E_Dr=E_polar0(1)/E_polar0(2);
E_Dr=E_Dr/abs(E_Dr);
E_phase=acos(real(E_Dr))*sign_1(imag(E_Dr))/pi*2;
if isnan(E_phase)
    E_phase=0;
end

omega=lm_r/lm0;

if isempty(A0)
    a0=1.;
else
    a0=A0;
end

%{
+[M函数](,M代码)
%}"(,)
的#165""(库#136,电子代码#166)
电子代码#166"\"\"\"
描述结构:...
库:...

\"\"\"
+电子代码(_电子,_凭依)->+[del](,+电子代码)...
->的(电子代码,描述结构)->的(电子代码,库)...

->.\"媒介\"(+电子代码,_媒介)...

->+[code]([想],描述结构)->[想](_电子,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)...
        =>.(_操作,_参数)=>+[.](+[做],+[临时文本])...
            ->[m_text](.,+[.])->[m_text](_参数,+[临时文本])
}


"(,)
的#167""(电子代码#166,库#168)
库#168"
操作0:...
操作1:...
将条目\"操作0\"复制为条目\"操作1\"


"(,)
的#169""(库#168,操作1#170)
操作1#170"\"\"\"
模板:...
M代码:...
模板_保存1:...

\"\"\"
+操作1(_电子,_凭依)->+[del](,+操作1)...
->的(操作1,模板)->的(操作1,M代码)...

->.\"媒介\"(+操作1,_媒介)->.\"方向\"(+操作1,_方向)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->的(_凭依,代码)->插入(代码,)->的(插入,粒子)...
->+[文本结构_插入尾部](粒子,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"N0\"(+[matlab],数密度)...
->+[模板文本](模板,+节点)...
->+[.](+[模板文本],+N_e)->+[o](+[matlab],+N_e)->+[del](,+N_e)...
->+[.]\"方向\"(+[模板文本],_方向)...
->[]{
    []:->[==](,_电子)->+[.](+[模板文本],变量),
    ->+[.]\"变量\"(+[模板文本],_电子)
}...
->[]{
    []:->的(_电子,电荷)->电荷->+[.]\"charge\"(+[模板文本],电荷),
    ->+[临时文本]\"-1.0\"->+[.]\"charge\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_电子,beta)->beta->的(_电子,速度方向)->速度方向(,)...
        ->+[.](+[matlab],beta)->+[.]\"v0\"(+[matlab],速度方向)...
        ->+[o](+[matlab],+v)->+[.](+[模板文本],+v)->+[del](,+v),

    ->+[临时文本]\"0.,0.,0.\"->+[.]\"v\"(+[模板文本],+[临时文本])...
        ->+[.]\"v0\"(+[matlab],+[临时文本])...
        ->+[临时文本]#1\"0.\"->+[.]\"beta\"(+[matlab],+[临时文本]#1)
}



"(,)
的#171""(操作1#170,M代码#172)
M代码#172"%{
N_r
%}

N_e=N0/N_r;
v=beta*v0/norm(v0);


"(,)
的#173""(操作1#170,模板#174)
模板#174"
def n_profile%变量 (x,y):
    return %N_e
def t_profile%变量 (t):
    return 1.

ParticleInjector(
    species   = \"%变量\",
    box_side  = \"%方向\",
    time_envelope = t_profile%变量,
    number_density = n_profile%变量, 
    position_initialization = \"random\",

)

"(,)
的#175""(操作1#170,模板_保存1#176)
模板_保存1#176"
ParticleInjector(
    species   = \"%变量\",
    box_side  = \"%方向\",
    time_envelope = tconstant(),
#     number_density = %N_e, 
)

"(,)
的#177""(库#168,操作0#178)
操作0#178"\"\"\"
模板:...
M代码:...
->+[.](+[模板文本],上升沿)->+[.](+[模板文本],宽度)
->的(_电子,上升沿)

\"\"\"
+操作0(_电子,_凭依)->+[del](,+操作0)...
->的(操作0,模板)->的(操作0,M代码)...

->.\"媒介\"(+操作0,_媒介)...
->的(_媒介,模拟空间)->的(模拟空间,宽度)...
->的(_凭依,命名空间)->的(命名空间,变量)...
->变量(,_电子)->的(_电子,数密度)...

->的(_凭依,代码)->插入(代码,)->的(插入,粒子)...
->+[文本结构_插入尾部](粒子,+节点)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"N0\"(+[matlab],数密度)...
->+[模板文本](模板,+节点)...
->+[.](+[模板文本],+N_e)->+[o](+[matlab],+N_e)->+[del](,+N_e)...
->[]{
    []:->[==](,_电子)->+[.](+[模板文本],变量),
    ->+[.]\"变量\"(+[模板文本],_电子)
}...
->[]{
    []:->的(_电子,电荷)->电荷->+[.]\"charge\"(+[模板文本],电荷),
    ->+[临时文本]\"-1.0\"->+[.]\"charge\"(+[模板文本],+[临时文本])
}...
->[]{
    []:->的(_电子,beta)->beta->的(_电子,速度方向)->速度方向(,)...
        ->+[.](+[matlab],beta)->+[.]\"v0\"(+[matlab],速度方向)...
        ->+[o](+[matlab],+v)->+[.](+[模板文本],+v)->+[del](,+v),

    ->+[临时文本]\"0.,0.,0.\"->+[.]\"v\"(+[模板文本],+[临时文本])...
        ->+[.]\"v0\"(+[matlab],+[临时文本])...
        ->+[临时文本]#1\"0.\"->+[.]\"beta\"(+[matlab],+[临时文本]#1)
}



"(,)
的#179""(操作0#178,模板#180)
模板#180"
Species(
    name = \"%变量\",
    position_initialization = \"regular\",
    momentum_initialization = \"cold\",
    particles_per_cell = 1,
    c_part_max = 1.0,
    mass = 1.0,
    charge = %charge,
    number_density = %N_e, 

    mean_velocity = [%v],
    temperature = [0.0],
    pusher = \"boris\",
    time_frozen = 0.0,
    boundary_conditions = [
        [\"remove\", \"remove\"],
        [\"remove\", \"remove\"],
#        [\"periodic\", \"periodic\"],
    ],
)
"(,)
的#181""(操作0#178,M代码#182)
M代码#182"%{
N_r
%}

N_e=N0/N_r;
v=beta*v0/norm(v0);


"(,)
的#183""(电子代码#166,描述结构#184)
描述结构#184"\"\"\"
P代码:...
P代码2:...

\"\"\"
+描述结构(_电子,_凭依)->+操作(+描述结构,)...

->+[临时文本]->Python->[]{
    []:->不注入(_电子,),
    ->的(_电子,速度方向)->速度方向->+[.]\"v\"([python],速度方向)...
        ->[python]\"state=True\"(Python,)->[]{
            []:->+[code]([python]#1,P代码)->[python]#1(Python,+[临时文本]#1)...
                ->+操作1(_电子,_凭依)...
                ->+[.]\"方向\"(+操作1,+[临时文本]#1)->+的(+操作,+操作1),
            ->[]
        }->[]{
            []:->+[code]([python]#1,P代码2)->[python]#1(Python,+[临时文本]#1)...
                ->+操作1(_电子,_凭依)...
                ->+[.]\"方向\"(+操作1,+[临时文本]#1)->+的(+操作,+操作1),
            ->[]
        },

    ->[]
}...
->+操作0(_电子,_凭依)->+的(+操作,+操作0)


"(,)
的#185""(描述结构#184,P代码#186)
P代码#186"\"\"\"
记住\"Python\"
print(v)

\"\"\"

state=True
if v[0]>1e-7:
    ans=\"xmin\"
elif v[0]<-1e-7:
    ans=\"xmax\"
else:
    state=False
"(,)
的#187""(描述结构#184,P代码2#188)
P代码2#188"\"\"\"
记住\"Python\"
print(v)

\"\"\"

state=True
if v[1]>1e-7:
    ans=\"ymin\"
elif v[1]<-1e-7:
    ans=\"ymax\"
else:
    state=False
"(,)
的#189""(库#136,整体结构#190)
整体结构#190"\"\"\"
模板:...
myscript:...
M代码:...

\"\"\"
+整体结构(_媒介,_凭依)->+[del](,+整体结构)...
->的(整体结构,M代码)->的(整体结构,模板)->的(整体结构,myscript)...

->[]{
    []:->的(_媒介,地址)->地址,
    ->+的(_媒介,+地址)->+地址\"/home/xiantao/Documents/PIC/output\"
}->的(_媒介,地址#0)->+[修改内容](地址#0,+[临时文本])...

->+的(_凭依,+myscript)->+的(+myscript,+地址#m)...
    ->+[修改内容]\"%s/myscript.txt\"(地址#0,+地址#m)...
->+的(_凭依,+info)->+的(+info,+地址#f)...
    ->+[修改内容]\"%s/info.txt\"(地址#0,+地址#f)->+[修改内容](_媒介,+info)...
->+的(_凭依,+run)->+的(+run,+地址#r)...
    ->+[修改内容]\"%s/run.py\"(地址#0,+地址#r)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->[]{
    []:->的(_场景,参考波长)->参考波长->+[.]\"lm_r\"(+[matlab],参考波长),
    ->+[.]\"lm_r\"(+[matlab],+波长)->+波长\"800e-9\"->+[del](,+波长)
}...

->+[修改内容](myscript,+myscript)...
->+的(_凭依,+代码)->+[修改内容](模板,+代码)...
    ->+[文本结构_插入](+代码,+地址)->+[修改内容](+地址#r,+地址)...
    ->+[文本结构_插入](+代码,+空间)->+[文本结构_插入](+代码,+窗口)...
    ->+[文本结构_插入](+代码,+光束)->+[文本结构_插入](+代码,+粒子)...
    ->+[文本结构_插入](+代码,+外场)...
    ->+[文本结构_插入](+代码,+探测)->+[文本结构_插入](+代码,+追踪)



"(,)
的#191""(整体结构#190,M代码#192)
M代码#192"%{
+[M函数](,M代码)
归一化单位::https://smileipic.github.io/Smilei/Understand/units.html
+[打开网页](,归一化单位)

单位定义(html):...
+[新建阅读窗口](,单位定义)
lm_r=800e-9
B_r
%}
pt0=[0,0];
physics_constant;
dx=0.125;
dt=0.99*dx;
ny=40;
npatch_x=128;

omega_r=c/lm_r*2*pi;
T_r=1/omega_r;
L_r=c/omega_r;
E_r=m_e.*c.*omega_r./e;
B_r=m_e.*omega_r./e;
N_r=epsilon_0.*m_e.*omega_r.^(2)./e.^(2);
J_r=c.*e.*N_r;

n_NS_0=0;
"(,)
的#193""(整体结构#190,模板#194)
模板#194"\"\"\"
地址::%地址
list_field::https://smileipic.github.io/Smilei/namelist.html#fields-diagnostics
+[打开网页](,list_field)

\"\"\"
import numpy as np

%空间
%窗口

LoadBalancing(
    initial_balance = False,
    every = 150,
    cell_load = 1.,
    frozen_particle_load = 0.1
)

%粒子
%光束
%外场
%探测
%追踪


DiagPerformances(
    every = 50,
)


"(,)
的#195""(整体结构#190,myscript#196)
myscript#196"#!/bin/bash
#----------------------------------------------------
# Sample Slurm job script
#   for TACC Lonestar6 AMD Milan nodes
#
#   *** Serial Job in Normal Queue***
# 
# Last revised: October 22, 2021
#
# Notes:
#
#  -- Copy/edit this script as desired.  Launch by executing
#     \"sbatch milan.serial.slurm\" on a Lonestar6 login node.
#
#  -- Serial codes run on a single node (upper case N = 1).
#       A serial code ignores the value of lower case n,
#       but slurm needs a plausible value to schedule the job.
#
#  -- Use TACC's launcher utility to run multiple serial 
#       executables at the same time, execute \"module load launcher\" 
#       followed by \"module help launcher\".
#----------------------------------------------------

#SBATCH -J testSmilei           # Job name
#SBATCH -o stdout.txt       # Name of stdout output file
#SBATCH -e errlog.txt       # Name of stderr error file
#SBATCH -p normal          # Queue (partition) name
#SBATCH -N 1               # Total # of nodes (must be 1 for serial)
#SBATCH -n 1               # Total # of mpi tasks (should be 1 for serial)
#SBATCH -t 02:40:00        # Run time (hh:mm:ss)
#SBATCH --mail-type=all    # Send email at begin and end of job
#SBATCH -A PHY22016       # Project/Allocation name (req'd if you have more than 1)
#SBATCH --mail-user=chengxiantao@utexas.edu


# Any other commands must follow all #SBATCH directives...
module list
pwd
date

# export OMP_NUM_THREADS=32

# Launch serial code...
echo hello world!
echo $LD_LIBRARY_PATH


$WORK/Smilei/smilei run.py


"(,)
的#197""(库#136,整理光束#198)
整理光束#198"\"\"\"
描述结构:...
库:...

\"\"\"
+整理光束(,_凭依)->+[del](,+整理光束)...
->的(整理光束,描述结构)->的(整理光束,库)...

->的(_凭依,incidentField)->的(incidentField,插入)...
    ->的(插入,注入方式)...

->+[code]([想],描述结构)->[想](注入方式,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"凭依\"(+[做],_凭依)
}
"(,)
的#199""(整理光束#198,描述结构#200)
描述结构#200"\"\"\"


\"\"\"

+描述结构(注入方式,_凭依)->+操作(+描述结构,)...

->插入(注入方式,)...
->[]{
    []=>的(插入,_re)->_re\"[XYZ]M\"=>[]:
        ->顺序(_re,)->的(顺序,_节点)->_节点(,_节点1)...
            ->+操作2(_re,_凭依)->+的(+操作,+操作2),
        ->顺序(_re,)...
            ->+操作1(_re,_凭依)->+的(+操作,+操作1),
        ->+操作0(_re,_凭依)->+的(+操作,+操作0)
}
"(,)
的#201""(整理光束#198,库#202)
库#202"

操作2:...
操作1:...
操作0:...



"(,)
的#203""(库#202,操作0#204)
操作0#204"\"\"\"


\"\"\"
+操作0(_X,_凭依)->+[del](,+操作0)...

->+[修改内容]\"profiles::None\"(,_X)
"(,)
的#205""(库#202,操作1#206)
操作1#206"\"\"\"


\"\"\"
+操作1(_X,_凭依)->+[del](,+操作1)
"(,)
的#207""(库#202,操作2#208)
操作2#208"\"\"\"


\"\"\"
+操作2(_X,_凭依)->+[del](,+操作2)...

->顺序(_X,)->的(_X,顺序)->+[修改内容]\", \"(,顺序)...
    ->+[修改内容]\"MakeSeq_t<%内容>\"(,_X)...
->+插入(_X,)->+的(_X,+插入)->+的(+插入,+内容)...
->+[左连](顺序,+内容)->+[左连](的,+内容)


"(,)
的#209""(库#136,探测代码#210)
探测代码#210"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
输出

\"\"\"
+探测代码(_探测,_凭依)->+[del](,+探测代码)...
->的(探测代码,描述结构)->的(探测代码,库)...

->.\"媒介\"(+探测代码,_媒介)...

->+[code]([想],描述结构)->[想](,_探测)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_探测,_凭依)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)
}



"(,)
的#211""(探测代码#210,描述结构#212)
描述结构#212"\"\"\"


\"\"\"
+描述结构(,_探测)->+操作(+描述结构,)...

->的(_探测,探测类型)...
->[]{
    []:->[==]\"png\"(,探测类型)->+输出png(,_探测)->+的(+操作,+输出png),
    ->[==]\"能谱\"(,探测类型)->+输出能谱(,_探测)->+的(+操作,+输出能谱),
    ->+输出场(,_探测)->+的(+操作,+输出场)
}

"(,)
的#213""(探测代码#210,库#214)
库#214"+[删除结构](,库)

输出场:...
将'输出场'的\"输出场间隔\"替换为\"探测间隔\"
输出png:...
将条目\"输出场\"复制为条目\"输出png\"

输出能谱:...
将条目\"输出png\"复制为条目\"输出能谱\"

"(,)
的#215""(库#214,输出能谱#216)
输出能谱#216""(,)
的#217""(库#214,输出png#218)
输出png#218""(,)
的#219""(库#214,输出场#220)
输出场#220"\"\"\"
P代码:...
M代码:...
NS模板:...
+[新建阅读窗口](,M代码)

\"\"\"

+输出场(_探测,_凭依)->+[del](,+输出场)...
->的(输出场,NS模板)->的(输出场,P代码)...

->的(_凭依,代码)->插入(代码,)->的(插入,探测)...
->+[文本结构_插入尾部](探测,+节点)...

->+[模板文本](NS模板,+节点)->+[.]\"探测类型\"(+[模板文本],+[临时文本])...
->Python->+[临时文本]\"Rho\"->[]{
    []:->的(_探测,探测类型)->探测类型(,)...
        ->+[code]([python],P代码)->+[.]\"type_txt\"([python],探测类型)...
        ->[python](Python,+[临时文本]),
    ->[]
}...
->[]{
    []:->的(_探测,探测间隔)->探测间隔->+[.](+[模板文本],探测间隔),
    ->+[.]\"探测间隔\"(+[模板文本],+[临时文本])->+[临时文本]\"200\"
}


"(,)
的#221""(输出场#220,P代码#222)
P代码#222"\"\"\"
记住\"Python\"
print('a,b'.split(','))
print(type_txt,list_txt)

\"\"\"

list_txt=type_txt.split(',')
for i in range(len(list_txt)):
    txt=list_txt[i]
    list_txt[i]=\" '%s'\"%(txt)
ans=','.join(list_txt)+\" \"

"(,)
的#223""(输出场#220,NS模板#224)
NS模板#224"
DiagFields(
    fields = [%探测类型],
    every = %探测间隔,
)
"(,)
的#225""(库#136,外场代码#226)
外场代码#226"\"\"\"
描述结构:...
库:...

\"\"\"
+外场代码(_外场,_凭依)->+[del](,+外场代码)...
->的(外场代码,描述结构)->的(外场代码,库)...

->.\"媒介\"(+外场代码,_媒介)...

->+[code]([想],描述结构)->[想](_外场,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_操作,_条目)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)->+[.]\"媒介\"(+[做],_媒介)...
        =>.(_操作,_参数)=>+[.](+[做],+[临时文本])...
            ->[m_text](.,+[.])->[m_text](_参数,+[临时文本])
}


"(,)
的#227""(外场代码#226,描述结构#228)
描述结构#228"\"\"\"


\"\"\"
+描述结构(_外场,_凭依)->+操作(+描述结构,)...

->的(_外场,类型)->[]{
    []:->[==]\"电场\"(,类型)->+操作1(_外场,_凭依)->+的(+操作,+操作1),
    ->+操作0(_外场,_凭依)->+的(+操作,+操作0)
}


"(,)
的#229""(外场代码#226,库#230)
库#230"

操作1:...
操作0:...
将'操作0'的\"电子\"替换为\"外场\"

"(,)
的#231""(库#230,操作1#232)
操作1#232""(,)
的#233""(库#230,操作0#234)
操作0#234"\"\"\"
模板:...
M代码:...

\"\"\"
+操作0(_外场,_凭依)->+[del](,+操作0)...
->的(操作0,模板)->的(操作0,M代码)...

->的(_外场,场强)...

->的(_凭依,代码)->插入(代码,)->的(插入,外场)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"intensity\"(+[matlab],场强)...

->+[.]\"field\"([python],场强)->[python]\"state=True\"(Python,)...
->[]{
    []:->[python]\"state=np.abs(field[0])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+Bx)->+[o](+[matlab],+Bx)->+[del](,+Bx)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"Bx\",
    ->[]
}...

->[]{
    []:->[python]\"state=np.abs(field[1])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+By)->+[o](+[matlab],+By)->+[del](,+By)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"By\",
    ->[]
}...

->[]{
    []:->[python]\"state=np.abs(field[2])>1e-7\"(Python,)...
        ->+[文本结构_插入尾部](外场,+节点)->+[模板文本](模板,+节点)...
        ->+[.]\"val\"(+[模板文本],+Bz)->+[o](+[matlab],+Bz)->+[del](,+Bz)...
        ->+[.]\"类型\"(+[模板文本],+[临时文本])->+[临时文本]\"Bz\",
    ->[]
}




"(,)
的#235""(操作0#234,M代码#236)
M代码#236"%{
N_r
%}

B_field=intensity/B_r;
Bx=B_field(1);
By=B_field(2);
Bz=B_field(3);



"(,)
的#237""(操作0#234,模板#238)
模板#238"ExternalField(
    field=\"%类型\",
    profile=%val
)
"(,)
的#239""(降临规则#2,上传文件夹#240)
上传文件夹#240"\"\"\"
创建文件夹:...
P代码:...
+[修改天使]

\"\"\"


+上传文件夹(_媒介,_凭依)->+[del](,+上传文件夹)...
->的(上传文件夹,创建文件夹)->的(上传文件夹,P代码)...

->[]{
    []:->的(_媒介,地址)->地址,
    ->+的(_媒介,+地址)->+地址\"/home/xiantao/Documents/PIC/output\"
}->的(_媒介,地址#0)...

->+[模板文本](创建文件夹,+[命令行]#0)->+[命令行]#0->+[显示](,+[命令行]#0)...
    ->+[.](+[模板文本],地址#0)...

->[]{
    []=>的(_凭依,_文件)->_文件=>+[保存文本](,_文件)
}...

->+[python](Python,)->+[code](+[python],P代码)...
->+[.]\"address\"(+[python],地址#0)



"(,)
的#241""(上传文件夹#240,创建文件夹#242)
创建文件夹#242"mkdir %地址/"(,)
的#243""(上传文件夹#240,P代码#244)
P代码#244"\"\"\"
记住\"Python\"

scp -r %s xtcheng@ls6.tacc.utexas.edu:$WORK/test_folder

\"\"\"
import subprocess as sp
# code=\"scp -r %s xtcheng@stampede2.tacc.utexas.edu:$WORK/sim_folder\"%(address)
code=\"scp -r %s xtcheng@ls6.tacc.utexas.edu:$WORK/sim_folder\"%(address)
t_code=code.split(' ')
p=sp.Popen(t_code)




"(,)
的#245""(结构转Smilei代码#0,召唤规则#246)
召唤规则#246"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成Smilei代码\"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->的(_媒介,状态)->状态->[]{
        []:->[==]\"上传\"(,状态)...
            ->+上传文件夹(_媒介,_凭依)->+的(操作,+上传文件夹),
        ->[==]\"本地\"(,状态)...
            ->+本地模拟(_媒介,_凭依)->+的(操作,+本地模拟)
    },
    ->[]
}...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->[]{
    []:->.\"不构造\"(召唤星辰,),
    ->.\"1D\"(召唤星辰,)->+代码结构_1D(_媒介,_凭依)->+的(操作,+代码结构_1D),
    ->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)
}...

->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)


"(,)

## end
#717, 520:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成Smilei代码"(,召唤星辰)...

->+整理结构(_媒介,_凭依)->+的(操作,+整理结构)...
->[]{
    []:->的(_媒介,状态)->状态->[]{
        []:->[==]"上传"(,状态)...
            ->+上传文件夹(_媒介,_凭依)->+的(操作,+上传文件夹),
        ->[==]"本地"(,状态)...
            ->+本地模拟(_媒介,_凭依)->+的(操作,+本地模拟)
    },
    ->[]
}...

->+整理代码(_媒介,_凭依)->+的(操作,+整理代码)...
->[]{
    []:->."不构造"(召唤星辰,),
    ->."1D"(召唤星辰,)->+代码结构_1D(_媒介,_凭依)->+的(操作,+代码结构_1D),
    ->+代码结构(_媒介,_凭依)->+的(操作,+代码结构)
}...

->+设置变量(_媒介,_凭依)->+的(操作,+设置变量)



## end
#719, 3485:
圆切线公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(圆切线公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,圆切线公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->[is](_物理量,方向)...
        ->+求解方向(求解,_凭依)->+的(操作,+求解方向)
}


"(,)
的#3""(圆切线公式#0,降临规则#4)
降临规则#4"
整理代码:...

求解方向:...
+[修改标题]\"求解方向\"(,两点定铰链)
+[新建阅读窗口](,求解方向)



"(,)
的#5""(降临规则#4,求解方向#6)
求解方向#6"\"\"\"
M代码:...
JS代码:...
将'M代码'的\"空间点\"替换为\"方向\"
+[新建阅读窗口](,M代码)

\"\"\"

+求解方向(求解,_凭依)->+[del](,+求解方向)...
->的(求解方向,M代码)->的(求解方向,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)


"(,)
的#7""(求解方向#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
函数:...
将'函数'的\"sign_1\"替换为\"Math.sign\"
+[新建阅读窗口](,M模板)
+[新建阅读窗口](,函数)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"起点\"(求解,_起点)->变量#2(,_起点)...
->.#3\"圆心\"(求解,_圆心)->变量#3(,_圆心)...
->.#4\"半径\"(求解,_半径)->变量#4(,_半径)...
->o#5\"切点\"(求解,_切点坐标)->变量#5(,_切点坐标)...

->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#5,+类型#5)->+类型#5\"xy坐标\"->+的(+类型#5,+来源#5)->+来源#5(,求解)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](o#5,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"
[anA,anB,pt_A,pt_B]=tangent_circle(%圆心_x,%圆心_y,%半径,%起点_x,%起点_y);
%方向=anA;
%切点_x=pt_A[0];
%切点_y=pt_A[1];
"(,)
的#11""(JS代码#8,函数#12)
函数#12"

function tangent_circle(x_0,y_0,R,x_1,y_1) {

    a=((y_1-y_0)**2-R**2);
    b_1=(-(x_1-x_0)*(y_1-y_0)+R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    b_2=(-(x_1-x_0)*(y_1-y_0)-R*Math.sqrt((x_1-x_0)**2+(y_1-y_0)**2-R**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+x_0;
    y_t=(b_1*R**2)/(a*(x_1-x_0)+b_1*(y_1-y_0))+y_0;
    pt_1=[x_t,y_t];
    
    x_t=(a*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+x_0;
    y_t=(b_2*R**2)/(a*(x_1-x_0)+b_2*(y_1-y_0))+y_0;
    pt_2=[x_t,y_t];

    return [angle_1,angle_2,pt_1,pt_2];
}


"(,)
的#13""(求解方向#6,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"起点\"(求解,_起点)->变量#2(,_起点)...
->.#3\"圆心\"(求解,_圆心)->变量#3(,_圆心)...
->.#4\"半径\"(求解,_半径)->变量#4(,_半径)...
->o#5\"切点\"(求解,_切点坐标)->变量#5(,_切点坐标)...

->+的(变量#3,+类型#3)->+类型#3\"xy坐标\"->+的(+类型#3,+来源#3)->+来源#3(,求解)...
->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#5,+类型#5)->+类型#5\"xy坐标\"->+的(+类型#5,+来源#5)->+来源#5(,求解)...

->+函数库\"Matlab/space\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](o#5,+[.])



"(,)
的#15""(M代码#14,M模板#16)
M模板#16"
[%方向,~,pt_A,pt_B]=tangent_circle(%圆心_x,%圆心_y,%半径,%起点_x,%起点_y);
%切点_x=pt_A(1);
%切点_y=pt_A(2);
"(,)
的#17""(降临规则#4,整理代码#18)
整理代码#18"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#721, 211:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,圆切线公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->[is](_物理量,方向)...
        ->+求解方向(求解,_凭依)->+的(操作,+求解方向)
}



## end
#723, 4514:
双圆切线公式#0"

召唤规则:...
降临规则:...



"(,)
的#1""(双圆切线公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,双圆切线公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->[is](_物理量,方向)...
        ->+求解方向(求解,_凭依)->+的(操作,+求解方向)
}


"(,)
的#3""(双圆切线公式#0,降临规则#4)
降临规则#4"
整理代码:...

求解方向:...
+[修改标题]\"求解方向\"(,两点定铰链)
+[新建阅读窗口](,求解方向)



"(,)
的#5""(降临规则#4,求解方向#6)
求解方向#6"\"\"\"
M代码:...
JS代码:...
将'M代码'的\"空间点\"替换为\"方向\"
+[新建阅读窗口](,M代码)

\"\"\"

+求解方向(求解,_凭依)->+[del](,+求解方向)...
->的(求解方向,M代码)->的(求解方向,JS代码)...

->+[做](求解,_凭依):

->.\"代码类型\"(_凭依,_类型)->[]{
    []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
    ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
},
->+[code](+[做],M代码)


"(,)
的#7""(求解方向#6,JS代码#8)
JS代码#8"\"\"\"
M模板:...
函数:...
将'函数'的\"sqrt\"替换为\"Math.sqrt\"
+[新建阅读窗口](,M模板)
+[新建阅读窗口](,函数)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"圆心A\"(求解,_圆心A)->变量#2(,_圆心A)...
->.#3\"半径A\"(求解,_半径A)->变量#3(,_半径A)...
->.#4\"圆心B\"(求解,_圆心B)->变量#4(,_圆心B)...
->.#5\"半径B\"(求解,_半径B)->变量#5(,_半径B)...
->o#6\"切点A\"(求解,_切点A)->变量#6(,_切点A)...
->o#7\"切点B\"(求解,_切点B)->变量#7(,_切点B)...

->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#4,+类型#4)->+类型#4\"xy坐标\"->+的(+类型#4,+来源#4)->+来源#4(,求解)...
->+的(变量#6,+类型#6)->+类型#6\"xy坐标\"->+的(+类型#6,+来源#6)->+来源#6(,求解)...
->+的(变量#7,+类型#7)->+类型#7\"xy坐标\"->+的(+类型#7,+来源#7)->+来源#7(,求解)...

->+函数库\"Matlab/space\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])...
->+[.](+[模板文本],变量#6)->[m_text](o#6,+[.])...
->+[.](+[模板文本],变量#7)->[m_text](o#7,+[.])



"(,)
的#9""(JS代码#8,M模板#10)
M模板#10"
[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(%圆心A_x,%圆心A_y,%半径A,%圆心B_x,%圆心B_y,%半径B);
%方向=an1;
%切点A_x=pt1a[0];
%切点A_y=pt1a[1];
%切点B_x=pt2a[0];
%切点B_y=pt2a[1];

"(,)
的#11""(JS代码#8,函数#12)
函数#12"
function tangent_two_circles(x_1,y_1,R_1,x_2,y_2,R_2) {

    x_3=(x_1*R_2-x_2*R_1)/(R_2-R_1);
    y_3=(y_1*R_2-y_2*R_1)/(R_2-R_1);
    pt_0=[x_3,y_3];
    
    a=((y_3-y_1)**2-R_1**2);
    b_1=(-(x_3-x_1)*(y_3-y_1)+R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    b_2=(-(x_3-x_1)*(y_3-y_1)-R_1*Math.sqrt((x_3-x_1)**2+(y_3-y_1)**2-R_1**2));
    
    ry=-a/Math.sqrt(a**2+b_1**2);
    rx1=b_1/Math.sqrt(a**2+b_1**2);
    rx2=b_2/Math.sqrt(a**2+b_2**2);
    
    angle_1=Math.sign(ry)*Math.acos(rx1);
    angle_2=Math.sign(ry)*Math.acos(rx2);
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+x_1;
    y_t=(b_1*R_1**2)/(a*(x_3-x_1)+b_1*(y_3-y_1))+y_1;
    pt_1a=[x_t,y_t];
    pt_2a=[x_t,y_t];
    pt_2a[0]=pt_0[0]+(pt_1a[0]-pt_0[0])/R_1*R_2;
    pt_2a[1]=pt_0[1]+(pt_1a[1]-pt_0[1])/R_1*R_2;
    
    x_t=(a*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+x_1;
    y_t=(b_2*R_1**2)/(a*(x_3-x_1)+b_2*(y_3-y_1))+y_1;
    pt_1b=[x_t,y_t];
    pt_2b=[x_t,y_t];
    pt_2b[0]=pt_0[0]+(pt_1b[0]-pt_0[0])/R_1*R_2;
    pt_2b[1]=pt_0[1]+(pt_1b[1]-pt_0[1])/R_1*R_2;
    
    return [angle_1,angle_2,pt_1a,pt_1b,pt_2a,pt_2b];

}

"(,)
的#13""(求解方向#6,M代码#14)
M代码#14"\"\"\"
M模板:...
+[新建阅读窗口](,M模板)
Nini, 打开齿轮模拟(文件)
Nini, 打开LWFA数据分析(文件)

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,M模板)...

->o#1\"方向\"(求解,_方向)->变量#1(,_方向)...
->.#2\"圆心A\"(求解,_圆心A)->变量#2(,_圆心A)...
->.#3\"半径A\"(求解,_半径A)->变量#3(,_半径A)...
->.#4\"圆心B\"(求解,_圆心B)->变量#4(,_圆心B)...
->.#5\"半径B\"(求解,_半径B)->变量#5(,_半径B)...
->o#6\"切点A\"(求解,_切点A)->变量#6(,_切点A)...
->o#7\"切点B\"(求解,_切点B)->变量#7(,_切点B)...

->+的(变量#2,+类型#2)->+类型#2\"xy坐标\"->+的(+类型#2,+来源#2)->+来源#2(,求解)...
->+的(变量#4,+类型#4)->+类型#4\"xy坐标\"->+的(+类型#4,+来源#4)->+来源#4(,求解)...
->+的(变量#6,+类型#6)->+类型#6\"xy坐标\"->+的(+类型#6,+来源#6)->+来源#6(,求解)...
->+的(变量#7,+类型#7)->+类型#7\"xy坐标\"->+的(+类型#7,+来源#7)->+来源#7(,求解)...

->+函数库\"Matlab/space\"->+的(求解,+函数库)...

->+[模板文本](M模板,_凭依)...
->+[.](+[模板文本],变量#1)->[m_text](o#1,+[.])...
->+[.](+[模板文本],变量#2)->[m_text](.#2,+[.])...
->+[.](+[模板文本],变量#3)->[m_text](.#3,+[.])...
->+[.](+[模板文本],变量#4)->[m_text](.#4,+[.])...
->+[.](+[模板文本],变量#5)->[m_text](.#5,+[.])...
->+[.](+[模板文本],变量#6)->[m_text](o#6,+[.])...
->+[.](+[模板文本],变量#7)->[m_text](o#7,+[.])



"(,)
的#15""(M代码#14,M模板#16)
M模板#16"
[an1,an2,pt1a,pt1b,pt2a,pt2b]=tangent_two_circles(%圆心A_x,%圆心A_y,%半径A,%圆心B_x,%圆心B_y,%半径B);
%方向=an1;
%切点A_x=pt1a(1);
%切点A_y=pt1a(2);
%切点B_x=pt2a(1);
%切点B_y=pt2a(2);
"(,)
的#17""(降临规则#4,整理代码#18)
整理代码#18"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)

## end
#725, 212:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,双圆切线公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...

->[]{
    []:->[is](_物理量,方向)...
        ->+求解方向(求解,_凭依)->+的(操作,+求解方向)
}



## end
#727, 2914:
自定义公式#0"

召唤规则:...
降临规则:...

"(,)
的#1""(自定义公式#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,自定义公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...
->+求解变量(求解,_凭依)->+的(操作,+求解变量)...
->+初始化代码(求解,_凭依)->+的(操作,+初始化代码)


"(,)
的#3""(自定义公式#0,降临规则#4)
降临规则#4"
整理代码:...
初始化代码:...

求解变量:...
将'求解变量'的\"方向\"替换为\"变量\"

"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"


\"\"\"

+整理代码(求解,_凭依)->+[del](,+整理代码)...

->+[删除结构](,_凭依)"(,)
的#7""(降临规则#4,求解变量#8)
求解变量#8"\"\"\"
M代码:...
JS代码:...
将'M代码'的\"空间点\"替换为\"变量\"
+[新建阅读窗口](,M代码)

\"\"\"

+求解变量(求解,_凭依)->+[del](,+求解变量)...
->的(求解变量,M代码)->的(求解变量,JS代码)...

->调用(求解,自定义公式)->自定义公式(,_关系)->的(_关系,表达式)...
->+[表达式转结构](表达式,+代码结构)...
->+[做](求解,_凭依)->+[.]\"结构\"(+[做],+代码结构)...
->[]{
    []:->.\"代码类型\"(_凭依,_类型)->[]{
        []:->[==]\"JS\"(,_类型)->+[code](+[做],JS代码),
        ->[==]\"M\"(,_类型)->+[code](+[做],M代码)
    },
    ->+[code](+[做],M代码)
}...

->+[删除结构](,+代码结构)->+[del](,+代码结构)
"(,)
的#9""(求解变量#8,M代码#10)
M代码#10"\"\"\"
模板:...

\"\"\"

+M代码(求解,_凭依)->+[del](,+M代码)...
->的(M代码,模板)...

->.\"结构\"(+M代码,_结构)...

->[]{
    []=>.(求解,_输入)->_输入->变量(,_输入)...
        =>[]{
            []:->[is](_输入,空间点)->空间点->+的(变量,+类型)->+类型\"xy坐标\"...
                ->+的(+类型,+来源)->+来源(,求解),
            ->[]
        }=>的(_结构,_变量)->[标题](_变量,)->[==]([标题],.)...
        =>+[修改标题](,_变量)->[m_text](变量,+[修改标题])...
            ->+[修改内容](,_变量)->[m_text](变量,+[修改内容])
}...
->[]{
    []=>o(求解,_输出)->_输出->变量(,_输出)...
        =>[]{
            []:->[is](_输出,空间点)->空间点->+的(变量,+类型)->+类型\"xy坐标\"...
                ->+的(+类型,+来源)->+来源(,求解),
            ->[]
        }=>的(_结构,_变量)->[标题](_变量,)->[==]([标题],o)...
        =>+[修改标题](,_变量)->[m_text](变量,+[修改标题])...
            ->+[修改内容](,_变量)->[m_text](变量,+[修改内容])
}...


->+[算式结构转换]\"Matlab\"(_结构,+[临时文本])...
->+[模板文本](模板,_凭依)->+[.]\"代码\"(+[模板文本],+[临时文本])

"(,)
的#11""(M代码#10,模板#12)
模板#12"%代码;
"(,)
的#13""(求解变量#8,JS代码#14)
JS代码#14"\"\"\"
模板:...

\"\"\"

+JS代码(求解,_凭依)->+[del](,+JS代码)...
->的(JS代码,模板)...

->.\"结构\"(+JS代码,_结构)...

->[]{
    []=>.(求解,_输入)->_输入->变量(,_输入)...
        =>[]{
            []:->[is](_输入,空间点)->空间点->+的(变量,+类型)->+类型\"xy坐标\"...
                ->+的(+类型,+来源)->+来源(,求解),
            ->[]
        }=>的(_结构,_变量)->[标题](_变量,)->[==]([标题],.)...
        =>+[修改标题](,_变量)->[m_text](变量,+[修改标题])...
            ->+[修改内容](,_变量)->[m_text](变量,+[修改内容])
}...
->[]{
    []=>o(求解,_输出)->_输出->变量(,_输出)...
        =>[]{
            []:->[is](_输出,空间点)->空间点->+的(变量,+类型)->+类型\"xy坐标\"...
                ->+的(+类型,+来源)->+来源(,求解),
            ->[]
        }=>的(_结构,_变量)->[标题](_变量,)->[==]([标题],o)...
        =>+[修改标题](,_变量)->[m_text](变量,+[修改标题])...
            ->+[修改内容](,_变量)->[m_text](变量,+[修改内容])
}...


->+[算式结构转换]\"Javascript\"(_结构,+[临时文本])...
->+[模板文本](模板,_凭依)->+[.]\"代码\"(+[模板文本],+[临时文本])

"(,)
的#15""(JS代码#14,模板#16)
模板#16"%代码;
"(,)
的#17""(降临规则#4,初始化代码#18)
初始化代码#18"\"\"\"


\"\"\"

+初始化代码(求解,_凭依)->+[del](,+初始化代码)...

->+[修改内容](+[临时文本],_凭依)"(,)

## end
#729, 203:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[is](_媒介,求解)->求解(,_物理量)->调用(求解,自定义公式)...
->+整理代码(求解,_凭依)->+的(操作,+整理代码)...
->+求解变量(求解,_凭依)->+的(操作,+求解变量)...
->+初始化代码(求解,_凭依)->+的(操作,+初始化代码)



## end
#731, 9919:
生成Parser代码_快速#0"

召唤规则:...
降临规则:...


"(,)
的#1""(生成Parser代码_快速#0,召唤规则#2)
召唤规则#2"\"\"\"


\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"生成Parser代码_快速\"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)



"(,)
的#3""(生成Parser代码_快速#0,降临规则#4)
降临规则#4"

生成结构:...
结构变换:...
生成代码:...
+[新建阅读窗口](,生成代码)
"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"


\"\"\"
+生成结构(_媒介,_凭依)->+[del](,+生成结构)...

->+的(_凭依,+结构)...
->[解析Parser结构_代码](,_媒介)...
->+[导入节点](,+结构)->[m_text]([解析Parser结构_代码],+[导入节点])


"(,)
的#7""(降临规则#4,结构变换#8)
结构变换#8"\"\"\"
描述结构:...
库:...

\"\"\"
+结构变换(_媒介,_凭依)->+[del](,+结构变换)...
->的(结构变换,描述结构)->的(结构变换,库)...

->+[code]([想],描述结构)->[想](_媒介,_凭依)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)
}

"(,)
的#9""(结构变换#8,描述结构#10)
描述结构#10"\"\"\"
下一条:...

\"\"\"
+描述结构(_媒介,_凭依)->+操作(+描述结构,)...

->的(_凭依,结构)...
->的(结构,起点)->起点(,条目)...
->+[code]([想],下一条)->+[.]([想],+操作)->[想](_凭依,条目)

"(,)
的#11""(描述结构#10,下一条#12)
下一条#12"\"\"\"


\"\"\"
+下一条(_凭依,条目)->.(+下一条,操作)...

->+设置函数(条目,_凭依)->+的(操作,+设置函数)...
->[]:
    ->条目#2(条目,)->+[code]([想],下一条)->+[.]([想],操作)->[想](_凭依,条目#2),
    ->[]


"(,)
的#13""(结构变换#8,库#14)
库#14"

设置函数:...

"(,)
的#15""(库#14,设置函数#16)
设置函数#16"\"\"\"
描述结构:...
库:...

\"\"\"

+设置函数(_条目,_凭依)->+[del](,+设置函数)...
->的(设置函数,描述结构)->的(设置函数,库)...

->+[文本结构_插入尾部](_凭依,+节点)->+[文本结构_插入](+节点,+序号)...
->+的(+节点,+序号)->+序号\"0\"...

->+[code]([想],描述结构)->[想](_条目,+节点)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目0)->_条目0->[eq](_条目0,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目0)
}


"(,)
的#17""(设置函数#16,描述结构#18)
描述结构#18"\"\"\"
情况0:...
单元0:...

\"\"\"
+描述结构(_条目,_节点)->+操作(+描述结构,)...

->定义(_条目,情况)->+[code]([想],情况0)...
    ->+[.]([想],+操作)->[想](情况,_节点)...

->+设置条目(_条目,_节点)->+的(+操作,+设置条目)


"(,)
的#19""(描述结构#18,情况0#20)
情况0#20"\"\"\"


\"\"\"
+情况0(情况,_节点)->.(+情况0,操作)...
->情况0->的(描述结构,情况0)->的(描述结构,单元0)...

->+[文本结构_插入尾部](_节点,+节点)...
->[投影](,+[文本结构_插入尾部])->[投影](,+节点)...

->的(_节点,序号)->+的(+节点,+序号)->+[文本结构_插入](+节点,+序号)...
->[投影](,+[文本结构_插入])->[投影](,+序号)...
->+[.]\"n\"([python],序号)->[python]\"
state=True
ans=int(n[0]-1)
\"(Python,+序号)...

->情况(,单元)->+[code]([想],单元0)...
    ->+[.]([想],操作)->[想](单元,+节点)...
->[]{
    []=>情况#1(情况,)=>+[code]([想]#1,情况0)...
        ->+[.]([想]#1,操作)->[想]#1(情况#1,_节点)
}...

->+设置情况(情况,+节点)->+的(操作,+设置情况)


"(,)
的#21""(描述结构#18,单元0#22)
单元0#22"\"\"\"


\"\"\"
+单元0(单元,_节点)->.(+单元0,操作)...
->单元0->的(描述结构,单元0)->的(描述结构,情况0)...

->+[文本结构_插入](_节点,+单元)...
->[投影](,+[文本结构_插入])->[投影](,+单元)...

->的(_节点,序号)->+的(+单元,+序号)->+[文本结构_插入](+单元,+序号)...
->[投影](,+[文本结构_插入])->[投影](,+序号)...
->+[.]\"n\"([python],序号)->[python]\"
state=True
ans=int(n[0]+1)
\"(Python,+序号)...

->单元(,_类型)->[]{
    []:->节点(_类型,内容)->内容(,)...
        ->+[文本结构_插入](+单元,+标题)->[m_text](内容,+标题)...
        ->[投影](,+[文本结构_插入])->[投影](,+标题),
    ->[is](_类型,标点)->标点->[m_text](序号,+序号),
    ->[]
}...

->[]{
    []=>[is](_类型,模块)->模块(,情况)=>+[code]([想]#1,情况0)...
        ->+[.]([想]#1,操作)->[想]#1(情况,+单元)
}...
->[]{
    []=>单元#1(单元,)=>+[code]([想],单元0)...
        ->+[.]([想],操作)->[想](单元#1,+单元)
}...

->+设置单元(单元,+单元)->+的(操作,+设置单元)




"(,)
的#23""(设置函数#16,库#24)
库#24"

设置单元:...
设置情况:...
设置条目:...
将条目\"设置单元\"复制为条目\"设置条目\"


"(,)
的#25""(库#24,设置条目#26)
设置条目#26"\"\"\"
条目模板:...

\"\"\"
+设置条目(_单元,_节点)->+[del](,+设置条目)...
->的(设置条目,条目模板)...

->_单元(,内容)...
->+[模板文本](条目模板,_节点)->+[.](+[模板文本],内容)...

->[]{
    []:->顺序(_节点,)->+缩进\"    \"(_节点,顺序)->+的(_节点,+缩进),
    ->[]
}
"(,)
的#27""(设置条目#26,条目模板#28)
条目模板#28"
def parser_token_%内容(code,i,list_pt=None):
    i0=i
    if list_pt==None:
        list_pt=[]
    list_new=[]
    list_new0=list_new

%s

    if state==False:
        print(\"%内容:\",state)
        return [False,i0,None]
    else:
        list_pt+=list_new
        print(\"%内容:\",state,pt%序号.info())
        return [True,i,pt%序号]
"(,)
的#29""(库#24,设置情况#30)
设置情况#30"\"\"\"
情况模板:...
情况模板2:...
P代码:...

保存:...

\"\"\"
+设置情况(_情况,_节点)->+[del](,+设置情况)...
->的(设置情况,情况模板)->的(设置情况,情况模板2)...
->的(设置情况,P代码)...

->_节点->[]{
    []:->节点(,_节点)->插入(_节点,)->的(插入,序号)...
        ->+[python](Python,_节点)->+[code](+[python],P代码)...
        ->+[.]\"n_pt\"(+[python],序号)...
        ->[]{
            []:->插入(_节点,)->的(插入,单元)...
                ->+缩进\"    \"(插入,单元)->+的(_节点,+缩进),
            ->[]
        },
    ->+[模板文本](,_节点)->+[code](+[模板文本],情况模板)
}


"(,)
的#31""(设置情况#30,情况模板#32)
情况模板#32"%单元
"(,)
的#33""(设置情况#30,情况模板2#34)
情况模板2#34"if state==False:
    i=i%序号
    list_new=[]
%单元
"(,)
的#35""(设置情况#30,P代码#36)
P代码#36"\"\"\"


\"\"\"

ans=\"\"\"if state==False:
    i=i%d
    list_new=list_new%d
%%单元
\"\"\"%(n_pt[0]+1,n_pt[0]+1)


"(,)
的#37""(设置情况#30,保存#38)
保存#38"\"\"\"
情况模板:...
情况模板2:...
P代码:...

\"\"\"
+设置情况(_情况,_节点)->+[del](,+设置情况)...
->的(设置情况,情况模板)->的(设置情况,情况模板2)...
->的(设置情况,P代码)...

->_节点->+[模板文本](,_节点)...
->[]{
    []:->节点(,_节点)->+[code](+[模板文本],情况模板2)...
        ->[]{
            []:->插入(_节点,)->的(插入,单元)...
                ->+缩进\"    \"(插入,单元)->+的(_节点,+缩进),
            ->[]
        },
    ->+[code](+[模板文本],情况模板)
}


"(,)
的#39""(库#24,设置单元#40)
设置单元#40"\"\"\"
本体:...
本体2:...
本体2a:...
本体3:...
新建1:...
新建2:...
P代码(Python):...
或许_开头:...
或许_结尾:...
或许_补充(Python):...
(我不记得这个有什么用了, 暂时注释掉)
(可能是用来传递代表节点)
单元模板:...
单元模板2:...
增加:...
增加2:...
节点

\"\"\"
+设置单元(_单元,_节点)->+[del](,+设置单元)...
->的(设置单元,本体)->的(设置单元,本体3)...
->的(设置单元,本体2)->的(设置单元,本体2a)...
->的(设置单元,或许_开头)->的(设置单元,或许_结尾)->的(设置单元,或许_补充)...
->的(设置单元,P代码)...
->的(设置单元,单元模板)->的(设置单元,单元模板2)...
->的(设置单元,增加)->的(设置单元,增加2)...
->的(设置单元,新建1)->的(设置单元,新建2)...

->_单元(,_类型)->_类型(,)...
->+[临时文本]#本体->[]{
    []:->[is](_类型,引用)->引用(,内容)...
        ->+[模板文本](本体,+[临时文本]#本体)->+[.](+[模板文本],内容),
    ->[is](_类型,标点)->标点(,标点#1)...
        ->+[模板文本](本体3,+[临时文本]#本体)->+[.]\"内容\"(+[模板文本],标点#1),
    ->[is](_类型,模块)->模块->或许(模块,)...
        ->+[模板文本](本体2a,+[临时文本]#本体),
    ->[is](_类型,模块#2)->模块#2(,)...
        ->+[模板文本](本体2,+[临时文本]#本体)
}...
->[]{
    []:->节点(_类型,)->[]{
        []:->[is](_类型,标点)->标点->+[增加内容](新建2,+[临时文本]#本体),
        ->+[增加内容](新建1,+[临时文本]#本体)
    }, ->[]
}...

->插入(_节点,)->的(插入,序号)...

->+[临时文本]#或许1->+[临时文本]#或许2->+[临时文本]#或许3(,)...
->Python->[]{
    []:->或许#0(_类型,)->+[修改内容](或许_开头,+[临时文本]#或许1)...
        ->+[修改内容](或许_结尾,+[临时文本]#或许2)...
        ->[]{
            []:->节点(_类型,)->+[python](Python,+[临时文本]#或许3)...
                ->+[code](+[python],或许_补充)...
                ->+[.]\"n\"(+[python],序号)->+[o]\"text_out\"(+[python],+[增加内容])...
                ->+[增加内容](,+[临时文本]#或许2),
            ->[]
        }, ->[]
}...
->[]{
    []:->[is](_类型,模块)->模块,
    ->[]{[]:->节点(_类型,),->[is](_类型,引用)->引用}...
        ->+[python](Python,+[增加内容])->+[增加内容](,+[临时文本]#本体)...
        ->+[code](+[python],P代码)->+[.]\"n\"(+[python],序号),
    ->[]
}...

->+[增加内容2](+[临时文本]#或许1,+[临时文本]#本体)...
->+[增加内容](+[临时文本]#或许2,+[临时文本]#本体)...

->+[模板文本](,_节点)...
->+[.]\"本体\"(+[模板文本],+[临时文本]#本体)...
->[]{
    []:->的(插入,单元)->单元->+[code](+[模板文本],单元模板2)...
        ->+缩进\"    \"(插入,单元)->+的(单元,+缩进)...
        ->+[增加内容](+[临时文本]#或许3,_节点),
    ->+[code](+[模板文本],单元模板)
}...

->[]{
    []:->节点(_类型,)->[]{
        []:->或许#0(_类型,)->+[增加内容](增加2,_节点),
        ->+[增加内容](增加,_节点)
    },
    ->[]
}

"(,)
的#41""(设置单元#40,单元模板#42)
单元模板#42"%本体"(,)
的#43""(设置单元#40,单元模板2#44)
单元模板2#44"%本体
if state==True:
%单元"(,)
的#45""(设置单元#40,本体#46)
本体#46"[state,i,pt%序号]=parser_token_%内容(code,i,list_new)"(,)
的#47""(设置单元#40,本体2#48)
本体2#48"i%序号=i
list_new%序号=list_new[:]
%s"(,)
的#49""(设置单元#40,本体3#50)
本体3#50"[state,i,text]=word_pat_token(code,i,r'%内容')"(,)
的#51""(设置单元#40,或许_结尾#52)
或许_结尾#52"
if state==False:
    i=i%序号
    list_new=list_new%序号
    state=True
    state%序号=False
# else:
#     list_new=list_new%序号+list_new"(,)
的#53""(设置单元#40,P代码#54)
P代码#54"\"\"\"
print(\"%或许\")
print(n,type_or)

\"\"\"

ans=\"\"

if n[0]>0:
    ans+=\"\"\"
if state==True:
    pt%d.con(pt%d,0)
else:
    pt%d=pt%d\"\"\"%(n[0],n[0]-1,n[0],n[0]-1)


"(,)
的#55""(设置单元#40,增加#56)
增加#56"
if state==True:
    list_new.append(pt%序号)"(,)
的#57""(设置单元#40,新建1#58)
新建1#58"
if state==True:
    pt%序号=NetP(\"%标题\").con(0,pt%序号)"(,)
的#59""(设置单元#40,新建2#60)
新建2#60"
pt%序号=NetP(\"%标题\",text)"(,)
的#61""(设置单元#40,或许_开头#62)
或许_开头#62"i%序号=i
state%序号=True
list_new%序号=list_new[:]
# list_new=[]
"(,)
的#63""(设置单元#40,或许_补充#64)
或许_补充#64"\"\"\"
print(\"%或许\")
print(n,type_or)
保存:...

\"\"\"

ans=\"\"\"
#if state%%序号==False:
#    try:
#        pt%d=pt%d
#    except:
#        pt%d=None\"\"\"%(n[0],n[0]+1,n[0])

if n[0]>0:
    text_out=\"\"\"
    pt%d=pt%d\"\"\"%(n[0],n[0]-1)
else:
    text_out=\"\"
"(,)
的#65""(或许_补充#64,保存#66)
保存#66"\"\"\"
print(\"%或许\")
print(n,type_or)
保存:...

\"\"\"

ans=\"\"\"
if state%%序号==False:
    try:
        pt%d=pt%d
    else:
        pt%d=None\"\"\"%(n[0],n[0]+1)



"(,)
的#67""(设置单元#40,增加2#68)
增加2#68"
if state%序号==True:
    list_new.append(pt%序号)"(,)
的#69""(设置单元#40,本体2a#70)
本体2a#70"%s"(,)
的#71""(降临规则#4,生成代码#72)
生成代码#72"\"\"\"
模板:...

\"\"\"
+生成代码(_媒介,_凭依)->+[del](,+生成代码)...
->的(生成代码,模板)...

->+[标题](_凭依,)->的(_凭依,结构)->的(结构,起点)...
->起点(,条目)->条目(,内容)...
->+[模板文本](模板,_凭依)...
->+[.](+[模板文本],+[标题])->+[.]\"条目\"(+[模板文本],内容)...

->+[结构转文本](_凭依,_凭依)...
->+[删除结构](,_凭依)




"(,)
的#73""(生成代码#72,模板#74)
模板#74"\"\"\"
+[P函数](,%[标题])
print('2'.replace('2','333'))

\"\"\"

import re
from body.bone import NetP
from tools import tools_basic

def word_pat_token(code,i,pat):
    text=''

#    pat=pat.replace('\\','\\\\')
    a=re.match(pat,code[i:])
    if a==None:
        state=False
    else:
        di=a.span()[1]
        output_txt=code[i:i+di]
        i+=di
        state=True
        text=output_txt
    
    return [state,i,text]

%s

def parser_text2pts(code):
    list_pt0=[]
    [state,i,pt]=parser_token_%条目(code,0,list_pt0)
    list_pt=[]
    for pt in list_pt0:
        if pt!=None:
                list_pt.append(pt)
    if state==False:
        return ''
    text=tools_basic.writeStdCode([],list_pt)
    return text

#text=parser_text2pts('A:B')
#print(text)



\"\"\"
+[P函数](,%[标题])

\"\"\""(,)

## end
#733, 206:
"""


"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"生成Parser代码_快速"(,召唤星辰)...
    ->+生成代码(_媒介,_凭依)->+的(操作,+生成代码)...
    ->+结构变换(_媒介,_凭依)->+的(操作,+结构变换)...
    ->+生成结构(_媒介,_凭依)->+的(操作,+生成结构)




## end
#735, 7956:
代码结构转文本描述#0"

召唤规则:...
降临规则:...



"(,)
的#1""(代码结构转文本描述#0,降临规则#2)
降临规则#2"

生成结构:...
整理文本:...
整理结构:...

"(,)
的#3""(降临规则#2,整理结构#4)
整理结构#4"\"\"\"


\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->+[记住](,_凭依)->+[修改内容](_凭依,+[显示])
"(,)
的#5""(降临规则#2,生成结构#6)
生成结构#6"\"\"\"
描述结构:...
库:...

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),
    ->+的(_凭依,+结构)
}->的(_凭依,结构)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#7""(生成结构#6,库#8)
库#8"
描述模块:...


"(,)
的#9""(库#8,描述模块#10)
描述模块#10"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#11""(描述模块#10,写模块#12)
写模块#12"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#13""(写模块#12,P代码b#14)
P代码b#14""(,)
的#15""(写模块#12,P代码3#16)
P代码3#16"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#17""(写模块#12,P代码2#18)
P代码2#18"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#19""(P代码2#18,测试#20)
测试#20"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#21""(写模块#12,P代码#22)
P代码#22"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#23""(生成结构#6,描述结构#24)
描述结构#24"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(_媒介,起点)->起点(,块)->+观察(+代码块,块)->[观察代码结构](_媒介,+观察)...
->+[code]([想],收集块)->[想](结构,+观察)->o([想],模块)...

->+描述模块(,模块)->+的(+操作,+描述模块)

"(,)
的#25""(描述结构#24,收集块#26)
收集块#26"\"\"\"
P代码:...
P代码1:...
P代码2:...
收集内容:...
+[新建阅读窗口](,P代码)
+[新建阅读窗口](,收集内容)

保存:...

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"1,1,1\"(,_块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->[]{
    []:->条件(观察,条件#1)->条件#1(,_cond)->+的(结构,+模块#2)->+模块#2\"1,1,1\"...
        ->+条件#2(+模块#2,)->+的#2(结构,+条件#2)->[m_text](_cond,+条件#2)...
        ->[投影](,+的)->[投影](,+模块#2)->[投影](,+的#2)->[投影](,+条件#2)...
        ->+内部(+模块#2,+模块)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
    ->+[o](+收集块,+模块#2),

    ->否则(观察,)...
        ->+模块#2\"1,1,1\"->+的(结构,+模块#2)->[投影](,+的)->[投影](,+模块#2)...
        ->+内容\"else\"(+模块#2,)->+的(结构,+内容)->[投影](,+的)->[投影](,+内容)...
        ->+内部(+模块#2,+模块)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
    ->+[o](+收集块,+模块#2),

    ->+[o](+收集块,+模块)
}...

->+[code]([python]#0,P代码1)...
    ->+[.]\"func_name\"([python]#0,+内容)->+[.]\"bk1\"([python]#0,+模块)...
    ->[python]#0(Python,+模块)...
->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...
->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码2)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}

"(,)
的#27""(收集块#26,保存#28)
保存#28"\"\"\"
P代码:...
P代码1:...
P代码2:...
收集内容:...
+[新建阅读窗口](,P代码)

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"1,1,1\"(,_块)->+[o](+收集块,+模块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->+[code]([python]#0,P代码1)...
    ->+[.]\"func_name\"([python]#0,+内容)->+[.]\"bk1\"([python]#0,+模块)...
    ->[python]#0(Python,+模块)...
->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...
->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码2)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}

"(,)
的#29""(收集块#26,P代码1#30)
P代码1#30"\"\"\"


\"\"\"

state=True
# print(\"!!!!\",func_name,len(func_name))
bk1[0]=len(func_name)
ans=bk1

"(,)
的#31""(收集块#26,收集内容#32)
收集内容#32"\"\"\"

    ->否则(观察,)->[m_text]\"else\"(,内容),

\"\"\"
+收集内容(观察,内容)...

->[]{
    []:->如果(观察,)->[m_text]\"if\"(,内容),
    ->循环(观察,)->[m_text]\"loop\"(,内容),
    ->函数(观察,)->.\"函数\"(观察,_模块)->_模块(,name)...
        ->[m_text](name,内容)->[m_name](+函数,内容),
    ->[m_text]\"code\"(,内容)
}


"(,)
的#33""(收集块#26,P代码2#34)
P代码2#34"\"\"\"


\"\"\"
state=True
bk1[2]+=bk2[2]+1
ans=bk1
"(,)
的#35""(收集块#26,P代码#36)
P代码#36"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk1[0]+=1
bk1[1]=np.max([bk1[2],bk2[2]])
bk1[2]=bk1[1]
ans=bk1
"(,)
的#37""(降临规则#2,整理文本#38)
整理文本#38"\"\"\"


\"\"\"
+整理文本

"(,)
的#39""(代码结构转文本描述#0,召唤规则#40)
召唤规则#40"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"代码结构转文本描述\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)

## end
#737, 155:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"代码结构转文本描述"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#739, 22594:
代码结构转流程图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(代码结构转流程图#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"代码结构转流程图\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)
的#3""(代码结构转流程图#0,降临规则#4)
降临规则#4"

生成结构:...
布置位置:...
模块连线:...
整理结构:...
+[新建阅读窗口](,生成结构)
+[新建阅读窗口](,模块连线)

"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"
描述结构:...
库:...

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),
    ->+的(_凭依,+结构)
}->的(_凭依,结构)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#7""(生成结构#6,描述结构#8)
描述结构#8"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(_媒介,起点)->起点(,块)->+观察(+代码块,块)->[观察代码结构](_媒介,+观察)...
->+[code]([想],收集块)->[想](结构,+观察)->o([想],模块)...
->+起点(,模块)->+的(结构,+起点)->[投影](,+起点)->[投影](,+的)...

->+描述模块(,模块)->+的(+操作,+描述模块)

"(,)
的#9""(描述结构#8,收集块#10)
收集块#10"\"\"\"
P代码:...
P代码1:...
P代码2:...
+[新建阅读窗口](,P代码)

收集内容:...
后处理:...

保存:...
+[新建阅读窗口](,保存)

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"0,1,0,1\"(,_块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->+[.]([想]#0,+类型)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...

->+[code]([python]#0,P代码1)->+[s]\"func_type\"([python]#0,+类型)...
->+[s]\"func_name\"([python]#0,+内容)->+[.]\"bk1\"([python]#0,+模块)...
->[python]#0(Python,+模块)...

->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码2)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...

->+[code]([想],后处理)->[想](+收集块,+模块)

"(,)
的#11""(收集块#10,P代码#12)
P代码#12"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk1[0]+=bk2[0]
bk1[1]=np.max([bk1[1],bk2[1]])
# bk1[2]=bk1[1]
ans=bk1
"(,)
的#13""(收集块#10,P代码2#14)
P代码2#14"\"\"\"


\"\"\"
state=True
bk1[1]+=bk2[1]
ans=bk1
"(,)
的#15""(收集块#10,收集内容#16)
收集内容#16"\"\"\"
保存:...

\"\"\"
+收集内容(观察,内容)->.(+收集内容,类型)...

->[]{
    []:->如果(观察,)->[m_text]\"if\"(,内容)->[m_text]\"如果\"(,类型),
    ->循环(观察,)->[m_text]\"loop\"(,内容)->[m_text]\"循环\"(,类型),
    ->函数(观察,)->.\"函数\"(观察,_模块)->_模块(,name)...
        ->[m_text](name,内容)->[m_name](+函数,内容)->[m_text]\"函数\"(,类型),
    ->[m_text]\"code\"(,内容)->[m_text]\"运算\"(,类型)
}


"(,)
的#17""(收集内容#16,保存#18)
保存#18"\"\"\"


\"\"\"
+收集内容(观察,内容)->.(+收集内容,类型)...

->[]{
    []:->如果(观察,)->[m_text]\"if\"(,内容),
    ->条件(观察,条件#1)->条件#1(,_cond)...
        ->[m_text](_cond,内容)->[m_name](+条件,内容),
    ->否则(观察,)->[m_text]\"else\"(,内容),
    ->循环(观察,)->[m_text]\"loop\"(,内容),
    ->函数(观察,)->.\"函数\"(观察,_模块)->_模块(,name)...
        ->[m_text](name,内容)->[m_name](+函数,内容),
    ->[m_text]\"code\"(,内容)
}


"(,)
的#19""(收集块#10,P代码1#20)
P代码1#20"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

bk1[0]=np.max([len(func_name),bk1[0]])
bk1[2]=np.max([len(func_name),bk1[0]])


if func_type==\"如果\":
    bk1[1]=bk1[1]+1
elif func_type==\"函数\":
    bk1[1]=bk1[1]+1
bk1[3]=bk1[1]

ans=bk1

"(,)
的#21""(收集块#10,保存#22)
保存#22"\"\"\"
P代码:...
P代码1:...
P代码2:...
收集内容:...
+[新建阅读窗口](,P代码)

保存:...

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"1,1,1\"(,_块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->[]{
    []:->条件(观察,条件#1)->条件#1(,_cond)->+的(结构,+模块#2)->+模块#2\"1,1,1\"...
        ->+条件#2(+模块#2,)->+的#2(结构,+条件#2)->[m_text](_cond,+条件#2)...
        ->[投影](,+的)->[投影](,+模块#2)->[投影](,+的#2)->[投影](,+条件#2)...
        ->+内部(+模块#2,+模块)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
    ->+[o](+收集块,+模块#2),

    ->+[o](+收集块,+模块)
}...

->+[code]([python]#0,P代码1)...
    ->+[.]\"func_name\"([python]#0,+内容)->+[.]\"bk1\"([python]#0,+模块)...
    ->[python]#0(Python,+模块)...
->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...
->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码2)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}

"(,)
的#23""(收集块#10,后处理#24)
后处理#24"\"\"\"
P代码:...

\"\"\"

+后处理(收集块,模块)...

->收集块(结构,观察)->结构->观察(,)...
->+[code]([python],P代码)->[python](Python,+模块#2)...
->[]{
    []:->条件(观察,条件#1)->条件#1(,_cond)->+的(结构,+模块#2)...
        ->+条件#2(+模块#2,)->+的#2(结构,+条件#2)->[m_text](_cond,+条件#2)...
        ->[投影](,+的)->[投影](,+模块#2)->[投影](,+的#2)->[投影](,+条件#2)...
        ->+顺序(+模块#2,模块)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
    ->+[o](收集块,+模块#2),

    ->否则(观察,)...
        ->+的(结构,+模块#2)->[投影](,+的)->[投影](,+模块#2)...
        ->+内容\"else\"(+模块#2,)->+的(结构,+内容)->[投影](,+的)->[投影](,+内容)...
        ->+顺序(+模块#2,模块)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
    ->+[o](收集块,+模块#2),

    ->+[o](收集块,模块)
}



"(,)
的#25""(后处理#24,P代码#26)
P代码#26"\"\"\"


\"\"\"

state=True
ans=bk1
ans[1]+=0.5
ans[3]=0.5

"(,)
的#27""(生成结构#6,库#28)
库#28"
描述模块:...


"(,)
的#29""(库#28,描述模块#30)
描述模块#30"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#31""(描述模块#30,写模块#32)
写模块#32"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#33""(写模块#32,P代码#34)
P代码#34"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#35""(写模块#32,P代码2#36)
P代码2#36"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#37""(P代码2#36,测试#38)
测试#38"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#39""(写模块#32,P代码3#40)
P代码3#40"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#41""(写模块#32,P代码b#42)
P代码b#42""(,)
的#43""(降临规则#4,整理结构#44)
整理结构#44"\"\"\"


\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->+[显示PPT场景]\"1\"(,_凭依)->+[PPT场景转H代码](_凭依,_凭依)


"(,)
的#45""(降临规则#4,模块连线#46)
模块连线#46"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+模块连线(_媒介,_凭依)->+[del](,+模块连线)...
->的(模块连线,描述结构)->的(模块连线,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_模块1,_模块2)->_模块1->_模块2(,)...
        =>[说]\"连线: \"(,_操作)->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_模块1,_模块2)->+[code](+[做],_条目)->+[.](+[做],_凭依)
}


"(,)
的#47""(模块连线#46,描述结构#48)
描述结构#48"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#49""(描述结构#48,绘制模块#50)
绘制模块#50"\"\"\"
连线类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2),
    ->[]
}...

->+[code]([想]#0,连线类型)->[想]#0(操作,模块)


"(,)
的#51""(绘制模块#50,连线类型#52)
连线类型#52"\"\"\"


\"\"\"
+连线类型(操作,模块)...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+画顺序(模块,模块#2)->+的(操作,+画顺序),
    ->[]
}...
->[]{
    []:->内容\"if\"(模块,)=>内部(模块,模块#2)->模块#2->结尾(模块#2,模块#3)...
        =>+画if开头(模块,模块#2)->+的(操作,+画if开头)...
        ->+画if结尾(模块,模块#3)->+的(操作,+画if结尾),
    ->[]
}


"(,)
的#53""(模块连线#46,库#54)
库#54"+[删除结构](,库)


画顺序:...
画if开头:...
将条目\"画if开头\"复制为条目\"画if结尾\"

画if结尾:...

"(,)
的#55""(库#54,画if结尾#56)
画if结尾#56"\"\"\"
M代码:...

\"\"\"
+画if结尾(模块#1,模块#2)->+[del](,+画if结尾)...
->的(画if结尾,M代码)...

->.(+画if结尾,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#57""(画if结尾#56,M代码#58)
M代码#58"%{
siz2
%}


Dy1=siz1(4)-0.3;
Dy2=siz2(4)-0.3;

x=[pt1(1),pt2(1),pt2(1)];
y=[pt1(2)-Dy1,pt1(2)-Dy1,pt2(2)-Dy2];

% x=[pt1(1),pt2(1)];
% y=[pt1(2)-Dy1,pt2(2)-Dy2];


"(,)
的#59""(库#54,画顺序#60)
画顺序#60"\"\"\"
M代码:...

\"\"\"
+画顺序(模块#1,模块#2)->+[del](,+画顺序)...
->的(画顺序,M代码)...

->.(+画顺序,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"折线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#61""(画顺序#60,M代码#62)
M代码#62"%{

%}


L=siz1(4)-0.3;

x=[pt1(1),pt2(1)];
y=[pt1(2)-L,pt2(2)];


"(,)
的#63""(库#54,画if开头#64)
画if开头#64"\"\"\"
M代码:...

\"\"\"
+画if开头(模块#1,模块#2)->+[del](,+画if开头)...
->的(画if开头,M代码)...

->.(+画if开头,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#65""(画if开头#64,M代码#66)
M代码#66"%{

%}


Dy1=1-0.3;
Dy2=0.2;

x=[pt1(1),pt1(1),pt2(1)];
y=[pt1(2)-Dy1,pt2(2)-Dy2,pt2(2)-Dy2];


"(,)
的#67""(降临规则#4,布置位置#68)
布置位置#68"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+布置位置(_媒介,_凭依)->+[del](,+布置位置)...
->的(布置位置,描述结构)->的(布置位置,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#69""(布置位置#68,库#70)
库#70"
绘制如果:...
绘制条件:...
绘制否则:...
+[新建阅读窗口](,绘制如果)
将条目\"绘制条件\"复制为条目\"绘制否则\"

绘制函数:...
将条目\"绘制运算\"复制为条目\"绘制函数\"

绘制运算:...


"(,)
的#71""(库#70,绘制条件#72)
绘制条件#72"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

保存:...

\"\"\"

+绘制条件(_凭依,模块)->+[del](,+绘制条件)...
->的(绘制条件,M代码)->的(绘制条件,M代码2)->的(绘制条件,M代码0)...
->的(绘制条件,M代码3)...

->+的(_凭依,+条件模块)->+在(+条件模块,+空间点)->+是(模块,+条件模块)...
->+的(+条件模块,+在)->+的(+条件模块,+空间点)->+的(模块,+是)...

->条件(模块,)->+[修改内容](条件,+条件模块)...
->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#73""(绘制条件#72,保存#74)
保存#74"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制条件(_凭依,模块)->+[del](,+绘制条件)...
->的(绘制条件,M代码)->的(绘制条件,M代码2)->的(绘制条件,M代码0)...
->的(绘制条件,M代码3)...

->+的(_凭依,+条件模块)->+在(+条件模块,+空间点)->+是(模块,+条件模块)...
->+的(+条件模块,+在)->+的(+条件模块,+空间点)->+的(模块,+是)...

->+样式\"多边形\"(+条件模块,)->+的(+条件模块,+样式)...
->+的(+条件模块,+宽度)->+的(+条件模块,+长度)...
->+的(+条件模块,+x)->+的(+条件模块,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码3)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[matlab](Matlab,+空间点)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#75""(绘制条件#72,M代码3#76)
M代码3#76"%{

%}

W=siz0(3);
L=siz0(4);

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

"(,)
的#77""(绘制条件#72,M代码0#78)
M代码0#78"%{

%}

ans=[0,0];


"(,)
的#79""(绘制条件#72,M代码2#80)
M代码2#80"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[siz1(1)/2-siz0(3)/2,-0.7]+pt1;



"(,)
的#81""(绘制条件#72,M代码#82)
M代码#82"%{
-siz0(3)/2
%}

ans=[-siz0(1)/2-siz1(1)/2,0]+pt1;


"(,)
的#83""(库#70,绘制运算#84)
绘制运算#84"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制运算(_凭依,模块)->+[del](,+绘制运算)...
->的(绘制运算,M代码)->的(绘制运算,M代码2)->的(绘制运算,M代码0)...
->的(绘制运算,M代码3)...

->+的(_凭依,+运算模块)->+在(+运算模块,+空间点)->+是(模块,+运算模块)...
->+的(+运算模块,+在)->+的(+运算模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->顺序(模块#1,模块)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}...


->+样式\"多边形\"(+运算模块,)->+的(+运算模块,+样式)...
->+的(+运算模块,+宽度)->+的(+运算模块,+长度)...
->+的(+运算模块,+x)->+的(+运算模块,+y)...

->+文字\"code\"->+的(_凭依,+文字)->+的(+运算模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码3)...
->+[.]\"pt0\"(+[matlab],+空间点)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#85""(绘制运算#84,M代码3#86)
M代码3#86"%{

%}

W=siz0(3)-1;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#87""(绘制运算#84,M代码0#88)
M代码0#88"%{

%}

ans=[0,0];


"(,)
的#89""(绘制运算#84,M代码2#90)
M代码2#90"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[0,-1]+pt1;



"(,)
的#91""(绘制运算#84,M代码#92)
M代码#92"%{

%}

ans=[0,-siz1(4)]+pt1;


"(,)
的#93""(库#70,绘制函数#94)
绘制函数#94"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制函数(_凭依,模块)->+[del](,+绘制函数)...
->的(绘制函数,M代码)->的(绘制函数,M代码2)->的(绘制函数,M代码0)...
->的(绘制函数,M代码3)...

->函数(模块,)...
->+的(_凭依,+函数模块)->+在(+函数模块,+空间点)->+是(模块,+函数模块)...
->+的(+函数模块,+在)->+的(+函数模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->顺序(模块#1,模块)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}...

->+样式\"多边形\"(+函数模块,)->+的(+函数模块,+样式)...
->+的(+函数模块,+宽度)->+的(+函数模块,+长度)...
->+的(+函数模块,+x)->+的(+函数模块,+y)...

->+文字->[m_text](函数,+文字)->+的(_凭依,+文字)->+的(+函数模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码3)...
->+[.]\"pt0\"(+[matlab],+空间点)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)

"(,)
的#95""(绘制函数#94,M代码3#96)
M代码3#96"%{

%}

W=siz0(1);
L=siz0(2);

x=[-1,1,1,-1]*W/2;
y=[0,0,-1,-1]*L;

% ans=pt0+[-1,0]*W/2+[1,1];
ans=pt0+[0,-0.5];

"(,)
的#97""(绘制函数#94,M代码#98)
M代码#98"%{

%}

ans=[0,-siz1(4)]+pt1;


"(,)
的#99""(绘制函数#94,M代码2#100)
M代码2#100"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[0,-siz1(2)]+pt1;



"(,)
的#101""(绘制函数#94,M代码0#102)
M代码0#102"%{

%}

ans=[0,0];


"(,)
的#103""(库#70,绘制否则#104)
绘制否则#104"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

保存:...

\"\"\"

+绘制否则(_凭依,模块)->+[del](,+绘制否则)...
->的(绘制否则,M代码2)->的(绘制否则,M代码0)...
->的(绘制否则,M代码3)...

->+的(_凭依,+否则模块)->+在(+否则模块,+空间点)->+是(模块,+否则模块)...
->+的(+否则模块,+在)->+的(+否则模块,+空间点)->+的(模块,+是)...

->+[修改内容]\"else\"(,+否则模块)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#105""(绘制否则#104,保存#106)
保存#106"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

保存:...

\"\"\"

+绘制否则(_凭依,模块)->+[del](,+绘制否则)...
->的(绘制否则,M代码2)->的(绘制否则,M代码0)...
->的(绘制否则,M代码3)...

->+的(_凭依,+否则模块)->+在(+否则模块,+空间点)->+是(模块,+否则模块)...
->+的(+否则模块,+在)->+的(+否则模块,+空间点)->+的(模块,+是)...

->+样式\"多边形\"(+否则模块,)->+的(+否则模块,+样式)...
->+的(+否则模块,+宽度)->+的(+否则模块,+长度)...
->+的(+否则模块,+x)->+的(+否则模块,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码3)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[matlab](Matlab,+空间点)...
->[]{
    []:->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#107""(绘制否则#104,M代码3#108)
M代码3#108"%{

%}

W=siz0(3);
L=siz0(4);

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

"(,)
的#109""(绘制否则#104,M代码#110)
M代码#110"%{

%}

ans=[siz0(1),0]+pt1;


"(,)
的#111""(绘制否则#104,M代码2#112)
M代码2#112"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[siz1(1)/2-siz0(3)/2,-0.7]+pt1;



"(,)
的#113""(绘制否则#104,M代码0#114)
M代码0#114"%{

%}

ans=[0,0];


"(,)
的#115""(库#70,绘制如果#116)
绘制如果#116"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制如果(_凭依,模块)->+[del](,+绘制如果)...
->的(绘制如果,M代码)->的(绘制如果,M代码2)->的(绘制如果,M代码0)...
->的(绘制如果,M代码3)...

->+的(_凭依,+如果模块)->+在(+如果模块,+空间点)->+是(模块,+如果模块)...
->+的(+如果模块,+在)->+的(+如果模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->顺序(模块#1,模块)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}...

->+样式\"多边形\"(+如果模块,)->+的(+如果模块,+样式)...
->+的(+如果模块,+宽度)->+的(+如果模块,+长度)...
->+的(+如果模块,+x)->+的(+如果模块,+y)...

->+文字\"if\"->+的(_凭依,+文字)->+的(+如果模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码3)...
->+[.]\"pt0\"(+[matlab],+空间点)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#117""(绘制如果#116,M代码3#118)
M代码3#118"%{

%}

W=2;
L=1-0.3;

x=[-1,0,1,0]*W/2;
y=-[1/2,0,1/2,1]*L;

ans=pt0+[0,-1/2]*L;
"(,)
的#119""(绘制如果#116,M代码0#120)
M代码0#120"%{

%}

ans=[0,0];


"(,)
的#121""(绘制如果#116,M代码2#122)
M代码2#122"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[0,-1]+pt1;



"(,)
的#123""(绘制如果#116,M代码#124)
M代码#124"%{

%}

ans=[0,-siz1(4)]+pt1;


"(,)
的#125""(布置位置#68,描述结构#126)
描述结构#126"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#127""(描述结构#126,绘制模块#128)
绘制模块#128"\"\"\"
模块类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)...
        ->+结尾(模块#2,模块#3)->+的(结构,+结尾)->[投影](,+的)->[投影](,+结尾):
            ->上一个(+结构,)...
                ->+上一个(+结构,模块#1)->模块#1->+[上一个](+结构,模块#2)...
                ->+相邻(模块#1,模块#2)->+的(结构,+相邻)->[投影](,+的)->[投影](,+相邻),
            ->+[上一个](+结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)->+结尾(+绘制模块,模块#3),
    ->+结尾(+绘制模块,模块)
}...

->+[code]([想]#0,模块类型)->[想]#0(操作,模块)


"(,)
的#129""(绘制模块#128,模块类型#130)
模块类型#130"\"\"\"
->+绘制运算(,模块)->+的(操作,+绘制运算),
    

\"\"\"

+模块类型(操作,模块)...

->[]{
    []:->内容(模块,)->[]{
        []:->[==]\"if\"(,内容)->+绘制如果(,模块)->+的(操作,+绘制如果),
        ->[==]\"else\"(,内容)->+绘制否则(,模块)->+的(操作,+绘制否则),
        ->[==]\"code\"(,内容)->+绘制运算(,模块)->+的(操作,+绘制运算)
    },
    ->条件(模块,)->+绘制条件(,模块)->+的(操作,+绘制条件),
    ->函数(模块,)->+绘制函数(,模块)->+的(操作,+绘制函数),
    ->+绘制运算(,模块)->+的(操作,+绘制运算)
}


"(,)

## end
#741, 222:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"代码结构转流程图"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#743, 18836:
一般结构转流程图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(一般结构转流程图#0,降临规则#2)
降临规则#2"

生成结构:...
布置位置:...
模块连线:...
整理结构:...
+[新建阅读窗口](,生成结构)
+[新建阅读窗口](,模块连线)

"(,)
的#3""(降临规则#2,布置位置#4)
布置位置#4"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+布置位置(_媒介,_凭依)->+[del](,+布置位置)...
->的(布置位置,描述结构)->的(布置位置,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#5""(布置位置#4,描述结构#6)
描述结构#6"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#7""(描述结构#6,绘制模块#8)
绘制模块#8"\"\"\"
模块类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)...
        ->+结尾(模块#2,模块#3)->+的(结构,+结尾)->[投影](,+的)->[投影](,+结尾):
            ->上一个(+结构,)...
                ->+上一个(+结构,模块#1)->模块#1->+[上一个](+结构,模块#2)...
                ->+相邻(模块#1,模块#2)->+的(结构,+相邻)->[投影](,+的)->[投影](,+相邻),
            ->+[上一个](+结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)->+结尾(+绘制模块,模块#3),
    ->+结尾(+绘制模块,模块)
}...

->+[code]([想]#0,模块类型)->[想]#0(操作,模块)


"(,)
的#9""(绘制模块#8,模块类型#10)
模块类型#10"\"\"\"
保存:...

\"\"\"

+模块类型(操作,模块)...

->[]{
    []:->内部(模块,)->+绘制分支(,模块)->+的(操作,+绘制分支),
    ->+绘制运算(,模块)->+的(操作,+绘制运算)
}...

->[]{
    []:->内部(,模块)->+布置支路(,模块)->+的(操作,+布置支路),
    ->+布置运算(,模块)->+的(操作,+布置运算)
}



"(,)
的#11""(模块类型#10,保存#12)
保存#12"\"\"\"
->+绘制运算(,模块)->+的(操作,+绘制运算),
    

\"\"\"

+模块类型(操作,模块)...

->[]{
    []:->内容(模块,)->[]{
        []:->[==]\"if\"(,内容)->+绘制如果(,模块)->+的(操作,+绘制如果),
        ->[==]\"else\"(,内容)->+绘制否则(,模块)->+的(操作,+绘制否则),
        ->[==]\"code\"(,内容)->+绘制运算(,模块)->+的(操作,+绘制运算)
    },
    ->条件(模块,)->+绘制条件(,模块)->+的(操作,+绘制条件),
    ->函数(模块,)->+绘制函数(,模块)->+的(操作,+绘制函数),
    ->+绘制运算(,模块)->+的(操作,+绘制运算)
}


"(,)
的#13""(布置位置#4,库#14)
库#14"
+[修改标题]\"布置支路\"(,绘制支路)
布置运算:...
布置支路:...

绘制分支:...
绘制运算:...
+[新建阅读窗口](,绘制运算)




"(,)
的#15""(库#14,绘制运算#16)
绘制运算#16"\"\"\"
M代码:...

\"\"\"

+绘制运算(_凭依,模块)->+[del](,+绘制运算)...
->的(绘制运算,M代码)...

->是(模块,_模块)->在(_模块,空间点)...
->内容(模块,)...

->+样式\"多边形\"(_模块,)->+的(_模块,+样式)...
->+的(_模块,+宽度)->+的(_模块,+长度)->+的(_模块,+x)->+的(_模块,+y)...

->[m_text](内容,+文字)->+的(_凭依,+文字)->+的(_模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],空间点)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#17""(绘制运算#16,M代码#18)
M代码#18"%{
pt0
%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#19""(库#14,绘制分支#20)
绘制分支#20"\"\"\"
M代码:...

\"\"\"

+绘制分支(_凭依,模块)->+[del](,+绘制分支)...
->的(绘制分支,M代码)...

->是(模块,_模块)->在(_模块,空间点)...
->内容(模块,)...

->+样式\"多边形\"(_模块,)->+的(_模块,+样式)...
->+的(_模块,+宽度)->+的(_模块,+长度)->+的(_模块,+x)->+的(_模块,+y)...

->[m_text](内容,+文字)->+的(_凭依,+文字)->+的(_模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],空间点)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#21""(绘制分支#20,M代码#22)
M代码#22"%{
pt0
%}

W=2-0.5;
L=1-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#23""(库#14,布置运算#24)
布置运算#24"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+布置运算(_凭依,模块)->+[del](,+布置运算)...
->的(布置运算,M代码)->的(布置运算,M代码2)->的(布置运算,M代码0)...
->的(布置运算,M代码3)...

->内容(模块,)...
->+的(_凭依,+运算模块)->+在(+运算模块,+空间点)->+是(模块,+运算模块)...
->+的(+运算模块,+在)->+的(+运算模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->顺序(模块#1,模块)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}
"(,)
的#25""(布置运算#24,M代码#26)
M代码#26"%{

%}

ans=[0,-siz1(4)]+pt1;


"(,)
的#27""(布置运算#24,M代码2#28)
M代码2#28"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[0,-1]+pt1;



"(,)
的#29""(布置运算#24,M代码0#30)
M代码0#30"%{

%}

ans=[0,0];


"(,)
的#31""(布置运算#24,M代码3#32)
M代码3#32"%{

%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#33""(库#14,布置支路#34)
布置支路#34"\"\"\"
M代码:...
M代码0:...

M代码2:...
M代码2b:...

M代码3:...

保存:...

...

->+样式\"多边形\"(+支路模块,)->+的(+支路模块,+样式)...
->+的(+支路模块,+宽度)->+的(+支路模块,+长度)...
->+的(+支路模块,+x)->+的(+支路模块,+y)...

->[m_text](内容,+文字)->+的(_凭依,+文字)->+的(+支路模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码3)...
->+[.]\"pt0\"(+[matlab],+空间点)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)




\"\"\"

+布置支路(_凭依,模块)->+[del](,+布置支路)...
->的(布置支路,M代码)->的(布置支路,M代码0)...
->的(布置支路,M代码2)->的(布置支路,M代码2b)...
->的(布置支路,M代码3)...

->内容(模块,)...
->+的(_凭依,+支路模块)->+在(+支路模块,+空间点)->+是(模块,+支路模块)...
->+的(+支路模块,+在)->+的(+支路模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2)...
        ->[]{
            []:->相邻(,模块)->+[code](+[matlab],M代码2),
            ->+[code](+[matlab],M代码2b)
        },

    ->+[code](+[matlab],M代码0)
}

"(,)
的#35""(布置支路#34,M代码2b#36)
M代码2b#36"%{
记住\"Matlab\"
siz0
siz1
ans=[siz1(1)/2-siz0(3)/2,-1]+pt1;
%}

ans=[0,-1]+pt1;



"(,)
的#37""(布置支路#34,M代码#38)
M代码#38"%{
-siz0(3)/2
%}

ans=[-siz0(1)/2-siz1(1)/2,0]+pt1;


"(,)
的#39""(布置支路#34,M代码2#40)
M代码2#40"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[siz1(1)/2-siz0(3)/2,-1]+pt1;



"(,)
的#41""(布置支路#34,M代码0#42)
M代码0#42"%{

%}

ans=[0,0];


"(,)
的#43""(布置支路#34,M代码3#44)
M代码3#44"%{

%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#45""(布置支路#34,保存#46)
保存#46"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制条件(_凭依,模块)->+[del](,+绘制条件)...
->的(绘制条件,M代码)->的(绘制条件,M代码2)->的(绘制条件,M代码0)...
->的(绘制条件,M代码3)...

->+的(_凭依,+条件模块)->+在(+条件模块,+空间点)->+是(模块,+条件模块)...
->+的(+条件模块,+在)->+的(+条件模块,+空间点)->+的(模块,+是)...

->+样式\"多边形\"(+条件模块,)->+的(+条件模块,+样式)...
->+的(+条件模块,+宽度)->+的(+条件模块,+长度)...
->+的(+条件模块,+x)->+的(+条件模块,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码3)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[matlab](Matlab,+空间点)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#47""(降临规则#2,模块连线#48)
模块连线#48"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+模块连线(_媒介,_凭依)->+[del](,+模块连线)...
->的(模块连线,描述结构)->的(模块连线,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_模块1,_模块2)->_模块1->_模块2(,)...
        =>[说]\"连线: \"(,_操作)->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_模块1,_模块2)->+[code](+[做],_条目)->+[.](+[做],_凭依)
}


"(,)
的#49""(模块连线#48,库#50)
库#50"+[删除结构](,库)


画顺序:...
画if开头:...
将条目\"画if开头\"复制为条目\"画if结尾\"

画if结尾:...

"(,)
的#51""(库#50,画if开头#52)
画if开头#52"\"\"\"
M代码:...

\"\"\"
+画if开头(模块#1,模块#2)->+[del](,+画if开头)...
->的(画if开头,M代码)...

->.(+画if开头,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#53""(画if开头#52,M代码#54)
M代码#54"%{
plot([pt1(1),pt2(1)],[pt1(2),pt2(2)],'ro-')
%}


Dy1=1-0.3;
Dy2=-0.15;

x=[pt1(1),pt1(1),pt2(1),pt2(1)];
y=[pt1(2)-Dy1,pt2(2)-Dy2,pt2(2)-Dy2,pt2(2)];


"(,)
的#55""(库#50,画顺序#56)
画顺序#56"\"\"\"
M代码:...

\"\"\"
+画顺序(模块#1,模块#2)->+[del](,+画顺序)...
->的(画顺序,M代码)...

->.(+画顺序,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"折线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#57""(画顺序#56,M代码#58)
M代码#58"%{

%}


L=siz1(4)-0.3;

x=[pt1(1),pt2(1)];
y=[pt1(2)-L,pt2(2)];


"(,)
的#59""(库#50,画if结尾#60)
画if结尾#60"\"\"\"
M代码:...

\"\"\"
+画if结尾(模块#1,模块#2)->+[del](,+画if结尾)...
->的(画if结尾,M代码)...

->.(+画if结尾,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[临时文本]\"0\"->+[.]\"flag1\"(+[matlab],+[临时文本])->[]{
    []:->结尾(,模块#1)->[m_text]\"1\"(,+[临时文本]),
    ->[]
}...
->+[临时文本]\"0\"->+[.]\"flag2\"(+[matlab],+[临时文本])->[]{
    []:->结尾(,模块#2)->内部(模块#2,)->[m_text]\"1\"(,+[临时文本]),
    ->[]
}

"(,)
的#61""(画if结尾#60,M代码#62)
M代码#62"%{
siz2
%}


Dy1=siz1(4)-0.15;
Dy2=siz2(4)-0.3;

x=[pt1(1),pt1(1),pt2(1),pt2(1)];
y=[pt1(2)-siz1(4),pt1(2)-Dy1,pt1(2)-Dy1,pt2(2)-Dy2];

if flag2==1
    x(end)=[];
    y(end)=[];
end
if flag1==1
    x(1)=[];
    y(1)=[];
end
"(,)
的#63""(模块连线#48,描述结构#64)
描述结构#64"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#65""(描述结构#64,绘制模块#66)
绘制模块#66"\"\"\"
连线类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2),
    ->[]
}...

->+[code]([想]#0,连线类型)->[想]#0(操作,模块)


"(,)
的#67""(绘制模块#66,连线类型#68)
连线类型#68"\"\"\"


\"\"\"
+连线类型(操作,模块)...

->[]{
    []:->顺序(模块,模块#2)->模块#2{[]=>内部(模块,)}...
        ->+画顺序(模块,模块#2)->+的(操作,+画顺序),
    ->[]
}...
->[]{
    []:->内容(模块,)=>内部(模块,模块#2)->模块#2->结尾(模块#2,模块#3)...
    =>+画if开头(模块,模块#2)->+的(操作,+画if开头)...
        ->[]{
            []:->起点(,模块),
            ->+画if结尾(模块,模块#3)->+的(操作,+画if结尾)
        },
    ->[]
}


"(,)
的#69""(降临规则#2,整理结构#70)
整理结构#70"\"\"\"

\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->+[显示PPT场景]\"1\"(,_凭依)->+[PPT场景转H代码](_凭依,_凭依)



"(,)
的#71""(降临规则#2,生成结构#72)
生成结构#72"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),
    ->+的(_凭依,+结构)
}->的(_凭依,结构)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#73""(生成结构#72,库#74)
库#74"
描述模块:...


"(,)
的#75""(库#74,描述模块#76)
描述模块#76"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#77""(描述模块#76,写模块#78)
写模块#78"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#79""(写模块#78,P代码b#80)
P代码b#80""(,)
的#81""(写模块#78,P代码3#82)
P代码3#82"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#83""(写模块#78,P代码2#84)
P代码2#84"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#85""(P代码2#84,测试#86)
测试#86"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#87""(写模块#78,P代码#88)
P代码#88"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#89""(生成结构#72,描述结构#90)
描述结构#90"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->+记录描述(记忆,收集块)...
->的(_媒介,起点)->起点(,_块)->+观察(+结构块,_块)->[描述结构](_媒介,+观察)...
->+[code]([想],收集块)->[想](结构,+观察)->o([想],模块)...
->+起点(,模块)->+的(结构,+起点)->[投影](,+起点)->[投影](,+的)...

->+描述模块(,模块)->+的(+操作,+描述模块)

"(,)
的#91""(描述结构#90,收集块#92)
收集块#92"\"\"\"
收集行:...
P代码_自身:...

\"\"\"
+收集块(结构,观察)...

->Python->[]{
    []:->.(+收集块,模块)->模块,

    ->+[.](+收集块,+模块#0)...
        ->+的(结构,+模块#0)->+模块#0\"2,1,2,1\"->[投影](,+的)->[投影](,+模块#0)...
        ->+的(结构,+内容)->+内容\"起点\"(+模块#0,)->[投影](,+的)->[投影](,+内容)
}->.(+收集块,模块#0)...

->观察(,_块)...
->+[code]([想],收集行)->+[.]([想],模块#0)->[想](结构,观察)...
->+[o](+收集块,模块#0)



"(,)
的#93""(收集块#92,收集行#94)
收集行#94"\"\"\"
收集点:...
P代码_内部:...

\"\"\"

+收集行(结构,观察)->.(+收集行,模块)...

->然后\"内部\"(观察,观察#0)...
    ->+[code]([想]#0,收集点)->[想]#0(结构,观察#0)->o([想]#0,模块#0)...
    ->+[o](+收集行,模块#0)...
->+内部(模块,模块#0)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...

->[]{
    []=>然后\"平行\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想],收集行)->+[.]([想],模块)->[想](结构,观察#1)->o([想],模块#1)
}...
->+[code]([python],P代码_内部)...
->+[.]\"bk0\"([python],模块)->+[.]\"bk1\"([python],模块#0)...
->[python](Python,模块)



"(,)
的#95""(收集行#94,收集点#96)
收集点#96"\"\"\"
P代码_内部:...
P代码_自身:...
P代码_传递:...

\"\"\"

+收集点(结构,观察)...
->记录描述(记忆,收集块)...

->观察(,_块)->.\"名字\"(观察,name)...
    ->+的(结构,+模块)->+模块\"0,1,0,1\"(,_块)->[投影](,+的)->[投影](,+模块)...
    ->+的(结构,+内容)->+内容(+模块,)->[m_text](name,+内容)...
        ->[投影](,+的)->[投影](,+内容)...

->Python->[]{
    []:->然后\"子集\"(观察,观察#1)->观察#1(,)...
        ->+[code]([想]#1,收集块)->+[.]([想]#1,+模块)->[想]#1(结构,观察#1)...
        ->+[code]([python]#1,P代码_内部)...
        ->+[s]\"func_name\"([python]#1,+内容)->+[.]\"bk0\"([python]#1,+模块)...
        ->[python]#1(Python,+模块),

    ->+[code]([python]#0,P代码_自身)...
        ->+[s]\"func_name\"([python]#0,+内容)->+[.]\"bk0\"([python]#0,+模块)...
        ->[python]#0(Python,+模块)
}...

->[]{
    []=>然后\"顺序\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想]#1,收集点)->[想]#1(结构,观察#1)->o([想]#1,模块#1)...
        ->+顺序(+模块,模块#1)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码_传递)...
        ->+[.]\"bk0\"([python],+模块)->+[.]\"bk1\"([python],模块#1)...
        ->[python](Python,+模块)
}...
->+[o](+收集点,+模块)


"(,)
的#97""(收集点#96,P代码_自身#98)
P代码_自身#98"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

l_str=int(len(func_name)/8)
l_str=np.max([2,l_str])
bk0[0]=np.max([l_str,bk0[0]])
bk0[2]=np.max([l_str,bk0[0]])


# if func_type==\"如果\":
#     bk0[1]=bk0[1]+1
# elif func_type==\"函数\":
#     bk0[1]=bk0[1]+1
bk0[3]=bk0[1]

ans=bk0

"(,)
的#99""(收集点#96,P代码_传递#100)
P代码_传递#100"\"\"\"


\"\"\"
state=True
bk0[1]+=bk1[1]
bk0[0]=np.max([bk0[2],bk1[0]])
ans=bk0
"(,)
的#101""(收集点#96,P代码_内部#102)
P代码_内部#102"\"\"\"
记住\"Python\"
print(func_type)
print(int(15/5))

\"\"\"

state=True

l_str=int(len(func_name)/8)
l_str=np.max([2,l_str])
bk0[0]=np.max([l_str,bk0[0]])
bk0[2]=np.max([l_str,bk0[0]])

bk0[3]=bk0[1]+1
bk0[1]=bk0[1]+1

ans=bk0

"(,)
的#103""(收集行#94,P代码_内部#104)
P代码_内部#104"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk0[0]+=bk1[0]
bk0[1]=np.max([bk0[1],bk1[1]])
# bk1[2]=bk1[1]

ans=bk0
"(,)
的#105""(收集块#92,P代码_自身#106)
P代码_自身#106"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

l_str=int(len(func_name)/8)
l_str=np.max([2,l_str])
# l_str=len(func_name)
bk0[0]=np.max([l_str,bk0[0]])
bk0[2]=np.max([l_str,bk0[0]])


# if func_type==\"如果\":
#     bk0[1]=bk0[1]+1
# elif func_type==\"函数\":
#     bk0[1]=bk0[1]+1
bk0[3]=bk0[1]+1
bk0[1]=bk0[1]+1

ans=bk0

"(,)
的#107""(一般结构转流程图#0,召唤规则#108)
召唤规则#108"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"一般结构转流程图\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)

## end
#745, 222:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"一般结构转流程图"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#747, 7726:
一般结构转结构文字#0"

召唤规则:...
降临规则:...



"(,)
的#1""(一般结构转结构文字#0,降临规则#2)
降临规则#2"

生成结构:...
整理结构:...
+[新建阅读窗口](,生成结构)
+[新建阅读窗口](,模块连线)

"(,)
的#3""(降临规则#2,整理结构#4)
整理结构#4"\"\"\"


\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->+[修改内容](_凭依,+[显示])->+[显示]->+[删除结构](,_凭依)

"(,)
的#5""(降临规则#2,生成结构#6)
生成结构#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),
    ->+的(_凭依,+结构)
}->的(_凭依,结构)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#7""(生成结构#6,库#8)
库#8"
描述模块:...


"(,)
的#9""(库#8,描述模块#10)
描述模块#10"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#11""(描述模块#10,写模块#12)
写模块#12"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#13""(写模块#12,P代码b#14)
P代码b#14""(,)
的#15""(写模块#12,P代码3#16)
P代码3#16"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#17""(写模块#12,P代码2#18)
P代码2#18"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#19""(P代码2#18,测试#20)
测试#20"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#21""(写模块#12,P代码#22)
P代码#22"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#23""(生成结构#6,描述结构#24)
描述结构#24"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->+记录描述(记忆,收集块)...
->的(_媒介,起点)->起点(,_块)->+观察(+结构块,_块)->[描述结构](_媒介,+观察)...
->+[code]([想],收集块)->[想](结构,+观察)->o([想],模块)...
->+起点(,模块)->+的(结构,+起点)->[投影](,+起点)->[投影](,+的)...

->+描述模块(,模块)->+的(+操作,+描述模块)

"(,)
的#25""(描述结构#24,收集块#26)
收集块#26"\"\"\"
收集行:...
P代码_自身:...

\"\"\"
+收集块(结构,观察)...

->观察(,_块)...
    ->+的(结构,+模块#0)->+模块#0\"0,1,0,1\"->[投影](,+的)->[投影](,+模块#0)...
    ->+的(结构,+内容)->+内容\"┐\"(+模块#0,)->[投影](,+的)->[投影](,+内容)...
->+[code]([想],收集行)->+[.]([想],+模块#0)->[想](结构,观察)...
->+[o](+收集块,+模块#0)...

->+[code]([python]#0,P代码_自身)...
->+[s]\"func_name\"([python]#0,+内容)->+[.]\"bk0\"([python]#0,+模块#0)...
->[python]#0(Python,+模块#0)


"(,)
的#27""(收集块#26,收集行#28)
收集行#28"\"\"\"
收集点:...
P代码_内部:...

\"\"\"

+收集行(结构,观察)->.(+收集行,模块)...

->然后\"内部\"(观察,观察#0)...
    ->+[code]([想]#0,收集点)->[想]#0(结构,观察#0)->o([想]#0,模块#0)...
    ->+[o](+收集行,模块#0)...
->+内部(模块,模块#0)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...

->[]{
    []=>然后\"平行\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想],收集行)->+[.]([想],模块)->[想](结构,观察#1)->o([想],模块#1)
}...
->+[code]([python],P代码_内部)...
->+[.]\"bk0\"([python],模块)->+[.]\"bk1\"([python],模块#0)...
->[python](Python,模块)



"(,)
的#29""(收集行#28,收集点#30)
收集点#30"\"\"\"
P代码_内部:...
P代码_自身:...
P代码_传递:...

\"\"\"

+收集点(结构,观察)...
->记录描述(记忆,收集块)...

->观察(,_块)->.\"名字\"(观察,name)...
    ->+的(结构,+模块)->+模块\"0,1,0,1\"(,_块)->[投影](,+的)->[投影](,+模块)...
    ->+的(结构,+内容)->+内容(+模块,)->[m_text](name,+内容)...
        ->[投影](,+的)->[投影](,+内容)...
->[]{
    []=>然后\"子集\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想]#1,收集块)->[想]#1(结构,观察#1)->o([想]#1,模块#1)...
        ->+内部\"子集\"(+模块,模块#1)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码_内部)...
        ->+[.]\"bk0\"([python],+模块)->+[.]\"bk1\"([python],模块#1)...
        ->[python](Python,+模块)
}...

->+[code]([python]#0,P代码_自身)...
->+[s]\"func_name\"([python]#0,+内容)->+[.]\"bk0\"([python]#0,+模块)...
->[python]#0(Python,+模块)...

->[]{
    []=>然后\"顺序\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想]#1,收集点)->[想]#1(结构,观察#1)->o([想]#1,模块#1)...
        ->+顺序(+模块,模块#1)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码_传递)...
        ->+[.]\"bk0\"([python],+模块)->+[.]\"bk1\"([python],模块#1)...
        ->[python](Python,+模块)
}...
->+[o](+收集点,+模块)


"(,)
的#31""(收集点#30,P代码_自身#32)
P代码_自身#32"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

bk0[0]=np.max([len(func_name),bk0[0]])
bk0[2]=np.max([len(func_name),bk0[0]])


# if func_type==\"如果\":
#     bk0[1]=bk0[1]+1
# elif func_type==\"函数\":
#     bk0[1]=bk0[1]+1
bk0[3]=bk0[1]

ans=bk0

"(,)
的#33""(收集点#30,P代码_传递#34)
P代码_传递#34"\"\"\"


\"\"\"
state=True
bk0[1]+=bk1[1]
bk0[0]=np.max([bk0[2],bk1[0]])
ans=bk0
"(,)
的#35""(收集点#30,P代码_内部#36)
P代码_内部#36"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk0[0]+=bk1[0]
bk0[1]=np.max([bk0[1],bk1[1]])
# bk1[2]=bk1[1]

ans=bk0
"(,)
的#37""(收集行#28,P代码_内部#38)
P代码_内部#38"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk0[0]+=bk1[0]
bk0[1]=np.max([bk0[1],bk1[1]])
# bk1[2]=bk1[1]

ans=bk0
"(,)
的#39""(收集块#26,P代码_自身#40)
P代码_自身#40"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

bk0[0]=np.max([len(func_name),bk0[0]])
bk0[2]=np.max([len(func_name),bk0[0]])


# if func_type==\"如果\":
#     bk0[1]=bk0[1]+1
# elif func_type==\"函数\":
#     bk0[1]=bk0[1]+1
bk0[3]=bk0[1]

ans=bk0

"(,)
的#41""(一般结构转结构文字#0,召唤规则#42)
召唤规则#42"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"一般结构转结构文字\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)

## end
#749, 155:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"一般结构转结构文字"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#751, 18639:
一般结构转分类图#0"

召唤规则:...
降临规则:...



"(,)
的#1""(一般结构转分类图#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"一般结构转分类图\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)
的#3""(一般结构转分类图#0,降临规则#4)
降临规则#4"

生成结构:...
布置位置:...
模块连线:...
整理结构:...
+[新建阅读窗口](,生成结构)
+[新建阅读窗口](,模块连线)

"(,)
的#5""(降临规则#4,生成结构#6)
生成结构#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),
    ->+的(_凭依,+结构)
}->的(_凭依,结构)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#7""(生成结构#6,描述结构#8)
描述结构#8"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->+记录描述(记忆,收集块)...
->的(_媒介,起点)->起点(,_块)->+观察(+结构块,_块)->[描述结构](_媒介,+观察)...
->+[code]([想],收集块)->[想](结构,+观察)->o([想],模块)...
->+起点(,模块)->+的(结构,+起点)->[投影](,+起点)->[投影](,+的)...

->+描述模块(,模块)->+的(+操作,+描述模块)

"(,)
的#9""(描述结构#8,收集块#10)
收集块#10"\"\"\"
收集行:...
P代码_自身:...

\"\"\"
+收集块(结构,观察)...

->Python->[]{
    []:->.(+收集块,模块)->模块,

    ->+[.](+收集块,+模块#0)...
        ->+的(结构,+模块#0)->+模块#0\"2,1,2,1\"->[投影](,+的)->[投影](,+模块#0)...
        ->+的(结构,+内容)->+内容\"起点\"(+模块#0,)->[投影](,+的)->[投影](,+内容)
}->.(+收集块,模块#0)...

->观察(,_块)...
->+[code]([想],收集行)->+[.]([想],模块#0)->[想](结构,观察)...
->+[o](+收集块,模块#0)



"(,)
的#11""(收集块#10,P代码_自身#12)
P代码_自身#12"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

bk0[0]=np.max([len(func_name),bk0[0]])
bk0[2]=np.max([len(func_name),bk0[0]])

bk0[2]=bk0[0]+2
bk0[0]=bk0[0]+2

ans=bk0

"(,)
的#13""(收集块#10,收集行#14)
收集行#14"\"\"\"
收集点:...
P代码_内部:...

\"\"\"

+收集行(结构,观察)->.(+收集行,模块)...

->然后\"内部\"(观察,观察#0)...
    ->+[code]([想]#0,收集点)->[想]#0(结构,观察#0)->o([想]#0,模块#0)...
    ->+[o](+收集行,模块#0)...
->+内部(模块,模块#0)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...

->[]{
    []=>然后\"平行\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想],收集行)->+[.]([想],模块)->[想](结构,观察#1)->o([想],模块#1)
}...
->+[code]([python],P代码_内部)...
->+[.]\"bk0\"([python],模块)->+[.]\"bk1\"([python],模块#0)...
->[python](Python,模块)



"(,)
的#15""(收集行#14,P代码_内部#16)
P代码_内部#16"\"\"\"
记住\"Python\"
print(np.max([1,2]))
print(func_name)

\"\"\"

state=True
bk0[1]+=bk1[1]
bk0[0]=np.max([bk0[0],bk1[0]])
# bk1[2]=bk1[1]

ans=bk0
"(,)
的#17""(收集行#14,收集点#18)
收集点#18"\"\"\"
P代码_内部:...
P代码_自身:...
P代码_传递:...

\"\"\"

+收集点(结构,观察)...
->记录描述(记忆,收集块)...

->观察(,_块)->.\"名字\"(观察,name)...
    ->+的(结构,+模块)->+模块\"0,1,0,1\"(,_块)->[投影](,+的)->[投影](,+模块)...
    ->+的(结构,+内容)->+内容(+模块,)->[m_text](name,+内容)...
        ->[投影](,+的)->[投影](,+内容)...

->Python->[]{
    []:->然后\"子集\"(观察,观察#1)->观察#1(,)...
        ->+[code]([想]#1,收集块)->+[.]([想]#1,+模块)->[想]#1(结构,观察#1)...
        ->+[code]([python]#1,P代码_内部)...
        ->+[s]\"func_name\"([python]#1,+内容)->+[.]\"bk0\"([python]#1,+模块)...
        ->[python]#1(Python,+模块),

    ->+[code]([python]#0,P代码_自身)...
        ->+[s]\"func_name\"([python]#0,+内容)->+[.]\"bk0\"([python]#0,+模块)...
        ->[python]#0(Python,+模块)
}...

->[]{
    []=>然后\"顺序\"(观察,观察#1)->观察#1(,)...
        =>+[code]([想]#1,收集点)->[想]#1(结构,观察#1)->o([想]#1,模块#1)...
        ->+顺序(+模块,模块#1)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码_传递)...
        ->+[.]\"bk0\"([python],+模块)->+[.]\"bk1\"([python],模块#1)...
        ->[python](Python,+模块)
}...
->+[o](+收集点,+模块)


"(,)
的#19""(收集点#18,P代码_内部#20)
P代码_内部#20"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

bk0[0]=np.max([len(func_name),bk0[0]])
bk0[2]=np.max([len(func_name),bk0[0]])

bk0[3]=bk0[1]
bk0[2]=bk0[0]+2
bk0[0]=bk0[0]+2

ans=bk0

"(,)
的#21""(收集点#18,P代码_传递#22)
P代码_传递#22"\"\"\"


\"\"\"
state=True
bk0[0]+=bk1[0]
bk0[1]=np.max([bk0[3],bk1[1]])
ans=bk0
"(,)
的#23""(收集点#18,P代码_自身#24)
P代码_自身#24"\"\"\"
记住\"Python\"
print(func_type)

\"\"\"

state=True

l_str=2
bk0[0]=np.max([l_str,bk0[0]])
bk0[2]=np.max([l_str,bk0[0]])

bk0[3]=bk0[1]

ans=bk0

"(,)
的#25""(生成结构#6,库#26)
库#26"
描述模块:...


"(,)
的#27""(库#26,描述模块#28)
描述模块#28"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#29""(描述模块#28,写模块#30)
写模块#30"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#31""(写模块#30,P代码#32)
P代码#32"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#33""(写模块#30,P代码2#34)
P代码2#34"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#35""(P代码2#34,测试#36)
测试#36"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#37""(写模块#30,P代码3#38)
P代码3#38"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#39""(写模块#30,P代码b#40)
P代码b#40""(,)
的#41""(降临规则#4,整理结构#42)
整理结构#42"\"\"\"

\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...
->+[显示PPT场景]\"1\"(,_凭依)->+[PPT场景转H代码](_凭依,_凭依)


"(,)
的#43""(降临规则#4,模块连线#44)
模块连线#44"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+模块连线(_媒介,_凭依)->+[del](,+模块连线)...
->的(模块连线,描述结构)->的(模块连线,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_模块1,_模块2)->_模块1->_模块2(,)...
        =>[说]\"连线: \"(,_操作)->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_模块1,_模块2)->+[code](+[做],_条目)->+[.](+[做],_凭依)
}


"(,)
的#45""(模块连线#44,描述结构#46)
描述结构#46"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#47""(描述结构#46,绘制模块#48)
绘制模块#48"\"\"\"
连线类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2),
    ->[]
}...

->+[code]([想]#0,连线类型)->[想]#0(操作,模块)


"(,)
的#49""(绘制模块#48,连线类型#50)
连线类型#50"\"\"\"
保存:...

\"\"\"
+连线类型(操作,模块)...

->[]{
    []:->顺序(模块,模块#2)->模块#2{[]=>内部(模块,)}...
        ->+画顺序(模块,模块#2)->+的(操作,+画顺序),
    ->[]
}...
->[]{
    []:->内容(模块,)=>内部(模块,模块#2)->模块#2->结尾(模块#2,模块#3)...
        =>+画if开头(模块,模块#2)->+的(操作,+画if开头),
    ->[]
}


"(,)
的#51""(连线类型#50,保存#52)
保存#52"\"\"\"
保存:...

\"\"\"
+连线类型(操作,模块)...

->[]{
    []:->顺序(模块,模块#2)->模块#2{[]=>内部(模块,)}...
        ->+画顺序(模块,模块#2)->+的(操作,+画顺序),
    ->[]
}...
->[]{
    []:->内容(模块,)=>内部(模块,模块#2)->模块#2->结尾(模块#2,模块#3)...
    =>+画if开头(模块,模块#2)->+的(操作,+画if开头)...
        ->[]{
            []:->起点(,模块),
            ->+画if结尾(模块,模块#3)->+的(操作,+画if结尾)
        },
    ->[]
}


"(,)
的#53""(模块连线#44,库#54)
库#54"+[删除结构](,库)


画顺序:...
画if开头:...
将条目\"画if开头\"复制为条目\"画if结尾\"

画if结尾:...

"(,)
的#55""(库#54,画if结尾#56)
画if结尾#56"\"\"\"
M代码:...

\"\"\"
+画if结尾(模块#1,模块#2)->+[del](,+画if结尾)...
->的(画if结尾,M代码)...

->.(+画if结尾,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[临时文本]\"0\"->+[.]\"flag1\"(+[matlab],+[临时文本])->[]{
    []:->结尾(,模块#1)->[m_text]\"1\"(,+[临时文本]),
    ->[]
}...
->+[临时文本]\"0\"->+[.]\"flag2\"(+[matlab],+[临时文本])->[]{
    []:->结尾(,模块#2)->内部(模块#2,)->[m_text]\"1\"(,+[临时文本]),
    ->[]
}

"(,)
的#57""(画if结尾#56,M代码#58)
M代码#58"%{
siz2
%}

L=1-0.3;
W=2-0.5;

Dy1=siz1(3)-0.15;
Dy2=siz2(3)-0.3;

% x=[pt1(1),pt1(1),pt2(1),pt2(1)];
% y=[pt1(2)-siz1(4),pt1(2)-Dy1,pt1(2)-Dy1,pt2(2)-Dy2];

x=[pt1(1)-W/2+siz1(3),pt1(1)-W/2+Dy1,pt1(1)-W/2+Dy1,pt2(1)+W/2];
y=[pt1(2),pt1(2),pt2(2),pt2(2)]-L/2;

if flag2==1
    x(end)=[];
    y(end)=[];
end
if flag1==1
    x(1)=[];
    y(1)=[];
end
"(,)
的#59""(库#54,画顺序#60)
画顺序#60"\"\"\"
M代码:...

\"\"\"
+画顺序(模块#1,模块#2)->+[del](,+画顺序)...
->的(画顺序,M代码)...

->.(+画顺序,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"折线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#61""(画顺序#60,M代码#62)
M代码#62"%{

%}


W=siz1(3)-0.5;
L=siz1(4)-0.3;

x=[pt1(1)+W/2,pt2(1)-W/2];
y=[pt1(2),pt2(2)]-L/2;


"(,)
的#63""(库#54,画if开头#64)
画if开头#64"\"\"\"
M代码:...

\"\"\"
+画if开头(模块#1,模块#2)->+[del](,+画if开头)...
->的(画if开头,M代码)...

->.(+画if开头,_凭依)...
->是(模块#1,_模块1)->在(_模块1,空间点#1)...
->是(模块#2,_模块2)->在(_模块2,空间点#2)...

->+的(_凭依,+连线)...
->+连线(_模块1,_模块2)->+样式\"曲线\"(+连线,)->+的(+连线,+样式)...
->+的(+连线,+x)->+的(+连线,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"pt1\"(+[matlab],空间点#1)->+[.]\"pt2\"(+[matlab],空间点#2)...
->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"siz2\"(+[matlab],模块#2)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#65""(画if开头#64,M代码#66)
M代码#66"%{
plot([pt1(1),pt2(1)],[pt1(2),pt2(2)],'ro-')
%}

W=2-0.5;
L=1-0.3;
Dy1=1-0.3;
Dy2=-0.15;

% x=[pt1(1),pt1(1),pt2(1),pt2(1)];
% y=[pt1(2)-Dy1,pt2(2)-Dy2,pt2(2)-Dy2,pt2(2)];

x=[pt1(1)+W/2,pt2(1)-W/2+Dy2,pt2(1)-W/2+Dy2,pt2(1)-W/2];
y=[pt1(2),pt1(2),pt2(2),pt2(2)]-L/2;


"(,)
的#67""(降临规则#4,布置位置#68)
布置位置#68"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)
+[新建阅读窗口](,描述结构)

\"\"\"

+布置位置(_媒介,_凭依)->+[del](,+布置位置)...
->的(布置位置,描述结构)->的(布置位置,库)...

->的(_凭依,结构)...
->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_凭依,_模块)->+[code](+[做],_条目)
}


"(,)
的#69""(布置位置#68,库#70)
库#70"
+[修改标题]\"布置支路\"(,绘制支路)
布置运算:...
布置支路:...

绘制分支:...
绘制运算:...
+[新建阅读窗口](,绘制运算)




"(,)
的#71""(库#70,布置支路#72)
布置支路#72"\"\"\"
M代码:...
M代码0:...

M代码2:...
M代码2b:...

M代码3:...

保存:...


\"\"\"

+布置支路(_凭依,模块)->+[del](,+布置支路)...
->的(布置支路,M代码)->的(布置支路,M代码0)...
->的(布置支路,M代码2)->的(布置支路,M代码2b)...
->的(布置支路,M代码3)...

->内容(模块,)...
->+的(_凭依,+支路模块)->+在(+支路模块,+空间点)->+是(模块,+支路模块)...
->+的(+支路模块,+在)->+的(+支路模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2)...
        ->[]{
            []:->相邻(,模块)->+[code](+[matlab],M代码2),
            ->+[code](+[matlab],M代码2b)
        },

    ->+[code](+[matlab],M代码0)
}

"(,)
的#73""(布置支路#72,保存#74)
保存#74"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+绘制条件(_凭依,模块)->+[del](,+绘制条件)...
->的(绘制条件,M代码)->的(绘制条件,M代码2)->的(绘制条件,M代码0)...
->的(绘制条件,M代码3)...

->+的(_凭依,+条件模块)->+在(+条件模块,+空间点)->+是(模块,+条件模块)...
->+的(+条件模块,+在)->+的(+条件模块,+空间点)->+的(模块,+是)...

->+样式\"多边形\"(+条件模块,)->+的(+条件模块,+样式)...
->+的(+条件模块,+宽度)->+的(+条件模块,+长度)...
->+的(+条件模块,+x)->+的(+条件模块,+y)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码3)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)...

->+[matlab](Matlab,+空间点)...
->[]{
    []:->相邻(模块,模块#1)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}


"(,)
的#75""(布置支路#72,M代码3#76)
M代码3#76"%{

%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#77""(布置支路#72,M代码0#78)
M代码0#78"%{

%}

ans=[0,0];


"(,)
的#79""(布置支路#72,M代码2#80)
M代码2#80"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[2,-siz1(2)/2+siz0(4)]+pt1;



"(,)
的#81""(布置支路#72,M代码#82)
M代码#82"%{
-siz0(3)/2
%}

ans=[0,siz0(2)/2+siz1(2)/2]+pt1;


"(,)
的#83""(布置支路#72,M代码2b#84)
M代码2b#84"%{
记住\"Matlab\"
siz0
siz1
ans=[siz1(1)/2-siz0(3)/2,-1]+pt1;
%}

ans=[2,0]+pt1;



"(,)
的#85""(库#70,布置运算#86)
布置运算#86"\"\"\"
M代码:...
M代码0:...
M代码2:...
M代码3:...

\"\"\"

+布置运算(_凭依,模块)->+[del](,+布置运算)...
->的(布置运算,M代码)->的(布置运算,M代码2)->的(布置运算,M代码0)...
->的(布置运算,M代码3)...

->内容(模块,)...
->+的(_凭依,+运算模块)->+在(+运算模块,+空间点)->+是(模块,+运算模块)...
->+的(+运算模块,+在)->+的(+运算模块,+空间点)->+的(模块,+是)...

->+[matlab](Matlab,+空间点)->+[.]\"siz0\"(+[matlab],模块)...
->[]{
    []:->顺序(模块#1,模块)->模块#1->是(模块#1,_模块1)->在(_模块1,空间点#1)...
        ->+[code](+[matlab],M代码)...
        ->+[.]\"siz1\"(+[matlab],模块#1)->+[.]\"pt1\"(+[matlab],空间点#1),

    ->内部(模块#2,模块)->模块#2->是(模块#2,_模块2)->在(_模块2,空间点#2)...
        ->+[code](+[matlab],M代码2)...
        ->+[.]\"siz1\"(+[matlab],模块#2)->+[.]\"pt1\"(+[matlab],空间点#2),

    ->+[code](+[matlab],M代码0)
}
"(,)
的#87""(布置运算#86,M代码3#88)
M代码3#88"%{

%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#89""(布置运算#86,M代码0#90)
M代码0#90"%{

%}

ans=[0,0];


"(,)
的#91""(布置运算#86,M代码2#92)
M代码2#92"%{
记住\"Matlab\"
siz0
siz1
%}

ans=[2,0]+pt1;



"(,)
的#93""(布置运算#86,M代码#94)
M代码#94"%{

%}

ans=[siz1(3),0]+pt1;


"(,)
的#95""(库#70,绘制分支#96)
绘制分支#96"\"\"\"
M代码:...

\"\"\"

+绘制分支(_凭依,模块)->+[del](,+绘制分支)...
->的(绘制分支,M代码)...

->是(模块,_模块)->在(_模块,空间点)...
->内容(模块,)...

->+样式\"多边形\"(_模块,)->+的(_模块,+样式)...
->+的(_模块,+宽度)->+的(_模块,+长度)->+的(_模块,+x)->+的(_模块,+y)...

->[m_text](内容,+文字)->+的(_凭依,+文字)->+的(_模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],空间点)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)



"(,)
的#97""(绘制分支#96,M代码#98)
M代码#98"%{
pt0
%}

W=2-0.5;
L=1-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#99""(库#70,绘制运算#100)
绘制运算#100"\"\"\"
M代码:...

\"\"\"

+绘制运算(_凭依,模块)->+[del](,+绘制运算)...
->的(绘制运算,M代码)...

->是(模块,_模块)->在(_模块,空间点)...
->内容(模块,)...

->+样式\"多边形\"(_模块,)->+的(_模块,+样式)...
->+的(_模块,+宽度)->+的(_模块,+长度)->+的(_模块,+x)->+的(_模块,+y)...

->[m_text](内容,+文字)->+的(_凭依,+文字)->+的(_模块,+文字)...
->+的(+文字,+文字位置)->+文字位置\"居中\"...
->+在(+文字,+空间点#2)->+的(+文字,+在)->+的(+文字,+空间点#2)...

->+[matlab](Matlab,+空间点#2)->+[code](+[matlab],M代码)...
->+[.]\"pt0\"(+[matlab],空间点)->+[.]\"siz0\"(+[matlab],模块)...
->+[o]\"W\"(+[matlab],+宽度)->+[o]\"L\"(+[matlab],+长度)...
->+[o](+[matlab],+x)->+[o](+[matlab],+y)


"(,)
的#101""(绘制运算#100,M代码#102)
M代码#102"%{
pt0
%}

W=siz0(3)-0.5;
L=siz0(4)-0.3;

x=[-1,1,1,-1]*W/2;
y=-[0,0,1,1]*L;

ans=pt0+[0,-1/2]*L;"(,)
的#103""(布置位置#68,描述结构#104)
描述结构#104"\"\"\"
绘制模块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(结构,起点)->起点(,模块)...
->+[code]([想],绘制模块)->+[.]([想],+操作)->[想](结构,模块)


"(,)
的#105""(描述结构#104,绘制模块#106)
绘制模块#106"\"\"\"
模块类型:...

\"\"\"

+绘制模块(结构,模块)->.(+绘制模块,操作)...

->+结构->[]{
    []=>内部(模块,模块#2)->模块#2=>+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)...
        ->+结尾(模块#2,模块#3)->+的(结构,+结尾)->[投影](,+的)->[投影](,+结尾):
            ->上一个(+结构,)...
                ->+上一个(+结构,模块#1)->模块#1->+[上一个](+结构,模块#2)...
                ->+相邻(模块#1,模块#2)->+的(结构,+相邻)->[投影](,+的)->[投影](,+相邻),
            ->+[上一个](+结构,模块#2)
}...

->[]{
    []:->顺序(模块,模块#2)->模块#2->+[code]([想],绘制模块)->+[.]([想],操作)...
        ->[想](结构,模块#2)->结尾([想],模块#3)->+结尾(+绘制模块,模块#3),
    ->+结尾(+绘制模块,模块)
}...

->+[code]([想]#0,模块类型)->[想]#0(操作,模块)


"(,)
的#107""(绘制模块#106,模块类型#108)
模块类型#108"\"\"\"
保存:...

\"\"\"

+模块类型(操作,模块)...

->[]{
    []:->内部(模块,)->+绘制分支(,模块)->+的(操作,+绘制分支),
    ->+绘制运算(,模块)->+的(操作,+绘制运算)
}...

->[]{
    []:->内部(,模块)->+布置支路(,模块)->+的(操作,+布置支路),
    ->+布置运算(,模块)->+的(操作,+布置运算)
}



"(,)
的#109""(模块类型#108,保存#110)
保存#110"\"\"\"
->+绘制运算(,模块)->+的(操作,+绘制运算),
    

\"\"\"

+模块类型(操作,模块)...

->[]{
    []:->内容(模块,)->[]{
        []:->[==]\"if\"(,内容)->+绘制如果(,模块)->+的(操作,+绘制如果),
        ->[==]\"else\"(,内容)->+绘制否则(,模块)->+的(操作,+绘制否则),
        ->[==]\"code\"(,内容)->+绘制运算(,模块)->+的(操作,+绘制运算)
    },
    ->条件(模块,)->+绘制条件(,模块)->+的(操作,+绘制条件),
    ->函数(模块,)->+绘制函数(,模块)->+的(操作,+绘制函数),
    ->+绘制运算(,模块)->+的(操作,+绘制运算)
}


"(,)

## end
#753, 222:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"一般结构转分类图"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+模块连线(_题目,_代码)->+的(操作,+模块连线)...
->+布置位置(_题目,_代码)->+的(操作,+布置位置)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#755, 26471:
文本转换_md#0"

召唤规则:...
降临规则:...




"(,)
的#1""(文本转换_md#0,降临规则#2)
降临规则#2"+[粘贴](,降临规则)

整理地址:...
引用文章:...
章节内容:...

整理引用:...
整理内容:...
整理图片:...
+[新建阅读窗口](,章节内容)
将'引用文章'的\"作者\"替换为\"文章\"


"(,)
的#3""(降临规则#2,整理图片#4)
整理图片#4"\"\"\"
P代码:...
P代码2:...
+[新建阅读窗口](,P代码)

保存:...

\"\"\"

+整理图片(_媒介,_凭依)->+[del](,+整理图片)...
->的(整理图片,P代码)->的(整理图片,P代码2)...

->的#0(_凭依,地址)->+[标题](_凭依,)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"file_name\"(+[python],+[标题])->+[.]\"folder_dir\"(+[python],地址)...

->[]{
    []=>的(_媒介,二级标题)->二级标题->的(二级标题,图片)...
    ->的(图片,源地址)->的(图片,目标地址)->[]{[]=>[==](源地址,目标地址)}...
        =>+[python](Python,)->+[code](+[python],P代码2)...
        ->+[.]\"src_dir\"(+[python],源地址)->+[.]\"tar_dir\"(+[python],目标地址)...
        ->+[.]\"folder_dir\"(+[python],地址)
}...

->+[del](,的#0)...
->+[删除结构](,_凭依)...
->+[有](_凭依,地址)




"(,)
的#5""(整理图片#4,P代码2#6)
P代码2#6"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))
保存:...

\"\"\"

import os
os.system(\"cp %s %s/%s\"%(src_dir,folder_dir,tar_dir))

"(,)
的#7""(P代码2#6,保存#8)
保存#8"\"\"\"
import shutil
shutil.copy(src_dir,\"%s\\fig.png\"%(folder_dir))

\"\"\"

import shutil
# print(src_dir,tar_dir)
# ans=\"%s\%s.tex\"%(folder_dir,file_name)
shutil.copy(src_dir,\"%s\\%s\"%(folder_dir,tar_dir))

"(,)
的#9""(整理图片#4,P代码#10)
P代码#10"\"\"\"
记住\"Python\"
print(folder_dir.split('/')[0:-1])

\"\"\"

import os
cmd_folder=\"mkdir %s/res\"%(folder_dir)
os.system(cmd_folder)


"(,)
的#11""(整理图片#4,保存#12)
保存#12"\"\"\"
P代码:...
P代码2:...
+[新建阅读窗口](,P代码)

\"\"\"

+整理图片(_媒介,_凭依)->+[del](,+整理图片)...
->的(整理图片,P代码)->的(整理图片,P代码2)...

->的#0(_凭依,地址)->+[标题](_凭依,)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"file_name\"(+[python],+[标题])->+[.]\"folder_dir\"(+[python],地址)...
->+[保存文本](+[临时文本],_凭依)...

->[]{
    []=>的(_媒介,二级标题)->二级标题->的(二级标题,图片)...
    ->的(图片,源地址)->的(图片,目标地址)...
        =>+[python](Python,)->+[code](+[python],P代码2)...
        ->+[.]\"src_dir\"(+[python],源地址)->+[.]\"tar_dir\"(+[python],目标地址)...
        ->+[.]\"folder_dir\"(+[python],地址)
}...

->+[del](,的#0)...
->+[删除结构](,_凭依)...
->+[有](_凭依,地址)




"(,)
的#13""(降临规则#2,引用文章#14)
引用文章#14"\"\"\"
描述结构:...
设置引用:...
+[新建阅读窗口](,描述结构)

\"\"\"

+引用文章(_文章,_文本)->+[del](,+引用文章)...
->的(引用文章,描述结构)->的(引用文章,设置引用)...

->+的(_文本,+引用)...
->+[code]([想],描述结构)->[想](_文章,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,文章)->文章(_节点,)->_节点(,)...
    =>+[获取论文信息](+[临时文本],+文章A)->[m_text](文章,+[临时文本])...
        ->[标题](_节点,)->[m_text]([标题],+文章A)...
        ->+[做](+文章A,+引用)->+[code](+[做],设置引用)...
        ->+[删除结构](,+文章A)->+[del](,+文章A)
}


"(,)
的#15""(引用文章#14,设置引用#16)
设置引用#16"\"\"\"
P代码:...
模板库:...

\"\"\"

+设置引用(文章A,引用)->+[del](,+设置引用)...
->的(设置引用,模板库)->的(设置引用,P代码)...

->的(文章A,类型)->的(文章A,作者)...
->+[python](Python,作者)->+[code](+[python],P代码)...
->+[s]\"text_aus\"(+[python],作者)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,引用)...
->[]{
    []:->[==]\"ARTICLE\"(,类型)->的(模板库,文章#0)->+[code](+[模板文本],文章#0),
    ->[==]\"PROCEEDINGS\"(,类型)->的(模板库,会议#0)->+[code](+[模板文本],会议#0),
    ->[==]\"ArXiv\"(,类型)->的(模板库,预印本#0)->+[code](+[模板文本],预印本#0),
    ->的(模板库,文章#1)->+[code](+[模板文本],文章#1)
}...

->+[.]\"引用名\"(+[模板文本],文章A)...
->[]{
    []=>的(文章A,_性质)->_性质=>+[.](+[模板文本],_性质)
}



"(,)
的#17""(设置引用#16,P代码#18)
P代码#18"\"\"\"
记住\"Python\"

print(text_aus)
print(list_aus)

\"\"\"

# print(text_aus)
# print(text_aus.split(', '))
# print(' and '.join(text_aus.split(', ')))

list_aus0=text_aus.split(', ')
if len(list_aus0)>3:
    list_aus=list_aus0[0:3]+['others']
else:
    list_aus=list_aus0
ans=' and '.join(list_aus)


"(,)
的#19""(设置引用#16,模板库#20)
模板库#20"

文章:...
会议:...
预印本:...

"(,)
的#21""(模板库#20,会议#22)
会议#22"
@PROCEEDINGS{%引用名,
   title = \"%标题\",
   number = \"%编号\",
   editor = \"\", 

   series = \"All ACM Conferences\",
   month = \"\",
   year = \"%年份\",
   address = \"%城市地址\",
   organization = \"%组织\",
   publisher = \"%会议\",
}
"(,)
的#23""(模板库#20,文章#24)
文章#24"
@ARTICLE{%引用名,
   author       = \"%作者\",
   title        = \"%标题\",
   journal      = \"%期刊\",
   volume       = \"%编号\", 
   pages        = \"%页数\",
   year         = \"%年份\",
}
"(,)
的#25""(模板库#20,预印本#26)
预印本#26"
@ARTICLE{%引用名, 
   author        = \"%作者\", 
   title         = \"%标题\", 
   journal = {ArXiv e-prints},
   archivePrefix = \"arXiv\",
   eprint        = {%eprint},
   primaryClass  = \"%类别\",
   year          = \"%日期\",
}



"(,)
的#27""(引用文章#14,描述结构#28)
描述结构#28"\"\"\"
P代码:...

\"\"\"

+描述结构(_文章,)->+操作(+描述结构,)...
->的(描述结构,P代码)...

=>的(_文章,_节点)->引用(_节点,)...
=>+的(+操作,+文章)->+文章(_节点,)...
->+[.]\"paper_link\"([python],_节点)->+[code]([python],P代码)...
->[python](Python,+文章)



"(,)
的#29""(描述结构#28,P代码#30)
P代码#30"\"\"\"
记住\"Python\"

\"\"\"

ans=paper_link.split('#')[0]
state=True
"(,)
的#31""(降临规则#2,整理内容#32)
整理内容#32"\"\"\"


\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...

->+[临时文本]->的(_内容,地址#0)->的(_内容,文件名)->[]{
    []=>的(_内容,_章节)->的(_章节,地址)=>+[增加内容2](地址#0,地址)...
        ->+[增加内容](_章节,+[临时文本])
}...

->+[修改内容](+[临时文本],_内容)...
->+[模板文本]\"%地址/%文件名\"(,+[临时文本]#地址)...
    ->+[.](+[模板文本],地址#0)->+[.](+[模板文本],文件名)...
->+[保存文本](+[临时文本]#地址,_内容)


"(,)
的#33""(整理内容#32,P代码#34)
P代码#34"\"\"\"
print(\"112%13%1\".replace('%','\\%'))

\"\"\"

ans=file_text.replace('%','\\%')


"(,)
的#35""(整理内容#32,L模板#36)
L模板#36"
%标题
%作者

%概述


%章节



"(,)
的#37""(整理内容#32,保存#38)
保存#38"\"\"\"
P代码:...
L模板:...

\"\"\"

+整理内容(_媒介,_内容)->+[del](,+整理内容)...
->的(整理内容,L模板)->的(整理内容,P代码)...

->+[临时文本]#章节->[]{
    []=>的(_内容,章节)->章节=>+[增加内容](章节,+[临时文本]#章节)
}...
->+[python](Python,+[临时文本]#章节)->+[code](+[python],P代码)...
->+[s]\"file_text\"(+[python],+[临时文本]#章节)...

->+[模板文本](L模板,_内容)...
->+[.]\"章节\"(+[模板文本],+[临时文本]#章节)...
->[]{
    []:->的(_内容,标题)->标题->+[.](+[模板文本],标题),->[]
}...
->[]{
    []:->的(_内容,作者)->作者->+[.](+[模板文本],作者),->[]
}...
->[]{
    []:->的(_内容,概述)->概述->+[.](+[模板文本],概述),->[]
}...
->[]{
    []:->的(_内容,引用)->引用->+[.](+[模板文本],引用),->[]
}


"(,)
的#39""(降临规则#2,章节内容#40)
章节内容#40"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+章节内容(_章节结构,_文本)->+[del](,+章节内容)...
->的(章节内容,描述结构)->的(章节内容,库)...

->+[code]([想],描述结构)->[想](_章节结构,_文本)...
->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语(,)...
    =>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)->+[做](_主语,_宾语)->+[code](+[做],_条目)
}




"(,)
的#41""(章节内容#40,库#42)
库#42"

生成标题:...
生成作者:...
生成概述:...
生成章节:...
生成附录:...
将条目\"生成章节\"复制为条目\"生成附录\"
将'生成作者'的\"章节\"替换为\"作者\"

"(,)
的#43""(库#42,生成作者#44)
生成作者#44"\"\"\"
描述结构:...
库:...

\"\"\"

+生成作者(_作者,_文本)->+[del](,+生成作者)...
->的(生成作者,描述结构)->的(生成作者,库)...
->的(库,通讯作者)->的(库,普通作者)...

->+的(_文本,+作者)...
->+[code]([想],描述结构)->[想](_作者,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,作者)->作者(类型,)->类型(,)...
    =>+[获取作者信息](,+作者A)->[m_text](作者,+[获取作者信息])...
    ->+[做](+作者A,+作者)...
    ->+[删除结构](,+作者A)->+[del](,+作者A)->[]:
        ->[==]\"通讯\"(,类型)->+[code](+[做],通讯作者),
        ->+[code](+[做],普通作者)
}


"(,)
的#45""(生成作者#44,描述结构#46)
描述结构#46"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_作者,)->+操作(+描述结构,)...
->的(描述结构,P代码)->的(描述结构,P代码2)...

->+[.]\"text_au\"([python],_作者)...
->+[code]([python],P代码)->[python](Python,)...
->+[code]([python]#2,P代码2)...

->+不终止=>[python]\"state=(list_i<len(list_au))\"(Python,+不终止)...
=>+的(+操作,+作者)->+作者(+类型,)...
->+[o]\"type_name\"([python]#2,+类型)->[python]#2(Python,+作者)


"(,)
的#47""(描述结构#46,P代码2#48)
P代码2#48"\"\"\"


\"\"\"

name=list_au[list_i]
list_i+=1
if name[-1]=='*':
    name=name[0:-1]
    type_name='通讯'
else:
    type_name=\"普通\"
ans=name

"(,)
的#49""(描述结构#46,P代码#50)
P代码#50"\"\"\"
记住\"Python\"

\"\"\"

state=True
list_au=text_au.split(', ')
list_i=0

"(,)
的#51""(生成作者#44,库#52)
库#52"

通讯作者:...
普通作者:...
将'普通作者'的\"通讯\"替换为\"普通\"
"(,)
的#53""(库#52,普通作者#54)
普通作者#54"\"\"\"
L模板:...

\"\"\"
+普通作者(_A,_输出)->+[del](,+普通作者)...
->的(普通作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)

"(,)
的#55""(普通作者#54,L模板#56)
L模板#56"
\author{%名 %姓}
\affiliation{%单位}
"(,)
的#57""(库#52,通讯作者#58)
通讯作者#58"\"\"\"
L模板:...

\"\"\"
+通讯作者(_A,_输出)->+[del](,+通讯作者)...
->的(通讯作者,L模板)...

->的(_A,名)->的(_A,姓)->的(_A,单位)->的(_A,邮箱)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_输出)...
->+[.](+[模板文本],名)->+[.](+[模板文本],姓)...
->+[.](+[模板文本],单位)->+[.](+[模板文本],邮箱)

"(,)
的#59""(通讯作者#58,L模板#60)
L模板#60"
\author{%名 %姓}
\email{%邮箱}
\affiliation{%单位}
"(,)
的#61""(库#42,生成附录#62)
生成附录#62"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成附录(_章节,_文本)->+[del](,+生成附录)...
->的(生成附录,描述结构)->的(生成附录,库)...
->的(生成附录,L模板)...

->+的(_文本,+章节)...
->+[code]([想],描述结构)->[想](_章节,)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)

"(,)
的#63""(生成附录#62,L模板#64)
L模板#64"
\appendix
%内容

"(,)
的#65""(生成附录#62,库#66)
库#66"

文本结构:...
公式结构:...
图片结构:...




"(,)
的#67""(库#66,图片结构#68)
图片结构#68"\"\"\"
P代码:...
L模板:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,P代码)...

->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...
->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](L模板,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)

"(,)
的#69""(图片结构#68,P代码#70)
P代码#70"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]
ans='\\'+fig_name+'.'+fig_type


"(,)
的#71""(图片结构#68,L模板#72)
L模板#72"
\begin{figure}[b]
\includegraphics[width=0.45\textwidth]{%名字}
\caption{\label{fig:%名字}%图例}
\end{figure}


"(,)
的#73""(库#66,公式结构#74)
公式结构#74"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)...
->的(公式结构,P代码)...

->的(_节点,名字)->的(_节点,LaTeX)...
->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],LaTeX)...

->[]{+[.]\"LaTeX_text0\"([python],LaTeX)->+[code]([python],P代码)->[python](Python,)}:
    ->+[code](+[模板文本],L模板2),
    ->>+[code](+[模板文本],L模板)


"(,)
的#75""(公式结构#74,L模板#76)
L模板#76"
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}

"(,)
的#77""(公式结构#74,P代码#78)
P代码#78"\"\"\"
记住\"Python\"
LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#79""(公式结构#74,L模板2#80)
L模板2#80"
\begin{widetext}
\begin{equation}
%LaTeX
\label{eq:%名字}
\end{equation}
\end{widetext}

"(,)
的#81""(库#66,文本结构#82)
文本结构#82"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#83""(文本结构#82,P代码#84)
P代码#84"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='\\section{%s}\n\n'%(text_context[4:-5])
else:
    ans=text_context+'\n\n'


"(,)
的#85""(生成附录#62,描述结构#86)
描述结构#86"\"\"\"


\"\"\"

+描述结构(_章节,)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[]
}

"(,)
的#87""(库#42,生成概述#88)
生成概述#88"\"\"\"
L模板:...

\"\"\"

+生成概述(二级标题,_文本)->+[del](,+生成概述)...
->的(生成概述,L模板)...

->+的(_文本,+概述)...

->+[临时文本]->[]{
    []=>的(二级标题,文本)->文本=>+[增加内容2](文本,+[临时文本])
}...

->+[模板文本](L模板,+概述)->+[.](+[模板文本],+[临时文本])


"(,)
的#89""(生成概述#88,L模板#90)
L模板#90"%[临时文本]
"(,)
的#91""(库#42,生成标题#92)
生成标题#92"\"\"\"
L模板:...

\"\"\"

+生成标题(一级标题,_文本)->+[del](,+生成标题)...
->的(生成标题,L模板)...

->+的(_文本,+标题)->+的(+标题,+地址)->+地址\"/pages/title.html\"...
    ->+的(+标题,+原型)->+原型(+标题,一级标题)...

->的(一级标题,题目)...
->+[模板文本](L模板,+标题)->+[.](+[模板文本],题目)


"(,)
的#93""(生成标题#92,L模板#94)
L模板#94"# %题目
"(,)
的#95""(库#42,生成章节#96)
生成章节#96"\"\"\"
描述结构:...
库:...
L模板:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成章节(_章节,_文本)->+[del](,+生成章节)...
->的(生成章节,描述结构)->的(生成章节,库)...
->的(生成章节,L模板)->的(库,输出页面)...

->+的(_文本,+章节)->+的(+章节,+原型)->+原型(+章节,_章节)...
->+[code]([想],描述结构)->[想](_章节,+章节)...

->操作([想],)...
->+[临时文本]#内容->[]{
    []=>的(操作,_操作)->_操作(_主语,)->_主语(,)...
    =>[说](,_操作)->的(库,_条目)->[eq](_条目,_操作)...
    ->+[做](_主语,+[临时文本]#内容)->+[code](+[做],_条目)->+[.]\"输出\"(+[做],_文本)
}...

->的(_章节,题目)...
->+[模板文本](L模板,+章节)...
->+[.]\"内容\"(+[模板文本],+[临时文本]#内容)->+[.](+[模板文本],题目)...

->+[做](_章节,+章节)->+[code](+[做],输出页面)


"(,)
的#97""(生成章节#96,描述结构#98)
描述结构#98"\"\"\"


\"\"\"

+描述结构(_章节,_文本)->+操作(+描述结构,)...

->[]{
    []=>的(_章节,_节点)->_节点=>[]:
        ->[is](_节点,文本)->文本->+文本结构(_节点,)->+的(+操作,+文本结构),
        ->[is](_节点,公式)->公式->+公式结构(_节点,)->+的(+操作,+公式结构),
        ->的(_节点,3D)->3D->+3D结构(_节点,)->+的(+操作,+3D结构),
        ->的(_节点,SVG)->SVG->+SVG结构(_节点,)->+的(+操作,+SVG结构),

        ->[is](_节点,图片)->图片->+图片结构(_节点,)->+的(+操作,+图片结构),
        ->[is](_节点,表格)->表格->+表格结构(_节点,)->+的(+操作,+表格结构),
        ->[is](_节点,程序)->程序->+程序结构(_节点,)->+的(+操作,+程序结构),
        ->[]
}

"(,)
的#99""(生成章节#96,库#100)
库#100"

文本结构:...
公式结构:...
图片结构:...

3D结构:...
SVG结构:...
将条目\"3D结构\"复制为条目\"SVG结构\"

表格结构:...
程序结构:...
将条目\"表格结构\"复制为条目\"程序结构\"

输出页面:...



"(,)
的#101""(库#100,文本结构#102)
文本结构#102"\"\"\"
P代码:...

\"\"\"

+文本结构(_节点,_内容)->+[del](,+文本结构)...
->的(文本结构,P代码)...

->+[python](Python,+[增加内容2])->+[code](+[python],P代码)...
->+[.]\"text_context\"(+[python],_节点)...

->+[增加内容2](,_内容)

"(,)
的#103""(文本结构#102,P代码#104)
P代码#104"\"\"\"
print(text_context)

\"\"\"

if len(text_context)>4 and text_context[0:4]=='<h3>':
    ans='### %s\n'%(text_context[4:-5])
else:
    ans=text_context+'\n'


"(,)
的#105""(库#100,公式结构#106)
公式结构#106"\"\"\"
P代码:...
设置公式:...
L模板:短公式...
L模板2:长公式...
L模板3:多行...

\"\"\"

+公式结构(_节点,_内容)->+[del](,+公式结构)...
->的(公式结构,L模板)->的(公式结构,L模板2)->的(公式结构,L模板3)...
->的(公式结构,P代码)->的(公式结构,设置公式)...

->的(_节点,名字)->的(_节点,LaTeX)...

->+[python](Python,+[临时文本]#名字)...
    ->+[code](+[python],设置公式)->+[.]\"name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.]\"名字\"(+[模板文本],+[临时文本]#名字)...
->+[.]\"LaTeX\"(+[模板文本],+[临时文本]#t)...

->+[.]\"LaTeX_text0\"([python],LaTeX)...
->+[o]\"LaTeX_text\"([python],+[临时文本]#t)...
->+[code]([python],P代码)->[python](Python,+[临时文本]):
    ->[==]\"1\"(,+[临时文本])->+[code](+[模板文本],L模板),
    ->[==]\"2\"(,+[临时文本])->+[code](+[模板文本],L模板2),
    ->+[code](+[模板文本],L模板3)


"(,)
的#107""(公式结构#106,L模板2#108)
L模板2#108"
$$
%LaTeX
\tag{%名字}
$$

"(,)
的#109""(公式结构#106,P代码#110)
P代码#110"\"\"\"
记住\"Python\"
测试:...
保存:...
print(LaTeX_text0)
print(re.sub('\n+$','',LaTeX_text0))
LaTeX_text

txt=r'I_{scatter}=\frac{1}{L_{2}}\ \int_{}^{}{d\theta\ }{S(E_{f}(\theta))\ f(\theta)\ \frac{\partial E_{f}}{\partial \theta}\ exp(-\frac{\alpha^{2}}{\sigma_{s}(E_{f}(\theta))^{2}})}'
print(txt.replace('\ ','\\\\ \n',1))


\"\"\"

state=True
ans=1
if len(LaTeX_text0)<150 or 'cases' in LaTeX_text0:
    LaTeX_text=LaTeX_text0
    ans=1
elif len(LaTeX_text0)<200:
    LaTeX_text=LaTeX_text0.replace('\ ','\\\\ \n',1)
    ans=3
else:
    LaTeX_text=LaTeX_text0
    ans=2

LaTeX_text=re.sub('\n+$','',LaTeX_text)
print(LaTeX_text,ans)

"(,)
的#111""(P代码#110,测试#112)
测试#112"LaTeX_text0=\"\frac{\sigma_E}{E}\approx \frac{1}{\beta-\theta}*\sqrt{(\frac{L_0+L_1}{L_0*L_2})^{2}*\sigma_s^{2}+(\frac{L_0+L_1+L_2}{L_0*L_2})^{2}*\sigma_f^{2}+(\frac{1}{L_0})^{2}*\sigma_o^{2}}\"


LaTeX_text0=\"\begin{cases}\n\sigma=A_{3}/E^{3}+A_{2}/E^{2}+A_{1}/E+A_{0}\\\\ A_{3}=-4.583\times 10^{3}\ MeV^{3}\ rad\\ A_{2}=34.984\ MeV^{2}\ rad\\ A_{1}=3.421\ MeV\ rad\\\\ A_{0}=4.925\times 10^{-6}\ rad\n\end{cases}\n\"

LaTeX_text0=\"\"

print(len(LaTeX_text0)>100,len(LaTeX_text0))
print(LaTeX_text0.split('\n'))
print(list_eqs)
"(,)
的#113""(P代码#110,保存#114)
保存#114"\"\"\"
记住\"Python\"
测试:...
print(LaTeX_text0)

\"\"\"

list_eqs=LaTeX_text0.split('\\\\')

state=False
for eqn in list_eqs:
    if len(eqn)>110:
        state=True
        break


"(,)
的#115""(公式结构#106,L模板#116)
L模板#116"
$$
%LaTeX
\tag{%名字}
$$

"(,)
的#117""(公式结构#106,L模板3#118)
L模板3#118"
$$
%LaTeX
\tag{%名字}
$$
"(,)
的#119""(公式结构#106,设置公式#120)
设置公式#120"\"\"\"
记住\"Python\"

\"\"\"

if len(name)>3 and name[0]=='[' and name[-2:]=='].':
    name=name[1:-2]
ans=name

"(,)
的#121""(库#100,SVG结构#122)
SVG结构#122"\"\"\"
P代码:...
L模板:...
模板2:...

\"\"\"

+SVG结构(_节点,_内容)->+[del](,+SVG结构)...
->的(SVG结构,L模板)->的(SVG结构,模板2)->的(SVG结构,P代码)...

->.\"输出\"(+SVG结构,_输出)->的(_输出,地址)...

->的(_节点,名字)->的(_节点,内容)...
->+的(_节点,+目标地址)...

->+[python](Python,+目标地址)->+[code](+[python],P代码)...
->+[.]\"fig_name\"(+[python],名字)->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[code](+[模板文本],L模板)...
->+[.](+[模板文本],+目标地址)->+[.](+[模板文本],名字)...

->+[模板文本](模板2,+[临时文本])->+[.](+[模板文本],内容)...
->+[增加内容](地址,+[保存文本])->+[增加内容](+目标地址,+[保存文本])...
    ->+[保存文本](,+[临时文本])
"(,)
的#123""(SVG结构#122,L模板#124)
L模板#124"<img src=\".%目标地址\"/>
"(,)
的#125""(SVG结构#122,P代码#126)
P代码#126"\"\"\"
记住\"Python\"

\"\"\"

ans=\"/res/%s.svg\"%(fig_name)

"(,)
的#127""(SVG结构#122,模板2#128)
模板2#128"%内容
"(,)
的#129""(库#100,输出页面#130)
输出页面#130"\"\"\"
描述结构:...
P代码:...
模板:...

\"\"\"
+输出页面(_节点,_章节)->+[del](,+输出页面)...
->的(输出页面,模板)->的(输出页面,P代码)...

->的(_节点,题目)->+的(_章节,+地址)...
->+[python](Python,+地址)->+[code](+[python],P代码)...
->+[.]\"name0\"(+[python],题目)...

->+[模板文本](模板,_章节)->+[.]\"内容\"(+[模板文本],_章节)

"(,)
的#131""(输出页面#130,模板#132)
模板#132"%内容"(,)
的#133""(输出页面#130,P代码#134)
P代码#134"\"\"\"
记住\"Python\"
str0='1 1 1'
print(str0,str0.replace(' ','_'))

\"\"\"

name=name0.replace(' ','_')
ans='/pages/%s.html'%(name)
print(ans)

"(,)
的#135""(输出页面#130,描述结构#136)
描述结构#136""(,)
的#137""(库#100,程序结构#138)
程序结构#138"\"\"\"
P代码:...
L模板:...

\"\"\"

+程序结构(_节点,_内容)->+[del](,+程序结构)...
->的(程序结构,L模板)->的(程序结构,P代码)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)...
->的(_节点,内容)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"txt_in\"(+[python],内容)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.]\"内容\"(+[模板文本],内容)...

->+[code](+[模板文本],L模板)


"(,)
的#139""(程序结构#138,P代码#140)
P代码#140"\"\"\"
记住\"Python\"
+[P函数](,P代码)
保存:...
txt_in

\"\"\"
ans=txt_in


"(,)
的#141""(P代码#140,保存#142)
保存#142"\"\"\"
记住\"Python\"
+[P函数](,P代码)

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        for txt_ele in list_ele:
            txt_out+=\"\n\\textrm{%s}&\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n\\colrule'
    else:
        for txt_ele in list_ele:
            txt_out+=\" %s &\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#143""(程序结构#138,L模板#144)
L模板#144"
```py
%内容
```
"(,)
的#145""(库#100,3D结构#146)
3D结构#146"\"\"\"
P代码:...
L模板:...
模板2:...

\"\"\"

+3D结构(_节点,_内容)->+[del](,+3D结构)...
->的(3D结构,L模板)->的(3D结构,模板2)->的(3D结构,P代码)...

->.\"输出\"(+3D结构,_输出)->的(_输出,地址)...

->的(_节点,名字)->的(_节点,内容)...
->+的(_节点,+目标地址)...

->+[python](Python,+目标地址)->+[code](+[python],P代码)...
->+[.]\"fig_name\"(+[python],名字)->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[code](+[模板文本],L模板)...
->+[.](+[模板文本],+目标地址)->+[.](+[模板文本],名字)...

->+[模板文本](模板2,+[临时文本])->+[.](+[模板文本],内容)...
->+[增加内容](地址,+[保存文本])->+[增加内容](+目标地址,+[保存文本])...
    ->+[保存文本](,+[临时文本])
"(,)
的#147""(3D结构#146,模板2#148)
模板2#148"var shape, pt, eulers;

%内容

animate_3D();
world_3D.update();
"(,)
的#149""(3D结构#146,P代码#150)
P代码#150"\"\"\"
记住\"Python\"

\"\"\"

ans=\"/res/%s.js\"%(fig_name)

"(,)
的#151""(3D结构#146,L模板#152)
L模板#152"
<div id=\"%名字\" class=\"w3D\"></div>
<script>
world_3D.init(\"%名字\");
</script>
<script type=\"text/javascript\" src=\"..%目标地址\"></script>
"(,)
的#153""(库#100,图片结构#154)
图片结构#154"\"\"\"
P代码:...
L模板:...
L模板2:...

\"\"\"

+图片结构(_节点,_内容)->+[del](,+图片结构)...
->的(图片结构,L模板)->的(图片结构,L模板2)->的(图片结构,P代码)...

->.\"输出\"(+图片结构,_输出)->的(_输出,地址)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)->的(_节点,源地址)...
->的(_节点,目标地址)...

->+[python](Python,目标地址)->+[code](+[python],P代码)...
->+[.]\"source_dir\"(+[python],源地址)->+[.]\"fig_name\"(+[python],名字)...
->+[.]\"address\"(+[python],地址)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],目标地址)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置):

->[==]\"normal\"(,类型)->+[code](+[模板文本],L模板),
->+[code](+[模板文本],L模板2)

"(,)
的#155""(图片结构#154,L模板#156)
L模板#156"<img src=\"%目标地址\" height=\"200\"/>
"(,)
的#157""(图片结构#154,P代码#158)
P代码#158"\"\"\"
记住\"Python\"

\"\"\"

fig_type=source_dir.split('.')[-1]

if source_dir.startswith(\"http://\"):
    ans=source_dir
elif source_dir.startswith(\"https://\"):
    ans=source_dir
else:
    ans=\"./res/%s.%s\"%(fig_name,fig_type)

"(,)
的#159""(图片结构#154,L模板2#160)
L模板2#160"<img src=\"%目标地址\" width=\"100%\"/>
"(,)
的#161""(库#100,表格结构#162)
表格结构#162"\"\"\"
P代码:...
L模板:...

\"\"\"

+表格结构(_节点,_内容)->+[del](,+表格结构)...
->的(表格结构,L模板)->的(表格结构,P代码)...

->的(_节点,类型)->的(_节点,位置)...
->的(_节点,名字)->的(_节点,图例)...
->的(_节点,内容)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->+[.]\"txt_in\"(+[python],内容)->+[.]\"fig_name\"(+[python],名字)...

->+[模板文本](,+[增加内容2])->+[增加内容2](,_内容)...
->+[.](+[模板文本],名字)->+[.](+[模板文本],图例)->+[.](+[模板文本],位置)...
->+[.]\"内容\"(+[模板文本],+[临时文本])...
->+[o]\"type_out\"(+[python],+格式)->+[.](+[模板文本],+格式)->+[del](,+格式)...
->+[code](+[模板文本],L模板)



"(,)
的#163""(表格结构#162,L模板#164)
L模板#164"
%内容
"(,)
的#165""(表格结构#162,P代码#166)
P代码#166"\"\"\"
记住\"Python\"
+[P函数](,P代码)
保存:...
print(\"!!!!\")

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        line='|'+'|'.join(list_ele)+'|'
        txt_out+=line+'\n|'
        for ele in list_ele:
            txt_out+=\":---:|\"
        txt_out+=\"\n\"
    else:
        line='|'+'|'.join(list_ele)+'|'
        txt_out+=line+'\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#167""(P代码#166,保存#168)
保存#168"\"\"\"
记住\"Python\"
+[P函数](,P代码)

\"\"\"
import numpy as np
import re

rows=txt_in.split('\n')
txt_out=''
type_out=''
len_max=0

for row in rows:
    row0=re.sub('; *','',row)
    if row0=='':
        continue
    list_ele=re.split('[,] *',row0)

    len_max=np.max([len_max,len(list_ele)])

    if txt_out=='':
        for txt_ele in list_ele:
            txt_out+=\"\n\\textrm{%s}&\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n\\colrule'
    else:
        for txt_ele in list_ele:
            txt_out+=\" %s &\"%(txt_ele)
        txt_out=txt_out[0:-1]
        txt_out+='\\\\\n'

for i in range(len_max):
    type_out+='c'

ans=txt_out


"(,)
的#169""(生成章节#96,L模板#170)
L模板#170"## %题目
%内容
"(,)
的#171""(章节内容#40,描述结构#172)
描述结构#172"\"\"\"


\"\"\"
+描述结构(_章节结构,_文本)->+操作(+描述结构,)...

->[]{
    []:->[is](_章节结构,一级标题)->一级标题(,)...
        ->+生成标题(一级标题,_文本)->+的(+操作,+生成标题),
    ->[is](_章节结构,文本)->文本(,)...
        ->+生成作者(文本,_文本)->+的(+操作,+生成作者),
    ->[is](_章节结构,_章节)->_章节->的(_章节,题目)->[==]\"Abstract\"(,题目)...
        ->+生成概述(_章节,_文本)->+的(+操作,+生成概述),
    ->[is](_章节结构,_附录)->_附录->的(_附录,题目#2)->[==]\"Appendix\"(,题目#2)...
        ->+生成附录(_附录,_文本)->+的(+操作,+生成附录),
    ->[is](_章节结构,二级标题)->二级标题(,)...
        ->+生成章节(二级标题,_文本)->+的(+操作,+生成章节)
}


"(,)
的#173""(降临规则#2,整理引用#174)
整理引用#174"\"\"\"
P代码:...
print(list_lk)
print(paper_text)

\"\"\"

+整理引用(_媒介,_文本)->+[del](,+整理引用)...
->的(整理引用,P代码)...

->.(_媒介,_文章)...
->+[python]\"list_lk=[]\"(Python,)->[]{
    []=>的(_文章,_节点)->_节点->引用(_节点,)...
    =>+[标题](_节点,)->+[python]\"list_lk.append(name)\"(Python,)...
        ->+[s]\"name\"(+[python],+[标题])
}...

->+[python](Python,_文本)->+[code](+[python],P代码)...
->+[s]\"paper_text\"(+[python],_文本)




"(,)
的#175""(整理引用#174,P代码#176)
P代码#176"\"\"\"
记住\"Python\"
测试:...

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]
    i+=1

ans=out_text


"(,)
的#177""(P代码#176,测试#178)
测试#178"\"\"\"
+[P函数](,测试)
Nini, 打开公式分析器(文件)

\"\"\"

list_lk=['a1','a2','c1']
paper_text=\"\"\"
[a1,a2]
[1].
[c1],[c1]

\"\"\"

import re

link_pat='\[([a-zA-Z]+\d*)(, ?[a-zA-Z]+\d*)*\]'
i=0
out_text=''

while True:
    if i>=len(paper_text):
        break
    a=re.match(link_pat,paper_text[i:])
    if a!=None and a.group(1) in list_lk:
        new_text='\\cite{%s}'%(a.group()[1:-1])
        di0=a.span()[1]
        out_text+=new_text
        i+=di0-1
    else:
        out_text+=paper_text[i]

    i+=1

print(out_text)


\"\"\"
print(a.span())
+[P函数](,测试)

\"\"\""(,)
的#179""(降临规则#2,整理地址#180)
整理地址#180"\"\"\"
P代码:...
P代码2:...

\"\"\"

+整理地址(_媒介,_凭依)->+[del](,+整理地址)...
->的(整理地址,P代码)->的(整理地址,P代码2)...

->的(_凭依,地址)...
->+[python](Python,地址)->+[s]\"folder_name\"(+[python],地址)...
->[]{
    []:->的(_凭依,文件名)->文件名(,)...
        ->+[s]\"file_name\"(+[python],文件名)->+[code](+[python],P代码),
    ->+的(_凭依,+文件名)...
        ->+[o]\"file_name\"(+[python],+文件名)->+[code](+[python],P代码2)
}


"(,)
的#181""(整理地址#180,P代码#182)
P代码#182"\"\"\"


\"\"\"

ans=folder_name

"(,)
的#183""(整理地址#180,P代码2#184)
P代码2#184"\"\"\"
ans=folder_name
print([i for i in range(1,3)])

\"\"\"

folders=folder_name.split('/')
list_folders=[folders[0]]
for i in range(1,len(folders)):
    folder=folders[i]
    if folder!=\"\":
        list_folders.append(folder)

file_name=list_folders[-1]
if '.' in file_name:
    ans=\"/\".join(list_folders[0:-1])
else:
    ans=\"/\".join(list_folders)
    file_name=\"README.md\"

"(,)
的#185""(文本转换_md#0,召唤规则#186)
召唤规则#186"\"\"\"
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)
    ->+整体架构(_媒介,_凭依)->+的(操作,+整体架构)...

\"\"\"

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]\"结构文本转md\"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...


->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}...
->+整理地址(_媒介,_凭依)->+的(操作,+整理地址)


"(,)

## end
#757, 467:
"""
Nini, 打开人体模型(文件)
Nini, 打开CBS(文件)
    ->+整体架构(_媒介,_凭依)->+的(操作,+整体架构)...

"""

+召唤规则(_媒介,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_凭依)...

->[==]"结构文本转md"(,召唤星辰)...
    ->+整理图片(_媒介,_凭依)->+的(操作,+整理图片)...
    ->+整理内容(_媒介,_凭依)->+的(操作,+整理内容)...
    ->+整理引用(_媒介,_凭依)->+的(操作,+整理引用)...


->[]{
    []=>的(_媒介,_章节)->_章节=>+章节内容(_章节,_凭依)->+的(操作,+章节内容)
}...
->[]{
    []:->.(_媒介,_原始结构)->_原始结构(,)...
        ->+引用文章(_原始结构,_凭依)->+的(操作,+引用文章),
    ->[]
}...
->+整理地址(_媒介,_凭依)->+的(操作,+整理地址)



## end
#759, 10237:
代码结构转代码#0"

召唤规则:...
降临规则:...



"(,)
的#1""(代码结构转代码#0,降临规则#2)
降临规则#2"

生成结构:...
整理结构:...

"(,)
的#3""(降临规则#2,整理结构#4)
整理结构#4"\"\"\"


\"\"\"
+整理结构(_媒介,_凭依)->+[del](,+整理结构)...

->的(_凭依,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_凭依,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)...

->的(_凭依,文本)->+[结构转文本](文本,_凭依)...
->+[记住](,_凭依)->+[修改内容](_凭依,+[显示])
"(,)
的#5""(降临规则#2,生成结构#6)
生成结构#6"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,描述结构)

\"\"\"

+生成结构(_媒介,_凭依)->+[del](,+生成结构)...
->的(生成结构,描述结构)->的(生成结构,库)...

->[]{
    []:->的(_凭依,结构)->结构->+[删除结构](,结构),  ->+的(_凭依,+结构)
}->的(_凭依,结构)...
->[]{
    []:->的(_凭依,文本)->文本->+[删除结构](,文本),  ->+的(_凭依,+文本)
}->的(_凭依,文本)...

->+[code]([想],描述结构)->[想](_媒介,结构)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(,_模块)->_模块=>[说]\"操作: \"(,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](文本,_模块)->+[code](+[做],_条目)
}


"(,)
的#7""(生成结构#6,库#8)
库#8"
描述模块:...

代码模块:...
如果模块:...

for模块:...
函数模块:...
将条目\"for模块\"复制为条目\"函数模块\"

一般模块:...
+[新建阅读窗口](,如果模块)
"(,)
的#9""(库#8,描述模块#10)
描述模块#10"\"\"\"
写模块:...

\"\"\"
+描述模块(_凭依,_模块)->+[del](,+描述模块)...
->的(描述模块,写模块)...

->+[做](_凭依,_模块)->+[code](+[做],写模块)

"(,)
的#11""(描述模块#10,写模块#12)
写模块#12"\"\"\"
P代码:...
P代码b:...
P代码2:...
P代码3:...

\"\"\"
+写模块(_文本,_模块)->+[del](,+写模块)...
->的(写模块,P代码)...
->的(写模块,P代码2)->的(写模块,P代码3)...

->+[临时文本]#内部->[]{
    []=>内部(_模块,_模块1)->_模块1=>+[做](+[临时文本]#a,_模块1)...
        ->+[code](+[做],写模块)...
        ->+[python](Python,+[临时文本]#内部)->+[code](+[python],P代码2)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],+[临时文本]#内部)
}...

->_re\"函数|内容|条件\"(_模块,)->+[标题](_re,)...
->+[python](Python,_文本)->+[code](+[python],P代码)...
    ->+[s]\"var_name\"(+[python],_re)->+[s]\"pt_name\"(+[python],+[标题])...
    ->+[s]\"text_0\"(+[python],+[临时文本]#内部)...

->[]{
    []:->顺序(_模块,_模块1)->_模块1(,)...
        ->+[做](+[临时文本]#a,_模块1)->+[code](+[做],写模块)...
        ->+[python](Python,_文本)->+[code](+[python],P代码3)...
        ->+[s]\"text_a\"(+[python],+[临时文本]#a)...
        ->+[s]\"text_0\"(+[python],_文本),

    ->[]
}
"(,)
的#13""(写模块#12,P代码b#14)
P代码b#14""(,)
的#15""(写模块#12,P代码3#16)
P代码3#16"\"\"\"


\"\"\"

ans=text_0+\"\n\"+text_a
"(,)
的#17""(写模块#12,P代码2#18)
P代码2#18"\"\"\"
记住\"Python\"
+[P函数](,P代码2)
测试:...

\"\"\"
import numpy as np

ans=\"\"
pat_line_0=\"{s:─<{n}}\"
pat_line_1=\"{s: <{n}}\"
if text_0!=\"\":
    list_line_0=text_0.split(\"\n\")
    n_0=np.max([len(line) for line in list_line_0])
    l_0=len(list_line_0)
    list_line_a=text_a.split(\"\n\")
    n_a=np.max([len(line) for line in list_line_a])
    l_a=len(list_line_a)

    for i in range(np.max([l_a,l_0])):
        pat_line=pat_line_1

        if i>=l_a:
            line_a=pat_line.format(s=\" \",n=n_a)
        else:
            line_a=pat_line.format(s=list_line_a[i],n=n_a)
        
        if i>=l_0:
            line_0=pat_line.format(s=\" \",n=n_0)
        else:
            line_0=pat_line.format(s=list_line_0[i],n=n_0)

        if i==0:
            line_a=line_a.replace(\" \",\"─\")
            ans+=line_a+\"────\"+line_0+\"\n\"
        else:
            ans+=line_a+\"    \"+line_0+\"\n\"

    ans=ans[0:-1]
else:
    ans=text_a



"(,)
的#19""(P代码2#18,测试#20)
测试#20"\"\"\"
+[P函数](,测试)

\"\"\"
text_a=\"\"\"
aaa
c
v
\"\"\"
text_0=text_a

list_line=text_0.split(\"\n\")
list_ns=[len(line) for line in list_line]
print(list_ns)




\"\"\"
+[P函数](,测试)
print('{s:X<{n}}'.format(s=\"11\",n=10))
print(f'{\"dog\": <10}'+'1')
print(f'{\"%s\":X<10}'%(\"AAA\"))

\"\"\""(,)
的#21""(写模块#12,P代码#22)
P代码#22"\"\"\"
    text_0=str_a+text_0.replace(\"\n\",\"\n\"+str_a)
print(text_0)
print(text_1)
+[P函数](,P代码)

\"\"\"
# print(var_name,pt_name)
if text_0==\"\":
    ans=var_name
else:
    str_a=\"├\"
    list_line=text_0.split(\"\n\")
    list_line_1=[]
    n_last=0
    for i in range(len(list_line)):
        line=list_line[i]
        if line[0]==\"|\" or line[0]==\"├\" or line[0]==\"└\" or line[0]==\" \":
            line=\"|\"+line
        else:
            n_last=i
            line=\"├\"+line
        list_line_1.append(line)
    for i in range(n_last,len(list_line_1)):
        if list_line_1[i][0]==\"|\":
            list_line_1[i]=' '+list_line_1[i][1:]
        else:
            list_line_1[i]='└'+list_line_1[i][1:]

    text_1=\"\n\".join(list_line_1)
    ans=var_name+\"\n\"+text_1


\"\"\"
print(text_1)
+[P函数](,P代码)

\"\"\""(,)
的#23""(库#8,代码模块#24)
代码模块#24"\"\"\"


\"\"\"
+代码模块(_文本,模块)->+[del](,+代码模块)...
->的(库,代码模块)->库(,)...

->[]{
    []:->函数(模块,)->的(库,函数模块)->函数模块(,)...
        ->+[做](_文本,模块)->+[code](+[做],函数模块),

    ->内容\"if\"(模块,)->的(库,如果模块)->如果模块(,)...
        ->+[做](_文本,模块)->+[code](+[做],如果模块),
    ->内容\"for\"(模块,)->的(库,for模块)->for模块(,)...
        ->+[做](_文本,模块)->+[code](+[做],for模块),

    ->的(库,一般模块)->一般模块(,)...
        ->+[做](_文本,模块)->+[code](+[做],一般模块)
}...

->[]{
    []:->顺序(模块,模块#1)->模块#1->+[做](_文本,模块#1)->+[code](+[做],代码模块),
    ->[]
}

"(,)
的#25""(库#8,函数模块#26)
函数模块#26"\"\"\"
模板:...

\"\"\"
+函数模块(_文本,模块)->+[del](,+函数模块)...
->的(函数模块,模板)->的(库,函数模块)->库->的(库,代码模块)...

->函数(模块,)...
->+[文本结构_插入尾部]\"
\"(_文本,+节点)...
->+[模板文本](模板,+节点)->+[.](+[模板文本],函数)...

->+[文本结构_插入]\"    \"(+节点,+运算)->[]{
    []:->内部(模块,模块#2)->模块#2->+[做](+运算,模块#2)->+[code](+[做],代码模块),
    ->[]
}

"(,)
的#27""(函数模块#26,模板#28)
模板#28"function %函数
%运算
end"(,)
的#29""(库#8,一般模块#30)
一般模块#30"\"\"\"
P代码:...

\"\"\"
+一般模块(_文本,模块)->+[del](,+一般模块)...
->的(一般模块,P代码)->的(库,一般模块)->库->的(库,代码模块)...

->模块(,_块)->_块(,_代码)...
->+[文本结构_插入尾部]\"
\"(_文本,+节点)...
->[]:
    ->_代码->+[python](Python,+节点)...
        ->+[code](+[python],P代码)->+[.]\"text\"(+[python],_代码),
    ->+[修改内容]\"%s;\"(_块,+节点)
"(,)
的#31""(一般模块#30,P代码#32)
P代码#32"\"\"\"
记住\"Python\"
print(re.sub())

\"\"\"

import re
ans=re.sub(r\"\n+$\",\"\",text)

"(,)
的#33""(库#8,如果模块#34)
如果模块#34"\"\"\"
if模板:...
elif模板:...
else模板:...

\"\"\"
+如果模块(_文本,模块)->+[del](,+如果模块)...
->的(如果模块,if模板)->的(如果模块,elif模板)->的(如果模块,else模板)...
->的(库,如果模块)->库->的(库,代码模块)...

->+[文本结构_插入尾部]\"
\"(_文本,+节点)...

->内部(模块,模块#1)->条件(模块#1,)...
->+[模板文本](if模板,+节点)->+[.]\"条件\"(+[模板文本],条件)...

->+[文本结构_插入]\"    \"(+节点,+运算)->[]{
    []:->内部(模块#1,模块#2)->模块#2->+[做](+运算,模块#2)->+[code](+[做],代码模块),
    ->[]
}...

->+[文本结构_插入](+节点,+elif)->[]{
    []=>内部(模块,模块#2)->模块#2{[]=>[is](模块#1,模块#2)}->条件(模块#2,)...
        =>+[文本结构_插入尾部](+elif,+节点#2)...
        ->+[模板文本](elif模板,+节点#2)->+[.]\"条件\"(+[模板文本],条件)...
        ->+[文本结构_插入]\"    \"(+节点#2,+运算#2)->[]:
            ->内部(模块#2,模块#3)->+[做](+运算#2,模块#3)->+[code](+[做],代码模块),
            ->[]
}...

->+[文本结构_插入](+节点,+else)->[]{
    []:->内部(模块,模块#2)->模块#2->内容\"else\"(模块#2,)->内部(模块#2,模块#3)...
        ->+[修改内容](else模板,+else)->+[文本结构_插入]\"    \"(+else,+运算#2)...
        ->+[做](+运算#2,模块#3)->+[code](+[做],代码模块),
    ->[]
}


"(,)
的#35""(如果模块#34,else模板#36)
else模板#36"
else
%运算"(,)
的#37""(如果模块#34,elif模板#38)
elif模板#38"
elseif %条件
%运算"(,)
的#39""(如果模块#34,if模板#40)
if模板#40"if %条件
%运算%elif%else
end"(,)
的#41""(库#8,for模块#42)
for模块#42"\"\"\"
模板:...

\"\"\"
+for模块(_文本,模块)->+[del](,+for模块)...
->的(for模块,模板)->的(库,for模块)->库->的(库,代码模块)...

->模块(,_块)->_块(,_循环)->条件(_循环,初始化)->初始化(,cmd)...
->+[文本结构_插入尾部]\"
\"(_文本,+节点)...
->+[模板文本](模板,+节点)->+[.]\"条件\"(+[模板文本],cmd)...

->+[文本结构_插入]\"    \"(+节点,+运算)->[]{
    []:->内部(模块,模块#2)->模块#2->+[做](+运算,模块#2)->+[code](+[做],代码模块),
    ->[]
}

"(,)
的#43""(for模块#42,模板#44)
模板#44"for %条件
%运算
end"(,)
的#45""(生成结构#6,描述结构#46)
描述结构#46"\"\"\"
收集块:...

\"\"\"
+描述结构(_媒介,结构)->+操作(+描述结构,)...

->的(_媒介,起点)->起点(,块)->+观察(+代码块,块)->[观察代码结构](_媒介,+观察)...
->+[code]([想],收集块)->+[.]([想],+操作)->[想](结构,+观察)->o([想],模块)...

->+的(结构,+起点)->+起点(模块,)->[投影](,+的)->[投影](,+起点)...
->+的(+操作,+代码模块)->+代码模块(,模块)


"(,)
的#47""(描述结构#46,收集块#48)
收集块#48"\"\"\"
收集内容:...
+[新建阅读窗口](,收集内容)

保存:...

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"1,1,1\"(,_块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->[]{
    []:->条件(观察,条件#1)->条件#1(,_cond)->+的(结构,+模块#2)->+模块#2\"1,1,1\"...
        ->+条件#2(+模块#2,)->+的#2(结构,+条件#2)->[m_text](_cond,+条件#2)...
        ->[投影](,+的)->[投影](,+模块#2)->[投影](,+的#2)->[投影](,+条件#2)...
        ->+内部(+模块#2,+模块)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
    ->+[o](+收集块,+模块#2),

    ->否则(观察,)...
        ->+模块#2\"1,1,1\"->+的(结构,+模块#2)->[投影](,+的)->[投影](,+模块#2)...
        ->+内容\"else\"(+模块#2,)->+的(结构,+内容)->[投影](,+的)->[投影](,+内容)...
        ->+内部(+模块#2,+模块)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
    ->+[o](+收集块,+模块#2),

    ->+[o](+收集块,+模块)
}...

->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)
}...
->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)
}

"(,)
的#49""(收集块#48,保存#50)
保存#50"\"\"\"
P代码:...
P代码1:...
P代码2:...
收集内容:...
+[新建阅读窗口](,P代码)

\"\"\"
+收集块(结构,观察)...

->观察(,_块)->+的(结构,+模块)->+模块\"1,1,1\"(,_块)->+[o](+收集块,+模块)...
    ->+的#2(结构,+内容)->+内容(+模块,)...
        ->+[code]([想]#0,收集内容)->[想]#0(观察,+内容)...
    ->[投影](,+的)->[投影](,+模块)->[投影](,+的#2)->[投影](,+内容)...

->+[code]([python]#0,P代码1)...
    ->+[.]\"func_name\"([python]#0,+内容)->+[.]\"bk1\"([python]#0,+模块)...
    ->[python]#0(Python,+模块)...
->[]{
    []=>然后\"运算\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+内部(+模块,模块#2)->+的(结构,+内部)->[投影](,+的)->[投影](,+内部)...
        ->+[code]([python],P代码)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}...
->[]{
    []=>然后\"顺序\"(观察,观察#2)->观察#2=>+[code]([想],收集块)...
        ->[想](结构,观察#2)->o([想],模块#2)...
        ->+顺序(+模块,模块#2)->+的(结构,+顺序)->[投影](,+的)->[投影](,+顺序)...
        ->+[code]([python],P代码2)...
        ->+[.]\"bk1\"([python],+模块)->+[.]\"bk2\"([python],模块#2)...
        ->[python](Python,+模块)
}

"(,)
的#51""(收集块#48,收集内容#52)
收集内容#52"\"\"\"
    ->否则(观察,)->[m_text]\"else\"(,内容),

\"\"\"
+收集内容(观察,内容)...

->观察(,_块)->[]{
    []:->如果(观察,)->[m_text]\"if\"(,内容),
    ->循环(观察,)->_块(,循环#1)->循环#1->[m_text](循环#1,内容),
    ->函数(观察,)->.\"函数\"(观察,_模块)->_模块(,name)...
        ->[m_text](name,内容)->[m_name](+函数,内容),
    ->[m_text]\"code\"(,内容)
}


"(,)
的#53""(代码结构转代码#0,召唤规则#54)
召唤规则#54"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"代码结构转代码\"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)


"(,)

## end
#761, 153:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"代码结构转代码"(,召唤星辰)...

->+整理结构(_题目,_代码)->+的(操作,+整理结构)...
->+生成结构(_题目,_代码)->+的(操作,+生成结构)



## end
#763, 33021:
执行计算过程#0"

召唤规则:...
降临规则:...



"(,)
的#1""(执行计算过程#0,降临规则#2)
降临规则#2"+[复制结构](,设置变量)

设置变量:...

召唤代码:...
+[修改标题]\"召唤代码\"(,召唤代码3)

整理代码:...
+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#3""(降临规则#2,召唤代码#4)
召唤代码#4"\"\"\"
描述结构:...
生成代码:...

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)->的(召唤代码,生成代码)...

->[]{
    []:->的(_代码,顺序)->顺序=>的(顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+顺序)
}->的(_代码,顺序#0)...
->[]{
    []:->的(_代码,初值)->初值=>的(初值,_节点)=>+[del](,的),
    ->+的(_代码,+初值)
}->的(_代码,初值#0)...
->[]{
    []:->的(_代码,入口)->入口=>的(入口,_节点)=>+[del](,的),
    ->+的(_代码,+入口)
}->的(_代码,入口#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)->入口([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(初值,_初值)->_初值=>+的(初值#0,_初值)
}...
->[]{
    []=>的(入口,_入口)->_入口=>+的(入口#0,_入口)
}...

->头部(顺序,求解)...
->+[做](求解,顺序#0)->+[code](+[做],生成代码)->+[.]\"代码\"(+[做],_代码)...
->+[.]\"题目\"(记忆,_题目)->+[.]\"题目\"(+[做],_题目)...
->+[del](,入口#0)


"(,)
的#5""(召唤代码#4,生成代码#6)
生成代码#6"\"\"\"
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,库)...

->.\"代码\"(+生成代码,_代码)->.\"题目\"(+生成代码,_题目)...
->[]{
    []:->[==]\"完成\"(,求解),

    ->思考(求解,)->的(库,深入思考)->深入思考(,)...
        ->+[做](,求解)->+[code](+[做],深入思考)...
        ->+[.]\"代码\"(+[做],_代码)->+[.]\"题目\"(+[做],_题目),

    ->调用(求解,)->的(库,_节点)->_节点->[标题](_节点,)->[==]([标题],调用)...
        ->+[做](,求解)->+[code](+[做],_节点)...
        ->+[.]\"代码\"(+[做],_代码)->+[.]\"题目\"(+[做],_题目),

    ->[]
}...

->[]:
    ->后(求解,求解#1)->求解#1->+[修改内容]\"完成\"(,求解)->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.]\"代码\"(+[做],_代码)->+[.]\"题目\"(+[做],_题目),
    ->[]


"(,)
的#7""(生成代码#6,库#8)
库#8"+[删除结构](,库)

代入定义:...
矩阵乘法:...
矩阵乘以系数:...
矩阵除以系数:...
矩阵加减:...
矩阵拆括号:...
矩阵求逆:...
将条目\"矩阵求逆\"复制为条目\"矢量平方\"

矢量平方:...
计算模:...
将条目\"矢量平方\"复制为条目\"计算模\"

化简x项:...
拆括号:...
整理x系数:...
减去:...
将条目\"化简x项\"复制为条目\"解一元二次方程\"
+[新建阅读窗口](,拆括号)

通分:...


解一元二次方程:...
解线性方程:...
将条目\"解一元二次方程\"复制为条目\"解线性方程\"


思考下一步:...
深入思考:...
+[新建阅读窗口](,解方程)

解方程_参考:...
解方程:...
+[新建阅读窗口](,解方程_参考)
+[新建阅读窗口](,解方程)
"(,)
的#9""(库#8,代入定义#10)
代入定义#10"\"\"\"
代入结构:...
P代码:...

\"\"\"
+代入定义(,求解)->+[del](,+代入定义)...
->的(代入定义,P代码)->的(代入定义,代入结构)...

->求解(_式子0,_矩阵)->_矩阵:

->_式子0->的(_式子0,表达式)->+[python](Python,)->+[code](+[python],P代码)...
    ->+[.]\"text_eqn\"(+[python],表达式)->+[o]\"var_b\"(+[python],+b)...
    ->[]{
        +[表达式转结构](+b,+新结构)->+[做](+新结构,_矩阵)->+[code](+[做],代入结构)...
            =>o(求解,_矩阵1)->_矩阵1(,_矩阵1)=>+[表达式转结构](+b,+新结构#1)...
            ->+[做](+新结构#1,_矩阵1)->+[code](+[做],代入结构)
    },

->[==]\"单位矩阵\"(,求解)->+b#1\"\mat{1,0,0;0,1,0;0,0,1}\"...
    ->[]{
        +[表达式转结构](+b#1,+新结构)->+[做](+新结构,_矩阵)->+[code](+[做],代入结构)...
            =>o(求解,_矩阵1)->_矩阵1=>+[表达式转结构](+b,+新结构#1)...
            ->+[做](+新结构#1,_矩阵1)->+[code](+[做],代入结构)
    },

->[]

"(,)
的#11""(代入定义#10,P代码#12)
P代码#12"\"\"\"


\"\"\"

list_eqs=text_eqn.split('=')
var_a=list_eqs[0]
var_b=list_eqs[-1]

"(,)
的#13""(代入定义#10,代入结构#14)
代入结构#14"\"\"\"
整理结构:...

\"\"\"
+代入结构(新结构,_矩阵)->+[del](,+代入结构)...
->的(代入结构,整理结构)...

->的(表达式,_矩阵)->+旧结构\"项\"(_矩阵,_矩阵)...
    ->+代入\"自动化简\"(新结构,+旧结构)->+[投影虚构操作](表达式,+代入)...
    ->+[做](表达式,新结构)->+[code](+[做],整理结构)...
    ->+[del](,+代入)->+[del](,+旧结构)


"(,)
的#15""(代入结构#14,整理结构#16)
整理结构#16"\"\"\"


\"\"\"
+整理结构(表达式,_结构)->+[del](,+整理结构)...

->[]{
    []=>的(_结构,_节点)->_节点=>+的(表达式,_节点)
}...
->的(_结构,起点)->+[del](,_结构)->+[del](,起点)

"(,)
的#17""(库#8,思考下一步#18)
思考下一步#18"\"\"\"
新算式:...
思考新算式:...
思考新算式_解方程:...
将条目\"思考新算式\"复制为条目\"思考新算式_解方程\"
+[新建阅读窗口](,思考新算式_解方程)

保存:...

\"\"\"
+思考下一步(,求解)->+[del](,+思考下一步)...
->的(思考下一步,新算式)->的(思考下一步,思考新算式)...
->的(思考下一步,思考新算式_解方程)...

->.\"代码\"(+思考下一步,_代码)->.\"结构\"(_代码,_思考)...
->求解(_题目,_式子)->_题目->_式子(,)...
->回收站(_题目,)->+[删除结构](,_思考)...

->+[做](_题目,_式子)->+[code](+[做],新算式)->+[.]\"新\"(+[做],+新式子)...
->[]:

->.\"解方程\"(求解,)->[m_text](求解,+变量)...
    ->[]{+[做](_题目,+新式子)->+[code](+[做],思考新算式_解方程)...
        ->+[.](+[做],+变量)->+[.]\"思考\"(+[做],_思考)->+[del](,+变量):
            ->o(求解,)->+[.](+[做],+接下来)->[m_text](o,+接下来),
            ->[]},

->[m_text](求解,+矩阵)...
    ->[]{+[做](_题目,+新式子)->+[code](+[做],思考新算式)...
        ->+[.](+[做],+矩阵)->+[.]\"思考\"(+[做],_思考)->+[del](,+矩阵)}


"(,)
的#19""(思考下一步#18,新算式#20)
新算式#20"\"\"\"
P代码:...
_c

\"\"\"
+新算式(_题目,_式子)->+[del](,+新算式)...
->的(新算式,P代码)...

->.\"新\"(+新算式,_A)...
->+[python]\"list_fm=[]\"(Python,)->[]{
    []=>的(_题目,_公式)->_公式->公式(_公式,)=>+[标题](_公式,)...
        ->+[python]\"list_fm.append(fm_text)\"(Python,)->+[s]\"fm_text\"(+[python],+[标题])
}...

->的(_式子,表达式)->+[标题](_式子,)...
->+[python](Python,+[修改标题])->+[code](+[python],P代码)...
    ->+[s]\"fm_0\"(+[python],+[标题])->+[s]\"all_txt\"(+[python],_题目)...
    ->+[o]\"all_out\"(+[python],_题目)...
->+[修改标题](,_A)...
    ->+的(_题目,_A)->+公式(_A,)->+的(_A,+表达式)...

->的(表达式,起点)->起点(,_c)...
->+[修改内容]\"LaTeX\"(,记忆)->+[算式](_c,+[修改内容]#0)->+[修改内容]#0(,_A)...
->+[修改内容]\"表达式\"(,记忆)->+[算式](_c,+[修改内容]#1)->+[修改内容]#1(,+表达式)...

->+[生成公式结构](+表达式,+表达式)...
->+[转换公式结构](,+表达式)->+[更新公式起点](,+表达式)...
->+[删除结构](,表达式)...

=>m_readPtr(,_题目)->的(_b,m_readPtr)...
=>+[更新文本](_b,)
"(,)
的#21""(新算式#20,P代码#22)
P代码#22"\"\"\"
+[P函数](,P代码)
记住\"Python\"
fm_0=\"[测试].\"
print(re.match(\"\[([\d\.]+)\]\.\",fm_text).group(1))

\"\"\"
import re

result=re.match(\"\[(.+)\]\.\",fm_0)
order_type=False
if result!=None:
    order_type=True
    fm_txt0=result.group(1)
else:
    fm_txt0=fm_0

od_list=fm_txt0.split('.')
if od_list[-1].isnumeric():
    od_list[-1]=str(int(od_list[-1])+1)
    fm_txt=\".\".join(od_list)
    if order_type:
        fm_txt=\"[%s].\"%(fm_txt)

if fm_txt not in list_fm:
    fm_next=fm_txt
else:
    if order_type:
        fm_next=\"%s.1\"%(fm_txt0)
        fm_next=\"[%s].\"%(fm_next)
    else:
        fm_next=\"%s.1\"%(fm_txt)

ans=fm_next
i=all_txt.find(\"%%%s\"%(fm_0))
if i!=-1:
    i+=len(fm_0)+1

all_out=all_txt[0:i]+\"\n%\"+fm_next+all_txt[i:]


\"\"\"
print(fm_next,fm_txt,all_out)
print(all_txt.find(\"%[6].\"))
+[P函数](,P代码)

\"\"\""(,)
的#23""(思考下一步#18,思考新算式_解方程#24)
思考新算式_解方程#24"\"\"\"
自动推导:...
将'自动推导'的\"矩阵\"替换为\"变量\"

\"\"\"
+思考新算式_解方程(_世界,_式子)->+[del](,+思考新算式_解方程)...
->的(思考新算式_解方程,自动推导)...

->.(+思考新算式_解方程,变量)->.\"思考\"(+思考新算式_解方程,思考)...

->[]{
    []:->.(+思考新算式_解方程,接下来)->接下来->+的(思考,接下来)->+[del](,接下来),
    ->[]
}...

->+[code]([想],自动推导)->+[.]([想],变量)->+[.]([想],思考)->[想](_世界,_式子)


"(,)
的#25""(思考新算式_解方程#24,自动推导#26)
自动推导#26"\"\"\"


\"\"\"
+自动推导(_题目,_式子)->.(+自动推导,思考)->.(+自动推导,变量#0)...

->回收站(_题目,)...

->+变量(_式子,)->+观察(+解方程,+变量)->[m_text](变量#0,+变量)...
->[]{
    []:->的(思考,接下来)->接下来->+[.](+观察,接下来),
    ->[]
}...
->[描述结构](_题目,+观察)->o(+观察,求解)...
->[收集推导结构](_题目,求解)->结构([收集推导结构],)...

=>的(结构,_节点)->[]{[]->[新](,_节点)}=>[投影]\"实节点\"(,_节点)...
->+[有](思考,_节点)->[投影](,+[有])->+[有](回收站,_节点)->[投影](,+[有])


"(,)
的#27""(思考下一步#18,保存#28)
保存#28"\"\"\"
新算式:...
思考新算式:...
思考新算式_解方程:...
将条目\"思考新算式\"复制为条目\"思考新算式_解方程\"
+[新建阅读窗口](,思考新算式_解方程)

保存:...

\"\"\"
+思考下一步(,求解)->+[del](,+思考下一步)...
->的(思考下一步,新算式)->的(思考下一步,思考新算式)...
->的(思考下一步,思考新算式_解方程)...

->.\"代码\"(+思考下一步,_代码)->.\"结构\"(_代码,_思考)...
->求解(_题目,_式子)->_题目->_式子(,)...
->[]{
    []:->回收站(_题目,)->+[删除结构](,回收站), ->[]
}...

->+[做](_题目,_式子)->+[code](+[做],新算式)->+[.]\"新\"(+[做],+新式子)...
->[]:

->.\"解方程\"(求解,)->[m_text](求解,+变量)...
    ->[]{+[做](_题目,+新式子)->+[code](+[做],思考新算式_解方程)...
        ->+[.](+[做],+变量)->+[del](,+变量):
            ->o(求解,)->+[.](+[做],+接下来)->[m_text](o,+接下来),
            ->[]},

->[m_text](求解,+矩阵)...
    ->[]{+[做](_题目,+新式子)->+[code](+[做],思考新算式)...
        ->+[.](+[做],+矩阵)->+[del](,+矩阵)}


"(,)
的#29""(思考下一步#18,思考新算式#30)
思考新算式#30"\"\"\"
自动推导:...

\"\"\"
+思考新算式(_世界,_式子)->+[del](,+思考新算式)...
->的(思考新算式,自动推导)...

->.(+思考新算式,矩阵)->.\"思考\"(+思考新算式,思考)...

->+[code]([想],自动推导)->+[.]([想],矩阵)->+[.]([想],思考)->[想](_世界,_式子)


"(,)
的#31""(思考新算式#30,自动推导#32)
自动推导#32"\"\"\"


\"\"\"
+自动推导(_题目,_式子)->.(+自动推导,思考)->.(+自动推导,矩阵#0)...

->回收站(_题目,)...

->+矩阵(_式子,)->+观察(+计算矩阵,+矩阵)->[m_text](矩阵#0,+矩阵)...
->[描述结构](_题目,+观察)->o(+观察,求解)...
->[收集推导结构](_题目,求解)->结构([收集推导结构],)...

=>的(结构,_节点)->[]{[]->[新](,_节点)}=>[投影]\"实节点\"(,_节点)...
->+[有](思考,_节点)->[投影](,+[有])->+[有](回收站,_节点)->[投影](,+[有])


"(,)
的#33""(库#8,矩阵乘以系数#34)
矩阵乘以系数#34"\"\"\"


\"\"\"
+矩阵乘以系数(,求解)->+[del](,+矩阵乘以系数)...

->求解(,*)->的(表达式,*)...
->+矩阵运算(,*)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)



"(,)
的#35""(库#8,矩阵除以系数#36)
矩阵除以系数#36"\"\"\"


\"\"\"
+矩阵除以系数(,求解)->+[del](,+矩阵除以系数)...

->求解(,/)->的(表达式,/)...
->+矩阵运算(,/)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)




"(,)
的#37""(库#8,矩阵加减#38)
矩阵加减#38"\"\"\"


\"\"\"
+矩阵加减(,求解)->+[del](,+矩阵加减)...

->求解(,_加减)->的(表达式,_加减)...
->+矩阵运算(,_加减)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)



"(,)
的#39""(库#8,计算模#40)
计算模#40"\"\"\"


\"\"\"
+计算模(,求解)->+[del](,+计算模)...

->求解(,括号)->的#0(括号,_A)->的(表达式,括号)...
->+矩阵运算(,的#0)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)

"(,)
的#41""(库#8,矩阵乘法#42)
矩阵乘法#42"\"\"\"


\"\"\"
+矩阵乘法(,求解)->+[del](,+矩阵乘法)...

->求解(,*)->的(表达式,*)...
->+矩阵运算(,*)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)



"(,)
的#43""(库#8,矩阵拆括号#44)
矩阵拆括号#44"\"\"\"


\"\"\"
+矩阵拆括号(,求解)->+[del](,+矩阵拆括号)...

->求解(,括号)->的(表达式,括号)->的(括号,_A)...
->+[del](,的)...
->+代入\"项\"(_A,括号)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)

"(,)
的#45""(库#8,矩阵求逆#46)
矩阵求逆#46"\"\"\"


\"\"\"
+矩阵求逆(,求解)->+[del](,+矩阵求逆)...

->求解(,^)->的(表达式,^)...
->+矩阵运算(,^)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)

"(,)
的#47""(库#8,拆括号#48)
拆括号#48"\"\"\"


\"\"\"
+拆括号(,求解)->+[del](,+拆括号)...

->求解(,_a)->的(表达式,_a)...

->[]{
    []=>.\"括号\"(求解,括号)->括号=>[]:
        ->^(括号,2)->2(,)...
            ->[]{+括号运算(,^)->+[投影虚构操作](表达式,+括号运算)->+[del](,+括号运算)},
        ->[]
}...

->[]{
    []=>.\"括号\"(求解,括号)->括号=>[]:
        ->*(括号,)...
            ->[]{+括号运算(,*)->+[投影虚构操作](表达式,+括号运算)->+[del](,+括号运算)},
        ->*(,括号)...
            ->[]{+括号运算(,*)->+[投影虚构操作](表达式,+括号运算)->+[del](,+括号运算)},
        ->/(,括号), ->/(括号,),
        ->的(括号,_b)->_b->+[del](,的)...
            ->[]{+代入(_b,括号)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)}
}



"(,)
的#49""(库#8,矢量平方#50)
矢量平方#50"\"\"\"


\"\"\"
+矢量平方(,求解)->+[del](,+矢量平方)...

->求解(,^)->的(表达式,^)...
->+矩阵运算(,^)->+[投影虚构操作](表达式,+矩阵运算)->+[del](,+矩阵运算)

"(,)
的#51""(库#8,整理x系数#52)
整理x系数#52"\"\"\"
收集乘式:...
生成算式:...

\"\"\"
+整理x系数(,求解)->+[del](,+整理x系数)...
->的(整理x系数,收集乘式)->的(整理x系数,生成算式)...

->求解(,_a)->的(表达式,_a)...
->+[python](Python,)->+[s]\"x_txt\"(+[python],求解)...
->+[python]\"v_a={}\"(Python,)->+[v]\"v_a\"(+[python],求解)...
->+[做](求解,_a)->+[code](+[做],收集乘式)...
->+[做](,求解)->+[code](+[做],生成算式)


"(,)
的#53""(整理x系数#52,收集乘式#54)
收集乘式#54"\"\"\"
P代码:...

\"\"\"
+收集乘式(求解,_a1)->+[del](,+收集乘式)...
->的(收集乘式,P代码)...

->+[修改内容]\"表达式\"(,记忆)->+[乘式](_a1,+[临时文本]#0)...
->+[python](Python,)->+[code](+[python],P代码)...
->+[v]\"v_a\"(+[python],求解)->+[s]\"f_txt\"(+[python],+[临时文本]#0)...
->[]{
    []{[]:->-(,_a1),->负号(_a1,)}:
        ->+[临时文本]\"-\"->+[s]\"sign_txt\"(+[python],+[临时文本]),
        ->>+[临时文本]\"+\"->+[s]\"sign_txt\"(+[python],+[临时文本])
}...

->[]:
    ->_re\"[+\-]\"(_a1,_a2)->_a2->+[做](求解,_a2)->+[code](+[做],收集乘式),
    ->[]


"(,)
的#55""(收集乘式#54,P代码#56)
P代码#56"\"\"\"
记住\"Python\"
print(v_a)
v_a=list_f

f_txt=\"-a*b*x^3\"
f_txt=\"x^{-3}\"
+[P函数](,P代码)

\"\"\"
import re

pat_x_1=\"\*?%s\^{(.+)}\"%(x_txt)
pat_x_2=\"\*?%s\^(.+)\"%(x_txt)
pat_x_3=\"\*?%s\"%(x_txt)

result1=re.search(pat_x_1,f_txt)
result2=re.search(pat_x_2,f_txt)
result3=re.search(pat_x_3,f_txt)
if result1!=None:
    n_txt=result1.group(1)
    A_txt=f_txt[0:result1.span()[0]]
elif result2!=None:
    n_txt=result2.group(1)
    A_txt=f_txt[0:result2.span()[0]]
elif result3!=None:
    n_txt=\"1\"
    A_txt=f_txt[0:result3.span()[0]]
else:
    n_txt=\"0\"
    A_txt=f_txt

if A_txt==\"-\":
    A_txt=\"-1\"
elif A_txt==\"\":
    A_txt=\"1\"

item_dict=v_a.get(n_txt,{})
A_n=item_dict.get(A_txt,0)
if sign_txt==\"+\":
    A_n+=1
else:
    A_n-=1

item_dict.update({A_txt:A_n})
v_a.update({n_txt:item_dict})



\"\"\"
记住\"Python\"
print(v_a)
print(A_n)
print(f_txt,n_txt)
+[P函数](,P代码)

\"\"\""(,)
的#57""(整理x系数#52,生成算式#58)
生成算式#58"\"\"\"
P代码:...

\"\"\"
+生成算式(,求解)->+[del](,+生成算式)...
->的(生成算式,P代码)...

->求解(,_a)->的(表达式,_a)...
->+[python](Python,+结构)->+[code](+[python],P代码)...
->+[v]\"v_a\"(+[python],求解)...

->+[表达式转结构](+结构,+结构)...
->+代入\"和式\"(+结构,_a)->+[投影虚构操作](表达式,+代入)...

->+[del](,+结构)->+[del](,+代入)


"(,)
的#59""(生成算式#58,P代码#60)
P代码#60"\"\"\"
+[P函数](,P代码)

\"\"\"
import numpy as np

f_list=[]
n_list=[]
for xn in v_a:
    A_x=v_a[xn]
    As_list=[[],[]]
    for A_txt in A_x:
        A_n=A_x[A_txt]
        if A_n==0:
            continue
        elif A_n>0:
            A_list=As_list[0]
        else:
            A_list=As_list[1]
        
        if A_n==1 or A_n==-1:
            A_list.append(A_txt)
        else:
            A_list.append(\"%d*%s\"%(np.abs(A_n),A_txt))

    A_txt=\"+\".join(As_list[0])
    n_txt=\"-\".join(As_list[1])
    if n_txt!=\"\":
        A_txt+=\"-\"+n_txt

    if xn==\"0\":
        xn_txt=\"\"
    elif xn==\"1\":
        xn_txt=x_txt
    else:
        xn_txt=\"%s^{%s}\"%(x_txt,xn)

    if A_txt==\"\":
        continue
    elif A_txt==\"1\":
        f_list.append(\"%s\"%(xn_txt))
    elif A_txt==\"-1\":
        n_list.append(\"%s\"%(xn_txt))
    elif len(As_list[0])+len(As_list[1])==1:
        if xn_txt==\"\":
            if A_txt[0]==\"-\":
                n_list.append(\"%s\"%(A_txt))
            else:
                f_list.append(\"%s\"%(A_txt))
        else:
            if A_txt[0]==\"-\":
                n_list.append(\"%s*%s\"%(A_txt,xn_txt))
            else:
                f_list.append(\"%s*%s\"%(A_txt,xn_txt))
    else:
        if xn_txt==\"\":
            f_list.append(\"(%s)\"%(A_txt))
        else:
            f_list.append(\"(%s)*%s\"%(A_txt,xn_txt))

f_list.reverse()
if len(n_list)>0:
    ans=\"+\".join(f_list)+\"-\"+\"-\".join(n_list)
else:
    ans=\"+\".join(f_list)

# print(ans,f_list,n_list)


\"\"\"
记住\"Python\"
+[P函数](,P代码)

\"\"\""(,)
的#61""(库#8,解线性方程#62)
解线性方程#62"\"\"\"
P代码:...

\"\"\"
+解线性方程(,求解)->+[del](,+解线性方程)...
->的(解线性方程,P代码)...

->求解(表达式,)->表达式->+[修改内容]\"表达式\"(,记忆)...

->+[python]\"a_list=[]\"(Python,)...
->[]{
    []:->.\"b\"(求解,_a)->_a->.\"bx\"(求解,_xa)->_xa->+[临时文本]{
        []:->_re\"[\*/]\"(,_xa)->+[del](,_re)->+[乘式](_a,+[临时文本]),
        ->[m_text]\"1\"(,+[临时文本])
    }->+[python]\"a_list.append(a_ele)\"(Python,)->+[s]\"a_ele\"(+[python],+[临时文本]),
    ->[]
}...

->+[python]\"b_list=[]\"(Python,)...
->[]{
    []=>.\"c\"(求解,_b)->_b=>+[乘式](_b,+[临时文本])...
        ->+[python]\"b_list.append(b_ele)\"(Python,)->+[s]\"b_ele\"(+[python],+[临时文本])
}...

->+[python](Python,+[临时文本]#0)->+[code](+[python],P代码)...
->+[s]\"x_txt\"(+[python],求解)...

->+[删除结构](,表达式)...
->+[生成公式结构](+[临时文本]#0,表达式)...
->+[转换公式结构](,表达式)->+[更新公式起点](,表达式)->+[初等化简](,表达式)


"(,)
的#63""(解线性方程#62,P代码#64)
P代码#64"\"\"\"
记住\"Python\"
+[P函数](,P代码)
print(\"{0}+{1}\".format(1,2))
print(b_list)
print(b_txt)
x_txt=\"x\"

\"\"\"

pat_txt_1=\"{0}=-\\frac%s{2}%s{1}%s\"
pat_txt_2=\"{0}=-({1})\"

if b_list==[]:
    b_list[0]=\"0\"
a_txt=\"+\".join(a_list)
b_txt=\"+\".join(b_list)

if a_txt==\"1\":
    ans=pat_txt_2.format(x_txt,b_txt)
else:
    ans=pat_txt_1.format(x_txt,a_txt,b_txt)%(\"{\",\"}{\",\"}\")

# print(pat_txt_all,ans)

"(,)
的#65""(库#8,化简x项#66)
化简x项#66"\"\"\"


\"\"\"
+化简x项(,求解)->+[del](,+化简x项)...

->求解(,_a)->的(表达式,_a)...
->+化简\"乘式\"(+变量,_a)->+[投影虚构操作](表达式,+化简)...
->+[del](,+化简)->+[del](,+变量)->[m_text](求解,+变量)


"(,)
的#67""(库#8,解一元二次方程#68)
解一元二次方程#68"\"\"\"
P代码:...

\"\"\"
+解一元二次方程(,求解)->+[del](,+解一元二次方程)...
->的(解一元二次方程,P代码)...

->求解(表达式,)->表达式->+[修改内容]\"表达式\"(,记忆)...

->+[python]\"a_list=[]\"(Python,)...
->[]{
    []:->.\"a\"(求解,_a)->_a->.\"ax\"(求解,_xa)->_xa->+[临时文本]{
        []:->_re\"[\*/]\"(,_xa)->+[del](,_re)->+[乘式](_a,+[临时文本]),
        ->[m_text]\"1\"(,+[临时文本])
    }->+[python]\"a_list.append(a_ele)\"(Python,)->+[s]\"a_ele\"(+[python],+[临时文本]),
    ->[]
}...

->+[python]\"b_list=[]\"(Python,)...
->[]{
    []:->.\"b\"(求解,_b)->_b->.\"bx\"(求解,_xb)->_xb->+[临时文本]{
        []:->_re\"[\*/]\"(,_xb)->+[del](,_re)->+[乘式](_b,+[临时文本]),
        ->[m_text]\"1\"(,+[临时文本])
    }->+[python]\"b_list.append(b_ele)\"(Python,)->+[s]\"b_ele\"(+[python],+[临时文本]),
    ->[]
}...

->+[python]\"c_list=[]\"(Python,)...
->[]{
    []=>.\"c\"(求解,_c)->_c=>+[乘式](_c,+[临时文本])...
        ->+[python]\"c_list.append(c_ele)\"(Python,)->+[s]\"c_ele\"(+[python],+[临时文本])
}...

->+[python](Python,+[临时文本]#0)->+[code](+[python],P代码)...
->+[s]\"x_txt\"(+[python],求解)...

->+[删除结构](,表达式)...
->+[生成公式结构](+[临时文本]#0,表达式)...
->+[转换公式结构](,表达式)->+[更新公式起点](,表达式)->+[初等化简](,表达式)

"(,)
的#69""(解一元二次方程#68,P代码#70)
P代码#70"\"\"\"
记住\"Python\"
+[P函数](,P代码)
print(\"{0}+{1}\".format(1,2))
print(a_list)
x_txt=\"x\"

\"\"\"

pat_txt_all=\"{0}=\\frac%s-{2}+\\sqrt%s({2})^2-4*{1}*{3}%s2*{1}%s\"

if b_list==[]:
    b_list[0]=\"0\"
if c_list==[]:
    c_list[0]=\"0\"
a_txt=\"+\".join(a_list)
b_txt=\"+\".join(b_list)
c_txt=\"+\".join(c_list)

ans=pat_txt_all.format(x_txt,a_txt,b_txt,c_txt)%(\"{\",\"{\",\"}}{\",\"}\")
"(,)
的#71""(库#8,解方程_参考#72)
解方程_参考#72"\"\"\"
自动推导:...

\"\"\"
+解方程(,求解)->+[del](,+解方程)...
->的(解方程,自动推导)...

->.\"代码\"(+解方程,_代码)->.\"结构\"(_代码,_思考)...
->求解(_题目,_变量)->_题目->_变量->调用(求解,_式子)->_式子(,)...

->回收站(_题目,)...
->+思考(求解,_题目)->+[有](回收站,+思考)...

->+变量(_式子,)->[标题](_变量,)->[m_text]([标题],+变量)...
->+[code]([想],自动推导)->+[.]([想],+变量)->+[.]([想],+思考)...
    ->[想](_题目,_式子)...

->[]{
    []:->后(求解,求解#1)->求解#1->做(求解#1,)->+[del](,做),
    ->[]
}


"(,)
的#73""(解方程_参考#72,自动推导#74)
自动推导#74"\"\"\"


\"\"\"
+自动推导(_题目,_式子)->.(+自动推导,思考)->.(+自动推导,变量#0)...

->回收站(_题目,)...

->+观察(+解方程,变量#0)...
->[]{
    []:->的(思考,接下来)->接下来->+[.](+观察,接下来),
    ->[]
}...
->[描述结构](_题目,+观察)->o(+观察,求解)...
->[收集推导结构](_题目,求解)->结构([收集推导结构],)...

=>的(结构,_节点)->[]{[]->[新](,_节点)}=>[投影]\"实节点\"(,_节点)...
->+[有](思考,_节点)->[投影](,+[有])->+[有](回收站,_节点)->[投影](,+[有])


"(,)
的#75""(库#8,深入思考#76)
深入思考#76"\"\"\"
最新:...

\"\"\"
+深入思考(,求解)->+[del](,+深入思考)...
->的(深入思考,最新)...

->求解(_题目,_式子0)->_题目->_式子0->思考(求解,)...
    ->+[召唤星辰]\"执行计算过程\"(_题目,+[临时文本])->+[.]\"结构\"(+[临时文本],思考)...

->[]{+[code]([想],最新)->[想](_式子0,_式子0)}->o(_式子0,_式子)...
    ->的(_式子,表达式)...
->的(思考,求解#1)->求解#1(,_式子1)->的(_式子1,表达式#1)...
    ->+[修改内容](_式子1,_式子)->+[修改内容](表达式#1,表达式)...
->[]{
    []:->调用\"思考下一步\"(求解#1,)...
        ->修改内容\"完成\"(,求解)->+[del](,修改内容)...
        ->后(求解,求解#2)->求解#2->做(求解#2,)->+[del](,做),

    ->+[删除结构](,表达式)->+[生成公式结构](表达式,表达式)...
        ->+[转换公式结构](,表达式)->+[更新公式起点](,表达式)
}



"(,)
的#77""(深入思考#76,最新#78)
最新#78"\"\"\"


\"\"\"
+最新(_B,_B1)...
->[]:
    ->更新(_B1,_B2)->+[code]([想],最新)->[想](_B,_B2),
    ->+[o](_B,_B1)



"(,)
的#79""(库#8,减去#80)
减去#80"\"\"\"
尾部:...
运算:...

\"\"\"
+减去(,求解)->+[del](,+减去)...
->的(减去,尾部)->的(减去,运算)...

->求解(_B,_A)->_B->_A->=(_B,_A)->的(表达式,_A)...
->+[code]([想],尾部)->[想](_B,_B)->o(_B,_B0)...

->+的(表达式,+0)->+[右连](=,+0)->++(_B0,_A)->+的(表达式,++)...
->+[做](,_A)->+[code](+[做],运算)

"(,)
的#81""(减去#80,尾部#82)
尾部#82"\"\"\"


\"\"\"

+尾部(_B,_B1)->[]:
    ->_re\"[+\-]\"(_B1,_B2)->_B2->+[code]([想],尾部)->[想](_B,_B2),
    ->+[o](_B,_B1)

"(,)
的#83""(减去#80,运算#84)
运算#84"\"\"\"


\"\"\"
+运算(,_A)->+[del](,+运算)...

->[]{
    []:->负号(_A,)->+[del](,负号),
    ->+(,_A)->+[修改标题]\"-\"(,+),
    ->-(,_A)->+[修改标题]\"+\"(,-),
    ->[]
}...

->[]:
    ->_re\"[+\-]\"(_A,_A1)->_A1->+[做](,_A1)->+[code](+[做],运算),
->[]
"(,)
的#85""(库#8,通分#86)
通分#86"\"\"\"
收集分母:...
乘以通分项:...

\"\"\"
+通分(,求解)->+[del](,+通分)...
->的(通分,收集分母)->的(通分,乘以通分项)...

->求解(,_a)->+[修改内容]\"表达式\"(,记忆)...
->+[做](,求解)->+[code](+[做],收集分母)...
->+[做](求解,_a)->+[code](+[做],乘以通分项)




"(,)
的#87""(通分#86,收集分母#88)
收集分母#88"\"\"\"
P代码:...

\"\"\"
+收集分母(,求解)->+[del](,+收集分母)...
->的(收集分母,P代码)...

->+[python]\"list_den=[]
list_den_all=[]
list_term=[]\"(Python,)...
=>然后(求解#1,求解)=>[]{
    []=>.(求解#1,_分母)->_分母=>+[乘式2](_分母,+[临时文本])...
        ->+[python]\"list_den.append(den_txt)\"(Python,)...
            ->+[s]\"den_txt\"(+[python],+[临时文本])...
        ->/(_a,_分母)->+[del](,/)=>_re\"[\*/]\"(_分母,_b)=>+[左连](_re,_a)
}...
->+[python](Python,)->+[code](+[python],P代码)...
->+[o]\"n_term\"(+[python],求解#1)




"(,)
的#89""(收集分母#88,P代码#90)
P代码#90"\"\"\"
print(set())
a=set()
a.update(\"123\")
print(a)

\"\"\"

list_term.append(list_den)
n_term=len(list_term)-1

for den in list_den:
    if den not in list_den_all:
        list_den_all.append(den)
list_den=[]

"(,)
的#91""(通分#86,乘以通分项#92)
乘以通分项#92"\"\"\"
乘以项:...
P代码:...

\"\"\"
+乘以通分项(求解,_a)->+[del](,+乘以通分项)...
->的(乘以通分项,乘以项)->的(乘以通分项,P代码)...

->的(表达式,_a)...
->+[python](Python,+[临时文本])->+[code](+[python],P代码)...
->[]{
    []:->然后(求解#1,求解)->求解#1(,_a)->+[.]\"n_term\"(+[python],求解#1),
    ->+[临时文本]#0\"-1\"->+[.]\"n_term\"(+[python],+[临时文本]#0)
}...
->+[做](+[临时文本],_a)->+[code](+[做],乘以项)->+[临时文本](,)...

=>_re\"[=+\-]\"(_a,_b)=>+[做](求解,_b)->+[code](+[做],乘以通分项)


"(,)
的#93""(乘以通分项#92,P代码#94)
P代码#94"\"\"\"
+[P函数](,P代码)
记住\"Python\"
print(list_den_all,list_term)

\"\"\"
n=int(n_term[0])
list_out=[]
if n==-1:
    list_out=list_den_all
else:
    list_den=list_term[n]
    for den in list_den_all:
        if den not in list_den:
            list_out.append(den)
ans=\"*\".join(list_out)

"(,)
的#95""(乘以通分项#92,乘以项#96)
乘以项#96"\"\"\"
尾部:...
保存:...

\"\"\"
+乘以项(_表达式,_a)->+[del](,+乘以项)...
->的(乘以项,尾部)...

->的(表达式,_a)->[]:
    ->[is](_a,0), ->[==](,_表达式),
    ->[is](_a,1)->[]{
        +代入(_表达式,1)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)
    },
    ->+[code]([想],尾部)->[想](_a,_a)->o(_a,_a1)...
        ->+*(_a1,+a)->+的(表达式,+*)->+的(表达式,+a)...
        ->[]{
            +代入(_表达式,+a)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)
        }

"(,)
的#97""(乘以项#96,尾部#98)
尾部#98"\"\"\"


\"\"\"
+尾部(_a,_a1)...
->[]:
    ->_re\"[\*/]\"(_a1,_a2)->+[code]([想],尾部)->[想](_a,_a2),
    ->+[o](_a,_a1)

"(,)
的#99""(乘以项#96,保存#100)
保存#100"\"\"\"
尾部:...
保存:...

\"\"\"
+乘以项(_表达式,_a)->+[del](,+乘以项)...

->的(表达式,_a)->[]:
    ->[is](_a,0),
    ->[is](_a,1)->[]{
        +代入(_表达式,1)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)
    },
    ->+[code]([想],_a)->[想](_a,_a)->o(_a,_a1)...
        ->+*(_a1,+a)->+的(表达式,+*)->+的(表达式,+a)...
        ->[]{
            +代入(_表达式,+a)->+[投影虚构操作](表达式,+代入)->+[del](,+代入)
        }

"(,)
的#101""(库#8,解方程#102)
解方程#102"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

\"\"\"
+解方程(,求解)->+[del](,+解方程)...
->的(解方程,描述结构)->的(解方程,库)...

->.\"题目\"(+解方程,_题目)...
->+[code]([想],描述结构)->[想](,求解)...
->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_B,_A)->_B->_A=>+[做](_B,_A)...
        ->的(库,_条目)->[eq](_条目,_操作)->+[code](+[做],_条目)...
        ->+[.]\"题目\"(+[做],_题目)
}

"(,)
的#103""(解方程#102,描述结构#104)
描述结构#104"\"\"\"
最简形式:...

\"\"\"
+描述结构(,求解)->+操作(+描述结构,)...

->求解(,_式子0)...
->最简形式->[]{
    []{+[code]([想],最简形式)->[想](求解,_式子0)=>.(求解,)}:
        ->[],
        ->>+深入思考(_式子0,求解)->+的(+操作,+深入思考)
}...
->[]{
    []=>.(求解,_式子)->_式子=>+代入(_式子,_式子0)->+的(+操作,+代入)
}...
->[]{
    []{[]=>.(求解,)}:
        ->[],
        ->>+新算式(求解,_式子0)->+的(+操作,+新算式)
}



"(,)
的#105""(描述结构#104,最简形式#106)
最简形式#106"\"\"\"


\"\"\"
+最简形式(求解,_式子)...
->的(_式子,表达式)->的(表达式,=)->=(_x,)->_x(,)...

->+最简(,_式子)...
->[标题](_x,)->[==]([标题],求解)...
->[]{
    []&:=>_re\"[+\-\*/\^]\"(_x,),
    =>的(表达式,_x1)->_x1{[eq](_x,_x1)}=>[is](_x,_x1)
}




"(,)
的#107""(解方程#102,库#108)
库#108"
新算式:...
代入:...
深入思考:...

+[新建阅读窗口](,新算式)

"(,)
的#109""(库#108,新算式#110)
新算式#110"\"\"\"
P代码:...

\"\"\"
+新算式(求解,_式子)->+[del](,+新算式)...
->的(新算式,P代码)...

->.\"题目\"(+新算式,_题目)->回收站(_题目,)...
->+[python]\"list_fm=[]\"(Python,)->[]{
    []=>的(_题目,_公式)->_公式->公式(_公式,)=>+[标题](_公式,)...
        ->+[python]\"list_fm.append(fm_text)\"(Python,)->+[s]\"fm_text\"(+[python],+[标题])
}...

->的(_式子,表达式)->+[标题](_式子,)...
->+[python](Python,+[修改标题])->+[code](+[python],P代码)...
    ->+[s]\"fm_0\"(+[python],+[标题])->+[s]\"all_txt\"(+[python],_题目)...
->+的(_式子,+更新)->+更新(_式子,+A)->+[修改标题](,+A)...
->+的(回收站,+A)->+的(+A,+更新)...
    ->+的(_题目,+A)->+公式(+A,)->+的(+A,+公式)->+的(+A,+表达式)...

->的(表达式,起点)->起点(,_c)...
->+[修改内容]\"LaTeX\"(,记忆)->+[算式](_c,+[修改内容]#0)->+[修改内容]#0(,+A)...
->+[修改内容]\"表达式\"(,记忆)->+[算式](_c,+[修改内容]#1)->+[修改内容]#1(,+表达式)...

->+[生成公式结构](+表达式,+表达式)...
->+[转换公式结构](,+表达式)->+[更新公式起点](,+表达式)

"(,)
的#111""(新算式#110,P代码#112)
P代码#112"\"\"\"
+[P函数](,P代码)
print(list_fm[0])
记住\"Python\"

\"\"\"
import re

fm_0=list_fm[0]
result=re.match(\"\[(.+)\]\.\",fm_0)
order_type=False
if result!=None:
    order_type=True
    fm_txt0=result.group(1)
else:
    fm_txt0=fm_0

od_list=fm_txt0.split('.')
if od_list[-1].isnumeric():
    od_list[-1]=str(int(od_list[-1])+1)
    fm_txt=\".\".join(od_list)
    if order_type:
        fm_txt=\"[%s].\"%(fm_txt)

if fm_txt not in list_fm:
    fm_next=fm_txt
else:
    if order_type:
        fm_next=\"%s.1\"%(fm_txt0)
        fm_next=\"[%s].\"%(fm_next)
    else:
        fm_next=\"%s.1\"%(fm_txt)

ans=fm_next

# i=all_txt.find(\"%%%s\"%(fm_0))
# if i!=-1:
#     i+=len(fm_0)+1
# all_out=all_txt[0:i]+\"\n%\"+fm_next+all_txt[i:]


\"\"\"
print(fm_next,fm_txt,all_out)
print(all_txt.find(\"%[6].\"))
+[P函数](,P代码)

\"\"\""(,)
的#113""(库#108,代入#114)
代入#114"\"\"\"
最新:...

\"\"\"
+代入(_A,_B)->+[del](,+代入)...
->的(代入,最新)...

->[]{+[code]([想],最新)->[想](_A,_A)}->o(_A,_A1)...
->的(_A1,表达式)->的(表达式,=)->=(_ax,_ay)->_ax->_ay(,)...

->[]{+[code]([想],最新)->[想](_B,_B)}->o(_B,_B1)...

->的(_B1,表达式#b)->[]{
    []=>的(表达式#b,_b)->_b{[eq](_ax,_b)}=>+代入#a(+复制和式,_b)...
        ->+复制和式(,_ay)->+[投影虚构操作](表达式,+代入#a)...
        ->+[del](,+代入#a)->+[del](,+复制和式)
}...

->的(表达式#b,起点)->起点(,_b)...
->+[修改内容]\"LaTeX\"(,记忆)->+[算式](_b,+[修改内容]#0)->+[修改内容]#0(,_B1)...
->+[修改内容]\"表达式\"(,记忆)->+[算式](_b,+[修改内容]#1)->+[修改内容]#1(,表达式#b)...

->+[生成公式结构](表达式#b,表达式#b)...
->+[转换公式结构](,表达式#b)->+[更新公式起点](,表达式#b)

"(,)
的#115""(代入#114,最新#116)
最新#116"\"\"\"


\"\"\"
+最新(_B,_B1)...
->[]:
    ->更新(_B1,_B2)->+[code]([想],最新)->[想](_B,_B2),
    ->+[o](_B,_B1)



"(,)
的#117""(库#108,深入思考#118)
深入思考#118"\"\"\"
过程模板:...
自动推导:...
+[新建阅读窗口](,自动推导)

\"\"\"
+深入思考(_式子0,求解)->+[del](,+深入思考)...
->的(深入思考,自动推导)->的(深入思考,过程模板)...

->求解(_题目,_变量)->_题目->_变量->更新(_式子0,_式子1)...

->+的(_式子1,+推导过程)->+的(_题目,+推导过程)->+的(求解,+推导过程)...
    ->[m_text](过程模板,+推导过程)...
    ->+回收站(+推导过程,)->+的(+推导过程,+回收站)...
->+的(+推导过程,+[1].)...
    ->+公式(+[1].,)->+的(+[1].,+公式)->+的(+[1].,+表达式)...
->+思考(求解,+推导过程)->+[有](求解,+思考)...

->的(_式子1,表达式#1)->[m_text](_式子1,+[1].)->[m_text](表达式#1,+表达式)...
->+[生成公式结构](表达式#1,+表达式)...
->+[转换公式结构](,+表达式)->+[更新公式起点](,+表达式)...

->+[做](+推导过程,+[1].)->+[code](+[做],自动推导)...
    ->+[.](+[做],求解)->+[.](+[做],+思考)...

->[]{
    []:->后(求解,求解#1)->求解#1->做(求解#1,)->+[del](,做),
    ->[]
}...
->[]{
    []:->修改内容\"完成\"(,求解)->+[del](,修改内容),
    ->[]
}


"(,)
的#119""(深入思考#118,自动推导#120)
自动推导#120"\"\"\"
描述结构:...

\"\"\"
+自动推导(_题目,_式子)->+[del](,+自动推导)...
->的(自动推导,描述结构)...

->.(+自动推导,求解)->.(+自动推导,思考)...

->+变量(_式子,)->[m_text](求解,+变量)->+[del](,+变量)...
->+[code]([想],描述结构)->+[.]([想],+变量)->+[.]([想],思考)...
    ->[想](_题目,_式子)


"(,)
的#121""(自动推导#120,描述结构#122)
描述结构#122"\"\"\"


\"\"\"
+描述结构(_题目,_式子)->.(+描述结构,思考)->.(+描述结构,变量#0)...

->回收站(_题目,)...

->+观察(+解方程,变量#0)...
->[]{
    []:->的(思考,接下来)->接下来->+[.](+观察,接下来),
    ->[]
}...

->[描述结构](_题目,+观察)->o(+观察,求解)...
->[收集推导结构](_题目,求解)->结构([收集推导结构],)...

=>的(结构,_节点)->[]{[]->[新](,_节点)}=>[投影]\"实节点\"(,_节点)...
->+[有](思考,_节点)->[投影](,+[有])->+[有](回收站,_节点)->[投影](,+[有])


"(,)
的#123""(深入思考#118,过程模板#124)
过程模板#124"<!--
+[H函数](,推导过程)
-->

%[1].

<!--
+[H函数](,推导过程)
-->"(,)
的#125""(生成代码#6,保存#126)
保存#126"\"\"\"
描述结构:...
库:...
+[新建阅读窗口](,库)

保存:...

\"\"\"

+生成代码(求解,顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)->的(库,节点模板)...

->.(+生成代码,_代码)->+[文本结构_插入尾部](_代码,+节点)...
    ->+节点\"%输入量(输入) %输出量(输出) %求解量(求解)\"...
->+[code]([想],描述结构)->[想](求解,+节点)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作=>[说](,_操作)->[]{.(_操作,)}:
        ->的(库,_条目)->[eq](_条目,_操作)->+[做](求解,+节点)->+[code](+[做],_条目)...
            =>.#0(_操作,_A)=>+[.]#0(+[做],_A)...
            =>.(.#0,_B)=>+[.](+[.]#0,_B),
        ->>[]
}...
->+[做](求解,+节点)->+[code](+[做],节点模板)...
    ->+匹配(+节点,求解)->+的(+节点,+匹配)...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,顺序)...
        ->+[code](+[做],生成代码)->+[.](+[做],_代码),
    ->[]


"(,)
的#127""(召唤代码#4,描述结构#128)
描述结构#128"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#129""(描述结构#128,收集初值#130)
收集初值#130"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#131""(描述结构#128,收集顺序#132)
收集顺序#132"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#133""(收集顺序#132,整理流程2#134)
整理流程2#134"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#135""(整理流程2#134,入口顺序#136)
入口顺序#136"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]

"(,)
的#137""(收集顺序#132,整理流程#138)
整理流程#138"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#139""(收集顺序#132,保存#140)
保存#140"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#141""(描述结构#128,保存#142)
保存#142"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#143""(降临规则#2,设置变量#144)
设置变量#144"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#145""(设置变量#144,描述结构#146)
描述结构#146"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#147""(描述结构#146,P代码#148)
P代码#148"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距离\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#149""(降临规则#2,整理代码#150)
整理代码#150"\"\"\"


\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->+[删除结构](,_代码)

"(,)
的#151""(执行计算过程#0,召唤规则#152)
召唤规则#152"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"执行计算过程\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)

## end
#765, 186:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"执行计算过程"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码(_题目,_代码)->+的(操作,+召唤代码)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#767, 12324:
光路示意图转三维场景#0"

召唤规则:...
降临规则:...



"(,)
的#1""(光路示意图转三维场景#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"光路示意图转三维场景\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+场景转换(_题目,_代码)->+的(操作,+场景转换)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)
的#3""(光路示意图转三维场景#0,降临规则#4)
降临规则#4"
设置变量:...
场景转换:...
将'场景转换'的\"投影\"替换为\"场景转换\"
整理代码:...


"(,)
的#5""(降临规则#4,设置变量#6)
设置变量#6"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)...

->+[code]([想],描述结构)->[想](,_题目)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#7""(设置变量#6,描述结构#8)
描述结构#8"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[a-zA-Z_0-9]+\"...
        ->[]{[]=>变量名(,_re)->的(+操作,变量名)}...
    =>+变量名(,_re)->+的(+操作,+变量名)...
        ->[标题](_re,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#9""(描述结构#8,P代码#10)
P代码#10"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#11""(降临规则#4,整理代码#12)
整理代码#12"\"\"\"
内容:...
M模板:...

\"\"\"
+整理代码(_题目,_场景)->+[del](,+整理代码)...
->的(整理代码,M模板)->的(整理代码,内容)...

->的(_场景,光线代码)->+[标题](_场景,)...
->+[模板文本](M模板,光线代码)->+[显示](,光线代码)...
    ->+[.]\"过程\"(+[模板文本],光线代码)...
->+[模板文本](内容,_场景)->+[.](+[模板文本],+[标题])...

->+[M函数](,光线代码)...

->的(_场景,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_场景,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)

"(,)
的#13""(整理代码#12,M模板#14)
M模板#14"%{
+[M函数](,光线代码)
%}

physics_constant;
addpath('Matlab/space');
addpath('Matlab/optics');
%过程


"(,)
的#15""(整理代码#12,内容#16)
内容#16"+[显示三维场景]\"2\"(,%[标题])

光线代码:...
+[新建阅读窗口](,光线代码)
+[M函数](,光线代码)


+[显示三维场景]\"2\"(,%[标题])"(,)
的#17""(降临规则#4,场景转换#18)
场景转换#18"\"\"\"
描述结构:...
将'描述结构'的\"_三维\"替换为\"_二维\"
库:...
+[新建阅读窗口](,描述结构)
+[新建阅读窗口](,库)

\"\"\"
+场景转换(_二维,_三维)->+[del](,+场景转换)...
->的(场景转换,描述结构)->的(场景转换,库)...

->[]{
    []:->的(_三维,光线代码)->光线代码, ->+的(_三维,+光线代码)
}...

->+[code]([想],描述结构)->[想](_三维,_二维)->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(_图形,_物体)->_图形->_物体=>[说](,_操作)...
    ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_图形,_物体)->+[code](+[做],_条目)->+[.]\"场景\"(+[做],_三维)
}

"(,)
的#19""(场景转换#18,库#20)
库#20"

创建圆柱体2:...
将'创建圆柱体2'的\"创建圆柱体\"替换为\"创建圆柱体2\"
创建光线:...


"(,)
的#21""(库#20,创建圆柱体2#22)
创建圆柱体2#22"\"\"\"
M代码:...
+[新建阅读窗口](,M代码)

\"\"\"
+创建圆柱体2(_图形,_物体)->+[del](,+创建圆柱体2)...
->的(创建圆柱体2,M代码)...

->[]{
    []:->的(_物体,类型)->类型->+[修改内容]\"圆柱体\"(,类型),
    ->+的(_物体,+类型)->+类型\"圆柱体\"
}...
->的(_图形,长度#1)->的(_图形,宽度#1)...

->+[matlab](Matlab,)->+[code](+[matlab],M代码)...
->+[.]\"L1\"(+[matlab],长度#1)->+[.]\"W1\"(+[matlab],宽度#1)...

->[]{
    []:->在(_图形,空间点#1)->空间点#1->+[.]\"pt1\"(+[matlab],空间点#1),
    ->+[临时文本]\"0,0\"->+[.]\"pt1\"(+[matlab],+[临时文本])
}...
->[]{
    []:->朝向(_图形,方向#1)->方向#1->+[.]\"an1\"(+[matlab],方向#1),
    ->+[临时文本]\"0\"->+[.]\"an1\"(+[matlab],+[临时文本])
}...

->[]{
    []:->的(_物体,高度)->高度->+[o]\"H\"(+[matlab],高度),
    ->+的(_物体,+高度)->+[o]\"H\"(+[matlab],+高度)
}...
->[]{
    []:->的(_物体,半径)->半径->+[o]\"R\"(+[matlab],半径),
    ->+的(_物体,+半径)->+[o]\"R\"(+[matlab],+半径)
}...

->[]{
    []:->的(_物体,X)->X->+[o](+[matlab],X),
    ->+的(_物体,+X)->+[o](+[matlab],+X)
}...
->[]{
    []:->的(_物体,Y)->Y->+[o](+[matlab],Y),
    ->+的(_物体,+Y)->+[o](+[matlab],+Y)
}...
->[]{
    []:->的(_物体,Z)->Z->+[o](+[matlab],Z),
    ->+的(_物体,+Z)->+[o](+[matlab],+Z)
}...

->[]{
    []:->在(_物体,空间点)->空间点->+[o]\"pt\"(+[matlab],空间点),
    ->+在(_物体,+空间点)->+[o]\"pt\"(+[matlab],+空间点)...
        ->+的(_物体,+在)->+的(_物体,+空间点)
}...
->[]{
    []:->朝向(_物体,方向)->方向->+[o]\"an\"(+[matlab],方向),
    ->+朝向(_物体,+方向)->+[o]\"an\"(+[matlab],+方向)...
        ->+的(_物体,+朝向)->+的(_物体,+方向)
}




"(,)
的#23""(创建圆柱体2#22,M代码#24)
M代码#24"%{
+[M函数](,M代码)
Nini, 打开图形库(文件)
+[打开文件夹]\"Matlab/space\"
%}

addpath('Matlab/space')

an0=[0,0,0];
pt0=[0,0,0];

an=[90,90,0];
an(1)=an(1)+an1;

[Vx,Vy,Vz]=Euler_frame(an0(1),an0(2),an0(3));
pt_x=pt1(1);
pt_y=pt1(2);
pt=pt_x*Vx+pt_y*Vy+pt0;

R=L1/2;
H=W1;

N=100;

theta=linspace(0,360,N);
X=[R*cosd(theta);R*cosd(theta)]';
Y=[R*sind(theta);R*sind(theta)]';
Z=[zeros(1,N);zeros(1,N)+H]';

"(,)
的#25""(库#20,创建光线#26)
创建光线#26"\"\"\"
描述结构:...
生成代码:...

\"\"\"

+创建光线(_图形,_物体)->+[del](,+创建光线)...
->的(创建光线,生成代码)->的(创建光线,描述结构)...

->.\"场景\"(+创建光线,_场景)->的(_场景,光线代码)...
->+[code]([想],描述结构)->+[.]\"场景\"([想],_场景)->[想](_图形,_物体)...

->[]{
    []:->的(_物体,光路结构)->光路结构, ->+的(_物体,+光路结构)
}->的(_物体,光路结构)...

->[]{
    []:->的(_物体,X)->X, ->+的(_物体,+X)->+的(_物体,+Y)->+的(_物体,+Z)
}...

->的(_场景,命名空间)...
->[]{
    []=>经过(_物体,_元件)->_元件=>[投影](,经过)->+的(光路结构,经过)...
    ->[]{
        []:->然后(经过,)->[投影](,然后)->+的(光路结构,然后),
        ->[]
    }...
    ->[]{
        []:->然后(,经过)->[投影](,然后)->+的(光路结构,然后),
        ->[]
    }...

    ->[]:->[==]\"透射\"(,经过),
        ->+[做](命名空间,经过)->+[code](+[做],生成代码)->+[o](+[做],光线代码)
}

"(,)
的#27""(创建光线#26,描述结构#28)
描述结构#28"\"\"\"
追溯光路:...
光线追踪:...
经过类型:...

\"\"\"
+描述结构(_光路,_光线)->.\"场景\"(+描述结构,_场景)...

->追溯光路->[]{+[code]([想],追溯光路)->[想](,_光路)}...
->[]{
    []:->经过(_光路,_物体)->[]{[]=>然后(,经过)}...
        ->_物体->经过(_光路0,_物体)->[]{[]=>[is](_光路,_光路0)}...
            ->[]{+[code]([想],追溯光路)->[想](,_光路0)}...
        ->+[o](+描述结构,_光路0),

    ->+[o](+描述结构,_光路)
}->o(+描述结构,_光路0)...

->经过(_光路0,)->[]{[]=>然后(,经过)}...
->[]{+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->+[.]\"场景\"([想],_场景)...
    ->[想](经过,_光线)}...

->[]{
    []=>经过(_光线,_元件)->_元件=>+[code]([想],经过类型)->[想](_光线,经过)
}



"(,)
的#29""(描述结构#28,追溯光路#30)
追溯光路#30"\"\"\"


\"\"\"
+追溯光路(,_光路)...

->+收集=>经过(_光路,_物体)->_物体=>[]:
    ->上一个(+收集,)->+上一个(+收集,经过#1)->+然后(经过#1,经过)...
        ->+[上一个](+收集,经过),
    ->+[上一个](+收集,经过)"(,)
的#31""(描述结构#28,光线追踪#32)
光线追踪#32"\"\"\"
保存:...

\"\"\"
+光线追踪(经过,_光线)->.\"光路\"(+光线追踪,_光路)->.\"场景\"(+光线追踪,_场景)...

->经过(_光路0,_物体)->_光路0->_物体(,)...
->的(_场景,_元件)->[eq](_元件,_物体)->+经过(_光线,_元件)...
    ->+[o](+光线追踪,+经过)...

->光线追踪->[]{[is](_光路0,_光路)}:
->[]{
    []:->然后(经过,经过#2)->经过#2(,)...
        ->+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->+[.]\"场景\"([想],_场景)...
        ->[想](经过#2,_光线)->o([想],_经过)->+然后(+经过,_经过),
    ->[]
},
->>[]{
    []:->经过#1(_光路,_物体)->[]{[]=>然后(,经过#1)}...
        ->然后(经过#1,经过#2a)->经过#2a(,)...
        ->[]{+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->+[.]\"场景\"([想],_场景)...
        ->[想](经过#2a,_光线)->o([想],_经过)->+然后(+经过,_经过)},

    ->然后(经过,经过#2)->经过#2(,)...
        ->[]{+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->+[.]\"场景\"([想],_场景)...
        ->[想](经过#2,_光线)->o([想],_经过)->+然后(+经过,_经过)},

    ->[]
}

"(,)
的#33""(光线追踪#32,保存#34)
保存#34"\"\"\"


\"\"\"
+光线追踪(经过,_光线)->.\"光路\"(+光线追踪,_光路)...

->经过(_光路0,_物体)->_光路0->_物体->[说]\"!!!!\"(,_物体)...

->光线追踪->[]{[is](_光路0,_光路)}:
->[]{
    []:->然后(经过,经过#2)->经过#2(,)...
        ->+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->[想](经过#2,_光线),
    ->[]
},
->>[]{
    []:->经过#1(_光路,_物体)->[]{[]=>然后(,经过#1)}...
        ->然后(经过#1,经过#2a)->经过#2a(,)...
        ->[]{+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->[想](经过#2a,_光线)},

    ->然后(经过,经过#2)->经过#2(,)...
        ->[]{+[code]([想],光线追踪)->+[.]\"光路\"([想],_光路)->[想](经过#2,_光线)},

    ->[]
}

"(,)
的#35""(描述结构#28,经过类型#36)
经过类型#36"\"\"\"
P代码:...

\"\"\"
+经过类型(_光线,经过)...

->经过(,_物体)->在(_物体,空间点)->朝向(_物体,方向)->[]:
    ->然后#1(经过,经过#1)->经过#1(,_物体1)->在(_物体1,空间点#1)...
    ->然后#2(经过#2,经过)->经过#2(,_物体2)->在(_物体2,空间点#2)...
    ->+[code]([python],P代码)->+[.]\"pt0\"([python],空间点)->+[.]\"an0\"([python],方向)...
    ->+[.]\"pt1\"([python],空间点#1)->+[.]\"pt2\"([python],空间点#2)...
        ->[python](Python,经过),

    ->然后(,经过)->[m_text]\"到达\"(,经过),
    ->[m_text]\"出发\"(,经过)


"(,)
的#37""(经过类型#36,P代码#38)
P代码#38"\"\"\"
+[P函数](,P代码)

\"\"\"
import numpy as np

p10=np.array(pt1)-np.array(pt0)
p20=np.array(pt2)-np.array(pt0)
theta0=np.array(an0)/180*np.pi

fp=np.array([np.sin(theta0[1])*np.sin(theta0[0]),
-np.sin(theta0[1])*np.cos(theta0[0]),
np.cos(theta0[1])])

if np.dot(p10,fp)*np.dot(p20,fp)>0:
    ans=\"反射\"
else:
    ans=\"透射\"


"(,)
的#39""(创建光线#26,生成代码#40)
生成代码#40"\"\"\"
M模板:...
M模板1:...
M模板2:...

\"\"\"
+生成代码(命名空间,经过)->+[del](,+生成代码)...
->的(生成代码,M模板)->的(生成代码,M模板1)->的(生成代码,M模板2)...

->o(+生成代码,_M代码)...
->经过(_光线,_元件)->_光线->是(_光线,_光路)->_元件->是(_元件,_物体)...
->变量#0(,_光路)->的(命名空间,变量#0)->变量#1(,_物体)->的(命名空间,变量#1)...

->的(_光线,X)->的(_光线,Y)->的(_光线,Z)...
->的(_元件,半径)->在(_元件,空间点)->朝向(_元件,方向)...

->[]{
    []:->的(_M代码,输出)->输出(,X),
    ->+输出(,X)->+的(_M代码,+输出)->+[修改内容]\"%s_X\"(变量#0,+输出)...
        ->+输出(,Y)->+的(_M代码,+输出)->+[修改内容]\"%s_Y\"(变量#0,+输出)...
        ->+输出(,Z)->+的(_M代码,+输出)->+[修改内容]\"%s_Z\"(变量#0,+输出)
}...
->[]{
    []:->的(_M代码,输入)->输入(,半径),
    ->+输入(,半径)->+的(_M代码,+输入)->+[修改内容]\"%s_R\"(变量#1,+输入)...
    ->+输入(,空间点)->+的(_M代码,+输入)->+[修改内容]\"%s_pt\"(变量#1,+输入)...
    ->+输入(,方向)->+的(_M代码,+输入)->+[修改内容]\"%s_an\"(变量#1,+输入)
}...

->+[标题](_物体,)->+[模板文本](,+[增加内容2])->+[增加内容2](,_M代码)...
->+[.]\"B\"(+[模板文本],变量#0)->+[.]\"M\"(+[模板文本],变量#1)...
->+[.](+[模板文本],+[标题])...

->[]{
    []:->[==]\"反射\"(,经过)->+[code](+[模板文本],M模板),
    ->[==]\"到达\"(,经过)->+[code](+[模板文本],M模板2),
    ->+[code](+[模板文本],M模板1)
}


"(,)
的#41""(生成代码#40,M模板#42)
M模板#42"
% %[标题]
[x,y,z,kx,ky,kz]=Reflection_plane_3D(x,y,z,kx,ky,kz,%M_pt,%M_an);
%B_X(end+1,:)=x;
%B_Y(end+1,:)=y;
%B_Z(end+1,:)=z;
"(,)
的#43""(生成代码#40,M模板1#44)
M模板1#44"
% %[标题]
R=%M_R/2;
t=linspace(0,360,10);
x0=R*cosd(t);
y0=R*sind(t);
z0=0*t;
[x,y,z]=transform_3D(%M_pt,%M_an(1),%M_an(2),%M_an(3),x0,y0,z0);
%B_X=%M_pt(1)+x;
%B_Y=%M_pt(2)+y;
%B_Z=%M_pt(3)+z;

alpha=%M_an(1);
beta=%M_an(2);
kx=sind(beta)*sind(alpha);
ky=-sind(beta)*cosd(alpha);
kz=cosd(beta);
"(,)
的#45""(生成代码#40,M模板2#46)
M模板2#46"
% %[标题]
[x,y,z]=Plane_intersection(x,y,z,kx,ky,kz,%M_pt,%M_an);
%B_X(end+1,:)=x;
%B_Y(end+1,:)=y;
%B_Z(end+1,:)=z;

%B_X=%B_X';
%B_Y=%B_Y';
%B_Z=%B_Z';
"(,)
的#47""(场景转换#18,描述结构#48)
描述结构#48"\"\"\"
P代码:...
物体:...
光线:...
将条目\"物体\"复制为条目\"光线\"

\"\"\"

+描述结构(_场景,_二维)->+操作(+描述结构,)...

->[]{
    []=>的(_二维,_物体)->_物体{的(_物体,类型)->类型\"折线\"}...
        =>+[code]([想],光线)->+[.]\"操作\"([想],+操作)->[想](_场景,_物体)
}...

->[]{
    []=>的(_二维,_物体)->_物体{的(_物体,宽度)->宽度}=>[标题](_物体,)->+类型(,)...
        ->+[code]([python],P代码)->+[s]\"name_obj\"([python],[标题])...
            ->[python](Python,+类型)...
        ->+[code]([想],物体)->+[.]\"场景\"([想],_场景)->+[.]\"操作\"([想],+操作)...
            ->[想](+类型,_物体)
}


"(,)
的#49""(描述结构#48,P代码#50)
P代码#50"\"\"\"


\"\"\"

if name_obj==\"M\":
    ans=\"圆柱体\"
else:
    ans=\"圆柱体\"


"(,)
的#51""(描述结构#48,光线#52)
光线#52"\"\"\"
创建光线:...
将'创建光线'的\"物体\"替换为\"光线\"

\"\"\"
+光线(_场景,_图形)->.\"操作\"(+光线,操作)...

->创建光线->[]{
    []:->[]{+[code]([想],创建光线)->[想](_场景,_图形)->o([想],_光线)...
        ->+创建光线(_图形,_光线)->+的(操作,+创建光线)},

    ->[]
}



"(,)
的#53""(光线#52,创建光线#54)
创建光线#54"\"\"\"


\"\"\"
+创建光线(_场景,_图形)...

->[]{
    []:->的(_场景,_光线)->_光线->[eq](_光线,_图形)->+[o](+创建光线,_光线)...
        ->+是(_光线,_图形)->+的(_光线,+是)->[投影](,+的)->[投影](,+是),

    ->+的(_场景,+光线0)->[投影](,+的)->[投影](,+光线0)->+[o](+创建光线,+光线0)...
        ->[m_name](_图形,+光线0)->[m_text](_图形,+光线0)...
        ->+是(+光线0,_图形)->+的(+光线0,+是)->[投影](,+的)->[投影](,+是)
}


"(,)
的#55""(描述结构#48,物体#56)
物体#56"\"\"\"
创建物体:...

\"\"\"
+物体(类型,_图形)->.\"场景\"(+物体,_场景)->.\"操作\"(+物体,操作)...

->创建物体->[]{
    []:->的(_图形,宽度)->宽度->[]{
        []:->[==]\"立方体\"(,类型)...
            ->[]{+[code]([想],创建物体)->[想](_场景,_图形)->o([想],_物体)...
                ->+创建立方体(_图形,_物体)->+的(操作,+创建立方体)},
        ->[==]\"圆柱体\"(,类型)...
            ->[]{+[code]([想],创建物体)->[想](_场景,_图形)->o([想],_物体)...
                ->+创建圆柱体2(_图形,_物体)->+的(操作,+创建圆柱体2)}
    },

    ->的(_图形,半径)->半径->[]{
        []:->[==]\"圆柱体\"(,类型)...
            ->[]{+[code]([想],创建物体)->[想](_场景,_图形)->o([想],_物体)...
                ->+创建圆柱体(_图形,_物体)->+的(操作,+创建圆柱体)},
        ->[==]\"球体\"(,类型)...
            ->[]{+[code]([想],创建物体)->[想](_场景,_图形)->o([想],_物体)...
                ->+创建球体(_图形,_物体)->+的(操作,+创建球体)}
    },

    ->[]
}



"(,)
的#57""(物体#56,创建物体#58)
创建物体#58"\"\"\"


\"\"\"
+创建物体(_场景,_图形)...

->[]{
    []:->的(_场景,_物体)->_物体->[eq](_物体,_图形)->+[o](+创建物体,_物体)...
        ->+是(_物体,_图形)->+的(_物体,+是)->[投影](,+的)->[投影](,+是),

    ->+的(_场景,+物体0)->[投影](,+的)->[投影](,+物体0)->+[o](+创建物体,+物体0)...
        ->[m_name](_图形,+物体0)->[m_text](_图形,+物体0)...
        ->+是(+物体0,_图形)->+的(+物体0,+是)->[投影](,+的)->[投影](,+是)
}



"(,)

## end
#769, 190:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"光路示意图转三维场景"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+场景转换(_题目,_代码)->+的(操作,+场景转换)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#771, 9861:
推导结构转公式推导页面#0"

召唤规则:...
降临规则:...



"(,)
的#1""(推导结构转公式推导页面#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"推导结构转公式推导页面\"(,召唤星辰)...

->[]{
    []:->[is](_代码,临时文本)->临时文本(,)...
        ->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
        ->+召唤代码(_题目,_代码)->+的(操作,+召唤代码),
    
    ->+整理代码2(_题目,_代码)->+的(操作,+整理代码2)...
        ->+召唤代码2(_题目,_代码)->+的(操作,+召唤代码2)
}...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)
的#3""(推导结构转公式推导页面#0,降临规则#4)
降临规则#4"+[复制结构](,设置变量)

设置变量:...
召唤代码:...
整理代码:...

召唤代码2:...
整理代码2:...
将条目\"召唤代码\"复制为条目\"召唤代码2\"

+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#5""(降临规则#4,整理代码2#6)
整理代码2#6"\"\"\"
模板:...

\"\"\"
+整理代码2(_题目,_代码)->+[del](,+整理代码2)...
->的(整理代码2,模板)...

->的(_代码,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)...
->的(_代码,文本内容)->+[标题](_代码,)...
->的(_代码,未知量)->的(未知量,_变量)->_变量\"目标量\"->+[标题]#2(_变量,)...
->+[模板文本](模板,_代码)...
    ->+[.](+[模板文本],文本内容)->+[.](+[模板文本],+[标题])...
    ->+[.]\"目标量\"(+[模板文本],+[标题]#2)...
->+[删除结构](,文本内容)->+[del](,文本内容)...

->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->的(降临规则,整理代码2)...
    ->+[删除结构](,降临规则)->+[del](,降临规则)

"(,)
的#7""(整理代码2#6,模板#8)
模板#8"<!--
+[H函数](,%[标题])
-->

%文本内容


<!--
[1].:
式(1)转换为\"表达式\"

重新思考方程组的%目标量
描述解题思路

+[H函数](,%[标题])
-->"(,)
的#9""(降临规则#4,设置变量#10)
设置变量#10"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](_代码,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#11""(设置变量#10,描述结构#12)
描述结构#12"\"\"\"
P代码:...
P代码2:...

\"\"\"

+描述结构(_代码,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]#0\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)->[标题](_节点,)...
        ->[]{+[s]\"name\"([python],[标题])->+[code]([python],P代码2)...
        ->[python](Python,+变量名)}
}


"(,)
的#13""(描述结构#12,P代码#14)
P代码#14"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)
距离
a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#15""(描述结构#12,P代码2#16)
P代码2#16"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)
距离
a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)
\tau

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"\Delta E\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"\Delta \theta\"

elif \"角频率\" in name:
    type=\"\omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"a0\" in name:
    type=\"a\"
elif \"A0\" in name:
    type=\"A\"
elif \"展宽\" in name:
    type=\"\\Delta \\tau\"
elif \"腰宽\" in name:
    type=\"w\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"\theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"\\lambda\"
elif \"光谱宽度\" in name:
    type=\"\\Delta \\lambda\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#17""(降临规则#4,召唤代码2#18)
召唤代码2#18"\"\"\"
描述结构:...
生成公式:...
变量特征:...
记住\"Python\"
print(formula_txt_html_n)

\"\"\"
+召唤代码2(_题目,_代码)->+[del](,+召唤代码2)...
->的(召唤代码2,描述结构)->的(召唤代码2,生成公式)->的(召唤代码2,变量特征)...

->+[code]([想],描述结构)->[想](_题目,_代码)->公式([想],)...

->[]{
    []:->的(_代码,未知量)->未知量->+[删除结构](,未知量),
    ->+的(_代码,+未知量)
}...
->[]{
    []=>的(_代码,_公式)->_公式->公式(_公式,)=>+[删除表达式](,_公式)->+[del](,_公式)
}->+的(_代码,+文本内容)...

->+[python]\"formula_txt_html_n=0\"(Python,)...
->[]{
    []=>的(公式,求解)->求解=>+[做](求解,_代码)->+[code](+[做],生成公式)
}...
->+[做](+文本内容,_代码)->+[code](+[做],变量特征)

"(,)
的#19""(召唤代码2#18,描述结构#20)
描述结构#20"\"\"\"


\"\"\"

+描述结构(_题目,_代码)->+公式(+描述结构,)...

->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解)->求解{调用(求解,)}=>+的(+公式,求解)
}

"(,)
的#21""(召唤代码2#18,生成公式#22)
生成公式#22"\"\"\"
描述模板:...
P代码:...

赋值:...
更新式子:...

\"\"\"

+生成公式(求解,_代码)->+[del](,+生成公式)...
->的(生成公式,赋值)->的(生成公式,更新式子)...
->的(生成公式,描述模板)->的(生成公式,P代码)...

->的(_代码,文本内容)->调用(求解,_公式)->+[标题](_公式,)...
    ->+的(_代码,+式子)->+的(+式子,+表达式)->+公式(+式子,)->+的(+式子,+公式)...
->+[python](Python,+[修改标题])->+[code](+[python],P代码)->+[修改标题](,+式子)...

->[]{
    []:->调用(求解,赋值#0)->+[做](求解,+表达式)->+[code](+[做],赋值),

    ->+[召唤星辰](求解,+表达式)->+[.]\"代码类型\"(+表达式,+[临时文本])...
        ->+[临时文本]\"表达式\"
}...

->+[生成公式结构](+表达式,+表达式)...
->+[转换公式结构](,+表达式)->+[更新公式起点](,+表达式)...
->+[做](+表达式,+式子)->+[code](+[做],更新式子)...

->+[标题]#0(+式子,)->+[标题]#1(_公式,)...
->+[模板文本](描述模板,+[增加内容])->+[增加内容](,文本内容)...
->+[.]\"公式\"(+[模板文本],+[标题]#1)->+[.]\"内容\"(+[模板文本],+[标题]#0)

"(,)
的#23""(生成公式#22,赋值#24)
赋值#24"\"\"\"


\"\"\"
+赋值(求解,_代码)->+[del](,+赋值)...

->o(求解,_a)->变量#a(,_a)...
->.(求解,_b)->变量#b(,_b)...

->+[模板文本]\"%a=%b;
\"(,_代码)...
->+[.]\"a\"(+[模板文本],变量#a)...
->+[.]\"b\"(+[模板文本],变量#b)

"(,)
的#25""(生成公式#22,描述模板#26)
描述模板#26"%公式: 
%%内容
"(,)
的#27""(生成公式#22,P代码#28)
P代码#28"\"\"\"


\"\"\"

formula_txt_html_n+=1
ans=\"[%d].\"%(formula_txt_html_n)

"(,)
的#29""(生成公式#22,更新式子#30)
更新式子#30"\"\"\"


\"\"\"
+更新式子(表达式,_式子)->+[del](,+更新式子)...

->的(表达式,起点)->起点(,_c)...
->+[修改内容]\"LaTeX\"(,记忆)->+[算式](_c,+[修改内容]#0)->+[修改内容]#0(,_式子)

"(,)
的#31""(召唤代码2#18,变量特征#32)
变量特征#32"\"\"\"
模板:...

\"\"\"
+变量特征(文本内容,_代码)->+[del](,+变量特征)...
->的(变量特征,模板)...

->的(_代码,未知量)->的(_代码,命名空间)->[m_text](模板,+变量描述)...

->+[文本结构_插入](+变量描述,+给定变量)...
->+[文本结构_插入](+变量描述,+待定变量)...
->+[文本结构_插入](+变量描述,+目标变量)...
->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x=>+节点->+[修改内容]\"\(%s\)\"(变量,+节点):
        ->[]{[]=>o(,_x)}->+[文本结构_插入尾部]\", \"(+给定变量,+节点),

        ->[]{求解(,_x)=>然后(求解,)}...
            ->+[文本结构_插入尾部]\", \"(+目标变量,+节点)...
            ->+[文本结构_插入尾部]\", \"(+待定变量,+节点)...
        ->+变量\"目标量\"->+的(未知量,+变量)->[]{
            +[修改内容](变量,+[修改标题])->+[修改标题](,+变量)
        },

        ->+[文本结构_插入尾部]\", \"(+待定变量,+节点)...
        ->+变量->+的(未知量,+变量)->[]{
            +[修改内容](变量,+[修改标题])->+[修改标题](,+变量)
        }
}...

->+[结构转文本](+变量描述,+[增加内容])->+[增加内容](,文本内容)...
->+[删除结构](,+变量描述)->+[del](,+变量描述)

"(,)
的#33""(变量特征#32,模板#34)
模板#34"
其中, %给定变量 的数值是一开始给定的. 而, %目标变量 则是要求解的目标变量<br>
%待定变量 是需要被求解的中间变量


"(,)
的#35""(降临规则#4,整理代码#36)
整理代码#36"\"\"\"


\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...

->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->的(降临规则,整理代码)...
    ->+[删除结构](,降临规则)->+[del](,降临规则)

"(,)
的#37""(降临规则#4,召唤代码#38)
召唤代码#38"\"\"\"
描述结构:...
生成公式:...
变量特征:...

\"\"\"
+召唤代码(_题目,_代码)->+[del](,+召唤代码)...
->的(召唤代码,描述结构)->的(召唤代码,生成公式)->的(召唤代码,变量特征)...

->+[code]([想],描述结构)->[想](_题目,_代码)->公式([想],)...

->+[修改内容]\"调用公式:
\"(,_代码)...
->[]{
    []=>的(公式,求解)->求解=>+[做](求解,_代码)->+[code](+[做],生成公式)
}...
->+[做](,_代码)->+[code](+[做],变量特征)

"(,)
的#39""(召唤代码#38,变量特征#40)
变量特征#40"\"\"\"
模板:...

\"\"\"
+变量特征(,_代码)->+[del](,+变量特征)...
->的(变量特征,模板)...

->的(_代码,命名空间)->[m_text](模板,+变量描述)...
->+[文本结构_插入](+变量描述,+给定变量)...
->+[文本结构_插入](+变量描述,+待定变量)...
->+[文本结构_插入](+变量描述,+目标变量)...
->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x=>+节点->[m_text](变量,+节点):
        ->[]{[]=>o(,_x)}->+[文本结构_插入尾部]\", \"(+给定变量,+节点),
        ->[]{求解(,_x)=>然后(求解,)}->+[文本结构_插入尾部]\", \"(+目标变量,+节点),
        ->+[文本结构_插入尾部]\", \"(+待定变量,+节点)
}...

->+[结构转文本](+变量描述,+[增加内容])->+[增加内容](,_代码)...
->+[删除结构](,+变量描述)->+[del](,+变量描述)

"(,)
的#41""(变量特征#40,模板#42)
模板#42"
其中, %给定变量 的数值是一开始给定的. %待定变量 是需要被求解的中间变量. 
而, %目标变量 则是要求解的目标变量"(,)
的#43""(召唤代码#38,生成公式#44)
生成公式#44"\"\"\"
描述模板:...
赋值:...

\"\"\"

+生成公式(求解,_代码)->+[del](,+生成公式)...
->的(生成公式,赋值)->的(生成公式,描述模板)...

->+代码->调用(求解,_公式)->+[标题](_公式,)...
->[]{
    []:->调用(求解,赋值#0)->+[做](求解,+代码)->+[code](+[做],赋值),

    ->+[召唤星辰](求解,+代码)->+[.]\"代码类型\"(+代码,+[临时文本])...
        ->+[临时文本]\"表达式\"
}...

->[]{
    []:->[is](_代码,临时文本)->临时文本(,)...
        ->+[模板文本](描述模板,+[增加内容])->+[增加内容](,_代码)...
        ->+[.]\"公式\"(+[模板文本],+[标题])->+[.]\"内容\"(+[模板文本],+代码),
    ->[]
}->+[del](,+代码)


"(,)
的#45""(生成公式#44,描述模板#46)
描述模板#46"%公式: %内容"(,)
的#47""(生成公式#44,赋值#48)
赋值#48"\"\"\"


\"\"\"
+赋值(求解,_代码)->+[del](,+赋值)...

->o(求解,_a)->变量#a(,_a)...
->.(求解,_b)->变量#b(,_b)...

->+[模板文本]\"%a=%b;
\"(,_代码)...
->+[.]\"a\"(+[模板文本],变量#a)...
->+[.]\"b\"(+[模板文本],变量#b)

"(,)
的#49""(召唤代码#38,描述结构#50)
描述结构#50"\"\"\"


\"\"\"

+描述结构(_题目,_代码)->+公式(+描述结构,)...

->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解)->求解{调用(求解,)}=>+的(+公式,求解)
}

"(,)

## end
#773, 338:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"推导结构转公式推导页面"(,召唤星辰)...

->[]{
    []:->[is](_代码,临时文本)->临时文本(,)...
        ->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
        ->+召唤代码(_题目,_代码)->+的(操作,+召唤代码),
    
    ->+整理代码2(_题目,_代码)->+的(操作,+整理代码2)...
        ->+召唤代码2(_题目,_代码)->+的(操作,+召唤代码2)
}...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
#775, 10038:
解题思路转题目答案#0"

召唤规则:...
降临规则:...



"(,)
的#1""(解题思路转题目答案#0,召唤规则#2)
召唤规则#2"\"\"\"

\"\"\"

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]\"解题思路转题目答案\"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码3(_题目,_代码)->+的(操作,+召唤代码3)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)


"(,)
的#3""(解题思路转题目答案#0,降临规则#4)
降临规则#4"+[复制结构](,设置变量)

设置变量:...

召唤代码3:...
将条目\"召唤代码2\"复制为条目\"召唤代码3\"

整理代码:...
+[新建阅读窗口](,设置变量)
将'设置变量'的\"_场景\"替换为\"_题目\"


"(,)
的#5""(降临规则#4,整理代码#6)
整理代码#6"\"\"\"
模板:...

\"\"\"
+整理代码(_题目,_代码)->+[del](,+整理代码)...
->的(整理代码,模板)->+[标题](_代码,)...
->+[模板文本](模板,_代码)->+[.](+[模板文本],+[标题])...
    ->+[结构转文本](_代码,_代码)...

->的(_代码,求解顺序)->+[删除结构](,求解顺序)->+[del](,求解顺序)...
->的(_代码,命名空间)->+[删除结构](,命名空间)->+[del](,命名空间)...

->的(_代码,召唤规则)->+[删除结构](,召唤规则)->+[del](,召唤规则)...
->的(_代码,降临规则)->+[删除结构](,降临规则)->+[del](,降临规则)
"(,)
的#7""(整理代码#6,模板#8)
模板#8"<!--
+[H函数](,%[标题])
-->

解:<br>
%s


<!--
+[H函数](,%[标题])
-->"(,)
的#9""(降临规则#4,设置变量#10)
设置变量#10"\"\"\"
描述结构:...

\"\"\"

+设置变量(_题目,_代码)->+[del](,+设置变量)...
->的(设置变量,描述结构)...

->[]{
    []:->的(_代码,命名空间)->命名空间=>的(命名空间,_名字)=>+[del](,_名字),
    ->+的(_代码,+命名空间)
}->的(_代码,命名空间)->.\"结构\"(_代码,_结构)...

->+[code]([想],描述结构)->[想](,_结构)...

->操作([想],)...
->[]{
    []=>的(操作,_操作)->_操作(,_物体)->_物体(,)...
    =>+的(命名空间,+变量)->+变量(,_物体)->[m_text](_操作,+变量)
}


"(,)
的#11""(设置变量#10,描述结构#12)
描述结构#12"\"\"\"
P代码:...

\"\"\"

+描述结构(,_结构)->+操作(+描述结构,)...
->的(描述结构,P代码)...

->[python]\"var_num={}
state=True\"(Python,)...

->[]{
    []=>的(_结构,_re)->_re\"[\.o]|求解\"(,_节点)...
        ->[]{[]=>变量名(,_节点)->的(+操作,变量名)}...
    =>+变量名(,_节点)->+的(+操作,+变量名)...
        ->[标题](_节点,)->+[s]\"name\"([python]#0,[标题])...
        ->+[code]([python]#0,P代码)->[python]#0(Python,+变量名)
}


"(,)
的#13""(描述结构#12,P代码#14)
P代码#14"\"\"\"
记住\"Python\"
Nini, 打开公式分析器(文件)

a=re.search(\"r\",\"ere\")
print(a)
print(re.match(\"[a-zA-Z_0-9]+\",\"212\")==None)

\"\"\"

import re

print(name,var_num)

type=\"varb\"
if \"IP\" in name:
    type=\"IP\"
elif \"能量\" in name:
    type=\"E\"
elif \"能谱宽度\" in name:
    type=\"DE\"
elif \"能谱仪\" in name:
    type=\"SP\"
elif \"能谱\" in name:
    type=\"S_E\"
elif \"发散度\" in name:
    type=\"Dtheta\"

elif \"角频率\" in name:
    type=\"omega\"
elif \"波数\" in name:
    type=\"k\"
elif \"光强\" in name:
    type=\"I\"
elif \"场强\" in name:
    type=\"E_field\"
elif \"功率\" in name:
    type=\"P\"
elif \"展宽\" in name:
    type=\"Dtau\"
elif \"腰宽\" in name:
    type=\"w0\"
elif \"密度\" in name:
    type=\"n\"

elif \"点\" in name:
    type=\"pt\"
elif \"x坐标\" in name:
    type=\"x\"
elif \"y坐标\" in name:
    type=\"y\"
elif \"z坐标\" in name:
    type=\"z\"
elif \"角\" in name:
    type=\"theta\"
elif \"方向\" in name:
    type=\"an\"
elif \"距离\" in name:
    type=\"L\"

elif \"波长\" in name:
    type=\"lm\"
elif \"光谱宽度\" in name:
    type=\"dlm\"
elif \"光谱\" in name:
    type=\"S\"
elif \"波包形状\" in name:
    type=\"f\"
elif \"光栅常数\" in name:
    type=\"G\"
elif re.match(\"[a-zA-Z_0-9]+\",name)!=None:
    type=name


n_v=var_num.get(type,0)+1
var_num.update({type:n_v})

ans=\"%s_%d\"%(type,n_v)
"(,)
的#15""(降临规则#4,召唤代码3#16)
召唤代码3#16"\"\"\"
描述结构:...
生成代码:...

\"\"\"
+召唤代码3(_题目,_代码)->+[del](,+召唤代码3)...
->的(召唤代码3,描述结构)->的(召唤代码3,生成代码)...

->[]{
    []:->的(_代码,求解顺序)->求解顺序=>的(求解顺序,_节点)=>+[del](,_节点),
    ->+的(_代码,+求解顺序)
}->的(_代码,求解顺序#0)...
->[]{
    []:->的(_代码,入口)->入口=>的(入口,_节点)=>+[del](,的),
    ->+的(_代码,+入口)
}->的(_代码,入口#0)...

->+[code]([想],描述结构)->[想](_题目,_代码)...
->顺序([想],)->初值([想],)->入口([想],)...

->[]{
    []=>的(顺序,后)->后(求解#1,求解#2)...
        =>求解#1->求解#2->+的(求解顺序#0,+后)->+后(求解#1,求解#2)
}...
->[]{
    []=>的(入口,_入口)->_入口=>+的(入口#0,_入口)
}...

->头部(顺序,求解)...
->+[做](求解,求解顺序#0)->+[code](+[做],生成代码)->+[.]\"代码\"(+[做],_代码)...
->+[.]\"题目\"(记忆,_题目)->+[.]\"题目\"(+[做],_题目)...
->+[del](,入口#0)


"(,)
的#17""(召唤代码3#16,描述结构#18)
描述结构#18"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->+计算节点->+入口(+描述结构,)->.\"结构\"(_代码,_结构)...
->[]{
    []=>的(_结构,求解#0)->求解#0{[]=>然后(求解#0,)}...
        =>+[code]([想]#1,收集顺序)->+[.]([想]#1,求解#0)...
        ->+[.]([想]#1,+入口)->+[.]([想]#1,+计算节点)->[想]#1(+顺序,_结构)
}...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#19""(描述结构#18,保存#20)
保存#20"\"\"\"
收集顺序:...
收集初值:...
+[新建阅读窗口](,收集顺序)

保存:...

\"\"\"

+描述结构(_题目,_代码)->+顺序(+描述结构,)->+初值(+描述结构,)...
->的(描述结构,收集顺序)->的(描述结构,收集初值)...

->.\"结构\"(_代码,_结构)...
    ->+[code]([想]#1,收集顺序)->[想]#1(+顺序,_结构)...
->的(_代码,命名空间)...
    ->+[code]([想]#2,收集初值)->[想]#2(+初值,命名空间)



"(,)
的#21""(描述结构#18,收集顺序#22)
收集顺序#22"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...
->.(+收集顺序,入口)->.(+收集顺序,计算节点)...
->.(+收集顺序,求解#0)...

->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#23""(收集顺序#22,保存#24)
保存#24"\"\"\"
整理流程:...
整理流程2:...

保存:...

\"\"\"

+收集顺序(顺序,_结构)...
->的(收集顺序,整理流程)->的(收集顺序,整理流程2)...

->+入口->+计算节点->的(_结构,求解#0)->[]{[]=>然后(求解#0,)}...
->[python]\"state=True
n_cal_pt=0\"(Python,)...
->+[code]([想],整理流程)->+[.]([想],+计算节点)->[想](+入口,求解#0)...
->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(+入口,+计算节点)...

->[]{
    []=>的(顺序,求解)->求解=>[]:
        ->下一个(+收集顺序,)->+下一个(+收集顺序,求解#A)->+[下一个](+收集顺序,求解)...
            ->+后(求解#A,求解)->+的(顺序,+后),
        ->+[下一个](+收集顺序,求解)->+头部(顺序,求解)
}


"(,)
的#25""(收集顺序#22,整理流程#26)
整理流程#26"\"\"\"
收集所有的入口. 入口是指前面没有(被未收集了的)求解的求解
计算节点会收集所有的求解

\"\"\"
+整理流程(入口,_求解)->.(+整理流程,计算节点)...
->整理流程(,)...

->+的(计算节点,_求解)...
->[]{
    []{然后(_求解1,_求解)->_求解1=>的(计算节点,_求解1)}:
    ->>+的(入口,_求解)->[python]\"state=True
n_cal_pt+=1\"(Python,),
    =>然后(_求解1,_求解)->_求解1{[]=>的(计算节点,_求解1)}...
        =>+[code]([想],整理流程)->+[.]([想],计算节点)->[想](入口,_求解1)
}

"(,)
的#27""(收集顺序#22,整理流程2#28)
整理流程2#28"\"\"\"
入口顺序:...

按顺序收集入口节点. 如果该入口节点的前提没有被收集的话, 那么就先不收集这一组链
否则以这个节点为入口, 收集其之后的推导结果(入口顺序)

\"\"\"

+整理流程2(入口,计算节点)->.(+整理流程2,顺序)...

->整理流程2:

->的(入口,_求解)->_求解{[]=>的(顺序,_求解)}...
    ->[]{
        []{[]=>然后(_求解2,_求解)->_求解2&:
            ->的(计算节点,_求解2),=>的(顺序,_求解2)}...
        ->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
            ->[想](_求解,计算节点)...
        ->+[code]([想]#2,整理流程2)->+[.]([想]#2,顺序)->[想]#2(入口,计算节点)
    },

->[]



"(,)
的#29""(整理流程2#28,入口顺序#30)
入口顺序#30"\"\"\"
收集该步骤的下一个步骤. 对下一个步骤有两点要求:
1.该步骤的前提条件应该被完全满足; 
2.该步骤不应该是入口节点中的步骤

\"\"\"

+入口顺序(_求解,计算节点)->.\"顺序\"(+入口顺序,顺序)->.\"入口\"(+入口顺序,入口)...
->入口顺序(,)...

->+的(顺序,_求解):

->然后(_求解,_求解2)->_求解2->[]{
        []&:=>然后(_求解1,_求解2)->_求解1=>的(顺序,_求解1),
        =>的(入口,_求解2)
    }->+[code]([想],入口顺序)->+[.]\"顺序\"([想],顺序)->+[.]\"入口\"([想],入口)...
        ->[想](_求解2,计算节点),

->[]

"(,)
的#31""(描述结构#18,收集初值#32)
收集初值#32"\"\"\"


\"\"\"

+收集初值(初值,命名空间)...

->[]{
    []=>的(命名空间,变量)->变量(,_x)->_x{[]=>o(,_x)}=>+的(初值,变量)
}

"(,)
的#33""(召唤代码3#16,生成代码#34)
生成代码#34"\"\"\"
描述结构:...
库:...

\"\"\"

+生成代码(求解,求解顺序)->+[del](,+生成代码)...
->的(生成代码,描述结构)->的(生成代码,库)...

->.\"代码\"(+生成代码,_代码)->.\"题目\"(+生成代码,_题目)...
->+[code]([想],描述结构)->[想](,求解)...

->操作([想],)->[]{
    []=>的(操作,_操作)->_操作(_主语,_宾语)->_主语->_宾语=>[说](,_操作)...
        ->的(库,_条目)->_条目->[eq](_条目,_操作)...
        ->+[做](_主语,_宾语)->+[code](+[做],_条目)...
            ->+[.]\"题目\"(+[做],_题目)->+[.]\"代码\"(+[做],_代码)
}...

->[]:
    ->后(求解,求解#1)->求解#1->+[做](求解#1,求解顺序)...
        ->+[code](+[做],生成代码)->+[.]\"代码\"(+[做],_代码)->+[.]\"题目\"(+[做],_题目),
    ->[]


"(,)
的#35""(生成代码#34,描述结构#36)
描述结构#36"\"\"\"
最新:...

\"\"\"
+描述结构(,求解)->+操作(+描述结构,)...

->求解(,_式子)->_式子(,)...
->[]{+[code]([想],最新)->[想](_式子,_式子)}->o(_式子,_式子1)...

->[]{
    []:->[is](_式子,_式子1), ->完成描述(求解,),
    ->.(求解,)->+描述代入(求解,_式子1)->+的(+操作,+描述代入)=>完成代入(求解,),
    ->思考(求解,)->+描述求解(求解,_式子1)->+的(+操作,+描述求解),
    ->[==]\"完成\"(,求解)->+完成描述(求解,_式子1)->+的(+操作,+完成描述),
    ->[]
}



"(,)
的#37""(描述结构#36,最新#38)
最新#38"\"\"\"


\"\"\"
+最新(_B,_B1)...
->[]:
    ->更新(_B1,_B2)->+[code]([想],最新)->[想](_B,_B2),
    ->+[o](_B,_B1)



"(,)
的#39""(生成代码#34,库#40)
库#40"

描述代入:...
描述求解:...
完成描述:...
将条目\"描述代入\"复制为条目\"完成描述\"



"(,)
的#41""(库#40,描述求解#42)
描述求解#42"\"\"\"
模板:...
P代码:...

\"\"\"
+描述求解(求解,_式子)->+[del](,+描述求解)...
->的(描述求解,P代码)->的(描述求解,模板)...

->.\"代码\"(+描述求解,_代码)...
->求解(,_式子0)->的(_式子,表达式)->+[标题](_式子,)...
->Python->[]{
    []:->观察中(求解,_式子1)->_式子1->的(_式子1,表达式#1)...
        ->+[修改内容](_式子,_式子1)->+[修改内容](表达式,表达式#1),

    ->+的(_代码,+式子)->+[python](Python,+[修改标题])->+[修改标题](,+式子)...
        ->+[code](+[python],P代码)->+[s]\"f_name\"(+[python],+[标题])...
        ->+观察中(求解,+式子)->+的(_代码,+观察中)...
        ->+公式(+式子,)->+的(+式子,+公式)->+的(+式子,+表达式)...
        ->[m_text](_式子,+式子)->[m_text](表达式,+表达式)...


    ->+[文本结构_插入尾部](_代码,+节点)->[m_text](模板,+节点)...
        ->+[文本结构_插入](+节点,+式子0)->+[文本结构_插入](+节点,+式子1)......
        ->+[标题](_式子0,)->+[修改内容](+[标题],+式子0)...
        ->+[标题](+式子,)->+[修改内容](+[标题],+式子1)
}



"(,)
的#43""(描述求解#42,P代码#44)
P代码#44"\"\"\"
记住\"Python\"
f_txt=\"[1].\"
print(f_txt)
+[P函数](,P代码)

\"\"\"
import re

result=re.match(\"\[(.+)\]\.\",f_name)
n_txt=result.group(1)+\".1\"
ans=\"[%s].\"%(n_txt)
# print(ans)

"(,)
的#45""(描述求解#42,模板#46)
模板#46"将%式子0调整为,
%%式子1
"(,)
的#47""(库#40,完成描述#48)
完成描述#48"\"\"\"


\"\"\"
+完成描述(求解,_式子)->+[del](,+完成描述)...

->.\"代码\"(+完成描述,_代码)...
->[]{
    []:->观察中(求解,_式子1)->_式子1->+[修改标题]\"完成描述\"(,观察中),
    ->完成代入(求解,_式子2)->_式子2->+完成描述(求解,_式子2)->+的(_代码,+完成描述),
    ->[]
}
"(,)
的#49""(库#40,描述代入#50)
描述代入#50"\"\"\"
模板:...

\"\"\"
+描述代入(求解,_式子)->+[del](,+描述代入)...
->的(描述代入,模板)...

->求解(,_式子0)...
->.\"代码\"(+描述代入,_代码)->+完成代入(求解,+式子)->+的(_代码,+完成代入)...
    ->的(_式子,表达式)...

->+的(_代码,+式子)...
    ->[m_name](_式子,+式子)->[m_text](_式子,+式子)...
->+公式(+式子,)->+的(+式子,+公式)->+的(+式子,+表达式)...
    ->[m_text](表达式,+表达式)...

->+[文本结构_插入尾部](_代码,+节点)->[m_text](模板,+节点)...
->+[文本结构_插入](+节点,+式子0)->+[标题](_式子0,)->+[修改内容](+[标题],+式子0)...
->+[文本结构_插入](+节点,+式子1)->+[标题](+式子,)->+[修改内容](+[标题],+式子1)...

->+[文本结构_插入](+节点,+式子s)...
->[]{
    []=>.(求解,_式子1)->_式子1=>+[文本结构_插入尾部]\", \"(+式子s,+节点#s)...
        ->+[标题](_式子1,)->+[修改内容](+[标题],+节点#s)
}


"(,)
的#51""(描述代入#50,模板#52)
模板#52"将%式子s代入到%式子0, 于是我们得到了,
%%式子1
"(,)

## end
#777, 191:
"""

"""

+召唤规则(_题目,召唤星辰)->.(+召唤规则,操作)...
->召唤星辰(,_代码)...

->[==]"解题思路转题目答案"(,召唤星辰)...

->+整理代码(_题目,_代码)->+的(操作,+整理代码)...
->+召唤代码3(_题目,_代码)->+的(操作,+召唤代码3)...
->+设置变量(_题目,_代码)->+的(操作,+设置变量)



## end
### 结束