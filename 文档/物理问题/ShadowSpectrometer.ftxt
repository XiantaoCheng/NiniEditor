### 节点
地址, 的, ShadowSpectrometer, 目录, 的, 的, 节点数目统计, 的, GEM, 的, 高斯展开, html, 的, [1]., 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 的, [8]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, M函数, 的, 测试三角函数, 的, 参考, 的, 原理验证, html, 的, 模拟场景, source, 的, magnet, 的, fiducial, 的, IP, 的, 空间点, 在, Z, 的, Y, 的, X, 的, 空间点, 在, 高度, 的, 半径, 的, 类型, 的, Z, 的, Y, 的, X, 的, 空间点, 在, 高度, 的, 宽度, 的, 长度, 的, 类型, 的, 空间点, 在, 方向, 朝向, 方向, 朝向, Z, 的, Y, 的, X, 的, 长度, 的, 类型, 的, 的, 的, 材料, 的, 新建主语, 的, 的, 输出地址, 的, 新建主语, 新建主语, 的, G代码, 地址, 的, 新建主语, 方向, 朝向, 新建主语, 新建主语, 的, 分析数据, 的, 发散度, 的, Gaussian_expansion, M函数, 的, 地址, 的, 测试, Gaussian_expansion, 的, 记忆, Gaussian_expansion, 的, 保存, 的, 散射图, 图片, 的, 影子图, 图片, 的, [1]., 的, [2]., 表达式, 的, 公式, 的, [3]., 表达式, 的, 公式, 表达式, 的, 公式, 的, f, 的, g, 表达式, 的, 公式, 的, 的, 能谱, 的, 新建主语, 新建主语, 新建主语, 手, 的, [4]., 表达式, 的, 公式, 的, 测试算法, M函数, 的, 获取数据, 的, 误差分布图, 的, 梯度下降法, 的, 测试参数, 的, 获取散射参数, 手, 新建主语, 的, 参数对比, 的, 的, 能量范围, 的, 新建主语, 新建主语, 新建主语, 的, 的, 能量, 的, 新建主语, 的, 的, 能谱宽度, 的, 新建主语, 的, 的, 获取散射参数, M函数, 的, Fe, 的, W, 的, Al, 的, 实验数据, html, 的, LWFA8数据, 的, 表1, 表格, 的, 数据列表, 的, 发散度变化, 的, 分析12009能谱, 的, [1]., 表达式, 的, 公式, 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, fiducial方案, 的, 辐射方案, 的, 场景1, 手, source, 的, plate, 的, magnet, 的, IP, 的, 空间点, 在, 空间点, 在, 空间点, 在, Z, 的, Y, 的, X, 的, 高度, 的, 宽度, 的, 长度, 的, 类型, 的, Z, 的, Y, 的, X, 的, 高度, 的, 宽度, 的, 长度, 的, 类型, 的, 方向, 朝向, Z, 的, Y, 的, X, 的, 长度, 的, 类型, 的, 方向, 朝向, 的, 磁场强度, 的, 能量, 的, G代码, 方向, 朝向, 地址, 的, 电子源代码, 的, 代码, 的, 输出地址, 的, 分析数据, 的, 保存, 的, 实验数据, 的, 模拟能谱, 的, IP图像, 空间点, 在, Z, 的, Y, 的, X, 的, 高度, 的, 宽度, 的, 长度, 的, 类型, 的, 方向, 朝向, 的, 材料, 的, 图像对比, 的, 的, 散射角对比, 的, 能谱重建, 的, 笔记, 的, 参考1, 的, 参考2, 打开网页, 的, Sn散射系数, 的, 部分能谱重建, 的, 测量散射系数, 
### 关联
#, 2#0, #, #, 3#2, 3#6, #, 2#8, #, 2#10, #, 10#, 10#13, #, 10#15, #, 10#17, #, 10#19, #, #, 13#20, 13#, #, 15#23, 15#, #, 17#26, 17#, 10#30, #, 10#32, #, #, 19#33, 19#, #, 30#36, 30#, #, 32#39, 32#, 10#43, #, 10#45, #, #, 43#46, 43#, #, 45#49, 45#, 10#53, #, 53#, 53#56, #, 10#58, #, 2#60, #, 60#, 60#63, #, #, 63#64, #, 63#66, #, 63#68, #, 63#70, #, 66#72, #, 68#74, #, 68#76, #, 68#78, #, 68#80, #, 68#82, #, 68#84, #, 68#86, #, 70#88, #, 70#90, #, 70#92, #, 70#94, #, 70#96, #, 70#98, #, 70#100, #, 70#102, #, 64#104, #, 70#106, #, 64#108, #, 64#110, #, 64#112, #, 64#114, #, 64#116, #, 64#118, 63#121, 68#122, #, 63#122, 63#, 63#126, 70#127, #, 63#127, 63#, 63#, 63#132, #, #, 63#133, 63#, #, 68#136, 63#, 63#, 63#141, #, 141#143, #, 53#145, #, 145#, 145#148, #, 145#150, #, #145, 153#151, 3#, #, 53#156, #, 60#158, #, 158#, 60#161, #, 161#, 60#164, #, 60#166, #, #, 164#167, 164#, 60#171, #, #, 166#172, 166#, #, 171#175, 171#, 63#179, #, 63#181, #, #, 179#182, 179#, 63#186, 64#187, #179, 63#187, 63#, 63#, 63#, #60, 60#194, #, #, 194#195, 194#, 60#199, #, 199#, 199#202, #, 199#204, #, 199#206, #, 63#208, #, 208#210, #, #63, 63#, 208#214, #, 63#216, 64#217, #, 63#217, 63#, 63#, 63#, 63#223, 64#224, #, 63#224, 63#, 63#228, 64#229, #, 63#229, 63#, 132#133, 60#234, #, 234#, 234#237, #, 234#239, #, 234#241, #, 2#243, #, 243#, 243#246, #, 243#248, #, 248#, 246#251, #, 246#253, #, 246#255, #, 243#257, #, #, 257#258, 257#, 243#262, #, 243#264, #, 243#266, #, #, 262#267, 262#, #, 264#270, 264#, #, 266#273, 266#, 255#277, #, 255#279, #, 243#281, #, #281, #, 281#283, #, 281#285, #, 281#287, #, 281#289, #, 283#291, #, 287#293, #, 289#295, #, 287#297, #, 287#299, #, 287#301, #, 287#303, #, 287#305, #, 287#307, #, 287#309, #, 289#311, #, 289#313, #, 289#315, #, 289#317, #, 289#319, #, 289#321, #, 289#323, #, 289#325, #, 283#327, #, 283#329, #, 283#331, #, 283#333, #, 283#335, #, 283#337, 287#340, #, 283#342, #, 281#344, #, #, 287#345, #, 281#349, #, 283#351, #349, 289#353, #, 281#355, #, 355#357, #, 355#359, #, 355#361, #, 355#363, #, #, 285#364, #, 285#366, #, 285#368, #, 285#370, #, 285#372, #, 285#374, #, 285#376, #, 285#378, #, 285#380, 285#383, #, 355#385, #, 344#347, 355#388, #, 355#390, #, 2#392, #, 392#394, #, 392#396, #, #396, 355#399, #, 355#401, #, 355#403, #, 
### 内容
#0, 31:
文档/物理问题/ShadowSpectrometer.ftxt
## end
#2, 210:
+[返回目录](,ShadowSpectrometer)
地址::文档/物理问题/ShadowSpectrometer.ftxt

Nini, 导入GEANT4文件的库

Nini, 打开阴影形状(文件)
Nini, 打开能谱仪论文(文件)

笔记:...
高斯展开(html):...
原理验证(html):...
实验数据(html):...
+[新建阅读窗口](,高斯展开)
+[新建阅读窗口](,实验数据)



## end
#3, 62:
ShadowSpectrometer:...
创建于 20230413

节点数目统计::
+[设置结构](,节点数目统计)
## end
#8, 70:
file:///media/xiantao/Elements/paper/Spectrometer/Desheng04.pdf#page=3
## end
#10, 660:
<!--
+[H函数](,高斯展开)
参考::file:///media/xiantao/Elements/paper/Spectrometer/Desheng04.pdf#page=3
+[打开网页](,参考)
-->

<h2>Gaussian beam expansion</h2>
The scattered electron has an angular distribution,
%[1].
The coefficient \(B_i\) is determined by energy of an electron. To find the optimized \(A_i\), which can represent the function, we should define an error function at the beginning, 
%[2].
Because,
%[3].
Then we have,
%[4].
%[5].
%[6].
It means that,
%[7].
in which,
%[8].


<!--
[8].:
式(2)转换为"表达式"
将"F[j]=\sum_{1}^{N}{i}{T[j,i]*A[i]}"记作为式(7)
将"T[j,i]=\frac{1}{2}*\sqrt{\frac{\pi}{B[j]+B[i]}}"记作为式(8)

验证公式(M函数):...
+[新建阅读窗口](,验证公式)
更新式(3)
+[H函数](,高斯展开)
-->
## end
#13, 73:
f \left( \theta \right)=\sum_{i=1}^{N}{A\ _{i}\ e^{-B\ _{i}\ \theta^{2}}}
## end
#15, 115:
Q=\int_{}^{}{d\theta\ }{\left(f \left( \theta \right)-\sum_{i=1}^{N}{A\ _{i}\ e^{-B\ _{i}\ \theta^{2}}}\right)^{2}}
## end
#17, 37:
\frac{\partial Q}{\partial A\ _{j}}=0
## end
#19, 137:
\int_{}^{}{d\theta\ }{e^{-B\ _{j}\ \theta^{2}}\ \left(f \left( \theta \right)-\sum_{i=1}^{N}{A\ _{i}\ e^{-B\ _{i}\ \theta^{2}}}\right)}=0
## end
#20, 50:
f(\theta)=\sum_{1}^{N}{i}{A[i]*e^{-B[i]*\theta^2}}
## end
#23, 76:
Q=\int_{}^{}{\theta}{(f(\theta)-\sum_{1}^{N}{i}{A[i]*e^{-B[i]*\theta^2}})^2}
## end
#26, 13:
\p{A[j]}{Q}=0
## end
#30, 173:
\int_{}^{}{d\theta\ }{e^{-B\ _{j}\ \theta^{2}}\ f \left( \theta \right)}-\int_{}^{}{d\theta\ }{e^{-B\ _{j}\ \theta^{2}}\ \sum_{i=1}^{N}{A\ _{i}\ e^{-B\ _{i}\ \theta^{2}}}}=0
## end
#32, 168:
\int_{}^{}{d\theta\ }{e^{-B\ _{j}\ \theta^{2}}\ f \left( \theta \right)}-\sum_{i=1}^{N}{A\ _{i}\ \int_{}^{}{d\theta\ }{e^{-\left(B\ _{i}+B\ _{j}\right)\ \theta^{2}}}}=0
## end
#33, 93:
\int_{}^{}{\theta}{e^{-B[j]*\theta^2}*(f(\theta)-\sum_{1}^{N}{i}{A[i]*e^{-B[i]*\theta^2}})}=0
## end
#36, 130:
\int_{}^{}{\theta}{e^{-B[j]*\theta^2}*f(\theta)}-\int_{}^{}{\theta}{e^{-B[j]*\theta^2}*\sum_{1}^{N}{i}{A[i]*e^{-B[i]*\theta^2}}}=0
## end
#39, 118:
\int_{}^{}{\theta}{e^{-B[j]*\theta^2}*f(\theta)}-\sum_{1}^{N}{i}{A[i]*\int_{}^{}{\theta}{e^{-(B[i]+B[j])*\theta^2}}}=0
## end
#43, 42:
F\ _{j}=\sum_{i=1}^{N}{T\ _{j,i}\ A\ _{i}}
## end
#45, 57:
T\ _{j,i}=\frac{1}{2}\ \sqrt{\frac{\pi}{B\ _{j}+B\ _{i}}}
## end
#46, 33:
F[j]=\sum_{1}^{N}{i}{T[j,i]*A[i]}
## end
#49, 47:
T[j,i]=\frac{1}{2}*\sqrt{\frac{\pi}{B[j]+B[i]}}
## end
#53, 330:
%{
+[M函数](,验证公式)
运行指令"nautilus Matlab/funcs"

测试三角函数:...
Gaussian_expansion(M函数):...

保存:...
%}

addpath('Matlab/funcs')

B=linspace(0.1,10,120);
f=@(x)exp(-x.^2)+exp(-x.^2/10);
f=@(x)-sign(x-2).*sign(x+2)+1;
% f=@(x)cos(x);

x=linspace(-10,10,200);

[g,A]=Gaussian_expansion(f(x),x,B);


plot(x,f(x),x,g,'.')

%{
+[M函数](,验证公式)
%}
## end
#56, 338:
%{
+[M函数](,验证公式)
%}

B=linspace(0.1,10,150);
f=@(x)cos(x);
g=@(B,x)exp(-B*x.^2);
x=linspace(-10,10,200);

F=zeros(size(B));
for i=1:length(B)
    F(i)=trapz(x,f(x).*exp(-B(i)*x.^2));
end
T=1/2*sqrt(pi./(B'+B));
A=F/T;

f1=@(x)zeros(size(x));
for i=1:length(A)
    f1=@(x)f1(x)+A(i)*g(B(i),x);
end
plot(x,f(x),x,f1(x))

%{
+[M函数](,验证公式)
%}
## end
#58, 70:
file:///media/xiantao/Elements/paper/Spectrometer/Desheng04.pdf#page=3
## end
#60, 988:
<!--
运行指令"nautilus 文档/物理问题/ShadowSpectrometer"
在"文档/物理问题/ShadowSpectrometer/fig_8d.png"处, 保存当前图像
+[H函数](,原理验证)
模拟场景:...
+[新建阅读窗口](,模拟场景)
-->



<h2>Scattered electron distribution</h2>
By using GEANT4 simulations, we found monoenergetic electrons scattered by a fiducial wire distribute in a Gaussian distribution,
%[1].
The \(\sigma\) of the Gaussian distribution is a function of incoming electron energy. 
%[2].
%影子图<br>

After running a large amount of simulations with fiducials having different diameters, we found the relation,
%[3].
%散射图<br>
<br>
which means, electron beams with arbitrary spectrum will be scattered in the following distribution,
%[4].



<!--
[4].:
将"f(\theta)=\sum_{}^{}{n}{A[n]*exp(-\theta^2/\sigma[n]^2)}"记作为式(4)
将"A(d)=207*d^0.5582"记作为式(3)
式(2)转换为"表达式"

影子图(图片)::output/paper/spectrometer/v4_1/highEnergyShadow.png
散射图(图片)::output/paper/spectrometer/v4_1/scatterFactor.png


+[复制结构](,获取散射参数)
获取散射参数(M函数):...
测试算法(M函数):...
+[新建阅读窗口](,测试算法)
+[H函数](,原理验证)

-->
## end
#63, 1595:
addpath('Matlab/space')
cm=1e-2;
mm=1e-3;
inch=2.54*cm;
physics_constant

有source, fiducial和IP
fiducial是圆柱体(0.127/2*mm,20*cm)
IP是立方体(40*cm,20*cm,1*mm)

source在(0,0,0)
IP距离magnet为(150*cm,0,2.5*cm)
fiducial距离IP为(-50*cm,0,-10*cm)

IP朝向source
source朝向IP
source是三维线段(0.1)

fiducial的材料是"W"
IP的输出地址是"output/ShadowSpectrometer/G4BL/IP_initial.txt"


f::
g::
将"\eqs{\Delta E=50;E_0=70;
f(E)=exp(-(E-E_0)^{2}/\Delta E^{2})}"记作为f
将"\eqs{\Delta_t=10^{-3};
g_x(\theta_x)=exp(-\theta_x^{2}/\Delta_t^{2});
g_y(\theta_y)=exp(-\theta_y^{2}/\Delta_t^{2})}"记作为g
source的能谱是f
source的角分布是g
source有什么

source的数目是"1e5"
source的能量是"80e9*e"
source的能谱宽度是"6e9*e"
的(source,能量)->+[del](,能量)
的(source,能谱宽度)->+[del](,能谱宽度)
计算source的能谱

将"\eqs{E_1=2000;\Delta E=500;E_2=6000;\Delta E_2=500;
f(E)=exp(-(E-E_1)^{2}/\Delta E^{2})+5*exp(-(E-E_2)^{2}/\Delta E_2^{2})}"记作为f

将"\eqs{\Delta E=500;E_1=2000;E_2=4000;E_3=6000;\Delta E_2=200;
f(E)=exp(-(E-E_1)^{2}/\Delta E^{2})+exp(-(E-E_2)^{2}/\Delta E_2^{2})+exp(-(E-E_3)^{2}/\Delta E^{2})}"记作为f

将"\eqs{E_1=200;E_2=6000;f(E)=E_1+[E-E_2]}"记作为f
source的能量范围是(1000,7000)
将"\eqs{E_1=200;E_2=3000;f(E)=1-tanh((E-E_2)/E_1)}"记作为f
将"\eqs{E_1=1000;E_2=5000;f(E)=(E+100)*(1-tanh((E-E_2)/E_1))}"记作为f
将"\eqs{E_1=500;E_2=2000;f(E)=((E/50)^2+200)*(1-tanh((E-E_2)/E_1))}"记作为f
source的能量范围是(100,10000)
显示f


G代码:...
G代码有什么
G代码的地址是"文档/S应用/GEANT4/test1.g4bl"
的(G代码,地址)->+[路径补全](地址,+[记住])
+[召唤星辰]"GEANT4代码"(模拟场景,G代码)
+[运行GEANT4](,G代码)
+[删除结构](,G代码)



分析数据:...
测试参数:...
(额, 之前模拟用的材料是Fe...)
(A_W~3.4092)
+[新建阅读窗口](,测试参数)


运行指令"nautilus output/paper/spectrometer/simulations/shadow_shape"
+[显示三维场景]"1"(,模拟场景)
## end
#72, 16:
0.2, 0.0, -0.025
## end
#74, 998:
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2;
0.0, 0.2
## end
#76, 4694:
0.0, 0.0;
4.027418898191846e-06, 4.027418898191846e-06;
8.038620801933079e-06, 8.038620801933079e-06;
1.2017454016886046e-05, 1.2017454016886046e-05;
1.594789718599853e-05, 1.594789718599853e-05;
1.9814123801853935e-05, 1.9814123801853935e-05;
2.3600565934430796e-05, 2.3600565934430796e-05;
2.7291976917662396e-05, 2.7291976917662396e-05;
3.087349274237976e-05, 3.087349274237976e-05;
3.4330691908430444e-05, 3.4330691908430444e-05;
3.764965349496967e-05, 3.764965349496967e-05;
4.081701321509524e-05, 4.081701321509524e-05;
4.382001722911411e-05, 4.382001722911411e-05;
4.6646573499753363e-05, 4.6646573499753363e-05;
4.9285300482526556e-05, 4.9285300482526556e-05;
5.172557295519632e-05, 5.172557295519632e-05;
5.395756480179416e-05, 5.395756480179416e-05;
5.597228857892146e-05, 5.597228857892146e-05;
5.776163170501191e-05, 5.776163170501191e-05;
5.931838912683428e-05, 5.931838912683428e-05;
6.063629233169869e-05, 6.063629233169869e-05;
6.17100345885449e-05, 6.17100345885449e-05;
6.253529231627521e-05, 6.253529231627521e-05;
6.310874249328964e-05, 6.310874249328964e-05;
6.342807603812101e-05, 6.342807603812101e-05;
6.349200710729107e-05, 6.349200710729107e-05;
6.330027827294834e-05, 6.330027827294834e-05;
6.285366155943922e-05, 6.285366155943922e-05;
6.215395533463845e-05, 6.215395533463845e-05;
6.120397706855632e-05, 6.120397706855632e-05;
6.0007551988381445e-05, 6.0007551988381445e-05;
5.856949767564091e-05, 5.856949767564091e-05;
5.6895604667499824e-05, 5.6895604667499824e-05;
5.499261314031185e-05, 5.499261314031185e-05;
5.286818576930797e-05, 5.286818576930797e-05;
5.0530876873707846e-05, 5.0530876873707846e-05;
4.7990097971495404e-05, 4.7990097971495404e-05;
4.5256079882557805e-05, 4.5256079882557805e-05;
4.233983153278451e-05, 4.233983153278451e-05;
3.925309562500843e-05, 3.925309562500843e-05;
3.6008301355285925e-05, 3.6008301355285925e-05;
3.26185143649113e-05, 3.26185143649113e-05;
2.9097384129690566e-05, 2.9097384129690566e-05;
2.5459088998319956e-05, 2.5459088998319956e-05;
2.1718279101179964e-05, 2.1718279101179964e-05;
1.7890017359430794e-05, 1.7890017359430794e-05;
1.3989718831945322e-05, 1.3989718831945322e-05;
1.0033088644307722e-05, 1.0033088644307722e-05;
6.036058749815614e-06, 6.036058749815614e-06;
2.0147237771272905e-06, 2.0147237771272905e-06;
-2.0147237771272905e-06, -2.0147237771272905e-06;
-6.036058749815614e-06, -6.036058749815614e-06;
-1.0033088644307722e-05, -1.0033088644307722e-05;
-1.3989718831945322e-05, -1.3989718831945322e-05;
-1.7890017359430794e-05, -1.7890017359430794e-05;
-2.1718279101179964e-05, -2.1718279101179964e-05;
-2.5459088998319956e-05, -2.5459088998319956e-05;
-2.9097384129690566e-05, -2.9097384129690566e-05;
-3.26185143649113e-05, -3.26185143649113e-05;
-3.6008301355285925e-05, -3.6008301355285925e-05;
-3.925309562500843e-05, -3.925309562500843e-05;
-4.233983153278451e-05, -4.233983153278451e-05;
-4.5256079882557805e-05, -4.5256079882557805e-05;
-4.7990097971495404e-05, -4.7990097971495404e-05;
-5.053087687370783e-05, -5.053087687370783e-05;
-5.2868185769307986e-05, -5.2868185769307986e-05;
-5.499261314031185e-05, -5.499261314031185e-05;
-5.689560466749982e-05, -5.689560466749982e-05;
-5.856949767564092e-05, -5.856949767564092e-05;
-6.0007551988381445e-05, -6.0007551988381445e-05;
-6.120397706855632e-05, -6.120397706855632e-05;
-6.215395533463845e-05, -6.215395533463845e-05;
-6.285366155943922e-05, -6.285366155943922e-05;
-6.330027827294834e-05, -6.330027827294834e-05;
-6.349200710729107e-05, -6.349200710729107e-05;
-6.342807603812101e-05, -6.342807603812101e-05;
-6.310874249328964e-05, -6.310874249328964e-05;
-6.253529231627521e-05, -6.253529231627521e-05;
-6.17100345885449e-05, -6.17100345885449e-05;
-6.06362923316987e-05, -6.06362923316987e-05;
-5.931838912683427e-05, -5.931838912683427e-05;
-5.7761631705011906e-05, -5.7761631705011906e-05;
-5.597228857892145e-05, -5.597228857892145e-05;
-5.395756480179416e-05, -5.395756480179416e-05;
-5.1725572955196325e-05, -5.1725572955196325e-05;
-4.928530048252657e-05, -4.928530048252657e-05;
-4.664657349975334e-05, -4.664657349975334e-05;
-4.382001722911411e-05, -4.382001722911411e-05;
-4.081701321509524e-05, -4.081701321509524e-05;
-3.764965349496968e-05, -3.764965349496968e-05;
-3.4330691908430464e-05, -3.4330691908430464e-05;
-3.0873492742379736e-05, -3.0873492742379736e-05;
-2.729197691766238e-05, -2.729197691766238e-05;
-2.3600565934430793e-05, -2.3600565934430793e-05;
-1.9814123801853935e-05, -1.9814123801853935e-05;
-1.5947897185998544e-05, -1.5947897185998544e-05;
-1.2017454016886077e-05, -1.2017454016886077e-05;
-8.038620801933055e-06, -8.038620801933055e-06;
-4.027418898191835e-06, -4.027418898191835e-06;
0.0, 0.0
## end
#78, 4670:
6.35e-05, 6.35e-05;
6.337215395596466e-05, 6.337215395596466e-05;
6.29891306147555e-05, 6.29891306147555e-05;
6.235247227618187e-05, 6.235247227618187e-05;
6.146474253866862e-05, 6.146474253866862e-05;
6.0329515976550024e-05, 6.0329515976550024e-05;
5.895136374652061e-05, 5.895136374652061e-05;
5.733583518120045e-05, 5.733583518120045e-05;
5.548943544393134e-05, 5.548943544393134e-05;
5.3419599334780004e-05, 5.3419599334780004e-05;
5.1134661353222216e-05, 5.1134661353222216e-05;
4.8643822138055105e-05, 4.8643822138055105e-05;
4.595711141967196e-05, 4.595711141967196e-05;
4.308534763387789e-05, 4.308534763387789e-05;
4.004009435986718e-05, 4.004009435986718e-05;
3.6833613757771085e-05, 3.6833613757771085e-05;
3.3478817193266906e-05, 3.3478817193266906e-05;
2.998921324806535e-05, 2.998921324806535e-05;
2.6378853325619788e-05, 2.6378853325619788e-05;
2.266227507108386e-05, 2.266227507108386e-05;
1.8854443833345445e-05, 1.8854443833345445e-05;
1.4970692404848632e-05, 1.4970692404848632e-05;
1.1026659281850076e-05, 1.1026659281850076e-05;
7.038225693714195e-06, 7.038225693714195e-06;
3.021451654807643e-06, 3.021451654807643e-06;
-1.0074887035103006e-06, -1.0074887035103006e-06;
-5.0323722604060685e-06, -5.0323722604060685e-06;
-9.036992230353612e-06, -9.036992230353612e-06;
-1.3005223422139603e-05, -1.3005223422139603e-05;
-1.692108716931722e-05, -1.692108716931722e-05;
-2.0768815670656274e-05, -2.0768815670656274e-05;
-2.4532915481513675e-05, -2.4532915481513675e-05;
-2.8198229900466652e-05, -2.8198229900466652e-05;
-3.175e-05, -3.175e-05;
-3.5173924055498e-05, -3.5173924055498e-05;
-3.845621513324183e-05, -3.845621513324183e-05;
-4.15836566055256e-05, -4.15836566055256e-05;
-4.4543655369351395e-05, -4.4543655369351395e-05;
-4.732429255441043e-05, -4.732429255441043e-05;
-4.9914371516166996e-05, -4.9914371516166996e-05;
-5.2303462920794387e-05, -5.2303462920794387e-05;
-5.448194674042104e-05, -5.448194674042104e-05;
-5.644105098958763e-05, -5.644105098958763e-05;
-5.8172887046936424e-05, -5.8172887046936424e-05;
-5.9670481419905185e-05, -5.9670481419905185e-05;
-6.0927803824520585e-05, -6.0927803824520585e-05;
-6.193979146722335e-05, -6.193979146722335e-05;
-6.270236943095104e-05, -6.270236943095104e-05;
-6.321246708339088e-05, -6.321246708339088e-05;
-6.346803044133224e-05, -6.346803044133224e-05;
-6.346803044133224e-05, -6.346803044133224e-05;
-6.321246708339088e-05, -6.321246708339088e-05;
-6.270236943095104e-05, -6.270236943095104e-05;
-6.193979146722335e-05, -6.193979146722335e-05;
-6.0927803824520585e-05, -6.0927803824520585e-05;
-5.9670481419905185e-05, -5.9670481419905185e-05;
-5.8172887046936424e-05, -5.8172887046936424e-05;
-5.644105098958763e-05, -5.644105098958763e-05;
-5.448194674042104e-05, -5.448194674042104e-05;
-5.2303462920794387e-05, -5.2303462920794387e-05;
-4.9914371516166996e-05, -4.9914371516166996e-05;
-4.732429255441043e-05, -4.732429255441043e-05;
-4.4543655369351395e-05, -4.4543655369351395e-05;
-4.15836566055256e-05, -4.15836566055256e-05;
-3.845621513324184e-05, -3.845621513324184e-05;
-3.5173924055497996e-05, -3.5173924055497996e-05;
-3.175e-05, -3.175e-05;
-2.8198229900466665e-05, -2.8198229900466665e-05;
-2.453291548151366e-05, -2.453291548151366e-05;
-2.0768815670656274e-05, -2.0768815670656274e-05;
-1.6921087169317235e-05, -1.6921087169317235e-05;
-1.3005223422139603e-05, -1.3005223422139603e-05;
-9.036992230353612e-06, -9.036992230353612e-06;
-5.032372260406085e-06, -5.032372260406085e-06;
-1.007488703510332e-06, -1.007488703510332e-06;
3.0214516548076586e-06, 3.0214516548076586e-06;
7.03822569371421e-06, 7.03822569371421e-06;
1.1026659281850076e-05, 1.1026659281850076e-05;
1.4970692404848618e-05, 1.4970692404848618e-05;
1.885444383334543e-05, 1.885444383334543e-05;
2.2662275071083886e-05, 2.2662275071083886e-05;
2.63788533256198e-05, 2.63788533256198e-05;
2.9989213248065355e-05, 2.9989213248065355e-05;
3.34788171932669e-05, 3.34788171932669e-05;
3.6833613757771065e-05, 3.6833613757771065e-05;
4.004009435986716e-05, 4.004009435986716e-05;
4.3085347633877907e-05, 4.3085347633877907e-05;
4.5957111419671965e-05, 4.5957111419671965e-05;
4.8643822138055105e-05, 4.8643822138055105e-05;
5.1134661353222216e-05, 5.1134661353222216e-05;
5.341959933477999e-05, 5.341959933477999e-05;
5.548943544393136e-05, 5.548943544393136e-05;
5.733583518120045e-05, 5.733583518120045e-05;
5.8951363746520614e-05, 5.8951363746520614e-05;
6.0329515976550024e-05, 6.0329515976550024e-05;
6.146474253866862e-05, 6.146474253866862e-05;
6.235247227618187e-05, 6.235247227618187e-05;
6.29891306147555e-05, 6.29891306147555e-05;
6.337215395596466e-05, 6.337215395596466e-05;
6.35e-05, 6.35e-05
## end
#80, 14:
1.2, 0.0, -0.1
## end
#82, 3:
0.2
## end
#84, 8:
6.35e-05
## end
#86, 3:
圆柱体
## end
#88, 58:
0.0, 0.001;
0.0, 0.001;
0.0, 0.001;
0.0, 0.001;
0.0, 0.001
## end
#90, 54:
-0.1, -0.1;
-0.1, -0.1;
0.1, 0.1;
0.1, 0.1;
-0.1, -0.1
## end
#92, 54:
-0.2, -0.2;
0.2, 0.2;
0.2, 0.2;
-0.2, -0.2;
-0.2, -0.2
## end
#94, 13:
1.7, 0.0, 0.0
## end
#96, 5:
0.001
## end
#98, 3:
0.4
## end
#100, 3:
0.2
## end
#102, 3:
立方体
## end
#104, 13:
0.0, 0.0, 0.0
## end
#106, 16:
-90.0, 90.0, 0.0
## end
#108, 15:
90.0, 90.0, 0.0
## end
#110, 8:
0.0;
0.1
## end
#112, 8:
0.0;
0.0
## end
#114, 8:
0.0;
0.0
## end
#116, 3:
0.1
## end
#118, 4:
三维线段
## end
#122, 1:
W
## end
#124, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#127, 45:
output/ShadowSpectrometer/G4BL/IP_initial.txt
## end
#129, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#130, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#132, 738:
# unit: mm
# physics is required, even though it is not used. 
physics QGSP_BERT

# electron
reference particle=e- referenceMomentum=200


# IP
virtualdetector IP width=400.0 height=200.0 length=1.0 color=0.8,0.9,1 \  
format=ascii filename=/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/ShadowSpectrometer/G4BL/IP_initial.txt
place IP x=1699.5 y=0.0 z=0.0 rotation=Z0.0,X-90.0,Z90.0




# source
beam gaussian particle=e- nEvents=100000 \ 
meanMomentum=80000.000000 sigmaP=6000.000000 sigmaXp=0.000000 sigmaYp=0.000000 x=0.0 y=0.0 z=0.0 rotation=Z0.0,X-90.0,Z270.0






# fiducial
tubs fiducial innerRadius=0.0 radius=0.0635 length=200.0 material=W color=1,1,1
place fiducial x=1200.0 y=0.0 z=0.0 rotation=Z0.0,X-0.0,Z180.0




## end
#133, 24:
文档/S应用/GEANT4/test1.g4bl
## end
#135, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#136, 5:
0,0,0
## end
#138, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#139, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#141, 1008:
%{
+[M函数](,分析数据)

发散度:...
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')
addpath('Matlab/funcs')


% data=readmatrix('output/spectrometer/GEANT4/G.txt');
data=readmatrix('output/ShadowSpectrometer/G4BL/IP_initial.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
% x0=data(data(:,8)==11,2);
% y0=data(data(:,8)==11,3);
pz=data(data(:,8)==11,4);
px=data(data(:,8)==11,5);
py=data(data(:,8)==11,6);

tx=px./pz;

tx_min=-5*std(tx(px>mean(px)));
tx_max=5*std(tx(px>mean(px)));
x=linspace(tx_min,tx_max,1000);
f=histc(tx,x)';

d=0.127e-3;
A1=207.*d.^(0.5582);

sigma=linspace(1e-4,13e-3,40);
E=A1./sigma;

B=1./sigma.^2;
[g,A]=Gaussian_expansion(f,x,B);

subplot(1,3,1)
plot(x/1e-3,f,x/1e-3,g)
axis([-10,10,0,7000])
subplot(1,3,2)
hist(pz/1e3,40)
xlabel('Energy [GeV]');
subplot(1,3,3)
% plot(E/1e3,A)
plot(sigma,A)

%{
d=0.127e-3;
A1=207.*d.^(0.5582);
E=3e3;
A1/E

[f2,D2]=Gaussian_fitting(x,f,100)

plot(x,f,x,g)
+[M函数](,分析数据)
%}
## end
#143, 616:
%{
+[M函数](,分析数据)

显示能谱:...
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')


% data=readmatrix('output/spectrometer/GEANT4/G.txt');
data=readmatrix('output/ShadowSpectrometer/G4BL/IP_initial.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
% x0=data(data(:,8)==11,2);
% y0=data(data(:,8)==11,3);
pz=data(data(:,8)==11,4);
px=data(data(:,8)==11,5);
py=data(data(:,8)==11,6);

tx=px./pz;

tx_min=-5*std(tx(px>mean(px)));
tx_max=5*std(tx(px>mean(px)));
x2=linspace(tx_min,tx_max,1000);
i2=histc(tx,x2)';

plot(x2,i2)

%{
+[M函数](,分析数据)
%}
## end
#145, 326:
%{
地址::Matlab/funcs/Gaussian_expansion.m
+[保存M函数](,Gaussian_expansion)

测试:...
%}

function [g,A]=Gaussian_expansion(f,x,B)

F=zeros(size(B));
for i=1:length(B)
    F(i)=trapz(x,f.*exp(-B(i)*x.^2));
end
T=sqrt(pi./(B'+B));
A=F/T;

g=zeros(size(x));
for i=1:length(A)
    g=g+A(i)*exp(-B(i)*x.^2);
end

end

%{
+[M函数](,验证公式)
%}
## end
#148, 33:
Matlab/funcs/Gaussian_expansion.m
## end
#150, 474:
%{
地址::Matlab/funcs/Gaussian_expansion.m
+[保存M函数](,Gaussian_expansion)
%}

function Gaussian_expansion

B=linspace(0.1,10,150);
% f=@(x)exp(-x.^2)+exp(-x.^2/10);
f=@(x)-sign(x-2).*sign(x+2)+1;

g=@(B,x)exp(-B*x.^2);
x=linspace(-10,10,200);

F=zeros(size(B));
for i=1:length(B)
    F(i)=trapz(x,f(x).*exp(-B(i)*x.^2));
end
T=sqrt(pi./(B'+B));
A=F/T;

f1=@(x)zeros(size(x));
for i=1:length(A)
    f1=@(x)f1(x)+A(i)*g(B(i),x);
end
plot(x,f(x),x,f1(x),'--')

%{
+[M函数](,验证公式)
%}
## end
#156, 459:
%{
+[M函数](,验证公式)
运行指令"nautilus Matlab/funcs"

测试三角函数:...
Gaussian_expansion(M函数):...
%}

B=linspace(0.1,10,150);
% f=@(x)exp(-x.^2)+exp(-x.^2/10);
f=@(x)-sign(x-2).*sign(x+2)+1;

g=@(B,x)exp(-B*x.^2);
x=linspace(-10,10,200);

F=zeros(size(B));
for i=1:length(B)
    F(i)=trapz(x,f(x).*exp(-B(i)*x.^2));
end
T=sqrt(pi./(B'+B));
A=F/T;

f1=@(x)zeros(size(x));
for i=1:length(A)
    f1=@(x)f1(x)+A(i)*g(B(i),x);
end
plot(x,f(x),x,f1(x),'--')

%{
+[M函数](,验证公式)
%}
## end
#158, 48:
output/paper/spectrometer/v4_1/scatterFactor.png
## end
#161, 51:
output/paper/spectrometer/v4_1/highEnergyShadow.png
## end
#164, 50:
f \left( \theta \right)=e^{-\theta^{2}/\sigma^{2}}
## end
#166, 46:
\sigma \left( E,d \right)=A \left( d \right)/E
## end
#167, 32:
f(\theta)=e^{-\theta^2/\sigma^2}
## end
#171, 34:
A \left( d \right)=207\ d^{0.5582}
## end
#172, 18:
\sigma(E,d)=A(d)/E
## end
#175, 17:
A(d)=207*d^0.5582
## end
#179, 173:
\begin{cases}
E_{1}=500\\ E_{2}=2000\\ f \left( E \right)=\left(\left(E/50\right)^{2}+200\right)\ \left(1-tanh \left( \left(E-E_{2}\right)/E_{1} \right)\right)
\end{cases}


## end
#182, 64:
\eqs{E_1=500;E_2=2000;f(E)=((E/50)^2+200)*(1-tanh((E-E_2)/E_1))}
## end
#189, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#190, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#191, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#194, 90:
f \left( \theta \right)=\sum_{n}{A\ _{n}\ exp \left( -\theta^{2}/\sigma\ _{n}^{2} \right)}
## end
#195, 56:
f(\theta)=\sum_{}^{}{n}{A[n]*exp(-\theta^2/\sigma[n]^2)}
## end
#199, 775:
%{
+[M函数](,测试算法)

获取数据:...
误差分布图:...
梯度下降法:...
+[新建阅读窗口](,误差分布图)
+[M函数](,获取数据)
+[M函数](,测试算法)
%}

addpath('Matlab/fitting');

% E=linspace(0.3,10,20)*1e3;   %MeV
E=linspace(10,200,20)*1e3;
sigma=3.4092./E;
B=1./sigma.^2;

% g_f=@(x,A)f-abs(A)*exp(-B'*x.^2);
g_f=@(x,A)f-A.^2*exp(-B'*x.^2);
Q_f=@(A)trapz(x,g_f(x,A).^2);

A0=ones(size(B));
[fA1,df,steps]=fit_GradientD(A0,1e-3,Q_f,4000);

A=abs(fA1).^2;
g0=A*exp(-B'*x.^2);


Es=linspace(min(E),max(E),500);   %MeV
in_E=histc(pz,Es)';

subplot(1,2,1)
plot(x/1e-3,f,x/1e-3,g0)
xlabel('\theta [mrad]')
axis([-1,1,0,1.1*max(f)])
legend('Profile','Rebuilt profile')

subplot(1,2,2)
plot(Es/1e3,in_E/max(in_E),E/1e3,A/max(A),'.-')
xlabel('Energy [GeV]')
legend('Spectrum','Rebuilt spectrum')


%{
min(min(Q))
fitnlm
+[M函数](,测试算法)
%}
## end
#202, 1005:
%{
+[M函数](,测试算法)

获取数据:...
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')
addpath('Matlab/funcs')


% data=readmatrix('output/spectrometer/GEANT4/G.txt');
data=readmatrix('output/ShadowSpectrometer/G4BL/IP_initial.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
% x0=data(data(:,8)==11,2);
% y0=data(data(:,8)==11,3);
pz=data(data(:,8)==11,4);
px=data(data(:,8)==11,5);
py=data(data(:,8)==11,6);

tx=px./pz;

tx_min=-std(tx(px>mean(px)));
tx_max=std(tx(px>mean(px)));
x=linspace(tx_min,tx_max,1000);
f=histc(tx,x)';

d=0.127e-3;
A1=207.*d.^(0.5582);

sigma=linspace(1e-4,13e-3,20);
E=A1./sigma;

B=1./sigma.^2;
[g,A]=Gaussian_expansion(f,x,B);

subplot(1,3,1)
plot(x/1e-3,f,x/1e-3,g)
axis([-10,10,0,7000])
subplot(1,3,2)
hist(pz/1e3,40)
xlabel('Energy [GeV]');
subplot(1,3,3)
% plot(E/1e3,A)
plot(sigma,A)

%{
d=0.127e-3;
A1=207.*d.^(0.5582);
E=3e3;
A1/E

[f2,D2]=Gaussian_fitting(x,f,100)

plot(x,f,x,g)
+[M函数](,获取数据)
%}
## end
#204, 549:
%{
+[M函数](,测试算法)

获取数据:...
%}

%{
+[M函数](,测试算法)
%}

sigma=linspace(10e-4,73e-4,2);
B=1./sigma.^2;

A1=linspace(-6e3,18e3,100);
A2=linspace(-4e3,7e3,100);
%{
+[M函数](,测试算法)
%}

Q=zeros(length(A1),length(A2));
for i=1:length(A1)
    for j=1:length(A2)
        A=[A1(i),A2(j)];
        g=f-A*exp(-B'*x.^2);
        Q(i,j)=trapz(x,g.^2);
    end
end

[i0,j0]=find(Q==min(min(Q)));
A=[A1(i0),A2(j0)];
g0=A*exp(-B'*x.^2);


subplot(1,2,1)
contourf(A2,A1,Q,50)
xlabel('A2')
ylabel('A1')

subplot(1,2,2)
plot(x,f,x,g0)

%{
min(min(Q))
fitnlm
+[M函数](,测试算法)
%}
## end
#206, 457:
%{
+[M函数](,测试算法)

获取数据:...
误差分布图:...
梯度下降法:...
+[新建阅读窗口](,误差分布图)
+[M函数](,获取数据)
%}

addpath('Matlab/fitting');

sigma=linspace(1e-4,13e-3,20);
B=1./sigma.^2;

% g_f=@(x,A)f-abs(A)*exp(-B'*x.^2);
g_f=@(x,A)f-A.^2*exp(-B'*x.^2);
Q_f=@(A)trapz(x,g_f(x,A).^2);

A0=ones(size(B));
[fA1,df,steps]=fit_GradientD(A0,1e-3,Q_f,4000);

A=abs(fA1).^2;
g0=A*exp(-B'*x.^2);

% plot(steps(:,2),steps(:,1),'.')
plot(x,f,x,g0)
plot(A)


%{
min(min(Q))
fitnlm
+[M函数](,测试算法)
%}
## end
#208, 887:
%{
+[M函数](,测试参数)

获取散射参数:...
(这组数据是Fe的)
参数对比:...
+[M函数](,获取散射参数)
运行指令"nautilus output/paper/spectrometer/simulations/shadow_scatter"
%}


clf
addpath('Matlab/random')
addpath('Matlab/fitting')
addpath('Matlab/funcs')


% data=readmatrix('output/spectrometer/GEANT4/G.txt');
data=readmatrix('output/ShadowSpectrometer/G4BL/IP_initial.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
% x0=data(data(:,8)==11,2);
% y0=data(data(:,8)==11,3);
pz=data(data(:,8)==11,4);
px=data(data(:,8)==11,5);
py=data(data(:,8)==11,6);

tx=px./pz;

tx_min=-5*std(tx(px>mean(px)));
tx_max=5*std(tx(px>mean(px)));
x=linspace(tx_min,tx_max,2000);
f=histc(tx,x)';

[f2,D2]=Gaussian_fitting(x,f,100)
D1=interp1(ys(1,:),zs(1,:),mean(pz),'spline')

plot(x,f,x,f2(x))
% plot(ys(1,:),zs(1,:),'.')


%{
A_W=D2*3e3=3.4092
hist(pz)
+[M函数](,测试参数)
%}
## end
#210, 995:
addpath('Matlab/fitting');

file_name_data_out='output/paper/spectrometer/simulations/shadow_scatter/test.mat';

datas=load(file_name_data_out,'-mat');
list_d=datas.list_d;
list_Ds=datas.list_Ds;
list_Ns=datas.list_Ns;
list_Es=datas.list_Es;

xs0=list_d'*ones(1,15);
ys0=list_Es;
zs0=list_Ds;

xi_1a=1:16;
xi_1b=17:32;
xi_2a=33:47;
xi_2b=48:62;
xi_3a=63:77;
xi_3b=78:92;

xs=zeros(46,30);
ys=zeros(46,30);
zs=zeros(46,30);

xs(1:16,1:2:end)=xs0(xi_1a,:);
xs(1:16,2:2:end)=xs0(xi_1b,:);
xs(17:31,1:2:end)=xs0(xi_2b,:);
xs(17:31,2:2:end)=xs0(xi_2a,:);
xs(32:46,1:2:end)=xs0(xi_3a,:);
xs(32:46,2:2:end)=xs0(xi_3b,:);

ys(1:16,1:2:end)=ys0(xi_1a,:);
ys(1:16,2:2:end)=ys0(xi_1b,:);
ys(17:31,1:2:end)=ys0(xi_2b,:);
ys(17:31,2:2:end)=ys0(xi_2a,:);
ys(32:46,1:2:end)=ys0(xi_3a,:);
ys(32:46,2:2:end)=ys0(xi_3b,:);

zs(1:16,1:2:end)=zs0(xi_1a,:);
zs(1:16,2:2:end)=zs0(xi_1b,:);
zs(17:31,1:2:end)=zs0(xi_2b,:);
zs(17:31,2:2:end)=zs0(xi_2a,:);
zs(32:46,1:2:end)=zs0(xi_3a,:);
zs(32:46,2:2:end)=zs0(xi_3b,:);
## end
#212, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#214, 849:
%{
+[M函数](,测试参数)

获取散射参数:...
+[M函数](,获取散射参数)
运行指令"nautilus output/paper/spectrometer/simulations/shadow_scatter"
%}


clf
addpath('Matlab/random')
addpath('Matlab/fitting')
addpath('Matlab/funcs')


% data=readmatrix('output/spectrometer/GEANT4/G.txt');
data=readmatrix('output/ShadowSpectrometer/G4BL/IP_initial.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
% x0=data(data(:,8)==11,2);
% y0=data(data(:,8)==11,3);
pz=data(data(:,8)==11,4);
px=data(data(:,8)==11,5);
py=data(data(:,8)==11,6);

tx=px./pz;

tx_min=-5*std(tx(px>mean(px)));
tx_max=5*std(tx(px>mean(px)));
x=linspace(tx_min,tx_max,2000);
f=histc(tx,x)';

[f2,D2]=Gaussian_fitting(x,f,100)
D1=interp1(ys(1,:),zs(1,:),mean(pz),'spline')

plot(x,f,x,f2(x))
% plot(ys(1,:),zs(1,:),'.')


%{
hist(pz)
+[M函数](,测试参数)
%}
## end
#217, 9:
100,10000
## end
#219, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#220, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#221, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#224, 6:
80e9*e
## end
#226, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#229, 5:
6e9*e
## end
#231, 140:
"""


"""

+新建主语(_世界,是)->是(_主语,)...

->+的(_世界,+主体)->[m_name](_主语,+主体)...
    ->+[左连](是,+主体)...
=>.(+新建主语,_定语)=>+的#1(_定语,+主体)->+的(_世界,+的#1)


## end
#234, 389:
%{
+[M函数](,获取散射参数)

Fe:...
W:...
Al:...
+[M函数](,Fe)
+[M函数](,W)
+[M函数](,Al)
clf
hold on
%}

addpath('Matlab/fitting');

Es=ys(1,:);
ds=xs(:,1)';
A1=zeros(size(ds));
A2=zeros(size(ds));

% i=1;
for i=1:size(zs,1)
A=polyfit(1./Es,zs(i,:),4);

A1(i)=A(end);
A2(i)=A(end-1);

end


plot(ds/1e-3,A2,'o')
xlabel('Diameter [mm]')
ylabel('A [rad*MeV]')


%{
legend('Fe','W','Al')
+[M函数](,获取散射参数)
%}
## end
#237, 1079:
%{
+[M函数](,获取散射参数)
%}

addpath('Matlab/fitting');

file_name_data_out='output/paper/spectrometer/simulations/shadow_scatter/material_scatter/Fe.mat';

datas=load(file_name_data_out,'-mat');
list_d=datas.list_d;
list_Ds=datas.list_Ds;
list_Ns=datas.list_Ns;
list_Es=datas.list_Es;

xs0=list_d'*ones(1,15);
ys0=list_Es;
zs0=list_Ds;

xi_1a=1:16;
xi_1b=17:32;
xi_2a=33:47;
xi_2b=48:62;
xi_3a=63:77;
xi_3b=78:92;

xs=zeros(46,30);
ys=zeros(46,30);
zs=zeros(46,30);

xs(1:16,1:2:end)=xs0(xi_1a,:);
xs(1:16,2:2:end)=xs0(xi_1b,:);
xs(17:31,1:2:end)=xs0(xi_2b,:);
xs(17:31,2:2:end)=xs0(xi_2a,:);
xs(32:46,1:2:end)=xs0(xi_3a,:);
xs(32:46,2:2:end)=xs0(xi_3b,:);

ys(1:16,1:2:end)=ys0(xi_1a,:);
ys(1:16,2:2:end)=ys0(xi_1b,:);
ys(17:31,1:2:end)=ys0(xi_2b,:);
ys(17:31,2:2:end)=ys0(xi_2a,:);
ys(32:46,1:2:end)=ys0(xi_3a,:);
ys(32:46,2:2:end)=ys0(xi_3b,:);

zs(1:16,1:2:end)=zs0(xi_1a,:);
zs(1:16,2:2:end)=zs0(xi_1b,:);
zs(17:31,1:2:end)=zs0(xi_2b,:);
zs(17:31,2:2:end)=zs0(xi_2a,:);
zs(32:46,1:2:end)=zs0(xi_3a,:);
zs(32:46,2:2:end)=zs0(xi_3b,:);

% plot3(xs,ys,zs,'o')

%{
+[M函数](,获取散射参数)
%}
## end
#239, 415:
%{
+[M函数](,获取散射参数)
记住"Matlab"
plot(list_Es',list_Ns')
max(list_d)
%}

addpath('Matlab/fitting');

file_name_data_out='output/paper/spectrometer/simulations/shadow_scatter/material_scatter/W.mat';

datas=load(file_name_data_out,'-mat');
list_d=datas.list_d;
list_Ds=datas.list_Ds;
list_Ns=datas.list_Ns;
list_Es=datas.list_Es;

xs=list_d'*ones(1,30);
ys=list_Es;
zs=list_Ds;

% plot3(xs,ys,zs)

%{
+[M函数](,获取散射参数)
%}
## end
#241, 399:
%{
+[M函数](,获取散射参数)

Fe:...
W:...
Al:...
%}

addpath('Matlab/fitting');

file_name_data_out='output/paper/spectrometer/simulations/shadow_scatter/material_scatter/Al.mat';

datas=load(file_name_data_out,'-mat');
list_d=datas.list_d;
list_Ds=datas.list_Ds;
list_Ns=datas.list_Ns;
list_Es=datas.list_Es;

xs=list_d'*ones(1,30);
ys=list_Es;
zs=list_Ds;

% plot3(xs,ys,zs)

%{
size(xs)
+[M函数](,获取散射参数)
%}
## end
#243, 692:
<!--
+[H函数](,实验数据)

表1(表格):...
将表1的", Pb, [\d\.]+, [um]m,"替换为","
将表1的", m"替换为"m"
+[新建阅读窗口](,表1)
-->

<h2>Spectrum</h2>
%[1].
%[2].
%[3].
%[4].
Here the location of the source is at \((z_o,x_o)\). The radiation and electron are on the same IP, which are at \((z,x_e)\) and \((z,x_\gamma)\). The position of magnet is at \(z_m\), the width of the magnet is \(D\) and the intensity of the magnet is \(B\). The launch angle of the electron is \(\theta\) and the deflection angle leaving the magnet is \(\beta\). The radius of the trajectory in the magnet is \(R\)<br>

<h2>Data list</h2>
%表1

<!--
[4].:
式(2)转换为"Matlab"


LWFA8数据:...
场景1:...
+[新建阅读窗口](,LWFA8数据)
+[新建阅读窗口](,场景1)

+[H函数](,实验数据)
-->
## end
#246, 1101:
%{
+[M函数](,LWFA8数据)
Nini, 打开周报告(文件)
运行指令"nautilus 文档/S应用/周报告/UT3_report3/20230428"
运行指令"nautilus /media/xiantao/Elements/LWFA/LWFA_8_0/PM"

数据列表:...
发散度变化:...
分析12009能谱:...

Nini, 打开LWFA数据分析的read_IP_image(节点)
%}

addpath('Matlab/IP');
% names=readtable("D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\name_table.txt");
% file_name_pat="D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\%d\\%d.tiff";

names=readtable("/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/name_table.txt");
file_name_pat="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/%d/%d.tiff";

names=names{:,:};
%Sn
shot_no=12007;
% shot_no=12041;
%Al
% shot_no=11985;
% shot_no=11999;
% shot_no=11995;
% shot_no=11993;
%Pb
% shot_no=12011;
% shot_no=12063
%no
% shot_no=11899;


%{
figure
+[M函数](,LWFA8数据)
%}

fn=names(names(:,1)==shot_no,2);
file_name=sprintf(file_name_pat,shot_no,fn);

data0=read_IP_image(file_name,'SR');
title(sprintf('No.%d',shot_no))

data0=data0/max(max(data0));
I0=data0./max(data0);
imshow(data0*20)
colormap('hot')
% plot(sum(data0'))



%{
names
clipboard('copy',file_name)
+[M函数](,LWFA8数据)
%}
## end
#248, 797:
No., Thickness, Material;
11985, 25um, Al
11989, 75um, Al
11997, 75um, Al
11999, 75um, Al
12001, 75um, Al
12149, 75um, Al
11995, 250um, Al
11993, 400um, Al

12005, 800um, Sn
12007, 800um, Sn
12009, 800um, Sn
12141, 860um, Sn
12041, 860um, Sn
12043, 860um, Sn
12045, 860um, Sn
12047, 860um, Sn
12049, 860um, Sn
12051, 860um, Sn
12053, 860um, Sn
12055, 860um, Sn
12057, 860um, Sn
11991, 860um, Sn

12011, 2.8mm, Pb
12013, 2.8mm, Pb
12015, 2.8mm, Pb
12017, 2.8mm, Pb
12019, 2.8mm, Pb
12023, 2.8mm, Pb
12025, 2.8mm, Pb
12059, 2.8mm, Pb
12061, 2.8mm, Pb
12063, 4.8mm, Pb
12065, 4.8mm, Pb
12071, 4.8mm, Pb
12073, 4.8mm, Pb
12083, 4.8mm, Pb
12067, 7.6mm, Pb
12069, 7.6mm, Pb
12075, 7.6mm, Pb
12077, 7.6mm, Pb
12079, 7.6mm, Pb
12081, 7.6mm, Pb
12021, 10.1mm, Pb

12159, 12.5um, Kapton
12151, 25um, Kapton

## end
#251, 1069:
%{
+[M函数](,列举数据)
运行指令"nautilus /media/xiantao/Elements/LWFA/LWFA_8_0/PM"
数据列表:...
%}

addpath('Matlab/IP');
% names=readtable("D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\name_table.txt");
% file_name_pat="D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\%d\\%d.tiff";

names=readtable("/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/name_table.txt");
file_name_pat="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/%d/%d.tiff";

shot_no=[11923, 11933, 11945, 11965, 11977, 11985, 11989, 11991, 11993, 11995, 11997, 11999, 12001, 12005, 12007, 12009, 12011, 12013, 12015, 12017, 12019, 12021, 12023, 12025, 12041, 12043, 12045, 12047, 12049, 12053, 12057, 12059, 12061, 12063, 12065, 12067, 12069, 12071, 12073, 12075, 12077, 12079, 12081, 12083];
names=names{:,:};
length(shot_no);

%{
+[M函数](,LWFA8数据)
%}
for i=7
% for i=1:length(shot_no)
fn=names(names(:,1)==shot_no(i),2);
file_name=sprintf(file_name_pat,shot_no(i),fn);

read_IP_image(file_name,'SR');
title(sprintf('No.%d',shot_no(i)))
end


%{
names
clipboard('copy',file_name)
+[M函数](,LWFA8数据)
%}
## end
#253, 907:
%{
+[M函数](,发散度变化)
%}

addpath('Matlab/IP');
% names=readtable("D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\name_table.txt");
% file_name_pat="D:\\LWFA\\LWFA_8_0\\organized IP data\\SR\\%d\\%d.tiff";

names=readtable("/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/name_table.txt");
file_name_pat="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/%d/%d.tiff";

names=names{:,:};
%Sn
shot_no=12007;
% shot_no=12041;
%Al
% shot_no=11985;
% shot_no=11999;
% shot_no=11995;
% shot_no=11993;
%Pb
% shot_no=12011;
% shot_no=12063
%no
% shot_no=11899;


%{
figure
+[M函数](,LWFA8数据)
%}

fn=names(names(:,1)==shot_no,2);
file_name=sprintf(file_name_pat,shot_no,fn);

data0=read_IP_image(file_name,'SR');
title(sprintf('No.%d',shot_no))

data0=data0/max(max(data0));
I0=data0./max(data0);
imshow(I0)
colormap('hot')
figure
plot(sum(data0'))



%{
names
clipboard('copy',file_name)
+[M函数](,发散度变化)
%}
## end
#255, 1085:
%{
记住"Matlab"
+[M函数](,分析12009能谱)
Nini, 打开LWFA数据分析(文件)

运行指令"nautilus Matlab"
运行指令"nautilus Matlab/funcs"

Nini, 打开GEANT4文件(文件)
fiducial方案:...
辐射方案:...
+[新建阅读窗口](,fiducial方案)
%}

physics_constant;
addpath('Matlab/spectrometer');
addpath('Matlab/funcs');
addpath('Matlab/random');

file_name="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/12007/4.tiff";

N=1e5;
z_o=-0.264;
x_o=0;
z_m=2.5e-2;
D=5e-2;
B0=1.4820;
z=2.476;
q=e;

data=imread(file_name);
I_x=max(data);
I_0=sum(data);
x_e=(1:length(I_x))-4000;
x_e=x_e*50e-6;
I_max=max(I_x(1:4000));
i_max=find(I_x(1:4000)==I_max);
x_g=x_e(i_max);

theta=atan((x_g-x_o)./(z-z_o));
x_m=x_o+((z_m-z_o).*(x_g-x_o))./(z-z_o);
beta=atan((x_e-x_m)./(z-z_m));
R=D./(sin(beta)-sin(theta));
E=sqrt(B0.^2.*q.^2.*R.^2.*c.^2+m_e.^2.*c.^4);

E=E/e/1e9;
E_x=linspace(0.3,4,1000);
S=u_substitution(x_e(x_e>x_g),I_0(x_e>x_g),x_e(x_e>x_g),E(x_e>x_g),E_x);
En=random_func_1D(1,N,E_x,S);

dE=(4-0.3)/300;
f_S=S/trapz(E_x,S)*N*dE;

clf
hold on
hist(En,300)
plot(E_x,f_S,'r')

%{
plot(x_e(x_e>x_g),E(x_e>x_g))
axis([0,0.2,0,4])
+[M函数](,分析12009能谱)
%}
## end
#257, 58:
tan \left( \theta \right)=\frac{x_{\gamma}-x_{o}}{z-z_{o}}
## end
#258, 38:
tan(\theta)=\frac{x_\gamma-x_o}{z-z_o}
## end
#262, 52:
E=\sqrt{B^{2}\ q^{2}\ R^{2}\ c^{2}+m_{e}^{2}\ c^{4}}
## end
#264, 62:
R=\frac{D}{sin \left( \beta \right)-sin \left( \theta \right)}
## end
#266, 166:
\begin{cases}
tan \left( \beta \right)=\frac{x_{e}-x_{m}}{z-z_{m}}\\ x_{m}=x_{o}+\frac{\left(z_{m}-z_{o}\right)\ \left(x_{\gamma}-x_{o}\right)}{z-z_{o}}
\end{cases}


## end
#267, 46:
E=\sqrt{B^{2}*q^{2}*R^{2}*c^{2}+m_e^{2}*c^{4}}
## end
#270, 34:
R=\frac{D}{sin(\beta)-sin(\theta)}
## end
#273, 86:
\eqs{tan(\beta)=\frac{x_e-x_m}{z-z_m};
x_m=x_o+\frac{(z_m-z_o)*(x_\gamma-x_o)}{z-z_o}}
## end
#277, 2729:
%{
记住"Matlab"
+[M函数](,分析12009能谱)
Nini, 打开LWFA数据分析(文件)
%}

physics_constant;
addpath('Matlab/spectrometer');
addpath('Matlab/funcs');

%shadow0=8001-e_shadows;
%X_shadows0=8001-X_shadows;
shadow0=e_shadows;
X_shadows0=X_shadows;

Cell0=Cell00+[dCell_0,0];
IP=IP0+[dIP_0,0];

shadow=4001-shadow0/2;
Cell=Cell0(1:2)*1e-2;
Ma=[-1/2,1/2]*size_m(1)+pos_m(1);
Ma=Ma*1e-2;
Fx1=pos_f1(1)*1e-2;
Fx2=pos_f2(1)*1e-2;
Fy1=pos_f1(2)*1e-2;
Fy2=pos_f2(2)*1e-2;
IPx=IP(1)*1e-2;
IPy=IP(2)*1e-2;

shX=IPx*ones(size(shadow));
shY=(shadow-2000)*1e-4+IPy;

Fy=[f_1*1e-2+Fy1;f_2*1e-2+Fy2];
Fx=[Fx1*ones(size(f_1));Fx2*ones(size(f_2))];

% calibration
ys=(4000-X_shadows0)*50e-6+IPy;
xs=IPx*ones(size(ys));
xo=Cell(1);
yo=Cell(2);

[xo3,yo3,ys3,I,J,f1,f2,xf,yf]=calibrationIP(xo,yo,10e-3,10e-3,Fx,Fy,xs,ys,20);
dIPy=mean(ys3-ys);

%{
+[M函数](,分析12009能谱)
dIPy
%}
dy_s=0

% launch angle
% Cell=[xo3,yo3,0];
Cell=[xo,yo,0]+[0,dy_s,0];
shY=shY+dIPy;
[a,Fn,es,theta,energy]=DesignTool2(Cell,Ma,B0,Fx,Fy,shX,shY);
%{
Fn
+[M函数](,M代码)
%}


% image
data=imread(file_name);
%data_im=[zeros(4000,2500),data(:,end:-1:1)];
data_im=data;
data_im=double(data_im);

% spectrum
pos_m0=[mean(Ma),0];
siz_m0=diff(Ma);
dx=50e-6;
a0=mean(a);
%{
+[M函数](,分析12009能谱)
%}


z_i=IPx;
% x_i=linspace(-0.2,0.2,8000)+IPy+dIPy;
% x_i=interp1(shadow0,shY,1:8000);
A=polyfit(shadow0,shY,1);
x_i=A(1)*(1:8000)+A(2);
x_i=x_i;
E=linspace(0.29,20,10000)*1e9*e;
I0=trapz(data_im);
% I0=I0(end:-1:1);

%{
+[M函数](,分析12009能谱)
%}
S=spectrum(I0,E,a0,Cell(2),Cell(1),B0,siz_m0,pos_m0(1),x_i,z_i);
E_range=E(S<max(S)*1e-3);
% E_range0=min(E_range);
E_range0=5e9*e;
S_c=S/4.1e-3*e*e*1e9;

%{
figure;plot(x_i)
记住"Matlab"
+[M函数](,分析12009能谱)
%}

clf
subplot(2,2,1)
x=xo-0.05*ones(1,length(I));
y=ys3(J)+(x-xs(J)).*(yf(I)-ys3(J))./(xf(I)-xs(J));
plot(xo,yo,'o',xo3,yo3,'o',xf,yf,'o',xs,ys3,'o'...
    ,[xs(J(f1));x(f1)],[ys3(J(f1));y(f1)],'r'...
    ,[xs(J(f2));x(f2)],[ys3(J(f2));y(f2)],'b')
xlabel('x [m]')
ylabel('y [m]')
title('X-rays calibration')


%{
+[M函数](,分析12009能谱)
Ma
%}
subplot(2,2,2)
x=xo-0.05*ones(1,length(I));
y=ys3(J)+(x-xs(J)).*(yf(I)-ys3(J))./(xf(I)-xs(J));
xs_e=[Fx(Fn');shX];
ys_e=[Fy(Fn');shY];

plot(xo,yo,'o',xo3,yo3,'o',xf,yf,'o',xs,ys3,'o'...
    ,[xs(J(f1));x(f1)],[ys3(J(f1));y(f1)],'r'...
    ,[xs(J(f2));x(f2)],[ys3(J(f2));y(f2)],'b')
hold on
plot(shX,shY,'bo',xs_e,ys_e,'b')
xlabel('x [m]')
ylabel('y [m]')
title('X-rays calibration')



subplot(2,2,3)
plot(es,a/1e-3,'o-')
xlabel('E [GeV]')
ylabel('\theta [mrad]')
title('Fiducial launch angles');

subplot(2,2,4)
plot(E/e/1e9,S_c/1e-12);
xlabel('E [GeV]')
ylabel('Density [pC/GeV]')
% axis([0,1*E_range0/e/1e9,0,1.2*max(S_c/1e-12)])
title(sprintf('No.%d',no_))



%{
Nini, 打开LWFA12数据分析的计算IP能谱_LWFA12(节点)

+[M函数](,M代码)
%}
## end
#279, 970:
%{
记住"Matlab"
+[M函数](,分析12009能谱)
Nini, 打开LWFA数据分析(文件)
x_m
运行指令"nautilus Matlab"
运行指令"nautilus Matlab/funcs"
fiducial方案:...
+[新建阅读窗口](,fiducial方案)
%}

physics_constant;
addpath('Matlab/spectrometer');
addpath('Matlab/funcs');

file_name="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/12007/4.tiff";

z_o=-0.264;
x_o=0;
z_m=2.5e-2;
D=5e-2;
B0=1.4820;
z=2.476;
q=e;

data=imread(file_name);
I_x=max(data);
I_0=sum(data);
x_e=(1:length(I_x))-4000;
x_e=x_e*50e-6;
I_max=max(I_x(1:4000));
i_max=find(I_x(1:4000)==I_max);
x_g=x_e(i_max);

theta=atan((x_g-x_o)./(z-z_o));
x_m=x_o+((z_m-z_o).*(x_g-x_o))./(z-z_o);
beta=atan((x_e-x_m)./(z-z_m));
R=D./(sin(beta)-sin(theta));
E=sqrt(B0.^2.*q.^2.*R.^2.*c.^2+m_e.^2.*c.^4);

E=E/e/1e9;
E_x=linspace(0.1,4,1000);
S=u_substitution(x_e(x_e>x_g),I_0(x_e>x_g),x_e(x_e>x_g),E(x_e>x_g),E_x);


plot(E,I_0,E_x,S*8)
% axis([0,3,0,35])
axis([0,3,0,10000])


%{
plot(x_e(x_e>x_g),E(x_e>x_g))
axis([0,0.2,0,4])
+[M函数](,分析12009能谱)
%}
## end
#281, 678:
+[显示三维场景]"1"(,场景1)

addpath('Matlab/space')
cm=1e-2;
mm=1e-3;

有source, plate, magnet, IP
source在(-26.4*cm,0,0)
magnet在(2.5*cm,0,-3*cm)
IP在(2.476,0,0)

source是三维线段"0.1"
source朝向IP
magnet是立方体(5*cm,8*cm,6*cm)
magnet的磁场强度是"1.4820"
IP是立方体(40*cm,20*cm,1*mm)
IP背向source


plate在(-3*mm,0,1)
plate在(-3*mm,0,0)
plate是立方体(5*cm,5*cm,0.84*mm)
plate朝向source
plate的材料是"Sn"


运行指令"nautilus output/ShadowSpectrometer/IP"
IP的输出地址是"output/ShadowSpectrometer/IP/12009.txt"
source朝向"90-0.1621,90,0"

source的能量是"1e9*e"
source的代码是电子源代码
电子源代码:...
+[新建阅读窗口](,电子源代码)


G代码:...
G代码的地址是"文档/S应用/GEANT4/test1.g4bl"
+[召唤星辰]"GEANT4代码"(场景1,G代码)
+[运行GEANT4](,G代码)

分析数据:...
+[新建阅读窗口](,分析数据)


+[显示三维场景]"1"(,场景1)
## end
#291, 16:
-0.264, 0.0, 0.0
## end
#293, 17:
0.025, 0.0, -0.03
## end
#295, 15:
2.476, 0.0, 0.0
## end
#297, 53:
0.0, 0.06;
0.0, 0.06;
0.0, 0.06;
0.0, 0.06;
0.0, 0.06
## end
#299, 64:
-0.04, -0.04;
-0.04, -0.04;
0.04, 0.04;
0.04, 0.04;
-0.04, -0.04
## end
#301, 74:
-0.025, -0.025;
0.025, 0.025;
0.025, 0.025;
-0.025, -0.025;
-0.025, -0.025
## end
#303, 4:
0.06
## end
#305, 4:
0.05
## end
#307, 4:
0.08
## end
#309, 3:
立方体
## end
#311, 58:
0.0, 0.001;
0.0, 0.001;
0.0, 0.001;
0.0, 0.001;
0.0, 0.001
## end
#313, 54:
-0.1, -0.1;
-0.1, -0.1;
0.1, 0.1;
0.1, 0.1;
-0.1, -0.1
## end
#315, 54:
-0.2, -0.2;
0.2, 0.2;
0.2, 0.2;
-0.2, -0.2;
-0.2, -0.2
## end
#317, 5:
0.001
## end
#319, 3:
0.4
## end
#321, 3:
0.2
## end
#323, 3:
立方体
## end
#325, 15:
90.0, 90.0, 0.0
## end
#327, 8:
0.0;
0.1
## end
#329, 8:
0.0;
0.0
## end
#331, 8:
0.0;
0.0
## end
#333, 3:
0.1
## end
#335, 4:
三维线段
## end
#337, 14:
90-0.1621,90,0
## end
#340, 6:
1.4820
## end
#342, 5:
1e9*e
## end
#344, 1027:
# unit: mm
# physics is required, even though it is not used. 
physics QGSP_BERT

# electron
reference particle=e- referenceMomentum=200


# IP
virtualdetector IP width=400.0 height=200.0 length=1.0 color=0.8,0.9,1 \  
format=ascii filename=/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/ShadowSpectrometer/IP/12009.txt
place IP x=2476.5 y=0.0 z=0.0 rotation=Z0.0,X-90.0,Z270.0




# source
beam ascii particle=e- filename=/home/xiantao/Dropbox/Struct/Structure1.2.1/Nini/output/spectrometer/GEANT4/G.txt \ 
x=-264.0 y=0.0 z=0.0 rotation=Z0.0,X-90.0,Z269.8379




# magnet_M
fieldexpr magnet_M Bz=1.482 width=50.0 height=80.0 length=60.0
place magnet_M x=25.0 y=0.0 z=0.0 rotation=Z-0.0,X-0.0,Z0.0


# magnet
box magnet width=50.0 height=80.0 length=60.0 material=Vacuum color=0.5,0.8,1
place magnet x=25.0 y=0.0 z=0.0 rotation=Z-0.0,X-0.0,Z180.0




# plate
box plate width=50.0 height=50.0 length=0.8400000000000001 material=Sn color=1,1,1
place plate x=-3.4200000000000004 y=0.0 z=0.0 rotation=Z0.0,X-90.0,Z90.0




## end
#345, 5:
0,0,0
## end
#347, 24:
文档/S应用/GEANT4/test1.g4bl
## end
#349, 1418:
%{
记住"Matlab"
+[M函数](,分析12009能谱)
Nini, 打开LWFA数据分析(文件)

运行指令"nautilus Matlab"
运行指令"nautilus Matlab/funcs"

Nini, 打开GEANT4文件(文件)
fiducial方案:...
辐射方案:...
+[新建阅读窗口](,fiducial方案)
%}

physics_constant;
addpath('Matlab/spectrometer');
addpath('Matlab/funcs');
addpath('Matlab/random');

file_name="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/12007/4.tiff";

N=1e6;
z_o=-0.264;
x_o=0;
z_m=2.5e-2;
D=5e-2;
B0=1.4820;
z=2.476;
q=e;

Delta_t=0.8e-3;

data=imread(file_name);
I_x=max(data);
I_0=sum(data);
x_e=(1:length(I_x))-4000;
x_e=x_e*50e-6;
I_max=max(I_x(1:4000));
i_max=find(I_x(1:4000)==I_max);
x_g=x_e(i_max);

theta=atan((x_g-x_o)./(z-z_o));
x_m=x_o+((z_m-z_o).*(x_g-x_o))./(z-z_o);
beta=atan((x_e-x_m)./(z-z_m));
R=D./(sin(beta)-sin(theta));
E=sqrt(B0.^2.*q.^2.*R.^2.*c.^2+m_e.^2.*c.^4);

E=E/e/1e9;
E_x=linspace(0.28,4,1000);
S=u_substitution(x_e(x_e>x_g),I_0(x_e>x_g),x_e(x_e>x_g),E(x_e>x_g),E_x);
En=random_func_1D(1,N,E_x,S);


g_x=@(theta_x)exp(-theta_x.^(2)./Delta_t.^(2));
g_y=@(theta_y)exp(-theta_y.^(2)./Delta_t.^(2));
theta_range=[-10e-3,10e-3];
TX=linspace(theta_range(1),theta_range(2),100);
TY=linspace(theta_range(1),theta_range(2),100);
GTX=g_x(TX);
GTY=g_y(TY);
tx=random_func_1D(1,N,TX,GTX);
ty=random_func_1D(1,N,TY,GTY);




P=En*1e3;
Px=P.*sin(tx);
Py=P.*sin(ty);
Pz=sqrt(P.^2-Px.^2-Py.^2);


%{
x_g/(z-z_o)/pi*180
plot(x_e(x_e>x_g),E(x_e>x_g))
axis([0,0.2,0,4])
+[M函数](,分析12009能谱)
%}
## end
#353, 38:
output/ShadowSpectrometer/IP/12009.txt
## end
#355, 952:
%{
+[M函数](,分析数据)
Nini, 打开函数拟合的fit_GradientD(节点)

实验数据:...
+[M函数](,实验数据)
+[新建阅读窗口](,实验数据)
模拟能谱:...
IP图像:...
图像对比:...
+[M函数](,图像对比)
散射角对比:...
能谱重建:修改了sigma的定义后效果很好...
Sn散射系数:...
+[M函数](,Sn散射系数)
部分能谱重建:...
测量散射系数:...

保存:...
+[新建阅读窗口](,保存)
%}

physics_constant;
addpath('Matlab/random')
addpath('Matlab/fitting')

In0=double(data_ex);
In0=In0/max(max(In0));
In=In0./max(In0);
Di=10;
ts_ex=linspace(-10e-2,10e-2,4000)/2.476;
Ds=zeros(1,size(In,2));
for i=i_max:Di:size(In,2)-Di
% for i=4000:10:7100
    in=sum(In(:,i:i+Di-1)');
    in(isnan(in))=0;
    [f,D,~,peak]=Gaussian_fitting(ts_ex,in,500);
    Ds(i)=D;
end


E_x1=E0;
E_x1(Ds==0)=[];
Ds(Ds==0)=[];

subplot(2,1,1)
imshow(In(:,end:-1:1))
colormap('hot')

subplot(2,1,2)
% plot(E_x1,Ds/sqrt(2),'o',y_810,z_810,'o-',y_790,z_790,'o-');
plot(E_x1,Ds/sqrt(2),'o',y_810,z_810,'o-',E_x,S/max(S)*0.03);
axis([0,3,0,0.04])


%{
运行指令"nautilus Matlab/fitting"
Nini, 打开函数拟合的Gaussian_fitting(节点)
+[M函数](,分析数据)
%}
## end
#357, 715:
%{
+[M函数](,分析数据)
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');
%{
+[M函数](,分析数据)
%}

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1);
y0=data(data(:,8)==11,2);
z0=data(data(:,8)==11,3);

% [I,X,Y]=show_dist_2D(x0,y0,300,300,[min(x0),max(x0),min(y0),max(y0)]);
% [I,X,Y]=show_dist_2D(x0,y0,300,300,[-200,200,-100,100]);

% plot(x2,y2,'b.')
% surf(X,Y,I);
axis equal;
xlabel('X [mm]')
ylabel('Y [mm]')
view(0,90)
shading interp

% plot(X(1,:),sum(I))


%{
记住"Matlab"
plot3(x0,y0,z0,'.')
axis equal
ys=linspace(min(y0),max(y0),300);
f=histc(y0,ys)';
plot(ys,f)
+[M函数](,分析数据)
%}
## end
#359, 940:
%{
+[M函数](,实验数据)
%}

physics_constant;
addpath('Matlab/spectrometer');
addpath('Matlab/funcs');
addpath('Matlab/random');

file_name="/media/xiantao/Elements/LWFA/LWFA_8_0/organized IP data/SR/12007/4.tiff";

N=1e5;
z_o=-0.264;
x_o=0;
z_m=2.5e-2;
D=5e-2;
B0=1.4820;
z=2.476;
q=e;

data_ex=imread(file_name);
I_x=max(data_ex);
I_0=sum(data_ex);
x_e=(1:length(I_x))-4000;
x_e=x_e*50e-6;
I_max=max(I_x(1:4000));
i_max=find(I_x(1:4000)==I_max);
x_g=x_e(i_max);

theta=atan((x_g-x_o)./(z-z_o));
x_m=x_o+((z_m-z_o).*(x_g-x_o))./(z-z_o);
beta=atan((x_e-x_m)./(z-z_m));
R=D./(sin(beta)-sin(theta));
E0=sqrt(B0.^2.*q.^2.*R.^2.*c.^2+m_e.^2.*c.^4);

E0=E0/e/1e9;
E=E0;
E_x=linspace(0.3,4,1000);
S=u_substitution(x_e(x_e>x_g),I_0(x_e>x_g),x_e(x_e>x_g),E0(x_e>x_g),E_x);
En=random_func_1D(1,N,E_x,S);

P=En*1e3;
Px=zeros(1,N);
Py=zeros(1,N);
Pz=sqrt(P.^2-Px.^2-Py.^2);

hist(Pz,100)


%{
plot(x_e(x_e>x_g),E0(x_e>x_g))
axis([0,0.2,0,4])
+[M函数](,实验数据)
%}
## end
#361, 495:
%{
+[M函数](,分析数据)

实验数据:...
保存:...
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1)*1e-3;
y0=data(data(:,8)==11,2)*1e-3;
z0=data(data(:,8)==11,3)*1e-3;

ys=linspace(min(y0),max(y0),300);
f=histc(y0,ys)';
f=f/max(f)*max(I_0);
plot(ys,f,x_e,I_0)


%{
记住"Matlab"
plot3(x0,y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#363, 596:
%{
+[M函数](,分析数据)

实验数据:...
模拟能谱:...

保存:...
+[新建阅读窗口](,保存)
%}

clf
addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1)*1e-3;
y0=data(data(:,8)==11,2)*1e-3;
z0=data(data(:,8)==11,3)*1e-3;


[I,X,Y]=show_dist_2D(y0,z0,300,300,[0,20e-2,-4e-2,4e-2]);

surf(X/1e-3,Y/1e-3,I);
axis equal;
xlabel('X [mm]')
ylabel('Y [mm]')
view(0,90)
shading interp
colormap('hot')


%{
记住"Matlab"
plot(y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#364, 16:
-0.003, 0.0, 0.0
## end
#366, 68:
0.0, 0.00084;
0.0, 0.00084;
0.0, 0.00084;
0.0, 0.00084;
0.0, 0.00084
## end
#368, 74:
-0.025, -0.025;
-0.025, -0.025;
0.025, 0.025;
0.025, 0.025;
-0.025, -0.025
## end
#370, 74:
-0.025, -0.025;
0.025, 0.025;
0.025, 0.025;
-0.025, -0.025;
-0.025, -0.025
## end
#372, 7:
0.00084
## end
#374, 4:
0.05
## end
#376, 4:
0.05
## end
#378, 3:
立方体
## end
#380, 16:
-90.0, 90.0, 0.0
## end
#383, 2:
Sn
## end
#385, 735:
%{
+[M函数](,分析数据)

实验数据:...
模拟能谱:...
IP图像:...
图像对比:...

保存:...
+[新建阅读窗口](,保存)
%}

addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1)*1e-3;
y0=data(data(:,8)==11,2)*1e-3;
z0=data(data(:,8)==11,3)*1e-3;


[I,X,Y]=show_dist_2D(y0,z0,300,300,[0,20e-2,-10e-2,10e-2]);

clf
subplot(1,2,1)
surf(X/1e-3,Y/1e-3,I);
axis equal;
xlabel('X [mm]')
ylabel('Y [mm]')
view(0,90)
shading interp
colormap('hot')


subplot(1,2,2)
imshow(data_ex/max(max(data_ex)))
axis([4000,8000,0,4000])
axis on
colormap('hot')


%{
记住"Matlab"
clf
plot(y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#388, 680:
%{
+[M函数](,分析数据)

实验数据:...
模拟能谱:...
IP图像:...
图像对比:...
散射角对比:...

保存:...
+[新建阅读窗口](,保存)
%}

addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1)*1e-3;
y0=data(data(:,8)==11,2)*1e-3;
z0=data(data(:,8)==11,3)*1e-3;

f_ex=sum(data_ex(:,4000:7800)');
f_ex=f_ex/max(f_ex);
xs_ex=linspace(-10e-2,10e-2,4000);
xs0=xs_ex(f_ex==max(f_ex));

xs=linspace(-10e-2,10e-2,300);
f=histc(z0,xs)';
f=f/max(f);
plot(xs,f,xs_ex-xs0,f_ex)
axis([-0.1,0.1,0,1.2])


%{
记住"Matlab"
clf
plot(y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#390, 1186:
%{
+[M函数](,能谱重建)
%}

addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

% total
x0=data(:,2);
y0=data(:,3);
E0=sqrt(data(:,4).^2+data(:,5).^2+data(:,6).^2);

% e^-
x0=data(data(:,8)==11,1)*1e-3;
y0=data(data(:,8)==11,2)*1e-3;
z0=data(data(:,8)==11,3)*1e-3;

f_ex=double(sum(data_ex(:,4000:7800)'));
f_ex=f_ex/max(f_ex);
ts_ex=linspace(-10e-2,10e-2,4000)/2.476;
ts0=ts_ex(f_ex==max(f_ex));
ts_ex=ts_ex-ts0;

zs=linspace(-10e-2,10e-2,300);
f=histc(z0,zs)';
f=f/max(f);
ts=zs/2.476;

f1=interp1(ts_ex,f_ex,ts);
f1(isnan(f1))=0;
f1=(f1+fliplr(f1))/2;

%{
+[M函数](,能谱重建)
%}


E=linspace(0.1,4,40)*1e3;
sigma=3.4707./E;
B=1./sigma.^2/2;

% g_f=@(x,A)f-abs(A)*exp(-B'*x.^2);
g_f=@(x,A)f1-A.^2*exp(-B'*x.^2);
Q_f=@(A)trapz(ts,g_f(ts,A).^2);

A0=ones(size(B))*0.4;
[fA1,df,steps]=fit_GradientD(A0,1e-3,Q_f,4000);

n=2;steps(n,:);
A=abs(fA1).^2;
g0=A*exp(-B'*ts.^2);

S_ex=S/trapz(E_x,S)*trapz(E/1e3,A);

clf
subplot(1,2,1)
plot(ts,g0,ts,f1,ts,f)
xlabel('\theta [mrad]')
% axis([-30e-3,30e-3,0,1.2])

subplot(1,2,2)
plot(E/1e3,A,'.-',E_x,S_ex*1.6)
xlabel('Energy [GeV]')



%{
记住"Matlab"
clf
plot(y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#392, 191:

参考1::file:///media/xiantao/Elements/paper/LWFA/Downer18.pdf#page=28
参考2::file:///media/xiantao/Elements/paper/PepperPot/Thomas13.pdf
+[打开网页](,参考2)

额, PP就是用2D阵列的小孔把电子挡住, 然后看空间不同位置处的电子发散角




## end
#394, 62:
file:///media/xiantao/Elements/paper/LWFA/Downer18.pdf#page=28
## end
#396, 59:
file:///media/xiantao/Elements/paper/PepperPot/Thomas13.pdf
## end
#399, 695:
%{
y
+[M函数](,Sn散射系数)
%}

addpath('Matlab/fitting');

file_name_data_out='output/paper/spectrometer/simulations/shadow_scatter/material_scatter/Sn.mat';

datas=load(file_name_data_out,'-mat');
list_d=datas.list_d;
list_Ds=datas.list_Ds/sqrt(2);
list_Ns=datas.list_Ns;
list_Es=datas.list_Es;

xs0=list_d'*ones(1,30);
ys0=list_Es;
zs0=list_Ds;

xs=[xs0(56:67,:);xs0(48:55,:)];
ys=[ys0(56:67,:);ys0(48:55,:)];
zs=[zs0(56:67,:);zs0(48:55,:)];


y_810=ys(xs==0.81e-3)'/1e3;
z_810=zs(xs==0.81e-3)';
y_790=ys(xs==0.79e-3)'/1e3;
z_790=zs(xs==0.79e-3)';
plot(y_810,z_810,'o-',y_790,z_790,'o-')
title('d=810 um')
xlabel('E [GeV]')

mean(y_810.*z_810)

%{
plot(list_d,'o')
plot(xs,zs,'o')
+[M函数](,Sn散射系数)
%}
## end
#401, 1279:
%{
+[M函数](,分析数据)
Nini, 打开函数拟合的fit_GradientD(节点)

实验数据:...
+[M函数](,实验数据)
+[新建阅读窗口](,实验数据)
模拟能谱:...
IP图像:...
图像对比:...
+[M函数](,图像对比)
散射角对比:...
能谱重建:...
Sn散射系数:...

保存:...
+[新建阅读窗口](,保存)
%}

addpath('Matlab/random')
addpath('Matlab/fitting')

data=readmatrix('output/ShadowSpectrometer/IP/12009.txt');

Ei_max=2.5;
Ei_min=2;
%{
+[M函数](,分析数据)
%}


Ei=find(E0>Ei_min&E0<Ei_max);
Ei=Ei(Ei>i_max);
In_part=double(sum(data_ex(:,Ei)));

f_ex=double(sum(data_ex(:,Ei)'));
f_ex=f_ex/max(f_ex);
ts_ex=linspace(-10e-2,10e-2,4000)/z;
ts0=ts_ex(f_ex==max(f_ex));
ts_ex=ts_ex-ts0;

zs=linspace(-10e-2,10e-2,300);
ts=zs/2.476;

f1=interp1(ts_ex,f_ex,ts);
f1(isnan(f1))=0;
% f1=(f1+fliplr(f1))/2;



E=linspace(0.1,3,40)*1e3;
sigma=3.4707./E;
B=1./sigma.^2;

% g_f=@(x,A)f-abs(A)*exp(-B'*x.^2);
g_f=@(x,A)f1-A.^2*exp(-B'*x.^2);
Q_f=@(A)trapz(ts,g_f(ts,A).^2);

A0=ones(size(B))*0.4;
[fA1,df,steps]=fit_GradientD(A0,1e-3,Q_f,4000);

n=2;steps(n,:);
A=abs(fA1).^2;
g0=A*exp(-B'*ts.^2);

S_ex=S;
S_ex(E_x<Ei_min)=0;
S_ex(E_x>Ei_max)=0;
S_ex=S_ex/trapz(E_x,S_ex)*trapz(E/1e3,A);

clf
subplot(1,2,1)
plot(ts,g0,ts,f1)
xlabel('\theta [mrad]')
% axis([-30e-3,30e-3,0,1.2])

subplot(1,2,2)
plot(E/1e3,A,'.-',E_x,S_ex)
xlabel('Energy [GeV]')



%{
记住"Matlab"
clf
plot(y0,z0,'.')
axis equal

+[M函数](,分析数据)
%}
## end
#403, 936:
%{
+[M函数](,分析数据)
Nini, 打开函数拟合的fit_GradientD(节点)

实验数据:...
+[M函数](,实验数据)
+[新建阅读窗口](,实验数据)
模拟能谱:...
IP图像:...
图像对比:...
+[M函数](,图像对比)
散射角对比:...
能谱重建:...
Sn散射系数:...
+[M函数](,Sn散射系数)
部分能谱重建:...
测量散射系数:...

保存:...
+[新建阅读窗口](,保存)
%}

physics_constant;
addpath('Matlab/random')
addpath('Matlab/fitting')

In0=double(data_ex);
In0=In0/max(max(In0));
In=In0./max(In0);
Di=10;
ts_ex=linspace(-10e-2,10e-2,4000)/2.476;
Ds=zeros(1,size(In,2));
for i=i_max:Di:size(In,2)-Di
% for i=4000:10:7100
    in=sum(In(:,i:i+Di-1)');
    in(isnan(in))=0;
    [f,D,~,peak]=Gaussian_fitting(ts_ex,in,500);
    Ds(i)=D;
end


E_x1=E0;
E_x1(Ds==0)=[];
Ds(Ds==0)=[];

subplot(2,1,1)
imshow(In(:,end:-1:1))
colormap('hot')

subplot(2,1,2)
% plot(E_x1,Ds/sqrt(2),'o',y_810,z_810,'o-',y_790,z_790,'o-');
plot(E_x1,Ds/sqrt(2),'o',y_810,z_810,'o-',E_x,S/max(S)*0.03);
axis([0,3,0,0.04])


%{
运行指令"nautilus Matlab/fitting"
Nini, 打开函数拟合的Gaussian_fitting(节点)
+[M函数](,分析数据)
%}
## end
### 结束