### 节点
地址, 的, 刚体运动, 目录, 的, 的, 节点数目统计, 的, 参考, 打开网页, 的, 刚体碰撞, html, 的, 示意图, 手, 小球1, 的, 小球2, 的, y, 的, x, 的, 空间点, 在, 半径, 的, 类型, 的, y, 的, x, 的, 空间点, 在, 半径, 的, 类型, 的, 方向, 朝向, 速度1, 的, 速度2, 的, 线段, 的, 线段, 的, 空间点, 在, 空间点, 在, y, 的, x, 的, 长度, 的, 类型, 的, y, 的, x, 的, 长度, 的, 类型, 的, 方向, 朝向, 样式, 箭头宽度, 的, 箭头长度, 的, 样式, 箭头宽度, 的, 箭头长度, 的, A点, 的, 空间点, 在, 接触, 的, 的, 在, 接触, 的, 接触平面, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, 方向, 朝向, 夹角1, 的, 夹角2, 的, y, 的, x, 的, 空间点, 在, 的, 样式, y, 的, x, 的, 样式, 空间点, 在, 的, [1]., 手, 表达式, 的, 公式, 打开网页, 手, 的, [2]., 的, [3]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 图1, 章, 的, 示意图2, 速度, 的, 位移, 的, 力, 的, 物体, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 方向, 朝向, 平面, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 方向, 朝向, 接触, 的, 接触, 的, 接触点, 的, 空间点, 在, 手, B点, 的, 空间点, 在, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, y, 的, x, 的, 空间点, 在, 长度, 的, 类型, 的, 样式, 箭头宽度, 的, 箭头长度, 的, 样式, 箭头宽度, 的, 箭头长度, 的, 方向, 朝向, 方向, 朝向, 样式, 箭头宽度, 的, 箭头长度, 的, 方向, 朝向, 的, 图2, 章, 的, 的, 半径, 的, 的, [4]., 的, [5]., 的, [6]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [7]., 表达式, 的, 公式, 的, [8]., 的, [9]., 的, [10]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [11]., 表达式, 的, 公式, 的, [12]., 的, [13]., 的, [14]., 表达式, 的, 公式, 表达式, 的, 公式, 手, 的, [15]., 的, [16]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [17]., 表达式, 的, 公式, 的, [18]., 的, [19]., 的, [20]., 的, [21]., 手, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [22]., 表达式, 的, 公式, 的, [23]., 表达式, 的, 公式, 的, [24]., 表达式, 的, 公式, 的, [25]., 表达式, 的, 公式, 的, [26]., 表达式, 的, 公式, 的, 无摩擦公式推导, 的, [1]., 手, 表达式, 的, 公式, 的, [2]., 的, [3]., 的, [4]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [5]., 的, [6]., 的, [7]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [8]., 表达式, 的, 公式, 的, [9]., 表达式, 的, 公式, 的, [10]., 的, [11]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [12]., 的, [13]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [14]., 的, [15]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [16]., 表达式, 的, 公式, 的, [17]., 的, [18]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [19]., 手, 表达式, 的, 公式, 的, [20]., 的, [21]., 的, [22]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [23]., 的, [24]., 的, [25]., 表达式, 的, 公式, 表达式, 的, 公式, 表达式, 的, 公式, 的, [26]., 的, [27]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [28]., 的, [29]., 表达式, 的, 公式, 表达式, 的, 公式, 的, [27]., 的, [28]., 表达式, 的, 公式, 表达式, 的, 公式, 的, 验证公式, M函数, 的, 守恒检测, 的, 碰撞场景, 物体A, 的, 物体B, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, y, 的, x, 的, 空间点, 在, 宽度, 的, 长度, 的, 样式, 类型, 的, 方向, 朝向, 方向, 朝向, 的, 代码, 的, 刚体运动, 的, rigid_bodies_collision, M函数, 的, 测试, M函数, 的, 地址, rigid_bodies_collision, 的, 记忆, rigid_bodies_collision, 的, 保存, 的, 刚体碰撞, 的, rigid_bodies_collision_2, M函数, 的, 地址, 的, 测试, rigid_bodies_collision_2, 的, rigid_bodies_collision_2, 
### 关联
#, 2#0, #, #, 3#2, 3#6, #, 2#8, #, #8, 2#11, #, 11#, 11#14, #, #14, #, 14#16, #, 14#18, #, 16#20, #, 16#22, #, 16#24, #, 16#26, #, 16#28, #, 18#30, #, 18#32, #, 18#34, #, 18#36, #, 18#38, #, 18#40, #, 14#42, #, 14#44, #, 42#46, #, 44#48, #, 42#50, #, 44#52, #, 42#54, #, 42#56, #, 42#58, #, 42#60, #, 44#62, #, 44#64, #, 44#66, #, 44#68, #, 44#70, 42#, #, 42#73, #, 42#75, 44#, #, 44#78, #, 44#80, #, 14#82, #, 82#84, #, 14#86, 14#89, 90#82, #, 14#90, #, 14#92, #, 92#94, #, 92#96, #, 92#98, #, 92#100, #, 92#102, #, 92#104, #, 14#106, #, 14#108, #, 106#110, #, 106#112, #, 106#114, 14#117, 106#, #, 108#118, #, 108#120, 108#, #, 108#123, 11#126, #, #11, #, 126#128, 126#, #8, #14, 11#134, #, 11#136, #, #, 134#137, 134#, #, 136#140, 136#, 11#144, #, 144#, 11#147, #, #, 147#148, #, 147#150, #, 147#152, #, #, 154#155, #, 154#157, #, 154#159, #, 154#161, #, 154#163, 154#, #, 154#166, #, 154#168, #, 147#170, #, 170#172, #, 170#174, #, 170#176, #, 170#178, #, 170#180, 170#, #, 170#183, #, 170#185, #, 147#187, #, 147#189, #, 147#191, #, 191#193, #11, #, 147#196, #, 196#198, #, 148#200, #, 148#202, #, 148#204, #, 148#206, #, 148#208, #, 150#210, #, 150#212, #, 150#214, #, 150#216, #, 150#218, #, 152#220, #, 152#222, #, 152#224, #, 152#226, #, 152#228, 148#, #, 148#231, #, 148#233, 152#, #, 152#236, #, 152#238, #, 152#240, #, 148#242, 150#, #, 150#245, #, 150#247, #, 150#249, 11#252, #, 252#, 147#255, 147#154, #, 154#256, 11#259, #, 11#261, #, 11#263, #, #, 259#264, 259#, #, 261#267, 261#, #, 263#270, 263#, 11#274, #, #, 274#275, 274#, 11#279, #, 11#281, #, 11#283, #, #, 279#284, 279#, #, 281#287, 281#, #, 283#290, 283#, 11#294, #, #, 294#295, 294#, 11#299, #, 11#301, #, 11#303, #, #, 299#304, 299#, #, 301#307, 301#, #11, 11#312, #, 11#314, #, #, 303#315, 303#, #, 312#318, 312#, #, 314#321, 314#, 11#325, #, #, 325#326, 325#, 11#330, #, 11#332, #, 11#334, #, 11#336, #, #11, #, 330#338, 330#, #, 332#341, 332#, #, 334#344, 334#, #, 336#347, 336#, 11#351, #, #, 351#352, 351#, 11#356, #, #, 356#357, 356#, 11#361, #, #, 361#362, 361#, 11#366, #, #, 366#367, 366#, 11#371, #, #, 371#372, 371#, 11#376, #, 376#378, #, #376, #, 378#380, 378#, 376#384, #, 376#386, #, 376#388, #, #, 384#389, 384#, #, 386#392, 386#, #, 388#395, 388#, 376#399, #, 376#401, #, 376#403, #, #, 399#404, 399#, #, 401#407, 401#, #, 403#410, 403#, 376#414, #, #, 414#415, 414#, 376#419, #, #, 419#420, 419#, 376#424, #, 376#426, #, #, 426#427, 426#, #, 424#430, 424#, 376#434, #, 376#436, #, #, 434#437, 434#, #, 436#440, 436#, 376#444, #, 376#446, #, #, 444#447, 444#, #, 446#450, 446#, 376#454, #, #, 454#455, 454#, 376#459, #, 376#461, #, #, 459#462, 459#, #, 461#465, 461#, 376#469, #, #535, #, 469#471, 469#, 376#475, #, 376#477, #, 376#479, #, #, 475#480, 475#, #, 477#483, 477#, #, 479#486, 479#, 376#490, #, 376#492, #, 376#494, #, #, 492#495, 492#, #, 490#498, 490#, #, 494#501, 494#, 376#505, #, 376#507, #, #, 505#508, 505#, #, 507#511, 507#, 376#515, #, 376#517, #, #, 515#518, 515#, #, 517#521, 517#, 11#525, #, 11#527, #, #, 525#528, 525#, #, 527#531, 527#, 11#535, #, 535#, 535#538, #, 11#540, #, #, 540#541, #, 540#543, #, 541#545, #, 541#547, #, 541#549, #, 541#551, #, 541#553, 541#, #, 541#556, #, 543#558, #, 543#560, #, 543#562, #, 543#564, #, 543#566, 543#, #, 543#569, #, 541#571, #, 543#573, 540#576, #, 535#578, #, 538#580, #, 580#, 580#583, #, 583#, 580#586, #, #580, 589#587, 3#, #, 535#592, #, 535#594, #, 594#596, #, 596#, 596#599, #, 596#601, #, #596, 589#602, #, 
### 内容
#0, 17:
文档\物理问题\刚体运动.ftxt
## end
#2, 161:
+[返回目录](,刚体运动)
地址::文档\物理问题\刚体运动.ftxt



参考::file:///C:/Users/cheng/Desktop/paper/Books/rigid_body_dynamics_simulation.pdf#page=8
+[打开网页](,参考)


刚体碰撞(html):...



## end
#3, 48:
刚体运动:...
创建于 20221215

节点数目统计::
+[设置结构](,节点数目统计)
## end
#8, 84:
file:///C:/Users/cheng/Desktop/paper/Books/rigid_body_dynamics_simulation.pdf#page=8
## end
#11, 4018:
<!--
+[H函数](,刚体碰撞)

示意图:...
示意图2:...
+[新建阅读窗口](,示意图2)

图1(章):...
图2(章):...
+[PPT场景转H代码](示意图2,图2)
-->

<h2>Conservation equations</h2>
To calculate the collision of two rigid bodies, we need to use following equations. 
Energy conservation,
%[1].
Momentum conservation,
%[2].
Angular momentum conservation,
%[3].

<h2>Rigid body collision overview</h2>
%图1<br>
<br>
The idea of solving rigid body collision problem is finding a state satisfying all conservation laws at the same time as the state after collision. There should be at least one solution, but might be multiple solutions. Because rigid body is an ideal model, which hide all interactions inside the body and source of reaction force to outside world as a result. <br>
Here I want to make a model including friction on the surface. The friction only functions when the contacting surfaces have relative motion between each other. There are two states for friction interactions. If the coeffcient of friction (COF) is too small, the relative motion exists after the collision. In the case, the direction of the friction force is determined by the COF. Otherwise, the COF could be too large so that the contacting surface stops move relatively after the collision. It should be reasonable to assume that the friction isn't activated once the relative motion stops.<br>
Here are at least two questions I should answer before I can solve the problem,<br>
<br>
1.If we know the interaction force, what is the relation between the energy change, momentum change and angular momentum change? <br>
2.What is the condition of no relative motion? What is the change of energy, momentum and angular momentum, if the state changes from relative motion to a relatively static state?<br>


<h3>Question #1</h3>
%图2<br><br>
Assume that the position vector to the contacting point is \(\vec{r}\), velocity is \(\vec{v}\) and force is \(\vec{F}\). Then the relation between momentum and angular momentum change is, 
%[4].
%[5].
%[6].
In a 2D scene, it means,
%[7].

The relation between the energy change and the momentum change is that, 
%[8].
OK, here it is. The energy change depends on how the velocity and the force changes in the middle. It's impossible to know for a rigid body model. <br>
I want to make a simple assumption that the force was constant and the velocity changed linearly. Then,
%[9].
%[10].
%[11].
Here the symbols can be confusing. The \(\perp\) is perpendicular to the position vector and the \(\parallel\) is parallel to the contacting surface. They are not neccessarily perpendicular to each other and can be same. 


<h3>Question #2</h3>
Let's put \(\vec{i}\) as an unit vector, then,
%[12].
Other parts of this question was answered above. 

<h2>Collision problems</h2>
Let's discuss about three cases in sequence. They are frictionless case, motion-friction-only case and motion-and-stay case. 
<h3>Frictionless case</h3>
Let's define four unit vectors. Vectors, \(\vec{i_{s,1}}\) and \(\vec{i_{s,2}}\), are parallel and perpendicular to the touching surface. And vectors, \(\vec{i_{r,1}}\) and \(\vec{i_{r,2}}\), are parallel and perpendicular to the position vector. <br>
For frictionless rigid bodies, the force is only along the direction, \(\vec{i_{s,2}}\). No energy will be lost because of friction. There are equations,
%[13].
%[14].
%[15].
(Notice that, in eqn.[15], the origin of the angular momentum is the contacting surface. So \(r_1\) and \(r_2\) should be negative.)
%[16].
%[17].
The eqn.[17] shouldn't be an independent equation. The last independent equation should be the force direction. <br>
We can combine eqn.[14-16], 
%[18].
%[19].
%[20].
%[21].
%[22].
%[23].

So they are all linear equations. The last equation is, 
%[24].
Combine them together,
%[25].
We can define some variables to simplify the equation,
%[26].

The result is,
%[27].
%[28].



<!--
[28].:
式(15)转换为"Matlab"

无摩擦公式推导:...
+[新建阅读窗口](,无摩擦公式推导)

验证公式(M函数):...
碰撞场景:...
+[新建阅读窗口](,验证公式)
将'验证公式'的"i_2\(r,2\)"替换为"i_2r"

Nini, 打开公式分析器(文件)
+[H函数](,刚体碰撞)
-->
## end
#14, 349:
+[显示PPT场景]"1"(,示意图)

有小球1和小球2
小球1是圆形"1"
小球2是圆形"1.3"

小球2距离小球1为(2.299,0)
小球2绕小球1旋转"45"

有速度1和速度2
速度1和速度2都是线段"1.5"
速度2在小球2的位置
速度2朝向"160"
速度1和速度2都是箭头"0.1,0.1"

有A点
A点是小球1和小球2的交点
显示标记点的X坐标

有'接触平面'
'接触平面'是线段"1"
'接触平面'在A点的位置
'接触平面'朝向"-45"

有夹角1和夹角2
夹角1是'接触平面'和速度1的夹角
夹角2是'接触平面'和速度2的夹角"0.2"
夹角1::\beta=45^\circ
夹角2::\theta=45^\circ




+[显示PPT场景]"1"(,示意图)
## end
#20, 2018:
0.0, 0.0634239196565645, 0.12659245357374926, 0.1892512443604102, 0.2511479871810792, 0.3120334456984872, 0.3716624556603275, 0.4297949120891716, 0.4861967361004687, 0.5406408174555976, 0.5929079290546405, 0.6427876096865393, 0.6900790114821119, 0.7345917086575333, 0.7761464642917568, 0.8145759520503357, 0.8497254299495144, 0.8814533634475821, 0.9096319953545183, 0.9341478602651068, 0.9549022414440739, 0.9718115683235417, 0.984807753012208, 0.9938384644612541, 0.998867339183008, 0.9998741276738751, 0.9968547759519424, 0.9898214418809327, 0.9788024462147787, 0.963842158559942, 0.9450008187146685, 0.9223542941045814, 0.8959937742913359, 0.8660254037844386, 0.8325698546347713, 0.7957618405308322, 0.7557495743542584, 0.712694171378863, 0.6667690005162915, 0.6181589862206053, 0.5670598638627705, 0.5136773915734063, 0.4582265217274105, 0.4009305354066135, 0.3420201433256687, 0.28173255684142984, 0.2203105327865405, 0.15800139597334995, 0.0950560433041829, 0.031727933498067566, -0.031727933498067566, -0.0950560433041829, -0.15800139597334995, -0.2203105327865405, -0.28173255684142984, -0.3420201433256687, -0.4009305354066135, -0.4582265217274105, -0.5136773915734063, -0.5670598638627705, -0.6181589862206053, -0.6667690005162915, -0.712694171378863, -0.7557495743542584, -0.795761840530832, -0.8325698546347715, -0.8660254037844386, -0.8959937742913358, -0.9223542941045815, -0.9450008187146685, -0.963842158559942, -0.9788024462147787, -0.9898214418809327, -0.9968547759519423, -0.9998741276738751, -0.998867339183008, -0.9938384644612541, -0.984807753012208, -0.9718115683235418, -0.954902241444074, -0.9341478602651065, -0.9096319953545182, -0.881453363447582, -0.8497254299495144, -0.8145759520503358, -0.776146464291757, -0.734591708657533, -0.6900790114821119, -0.6427876096865393, -0.5929079290546406, -0.5406408174555979, -0.4861967361004683, -0.42979491208917137, -0.37166245566032746, -0.3120334456984872, -0.25114798718107945, -0.18925124436041066, -0.1265924535737489, -0.06342391965656433, 0.0
## end
#22, 2004:
1.0, 0.9979866764718844, 0.9919548128307953, 0.9819286972627067, 0.9679487013963562, 0.9500711177409453, 0.9283679330160726, 0.9029265382866213, 0.8738493770697849, 0.8412535328311812, 0.8052702575310585, 0.766044443118978, 0.7237340381050702, 0.6785094115571322, 0.6305526670845225, 0.5800569095711982, 0.5272254676105025, 0.47227107477268265, 0.41541501300188644, 0.3568862215918718, 0.29692037532827475, 0.23575893550942728, 0.17364817766693033, 0.11083819990101094, 0.04758191582374241, -0.015865963834807883, -0.07924995685678848, -0.14231483827328523, -0.2048066680651906, -0.266473813690035, -0.32706796331742166, -0.38634512569312873, -0.44406661260577407, -0.5, -0.5539200638661103, -0.6056096871376666, -0.654860733945285, -0.7014748877063212, -0.7452644496757548, -0.7860530947427874, -0.8236765814298329, -0.8579834132349771, -0.8888354486549234, -0.9161084574320697, -0.9396926207859084, -0.9594929736144974, -0.975429786885407, -0.9874388886763943, -0.9954719225730846, -0.9994965423831851, -0.9994965423831851, -0.9954719225730846, -0.9874388886763943, -0.975429786885407, -0.9594929736144974, -0.9396926207859084, -0.9161084574320697, -0.8888354486549234, -0.8579834132349771, -0.8236765814298329, -0.7860530947427874, -0.7452644496757548, -0.7014748877063212, -0.654860733945285, -0.6056096871376668, -0.5539200638661101, -0.5, -0.4440666126057743, -0.3863451256931285, -0.32706796331742166, -0.2664738136900352, -0.2048066680651906, -0.14231483827328523, -0.07924995685678873, -0.01586596383480838, 0.04758191582374265, 0.1108381999010112, 0.17364817766693033, 0.23575893550942706, 0.29692037532827453, 0.3568862215918722, 0.41541501300188666, 0.47227107477268276, 0.5272254676105024, 0.5800569095711979, 0.6305526670845222, 0.6785094115571324, 0.7237340381050703, 0.766044443118978, 0.8052702575310585, 0.841253532831181, 0.8738493770697852, 0.9029265382866213, 0.9283679330160727, 0.9500711177409453, 0.9679487013963562, 0.9819286972627066, 0.9919548128307953, 0.9979866764718844, 1.0
## end
#24, 8:
0.0, 0.0
## end
#26, 3:
1.0
## end
#28, 2:
圆形
## end
#30, 2014:
0.0, 0.08245109555353386, 0.16457018964587405, 0.24602661766853326, 0.326492383335403, 0.40564347940803336, 0.4831611923584258, 0.5587333857159231, 0.6320557569306093, 0.7028330626922769, 0.7707803077710327, 0.835623892592501, 0.8971027149267455, 0.9549692212547933, 1.0089904035792838, 1.0589487376654365, 1.1046430589343688, 1.1458893724818566, 1.182521593960874, 1.2143922183446387, 1.241372913877296, 1.2633550388206043, 1.2802500789158704, 1.2919900037996304, 1.2985275409379105, 1.2998363659760377, 1.295911208737525, 1.2867678744452125, 1.2724431800792124, 1.2529948061279248, 1.228501064329069, 1.199060582335956, 1.1647919065787367, 1.12583302491977, 1.0823408110252026, 1.034490392690082, 0.982474446660536, 0.9265024227925219, 0.866799700671179, 0.8036066820867869, 0.7371778230216017, 0.6677806090454282, 0.5956944782456337, 0.5212096960285976, 0.44462618632336937, 0.3662523238938588, 0.28640369262250265, 0.20540181476535493, 0.12357285629543777, 0.04124631354748784, -0.04124631354748784, -0.12357285629543777, -0.20540181476535493, -0.28640369262250265, -0.3662523238938588, -0.44462618632336937, -0.5212096960285976, -0.5956944782456337, -0.6677806090454282, -0.7371778230216017, -0.8036066820867869, -0.866799700671179, -0.9265024227925219, -0.982474446660536, -1.0344903926900817, -1.082340811025203, -1.12583302491977, -1.1647919065787364, -1.199060582335956, -1.228501064329069, -1.2529948061279248, -1.2724431800792124, -1.2867678744452125, -1.295911208737525, -1.2998363659760377, -1.2985275409379105, -1.2919900037996304, -1.2802500789158704, -1.2633550388206043, -1.2413729138772962, -1.2143922183446385, -1.1825215939608738, -1.1458893724818566, -1.1046430589343688, -1.0589487376654367, -1.0089904035792843, -0.9549692212547929, -0.8971027149267455, -0.835623892592501, -0.7707803077710328, -0.7028330626922773, -0.6320557569306088, -0.5587333857159228, -0.4831611923584257, -0.40564347940803336, -0.3264923833354033, -0.24602661766853387, -0.16457018964587358, -0.08245109555353362, 0.0
## end
#32, 1989:
1.3, 1.2973826794134498, 1.289541256680034, 1.2765073064415187, 1.258333311815263, 1.235092453063229, 1.2068783129208944, 1.1738044997726078, 1.1360041901907205, 1.0936295926805355, 1.046851334790376, 0.9958577760546714, 0.9408542495365912, 0.8820622350242718, 0.8197184672098793, 0.7540739824425576, 0.6853931078936533, 0.6139523972044875, 0.5400395169024523, 0.46395208806943333, 0.38599648792675717, 0.3064866161622555, 0.22574263096700944, 0.14408965987131422, 0.06185649057086513, -0.02062575298525025, -0.10302494391382504, -0.1850092897552708, -0.26624866848474776, -0.3464159577970455, -0.4251883523126482, -0.5022486634010673, -0.5772865963875063, -0.65, -0.7200960830259434, -0.7872925932789666, -0.8513189541288705, -0.9119173540182175, -0.9688437845784812, -1.0218690231656236, -1.070779555858783, -1.1153784372054703, -1.1554860832514005, -1.1909409946616907, -1.221600407021681, -1.2473408656988467, -1.2680587229510292, -1.2836705552793126, -1.29411349934501, -1.2993455050981406, -1.2993455050981406, -1.29411349934501, -1.2836705552793126, -1.2680587229510292, -1.2473408656988467, -1.221600407021681, -1.1909409946616907, -1.1554860832514005, -1.1153784372054703, -1.070779555858783, -1.0218690231656236, -0.9688437845784812, -0.9119173540182175, -0.8513189541288705, -0.787292593278967, -0.7200960830259432, -0.65, -0.5772865963875066, -0.5022486634010671, -0.4251883523126482, -0.34641595779704576, -0.26624866848474776, -0.1850092897552708, -0.10302494391382536, -0.020625752985250892, 0.06185649057086545, 0.14408965987131456, 0.22574263096700944, 0.3064866161622552, 0.3859964879267569, 0.4639520880694339, 0.5400395169024527, 0.6139523972044876, 0.6853931078936532, 0.7540739824425573, 0.8197184672098788, 0.8820622350242722, 0.9408542495365915, 0.9958577760546714, 1.046851334790376, 1.0936295926805353, 1.1360041901907207, 1.1738044997726078, 1.2068783129208944, 1.235092453063229, 1.258333311815263, 1.2765073064415187, 1.289541256680034, 1.2973826794134498, 1.3
## end
#34, 38:
1.6256384899478729, 1.6256384899478729
## end
#36, 3:
1.3
## end
#38, 2:
圆形
## end
#40, 5:
225.0
## end
#50, 8:
0.0, 0.0
## end
#52, 38:
1.6263455967290592, 1.6263455967290592
## end
#54, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#56, 28:
0.0, 1.5, nan, 1.4, 1.5, 1.4
## end
#58, 3:
1.5
## end
#60, 2:
箭头
## end
#62, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#64, 28:
0.0, 1.5, nan, 1.4, 1.5, 1.4
## end
#66, 3:
1.5
## end
#68, 2:
箭头
## end
#70, 3:
160
## end
#72, 2:
曲线
## end
#73, 3:
0.1
## end
#75, 3:
0.1
## end
#77, 2:
曲线
## end
#78, 3:
0.1
## end
#80, 3:
0.1
## end
#84, 38:
0.7225775066283299, 0.6912173367559188
## end
#94, 8:
0.0, 0.0
## end
#96, 8:
0.0, 1.0
## end
#98, 38:
0.7225775066283299, 0.6912173367559188
## end
#100, 3:
1.0
## end
#102, 2:
线段
## end
#104, 3:
-45
## end
#106, 14:
\beta=45^\circ
## end
#108, 15:
\theta=45^\circ
## end
#110, 2125:
0.6912173367559188, 0.0, 0.0, nan, 0.17280433418897975, 0.1714279994839997, 0.17004087558873046, 0.16864304980480127, 0.16723461010738785, 0.16581564513967537, 0.16438624420727965, 0.16294649727262617, 0.16149649494928875, 0.16003632849628574, 0.15856608981233733, 0.15708587143008068, 0.1555957665102473, 0.15409586883579907, 0.15258627280602574, 0.15106707343060424, 0.1495383663236185, 0.14800024769754225, 0.14645281435718308, 0.14489616369359068, 0.14333039367792633, 0.14175560285529776, 0.14017189033855623, 0.1385793558020594, 0.13697809947539769, 0.1353682221370858, 0.13374982510822084, 0.13212301024610457, 0.13048787993783365, 0.12884453709385477, 0.12719308514148867, 0.1255336280184199, 0.12386627016615614, 0.12219111652345392, 0.12050827251971503, 0.11881784406835069, 0.11711993756011534, 0.1154146598564114, 0.11370211828256302, 0.11198242062106202, 0.11025567510478358, 0.10852199041017528, 0.10678147565041632, 0.10503424036855115, 0.1032803945305947, 0.10152004851861132, 0.09975331312376776, 0.09798029953936055, 0.09620111935381769, 0.09441588454367504, 0.09262470746652982, 0.0908277008539682, 0.08902497780447106, 0.0872166517762952, 0.08540283658033325, 0.08358364637295039, 0.08175919564879959, 0.07992959923361564, 0.07809497227698883, 0.07625543024511736, 0.07441108891353988, 0.07256206435984985, 0.07070847295638885, 0.06885043136292351, 0.0669880565193023, 0.06512146563809637, 0.06325077619722237, 0.06137610593254838, 0.05949757283048416, 0.05761529512055572, 0.055729391267964015, 0.05383997996612877, 0.05194718012921902, 0.050051110884668105, 0.04815189156567703, 0.04624964170370306, 0.04434448102093755, 0.042436529422770625, 0.04052590699024448, 0.038612733972495976, 0.036697130779188805, 0.03477921797293499, 0.032859116261706664, 0.03093694649123989, 0.02901282963742799, 0.027086886798708677, 0.025159239188441453, 0.023230008127279666, 0.021299315035534547, 0.019367281425533137, 0.01743402889397086, 0.015499679114258862, 0.013564353828865948, 0.01162817484165611, 0.009691264010223391, 0.007753743238221542, 0.005815734467692717, 0.003877359671391832, 0.0019387408451107767, 0.0
## end
#112, 2215:
-0.691217336755919, 0.0, -1.4137948433842489, nan, -0.17280433418897978, -0.17416979308108216, -0.1755242902222114, -0.17686774036417297, -0.17820005895403934, -0.17952116213947145, -0.18083096677399535, -0.18212939042223586, -0.1834163513651046, -0.18469176860494385, -0.18595556187062257, -0.1872076516225909, -0.18844795905788359, -0.18967640611508174, -0.19089291547922427, -0.19209741058667507, -0.19328981562994074, -0.19447005556244212, -0.1956380561032378, -0.19679374374169867, -0.19793704574213455, -0.199067890148372, -0.20018620578828328, -0.20129192227826587, -0.20238497002767097, -0.2034652802431849, -0.20453278493315818, -0.2055874169118843, -0.20662910980382865, -0.20765779804780626, -0.20867341690110708, -0.2096759024435717, -0.2106651915816138, -0.21164122205219105, -0.2126039324267246, -0.2135532621149634, -0.21448915136879965, -0.2154115412860278, -0.216320373814052, -0.21721559175354033, -0.21809713876202408, -0.21896495935744387, -0.2198189989216417, -0.22065920370379888, -0.22148552082381778, -0.2222978982756516, -0.22309628493057598, -0.2238806305404073, -0.22465088574066594, -0.22540700205368203, -0.22614893189164742, -0.22687662855961, -0.22759004625841306, -0.22828914008757772, -0.22897386604812797, -0.22964418104536155, -0.23030004289156025, -0.2309414103086469, -0.2315682429307817, -0.23218050130690404, -0.2327781469032144, -0.23336114210560033, -0.2339294502220035, -0.2344830354847287, -0.23502186305269546, -0.23554589901363054, -0.23605511038620208, -0.23654946512209607, -0.23702893210803277, -0.23749348116772473, -0.23794308306377676, -0.2383777094995252, -0.23879733312081952, -0.2392019275177435, -0.23959146722627755, -0.23996592772990133, -0.24032528546113685, -0.24066951780303114, -0.24099860309058063, -0.2413125206120943, -0.24161125061049682, -0.2418947742845725, -0.24216307379014834, -0.24241613224121727, -0.24265393371100075, -0.2428764632329512, -0.243083706801694, -0.24327565137390894, -0.24345228486915094, -0.24361359617061074, -0.24375957512581392, -0.24389021254726106, -0.24400550021300438, -0.24410543086716663, -0.24418999822039655, -0.2442591969502661, -0.24431302270160393, -0.24435147208677055, -0.24437454268587122, -0.24438223304690787
## end
#114, 24:
1.4137948433842489, -0.0
## end
#117, 2:
曲线
## end
#118, 2192:
-1.9874430593527967, 0.0, -1.0523147993796562, nan, -0.39748861187055917, -0.3957328667551572, -0.3939694344822171, -0.392198349306617, -0.39041964563189646, -0.3886333580095833, -0.3868395211385245, -0.38503816986421313, -0.38322933917810964, -0.38141306421696264, -0.3795893802621282, -0.377758322738881, -0.3759199272157292, -0.3740742294037225, -0.3722212651557584, -0.37036107046588507, -0.3684936814686042, -0.3666191344381664, -0.3647374657878686, -0.36284871206934577, -0.3609529099718616, -0.359050096321595, -0.35714030808092545, -0.3552235823477137, -0.3532999563545838, -0.35136946746819664, -0.34943215318852605, -0.34748805114813, -0.34553719911142, -0.3435796349739264, -0.34161539676156316, -0.33964452262988853, -0.33766705086336524, -0.33568301987461435, -0.3336924682036724, -0.3316954345172398, -0.32969195760793024, -0.32768207639351976, -0.32566582991618676, -0.3236432573417569, -0.32161439795894076, -0.3195792911785702, -0.3175379765328348, -0.31549049367451154, -0.31343688237619594, -0.3113771825295295, -0.3093114341444245, -0.3072396773482864, -0.3051619523852347, -0.3030782996153216, -0.3009887595137477, -0.29889337267007576, -0.2967921797874413, -0.2946852216817639, -0.29257253928095306, -0.29045417362411285, -0.2883301658607458, -0.28620055724995286, -0.28406538915963164, -0.28192470306567463, -0.2797785405511606, -0.27762694330554893, -0.27546995312387024, -0.2733076119059126, -0.27113996165540843, -0.2689670444792194, -0.26678890258651755, -0.2646055782879655, -0.262417113994895, -0.26022355221848237, -0.2580249355689239, -0.2558213067546067, -0.2536127085812798, -0.2513991839512233, -0.24918077586241338, -0.24695752740768828, -0.2447294817739114, -0.2424966822411312, -0.2402591721817422, -0.23801699505964002, -0.23577019442937974, -0.23351881393532814, -0.2312628973108164, -0.22900248837729054, -0.22673763104346056, -0.22446836930444647, -0.22219474724092514, -0.21991680901827237, -0.21763459888570713, -0.21534816117542954, -0.21305754030176116, -0.210762780760283, -0.2084639271269686, -0.20616102405732084, -0.20385411628550276, -0.20154324862347028, -0.19922846596009913, -0.19690981326031487, -0.19458733556422025, -0.19226107798621728
## end
#120, 2070:
1.9874430593527967, 0.0, 2.891211149453526, nan, 0.3974886118705594, 0.39923663572286683, 0.4009769043565109, 0.4027093839665683, 0.4044340408994187, 0.4061508416533979, 0.4078597528794492, 0.4095607413817708, 0.41125377411846054, 0.4129388182021585, 0.4146158409006846, 0.41628480963767567, 0.4179456919932173, 0.41959845570447407, 0.42124306866631644, 0.4228794989319439, 0.4245077147135059, 0.42612768438271886, 0.42773937647148164, 0.42934275967248503, 0.4309378028398221, 0.4325244749895911, 0.4341027453004991, 0.435672583114459, 0.43723395793718667, 0.43878683943879215, 0.44033119745436955, 0.4418670019845823, 0.4433942231962469, 0.44491283142291116, 0.44642279716543154, 0.44792409109254594, 0.44941668404144264, 0.45090054701832805, 0.4523756511989889, 0.45384196792935305, 0.4552994687260452, 0.45674812527694064, 0.4581879094417154, 0.4596187932523925, 0.4610407489138856, 0.46245374880453816, 0.46385776547666113, 0.46525277165706536, 0.46663874024759133, 0.468015644325636, 0.4693834571446758, 0.4707421521347852, 0.4720917029031543, 0.4734320832346004, 0.47476326709207783, 0.4760852286171833, 0.47739794213065845, 0.4787013821328887, 0.47999552330439865, 0.4812803405063437, 0.482555808780998, 0.4838219033522406, 0.48507859962603517, 0.4863258731909085, 0.48756369981842473, 0.4887920554636559, 0.4900109162656491, 0.49122025854788953, 0.49242005881876083, 0.4936102937720017, 0.494790940287158, 0.49596197543003195, 0.4971233764531282, 0.49827512079609493, 0.4994171860861627, 0.5005495501385789, 0.5016721909570383, 0.5027850867341108, 0.503888215851665, 0.5049815568812877, 0.5060650885847008, 0.5071387899141734, 0.5082026400129306, 0.509256618215559, 0.5103007040484079, 0.511334877229987, 0.5123591176713606, 0.5133734054765373, 0.5143777209428573, 0.5153720445613741, 0.5163563570172345, 0.5173306391900532, 0.518294872154284, 0.5192490371795885, 0.5201931157311981, 0.5211270894702762, 0.5220509402542728, 0.5229646501372776, 0.5238682013703685, 0.5247615764019565, 0.5256447578781263, 0.5265177286429737, 0.5273804717389391, 0.5282329704071358
## end
#122, 2:
曲线
## end
#123, 38:
-1.264865552724467, 2.6786603961087154
## end
#126, 135:
\frac{1}{2}\ m_{1}\ v_{1}^{2}+\frac{1}{2}\ I_{1}\ \omega_{1}^{2}+\frac{1}{2}\ m_{2}\ v_{2}^{2}+\frac{1}{2}\ I_{2}\ \omega_{2}^{2}=C_{1}
## end
#128, 101:
\frac{1}{2}*m_1*v_1^2+\frac{1}{2}*I_1*\omega_1^2+\frac{1}{2}*m_2*v_2^2+\frac{1}{2}*I_2*\omega_2^2=C_1
## end
#134, 43:
m_{1}\ \vec{v_{1}}+m_{2}\ \vec{v_{2}}=C_{2}
## end
#136, 81:
I_{1}\ \omega_{1}+r_{1}\ m_{1}\ v_{1}+I_{2}\ \omega_{2}+r_{2}\ m_{2}\ v_{2}=C_{3}
## end
#137, 31:
m_1*\vec{v_1}+m_2*\vec{v_2}=C_2
## end
#140, 53:
I_1*\omega_1+r_1*m_1*v_1+I_2*\omega_2+r_2*m_2*v_2=C_3
## end
#144, 3922:

<svg viewBox="0 0 1000 451.16169439019467" width=500 style="overflow: hidden;border: 2px solid #888888;"> 
<polyline points="519,336 519,328 518,321 517,314 515,307 513,300 511,293 508,286 504,280 501,274 497,268 492,262 487,256 482,251 477,247 471,242 465,238 458,234 452,231 445,228 438,226 431,224 424,223 417,222 410,221 402,221 395,221 388,222 381,223 373,225 366,227 360,230 353,233 347,236 340,240 334,244 329,249 323,254 318,259 314,265 309,271 305,277 302,283 299,290 296,296 294,303 292,310 291,318 290,325 289,332 289,339 290,347 291,354 292,361 294,368 296,375 299,382 302,388 305,395 309,401 314,407 318,412 323,418 329,423 334,427 340,431 347,435 353,439 360,442 366,444 373,447 381,448 388,450 395,450 402,451 410,451 417,450 424,449 431,447 438,445 445,443 452,440 458,437 465,433 471,429 477,425 482,420 487,415 492,410 497,404 501,398 504,392 508,385 511,378 513,372 515,365 517,357 518,350 519,343 519,336 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="485,255 492,261 499,267 507,273 515,278 523,282 532,286 541,290 550,293 559,295 568,297 578,298 587,298 597,298 606,298 616,296 625,294 634,292 643,289 652,285 660,281 669,276 677,271 684,266 691,259 698,253 705,246 711,238 716,231 721,223 725,214 729,206 732,197 735,188 737,178 739,169 740,160 740,150 740,141 739,131 738,122 736,113 733,103 730,94 726,86 722,77 717,69 712,61 706,54 700,47 693,40 686,34 679,28 671,23 663,18 654,13 645,10 636,7 627,4 618,2 609,1 599,0 590,0 580,0 571,1 561,2 552,5 543,7 534,11 526,15 517,19 509,24 501,29 494,35 487,42 480,48 474,56 469,63 463,71 459,79 455,88 451,97 448,106 445,115 444,124 442,134 442,143 442,152 442,162 443,171 445,181 447,190 450,199 454,208 458,216 462,225 467,233 473,240 479,248 485,255 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="404,336 576,336 565,341 576,336 565,330 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="591,149 429,90 442,88 429,90 438,99 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="487,256 568,338 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="487,256 567,336 404,336 547,316 547,316 546,316 546,316 546,317 546,317 546,317 546,317 545,317 545,317 545,318 545,318 545,318 545,318 545,318 544,318 544,319 544,319 544,319 544,319 544,319 544,319 544,320 543,320 543,320 543,320 543,320 543,321 543,321 543,321 543,321 542,321 542,322 542,322 542,322 542,322 542,322 542,322 542,323 542,323 541,323 541,323 541,323 541,324 541,324 541,324 541,324 541,324 541,325 541,325 541,325 540,325 540,326 540,326 540,326 540,326 540,326 540,327 540,327 540,327 540,327 540,327 540,328 540,328 540,328 539,328 539,328 539,329 539,329 539,329 539,329 539,330 539,330 539,330 539,330 539,330 539,331 539,331 539,331 539,331 539,332 539,332 539,332 539,332 539,332 539,333 539,333 539,333 539,333 539,334 539,334 539,334 539,334 538,334 538,335 538,335 538,335 538,335 538,336 538,336 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="487,256 259,28 591,149 304,74 305,73 305,73 305,73 305,73 305,73 306,72 306,72 306,72 306,72 306,72 307,71 307,71 307,71 307,71 307,70 307,70 308,70 308,70 308,70 308,69 308,69 309,69 309,69 309,68 309,68 309,68 309,68 310,68 310,67 310,67 310,67 310,67 311,66 311,66 311,66 311,66 311,66 311,65 312,65 312,65 312,65 312,64 312,64 312,64 312,64 313,63 313,63 313,63 313,63 313,62 313,62 314,62 314,62 314,62 314,61 314,61 314,61 314,61 315,60 315,60 315,60 315,60 315,59 315,59 315,59 316,59 316,58 316,58 316,58 316,58 316,57 316,57 316,57 317,57 317,56 317,56 317,56 317,55 317,55 317,55 317,55 318,54 318,54 318,54 318,54 318,53 318,53 318,53 318,53 318,52 319,52 319,52 319,52 319,51 319,51 319,51 319,51 319,50 319,50 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />

</svg>


## end
#147, 353:
+[显示PPT场景]"1"(,示意图2)

有'接触点', 物体和平面
有速度, 位移和力
有B点

物体是长方形(1,2)
物体朝向"90"
平面是长方形(1.5,5)
平面朝向"-90"

有'接触点'
接触点
'接触点'在(1,1)
平面在'接触点'的位置
平面和物体都在'接触点'的位置
B点距离'接触点'为(0,0.5)

速度, 位移和力都是线段"1"
速度和力都在'接触点'的位置
位移在B点的位置

位移是线段"0.5"和箭头"0.1,0.1"
速度是线段"0.5"和箭头"0.1,0.1"
力是线段"1"和箭头"0.1,0.1"
力朝向"70"
速度朝向"180"
位移朝向'接触点'

物体是圆形(0.5)
物体在B点的位置


+[修改天使]
+[显示PPT场景]"1"(,示意图2)
## end
#154, 3:
多边形
## end
#155, 2070:
0.0, 0.03171195982828225, 0.06329622678687463, 0.0946256221802051, 0.1255739935905396, 0.1560167228492436, 0.18583122783016376, 0.2148974560445858, 0.24309836805023435, 0.2703204087277988, 0.29645396452732026, 0.3213938048432696, 0.34503950574105596, 0.36729585432876666, 0.3880732321458784, 0.40728797602516786, 0.4248627149747572, 0.44072668172379104, 0.45481599767725917, 0.4670739301325534, 0.47745112072203694, 0.4859057841617708, 0.492403876506104, 0.49691923223062706, 0.499433669591504, 0.49993706383693753, 0.4984273879759712, 0.49491072094046634, 0.48940122310738937, 0.481921079279971, 0.47250040935733423, 0.4611771470522907, 0.44799688714566793, 0.4330127018922193, 0.41628492731738564, 0.3978809202654161, 0.3778747871771292, 0.3563470856894315, 0.33338450025814576, 0.30907949311030264, 0.28352993193138526, 0.25683869578670315, 0.22911326086370526, 0.20046526770330675, 0.17101007166283436, 0.14086627842071492, 0.11015526639327025, 0.07900069798667497, 0.04752802165209145, 0.015863966749033783, -0.015863966749033783, -0.04752802165209145, -0.07900069798667497, -0.11015526639327025, -0.14086627842071492, -0.17101007166283436, -0.20046526770330675, -0.22911326086370526, -0.25683869578670315, -0.28352993193138526, -0.30907949311030264, -0.33338450025814576, -0.3563470856894315, -0.3778747871771292, -0.397880920265416, -0.41628492731738576, -0.4330127018922193, -0.4479968871456679, -0.46117714705229074, -0.47250040935733423, -0.481921079279971, -0.48940122310738937, -0.49491072094046634, -0.49842738797597114, -0.49993706383693753, -0.499433669591504, -0.49691923223062706, -0.492403876506104, -0.4859057841617709, -0.477451120722037, -0.46707393013255327, -0.4548159976772591, -0.440726681723791, -0.4248627149747572, -0.4072879760251679, -0.3880732321458785, -0.3672958543287665, -0.34503950574105596, -0.3213938048432696, -0.2964539645273203, -0.27032040872779894, -0.24309836805023416, -0.21489745604458568, -0.18583122783016373, -0.1560167228492436, -0.12557399359053972, -0.09462562218020533, -0.06329622678687445, -0.03171195982828216, 0.0
## end
#157, 2042:
0.5, 0.4989933382359422, 0.49597740641539767, 0.49096434863135335, 0.4839743506981781, 0.47503555887047266, 0.4641839665080363, 0.45146326914331064, 0.43692468853489247, 0.4206267664155906, 0.40263512876552926, 0.383022221559489, 0.3618670190525351, 0.3392547057785661, 0.31527633354226126, 0.2900284547855991, 0.26361273380525124, 0.23613553738634133, 0.20770750650094322, 0.1784431107959359, 0.14846018766413738, 0.11787946775471364, 0.08682408883346517, 0.05541909995050547, 0.023790957911871205, -0.007932981917403941, -0.03962497842839424, -0.07115741913664261, -0.1024033340325953, -0.1332369068450175, -0.16353398165871083, -0.19317256284656437, -0.22203330630288703, -0.25, -0.27696003193305513, -0.3028048435688333, -0.3274303669726425, -0.3507374438531606, -0.3726322248378774, -0.3930265473713937, -0.41183829071491646, -0.42899170661748853, -0.4444177243274617, -0.45805422871603485, -0.4698463103929542, -0.4797464868072487, -0.4877148934427035, -0.49371944433819714, -0.4977359612865423, -0.49974827119159254, -0.49974827119159254, -0.4977359612865423, -0.49371944433819714, -0.4877148934427035, -0.4797464868072487, -0.4698463103929542, -0.45805422871603485, -0.4444177243274617, -0.42899170661748853, -0.41183829071491646, -0.3930265473713937, -0.3726322248378774, -0.3507374438531606, -0.3274303669726425, -0.3028048435688334, -0.2769600319330551, -0.25, -0.22203330630288715, -0.19317256284656426, -0.16353398165871083, -0.1332369068450176, -0.1024033340325953, -0.07115741913664261, -0.03962497842839437, -0.00793298191740419, 0.023790957911871326, 0.0554190999505056, 0.08682408883346517, 0.11787946775471353, 0.14846018766413727, 0.1784431107959361, 0.20770750650094333, 0.23613553738634138, 0.2636127338052512, 0.29002845478559897, 0.3152763335422611, 0.3392547057785662, 0.36186701905253515, 0.383022221559489, 0.40263512876552926, 0.4206267664155905, 0.4369246885348926, 0.45146326914331064, 0.46418396650803634, 0.47503555887047266, 0.4839743506981781, 0.4909643486313533, 0.49597740641539767, 0.4989933382359422, 0.5
## end
#159, 8:
1.0, 1.5
## end
#161, 3:
1.0
## end
#163, 3:
2.0
## end
#165, 3:
多边形
## end
#166, 2:
圆形
## end
#168, 2:
90
## end
#170, 5:
1.5,5
## end
#172, 20:
-2.5, 2.5, 2.5, -2.5
## end
#174, 18:
0.0, 0.0, 1.5, 1.5
## end
#176, 3:
1,1
## end
#178, 3:
1.5
## end
#180, 3:
5.0
## end
#182, 3:
多边形
## end
#183, 3:
长方形
## end
#185, 3:
-90
## end
#193, 3:
1,1
## end
#198, 8:
1.0, 1.5
## end
#200, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#202, 28:
0.0, 0.5, nan, 0.4, 0.5, 0.4
## end
#204, 8:
1.0, 1.0
## end
#206, 3:
0.5
## end
#208, 2:
箭头
## end
#210, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#212, 28:
0.0, 0.5, nan, 0.4, 0.5, 0.4
## end
#214, 8:
1.0, 1.5
## end
#216, 3:
0.5
## end
#218, 2:
箭头
## end
#220, 31:
0.0, 0.0, nan, -0.05, 0.0, 0.05
## end
#222, 28:
0.0, 1.0, nan, 0.9, 1.0, 0.9
## end
#224, 8:
1.0, 1.0
## end
#226, 3:
1.0
## end
#228, 2:
箭头
## end
#230, 2:
曲线
## end
#231, 3:
0.1
## end
#233, 3:
0.1
## end
#235, 2:
曲线
## end
#236, 3:
0.1
## end
#238, 3:
0.1
## end
#240, 2:
70
## end
#242, 3:
180
## end
#244, 2:
曲线
## end
#245, 3:
0.1
## end
#247, 3:
0.1
## end
#249, 5:
-90.0
## end
#252, 1478:

<svg viewBox="0 0 1000 451.1616943901948" width=500 style="overflow: hidden;border: 2px solid #888888;"> 
<polygon points="511,30 499,30 488,31 477,33 466,36 455,39 444,43 434,47 424,52 414,58 405,65 396,72 388,79 380,87 372,96 365,105 359,114 353,124 348,134 344,145 340,155 337,166 335,177 333,189 332,200 332,211 333,222 334,234 336,245 339,256 342,267 346,277 351,288 356,298 362,307 369,316 376,325 384,334 392,341 400,349 410,355 419,362 429,367 439,372 450,376 460,380 471,382 483,385 494,386 505,387 516,387 528,386 539,385 550,382 561,380 572,376 582,372 593,367 602,362 612,355 621,349 630,341 638,334 646,325 653,316 659,307 665,298 671,288 675,277 679,267 683,256 686,245 687,234 689,222 689,211 689,200 688,189 687,177 684,166 681,155 678,145 673,134 668,124 662,114 656,105 649,96 642,87 634,79 626,72 617,65 607,58 598,52 588,47 577,43 566,39 556,36 545,33 533,31 522,30 511,30 " style="fill:white;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polygon points="-381,387 1403,387 1403,922 -381,922 " style="fill:white;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="511,387 633,51 637,91 633,51 604,79 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="511,208 511,387 493,351 511,387 529,351 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />
<polyline points="511,387 332,387 368,369 332,387 368,405 " style="fill:none;stroke:black;stroke-width:5;fill-rule:evenodd;" />

</svg>


## end
#256, 3:
0.5
## end
#259, 50:
\vec{\Delta p}=\vec{F}\ \Delta t=m\ \vec{\Delta v}
## end
#261, 62:
\vec{\Delta L}=\vec{r}\times \vec{F}\ \Delta t=I\ \vec{\omega}
## end
#263, 47:
m\ \vec{r}\times \vec{\Delta v}=I\ \vec{\omega}
## end
#264, 48:
\vec{\Delta p}=\vec{F}*\Delta t=m*\vec{\Delta v}
## end
#267, 60:
\vec{\Delta L}=\vec{r}\times \vec{F}*\Delta t=I*\vec{\omega}
## end
#270, 45:
m*\vec{r}\times \vec{\Delta v}=I*\vec{\omega}
## end
#274, 32:
m\ r\ \Delta v_{\perp}=I\ \omega
## end
#275, 27:
m*r*\Delta v_\perp=I*\omega
## end
#279, 58:
\Delta E=\int_{t}^{t+\Delta t}{dt\ }{\vec{v}\cdot \vec{F}}
## end
#281, 74:
\Delta E=\int_{0}^{\Delta t}{dt\ }{\left(v_{1}-a\ t\right)\ F_{\parallel}}
## end
#283, 141:
\Delta E=\left(v_{1}\ \Delta t-\frac{1}{2}\ a\ \Delta t^{2}\right)\ F_{\parallel}=\left(\frac{v_{1}+v_{2}}{2}\right)\ \Delta t\ F_{\parallel}
## end
#284, 55:
\Delta E=\int_{t}^{t+\Delta t}{t}{\vec{v}\cdot \vec{F}}
## end
#287, 54:
\Delta E=\int_{0}^{\Delta t}{t}{(v_1-a*t)*F_\parallel}
## end
#290, 101:
\Delta E=(v_1*\Delta t-\frac{1}{2}*a*\Delta t^2)*F_\parallel=(\frac{v_1+v_2}{2})*\Delta t*F_\parallel
## end
#294, 91:
\Delta E=m\ \left(v_{\parallel}+\frac{\Delta v_{\parallel}}{2}\right)\ \Delta v_{\parallel}
## end
#295, 72:
\Delta E=m*(v_\parallel+\frac{\Delta v_\parallel}{2})*\Delta v_\parallel
## end
#299, 98:
v_{\parallel}=\vec{v}\cdot \vec{i_{\parallel}}+r\ \omega\ \vec{i_{\perp}}\cdot \vec{i_{\parallel}}
## end
#301, 99:
1/2\ m_{1}\ v_{1}^{2}+1/2\ I_{1}\ \omega^{2}+1/2\ m_{2}\ v_{2}^{2}+1/2\ I_{2}\ \omega_{2}^{2}=E_{0}
## end
#303, 49:
m_{1}\ \vec{v_{1}}+m_{2}\ \vec{v_{2}}=\vec{P_{0}}
## end
#304, 88:
v_\parallel=\vec{v}\cdot \vec{i_\parallel}+r*\omega*\vec{i_\perp}\cdot \vec{i_\parallel}
## end
#307, 67:
1/2*m_1*v_1^2+1/2*I_1*\omega^2+1/2*m_2*v_2^2+1/2*I_2*\omega_2^2=E_0
## end
#312, 143:
I_{1}\ \omega_{1}+I_{2}\ \omega_{2}-m_{1}\ r_{1}\ \vec{v_{1}}\cdot \vec{i_{1}\ _{r,2}}-m_{2}\ r_{2}\ \vec{v_{2}}\cdot \vec{i_{2}\ _{r,2}}=L_{0}
## end
#314, 82:
m_{1}\ r_{1}\ \vec{\Delta v_{1}}\cdot \vec{i_{1}\ _{r,2}}=I_{1}\ \Delta \omega_{1}
## end
#315, 37:
m_1*\vec{v_1}+m_2*\vec{v_2}=\vec{P_0}
## end
#318, 105:
I_1*\omega_1+I_2*\omega_2-m_1*r_1*\vec{v_1}\cdot \vec{i_1[r,2]}-m_2*r_2*\vec{v_2}\cdot \vec{i_2[r,2]}=L_0
## end
#321, 64:
m_1*r_1*\vec{\Delta v_1}\cdot \vec{i_1[r,2]}=I_1*\Delta \omega_1
## end
#325, 82:
m_{2}\ r_{2}\ \vec{\Delta v_{2}}\cdot \vec{i_{2}\ _{r,2}}=I_{2}\ \Delta \omega_{2}
## end
#326, 64:
m_2*r_2*\vec{\Delta v_2}\cdot \vec{i_2[r,2]}=I_2*\Delta \omega_2
## end
#330, 49:
m_{1}\ v_{1}\ _{x}+m_{2}\ v_{2}\ _{x}=P_{0}\ _{x}
## end
#332, 49:
m_{1}\ v_{1}\ _{y}+m_{2}\ v_{2}\ _{y}=P_{0}\ _{y}
## end
#334, 213:
I_{1}\ \omega_{1}+I_{2}\ \omega_{2}-m_{1}\ r_{1}\ v_{1}\ _{x}\ i_{1}\ _{r,2,x}-m_{1}\ r_{1}\ v_{1}\ _{y}\ i_{1}\ _{r,2,y}-m_{2}\ r_{2}\ v_{2}\ _{x}\ i_{2}\ _{r,2,x}-m_{2}\ r_{2}\ v_{2}\ _{y}\ i_{2}\ _{r,2,y}=L_{0}
## end
#336, 172:
m_{1}\ r_{1}\ \left(v_{1}\ _{x}-u_{1}\ _{x}\right)\ i_{1}\ _{r,2,x}+m_{1}\ r_{1}\ \left(v_{1}\ _{y}-u_{1}\ _{y}\right)\ i_{1}\ _{r,2,y}=I_{1}\ \left(\omega_{1}-w_{1}\right)
## end
#338, 28:
m_1*v_1[x]+m_2*v_2[x]=P_0[x]
## end
#341, 28:
m_1*v_1[y]+m_2*v_2[y]=P_0[y]
## end
#344, 133:
I_1*\omega_1+I_2*\omega_2-m_1*r_1*v_1[x]*i_1[r,2,x]-m_1*r_1*v_1[y]*i_1[r,2,y]-m_2*r_2*v_2[x]*i_2[r,2,x]-m_2*r_2*v_2[y]*i_2[r,2,y]=L_0
## end
#347, 88:
m_1*r_1*(v_1[x]-u_1[x])*i_1[r,2,x]+m_1*r_1*(v_1[y]-u_1[y])*i_1[r,2,y]=I_1*(\omega_1-w_1)
## end
#351, 114:
m_{1}\ r_{1}\ v_{1}\ _{x}\ i_{1}\ _{r,2,x}+m_{1}\ r_{1}\ v_{1}\ _{y}\ i_{1}\ _{r,2,y}-I_{1}\ \omega_{1}=C_{\Delta}
## end
#352, 73:
m_1*r_1*v_1[x]*i_1[r,2,x]+m_1*r_1*v_1[y]*i_1[r,2,y]-I_1*\omega_1=C_\Delta
## end
#356, 109:
C_{\Delta}=m_{1}\ r_{1}\ u_{1}\ _{x}\ i_{1}\ _{r,2,x}+m_{1}\ r_{1}\ u_{1}\ _{y}\ i_{1}\ _{r,2,y}-I_{1}\ w_{1}
## end
#357, 68:
C_\Delta=m_1*r_1*u_1[x]*i_1[r,2,x]+m_1*r_1*u_1[y]*i_1[r,2,y]-I_1*w_1
## end
#361, 115:
\begin{cases}
v_{1}\ _{x}-u_{1}\ _{x}=k\ i_{1}\ _{s,2,x}\\ v_{1}\ _{y}-u_{1}\ _{y}=k\ i_{1}\ _{s,2,y}
\end{cases}


## end
#362, 60:
\eqs{v_1[x]-u_1[x]=k*i_1[s,2,x];
v_1[y]-u_1[y]=k*i_1[s,2,y]}
## end
#366, 630:
\begin{cases}
m_{1}\ v_{1}\ _{x}+m_{2}\ v_{2}\ _{x}=P_{0}\ _{x}\\ m_{1}\ v_{1}\ _{y}+m_{2}\ v_{2}\ _{y}=P_{0}\ _{y}\\ I_{1}\ \omega_{1}+I_{2}\ \omega_{2}-\left(m_{1}\ r_{1}\ i_{1}\ _{r,2,x}\right)\ v_{1}\ _{x}-\left(m_{1}\ r_{1}\ i_{1}\ _{r,2,y}\right)\ v_{1}\ _{y}-\left(m_{2}\ r_{2}\ i_{2}\ _{r,2,x}\right)\ v_{2}\ _{x}-\left(m_{2}\ r_{2}\ i_{2}\ _{r,2,y}\right)\ v_{2}\ _{y}=L_{0}\\ \left(m_{1}\ r_{1}\ i_{1}\ _{r,2,x}\right)\ v_{1}\ _{x}+\left(m_{1}\ r_{1}\ i_{1}\ _{r,2,y}\right)\ v_{1}\ _{y}-I_{1}\ \omega_{1}=C_{\Delta}\\ v_{1}\ _{x}-u_{1}\ _{x}=k\ i_{1}\ _{s,2,x}\\ v_{1}\ _{y}-u_{1}\ _{y}=k\ i_{1}\ _{s,2,y}
\end{cases}


## end
#367, 342:
\eqs{m_1*v_1[x]+m_2*v_2[x]=P_0[x];
m_1*v_1[y]+m_2*v_2[y]=P_0[y];
I_1*\omega_1+I_2*\omega_2-(m_1*r_1*i_1[r,2,x])*v_1[x]-(m_1*r_1*i_1[r,2,y])*v_1[y]-(m_2*r_2*i_2[r,2,x])*v_2[x]-(m_2*r_2*i_2[r,2,y])*v_2[y]=L_0;
(m_1*r_1*i_1[r,2,x])*v_1[x]+(m_1*r_1*i_1[r,2,y])*v_1[y]-I_1*\omega_1=C_\Delta;
v_1[x]-u_1[x]=k*i_1[s,2,x];
v_1[y]-u_1[y]=k*i_1[s,2,y]}
## end
#371, 428:
\begin{cases}
m_{1}\ v_{1}\ _{x}+m_{2}\ v_{2}\ _{x}=P_{0}\ _{x}\\ m_{1}\ v_{1}\ _{y}+m_{2}\ v_{2}\ _{y}=P_{0}\ _{y}\\ I_{1}\ \omega_{1}+I_{2}\ \omega_{2}-A\ _{x}\ v_{1}\ _{x}-A\ _{y}\ v_{1}\ _{y}-B\ _{x}\ v_{2}\ _{x}-B\ _{y}\ v_{2}\ _{y}=L_{0}\\ A\ _{x}\ v_{1}\ _{x}+A\ _{y}\ v_{1}\ _{y}-I_{1}\ \omega_{1}=C_{\Delta}\\ v_{1}\ _{x}-u_{1}\ _{x}=k_{1}\ i_{1}\ _{s,2,x}\\ v_{1}\ _{y}-u_{1}\ _{y}=k_{1}\ i_{1}\ _{s,2,y}
\end{cases}


## end
#372, 250:
\eqs{m_1*v_1[x]+m_2*v_2[x]=P_0[x];
m_1*v_1[y]+m_2*v_2[y]=P_0[y];
I_1*\omega_1+I_2*\omega_2-A[x]*v_1[x]-A[y]*v_1[y]-B[x]*v_2[x]-B[y]*v_2[y]=L_0;
A[x]*v_1[x]+A[y]*v_1[y]-I_1*\omega_1=C_\Delta;
v_1[x]-u_1[x]=k_1*i_1[s,2,x];
v_1[y]-u_1[y]=k_1*i_1[s,2,y]}
## end
#376, 1447:
<!--
+[H函数](,无摩擦公式推导)
-->

Solve the following equations,
%[1].

We will use \(k_1\) to represent all variables. First, let's do that for \(v_1\ _x\), \(v_1\ _y\) and \(\omega_1\). 
%[2].
%[3].
%[4].
%[5].
%[6].
%[7].

As a result, we have,
%[8].
And the definition of variables is,
%[9].

Those equations are same for the other object,
%[10].
%[11].

Then we can build up an equation for \(k_1\) and \(k_2\) from eqn.[1.3],
%[12].
%[13].
%[14].
%[15].
%[16].
(The above equations are not correct. Because I used the contact point as the origin of angular momentum, it means that torque in the collision is zero. The eqn.[12] is also wrong. Please check the correction of eqn.[15] in the last page. )<br>

OK, then we can use the energy conservation to solve \(k_1\) and \(k_2\). 
%[17].
%[18].
%[19].

Because there must be a solution like, \(k_1=0\) and \(k_2=0\), the following equations must be true,
%[20].
%[21].

And,
%[22].
%[23].
%[24].
%[25].

The parameters are, 
%[26].
Then,
%[27].

OK, we can simplify the eqn.[25] as the following,
%[28].
%[29].

<!--
[29].:
式(25)转换为"表达式"

将"k_1=\frac{2*(m_2*\vec{u_2}\cdot \vec{i_2[s,2]}+I_2*w_2*B_1)*m_1/m_2-2*(m_1*\vec{u_1}\cdot \vec{i_1[s,2]}+I_1*w_1*A_1)}{(m_1+I_1*A_1^{2})+(m_2+I_2*B_1^{2})*m_1^2/m_2^2}"记作为式(28)

将"\eqs{\vec{A}=m_1*r_1*\vec{i_1[r,2]};
\vec{B}=m_2*r_2*\vec{i_2[r,2]};
A_1=\vec{A}\cdot \vec{i_1[s,2]}/I_1;
B_1=\vec{B}\cdot \vec{i_2[s,2]}/I_2}"记作为式(29)




+[H函数](,无摩擦公式推导)
-->
## end
#378, 428:
\begin{cases}
m_{1}\ v_{1}\ _{x}+m_{2}\ v_{2}\ _{x}=P_{0}\ _{x}\\ m_{1}\ v_{1}\ _{y}+m_{2}\ v_{2}\ _{y}=P_{0}\ _{y}\\ I_{1}\ \omega_{1}+I_{2}\ \omega_{2}+A\ _{x}\ v_{1}\ _{x}+A\ _{y}\ v_{1}\ _{y}+B\ _{x}\ v_{2}\ _{x}+B\ _{y}\ v_{2}\ _{y}=L_{0}\\ A\ _{x}\ v_{1}\ _{x}+A\ _{y}\ v_{1}\ _{y}-I_{1}\ \omega_{1}=C_{\Delta}\\ v_{1}\ _{x}-u_{1}\ _{x}=k_{1}\ i_{1}\ _{s,2,x}\\ v_{1}\ _{y}-u_{1}\ _{y}=k_{1}\ i_{1}\ _{s,2,y}
\end{cases}


## end
#380, 250:
\eqs{m_1*v_1[x]+m_2*v_2[x]=P_0[x];
m_1*v_1[y]+m_2*v_2[y]=P_0[y];
I_1*\omega_1+I_2*\omega_2+A[x]*v_1[x]+A[y]*v_1[y]+B[x]*v_2[x]+B[y]*v_2[y]=L_0;
A[x]*v_1[x]+A[y]*v_1[y]-I_1*\omega_1=C_\Delta;
v_1[x]-u_1[x]=k_1*i_1[s,2,x];
v_1[y]-u_1[y]=k_1*i_1[s,2,y]}
## end
#384, 46:
v_{1}\ _{x}=k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}
## end
#386, 46:
v_{1}\ _{y}=k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}
## end
#388, 70:
A\ _{x}\ v_{1}\ _{x}+A\ _{y}\ v_{1}\ _{y}-I_{1}\ \omega_{1}=C_{\Delta}
## end
#389, 28:
v_1[x]=k_1*i_1[s,2,x]+u_1[x]
## end
#392, 28:
v_1[y]=k_1*i_1[s,2,y]+u_1[y]
## end
#395, 45:
A[x]*v_1[x]+A[y]*v_1[y]-I_1*\omega_1=C_\Delta
## end
#399, 142:
A\ _{x}\ \left(k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}\right)+A\ _{y}\ \left(k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}\right)-I_{1}\ \omega_{1}=C_{\Delta}
## end
#401, 142:
I_{1}\ \omega_{1}=A\ _{x}\ \left(k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}\right)+A\ _{y}\ \left(k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}\right)-C_{\Delta}
## end
#403, 153:
I_{1}\ \omega_{1}=\left(A\ _{x}\ i_{1}\ _{s,2,x}+A\ _{y}\ i_{1}\ _{s,2,y}\right)\ k_{1}+\left(A\ _{x}\ u_{1}\ _{x}+A\ _{y}\ u_{1}\ _{y}-C_{\Delta}\right)
## end
#404, 79:
A[x]*(k_1*i_1[s,2,x]+u_1[x])+A[y]*(k_1*i_1[s,2,y]+u_1[y])-I_1*\omega_1=C_\Delta
## end
#407, 79:
I_1*\omega_1=A[x]*(k_1*i_1[s,2,x]+u_1[x])+A[y]*(k_1*i_1[s,2,y]+u_1[y])-C_\Delta
## end
#410, 85:
I_1*\omega_1=(A[x]*i_1[s,2,x]+A[y]*i_1[s,2,y])*k_1+(A[x]*u_1[x]+A[y]*u_1[y]-C_\Delta)
## end
#414, 155:
\begin{cases}
v_{1}\ _{x}=k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}\\ v_{1}\ _{y}=k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}\\ \omega_{1}=A_{1}\ k_{1}+A_{2}
\end{cases}


## end
#415, 86:
\eqs{v_1[x]=k_1*i_1[s,2,x]+u_1[x];
v_1[y]=k_1*i_1[s,2,y]+u_1[y];
\omega_1=A_1*k_1+A_2}
## end
#419, 182:
\begin{cases}
A_{1}=\left(A\ _{x}\ i_{1}\ _{s,2,x}+A\ _{y}\ i_{1}\ _{s,2,y}\right)/I_{1}\\ A_{2}=\left(A\ _{x}\ u_{1}\ _{x}+A\ _{y}\ u_{1}\ _{y}-C_{\Delta}\right)/I_{1}
\end{cases}


## end
#420, 91:
\eqs{A_1=(A[x]*i_1[s,2,x]+A[y]*i_1[s,2,y])/I_1;
A_2=(A[x]*u_1[x]+A[y]*u_1[y]-C_\Delta)/I_1}
## end
#424, 155:
\begin{cases}
v_{2}\ _{x}=k_{2}\ i_{2}\ _{s,2,x}+u_{2}\ _{x}\\ v_{2}\ _{y}=k_{2}\ i_{2}\ _{s,2,y}+u_{2}\ _{y}\\ \omega_{2}=B_{1}\ k_{2}+B_{2}
\end{cases}


## end
#426, 182:
\begin{cases}
B_{1}=\left(B\ _{x}\ i_{2}\ _{s,2,x}+B\ _{y}\ i_{2}\ _{s,2,y}\right)/I_{2}\\ B_{2}=\left(B\ _{x}\ u_{2}\ _{x}+B\ _{y}\ u_{2}\ _{y}-D_{\Delta}\right)/I_{2}
\end{cases}


## end
#427, 91:
\eqs{B_1=(B[x]*i_2[s,2,x]+B[y]*i_2[s,2,y])/I_2;
B_2=(B[x]*u_2[x]+B[y]*u_2[y]-D_\Delta)/I_2}
## end
#430, 86:
\eqs{v_2[x]=k_2*i_2[s,2,x]+u_2[x];
v_2[y]=k_2*i_2[s,2,y]+u_2[y];
\omega_2=B_1*k_2+B_2}
## end
#434, 125:
I_{1}\ \omega_{1}+I_{2}\ \omega_{2}+A\ _{x}\ v_{1}\ _{x}+A\ _{y}\ v_{1}\ _{y}+B\ _{x}\ v_{2}\ _{x}+B\ _{y}\ v_{2}\ _{y}=L_{0}
## end
#436, 311:
I_{1}\ \left(A_{1}\ k_{1}+A_{2}\right)+I_{2}\ \left(B_{1}\ k_{2}+B_{2}\right)+A\ _{x}\ \left(k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}\right)+A\ _{y}\ \left(k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}\right)+B\ _{x}\ \left(k_{2}\ i_{2}\ _{s,2,x}+u_{2}\ _{x}\right)+B\ _{y}\ \left(k_{2}\ i_{2}\ _{s,2,y}+u_{2}\ _{y}\right)=L_{0}
## end
#437, 77:
I_1*\omega_1+I_2*\omega_2+A[x]*v_1[x]+A[y]*v_1[y]+B[x]*v_2[x]+B[y]*v_2[y]=L_0
## end
#440, 155:
I_1*(A_1*k_1+A_2)+I_2*(B_1*k_2+B_2)+A[x]*(k_1*i_1[s,2,x]+u_1[x])+A[y]*(k_1*i_1[s,2,y]+u_1[y])+B[x]*(k_2*i_2[s,2,x]+u_2[x])+B[y]*(k_2*i_2[s,2,y]+u_2[y])=L_0
## end
#444, 361:
\left(I_{1}\ A_{1}\ k_{1}+I_{1}\ A_{2}\right)+\left(A\ _{x}\ k_{1}\ i_{1}\ _{s,2,x}+A\ _{x}\ u_{1}\ _{x}\right)+\left(A\ _{y}\ k_{1}\ i_{1}\ _{s,2,y}+A\ _{y}\ u_{1}\ _{y}\right)+\left(I_{2}\ B_{1}\ k_{2}+I_{2}\ B_{2}\right)+\left(B\ _{x}\ k_{2}\ i_{2}\ _{s,2,x}+B\ _{x}\ u_{2}\ _{x}\right)+\left(B\ _{y}\ k_{2}\ i_{2}\ _{s,2,y}+B\ _{y}\ u_{2}\ _{y}\right)=L_{0}
## end
#446, 176:
\left(I_{1}\ A_{1}+A\ _{x}\ i_{1}\ _{s,2,x}+A\ _{y}\ i_{1}\ _{s,2,y}\right)\ k_{1}+\left(I_{2}\ B_{1}+B\ _{x}\ i_{2}\ _{s,2,x}+B\ _{y}\ i_{2}\ _{s,2,y}\right)\ k_{2}=E_{\Delta}
## end
#447, 183:
(I_1*A_1*k_1+I_1*A_2)+(A[x]*k_1*i_1[s,2,x]+A[x]*u_1[x])+(A[y]*k_1*i_1[s,2,y]+A[y]*u_1[y])+(I_2*B_1*k_2+I_2*B_2)+(B[x]*k_2*i_2[s,2,x]+B[x]*u_2[x])+(B[y]*k_2*i_2[s,2,y]+B[y]*u_2[y])=L_0
## end
#450, 100:
(I_1*A_1+A[x]*i_1[s,2,x]+A[y]*i_1[s,2,y])*k_1+(I_2*B_1+B[x]*i_2[s,2,x]+B[y]*i_2[s,2,y])*k_2=E_\Delta
## end
#454, 152:
E_{\Delta}=L_{0}-\left(I_{1}\ A_{2}+A\ _{x}\ u_{1}\ _{x}+A\ _{y}\ u_{1}\ _{y}\right)-\left(I_{2}\ B_{2}+B\ _{x}\ u_{2}\ _{x}+B\ _{y}\ u_{2}\ _{y}\right)
## end
#455, 80:
E_\Delta=L_0-(I_1*A_2+A[x]*u_1[x]+A[y]*u_1[y])-(I_2*B_2+B[x]*u_2[x]+B[y]*u_2[y])
## end
#459, 167:
1/2\ m_{1}\ v_{1}\ _{x}^{2}+1/2\ m_{1}\ v_{1}\ _{y}^{2}+1/2\ I_{1}\ \omega^{2}+1/2\ m_{2}\ v_{2}\ _{x}^{2}+1/2\ m_{2}\ v_{2}\ _{y}^{2}+1/2\ I_{2}\ \omega_{2}^{2}=E_{0}
## end
#461, 330:
m_{1}\ \left(k_{1}\ i_{1}\ _{s,2,x}+u_{1}\ _{x}\right)^{2}+m_{1}\ \left(k_{1}\ i_{1}\ _{s,2,y}+u_{1}\ _{y}\right)^{2}+I_{1}\ \left(A_{1}\ k_{1}+A_{2}\right)^{2}+m_{2}\ \left(k_{2}\ i_{2}\ _{s,2,x}+u_{2}\ _{x}\right)^{2}+m_{2}\ \left(k_{2}\ i_{2}\ _{s,2,y}+u_{2}\ _{y}\right)^{2}+I_{2}\ \left(B_{1}\ k_{2}+B_{2}\right)^{2}=2\ E_{0}
## end
#462, 119:
1/2*m_1*v_1[x]^{2}+1/2*m_1*v_1[y]^{2}+1/2*I_1*\omega^{2}+1/2*m_2*v_2[x]^{2}+1/2*m_2*v_2[y]^{2}+1/2*I_2*\omega_2^{2}=E_0
## end
#465, 177:
m_1*(k_1*i_1[s,2,x]+u_1[x])^{2}+m_1*(k_1*i_1[s,2,y]+u_1[y])^{2}+I_1*(A_1*k_1+A_2)^{2}+m_2*(k_2*i_2[s,2,x]+u_2[x])^{2}+m_2*(k_2*i_2[s,2,y]+u_2[y])^{2}+I_2*(B_1*k_2+B_2)^{2}=2*E_0
## end
#469, 489:
m_{1}\ \left(i_{1}\ _{s,2,x}^{2}\ k_{1}^{2}+2\ u_{1}\ _{x}\ i_{1}\ _{s,2,x}\ k_{1}\right)+m_{1}\ \left(i_{1}\ _{s,2,y}^{2}\ k_{1}^{2}+2\ u_{1}\ _{y}\ i_{1}\ _{s,2,y}\ k_{1}\right)+I_{1}\ \left(A_{1}^{2}\ k_{1}^{2}+2\ A_{2}\ A_{1}\ k_{1}\right)+m_{2}\ \left(i_{2}\ _{s,2,x}^{2}\ k_{2}^{2}+2\ u_{2}\ _{x}\ i_{2}\ _{s,2,x}\ k_{2}\right)+m_{2}\ \left(i_{2}\ _{s,2,y}^{2}\ k_{2}^{2}+2\ u_{2}\ _{y}\ i_{2}\ _{s,2,y}\ k_{2}\right)+I_{2}\ \left(B_{1}^{2}\ k_{2}^{2}+2\ B_{2}\ B_{1}\ k_{2}\right)=0
## end
#471, 261:
m_1*(i_1[s,2,x]^2*k_1^2+2*u_1[x]*i_1[s,2,x]*k_1)+m_1*(i_1[s,2,y]^2*k_1^2+2*u_1[y]*i_1[s,2,y]*k_1)+I_1*(A_1^2*k_1^2+2*A_2*A_1*k_1)+m_2*(i_2[s,2,x]^2*k_2^2+2*u_2[x]*i_2[s,2,x]*k_2)+m_2*(i_2[s,2,y]^2*k_2^2+2*u_2[y]*i_2[s,2,y]*k_2)+I_2*(B_1^2*k_2^2+2*B_2*B_1*k_2)=0
## end
#475, 27:
m_{1}\ k_{1}+m_{2}\ k_{2}=0
## end
#477, 77:
\begin{cases}
k_{2}=-C_{21}\ k_{1}\\ C_{21}=\frac{m_{1}}{m_{2}}
\end{cases}


## end
#479, 483:
m_{1}\ \left(i_{1}\ _{s,2,x}^{2}\ k_{1}+2\ u_{1}\ _{x}\ i_{1}\ _{s,2,x}\right)+m_{1}\ \left(i_{1}\ _{s,2,y}^{2}\ k_{1}+2\ u_{1}\ _{y}\ i_{1}\ _{s,2,y}\right)+I_{1}\ \left(A_{1}^{2}\ k_{1}+2\ A_{2}\ A_{1}\right)+m_{2}\ \left(i_{2}\ _{s,2,x}^{2}\ C_{21}^{2}\ k_{1}-2\ u_{2}\ _{x}\ i_{2}\ _{s,2,x}\ C_{21}\right)+m_{2}\ \left(i_{2}\ _{s,2,y}^{2}\ C_{21}^{2}\ k_{1}-2\ u_{2}\ _{y}\ i_{2}\ _{s,2,y}\ C_{21}\right)+I_{2}\ \left(B_{1}^{2}\ C_{21}^{2}\ k_{1}-2\ B_{2}\ B_{1}\ C_{21}\right)=0
## end
#480, 17:
m_1*k_1+m_2*k_2=0
## end
#483, 41:
\eqs{k_2=-C_21*k_1;
C_21=\frac{m_1}{m_2}}
## end
#486, 261:
m_1*(i_1[s,2,x]^2*k_1+2*u_1[x]*i_1[s,2,x])+m_1*(i_1[s,2,y]^2*k_1+2*u_1[y]*i_1[s,2,y])+I_1*(A_1^2*k_1+2*A_2*A_1)+m_2*(i_2[s,2,x]^2*C_21^2*k_1-2*u_2[x]*i_2[s,2,x]*C_21)+m_2*(i_2[s,2,y]^2*C_21^2*k_1-2*u_2[y]*i_2[s,2,y]*C_21)+I_2*(B_1^2*C_21^2*k_1-2*B_2*B_1*C_21)=0
## end
#490, 443:
\left(m_{1}\ \left(i_{1}\ _{s,2,x}^{2}+i_{1}\ _{s,2,y}^{2}\right)+I_{1}\ A_{1}^{2}\right)\ k_{1}+\left(m_{2}\ \left(i_{2}\ _{s,2,x}^{2}+i_{2}\ _{s,2,y}^{2}\right)+I_{2}\ B_{1}^{2}\right)\ C_{21}^{2}\ k_{1}+2\ \left(m_{1}\ \left(u_{1}\ _{x}\ i_{1}\ _{s,2,x}+u_{1}\ _{y}\ i_{1}\ _{s,2,y}\right)+I_{1}\ A_{2}\ A_{1}\right)-2\ \left(m_{2}\ \left(u_{2}\ _{x}\ i_{2}\ _{s,2,x}+u_{2}\ _{y}\ i_{2}\ _{s,2,y}\right)+I_{2}\ B_{2}\ B_{1}\right)\ C_{21}=0
## end
#492, 438:
k_{1}=2\ \frac{\left(m_{2}\ \left(u_{2}\ _{x}\ i_{2}\ _{s,2,x}+u_{2}\ _{y}\ i_{2}\ _{s,2,y}\right)+I_{2}\ B_{2}\ B_{1}\right)\ C_{21}-\left(m_{1}\ \left(u_{1}\ _{x}\ i_{1}\ _{s,2,x}+u_{1}\ _{y}\ i_{1}\ _{s,2,y}\right)+I_{1}\ A_{2}\ A_{1}\right)}{\left(m_{1}\ \left(i_{1}\ _{s,2,x}^{2}+i_{1}\ _{s,2,y}^{2}\right)+I_{1}\ A_{1}^{2}\right)+\left(m_{2}\ \left(i_{2}\ _{s,2,x}^{2}+i_{2}\ _{s,2,y}^{2}\right)+I_{2}\ B_{1}^{2}\right)\ C_{21}^{2}}
## end
#494, 265:
k_{1}=\frac{2\ \left(m_{2}\ \vec{u_{2}}\cdot \vec{i_{2}\ _{s,2}}+I_{2}\ B_{2}\ B_{1}\right)\ C_{21}-2\ \left(m_{1}\ \vec{u_{1}}\cdot \vec{i_{1}\ _{s,2}}+I_{1}\ A_{2}\ A_{1}\right)}{\left(m_{1}+I_{1}\ A_{1}^{2}\right)+\left(m_{2}+I_{2}\ B_{1}^{2}\right)\ C_{21}^{2}}
## end
#495, 225:
k_1=2*\frac{(m_2*(u_2[x]*i_2[s,2,x]+u_2[y]*i_2[s,2,y])+I_2*B_2*B_1)*C_21-(m_1*(u_1[x]*i_1[s,2,x]+u_1[y]*i_1[s,2,y])+I_1*A_2*A_1)}{(m_1*(i_1[s,2,x]^2+i_1[s,2,y]^2)+I_1*A_1^2)+(m_2*(i_2[s,2,x]^2+i_2[s,2,y]^2)+I_2*B_1^2)*C_21^2}
## end
#498, 225:
(m_1*(i_1[s,2,x]^2+i_1[s,2,y]^2)+I_1*A_1^2)*k_1+(m_2*(i_2[s,2,x]^2+i_2[s,2,y]^2)+I_2*B_1^2)*C_21^2*k_1+2*(m_1*(u_1[x]*i_1[s,2,x]+u_1[y]*i_1[s,2,y])+I_1*A_2*A_1)-2*(m_2*(u_2[x]*i_2[s,2,x]+u_2[y]*i_2[s,2,y])+I_2*B_2*B_1)*C_21=0
## end
#501, 155:
k_1=\frac{2*(m_2*\vec{u_2}\cdot \vec{i_2[s,2]}+I_2*B_2*B_1)*C_21-2*(m_1*\vec{u_1}\cdot \vec{i_1[s,2]}+I_1*A_2*A_1)}{(m_1+I_1*A_1^2)+(m_2+I_2*B_1^2)*C_21^2}
## end
#505, 591:
\begin{cases}
\vec{A}=m_{1}\ r_{1}\ \vec{i_{1}\ _{r,2}}\\ \vec{B}=m_{2}\ r_{2}\ \vec{i_{2}\ _{r,2}}\\ A_{1}=\vec{A}\cdot \vec{i_{1}\ _{s,2}}/I_{1}\\ B_{1}=\vec{B}\cdot \vec{i_{2}\ _{s,2}}/I_{2}\\ A_{2}=\left(A\ _{x}\ u_{1}\ _{x}+A\ _{y}\ u_{1}\ _{y}-C_{\Delta}\right)/I_{1}\\ B_{2}=\left(B\ _{x}\ u_{2}\ _{x}+B\ _{y}\ u_{2}\ _{y}-D_{\Delta}\right)/I_{2}\\ C_{\Delta}=m_{1}\ r_{1}\ u_{1}\ _{x}\ i_{1}\ _{r,2,x}+m_{1}\ r_{1}\ u_{1}\ _{y}\ i_{1}\ _{r,2,y}-I_{1}\ w_{1}\\ D_{\Delta}=m_{2}\ r_{2}\ u_{2}\ _{x}\ i_{2}\ _{r,2,x}+m_{2}\ r_{2}\ u_{2}\ _{y}\ i_{2}\ _{r,2,y}-I_{2}\ w_{2}
\end{cases}


## end
#507, 264:
\begin{cases}
\vec{A}=m_{1}\ r_{1}\ \vec{i_{1}\ _{r,2}}\\ \vec{B}=m_{2}\ r_{2}\ \vec{i_{2}\ _{r,2}}\\ A_{1}=\vec{A}\cdot \vec{i_{1}\ _{s,2}}/I_{1}\\ B_{1}=\vec{B}\cdot \vec{i_{2}\ _{s,2}}/I_{2}\\ A_{2}=w_{1}\\ B_{2}=w_{2}\\ C_{21}=\frac{m_{1}}{m_{2}}
\end{cases}


## end
#508, 370:
\eqs{\vec{A}=m_1*r_1*\vec{i_1[r,2]};
\vec{B}=m_2*r_2*\vec{i_2[r,2]};
A_1=\vec{A}\cdot \vec{i_1[s,2]}/I_1;
B_1=\vec{B}\cdot \vec{i_2[s,2]}/I_2;
A_2=(A[x]*u_1[x]+A[y]*u_1[y]-C_\Delta)/I_1;
B_2=(B[x]*u_2[x]+B[y]*u_2[y]-D_\Delta)/I_2;
C_\Delta=m_1*r_1*u_1[x]*i_1[r,2,x]+m_1*r_1*u_1[y]*i_1[r,2,y]-I_1*w_1;
D_\Delta=m_2*r_2*u_2[x]*i_2[r,2,x]+m_2*r_2*u_2[y]*i_2[r,2,y]-I_2*w_2}
## end
#511, 182:
\eqs{\vec{A}=m_1*r_1*\vec{i_1[r,2]};
\vec{B}=m_2*r_2*\vec{i_2[r,2]};
A_1=\vec{A}\cdot \vec{i_1[s,2]}/I_1;
B_1=\vec{B}\cdot \vec{i_2[s,2]}/I_2;
A_2=w_1;
B_2=w_2;
C_21=\frac{m_1}{m_2}}
## end
#515, 279:
k_{1}=\frac{2\ \left(m_{2}\ \vec{u_{2}}\cdot \vec{i_{2}\ _{s,2}}+I_{2}\ w_{2}\ B_{1}\right)\ m_{1}/m_{2}-2\ \left(m_{1}\ \vec{u_{1}}\cdot \vec{i_{1}\ _{s,2}}+I_{1}\ w_{1}\ A_{1}\right)}{\left(m_{1}+I_{1}\ A_{1}^{2}\right)+\left(m_{2}+I_{2}\ B_{1}^{2}\right)\ m_{1}^{2}/m_{2}^{2}}
## end
#517, 207:
\begin{cases}
\vec{A}=m_{1}\ r_{1}\ \vec{i_{1}\ _{r,2}}\\ \vec{B}=m_{2}\ r_{2}\ \vec{i_{2}\ _{r,2}}\\ A_{1}=\vec{A}\cdot \vec{i_{1}\ _{s,2}}/I_{1}\\ B_{1}=\vec{B}\cdot \vec{i_{2}\ _{s,2}}/I_{2}
\end{cases}


## end
#518, 167:
k_1=\frac{2*(m_2*\vec{u_2}\cdot \vec{i_2[s,2]}+I_2*w_2*B_1)*m_1/m_2-2*(m_1*\vec{u_1}\cdot \vec{i_1[s,2]}+I_1*w_1*A_1)}{(m_1+I_1*A_1^{2})+(m_2+I_2*B_1^{2})*m_1^2/m_2^2}
## end
#521, 142:
\eqs{\vec{A}=m_1*r_1*\vec{i_1[r,2]};
\vec{B}=m_2*r_2*\vec{i_2[r,2]};
A_1=\vec{A}\cdot \vec{i_1[s,2]}/I_1;
B_1=\vec{B}\cdot \vec{i_2[s,2]}/I_2}
## end
#525, 505:
\begin{cases}
k_{1}=\frac{2\ \left(m_{2}\ \vec{u_{2}}\cdot \vec{i_{2}\ _{s,2}}+I_{2}\ w_{2}\ B_{1}\right)\ m_{1}/m_{2}-2\ \left(m_{1}\ \vec{u_{1}}\cdot \vec{i_{1}\ _{s,2}}+I_{1}\ w_{1}\ A_{1}\right)}{\left(m_{1}+I_{1}\ A_{1}^{2}\right)+\left(m_{2}+I_{2}\ B_{1}^{2}\right)\ m_{1}^{2}/m_{2}^{2}}\\ \vec{v_{1}}=\vec{i_{1}\ _{s,2}}\ k_{1}+\vec{u_{1}}\\ \omega_{1}=A_{1}\ k_{1}+w_{1}\\ k_{2}=-m_{1}/m_{2}\ k_{1}\\ \vec{v_{2}}=\vec{i_{2}\ _{s,2}}\ k_{2}+\vec{u_{2}}\\ \omega_{2}=B_{1}\ k_{2}+w_{2}
\end{cases}


## end
#527, 207:
\begin{cases}
\vec{A}=m_{1}\ r_{1}\ \vec{i_{1}\ _{r,2}}\\ \vec{B}=m_{2}\ r_{2}\ \vec{i_{2}\ _{r,2}}\\ A_{1}=\vec{A}\cdot \vec{i_{1}\ _{s,2}}/I_{1}\\ B_{1}=\vec{B}\cdot \vec{i_{2}\ _{s,2}}/I_{2}
\end{cases}


## end
#528, 315:
\eqs{k_1=\frac{2*(m_2*\vec{u_2}\cdot \vec{i_2[s,2]}+I_2*w_2*B_1)*m_1/m_2-2*(m_1*\vec{u_1}\cdot \vec{i_1[s,2]}+I_1*w_1*A_1)}{(m_1+I_1*A_1^{2})+(m_2+I_2*B_1^{2})*m_1^2/m_2^2};
\vec{v_1}=\vec{i_1[s,2]}*k_1+\vec{u_1};
\omega_1=A_1*k_1+w_1;
k_2=-m_1/m_2*k_1;
\vec{v_2}=\vec{i_2[s,2]}*k_2+\vec{u_2};
\omega_2=B_1*k_2+w_2}
## end
#531, 142:
\eqs{\vec{A}=m_1*r_1*\vec{i_1[r,2]};
\vec{B}=m_2*r_2*\vec{i_2[r,2]};
A_1=\vec{A}\cdot \vec{i_1[s,2]}/I_1;
B_1=\vec{B}\cdot \vec{i_2[s,2]}/I_2}
## end
#535, 2408:
%{
有什么
Nini, 打开公式分析器(文件)
Nini, 打开花园(文件)
+[M函数](,验证公式)

守恒检测:...
刚体运动:...
刚体碰撞:...
+[新建阅读窗口](,守恒检测)

保存:...
%}

addpath('Matlab\draw');
addpath('Matlab\Physics');

physics_constant;

t=linspace(0,10,100);

w_1=1;
m_1=1;
w_1=1;
u_1=[1,1];

w_2=1;
m_2=1;
w_2=2;
u_2=[0,-1];

%{
+[M函数](,验证公式)
%}

xs_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];

xs_2=[1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463];
ys_2=[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741];

% object prepare
pt_c_1=[mean(xs_1),mean(ys_1)];
pt_c_2=[mean(xs_2),mean(ys_2)];
r=sqrt((xs_1-pt_c_1(1)).^2+(ys_1-pt_c_1(2)).^2);
I_1=m_1*sum(r.^2);
r=sqrt((xs_2-pt_c_2(1)).^2+(ys_2-pt_c_2(2)).^2);
I_2=m_2*sum(r.^2);

xs_0_1=xs_1-pt_c_1(1);
ys_0_1=ys_1-pt_c_1(2);
xs_0_2=xs_2-pt_c_2(1);
ys_0_2=ys_2-pt_c_2(2);

dt=t(2)-t(1);


% Collision point
xs_bd_1=[xs_1,xs_1(1)];
ys_bd_1=[ys_1,ys_1(1)];
xs_bd_2=[xs_2,xs_2(1)];
ys_bd_2=[ys_2,ys_2(1)];
[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xs_bd_1,ys_bd_1,xs_bd_2,ys_bd_2);

if std(L1_i)<std(L2_i)
i_s1=[diff(xs_bd_1(L1_i(1):L1_i(1)+1)),diff(ys_bd_1(L1_i(1):L1_i(1)+1))];
else
i_s1=[diff(xs_bd_2(L2_i(1):L2_i(1)+1)),diff(ys_bd_2(L2_i(1):L2_i(1)+1))];
end
i_s1=i_s1/norm(i_s1);
i_s2=[-i_s1(2),i_s1(1)];

pt_col=[xs0(1),ys0(1)];
r_1=pt_col-pt_c_1;
r_2=pt_col-pt_c_2;

i_1r=[-r_1(2),r_1(1)];
i_2r=[-r_2(2),r_2(1)];
i_1r=i_1r/norm(i_1r);
i_2r=i_2r/norm(i_2r);
r_1=norm(r_1);
r_2=norm(r_2);

[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_s2,i_s2);

clf
h_1=patch(xs_1,ys_1,[1,1,1]);
h_2=patch(xs_2,ys_2,[1,1,1]);
hold on
plot(xs0,ys0,'r*',pt_col(1),pt_col(2),'ro',xs_bd_1(L1_i(1):L1_i(1)+1),ys_bd_1(L1_i(1):L1_i(1)+1))
axis equal
axis([-20,20,-10,10])


for i=1:length(t)
%an_1=w_1*t(i);
%pt_c_1=pt_c_1+u_1*dt;
an_1=omega_1*t(i);
pt_c_1=pt_c_1+v_1*dt;

xs_1=xs_0_1*cos(an_1)-ys_0_1*sin(an_1)+pt_c_1(1);
ys_1=ys_0_1*cos(an_1)+xs_0_1*sin(an_1)+pt_c_1(2);
h_1.XData=xs_1;
h_1.YData=ys_1;

%an_2=w_2*t(i);
%pt_c_2=pt_c_2+u_2*dt;
an_2=omega_2*t(i);
pt_c_2=pt_c_2+v_2*dt;

xs_2=xs_0_2*cos(an_2)-ys_0_2*sin(an_2)+pt_c_2(1);
ys_2=ys_0_2*cos(an_2)+xs_0_2*sin(an_2)+pt_c_2(2);
h_2.XData=xs_2;
h_2.YData=ys_2;


pause(0.01)
end


%{
clf
omega_2
v_2
+[M函数](,验证公式)
%}
## end
#538, 1081:
%{
Nini, 打开公式分析器(文件)
+[M函数](,守恒检测)

rigid_bodies_collision(M函数):...
%}

addpath('Matlab\Physics')
physics_constant;

m_1=1;
m_2=2;
r_1=1;
r_2=1;
I_1=1;
I_2=10;

w_1=1;
w_2=1;

u_1=[1,0];
u_2=[-1,0];

an_1r=20;
i_1r=[cosd(an_1r),sind(an_1r)];
i_2r=[cosd(an_1r),sind(an_1r)];
an_1s=100;
i_1s=[cosd(an_1s),sind(an_1s)];
i_2s=[cosd(an_1s),sind(an_1s)];

[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_1s,i_2s);

E_1=1./2.*m_1.*sum(v_1.^(2))+1./2.*I_1.*omega_1.^(2)+1./2.*m_2.*sum(v_2.^(2))+1./2.*I_2.*omega_2.^(2);
P_1=m_1.*v_1+m_2.*v_2;
L_1=I_1.*omega_1+I_2.*omega_2-m_1.*r_1.*sum(v_1.*i_1r)-m_2.*r_2.*sum(v_2.*i_2r);


E_0=1./2.*m_1.*sum(u_1.^(2))+1./2.*I_1.*w_1.^(2)+1./2.*m_2.*sum(u_2.^(2))+1./2.*I_2.*w_2.^(2);
P_0=m_1.*u_1+m_2.*u_2;
L_0=I_1.*w_1+I_2.*w_2-m_1.*r_1.*sum(u_1.*i_1r)-m_2.*r_2.*sum(u_2.*i_2r);

disp(sprintf('k_1=%.3f, k_2=%.3f',k_1,k_2))
disp(sprintf('E_0=%.3f, E_1=%.3f',E_0,E_1))
disp(sprintf('P_0=(%.3f,%.3f), P_1=(%.3f,%.3f)',P_0,P_1))
disp(sprintf('L_0=%.3f, L_1=%.3f',L_0,L_1))

%{
+[M函数](,验证公式)
%}
## end
#540, 171:


有物体A和物体B
物体A和物体B都是长方形"2,1"
物体A是长方形"0.2,3"
物体B是长方形"1,1"

物体A在(1,1)
物体A朝向"40"
物体B在标记点"1"
物体B朝向"-70"

在屏幕"1", 添加标记点


代码:...
+[召唤星辰]"生成运动动画"(碰撞场景,代码)


+[显示PPT场景]"1"(,碰撞场景)
## end
#541, 3:
多边形
## end
#543, 3:
多边形
## end
#545, 20:
-1.5, 1.5, 1.5, -1.5
## end
#547, 18:
0.0, 0.0, 0.2, 0.2
## end
#549, 3:
1,1
## end
#551, 3:
0.2
## end
#553, 3:
3.0
## end
#555, 3:
多边形
## end
#556, 3:
长方形
## end
#558, 20:
-0.5, 0.5, 0.5, -0.5
## end
#560, 18:
0.0, 0.0, 1.0, 1.0
## end
#562, 37:
2.091227627121632, 1.2690037118051203
## end
#564, 3:
1.0
## end
#566, 3:
1.0
## end
#568, 3:
多边形
## end
#569, 3:
长方形
## end
#571, 2:
40
## end
#573, 3:
-70
## end
#576, 870:
%{
+[M函数](,代码)
%}

addpath('Matlab\space')
addpath('Matlab\draw')
dt=0.1;



clf
hold on
axis equal
xs_bg_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_bg_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];
patch([1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048],[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225],[1,1,1]);
xs_bg_2=[1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463];
ys_bg_2=[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741];
patch([1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463],[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741],[1,1,1]);


for i=1:50








pause(0.03)
end




## end
#578, 803:
%{
Nini, 打开公式分析器(文件)
Nini, 打开花园(文件)
+[M函数](,验证公式)

守恒检测:...
%}

physics_constant;

t=linspace(0,10,100);
w_1=1;
v_1=[1,1];

xs_bg_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_bg_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];

pt_c_1=[mean(xs_bg_1),mean(ys_bg_1)];
xs_0_1=xs_bg_1-pt_c_1(1);
ys_0_1=ys_bg_1-pt_c_1(2);

m_1=1;
r_1=sqrt((xs_bg_1-pt_c_1(1)).^2+(ys_bg_1-pt_c_1(2)).^2);
I_1=m_1*sum(r_1.^2);
dt=t(2)-t(1);

h_1=patch(xs_bg_1,ys_bg_1,[1,1,1]);
axis equal

for i=1:length(t)
an_1=w_1*t(i);
pt_c_1=pt_c_1+v_1*dt;

xs_1=xs_0_1*cos(an_1)-ys_0_1*sin(an_1)+pt_c_1(1);
ys_1=ys_0_1*cos(an_1)+xs_0_1*sin(an_1)+pt_c_1(2);

h_1.XData=xs_1;
h_1.YData=ys_1;
pause(0.01)
end



%{
clf
axis([-20,20,-10,10])
+[M函数](,验证公式)
%}
## end
#580, 832:
%{
地址::Matlab\Physics\rigid_bodies_collision.m

测试(M函数):...
+[保存M函数](,rigid_bodies_collision)
%}

function [v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_1s,i_2s)

%{
m_1=1;
m_2=2;
r_1=1;
r_2=1;
I_1=1;
I_2=10;

w_1=1;
w_2=1;

u_1=[1,0];
u_2=[0,0];

an_1r=20;
i_1r=[cosd(an_1r),sind(an_1r)];
i_2r=[cosd(an_1r),sind(an_1r)];
an_1s=100;
i_1s=[cosd(an_1s),sind(an_1s)];
i_2s=[cosd(an_1s),sind(an_1s)];
%}

A=m_1.*r_1.*i_1r;
B=m_2.*r_2.*i_2r;
A_1=sum(A.*i_1s./I_1);
B_1=sum(B.*i_2s./I_2);

k_1=(2.*(m_2.*sum(u_2.*i_2s)+I_2.*w_2.*B_1).*m_1./m_2-2.*(m_1.*sum(u_1.*i_1s)+I_1.*w_1.*A_1))./((m_1+I_1.*A_1.^(2))+(m_2+I_2.*B_1.^(2)).*m_1.^(2)./m_2.^(2));
v_1=i_1s.*k_1+u_1;
omega_1=A_1.*k_1+w_1;
k_2=-m_1./m_2.*k_1;
v_2=i_2s.*k_2+u_2;
omega_2=B_1.*k_2+w_2;

end

%{
+[M函数](,验证公式)
%}
## end
#583, 1278:
%{
Nini, 打开公式分析器(文件)
+[M函数](,验证公式)

rigid_bodies_collision(M函数):...
%}

physics_constant;
m_1=1;
m_2=2;
r_1=1;
r_2=1;
I_1=1;
I_2=10;

w_1=1;
w_2=1;

u_1=[1,0];
u_2=[0,0];

an_1r=20;
i_1r=[cosd(an_1r),sind(an_1r)];
i_2r=[cosd(an_1r),sind(an_1r)];
an_1s=100;
i_1s=[cosd(an_1s),sind(an_1s)];
i_2s=[cosd(an_1s),sind(an_1s)];

A=m_1.*r_1.*i_1r;
B=m_2.*r_2.*i_2r;
A_1=sum(A.*i_1s./I_1);
B_1=sum(B.*i_2s./I_2);

k_1=(2.*(m_2.*sum(u_2.*i_2s)+I_2.*w_2.*B_1).*m_1./m_2-2.*(m_1.*sum(u_1.*i_1s)+I_1.*w_1.*A_1))./((m_1+I_1.*A_1.^(2))+(m_2+I_2.*B_1.^(2)).*m_1.^(2)./m_2.^(2));
v_1=i_1s.*k_1+u_1;
omega_1=A_1.*k_1+w_1;
k_2=-m_1./m_2.*k_1;
v_2=i_2s.*k_2+u_2;
omega_2=B_1.*k_2+w_2;


E_1=1./2.*m_1.*sum(v_1.^(2))+1./2.*I_1.*omega_1.^(2)+1./2.*m_2.*sum(v_2.^(2))+1./2.*I_2.*omega_2.^(2);
P_1=m_1.*v_1+m_2.*v_2;
L_1=I_1.*omega_1+I_2.*omega_2-m_1.*r_1.*sum(v_1.*i_1r)-m_2.*r_2.*sum(v_2.*i_2r);


E_0=1./2.*m_1.*sum(u_1.^(2))+1./2.*I_1.*w_1.^(2)+1./2.*m_2.*sum(u_2.^(2))+1./2.*I_2.*w_2.^(2);
P_0=m_1.*u_1+m_2.*u_2;
L_0=I_1.*w_1+I_2.*w_2-m_1.*r_1.*sum(u_1.*i_1r)-m_2.*r_2.*sum(u_2.*i_2r);

disp(sprintf('k_1=%.3f, k_2=%.3f',k_1,k_2))
disp(sprintf('E_0=%.3f, E_1=%.3f',E_0,E_1))
disp(sprintf('P_0=(%.3f,%.3f), P_1=(%.3f,%.3f)',P_0,P_1))
disp(sprintf('L_0=%.3f, L_1=%.3f',L_0,L_1))

%{
+[M函数](,验证公式)
%}
## end
#586, 39:
Matlab\Physics\rigid_bodies_collision.m
## end
#592, 1784:
%{
有什么
Nini, 打开公式分析器(文件)
Nini, 打开花园(文件)
+[M函数](,验证公式)

守恒检测:...
刚体运动:...
+[新建阅读窗口](,守恒检测)
%}

addpath('Matlab\draw');
addpath('Matlab\Physics');

physics_constant;

t=linspace(0,10,100);

w_1=1;
m_1=1;
w_1=1;
u_1=[1,1];

w_2=1;
m_2=1;
w_2=-1;
u_2=[-1,-1];

xs_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];

xs_2=[1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463];
ys_2=[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741];


pt_c_1=[mean(xs_bg_1),mean(ys_bg_1)];
pt_c_2=[mean(xs_bg_2),mean(ys_bg_2)];
r=sqrt((xs_bg_1-pt_c_1(1)).^2+(ys_bg_1-pt_c_1(2)).^2);
I_1=m_1*sum(r.^2);
r=sqrt((xs_bg_2-pt_c_2(1)).^2+(ys_bg_2-pt_c_2(2)).^2);
I_2=m_2*sum(r.^2);


% Collision point
xs_bd_1=[xs_1,xs_1(1)];
ys_bd_1=[ys_1,ys_1(1)];
xs_bd_2=[xs_2,xs_2(1)];
ys_bd_2=[ys_2,ys_2(1)];
[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xs_bd_1,ys_bd_1,xs_bd_2,ys_bd_2);

if std(L1_i)<std(L2_i)
i_s1=[diff(xs_bd_1(L1_i(1):L1_i(1)+1)),diff(ys_bd_1(L1_i(1):L1_i(1)+1))];
else
i_s1=[diff(xs_bd_2(L2_i(1):L2_i(1)+1)),diff(ys_bd_2(L2_i(1):L2_i(1)+1))];
end
i_s1=i_s1/norm(i_s1);
i_s2=[-i_s1(2),i_s1(1)];

pt_col=[xs0(1),ys0(1)];
r_1=pt_col-pt_c_1;
r_2=pt_col-pt_c_2;

i_1r=[-r_1(2),r_1(1)];
i_2r=[-r_2(2),r_2(1)];
i_1r=i_1r/norm(i_1r);
i_2r=i_2r/norm(i_2r);
r_1=norm(r_1);
r_2=norm(r_2);

[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_s2,i_s2);

clf
patch(xs_1,ys_1,[1,1,1])
patch(xs_2,ys_2,[1,1,1])
hold on
plot(xs0,ys0,'r*',pt_col(1),pt_col(2),'ro',xs_bd_1(L1_i(1):L1_i(1)+1),ys_bd_1(L1_i(1):L1_i(1)+1))
axis equal

%{
clf
axis([-20,20,-10,10])
+[M函数](,验证公式)
%}
## end
#594, 1719:
%{
有什么
Nini, 打开公式分析器(文件)
Nini, 打开花园(文件)
+[M函数](,刚体碰撞)

rigid_bodies_collision_2(M函数):...
+[新建阅读窗口](,rigid_bodies_collision_2)
%}

addpath('Matlab\draw');
addpath('Matlab\Physics');

physics_constant;

t=linspace(0,10,100);

w_1=1;
m_1=1;
w_1=1;
u_1=[1,1];

w_2=1;
m_2=1;
w_2=2;
u_2=[0,-1];

%{
+[M函数](,验证公式)
%}

xs_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];

xs_2=[1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463];
ys_2=[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741];

% object prepare
pt_c_1=[mean(xs_1),mean(ys_1)];
pt_c_2=[mean(xs_2),mean(ys_2)];
r=sqrt((xs_1-pt_c_1(1)).^2+(ys_1-pt_c_1(2)).^2);
I_1=m_1*sum(r.^2);
r=sqrt((xs_2-pt_c_2(1)).^2+(ys_2-pt_c_2(2)).^2);
I_2=m_2*sum(r.^2);

xs_0_1=xs_1-pt_c_1(1);
ys_0_1=ys_1-pt_c_1(2);
xs_0_2=xs_2-pt_c_2(1);
ys_0_2=ys_2-pt_c_2(2);

dt=t(2)-t(1);


% Collision point
[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision_2(u_1,w_1,u_2,w_2,m_1,xs_1,ys_1,m_2,xs_2,ys_2);

clf
h_1=patch(xs_1,ys_1,[1,1,1]);
h_2=patch(xs_2,ys_2,[1,1,1]);
axis equal
axis([-20,20,-10,10])


for i=1:length(t)
%an_1=w_1*t(i);
%pt_c_1=pt_c_1+u_1*dt;
an_1=omega_1*t(i);
pt_c_1=pt_c_1+v_1*dt;

xs_1=xs_0_1*cos(an_1)-ys_0_1*sin(an_1)+pt_c_1(1);
ys_1=ys_0_1*cos(an_1)+xs_0_1*sin(an_1)+pt_c_1(2);
h_1.XData=xs_1;
h_1.YData=ys_1;

%an_2=w_2*t(i);
%pt_c_2=pt_c_2+u_2*dt;
an_2=omega_2*t(i);
pt_c_2=pt_c_2+v_2*dt;

xs_2=xs_0_2*cos(an_2)-ys_0_2*sin(an_2)+pt_c_2(1);
ys_2=ys_0_2*cos(an_2)+xs_0_2*sin(an_2)+pt_c_2(2);
h_2.XData=xs_2;
h_2.YData=ys_2;


pause(0.01)
end


%{
clf
omega_2
v_2
+[M函数](,刚体碰撞)
%}
## end
#596, 1203:
%{
地址::Matlab\Physics\rigid_bodies_collision_2.m
+[保存M函数](,rigid_bodies_collision_2)

测试:...
+[M函数](,测试)
%}

function [v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision_2(u_1,w_1,u_2,w_2,m_1,xs_1,ys_1,m_2,xs_2,ys_2)

addpath('Matlab\draw');
% addpath('Matlab\Physics');


pt_c_1=[mean(xs_1),mean(ys_1)];
pt_c_2=[mean(xs_2),mean(ys_2)];
r=sqrt((xs_1-pt_c_1(1)).^2+(ys_1-pt_c_1(2)).^2);
I_1=m_1*sum(r.^2);
r=sqrt((xs_2-pt_c_2(1)).^2+(ys_2-pt_c_2(2)).^2);
I_2=m_2*sum(r.^2);

xs_bd_1=[xs_1,xs_1(1)];
ys_bd_1=[ys_1,ys_1(1)];
xs_bd_2=[xs_2,xs_2(1)];
ys_bd_2=[ys_2,ys_2(1)];
[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xs_bd_1,ys_bd_1,xs_bd_2,ys_bd_2);

if std(L1_i)<std(L2_i)
    i_s1=[diff(xs_bd_1(L1_i(1):L1_i(1)+1)),diff(ys_bd_1(L1_i(1):L1_i(1)+1))];
else
    i_s1=[diff(xs_bd_2(L2_i(1):L2_i(1)+1)),diff(ys_bd_2(L2_i(1):L2_i(1)+1))];
end
i_s1=i_s1/norm(i_s1);
i_s2=[-i_s1(2),i_s1(1)];

pt_col=[xs0(1),ys0(1)];
r_1=pt_col-pt_c_1;
r_2=pt_col-pt_c_2;

i_1r=[-r_1(2),r_1(1)];
i_2r=[-r_2(2),r_2(1)];
i_1r=i_1r/norm(i_1r);
i_2r=i_2r/norm(i_2r);
r_1=norm(r_1);
r_2=norm(r_2);

[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_s2,i_s2);



end



## end
#599, 41:
Matlab\Physics\rigid_bodies_collision_2.m
## end
#601, 2427:
%{
有什么
Nini, 打开公式分析器(文件)
Nini, 打开花园(文件)
+[M函数](,刚体碰撞)

rigid_bodies_collision_2(M函数):...
+[新建阅读窗口](,rigid_bodies_collision_2)
%}

addpath('Matlab\draw');
addpath('Matlab\Physics');

physics_constant;

t=linspace(0,10,100);

w_1=1;
m_1=1;
w_1=1;
u_1=[1,1];

w_2=1;
m_2=1;
w_2=2;
u_2=[0,-1];

%{
+[M函数](,验证公式)
%}

xs_1=[1.9641814145298089, 0.03581858547019112, 0.1890274740939868, 2.1173903031536048];
ys_1=[-0.14906666467846708, 2.1490666646784673, 2.2776241866157747, -0.020509142741159225];

xs_2=[1.6213813167286777, 2.5610739375145863, 2.9030940808402548, 1.9634014600543463];
ys_2=[1.0979936401422858, 1.4400137834679547, 0.5003211626820462, 0.15830101935637741];

% object prepare
pt_c_1=[mean(xs_1),mean(ys_1)];
pt_c_2=[mean(xs_2),mean(ys_2)];
r=sqrt((xs_1-pt_c_1(1)).^2+(ys_1-pt_c_1(2)).^2);
I_1=m_1*sum(r.^2);
r=sqrt((xs_2-pt_c_2(1)).^2+(ys_2-pt_c_2(2)).^2);
I_2=m_2*sum(r.^2);

xs_0_1=xs_1-pt_c_1(1);
ys_0_1=ys_1-pt_c_1(2);
xs_0_2=xs_2-pt_c_2(1);
ys_0_2=ys_2-pt_c_2(2);

dt=t(2)-t(1);


% Collision point
xs_bd_1=[xs_1,xs_1(1)];
ys_bd_1=[ys_1,ys_1(1)];
xs_bd_2=[xs_2,xs_2(1)];
ys_bd_2=[ys_2,ys_2(1)];
[xs0,ys0,L1_i,L2_i]=intersection_curve_curve(xs_bd_1,ys_bd_1,xs_bd_2,ys_bd_2);

if std(L1_i)<std(L2_i)
i_s1=[diff(xs_bd_1(L1_i(1):L1_i(1)+1)),diff(ys_bd_1(L1_i(1):L1_i(1)+1))];
else
i_s1=[diff(xs_bd_2(L2_i(1):L2_i(1)+1)),diff(ys_bd_2(L2_i(1):L2_i(1)+1))];
end
i_s1=i_s1/norm(i_s1);
i_s2=[-i_s1(2),i_s1(1)];

pt_col=[xs0(1),ys0(1)];
r_1=pt_col-pt_c_1;
r_2=pt_col-pt_c_2;

i_1r=[-r_1(2),r_1(1)];
i_2r=[-r_2(2),r_2(1)];
i_1r=i_1r/norm(i_1r);
i_2r=i_2r/norm(i_2r);
r_1=norm(r_1);
r_2=norm(r_2);

[v_1,omega_1,v_2,omega_2,k_1,k_2]=rigid_bodies_collision(u_1,w_1,u_2,w_2,m_1,I_1,r_1,m_2,I_2,r_2,i_1r,i_2r,i_s2,i_s2);

clf
h_1=patch(xs_1,ys_1,[1,1,1]);
h_2=patch(xs_2,ys_2,[1,1,1]);
hold on
plot(xs0,ys0,'r*',pt_col(1),pt_col(2),'ro',xs_bd_1(L1_i(1):L1_i(1)+1),ys_bd_1(L1_i(1):L1_i(1)+1))
axis equal
axis([-20,20,-10,10])


for i=1:length(t)
%an_1=w_1*t(i);
%pt_c_1=pt_c_1+u_1*dt;
an_1=omega_1*t(i);
pt_c_1=pt_c_1+v_1*dt;

xs_1=xs_0_1*cos(an_1)-ys_0_1*sin(an_1)+pt_c_1(1);
ys_1=ys_0_1*cos(an_1)+xs_0_1*sin(an_1)+pt_c_1(2);
h_1.XData=xs_1;
h_1.YData=ys_1;

%an_2=w_2*t(i);
%pt_c_2=pt_c_2+u_2*dt;
an_2=omega_2*t(i);
pt_c_2=pt_c_2+v_2*dt;

xs_2=xs_0_2*cos(an_2)-ys_0_2*sin(an_2)+pt_c_2(1);
ys_2=ys_0_2*cos(an_2)+xs_0_2*sin(an_2)+pt_c_2(2);
h_2.XData=xs_2;
h_2.YData=ys_2;


pause(0.01)
end


%{
clf
omega_2
v_2
+[M函数](,验证公式)
%}
## end
### 结束